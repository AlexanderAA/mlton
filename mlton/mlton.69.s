/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:14 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl eliminate_0
.hidden eliminate_0
eliminate_0:
L_204369:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_204438
L_204370:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463517
L_204371:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r14
	je L_463516
L_204372:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_204373:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x58(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x30(%r13),%r10
	movq %r10,0x70(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x36E9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movq %r15,0x88(%rbp)
	movl %r15d,%r13d
	movl %r13d,0x64(%rbp)
	movslq %r13d,%r10
	movq %r10,0x90(%rbp)
	cmpq %r15,%r10
	jne L_463515
L_204375:
	movq $0x4371,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x359D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq %r11,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_204376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_463515:
L_204374:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463516:
L_204437:
	movq $0x1,%r15
L_204403:
	movq $0x763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463517:
L_204438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_204439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204439
.p2align 0x4
.long 0x460
L_204439:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_204371
.p2align 0x4
.long 0x2E5C
L_204376:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_463520
L_204377:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_204378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204378
.p2align 0x4
.long 0x2E5D
L_204378:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2137:
	cmpq 0x90(%rbp),%r15
	jnl L_463519
L_204435:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2137
.p2align 0x4
L_463519:
L_204379:
	movq %r14,0xC0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xA8,%rbp
	leaq (L_204380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_10
.p2align 0x4
L_463520:
L_204436:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2E5E
L_204380:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204381
L_204433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_204434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204434
.p2align 0x4
.long 0x2E67
L_204434:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_204381:
	movq $0x359B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_204382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2E5F
L_204382:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204383
L_204431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_204432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204432
.p2align 0x4
.long 0x2E66
L_204432:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_204383:
	movl $0x0,0x80(%rbp)
loop_2138:
	movl 0x80(%rbp),%r15d
	cmpl %r15d,0x64(%rbp)
	je L_463523
L_204384:
	movslq %r15d,%r14
	cmpq 0x88(%rbp),%r14
	jnb L_463522
L_204386:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_204387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_463522:
L_204385:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463523:
L_204398:
	movq $0x3589,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_204399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2E5F
L_204387:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204388
L_204428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_204429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204429
.p2align 0x4
.long 0x2E65
L_204429:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_204388:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_204390
L_204424:
	shrq $0x1,%r15
	movl %r15d,%r14d
	testl %r14d,%r14d
	jz L_463526
L_204426:
	movl 0x80(%rbp),%r15d
	incl %r15d
	jo L_463525
L_204427:
	movl %r15d,0x80(%rbp)
	jmp loop_2138
.p2align 0x4
L_463525:
L_204417:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463526:
L_204390:
	movq 0x90(%rbp),%r15
	testq %r15,%r15
	jz L_463529
L_204391:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204392
L_204421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_204422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204422
.p2align 0x4
.long 0x2E60
L_204422:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_204392:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1535,%rcx
	movq 0x90(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_204393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204393
.p2align 0x4
.long 0x2E60
L_204393:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x30(%rbp)
L_204394:
	movl $0x0,0x64(%rbp)
	movq $0x0,0x80(%rbp)
loop_2139:
	movq 0x90(%rbp),%r15
	cmpq %r15,0x80(%rbp)
	jl L_463527
L_204395:
	movq 0x30(%rbp),%r15
	movq $0xA01,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA03,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3E73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movl 0x64(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_204396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
L_463527:
L_204408:
	movq 0x80(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x88(%rbp)
	movq 0x10(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_204409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_463529:
L_204423:
	movq (globalObjptr+0x1EE0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_204394
.p2align 0x4
.long 0x4EE
L_204399:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204400
L_204404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_204405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204405
.p2align 0x4
.long 0x4EC
L_204405:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_204400:
	movq $0x210F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_204403
L_204401:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_204373
.p2align 0x4
.long 0x2E61
L_204396:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204397
L_204406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_204407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204407
.p2align 0x4
.long 0x2E62
L_204407:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_204397:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2957,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x725,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	jmp L_204398
.p2align 0x4
.long 0x2E63
L_204409:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204410
L_204419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_204420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204420
.p2align 0x4
.long 0x2E64
L_204420:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_204410:
	movq 0x98(%rbp),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_204412
L_204414:
	shrq $0x1,%r14
	movl %r14d,%r13d
	testl %r13d,%r13d
	jz L_463536
L_204416:
	movl 0x64(%rbp),%ecx
	incl %ecx
	jo L_204417
L_204418:
	movq 0x88(%rbp),%r15
L_204413:
	movl %ecx,0x64(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x80(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x80(%rbp)
	jmp loop_2139
.p2align 0x4
L_463536:
L_204412:
	movl 0x64(%rbp),%ecx
	movq $0x1,%r15
	jmp L_204413
.text
.p2align 0x4
.globl orderFunctions_0
.hidden orderFunctions_0
orderFunctions_0:
L_204440:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_204559
L_204441:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463552
L_204442:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movq $0x2FF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_463551
L_204443:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_204444:
	incl %ecx
	jo L_463550
L_204446:
	cmpq $0x1,%r15
	je L_463539
L_204447:
	movq 0x8(%r15),%r15
	jmp L_204444
.p2align 0x4
L_463539:
L_204448:
L_204449:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_463549
L_204450:
	cmpq $0x7FFFFFFF,%rdx
	ja L_204537
L_204451:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1537,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_204452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204452
.p2align 0x4
.long 0x125F
L_204452:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_204453:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2140:
	cmpq 0x48(%rbp),%r15
	jnl L_463541
L_204553:
	cmpq $0x1,%r14
	je L_463540
L_204554:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x50(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2140
.p2align 0x4
L_463540:
L_204555:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463541:
L_204454:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204455
L_204551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_204552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204552
.p2align 0x4
.long 0x2E7C
L_204552:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_204455:
	movq 0x50(%rbp),%r15
	movq $0xC85,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	movq %r13,0x58(%rbp)
	cmpq %r13,%r14
	jne L_463546
L_204458:
	movq $0x436F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x68(%rbp)
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	cmpl $0x0,%r15d
	jl L_463545
L_204459:
	movl $0x0,0x4C(%rbp)
loop_2141:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x4C(%rbp)
	jl L_463544
L_204460:
	movq 0x58(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_463543
L_204461:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_204462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204462
.p2align 0x4
.long 0x2E68
L_204462:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2142:
	cmpq 0x58(%rbp),%r15
	jnl L_463542
L_204541:
	movq 0x70(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2142
.p2align 0x4
L_463542:
L_204463:
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_204464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_463543:
L_204537:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463544:
L_204543:
	movslq 0x4C(%rbp),%r15
	salq $0x4,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x20(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_204544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_463545:
L_204550:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463546:
L_204457:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463549:
L_204557:
	movq (globalObjptr+0x1EE8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_204453
.p2align 0x4
L_463550:
L_204445:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463551:
L_204558:
	xorl %ecx,%ecx
	jmp L_204449
.p2align 0x4
L_463552:
L_204559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_204560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204560
.p2align 0x4
.long 0x460
L_204560:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_204442
.p2align 0x4
.long 0x2E69
L_204464:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204465
L_204539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_204540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204540
.p2align 0x4
.long 0x2E7A
L_204540:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_204465:
	movslq 0x4C(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnb L_204467
L_204468:
	movq 0x70(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_463556
L_204469:
	movl $0x1,0x0(%r14,%r15,4)
	cmpq 0x40(%rbp),%r15
	jnb L_463555
L_204471:
	salq $0x4,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x80(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x4C(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x88(%rbp)
	movq $0x30D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x36EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%r13),%r15
	movq %r15,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xA8(%rbp)
	cmpq %r11,%r14
	jne L_204457
L_204473:
	movq $0x4371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xC0(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq $0x359D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_204474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_463555:
L_204467:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463556:
L_204503:
	movl $0x0,0x40(%rbp)
loop_2145:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_463560
L_204504:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463559
L_204505:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_204506:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463558
.p2align 0x4,,0x7
L_204507:
	movq $0x210F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_463557
L_204508:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_204506
.p2align 0x4
L_463557:
L_204510:
	movq $0x763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463558:
L_204511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_204512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204512
.p2align 0x4
.long 0x4B6
L_204512:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_204507
.p2align 0x4
L_463559:
L_204513:
	movq $0x1,%r15
	jmp L_204510
.p2align 0x4
L_463560:
L_204514:
	movslq 0x40(%rbp),%r15
	salq $0x4,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x20(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x78(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_204515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x2E69
L_204544:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204545
L_204548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_204549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204549
.p2align 0x4
.long 0x2E7B
L_204549:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_204545:
	movq 0x78(%rbp),%r15
	andq $0x1,%r15
	jnz L_463563
L_204546:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	incl %r14d
	movl %r14d,0x4C(%rbp)
	jmp loop_2141
.p2align 0x4
L_463563:
L_204547:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2E6A
L_204474:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xA8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_204537
L_204475:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_204476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204476
.p2align 0x4
.long 0x2E6B
L_204476:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2143:
	cmpq 0xA8(%rbp),%r15
	jnl L_463565
L_204535:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2143
.p2align 0x4
L_463565:
L_204477:
	movq %r14,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xC8,%rbp
	leaq (L_204478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_10
.p2align 0x4
.long 0x2E73
L_204515:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204516
L_204517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_204518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204518
.p2align 0x4
.long 0x2E74
L_204518:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_204516:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x40(%rbp)
	jmp loop_2145
.p2align 0x4
.long 0x2E6C
L_204478:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204479
L_204533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_204534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204534
.p2align 0x4
.long 0x2E79
L_204534:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_204479:
	movq $0x359B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_204480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2E6D
L_204480:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204481
L_204531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_204532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204532
.p2align 0x4
.long 0x2E77
L_204532:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_204481:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_463572
L_204482:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_204483:
	incl %ecx
	movl %ecx,0x90(%rbp)
	jo L_204445
L_204484:
	cmpq $0x1,%r15
	je L_463569
L_204485:
	movq 0x8(%r15),%r15
	jmp L_204483
.p2align 0x4
L_463569:
L_204486:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204487
L_204528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_204529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204529
.p2align 0x4
.long 0x2E78
L_204529:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_204487:
	movl 0x90(%rbp),%ecx
L_204488:
	movl %ecx,0xC8(%rbp)
	movq $0x3E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_204489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
L_463572:
L_204530:
	xorl %ecx,%ecx
	jmp L_204488
.p2align 0x4
.long 0x2E6E
L_204489:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204490
L_204526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_204527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204527
.p2align 0x4
.long 0x2E77
L_204527:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_204490:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_204457
L_204492:
	movl %r13d,%r14d
	decl %r14d
	jo L_204445
L_204493:
	movl %r13d,0xC8(%rbp)
	movq $0x3E75,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_204494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
.long 0x2E6E
L_204494:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204495
L_204524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_204525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204525
.p2align 0x4
.long 0x2E77
L_204525:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_204495:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2957,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x725,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x210F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x36E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	addq $0x30,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x359D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_204496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2E6F
L_204496:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0xA8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_204497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204497
.p2align 0x4
.long 0x2E70
L_204497:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2144:
	cmpq 0xA8(%rbp),%r15
	jnl L_463578
L_204523:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2144
.p2align 0x4
L_463578:
L_204498:
	movq %r14,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xC8,%rbp
	leaq (L_204499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_10
.p2align 0x4
.long 0x2E71
L_204499:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204500
L_204521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_204522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204522
.p2align 0x4
.long 0x2E76
L_204522:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_204500:
	movq $0x359B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_204501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2E72
L_204501:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204503
L_204519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_204520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204520
.p2align 0x4
.long 0x2E75
L_204520:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_204503
.text
.p2align 0x4
.globl x_1911
.hidden x_1911
x_1911:
L_204561:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_204714
L_204562:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463655
L_204563:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%r14),%r13
	movq %r13,0x30(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_204565
L_204566:
	cmpl $0x0,%r14d
	jl L_204619
L_204567:
	movl $0x0,0x44(%rbp)
	movl $0x0,0x48(%rbp)
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_2146:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463652
.p2align 0x4,,0x7
L_204568:
	movq $0x1415,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl 0x44(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl 0x48(%rbp),%r11d
	movl %r11d,0x4(%r14)
	movl 0x4C(%rbp),%r11d
	cmpl 0x40(%rbp),%r11d
	jnl L_463651
L_204570:
	movslq %r11d,%r15
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	testl %r13d,%r13d
	jnz L_463649
L_204571:
	movq 0x0(%r10),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r10),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r13
	jne L_204573
L_204574:
	cmpl $0x0,%ecx
	jl L_463647
L_204575:
	movl $0x0,0x44(%rbp)
	xorl %ebx,%ebx
	movq %r14,%r15
.p2align 0x4,,0x7
loop_2147:
	cmpl %ecx,%ebx
	jnl L_463644
L_204679:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movl 0x44(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_463595
L_204680:
	movq 0x10(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_463592
	cmpq $0xEB8,%r13
	je L_463591
	cmpq $0xEB9,%r13
	je L_463590
	cmpq $0xEBA,%r13
	je L_463587
	cmpq $0xEBB,%r13
	je L_463586
	cmpq $0xEBC,%r13
	je L_463583
L_204681:
	xorl %r13d,%r13d
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
L_204682:
	addl 0x48(%rbp),%ecx
	jo L_463582
L_204684:
	movq 0x28(%rbp),%r14
	andq $0x1,%r14
	jnz L_463581
L_204685:
	xorl %r14d,%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
L_204686:
	movl (localWord32+0x4)(%rip),%r14d
	movl %ebx,0x44(%rbp)
	movl %ecx,0x48(%rbp)
	incl %r14d
	movl %r14d,%ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2147
.p2align 0x4
L_463581:
L_204687:
	movq 0x28(%rbp),%r14
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %ecx,%r13d
	setl %al
	movzbl %al,%eax
	xchgl %eax,%ebx
	movl %eax,(localWord32+0x4)(%rip)
	jmp L_204686
.p2align 0x4
L_463582:
L_204683:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463583:
L_204699:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_463585
L_204701:
	incl %r10d
	jo L_204683
L_204702:
	xchgl %r10d,%ecx
	movl %r10d,(localWord32+0x0)(%rip)
	jmp L_204682
.p2align 0x4
L_463585:
L_204573:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463586:
L_204698:
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_204682
.p2align 0x4
L_463587:
L_204694:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_204573
L_204696:
	incl %r10d
	jo L_204683
L_204697:
	xchgl %r10d,%ecx
	movl %r10d,(localWord32+0x0)(%rip)
	jmp L_204682
.p2align 0x4
L_463590:
L_204693:
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_204682
.p2align 0x4
L_463591:
L_204692:
	movl $0x2,%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_204682
.p2align 0x4
L_463592:
L_204688:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_204573
L_204690:
	incl %r10d
	jo L_204683
L_204691:
	xchgl %r10d,%ecx
	movl %r10d,(localWord32+0x0)(%rip)
	jmp L_204682
.p2align 0x4
L_463595:
L_204703:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463643
.p2align 0x4,,0x7
L_204704:
	movl 0x44(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_463642
L_204705:
	movl 0x48(%rbp),%r15d
	movl %r15d,0x44(%rbp)
L_204579:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je defaultTransferSize_1
L_204580:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x15B6,%r15
	je L_463625
L_204659:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_463624
L_204660:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_463621
	cmpq $0xEBF,%r15
	je L_463618
	cmpq $0xEC0,%r15
	je L_463615
	cmpq $0xEC1,%r15
	je L_463604
	cmpq $0xEC2,%r15
	je L_463603
	cmpq $0xEC3,%r15
	je L_463600
L_204661:
	movq 0x0(%r14),%r13
	movq %r13,%r15
L_204584:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_463599
L_204586:
	incl %ecx
	jo L_204587
L_204588:
.p2align 0x4,,0x7
L_204589:
	addl 0x44(%rbp),%ecx
	jo L_463597
L_204590:
	movq 0x28(%rbp),%r15
	andq $0x1,%r15
	jnz L_463596
L_204591:
	xorl %r15d,%r15d
	movl %ecx,%ebx
	movl %r15d,%ecx
L_204592:
	movl %ecx,0x44(%rbp)
	movl %ebx,0x48(%rbp)
	incl 0x4C(%rbp)
	jmp loop_2146
.p2align 0x4
L_463596:
L_204593:
	movq 0x28(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %ecx,%r14d
	setl %al
	movzbl %al,%eax
	movl %ecx,%ebx
	movl %eax,%ecx
	jmp L_204592
.p2align 0x4
L_463597:
L_204587:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463599:
L_204565:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463600:
L_204673:
	movq 0x0(%r14),%r15
L_204642:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_204565
L_204644:
	incl %ecx
	jo L_204587
L_204645:
	jmp L_204589
.p2align 0x4
L_463603:
L_204666:
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	leaq L_204649(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x68,%rbp
	leaq (L_204667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_86
.p2align 0x4
L_463604:
L_204665:
	movq 0x0(%r14),%r15
L_204608:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1206,%r14
	je L_463610
L_204620:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_204565
L_204622:
	cmpl $0x0,%r11d
	movl %r11d,(localWord32+0x0)(%rip)
	jl L_463608
L_204623:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2149:
	cmpl (localWord32+0x0)(%rip),%ecx
	jnl L_463606
L_204625:
	incl %ebx
	jo L_204587
L_204626:
	incl %ecx
	jmp loop_2149
.p2align 0x4
L_463606:
L_204624:
	movl %ebx,%ecx
L_204614:
	incl %ecx
	jo L_204587
L_204615:
	jmp L_204589
.p2align 0x4
L_463608:
L_204619:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463610:
L_204609:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_204565
L_204611:
	cmpl $0x0,%r11d
	movl %r11d,(localWord32+0x0)(%rip)
	jl L_204619
L_204612:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2148:
	cmpl (localWord32+0x0)(%rip),%ecx
	jnl L_463612
L_204616:
	incl %ebx
	jo L_204587
L_204617:
	incl %ecx
	jmp loop_2148
.p2align 0x4
L_463612:
L_204613:
	movl %ebx,%ecx
	jmp L_204614
.p2align 0x4
L_463615:
L_204664:
	movq 0x0(%r14),%r15
L_204603:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_204565
L_204605:
	incl %ecx
	jo L_204587
L_204606:
	jmp L_204589
.p2align 0x4
L_463618:
L_204663:
	movq 0x0(%r14),%r15
length_36:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_204565
L_204600:
	incl %ecx
	jo L_204587
L_204601:
	jmp L_204589
.p2align 0x4
L_463621:
L_204662:
	movq 0x0(%r14),%r15
length_35:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_204565
L_204596:
	incl %ecx
	jo L_204587
L_204597:
	jmp L_204589
.p2align 0x4
L_463624:
L_204647:
	movl $0x1,%ecx
	jmp L_204589
.p2align 0x4
L_463625:
L_204581:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_204647
L_204582:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_463631
	cmpq $0xEBF,%r15
	je L_463630
	cmpq $0xEC0,%r15
	je L_463629
	cmpq $0xEC1,%r15
	je L_463628
	cmpq $0xEC2,%r15
	je L_463627
	cmpq $0xEC3,%r15
	je L_463626
L_204583:
	movq 0x0(%r13),%r15
	jmp L_204584
.p2align 0x4
L_463626:
L_204657:
	movq 0x0(%r13),%r15
	jmp L_204642
.p2align 0x4
L_463627:
L_204628:
	movq %r14,0x68(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	leaq L_204649(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_204629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_85
.p2align 0x4
L_463628:
L_204607:
	movq 0x0(%r13),%r15
	jmp L_204608
.p2align 0x4
L_463629:
L_204602:
	movq 0x0(%r13),%r15
	jmp L_204603
.p2align 0x4
L_463630:
L_204598:
	movq 0x0(%r13),%r15
	jmp length_36
.p2align 0x4
L_463631:
L_204594:
	movq 0x0(%r13),%r15
	jmp length_35
.p2align 0x4
defaultTransferSize_1:
.p2align 0x4,,0x7
defaultTransferSize_0:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_204647
L_204631:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_463640
	cmpq $0xEBF,%r15
	je L_463639
	cmpq $0xEC0,%r15
	je L_463638
	cmpq $0xEC1,%r15
	je L_463637
	cmpq $0xEC2,%r15
	je L_463634
	cmpq $0xEC3,%r15
	je L_463633
L_204632:
	movq 0x0(%r14),%r15
	jmp L_204584
.p2align 0x4
L_463633:
L_204641:
	movq 0x0(%r14),%r15
	jmp L_204642
.p2align 0x4
L_463634:
L_204637:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r13,%r11
	jne L_204565
L_204639:
	incl %ecx
	jo L_204587
L_204640:
	jmp L_204589
.p2align 0x4
L_463637:
L_204636:
	movq 0x0(%r14),%r15
	jmp L_204608
.p2align 0x4
L_463638:
L_204635:
	movq 0x0(%r14),%r15
	jmp L_204603
.p2align 0x4
L_463639:
L_204634:
	movq 0x0(%r14),%r15
	jmp length_36
.p2align 0x4
L_463640:
L_204633:
	movq 0x0(%r14),%r15
	jmp length_35
.p2align 0x4
L_463642:
L_204706:
	movl $0x1,%ecx
	movl 0x48(%rbp),%ebx
	jmp L_204592
.p2align 0x4
L_463643:
L_204707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_204708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204708
.p2align 0x4
.long 0x2E80
L_204708:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_204704
.p2align 0x4
L_463644:
L_204576:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463646
.p2align 0x4,,0x7
L_204577:
	movl 0x44(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_463645
L_204578:
	movl 0x48(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	jmp L_204579
.p2align 0x4
L_463645:
L_204676:
	movl $0x1,%ecx
	movl 0x48(%rbp),%ebx
	jmp L_204592
.p2align 0x4
L_463646:
L_204677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_204678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204678
.p2align 0x4
.long 0x2E80
L_204678:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_204577
.p2align 0x4
L_463647:
L_204709:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463649:
L_204710:
	movq $0x1937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r14,%r15
	movq %r11,%r14
L_204654:
	cmpq 0x38(%rbp),%r14
	je L_463650
L_204655:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463650:
L_204656:
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463651:
L_204569:
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463652:
L_204711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_204712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204712
.p2align 0x4
.long 0x2E81
L_204712:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_204568
.p2align 0x4
L_463655:
L_204714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_204715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204715
.p2align 0x4
.long 0x6FF
L_204715:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_204563
.p2align 0x4
.long 0x2E7E
L_204667:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204668
L_204671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_204672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204672
.p2align 0x4
.long 0x2E7F
L_204672:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_204668:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz L_463657
L_204670:
	movl 0x0(%r14),%ecx
	jmp L_204589
.p2align 0x4
L_463657:
L_204669:
	movq $0x1A0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48B
L_204649:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_204650:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_463660
L_204652:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xC9B,%r15
	jne L_463659
L_204653:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_204654
.p2align 0x4
L_463659:
	movq %r13,%r15
L_204651:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463660:
	movq %r13,%r15
	jmp L_204651
.p2align 0x4
.long 0x2E7D
L_204629:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz defaultTransferSize_0
L_204648:
	movl 0x0(%r14),%ecx
	jmp L_204589
.text
.p2align 0x4
.globl multi_0
.hidden multi_0
multi_0:
L_204716:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_204975
L_204717:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463661
L_204718:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq $0x3295,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	leaq L_204962(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_204719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
L_463661:
L_204975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_204976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204976
.p2align 0x4
.long 0x45D
L_204976:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_204718
.p2align 0x4
.long 0x7BF
L_204719:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204720
L_204973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_204974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204974
.p2align 0x4
.long 0xE3F
L_204974:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_204720:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_463663
L_204721:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_204722:
	movq 0x0(%r15),%r14
	movq 0x28(%r14),%r13
	movq %r13,0x50(%rbp)
	movq $0x3567,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_204723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_463663:
L_204727:
	movl $0x0,0x30(%rbp)
L_204728:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_463664
L_204729:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
L_204730:
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_204731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_463664:
L_204754:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_204755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
.long 0x25
L_204962:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204964
L_204970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_204971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204971
.p2align 0x4
.long 0x98A
L_204971:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_204964:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_204965
L_204966:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC9D,%r14
	jne L_463667
L_204967:
	movl 0x0(%r15),%r14d
	movq 0x30(%rbp),%r13
	cmpq %r13,0x8(%r15)
	jne L_463666
L_204969:
	movl %r14d,0x30(%rbp)
	jmp L_204728
.p2align 0x4
L_463666:
L_204968:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463667:
L_204965:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x49F
L_204723:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204724
L_204960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_204961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204961
.p2align 0x4
.long 0x98A
L_204961:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_204724:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_204727
L_204725:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_204722
.p2align 0x4
.long 0x2E82
L_204731:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204732
L_204957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_204958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204958
.p2align 0x4
.long 0x2E91
L_204958:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_204732:
	cmpq $0x1,0x98(%rbp)
	jne L_204734
L_204735:
	movq $0x1947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x90(%rbp),%r13
	movq 0x0(%r13),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_463684
L_204737:
	movq %r15,0x0(%r13)
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_463683
L_204738:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_204740:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_204741
L_204949:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC1,%r13
	jne L_204741
L_204950:
	movq 0x0(%r14),%r13
	cmpq %r13,0x48(%rbp)
	je L_463678
L_204741:
	incl %ecx
	movl %ecx,0x34(%rbp)
	jo L_463677
L_204743:
	cmpq $0x1,%r15
	je L_463672
L_204744:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_204740
.p2align 0x4
L_463672:
L_204745:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204746
L_204947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_204948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204948
.p2align 0x4
.long 0x2E90
L_204948:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_204746:
	movl 0x34(%rbp),%ecx
L_204747:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463675
L_204749:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_204751
L_204946:
	movl %ecx,0x0(%r15)
L_204751:
	movq $0x1983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_204754
L_204752:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_204730
.p2align 0x4
L_463675:
L_204748:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463677:
L_204742:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463678:
L_204952:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_204748
L_204953:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_204734
L_204955:
	movl %ecx,0x0(%r15)
L_204734:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463683:
L_204956:
	xorl %ecx,%ecx
	jmp L_204747
.p2align 0x4
L_463684:
L_204736:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2E83
L_204755:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204756
L_204944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_204945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204945
.p2align 0x4
.long 0x2E89
L_204945:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_204756:
	movq 0x20(%rbp),%r14
	movq 0x18(%r14),%r15
	cmpb $0x2,0x0(%r15)
	je L_463695
L_204757:
	movb $0x0,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_463687
L_204758:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
L_204759:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_204760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_463687:
L_204766:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_204791
L_204767:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_204768:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463693
.p2align 0x4,,0x7
L_204769:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_463692
L_204932:
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_204779:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463691
.p2align 0x4,,0x7
L_204780:
	cmpq $0x1,0x28(%rbp)
	jne L_463690
.p2align 0x4,,0x7
L_204787:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463689
.p2align 0x4,,0x7
L_204788:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_463688
L_204789:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_204768
.p2align 0x4
L_463688:
L_204791:
	movq $0x71B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0xC91,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x28(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x71D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x68,%rbp
	leaq (loop_2150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
L_463689:
L_204919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_204920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204920
.p2align 0x4
.long 0x2E89
L_204920:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_204788
.p2align 0x4
L_463690:
L_204781:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r15
L_204782:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x98(%rbp)
	movq $0x3DCB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_204783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_463691:
L_204924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_204925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204925
.p2align 0x4
.long 0x2E8B
L_204925:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_204780
.p2align 0x4
L_463692:
L_204770:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_204771:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq %r13,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_204772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_463693:
L_204933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_204934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204934
.p2align 0x4
.long 0x2E8D
L_204934:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_204769
.p2align 0x4
L_463695:
L_204941:
	movb $0x1,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_204766
L_204942:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp L_204759
.p2align 0x4
.long 0x2E84
L_204760:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204761
L_204938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_204939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204939
.p2align 0x4
.long 0x2E8F
L_204939:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_204761:
	movq $0x35D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_204762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x1E4F
loop_2150:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_204850
L_204792:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
.p2align 0x4,,0x7
L_204793:
	cmpq $0x1,%r15
	jne L_463700
L_204915:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_463699
L_204916:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r13,%r15
	jmp L_204793
.p2align 0x4
L_463699:
L_204850:
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463700:
L_204794:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_463712
L_204795:
	movq %r14,0x68(%rbp)
	movq %r13,%r15
L_204796:
	movq 0x8(%r15),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_204736
L_204797:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_463710
L_204798:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_204800:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_204801
L_204838:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC1,%r13
	jne L_204801
L_204839:
	movq 0x8(%r14),%r13
	movq 0x48(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_463705
L_204801:
	incl %ecx
	jo L_204742
L_204802:
	cmpq $0x1,%r15
	je L_463701
L_204803:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_204800
.p2align 0x4
L_463701:
L_204804:
L_204805:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_204748
L_204806:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_204808
L_204837:
	movl %ecx,0x0(%r15)
L_204808:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_204809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_463705:
L_204841:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_204748
L_204842:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_463706
L_204851:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_204844:
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl $0x1,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x78,%rbp
	leaq (L_204845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1914
.p2align 0x4
L_463706:
L_204843:
	movq %r13,%r15
	jmp L_204844
.p2align 0x4
L_463710:
L_204852:
	xorl %ecx,%ecx
	jmp L_204805
.p2align 0x4
L_463712:
L_204853:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_463726
L_204854:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r13,%r15
	movq %r10,%r14
	movq %r11,%r13
.p2align 0x4,,0x7
L_204855:
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r15)
	je L_463725
L_204856:
	cmpq $0x1,%r13
	je L_463713
L_204857:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_204855
.p2align 0x4
L_463713:
L_204859:
	xorl %ecx,%ecx
visitFunc_1:
	movq 0x8(%r15),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_204736
L_204860:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_463723
L_204861:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
L_204863:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_463722
L_204901:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCC1,%r13
	jne L_463721
L_204902:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x48(%rbp)
	je L_463718
	movl %ecx,(localWord32+0x0)(%rip)
L_204864:
	incl %ebx
	jo L_204742
L_204865:
	cmpq $0x1,%r14
	je L_463714
L_204866:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl (localWord32+0x0)(%rip),%ecx
	jmp L_204863
.p2align 0x4
L_463714:
L_204867:
	movl %ebx,%ecx
L_204868:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_204748
L_204869:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_204871
L_204900:
	movl %ecx,0x0(%r15)
L_204871:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_204872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_463718:
L_204904:
	movslq %ebx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_204748
L_204905:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ebx,0x0(%r14)
	jnl L_463719
L_204911:
	movl %ebx,0x0(%r14)
	movq %r13,%r15
	movl %ecx,(localWord32+0x0)(%rip)
L_204907:
	movq %r15,0x70(%rbp)
	movl (localWord32+0x0)(%rip),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x70,%rbp
	leaq (L_204908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1914
.p2align 0x4
L_463719:
L_204906:
	movq %r13,%r15
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_204907
.p2align 0x4
L_463721:
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_204864
.p2align 0x4
L_463722:
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_204864
.p2align 0x4
L_463723:
L_204912:
	xorl %ecx,%ecx
	jmp L_204868
.p2align 0x4
L_463725:
L_204913:
	movl $0x1,%ecx
	jmp visitFunc_1
.p2align 0x4
L_463726:
	movq %r13,%r15
	jmp L_204859
.p2align 0x4
.long 0x2E86
L_204783:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204784
L_204921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_204922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204922
.p2align 0x4
.long 0x2E8A
L_204922:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_204784:
	movq 0x80(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_204787
L_204785:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_204782
.p2align 0x4
.long 0x2E85
L_204772:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204773
L_204930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_204931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204931
.p2align 0x4
.long 0x2E8C
L_204931:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_204773:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_463733
L_204774:
L_204775:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_463731
L_204776:
	movl $0x1,0x0(%r15)
	movq $0x261B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_463730
L_204777:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_204771
.p2align 0x4
L_463730:
L_204778:
	movq %r15,0x28(%rbp)
	jmp L_204779
.p2align 0x4
L_463731:
L_204926:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_463732
L_204927:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_204771
.p2align 0x4
L_463732:
L_204928:
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_204779
.p2align 0x4
L_463733:
L_204929:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x88(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp L_204775
.p2align 0x4
.long 0x7FF
L_204762:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204763
L_204936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_204937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204937
.p2align 0x4
.long 0x2E8E
L_204937:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_204763:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_204766
L_204764:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_204759
.p2align 0x4
.long 0x474
L_204809:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_204810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E87
L_204845:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_463737
L_204846:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_204796
.p2align 0x4
L_463737:
L_204847:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_204850
L_204848:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	jmp L_204793
.p2align 0x4
.long 0x474
L_204872:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_204873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E88
L_204908:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_204850
L_204909:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_204793
.p2align 0x4
.long 0x45A
L_204810:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x10160)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_204811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A
L_204873:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x10160)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_204874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EE
L_204811:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_204812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EE
L_204874:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_204875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x700
L_204812:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204813
L_204835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_204836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204836
.p2align 0x4
.long 0x5EF
L_204836:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_204813:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_204814:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_204742
L_204815:
	cmpq $0x1,%r14
	je L_463740
L_204816:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_204814
.p2align 0x4
L_463740:
L_204817:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204818
L_204833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_204834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204834
.p2align 0x4
.long 0x48D
L_204834:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_204818:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463741
L_204819:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_311:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_463741:
L_204832:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_311
.p2align 0x4
.long 0x700
L_204875:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204876
L_204898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_204899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204899
.p2align 0x4
.long 0x5EF
L_204899:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_204876:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_204877:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_204742
L_204878:
	cmpq $0x1,%r14
	je L_463745
L_204879:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_204877
.p2align 0x4
L_463745:
L_204880:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204881
L_204896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_204897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204897
.p2align 0x4
.long 0x48D
L_204897:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_204881:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463746
L_204882:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_312:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_463746:
L_204895:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_312
.p2align 0x4
.long 0x474
rev_309:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_463752
L_204820:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_204821:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463751
.p2align 0x4,,0x7
L_204822:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_463750
L_204823:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_204821
.p2align 0x4
L_463750:
L_204825:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463751:
L_204829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_204830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204830
.p2align 0x4
.long 0x4FD
L_204830:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_204822
.p2align 0x4
L_463752:
L_204831:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_204825
.p2align 0x4
.long 0x474
rev_310:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_463755
L_204883:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_204884:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463754
.p2align 0x4,,0x7
L_204885:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_463753
L_204886:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_204884
.p2align 0x4
L_463753:
L_204888:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463754:
L_204892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_204893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204893
.p2align 0x4
.long 0x4FD
L_204893:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_204885
.p2align 0x4
L_463755:
L_204894:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_204888
.p2align 0x4
.long 0x474
bug_514:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204826
L_204827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_204828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204828
.p2align 0x4
.long 0x49E
L_204828:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_204826:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
bug_515:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204889
L_204890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_204891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_204891
.p2align 0x4
.long 0x49E
L_204891:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_204889:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1914
.hidden x_1914
x_1914:
L_204977:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_205252
L_204978:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463758
L_204979:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq $0x3DBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_204980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_463758:
L_205252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_205253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205253
.p2align 0x4
.long 0x2520
L_205253:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_204979
.p2align 0x4
.long 0x2E92
L_204980:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_204981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
.long 0x2E93
L_204981:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204982
L_205250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_205251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205251
.p2align 0x4
.long 0x123C
L_205251:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_204982:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_205242
L_204983:
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jz L_463769
L_204984:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,0x8(%r13)
	je L_463768
L_204985:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_463767
L_204986:
	movl 0x28(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_463762
L_204987:
	cmpq $0x1,%r15
	je L_463761
L_204988:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463760
L_204989:
L_204990:
	movq $0x41CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_204991:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_204992:
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_204993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp controlFlow_0
.p2align 0x4
L_463760:
L_205069:
	movq $0x41CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_204991
.p2align 0x4
L_463761:
L_205070:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x28(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x34E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	addq $0x50,%rbp
	leaq (L_205071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463762:
L_205076:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r11
	cmpq $0x1,%r11
	je L_463766
L_205077:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_463765
L_205078:
L_205079:
	movq $0x41CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq 0x0(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x20(%rbp),%r9
	movq %r9,0x8(%r10)
	movq $0x2729,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	xchgq %r11,%r15
	movq %r9,%r14
L_205080:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_205081:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_463764
L_205082:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463763
L_205083:
L_205084:
	movq $0x41DF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_205085:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_205086:
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_205087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp controlFlow_0
.p2align 0x4
L_463763:
L_205192:
	movq $0x41DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_205085
.p2align 0x4
L_463764:
L_205193:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x28(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x34E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	addq $0x50,%rbp
	leaq (L_205194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463765:
L_205199:
	movq $0x41CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r10
	movq %r10,0x0(%r14)
	movq 0x20(%rbp),%r10
	movq %r10,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x10,%r12
	xchgq %r11,%r15
	movq %r10,%r14
	jmp L_205080
.p2align 0x4
L_463766:
L_205200:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x8(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x28(%r14),%r10
	movq %r10,0x10(%rbp)
	movq 0x30(%r14),%r10
	movq %r10,0x60(%rbp)
	movq $0x34AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_205201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463767:
L_205209:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x34E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_205210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463768:
L_205236:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x28(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x30(%r15),%r15
	movq %r15,0x48(%rbp)
	movq $0x34AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_205237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463769:
L_205242:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_204984
L_205243:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movb $0xF,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_205244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x848
L_204993:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (loop_2151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
.long 0x1573
L_205071:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205072
L_205074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_205075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205075
.p2align 0x4
.long 0x2E9F
L_205075:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_205072:
	movq $0x35D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_205073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x513
L_205087:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205088
L_205190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_205191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205191
.p2align 0x4
.long 0x14A5
L_205191:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_205088:
	movq $0xC95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (loop_2152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
.long 0x18F5
L_205194:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205195
L_205197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_205198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205198
.p2align 0x4
.long 0x18F6
L_205198:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_205195:
	movq $0x35D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_205196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x1260
L_205201:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205202
L_205207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_205208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205208
.p2align 0x4
.long 0x266F
L_205208:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_205202:
	movq $0x3565,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_205203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2669
L_205210:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205211
L_205234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_205235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205235
.p2align 0x4
.long 0x112A
L_205235:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_205211:
	movq $0x35D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_205212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x5F2
L_205237:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205238
L_205239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_205240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205240
.p2align 0x4
.long 0x489
L_205240:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_205238:
	movq $0x3565,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x52A
L_205244:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_204984
L_205246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_205247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205247
.p2align 0x4
.long 0x123C
L_205247:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_204984
.p2align 0x4
.long 0x77E
loop_2151:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	cmpq $0x1,%r14
	je L_205017
L_204994:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_204995:
	cmpq $0x1,%r15
	je L_463785
L_204996:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpq $0x1,%r11
	jne L_463784
L_205028:
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_205034
L_205029:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r11
	movq %r10,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_205030:
	movq 0x0(%r14),%r11
	movq 0x8(%r15),%r10
	cmpq %r10,0x8(%r11)
	je L_463782
L_205031:
	cmpq $0x1,%r13
	je L_463780
L_205032:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_205030
.p2align 0x4
L_463780:
L_205034:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_463781
L_205035:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_204995
.p2align 0x4
L_463781:
L_205017:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463782:
L_205037:
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_205038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_463784:
L_204997:
	movq %r11,0x58(%rbp)
	movq %r10,%r15
L_204998:
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_204999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_463785:
L_205065:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_205017
L_205066:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_204995
.p2align 0x4
.long 0x2E9E
L_205073:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_204992
.p2align 0x4
.long 0x1776
loop_2152:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_205116
L_205089:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
.p2align 0x4,,0x7
L_205090:
	cmpq $0x1,%r15
	jne L_463789
L_205186:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_463788
L_205187:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r13,%r15
	jmp L_205090
.p2align 0x4
L_463788:
L_205116:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463789:
L_205091:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_463790
L_205092:
	movq %r14,0x68(%rbp)
	movq %r13,%r15
L_205093:
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_205094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_463790:
L_205133:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_463793
L_205134:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r13,%r15
	movq %r10,%r14
	movq %r11,%r13
.p2align 0x4,,0x7
L_205135:
	movq 0x0(%r14),%r11
	movq 0x8(%r15),%r10
	cmpq %r10,0x8(%r11)
	je L_463792
L_205136:
	cmpq $0x1,%r13
	je L_463791
L_205137:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_205135
.p2align 0x4
L_463791:
L_205139:
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_205140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_463792:
L_205152:
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_205153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_463793:
	movq %r13,%r15
	jmp L_205139
.p2align 0x4
.long 0x469
L_205196:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_205086
.p2align 0x4
.long 0x2EB3
L_205203:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205081
L_205205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_205206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205206
.p2align 0x4
.long 0x2EB4
L_205206:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_205081
.p2align 0x4
.long 0x2EB5
L_205212:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205213
L_205232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_205233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205233
.p2align 0x4
.long 0x2EB6
L_205233:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_205213:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_463796
L_205214:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463796:
L_205215:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_463798
L_205216:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463797
L_205217:
L_205218:
	movq $0x41DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_205219:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_205220:
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_205221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp controlFlow_0
.p2align 0x4
L_463797:
L_205225:
	movq $0x41DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_205219
.p2align 0x4
L_463798:
L_205226:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0x34AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_205227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x770
L_205038:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x90,%rbp
	leaq (L_205039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xB78
L_204999:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	addq $0x98,%rbp
	leaq (L_205000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0x76D
L_205094:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_205095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0x1492
L_205140:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_205141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0x1492
L_205153:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x98(%rbp)
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_205154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0x605
L_205221:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205222
L_205223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_205224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205224
.p2align 0x4
.long 0x5EC
L_205224:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_205222:
	movq $0xC95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x3563,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x30,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%r11)
	movq %r11,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x549
L_205227:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205228
L_205230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_205231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205231
.p2align 0x4
.long 0x52E
L_205231:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_205228:
	movq $0x3565,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_205229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2E9A
L_205039:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205040
L_205062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_205063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205063
.p2align 0x4
.long 0xB9B
L_205063:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_205040:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_463803
L_205041:
	cmpq $0x1,%r15
	je L_463802
L_205042:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movb $0xF,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_205043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_463802:
L_205045:
	movq $0x34E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_205046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463803:
L_205051:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_205017
L_205052:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_204995
.p2align 0x4
.long 0x2E94
L_205000:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205001
L_205026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_205027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205027
.p2align 0x4
.long 0xB90
L_205027:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_205001:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_463807
L_205002:
	cmpq $0x1,%r15
	je L_463806
L_205003:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movb $0xF,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_205004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_463806:
L_205006:
	movq $0x34E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_205007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463807:
L_205012:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_463808
L_205013:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_204998
.p2align 0x4
L_463808:
L_205014:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_205017
L_205015:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	jmp L_204995
.p2align 0x4
.long 0x2EA0
L_205095:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205096
L_205131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_205132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205132
.p2align 0x4
.long 0x1F9A
L_205132:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_205096:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_463812
L_205097:
	cmpq $0x1,%r15
	je L_463811
L_205098:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movb $0xF,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_205099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_463811:
L_205101:
	movq $0x34E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_205102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463812:
L_205107:
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_205108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0x2EA9
L_205141:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205142
L_205150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205151
.p2align 0x4
.long 0x1FC4
L_205151:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_205142:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_463815
L_205143:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_205116
L_205144:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_205090
.p2align 0x4
L_463815:
L_205146:
	movq $0x36D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x78(%rbp)
	movq $0x29,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x2D,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_205147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x2EAA
L_205154:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205155
L_205183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_205184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205184
.p2align 0x4
.long 0x1F9E
L_205184:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_205155:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_463818
L_205156:
	cmpq $0x1,%r15
	je L_463817
L_205157:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movb $0xF,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_205158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_463817:
L_205160:
	movq $0x34E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_205161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463818:
L_205166:
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_205167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0x46E
L_205229:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_205220
.p2align 0x4
.long 0x2E9A
L_205043:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205045
L_205058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_205059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205059
.p2align 0x4
.long 0x2E9D
L_205059:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_205045
.p2align 0x4
.long 0x2E9B
L_205046:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205047
L_205056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_205057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205057
.p2align 0x4
.long 0x2E9C
L_205057:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_205047:
	movq $0x3297,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_205048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x2E94
L_205004:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205006
L_205022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_205023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205023
.p2align 0x4
.long 0x2E99
L_205023:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_205006
.p2align 0x4
.long 0x2E95
L_205007:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205008
L_205020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_205021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205021
.p2align 0x4
.long 0x2E98
L_205021:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_205008:
	movq $0x3297,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_205009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x2EA0
L_205099:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205101
L_205127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_205128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205128
.p2align 0x4
.long 0x2EA8
L_205128:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_205101
.p2align 0x4
.long 0x2EA1
L_205102:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205103
L_205125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_205126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205126
.p2align 0x4
.long 0x2EA7
L_205126:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_205103:
	movq $0x3297,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_205104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x2EA4
L_205108:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205109
L_205121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_205122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205122
.p2align 0x4
.long 0x2EA5
L_205122:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_205109:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_463828
L_205110:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_463826
L_205111:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_205093
.p2align 0x4
L_463826:
L_205113:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_205116
L_205114:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_205090
.p2align 0x4
L_463828:
L_205117:
	movq $0x36A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x80(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x5,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_205118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x1492
L_205147:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_205116
L_205148:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_205090
.p2align 0x4
.long 0x2EAA
L_205158:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205160
L_205179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_205180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205180
.p2align 0x4
.long 0x2EB2
L_205180:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_205160
.p2align 0x4
.long 0x2EAB
L_205161:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205162
L_205177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_205178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205178
.p2align 0x4
.long 0x2EB1
L_205178:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_205162:
	movq $0x3297,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_205163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x2EAE
L_205167:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205168
L_205173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_205174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205174
.p2align 0x4
.long 0x2EAF
L_205174:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_205168:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_463834
L_205169:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_205116
L_205170:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_205090
.p2align 0x4
L_463834:
L_205172:
	movq $0x36A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x78(%rbp)
	movq $0x5,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x6,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_205147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xE5A
L_205048:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205049
L_205054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205055
.p2align 0x4
.long 0xE5C
L_205055:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_205049:
	movq $0x2B79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x6,0x60(%rbp)
	movq $0x2,0x68(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_205050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x2E96
L_205009:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205010
L_205018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_205019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205019
.p2align 0x4
.long 0x2E97
L_205019:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_205010:
	movq $0x2B79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x6,0x68(%rbp)
	movq $0x2,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_205011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x2EA2
L_205104:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205105
L_205123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_205124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205124
.p2align 0x4
.long 0x2EA6
L_205124:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_205105:
	movq $0x2B79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq $0x6,0xA8(%rbp)
	movq $0x2,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xA8,%rbp
	leaq (L_205106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x76D
L_205118:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_205113
L_205119:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_205093
.p2align 0x4
.long 0x2EAC
L_205163:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205164
L_205175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_205176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205176
.p2align 0x4
.long 0x2EB0
L_205176:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_205164:
	movq $0x2B79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	movq $0x6,0xA0(%rbp)
	movq $0x2,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA0,%rbp
	leaq (L_205165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x770
L_205050:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_205051
.p2align 0x4
.long 0xB78
L_205011:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_205012
.p2align 0x4
.long 0x2EA3
L_205106:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_205107
.p2align 0x4
.long 0x2EAD
L_205165:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_205166
.text
.p2align 0x4
.globl controlFlow_0
.hidden controlFlow_0
controlFlow_0:
L_205254:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_205273
L_205255:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463843
L_205256:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_463842
L_205257:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x14AA,%r14
	je L_463841
L_205259:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x60(%rbp)
	movq $0x927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC93,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x359F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq %r13,0x10(%r14)
	movq %r14,0x58(%rbp)
	leaq L_205268(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_205260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_463841:
L_205258:
	movq 0x18(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463842:
L_205272:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463843:
L_205273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_205274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205274
.p2align 0x4
.long 0x453
L_205274:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_205256
.p2align 0x4
.long 0x913
L_205260:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_205261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x72F
L_205268:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205269
L_205270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_205271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205271
.p2align 0x4
.long 0x51D
L_205271:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_205269:
	movq $0x2957,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x214C
L_205261:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205262
L_205266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_205267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205267
.p2align 0x4
.long 0x2940
L_205267:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_205262:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_463846
L_205263:
L_205264:
	movq $0x2923,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0xF7B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2955,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x28,%r12
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r11
	movq %r11,0x10(%r14)
	movq %r15,0x18(%r14)
	movq 0x18(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r14,0x0(%r10)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	movq %r11,0x8(%rbp)
	movq %r13,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463846:
L_205265:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_205264
.text
.p2align 0x4
.globl x_1913
.hidden x_1913
x_1913:
L_205275:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_205453
L_205276:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463848
L_205277:
	movq $0x729,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq 0x50(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x38(%rbp)
	movl 0x4(%r15),%r13d
	movl %r13d,0x40(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x78(%rbp)
	movl 0x0(%r15),%r11d
	movl %r11d,0x44(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0xA0(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0xA8(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x34D7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x28,%r12
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r10,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r14,0x18(%r9)
	movq %r9,0xD0(%rbp)
	leaq L_205366(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_205278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463848:
L_205453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_205454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205454
.p2align 0x4
.long 0x6FF
L_205454:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_205277
.p2align 0x4
.long 0x2EB7
L_205278:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205279
L_205451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_205452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205452
.p2align 0x4
.long 0x2EE2
L_205452:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_205279:
	movq $0x3587,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x44(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xD0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_205280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x48B
L_205366:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r14
L_205367:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_463853
L_205369:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xCF1,%r15
	jne L_463852
L_205370:
	movq %r14,%r13
	movq 0x0(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
L_205371:
	cmpq 0x30(%rbp),%r15
	je L_463851
L_205372:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463851:
L_205373:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463852:
	movq %r14,%r15
L_205368:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463853:
	movq %r14,%r15
	jmp L_205368
.p2align 0x4
.long 0x2EB8
L_205280:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205281
L_205449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_205450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205450
.p2align 0x4
.long 0x2EE1
L_205450:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_205281:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,0x0(%r14)
	je L_463858
L_205282:
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_463857
L_205283:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_205284:
	incl %ecx
	movl %ecx,0x78(%rbp)
	jo L_463856
L_205286:
	cmpq $0x1,%r15
	je L_463854
L_205287:
	movq 0x8(%r15),%r15
	jmp L_205284
.p2align 0x4
L_463854:
L_205288:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205289
L_205418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_205419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205419
.p2align 0x4
.long 0x2EDB
L_205419:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_205289:
	movl 0x78(%rbp),%ecx
L_205290:
	movl %ecx,0xD0(%rbp)
	movq $0x3FF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_205291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_463856:
L_205285:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463857:
L_205420:
	xorl %ecx,%ecx
	jmp L_205290
.p2align 0x4
L_463858:
L_205421:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r13
	je L_463859
L_205422:
	movq 0xA0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_205423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463859:
L_205445:
	movq 0x60(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_205446
L_205447:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xCF1,%r15
	jne L_463860
L_205448:
	movq 0x0(%r13),%r15
	xchgq %r13,%r14
	jmp L_205371
.p2align 0x4
L_463860:
L_205446:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EB9
L_205291:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	cmpq $0x1,%r14
	je L_463863
L_205292:
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_205293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463863:
L_205310:
	movq 0x58(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_205311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2EDC
L_205423:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_205424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2EB8
L_205293:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_205294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2EBD
L_205311:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205312
L_205408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_205409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205409
.p2align 0x4
.long 0x2ED7
L_205409:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_205312:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x10(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x2,0xC8(%rbp)
	movl $0x0,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_205313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x2EDC
L_205424:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x10180)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_205425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2EB8
L_205294:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x10178)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_205295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2EBC
L_205313:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0xC8(%rbp)
	movl $0x0,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_205314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x2EDD
L_205425:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205426
L_205442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_205443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205443
.p2align 0x4
.long 0x2EE0
L_205443:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_205426:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_205427:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_205285
L_205428:
	cmpq $0x1,%r14
	je L_463865
L_205429:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_205427
.p2align 0x4
L_463865:
L_205430:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205431
L_205440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_205441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205441
.p2align 0x4
.long 0x2EDF
L_205441:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_205431:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463866
L_205432:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
x_675:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x78(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_205433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_463866:
L_205439:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_675
.p2align 0x4
.long 0x2EBA
L_205295:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205296
L_205415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205416
.p2align 0x4
.long 0x2EDA
L_205416:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205296:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_463870
L_205298:
	movl %r13d,0xE0(%rbp)
	movq $0x3C43,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_205299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_463870:
L_205297:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EBE
L_205314:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205315
L_205406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_205407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205407
.p2align 0x4
.long 0x2ED6
L_205407:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_205315:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xB8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_205316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1888
.p2align 0x4
.long 0x2EDC
L_205433:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_205434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2EBB
L_205299:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (L_205300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x2EBF
L_205316:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1533,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205317
.p2align 0x4
.long 0x2EC0
L_205317:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2153:
	cmpq $0x1,%r15
	jnl L_463873
L_205405:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2153
.p2align 0x4
L_463873:
L_205318:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205319
L_205403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205404
.p2align 0x4
.long 0x2ED5
L_205404:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205319:
	movq 0x88(%rbp),%r15
	movq $0xF,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x5347,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xD8(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0xE0(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xD8,%rbp
	leaq (L_205320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doitTree_0
.p2align 0x4
.long 0x2EDE
L_205434:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_205435:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_205436
L_205437:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xCF1,%r15
	jne L_463875
L_205438:
	movq 0x0(%r14),%r15
	jmp L_205371
.p2align 0x4
L_463875:
L_205436:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EBB
L_205300:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205301
L_205413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_205414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205414
.p2align 0x4
.long 0x2ED9
L_205414:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_205301:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD8(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_205302:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_205285
L_205303:
	cmpq $0x1,%r14
	je L_463877
L_205304:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_205302
.p2align 0x4
L_463877:
L_205305:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205306
L_205411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_205412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205412
.p2align 0x4
.long 0x2ED8
L_205412:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_205306:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463878
L_205307:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
x_674:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xD8(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_205308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_463878:
L_205410:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_674
.p2align 0x4
.long 0x2EBF
L_205320:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205321
L_205401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205402
.p2align 0x4
.long 0x2ED2
L_205402:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205321:
	movq $0x3521,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_205322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x2EB8
L_205308:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_205309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2EBF
L_205322:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205323
L_205399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205400
.p2align 0x4
.long 0x2ED2
L_205400:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205323:
	movq $0x3523,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_205324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x2EBC
L_205309:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_205310
.p2align 0x4
.long 0x2EBF
L_205324:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_205325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
.long 0x2EBF
L_205325:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205326
L_205397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205398
.p2align 0x4
.long 0x2EC0
L_205398:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205326:
	movq 0x10(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r14
	movq $0x19D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	cmpq $0x1,%r14
	je L_463887
L_205327:
	movq 0x8(%r14),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_205328:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_205285
L_205329:
	cmpq $0x1,%r15
	je L_463884
L_205330:
	movq 0x8(%r15),%r15
	jmp L_205328
.p2align 0x4
L_463884:
L_205331:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205332
L_205394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205395
.p2align 0x4
.long 0x2ED4
L_205395:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205332:
	movl 0x10(%rbp),%ecx
L_205333:
	movl %ecx,0xE0(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_205334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_463887:
L_205396:
	xorl %ecx,%ecx
	jmp L_205333
.p2align 0x4
.long 0x2EC1
L_205334:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205335
L_205392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205393
.p2align 0x4
.long 0x2ED3
L_205393:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205335:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x35B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_205336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2EBF
L_205336:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205337
L_205390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205391
.p2align 0x4
.long 0x2ED2
L_205391:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205337:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	cmpq $0x1,%r14
	je L_463890
L_205338:
	movq $0x3511,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_205339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_463890:
L_205343:
	movq $0x30D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x10(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x48(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_463893
L_205344:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xB99,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205345
.p2align 0x4
.long 0x2EC4
L_205345:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2154:
	cmpq 0x60(%rbp),%r15
	jnl L_463891
L_205383:
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2154
.p2align 0x4
L_463891:
L_205346:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205347
L_205381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205382
.p2align 0x4
.long 0x2ECF
L_205382:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205347:
	movq $0xB9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl 0x48(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xB9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x40,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x80(%rbp),%r14
	movq %r14,0x28(%r11)
	movq 0x50(%rbp),%r13
	movq %r13,0x30(%r11)
	movq $0x191B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x60(%rbp)
	movq %r11,0x8(%r10)
	addq $0x38,%r12
	movl 0x44(%rbp),%r11d
	movl %r11d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	movq %r14,0x20(%r10)
	movq %r13,0x28(%r10)
	movq 0xC8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r10,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_205348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitBlockP_0
.p2align 0x4
L_463893:
L_205384:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EC2
L_205339:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205340
L_205387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205388
.p2align 0x4
.long 0x2ED1
L_205388:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_205340:
	movq $0x3585,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xD8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_205341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2EC5
L_205348:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0xB8(%rbp)
	movl $0x0,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_205349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x2EC3
L_205341:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205343
L_205385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_205386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205386
.p2align 0x4
.long 0x2ED0
L_205386:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_205343
.p2align 0x4
.long 0x2EC6
L_205349:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205350
L_205379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_205380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205380
.p2align 0x4
.long 0x2ECE
L_205380:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_205350:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_205351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1888
.p2align 0x4
.long 0x2EC7
L_205351:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_205352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3912
.p2align 0x4
.long 0x2EC8
L_205352:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_205353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1915
.p2align 0x4
.long 0x2EC9
L_205353:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205354
L_205377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_205378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205378
.p2align 0x4
.long 0x2ECD
L_205378:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_205354:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_463901
L_205355:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_205356:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_205285
L_205357:
	cmpq $0x1,%r15
	je L_463898
L_205358:
	movq 0x8(%r15),%r15
	jmp L_205356
.p2align 0x4
L_463898:
L_205359:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205360
L_205374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_205375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205375
.p2align 0x4
.long 0x2ECC
L_205375:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_205360:
	movl 0x10(%rbp),%ecx
L_205361:
	movl %ecx,0xC0(%rbp)
	movq $0x3E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_205362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_6
.p2align 0x4
L_463901:
L_205376:
	xorl %ecx,%ecx
	jmp L_205361
.p2align 0x4
.long 0x2ECA
L_205362:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205363
L_205364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_205365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205365
.p2align 0x4
.long 0x2ECB
L_205365:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_205363:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0xA8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x2957,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x725,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl doitTree_0
.hidden doitTree_0
doitTree_0:
L_205455:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_205456
L_205577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_205578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205578
.p2align 0x4
.long 0x56E
L_205578:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_205456:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x50(%rbp)
	movq %r13,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_205457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
.long 0x2EE3
L_205457:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205458
L_205575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_205576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205576
.p2align 0x4
.long 0x2EF9
L_205576:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_205458:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x36B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movq $0x13,0x68(%rbp)
	movq $0x12,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_205459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x2EE4
L_205459:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movslq 0x20(%rbp),%rdx
	movq %rdx,0x60(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_463909
L_205460:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_205461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205461
.p2align 0x4
.long 0x2EE5
L_205461:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2155:
	cmpq 0x60(%rbp),%r15
	jnl L_463906
L_205573:
	movq 0x68(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2155
.p2align 0x4
L_463906:
L_205462:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x60(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_205463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205463
.p2align 0x4
.long 0x2EE6
L_205463:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2156:
	cmpq 0x60(%rbp),%r15
	jnl L_463907
L_205572:
	movq 0x70(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2156
.p2align 0x4
L_463907:
L_205464:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205465
L_205570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205571
.p2align 0x4
.long 0x2EF8
L_205571:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_205465:
	movq $0x354D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x80(%rbp)
	movq $0x6,0x88(%rbp)
	movq $0x1D,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_205466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_463909:
L_205574:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EE7
L_205466:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_463923
L_205469:
	decl %ecx
	jo L_463922
L_205471:
.p2align 0x4,,0x7
loop_2157:
	cmpl $0x0,%ecx
	jl L_463920
L_205472:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x14(%rbp)
	movslq %ecx,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x80(%rbp)
	cmpq $0x1,%r11
	jne L_463919
.p2align 0x4,,0x7
L_205477:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_463917
	cmpq $0xEB8,%r14
	je L_463916
	cmpq $0xEB9,%r14
	je L_463915
	cmpq $0xEBA,%r14
	je L_463913
	cmpq $0xEBB,%r14
	je L_463912
	cmpq $0xEBC,%r14
	je L_463910
L_205478:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
L_205479:
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_205480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_463910:
L_205518:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205519
L_205520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_205521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205521
.p2align 0x4
.long 0x2EEB
L_205521:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_205519:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r15
vs_6:
	movq %r15,0x88(%rbp)
	movq $0x351F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_205496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_463912:
L_205517:
	movl 0x14(%rbp),%ecx
	jmp loop_2157
.p2align 0x4
L_463913:
L_205513:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205514
L_205515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_205516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205516
.p2align 0x4
.long 0x2EEB
L_205516:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_205514:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp vs_6
.p2align 0x4
L_463915:
L_205512:
	movl 0x14(%rbp),%ecx
	jmp loop_2157
.p2align 0x4
L_463916:
L_205499:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
L_205500:
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_205501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_463917:
L_205494:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205495
L_205497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_205498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205498
.p2align 0x4
.long 0x2EEB
L_205498:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_205495:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp vs_6
.p2align 0x4
L_463919:
L_205473:
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_205474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_463920:
L_205538:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205539
L_205568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205569
.p2align 0x4
.long 0x2EF7
L_205569:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_205539:
	movq $0x34D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_205540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463922:
L_205470:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463923:
L_205468:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EE9
L_205480:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x10(%rbp)
	jl L_463925
L_205481:
	cmpl $0x2,%r11d
	jne L_463924
L_205484:
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x24(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_205485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_463924:
L_205483:
	movl 0x14(%rbp),%ecx
	jmp loop_2157
.p2align 0x4
L_463925:
L_205493:
	movq (globalObjptr+0x1F30)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EE7
L_205496:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_205483
.p2align 0x4
.long 0x2EE9
L_205501:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x10(%rbp)
	jl L_205493
L_205502:
	cmpl $0x2,%r11d
	jne L_205483
L_205504:
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x24(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_205505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x2EE8
L_205474:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x10(%rbp)
	jl L_205493
L_205475:
	cmpl $0x2,%r11d
	jne L_205477
L_205522:
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x24(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_205523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x2EEE
L_205540:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205541
L_205566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205567
.p2align 0x4
.long 0x2EF6
L_205567:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_205541:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x14(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_205468
L_205543:
	movq $0x391D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x80(%rbp)
	movl %r14d,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_205544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
.long 0x2EE7
L_205485:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205486
L_205490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_205491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205491
.p2align 0x4
.long 0x2EEA
L_205491:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_205486:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movslq 0x24(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_463932
L_205489:
	movq 0x70(%rbp),%r14
	movl $0x1,0x0(%r14,%r15,4)
	jmp L_205483
.p2align 0x4
L_463932:
L_205488:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EE7
L_205505:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205506
L_205509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_205510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205510
.p2align 0x4
.long 0x2EEA
L_205510:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_205506:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movslq 0x24(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_205488
L_205508:
	movq 0x70(%rbp),%r14
	movl $0x1,0x0(%r14,%r15,4)
	jmp L_205483
.p2align 0x4
.long 0x2EEC
L_205523:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205524
L_205534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_205535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205535
.p2align 0x4
.long 0x2EED
L_205535:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_205524:
	movq 0x78(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movslq 0x24(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_205488
L_205526:
	movq 0x68(%rbp),%r14
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x70(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_463941
	cmpq $0xEB8,%r14
	je L_463940
	cmpq $0xEB9,%r14
	je L_463939
	cmpq $0xEBA,%r14
	je L_463938
	cmpq $0xEBB,%r14
	je L_463937
	cmpq $0xEBC,%r14
	je L_463936
L_205527:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	jmp L_205479
.p2align 0x4
L_463936:
L_205533:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp vs_6
.p2align 0x4
L_463937:
L_205532:
	movl 0x14(%rbp),%ecx
	jmp loop_2157
.p2align 0x4
L_463938:
L_205531:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp vs_6
.p2align 0x4
L_463939:
L_205530:
	movl 0x14(%rbp),%ecx
	jmp loop_2157
.p2align 0x4
L_463940:
L_205529:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	jmp L_205500
.p2align 0x4
L_463941:
L_205528:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp vs_6
.p2align 0x4
.long 0x2EEF
L_205544:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205545
L_205564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205565
.p2align 0x4
.long 0x2EF5
L_205565:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_205545:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x391D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_205546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
.long 0x2EF0
L_205546:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x60(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_205547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205547
.p2align 0x4
.long 0x2EF1
L_205547:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2158:
	cmpq 0x60(%rbp),%r15
	jnl L_463945
L_205563:
	movq 0x40(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2158
.p2align 0x4
L_463945:
L_205548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205549
L_205561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_205562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205562
.p2align 0x4
.long 0x2EF4
L_205562:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_205549:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_205470
L_205550:
	movl %r14d,0x0(%r15)
	movl %r14d,0x14(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r13
	movl %r14d,0x0(%r13)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_205468
L_205552:
	cmpl $0x0,%r13d
	jl L_463947
L_205553:
	movl $0x0,0x40(%rbp)
loop_2159:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_463946
L_205554:
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r13
	movq $0x40BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x28,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x293F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x105B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463946:
L_205555:
	movslq 0x40(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x68,%rbp
	leaq (L_205556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doitTree_0
.p2align 0x4
L_463947:
L_205560:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EF2
L_205556:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205557
L_205558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_205559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205559
.p2align 0x4
.long 0x2EF3
L_205559:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_205557:
	incl 0x40(%rbp)
	jmp loop_2159
.text
.p2align 0x4
.globl visitBlockP_0
.hidden visitBlockP_0
visitBlockP_0:
L_205579:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_205680
L_205580:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463952
L_205581:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x5DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_205582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_463952:
L_205680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_205681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205681
.p2align 0x4
.long 0x460
L_205681:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_205581
.p2align 0x4
.long 0x2EFA
L_205582:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205583
L_205678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_205679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205679
.p2align 0x4
.long 0x5
L_205679:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_205583:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x28,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_463954
L_205586:
	movl %r11d,0x80(%rbp)
	movq $0x3EF1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_205587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_463954:
L_205585:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2EFB
L_205587:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205588
L_205676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_205677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205677
.p2align 0x4
.long 0x6
L_205677:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_205588:
	movq 0x60(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_205585
L_205590:
	movl %r14d,0x78(%rbp)
	movq $0x3F03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_205591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x19F3
L_205591:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205592
L_205674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_205675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205675
.p2align 0x4
.long 0x6
L_205675:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_205592:
	movq $0x27DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x50(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_205593:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463984
.p2align 0x4,,0x7
L_205594:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2987,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_463958
L_205595:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_205593
.p2align 0x4
L_463958:
L_205596:
	movq %r13,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_205597:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463983
.p2align 0x4,,0x7
L_205598:
	movq $0x2987,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_463959
L_205599:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_205597
.p2align 0x4
L_463959:
L_205600:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_463978
L_205601:
	movq 0x68(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_205602:
	addq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r13
	je L_463960
L_205603:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_205602
.p2align 0x4
L_463960:
L_205604:
	testq %r15,%r15
	jz L_463977
L_205605:
	cmpq $0x7FFFFFFF,%r15
	ja L_463976
L_205606:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1423,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205607
.p2align 0x4
.long 0x2EFC
L_205607:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,%r15
L_205608:
	movq 0x70(%rbp),%r10
	movq 0x68(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2160:
	cmpq 0x50(%rbp),%r14
	jnl L_463963
.p2align 0x4,,0x7
loop_2163:
	cmpq 0x0(%r11),%r13
	jl L_463962
L_205652:
	cmpq $0x1,%r10
	je L_463961
L_205653:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2163
.p2align 0x4
L_463961:
L_205654:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463962:
L_205655:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2160
.p2align 0x4
L_463963:
L_205609:
	movq $0x11,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x50(%rbp)
L_205610:
	movq 0x60(%rbp),%r13
	movq 0x40(%r13),%r11
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_205585
L_205612:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2161:
	cmpl %ecx,%ebx
	je L_463968
L_205613:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_463967
L_205616:
	movl 0x0(%r15,%r13,4),%r11d
	testl %r11d,%r11d
	jnz L_463965
L_205617:
	incl %ebx
	jo L_463964
L_205619:
	jmp loop_2161
.p2align 0x4
L_463964:
L_205618:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463965:
L_205620:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb length_37
L_205633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_205634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205634
.p2align 0x4
.long 0x19C6
L_205634:
	addq $0xFFFFFFFFFFFFFF98,%rbp
length_37:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_205585
L_205623:
	movl %r13d,0x70(%rbp)
	movq $0x4061,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%r14)
	movq %r15,0x28(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_205624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_463967:
L_205615:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463968:
L_205635:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_205585
L_205637:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2162:
	cmpl %ebx,%ecx
	je L_463972
L_205638:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_205615
L_205640:
	movl 0x0(%r14,%r13,4),%r11d
	testl %r11d,%r11d
	jnz L_463970
L_205641:
	incl %ebx
	jo L_205618
L_205642:
	jmp loop_2162
.p2align 0x4
L_463970:
L_205643:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb length_37
L_205645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_205646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205646
.p2align 0x4
.long 0x19C6
L_205646:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp length_37
.p2align 0x4
L_463972:
L_205647:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205626
L_205649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_205650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205650
.p2align 0x4
.long 0xB9D
L_205650:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_205626:
	movq $0x3A07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq $0x404D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_205627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceLabelVar_0
.p2align 0x4
L_463976:
L_205657:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463977:
L_205658:
	movq (globalObjptr+0x1F58)(%rip),%r14
	xchgq %r14,%r15
	jmp L_205608
.p2align 0x4
L_463978:
L_205659:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x50(%rbp)
	je L_205610
L_205660:
	testq %r13,%r13
	jz L_463981
L_205661:
	cmpq $0x7FFFFFFF,%r13
	ja L_205657
L_205662:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1423,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205663
.p2align 0x4
.long 0x2EFE
L_205663:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,%r15
L_205664:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2164:
	cmpq 0x70(%rbp),%r14
	jnl L_463979
L_205666:
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2164
.p2align 0x4
L_463979:
L_205665:
	movq $0x11,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x50(%rbp)
	jmp L_205610
.p2align 0x4
L_463981:
L_205668:
	movq (globalObjptr+0x1F60)(%rip),%r15
	jmp L_205664
.p2align 0x4
L_463983:
L_205670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205671
.p2align 0x4
.long 0x450
L_205671:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_205598
.p2align 0x4
L_463984:
L_205672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_205673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205673
.p2align 0x4
.long 0x450
L_205673:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_205594
.p2align 0x4
.long 0x2EFD
L_205624:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205626
L_205631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_205632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205632
.p2align 0x4
.long 0xB9D
L_205632:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_205626
.p2align 0x4
.long 0xB78
L_205627:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205628
L_205629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_205630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205630
.p2align 0x4
.long 0x6FB
L_205630:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_205628:
	movq $0x1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3912
.hidden loop_3912
loop_3912:
L_205682:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_205683
L_205695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_205696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205696
.p2align 0x4
.long 0x45C
L_205696:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_205683:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_205684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitBlockP_0
.p2align 0x4
.long 0x5F0
L_205684:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205685
L_205693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_205694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205694
.p2align 0x4
.long 0x638
L_205694:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_205685:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_463989
L_205686:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463989:
L_205687:
	cmpl $0x0,0x30(%rbp)
	jl L_463991
L_205688:
	movl $0x0,0x28(%rbp)
loop_2165:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x28(%rbp)
	jl L_463990
L_205689:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp x_1915
.p2align 0x4
L_463990:
L_205690:
	movslq 0x28(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_205691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3912
.p2align 0x4
L_463991:
L_205692:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x19F7
L_205691:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	incl 0x28(%rbp)
	jmp loop_2165
.text
.p2align 0x4
.globl x_1915
.hidden x_1915
x_1915:
L_205697:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_205698
L_206303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_206304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206304
.p2align 0x4
.long 0x452
L_206304:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_205698:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_205705
L_205699:
	movq 0x8(%r13),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_205700:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0xC,%rax
	ja L_463993
	jmp *jumpTable_675(,%rax,8)
.data
.p2align 0x4
jumpTable_675:
.quad L_464334,L_464332,L_464330,L_205701,L_464327,L_464325,L_464323,L_205701,L_464321,L_464319,L_464317,L_205701,L_464315
.text
.p2align 0x4
L_463993:
L_205701:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x24BA,%rax
	cmpq $0x8A,%rax
	ja L_463994
	jmp *jumpTable_676(,%rax,8)
.data
.p2align 0x4
jumpTable_676:
.quad L_464313,L_464311,L_464309,L_464304,L_464299,L_464294,L_464293,L_464292,L_464291,L_464289,L_464287,L_464285,L_464283,L_464278,L_464273,L_464268,L_464267,L_464266,L_464265,L_464264,L_464261,L_464258,L_464255,L_464252,L_464249,L_464246,L_464243,L_464240,L_464239,L_464238,L_464236,L_464234,L_464232,L_464230,L_464228,L_464226,L_464224,L_464222,L_464220,L_464218,L_464216,L_464214,L_464212,L_464210,L_464208,L_464206,L_464204,L_464202,L_464200,L_464198,L_464196,L_464194,L_464192,L_464190,L_464188,L_464186,L_464184,L_464182,L_464180,L_464178,L_464176,L_464174,L_464172,L_464170,L_464168,L_464166,L_464164,L_464162,L_464160,L_464158,L_464157,L_464156,L_464154,L_464152,L_464150,L_464148,L_464146,L_464144,L_464142,L_464140,L_464138,L_464136,L_464134,L_464132,L_464130,L_464128,L_464126,L_464124,L_464122,L_464120,L_464118,L_464116,L_464114,L_464112,L_464110,L_464108,L_464106,L_464104,L_464102,L_464100,L_464098,L_464096,L_464094,L_464092,L_464090,L_464088,L_464086,L_464084,L_464082,L_464080,L_464078,L_464076,L_464073,L_464071,L_464068,L_464065,L_464062,L_464059,L_464056,L_464053,L_464052,L_464051,L_464050,L_464045,L_464040,L_464035,L_464030,L_464028,L_464026,L_464024,L_464023,L_464022,L_464017,L_464012,L_464007,L_464002,L_464000,L_463998,L_463996
.text
.p2align 0x4
L_463994:
L_205702:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_463995
L_205703:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_463995:
L_205705:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463996:
L_206271:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206272:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_463998:
L_206268:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206269:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464000:
L_206265:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206266:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464002:
L_206254:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464006
L_206255:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206256:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_464005
L_206257:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464003
L_206258:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206256
.p2align 0x4
L_464003:
	movq %r14,%r15
	movq %r13,%r14
L_206260:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206261:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464005:
L_205725:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464006:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206260
.p2align 0x4
L_464007:
L_206243:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464011
L_206244:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206245:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_206246:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464008
L_206247:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206245
.p2align 0x4
L_464008:
	movq %r14,%r15
	movq %r13,%r14
L_206249:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206250:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464011:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206249
.p2align 0x4
L_464012:
L_206232:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464016
L_206233:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206234:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_206235:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464013
L_206236:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206234
.p2align 0x4
L_464013:
	movq %r14,%r15
	movq %r13,%r14
L_206238:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206239:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464016:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206238
.p2align 0x4
L_464017:
L_206221:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464021
L_206222:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206223:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_206224:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464018
L_206225:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206223
.p2align 0x4
L_464018:
	movq %r14,%r15
	movq %r13,%r14
L_206227:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206228:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464021:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206227
.p2align 0x4
L_464022:
L_206220:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1187
.p2align 0x4
L_464023:
L_206219:
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1188
.p2align 0x4
L_464024:
L_206216:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206217:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464026:
L_206213:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206214:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464028:
L_206210:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206211:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464030:
L_206199:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464034
L_206200:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206201:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_206202:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464031
L_206203:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206201
.p2align 0x4
L_464031:
	movq %r14,%r15
	movq %r13,%r14
L_206205:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206206:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464034:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206205
.p2align 0x4
L_464035:
L_206188:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464039
L_206189:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206190:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_206191:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464036
L_206192:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206190
.p2align 0x4
L_464036:
	movq %r14,%r15
	movq %r13,%r14
L_206194:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206195:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464039:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206194
.p2align 0x4
L_464040:
L_206177:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464044
L_206178:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206179:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_206180:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464041
L_206181:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206179
.p2align 0x4
L_464041:
	movq %r14,%r15
	movq %r13,%r14
L_206183:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206184:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464044:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206183
.p2align 0x4
L_464045:
L_206166:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464049
L_206167:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206168:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_206169:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464046
L_206170:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206168
.p2align 0x4
L_464046:
	movq %r14,%r15
	movq %r13,%r14
L_206172:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206173:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464049:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206172
.p2align 0x4
L_464050:
L_206156:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_206157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_464051:
L_206146:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_206147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_464052:
L_206145:
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x2(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x39(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseNonexhaustiveMatch_0
.p2align 0x4
L_464053:
L_206140:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_206141:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206142:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464056:
L_206135:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_206136:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206137:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464059:
L_206130:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_206131:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206132:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464062:
L_206125:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_206126:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206127:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464065:
L_206120:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_205725
L_206121:
	movq 0x8(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206122:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464068:
L_206115:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_206116:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206117:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464071:
L_206112:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movl $0x0,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206113:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464073:
L_206107:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_206108:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206109:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464076:
L_206104:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206105:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464078:
L_206101:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206102:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464080:
L_206098:
	movq 0x0(%r15),%r14
	movb $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206099:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464082:
L_206095:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206096:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464084:
L_206092:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206093:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464086:
L_206089:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206090:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464088:
L_206086:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206087:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464090:
L_206083:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206084:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464092:
L_206080:
	movq 0x0(%r15),%r14
	movb $0x7,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206081:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464094:
L_206077:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206078:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464096:
L_206074:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206075:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464098:
L_206071:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206072:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464100:
L_206068:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206069:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464102:
L_206065:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206066:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464104:
L_206062:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206063:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464106:
L_206059:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206060:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464108:
L_206056:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206057:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464110:
L_206053:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206054:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464112:
L_206050:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206051:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464114:
L_206047:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206048:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464116:
L_206044:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206045:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464118:
L_206041:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206042:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464120:
L_206038:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206039:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464122:
L_206035:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x90)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206036:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464124:
L_206032:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206033:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464126:
L_206029:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206030:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464128:
L_206026:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206027:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464130:
L_206023:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206024:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464132:
L_206020:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206021:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464134:
L_206017:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206018:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464136:
L_206014:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206015:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464138:
L_206011:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206012:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464140:
L_206008:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206009:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464142:
L_206005:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206006:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464144:
L_206002:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA98)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206003:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464146:
L_205999:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA78)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206000:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464148:
L_205996:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205997:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464150:
L_205993:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205994:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464152:
L_205990:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205991:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464154:
L_205987:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205988:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464156:
L_205986:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1190
.p2align 0x4
L_464157:
L_205985:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1191
.p2align 0x4
L_464158:
L_205982:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205983:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464160:
L_205979:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x80)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205980:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464162:
L_205976:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205977:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464164:
L_205973:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205974:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464166:
L_205970:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205971:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464168:
L_205967:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA88)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205968:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464170:
L_205964:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCAA8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205965:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464172:
L_205961:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205962:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464174:
L_205958:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205959:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464176:
L_205955:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205956:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464178:
L_205952:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205953:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464180:
L_205949:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205950:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464182:
L_205946:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205947:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464184:
L_205943:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205944:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464186:
L_205940:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205941:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464188:
L_205937:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205938:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464190:
L_205934:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205935:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464192:
L_205931:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205932:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464194:
L_205928:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x70)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205929:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464196:
L_205925:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xBDB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205926:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464198:
L_205922:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205923:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464200:
L_205919:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205920:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464202:
L_205916:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205917:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464204:
L_205913:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205914:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464206:
L_205910:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205911:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464208:
L_205907:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205908:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464210:
L_205904:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205905:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464212:
L_205901:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205902:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464214:
L_205898:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x60)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205899:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464216:
L_205895:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x7F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205896:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464218:
L_205892:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205893:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464220:
L_205889:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205890:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464222:
L_205886:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205887:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464224:
L_205883:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205884:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464226:
L_205880:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205881:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464228:
L_205877:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205878:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464230:
L_205874:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205875:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464232:
L_205871:
	movq 0x0(%r15),%r14
	movb $0x4,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205872:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464234:
L_205868:
	movq 0x0(%r15),%r14
	movb $0x3,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205869:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464236:
L_205865:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205866:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464238:
L_205864:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_464239:
L_205863:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_464240:
L_205858:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_205859:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205860:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464243:
L_205854:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_464245
L_205855:
	movl %r14d,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205856:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464245:
L_205824:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464246:
L_205848:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
L_205849:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_464248
L_205851:
	movq 0x0(%r11),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205852:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464248:
L_205850:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464249:
L_205843:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_205844:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205845:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464252:
L_205838:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_205839:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205840:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464255:
L_205833:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_205834:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205835:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464258:
L_205828:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_205725
L_205829:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205830:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464261:
L_205823:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_205824
L_205825:
	movl %r14d,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205826:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464264:
L_205822:
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseRedundantMatch_0
.p2align 0x4
L_464265:
L_205821:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resolve_0
.p2align 0x4
L_464266:
L_205811:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_205812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_464267:
L_205801:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_205802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_464268:
L_205790:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464272
L_205791:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_205792:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_205793:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464269
L_205794:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_205792
.p2align 0x4
L_464269:
	movq %r14,%r15
	movq %r13,%r14
L_205796:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205797:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464272:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_205796
.p2align 0x4
L_464273:
L_205779:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464277
L_205780:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_205781:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_205782:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464274
L_205783:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_205781
.p2align 0x4
L_464274:
	movq %r14,%r15
	movq %r13,%r14
L_205785:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205786:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464277:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_205785
.p2align 0x4
L_464278:
L_205768:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464282
L_205769:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_205770:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_205771:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464279
L_205772:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_205770
.p2align 0x4
L_464279:
	movq %r14,%r15
	movq %r13,%r14
L_205774:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464282:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_205774
.p2align 0x4
L_464283:
L_205765:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205766:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464285:
L_205762:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205763:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464287:
L_205759:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205760:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464289:
L_205756:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205757:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464291:
L_205755:
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1194
.p2align 0x4
L_464292:
L_205754:
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1195
.p2align 0x4
L_464293:
L_205749:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1196
.p2align 0x4
L_464294:
L_205738:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464298
L_205739:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_205740:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_205741:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464295
L_205742:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_205740
.p2align 0x4
L_464295:
	movq %r14,%r15
	movq %r13,%r14
L_205744:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205745:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464298:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_205744
.p2align 0x4
L_464299:
L_205727:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464303
L_205728:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_205729:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_205730:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464300
L_205731:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_205729
.p2align 0x4
L_464300:
	movq %r14,%r15
	movq %r13,%r14
L_205733:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205734:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464303:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_205733
.p2align 0x4
L_464304:
L_205715:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464308
L_205716:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_205717:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_205725
L_205718:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464305
L_205719:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_205717
.p2align 0x4
L_464305:
	movq %r14,%r15
	movq %r13,%r14
L_205721:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205722:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464308:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_205721
.p2align 0x4
L_464309:
L_205712:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205713:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464311:
L_205709:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205710:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464313:
L_205706:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205707:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464315:
L_206299:
	movq (globalObjptr+0x838)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206300:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464317:
L_206296:
	movq (globalObjptr+0x830)(%rip),%r14
	movl $0x8,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206297:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464319:
.p2align 0x4,,0x7
L_205751:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_205752:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464321:
L_206292:
	movq (globalObjptr+0x828)(%rip),%r14
	movl $0x3C,0x0(%r14)
	movl $0x140,0x4(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206293:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464323:
L_206289:
	movq (globalObjptr+0x820)(%rip),%r14
	movl $0x3,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206290:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464325:
L_206286:
	movq (globalObjptr+0x818)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206287:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464327:
L_206283:
	movq (globalObjptr+0x810)(%rip),%r14
	movl $0x2710,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206284:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464330:
L_206280:
	movq (globalObjptr+0x808)(%rip),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206281:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464332:
L_206277:
	movq (globalObjptr+0x800)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206278:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
L_464334:
L_206274:
	movq (globalObjptr+0x7F8)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_205705
L_206275:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_205700
.p2align 0x4
.long 0x4B0
L_205750:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_205751
.p2align 0x4
.long 0x4DE
L_206157:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_206158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_206147:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_206148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_205812:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_205813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_205802:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_205803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x466
L_206158:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206159
L_206164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_206165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206165
.p2align 0x4
.long 0x45B
L_206165:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_206159:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_206160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_206148:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206149
L_206154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_206155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206155
.p2align 0x4
.long 0x45B
L_206155:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_206149:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_206150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_205813:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205814
L_205819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_205820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205820
.p2align 0x4
.long 0x45B
L_205820:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_205814:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_205815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_205803:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205804
L_205809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_205810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205810
.p2align 0x4
.long 0x45B
L_205810:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_205804:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_205805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x968
L_206160:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206161
L_206162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_206163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206163
.p2align 0x4
.long 0x52D
L_206163:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_206161:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_206150:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206151
L_206152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_206153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206153
.p2align 0x4
.long 0x52D
L_206153:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_206151:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_205815:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205816
L_205817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_205818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205818
.p2align 0x4
.long 0x52D
L_205818:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_205816:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_205805:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_205806
L_205807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_205808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_205808
.p2align 0x4
.long 0x52D
L_205808:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_205806:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_205750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.text
.p2align 0x4
.globl doitP_1
.hidden doitP_1
doitP_1:
L_206305:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_206306
L_206325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_206326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206326
.p2align 0x4
.long 0x4DF
L_206326:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_206306:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_206307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
.long 0x73A
L_206307:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206308
L_206323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_206324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206324
.p2align 0x4
.long 0x647
L_206324:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_206308:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_464347
L_206309:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15)
	movl $0x1,0x0(%r14)
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_206310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_464347:
L_206322:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x656
L_206310:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r14)
	jne L_206311
L_206321:
	movq 0x10(%rbp),%r15
	movl $0x1,0x0(%r15)
L_206311:
	movq 0x0(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_464350
L_206312:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_464349
L_206313:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_206314:
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x40,%rbp
	leaq (L_206315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doitP_1
.p2align 0x4
L_464349:
L_206318:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464350:
L_206320:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4ED
L_206315:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_206318
L_206316:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_206314
.text
.p2align 0x4
.globl loop_3910
.hidden loop_3910
loop_3910:
L_206327:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_206510
L_206328:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464353
L_206329:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq $0x5DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x48(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x40(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x38(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r15,0x80(%rbp)
	movq %r13,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_206330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_464353:
L_206510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_206511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206511
.p2align 0x4
.long 0x45C
L_206511:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_206329
.p2align 0x4
.long 0x12FC
L_206330:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206331
L_206508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_206509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206509
.p2align 0x4
.long 0xC1B
L_206509:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_206331:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_464355
L_206333:
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x499D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x34E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_206334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_464355:
L_206332:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7FB
L_206334:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206335
L_206506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_206507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206507
.p2align 0x4
.long 0xC1B
L_206507:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_206335:
	movq 0x78(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x5DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_206342
L_206336:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
.p2align 0x4,,0x7
L_206337:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464383
.p2align 0x4,,0x7
L_206338:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r15
	movl 0x0(%r15),%r11d
	testl %r11d,%r11d
	jnz L_464358
L_206339:
	movq 0x80(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x4A57,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq %r13,0x0(%r9)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movl $0x1,0x0(%r15)
	movq 0x8(%r13),%r15
	movq 0x0(%r15),%r11
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r10,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x4A61,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x1B55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_464357
L_206340:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_206337
.p2align 0x4
L_464357:
L_206342:
	addq $0x80,%rbp
	leaq (L_206343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1916
.p2align 0x4
L_464358:
L_206447:
	movq 0x8(%r13),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,%r11
L_206448:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_464382
L_206449:
	movq 0x0(%r11),%r10
	movq %r10,0x98(%rbp)
	cmpq $0x1,%r13
	je L_464381
L_206450:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r11,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0xA0(%rbp)
	cmpq %r11,%r15
	jne L_206355
L_206452:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movl %r15d,%r14d
	movslq %r14d,%r9
	cmpq %r9,%r15
	jne L_206355
L_206454:
	cmpl %r13d,%r14d
	jne L_464378
L_206456:
	testq %r11,%r11
	jnz L_464376
L_206501:
	movq (globalObjptr+0x2020)(%rip),%r15
	movq %r15,0xA8(%rbp)
.p2align 0x4,,0x7
L_206460:
	movq $0x0,0xB0(%rbp)
loop_2170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464375
.p2align 0x4,,0x7
L_206461:
	movq 0xA0(%rbp),%r15
	cmpq %r15,0xB0(%rbp)
	jl L_464360
L_206462:
	movq 0xA8(%rbp),%r15
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_206342
L_206463:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_206337
.p2align 0x4
L_464360:
L_206465:
	movq 0xB0(%rbp),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq 0x90(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq %r9,0xB8(%rbp)
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r8
	movq 0x10(%r9),%rsp
	cmpq %rsp,0x10(%r8)
	jne L_464374
L_206467:
	cmpq $0x1,%r10
	je L_464373
L_206468:
	movq 0x0(%r10),%r13
	movq %r13,0xC0(%rbp)
	cmpq $0x1,%r14
	je L_464372
L_206469:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r13
	je L_206477
L_206470:
	cmpq $0x1,%r15
	je L_206477
L_206471:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_206355
L_206473:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r11,%r13
	jne L_464368
L_206475:
	cmpl %ebx,%ecx
	jne L_206477
L_206480:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2171:
	cmpl %ebx,%ecx
	je L_464365
L_206481:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_464364
L_206483:
	movq 0xC0(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0x0(%r10),%r9
	movq 0x0(%r15,%r13,8),%r8
	movq 0x0(%r8),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r9)
	jne L_464362
L_206488:
	incl %ebx
	jo L_206332
L_206489:
	jmp loop_2171
.p2align 0x4
L_464362:
L_206484:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464363
.p2align 0x4,,0x7
L_206477:
	movq $0x1,%r15
L_206478:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_206479:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xA8(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xB0(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0xB0(%rbp)
	jmp loop_2170
.p2align 0x4
L_464363:
L_206486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_206487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206487
.p2align 0x4
.long 0x2F0F
L_206487:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_206477
.p2align 0x4
L_464364:
L_206427:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464365:
L_206490:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464366
.p2align 0x4,,0x7
L_206491:
	movq 0xC0(%rbp),%r15
	jmp L_206478
.p2align 0x4
L_464366:
L_206492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_206493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206493
.p2align 0x4
.long 0x2F10
L_206493:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_206491
.p2align 0x4
L_464368:
L_206355:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464372:
L_206496:
	movq %r10,%r15
	jmp L_206479
.p2align 0x4
L_464373:
L_206497:
	movq %r14,%r15
	jmp L_206479
.p2align 0x4
L_464374:
L_206466:
	movq (globalObjptr+0x2028)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464375:
L_206498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_206499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206499
.p2align 0x4
.long 0x2F11
L_206499:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_206461
.p2align 0x4
L_464376:
L_206457:
	movq 0xA0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_464377
L_206458:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_206459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206459
.p2align 0x4
.long 0x2F0E
L_206459:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0xA8(%rbp)
	jmp L_206460
.p2align 0x4
L_464377:
L_206442:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464378:
L_206455:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464381:
L_206502:
	movq (globalObjptr+0x7E8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464382:
L_206392:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464383:
L_206503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_206504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206504
.p2align 0x4
.long 0x11CE
L_206504:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_206338
.p2align 0x4
.long 0x12FC
L_206343:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206344
L_206445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_206446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206446
.p2align 0x4
.long 0xC18
L_206446:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_206344:
	movq $0x3263,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_206345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x2EFF
L_206345:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_206346:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_206347
L_206367:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEC0,%r14
	je L_464389
	cmpq $0xEC1,%r14
	je L_464387
L_206347:
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_206348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rewriteTransfer_0
.p2align 0x4
L_464387:
L_206397:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1207,%r15
	jne L_206347
L_206398:
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_206399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_464389:
L_206368:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_206369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
.long 0x2F00
L_206348:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206349
L_206365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_206366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206366
.p2align 0x4
.long 0x2F02
L_206366:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_206349:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_464391
L_206350:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq $0x2461,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x2461,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_206351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_2
.p2align 0x4
L_464391:
L_206364:
	movq 0x58(%rbp),%r14
	movq 0x60(%rbp),%r13
	xchgq %r13,%r15
L_206353:
	movq $0x1B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1DBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_206355
L_206356:
	cmpl $0x0,%r13d
	jl L_464393
L_206357:
	movl $0x0,0x2C(%rbp)
loop_2166:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x2C(%rbp)
	jl L_464392
L_206358:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp x_1916
.p2align 0x4
L_464392:
L_206359:
	movslq 0x2C(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_206360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3910
.p2align 0x4
L_464393:
L_206361:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2F06
L_206399:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206400
L_206443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_206444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206444
.p2align 0x4
.long 0xC1B
L_206444:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_206400:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_206401:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_464397
L_206403:
	movq 0x0(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x88(%rbp)
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_206355
L_206405:
	movl %r13d,0xA0(%rbp)
	movq $0x3A1D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_206406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
L_464397:
L_206402:
	movq (globalObjptr+0x2070)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2F03
L_206369:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
L_206370:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_206347
L_206371:
	movq 0x0(%r11),%r15
L_206372:
	andq $0x3,%r15
	jnz L_206347
L_206373:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movl %r11d,0x48(%rbp)
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_206355
L_206375:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_206355
L_206377:
	cmpl %r11d,%ecx
	jne L_206379
L_206380:
	cmpl $0x0,%r11d
	jl L_464402
L_206381:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2167:
	cmpl 0x48(%rbp),%ecx
	jnl L_206347
L_206383:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x4C(%rbp)
	movslq %ecx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
L_206384:
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_206385
L_206386:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0xEB4,%r15
	je L_464399
L_206385:
	movl 0x4C(%rbp),%ecx
	jmp loop_2167
.p2align 0x4
L_464399:
L_206387:
	movq %r13,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_206388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_464402:
L_206379:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2F01
L_206351:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206352
L_206362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_206363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206363
.p2align 0x4
.long 0x1DFB
L_206363:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_206352:
	movq 0x30(%rbp),%r14
	movq 0x28(%rbp),%r15
	jmp L_206353
.p2align 0x4
.long 0xE15
L_206360:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_2166
.p2align 0x4
.long 0x2F07
L_206406:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x98(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x90(%rbp)
	jne L_206355
L_206408:
	cmpq $0x7FFFFFFF,%rdx
	ja L_206442
L_206409:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_206410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206410
.p2align 0x4
.long 0x2F08
L_206410:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2168:
	cmpq 0x98(%rbp),%r15
	jnl L_464409
L_206440:
	movq 0xA0(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2168
.p2align 0x4
L_464409:
L_206411:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206412
L_206438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_206439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206439
.p2align 0x4
.long 0x2F0D
L_206439:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_206412:
	movq $0x367B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x12,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_206413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
.long 0x2F04
L_206388:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_206389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
.long 0x2F09
L_206413:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_206347
L_206414:
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_206415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
.long 0x11EB
L_206389:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206390
L_206394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_206395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206395
.p2align 0x4
.long 0x2F05
L_206395:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_206390:
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_206391:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_206392
L_206393:
	movq 0x0(%r13),%r15
	movq $0x12B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x0(%r13),%r15
	movq $0x1DE5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r11,0x0(%r13)
	movl 0x4C(%rbp),%ecx
	jmp loop_2167
.p2align 0x4
.long 0x2F0A
L_206415:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x98(%rbp),%rdx
	testq %rdx,%rdx
	jz L_464423
L_206416:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_206417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206417
.p2align 0x4
.long 0x2F0B
L_206417:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x38(%rbp)
L_206418:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_2169:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464422
.p2align 0x4,,0x7
L_206419:
	movq 0x40(%rbp),%r15
	movq 0x98(%rbp),%r13
	cmpq %r13,%r15
	jnl L_464419
L_206425:
	movl %r15d,%r11d
	movslq %r11d,%r15
	movq 0x90(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	cmpq %r13,%r15
	jnb L_206427
L_206428:
	movq 0xA0(%rbp),%r13
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_464417
L_206429:
	cmpq 0x88(%rbp),%r15
	jnb L_206427
L_206431:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r10
	movq %r10,%r14
L_206432:
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_2169
.p2align 0x4
L_464417:
L_206433:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	jmp L_206432
.p2align 0x4
L_464419:
L_206420:
	movq 0x38(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
L_206421:
	movq %r9,%r10
	andq $0x3,%r10
	jnz L_206347
L_206422:
	movq 0x0(%r9),%r10
L_206423:
	andq $0x3,%r10
	jnz L_206347
L_206424:
	movq $0x12B7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x18(%r11),%r14
	movq 0x0(%r14),%r11
	movq $0x1DE5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r14)
	jmp L_206347
.p2align 0x4
L_464422:
L_206434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_206435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206435
.p2align 0x4
.long 0x2F0C
L_206435:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_206419
.p2align 0x4
L_464423:
L_206436:
	movq (globalObjptr+0x2078)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_206418
.text
.p2align 0x4
.globl x_1916
.hidden x_1916
x_1916:
L_206512:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_206513
L_207118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_207119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207119
.p2align 0x4
.long 0x452
L_207119:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_206513:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_206520
L_206514:
	movq 0x8(%r13),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_206515:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0xC,%rax
	ja L_464424
	jmp *jumpTable_677(,%rax,8)
.data
.p2align 0x4
jumpTable_677:
.quad L_464765,L_464763,L_464761,L_206516,L_464758,L_464756,L_464754,L_206516,L_464752,L_464750,L_464748,L_206516,L_464746
.text
.p2align 0x4
L_464424:
L_206516:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x24BA,%rax
	cmpq $0x8A,%rax
	ja L_464425
	jmp *jumpTable_678(,%rax,8)
.data
.p2align 0x4
jumpTable_678:
.quad L_464744,L_464742,L_464740,L_464735,L_464730,L_464725,L_464724,L_464723,L_464722,L_464720,L_464718,L_464716,L_464714,L_464709,L_464704,L_464699,L_464698,L_464697,L_464696,L_464695,L_464692,L_464689,L_464686,L_464683,L_464680,L_464677,L_464674,L_464671,L_464670,L_464669,L_464667,L_464665,L_464663,L_464661,L_464659,L_464657,L_464655,L_464653,L_464651,L_464649,L_464647,L_464645,L_464643,L_464641,L_464639,L_464637,L_464635,L_464633,L_464631,L_464629,L_464627,L_464625,L_464623,L_464621,L_464619,L_464617,L_464615,L_464613,L_464611,L_464609,L_464607,L_464605,L_464603,L_464601,L_464599,L_464597,L_464595,L_464593,L_464591,L_464589,L_464588,L_464587,L_464585,L_464583,L_464581,L_464579,L_464577,L_464575,L_464573,L_464571,L_464569,L_464567,L_464565,L_464563,L_464561,L_464559,L_464557,L_464555,L_464553,L_464551,L_464549,L_464547,L_464545,L_464543,L_464541,L_464539,L_464537,L_464535,L_464533,L_464531,L_464529,L_464527,L_464525,L_464523,L_464521,L_464519,L_464517,L_464515,L_464513,L_464511,L_464509,L_464507,L_464504,L_464502,L_464499,L_464496,L_464493,L_464490,L_464487,L_464484,L_464483,L_464482,L_464481,L_464476,L_464471,L_464466,L_464461,L_464459,L_464457,L_464455,L_464454,L_464453,L_464448,L_464443,L_464438,L_464433,L_464431,L_464429,L_464427
.text
.p2align 0x4
L_464425:
L_206517:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_464426
L_206518:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464426:
L_206520:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464427:
L_207086:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207087:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464429:
L_207083:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207084:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464431:
L_207080:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207081:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464433:
L_207069:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464437
L_207070:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_207071:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_464436
L_207072:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464434
L_207073:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_207071
.p2align 0x4
L_464434:
	movq %r14,%r15
	movq %r13,%r14
L_207075:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207076:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464436:
L_206540:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464437:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_207075
.p2align 0x4
L_464438:
L_207058:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464442
L_207059:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_207060:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_207061:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464439
L_207062:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_207060
.p2align 0x4
L_464439:
	movq %r14,%r15
	movq %r13,%r14
L_207064:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207065:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464442:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_207064
.p2align 0x4
L_464443:
L_207047:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464447
L_207048:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_207049:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_207050:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464444
L_207051:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_207049
.p2align 0x4
L_464444:
	movq %r14,%r15
	movq %r13,%r14
L_207053:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207054:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464447:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_207053
.p2align 0x4
L_464448:
L_207036:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464452
L_207037:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_207038:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_207039:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464449
L_207040:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_207038
.p2align 0x4
L_464449:
	movq %r14,%r15
	movq %r13,%r14
L_207042:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207043:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464452:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_207042
.p2align 0x4
L_464453:
L_207035:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1187
.p2align 0x4
L_464454:
L_207034:
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1188
.p2align 0x4
L_464455:
L_207031:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207032:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464457:
L_207028:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207029:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464459:
L_207025:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207026:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464461:
L_207014:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464465
L_207015:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_207016:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_207017:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464462
L_207018:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_207016
.p2align 0x4
L_464462:
	movq %r14,%r15
	movq %r13,%r14
L_207020:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207021:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464465:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_207020
.p2align 0x4
L_464466:
L_207003:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464470
L_207004:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_207005:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_207006:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464467
L_207007:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_207005
.p2align 0x4
L_464467:
	movq %r14,%r15
	movq %r13,%r14
L_207009:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207010:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464470:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_207009
.p2align 0x4
L_464471:
L_206992:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464475
L_206993:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206994:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_206995:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464472
L_206996:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206994
.p2align 0x4
L_464472:
	movq %r14,%r15
	movq %r13,%r14
L_206998:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206999:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464475:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206998
.p2align 0x4
L_464476:
L_206981:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464480
L_206982:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206983:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_206984:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464477
L_206985:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206983
.p2align 0x4
L_464477:
	movq %r14,%r15
	movq %r13,%r14
L_206987:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206988:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464480:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206987
.p2align 0x4
L_464481:
L_206971:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_206972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_464482:
L_206961:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_206962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_464483:
L_206960:
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x2(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x39(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseNonexhaustiveMatch_0
.p2align 0x4
L_464484:
L_206955:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206956:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206957:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464487:
L_206950:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206951:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206952:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464490:
L_206945:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206946:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206947:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464493:
L_206940:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206941:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206942:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464496:
L_206935:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_206540
L_206936:
	movq 0x8(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206937:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464499:
L_206930:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206931:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206932:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464502:
L_206927:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movl $0x0,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206928:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464504:
L_206922:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206923:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206924:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464507:
L_206919:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206920:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464509:
L_206916:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206917:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464511:
L_206913:
	movq 0x0(%r15),%r14
	movb $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206914:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464513:
L_206910:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206911:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464515:
L_206907:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206908:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464517:
L_206904:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206905:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464519:
L_206901:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206902:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464521:
L_206898:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206899:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464523:
L_206895:
	movq 0x0(%r15),%r14
	movb $0x7,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206896:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464525:
L_206892:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206893:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464527:
L_206889:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206890:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464529:
L_206886:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206887:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464531:
L_206883:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206884:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464533:
L_206880:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206881:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464535:
L_206877:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206878:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464537:
L_206874:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206875:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464539:
L_206871:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206872:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464541:
L_206868:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206869:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464543:
L_206865:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206866:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464545:
L_206862:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206863:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464547:
L_206859:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206860:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464549:
L_206856:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206857:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464551:
L_206853:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206854:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464553:
L_206850:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x90)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206851:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464555:
L_206847:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206848:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464557:
L_206844:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206845:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464559:
L_206841:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206842:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464561:
L_206838:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206839:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464563:
L_206835:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206836:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464565:
L_206832:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206833:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464567:
L_206829:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206830:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464569:
L_206826:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206827:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464571:
L_206823:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206824:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464573:
L_206820:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206821:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464575:
L_206817:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA98)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206818:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464577:
L_206814:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA78)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206815:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464579:
L_206811:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206812:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464581:
L_206808:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206809:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464583:
L_206805:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206806:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464585:
L_206802:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206803:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464587:
L_206801:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1190
.p2align 0x4
L_464588:
L_206800:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1191
.p2align 0x4
L_464589:
L_206797:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206798:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464591:
L_206794:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x80)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206795:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464593:
L_206791:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206792:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464595:
L_206788:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206789:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464597:
L_206785:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206786:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464599:
L_206782:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA88)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206783:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464601:
L_206779:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCAA8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206780:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464603:
L_206776:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206777:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464605:
L_206773:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206774:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464607:
L_206770:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206771:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464609:
L_206767:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206768:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464611:
L_206764:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206765:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464613:
L_206761:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206762:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464615:
L_206758:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206759:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464617:
L_206755:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206756:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464619:
L_206752:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206753:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464621:
L_206749:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206750:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464623:
L_206746:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206747:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464625:
L_206743:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x70)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206744:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464627:
L_206740:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xBDB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206741:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464629:
L_206737:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206738:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464631:
L_206734:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206735:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464633:
L_206731:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206732:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464635:
L_206728:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206729:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464637:
L_206725:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206726:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464639:
L_206722:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206723:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464641:
L_206719:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206720:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464643:
L_206716:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206717:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464645:
L_206713:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x60)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206714:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464647:
L_206710:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x7F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206711:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464649:
L_206707:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206708:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464651:
L_206704:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206705:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464653:
L_206701:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206702:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464655:
L_206698:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206699:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464657:
L_206695:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206696:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464659:
L_206692:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206693:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464661:
L_206689:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206690:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464663:
L_206686:
	movq 0x0(%r15),%r14
	movb $0x4,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206687:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464665:
L_206683:
	movq 0x0(%r15),%r14
	movb $0x3,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206684:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464667:
L_206680:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206681:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464669:
L_206679:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_464670:
L_206678:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_464671:
L_206673:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206674:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206675:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464674:
L_206669:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_464676
L_206670:
	movl %r14d,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206671:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464676:
L_206639:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464677:
L_206663:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
L_206664:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_464679
L_206666:
	movq 0x0(%r11),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206667:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464679:
L_206665:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464680:
L_206658:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206659:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206660:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464683:
L_206653:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206654:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206655:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464686:
L_206648:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206649:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206650:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464689:
L_206643:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_206540
L_206644:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206645:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464692:
L_206638:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_206639
L_206640:
	movl %r14d,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206641:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464695:
L_206637:
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseRedundantMatch_0
.p2align 0x4
L_464696:
L_206636:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resolve_0
.p2align 0x4
L_464697:
L_206626:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_206627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_464698:
L_206616:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_206617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_464699:
L_206605:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464703
L_206606:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206607:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_206608:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464700
L_206609:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206607
.p2align 0x4
L_464700:
	movq %r14,%r15
	movq %r13,%r14
L_206611:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206612:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464703:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206611
.p2align 0x4
L_464704:
L_206594:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464708
L_206595:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206596:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_206597:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464705
L_206598:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206596
.p2align 0x4
L_464705:
	movq %r14,%r15
	movq %r13,%r14
L_206600:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206601:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464708:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206600
.p2align 0x4
L_464709:
L_206583:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464713
L_206584:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206585:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_206586:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464710
L_206587:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206585
.p2align 0x4
L_464710:
	movq %r14,%r15
	movq %r13,%r14
L_206589:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206590:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464713:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206589
.p2align 0x4
L_464714:
L_206580:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206581:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464716:
L_206577:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206578:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464718:
L_206574:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206575:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464720:
L_206571:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206572:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464722:
L_206570:
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1194
.p2align 0x4
L_464723:
L_206569:
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1195
.p2align 0x4
L_464724:
L_206564:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1196
.p2align 0x4
L_464725:
L_206553:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464729
L_206554:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206555:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_206556:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464726
L_206557:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206555
.p2align 0x4
L_464726:
	movq %r14,%r15
	movq %r13,%r14
L_206559:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206560:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464729:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206559
.p2align 0x4
L_464730:
L_206542:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464734
L_206543:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206544:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_206545:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464731
L_206546:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206544
.p2align 0x4
L_464731:
	movq %r14,%r15
	movq %r13,%r14
L_206548:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206549:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464734:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206548
.p2align 0x4
L_464735:
L_206530:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_464739
L_206531:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_206532:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_206540
L_206533:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_464736
L_206534:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_206532
.p2align 0x4
L_464736:
	movq %r14,%r15
	movq %r13,%r14
L_206536:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206537:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464739:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_206536
.p2align 0x4
L_464740:
L_206527:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206528:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464742:
L_206524:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206525:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464744:
L_206521:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206522:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464746:
L_207114:
	movq (globalObjptr+0x838)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207115:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464748:
L_207111:
	movq (globalObjptr+0x830)(%rip),%r14
	movl $0x8,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207112:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464750:
.p2align 0x4,,0x7
L_206566:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_206567:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464752:
L_207107:
	movq (globalObjptr+0x828)(%rip),%r14
	movl $0x3C,0x0(%r14)
	movl $0x140,0x4(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207108:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464754:
L_207104:
	movq (globalObjptr+0x820)(%rip),%r14
	movl $0x3,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207105:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464756:
L_207101:
	movq (globalObjptr+0x818)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207102:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464758:
L_207098:
	movq (globalObjptr+0x810)(%rip),%r14
	movl $0x2710,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207099:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464761:
L_207095:
	movq (globalObjptr+0x808)(%rip),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207096:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464763:
L_207092:
	movq (globalObjptr+0x800)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207093:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
L_464765:
L_207089:
	movq (globalObjptr+0x7F8)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_206520
L_207090:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_206515
.p2align 0x4
.long 0x4B0
L_206565:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_206566
.p2align 0x4
.long 0x4DE
L_206972:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_206973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_206962:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_206963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_206627:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_206628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_206617:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_206618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x466
L_206973:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206974
L_206979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_206980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206980
.p2align 0x4
.long 0x45B
L_206980:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_206974:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_206975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_206963:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206964
L_206969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_206970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206970
.p2align 0x4
.long 0x45B
L_206970:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_206964:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_206965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_206628:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206629
L_206634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_206635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206635
.p2align 0x4
.long 0x45B
L_206635:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_206629:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_206630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_206618:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206619
L_206624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_206625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206625
.p2align 0x4
.long 0x45B
L_206625:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_206619:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_206620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x968
L_206975:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206976
L_206977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_206978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206978
.p2align 0x4
.long 0x52D
L_206978:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_206976:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_206965:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206966
L_206967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_206968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206968
.p2align 0x4
.long 0x52D
L_206968:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_206966:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_206630:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206631
L_206632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_206633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206633
.p2align 0x4
.long 0x52D
L_206633:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_206631:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_206620:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_206621
L_206622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_206623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_206623
.p2align 0x4
.long 0x52D
L_206623:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_206621:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_206565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.text
.p2align 0x4
.globl rewriteTransfer_0
.hidden rewriteTransfer_0
rewriteTransfer_0:
L_207120:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_207489
L_207121:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464781
L_207123:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_207124
L_207125:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEC0,%r14
	je L_464779
	cmpq $0xEC1,%r14
	je L_464777
L_207124:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464777:
L_207127:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1207,%r15
	jne L_207124
L_207128:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x78(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x70(%rbp)
	movq $0x5DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r14,0x88(%rbp)
	movq %r13,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_464779:
L_207126:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	jmp rewriteGoto_0
.p2align 0x4
L_464781:
L_207489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_207490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207490
.p2align 0x4
.long 0x460
L_207490:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_207123
.p2align 0x4
.long 0x7FB
L_207129:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207130
L_207487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_207488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207488
.p2align 0x4
.long 0x804
L_207488:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_207130:
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r14),%r15
L_207131:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_464784
L_207133:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x98(%rbp)
	movl %r15d,%r13d
	movl %r13d,0xA0(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_464783
L_207136:
	movq $0x3A1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	movl %r13d,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
L_464783:
L_207135:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464784:
L_207132:
	movq (globalObjptr+0x2068)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2F12
L_207137:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xA4(%rbp)
	movslq %r13d,%r11
	movq %r11,0xB0(%rbp)
	cmpq %r11,%r14
	jne L_207135
L_207139:
	cmpl $0x0,0xA0(%rbp)
	jl L_464811
L_207140:
	movq $0x2,0xB8(%rbp)
	movl $0x0,0xC0(%rbp)
.p2align 0x4,,0x7
loop_2172:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464810
.p2align 0x4,,0x7
L_207141:
	movl 0xC0(%rbp),%r14d
	cmpl 0xA0(%rbp),%r14d
	jnl L_464790
L_207475:
	movslq %r14d,%r15
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_464789
	cmpq $0x2,%r14
	je L_464787
L_207476:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	cmpq $0x1,0x0(%r13)
	jne L_464786
L_207479:
	movq $0x27B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_207478:
	movq %r15,0xB8(%rbp)
	incl 0xC0(%rbp)
	jmp loop_2172
.p2align 0x4
L_464786:
L_207477:
	movq $0x1,%r15
	jmp L_207478
.p2align 0x4
L_464787:
L_207481:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	cmpq $0x1,%r15
	je L_464788
L_207482:
	movq 0x0(%r15),%r13
	movq $0x27B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	jmp L_207478
.p2align 0x4
L_464788:
L_207483:
	movq $0x2,%r15
	jmp L_207478
.p2align 0x4
L_464789:
L_207480:
	movq $0x1,%r15
	jmp L_207478
.p2align 0x4
L_464790:
L_207142:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_464806
	cmpq $0x2,%r13
	je L_464805
L_207143:
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x50(%rbp)
	cmpq $0x1,%r11
	je L_464799
L_207144:
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_207135
L_207146:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2173:
	cmpl %ebx,%ecx
	je L_464796
L_207147:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_464795
L_207150:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r11),%r14
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r10
	cmpq %r10,0x10(%r14)
	je L_464792
L_207151:
	incl %ebx
	jo L_464791
L_207153:
	jmp loop_2173
.p2align 0x4
L_464791:
L_207152:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464792:
L_207154:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207155
L_207169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_207170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207170
.p2align 0x4
.long 0x2F16
L_207170:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_207155:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_207135
L_207157:
	movl %r13d,0x90(%rbp)
	movq $0x4003,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_207158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_464795:
L_207149:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464796:
L_207171:
	cmpq $0x1,0x18(%rbp)
	je L_464797
L_207172:
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_464797:
L_207175:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464799:
L_207176:
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_207135
L_207178:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2174:
	cmpl %ebx,%ecx
	je L_464803
L_207179:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_207149
L_207181:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r14
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r10
	cmpq %r10,0x10(%r14)
	je L_464801
L_207182:
	incl %ebx
	jo L_207152
L_207183:
	jmp loop_2174
.p2align 0x4
L_464801:
L_207184:
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
doit_28:
	movq $0x2,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_464803:
L_207208:
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_207209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_15
.p2align 0x4
L_464805:
L_207470:
	movq $0x2,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_464806:
L_207271:
	movq 0xB0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_464809
L_207272:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207273
.p2align 0x4
.long 0x2F32
L_207273:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x60(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2178:
	cmpq 0xB0(%rbp),%r15
	jnl L_464807
L_207468:
	movq 0x60(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2178
.p2align 0x4
L_464807:
L_207274:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207275
L_207466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207467
.p2align 0x4
.long 0x2F5C
L_207467:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_207275:
	movq $0x320D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_207276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMap_0
.p2align 0x4
L_464809:
L_207257:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464810:
L_207484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_207485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207485
.p2align 0x4
.long 0x2F5D
L_207485:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_207141
.p2align 0x4
L_464811:
L_207486:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2F13
L_207158:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq %r15,0x18(%rbp)
	movq %r14,0x10(%rbp)
L_207159:
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_207160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rewriteGoto_0
.p2align 0x4
.long 0x2F13
L_207173:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq %r15,0x18(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_207159
.p2align 0x4
.long 0x2F17
L_207185:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207186
L_207206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207207
.p2align 0x4
.long 0x2F20
L_207207:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207186:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207187
.p2align 0x4
.long 0x2F18
L_207187:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2175:
	cmpq $0x1,%r15
	jnl L_464813
L_207205:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2175
.p2align 0x4
L_464813:
L_207188:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207189
L_207203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207204
.p2align 0x4
.long 0x2F1F
L_207204:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207189:
	movq 0x18(%rbp),%r15
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x240F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpl $0x1,0xA4(%rbp)
	je L_464814
L_207190:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x88,%rbp
	leaq (L_207191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_464814:
L_207202:
	movq $0x1,%r15
L_207197:
	movq $0x1D83,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x27B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
L_207162:
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_207163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1916
.p2align 0x4
.long 0x2F21
L_207209:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207210
L_207269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207270
.p2align 0x4
.long 0x2F31
L_207270:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_207210:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_207135
L_207212:
	movl %r13d,0xC8(%rbp)
	movq $0x3F0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x20(%r15)
	addq $0x30,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_207213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x168D
L_207471:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207472
L_207473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_207474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207474
.p2align 0x4
.long 0x168E
L_207474:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_207472:
	movq $0x27B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x80(%rbp)
	jmp L_207162
.p2align 0x4
.long 0x2F33
L_207276:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,0x18(%rbp)
	je L_464826
L_207277:
	movq 0xB0(%rbp),%rdx
	testq %rdx,%rdx
	jz L_464825
L_207278:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207279
.p2align 0x4
.long 0x2F34
L_207279:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x30(%rbp)
L_207280:
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_2179:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464824
.p2align 0x4,,0x7
L_207281:
	movq 0x68(%rbp),%r15
	movq 0xB0(%rbp),%r13
	cmpq %r13,%r15
	jnl L_464823
L_207454:
	movl %r15d,%r11d
	movslq %r11d,%r15
	movq 0xA8(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	cmpq %r13,%r15
	jnb L_207149
L_207456:
	movq 0x60(%rbp),%r13
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_464821
L_207457:
	cmpq 0x98(%rbp),%r15
	jnb L_207149
L_207459:
	movq 0x90(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r10
	movq %r10,%r14
L_207460:
	movq 0x30(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2179
.p2align 0x4
L_464821:
L_207461:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	jmp L_207460
.p2align 0x4
L_464823:
L_207282:
	movq 0x30(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x88(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r14,0x0(%r9)
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x4A5F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq 0x80(%rbp),%r8
	movq %r8,0x0(%r9)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r11,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r10,%r11,1)
	movq %r8,0x0(%r14)
	movq $0x1,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_464824:
L_207462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207463
.p2align 0x4
.long 0x2F5C
L_207463:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_207281
.p2align 0x4
L_464825:
L_207464:
	movq (globalObjptr+0x2048)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_207280
.p2align 0x4
L_464826:
L_207465:
	movq $0x1,%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
L_207296:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_207135
L_207298:
	cmpl 0xA4(%rbp),%r11d
	je L_464828
L_207299:
	cmpq $0x1,%r15
	je L_464827
L_207300:
	movq %r15,0x20(%rbp)
doit_29:
	movq $0x2,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_464827:
L_207305:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x88,%rbp
	leaq (L_207306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_464828:
L_207313:
	movq $0x1,0x20(%rbp)
	jmp doit_29
.p2align 0x4
.long 0x2F14
L_207160:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_464830
L_207161:
	movq %r15,0x80(%rbp)
	jmp L_207162
.p2align 0x4
L_464830:
L_207164:
	movq $0x2,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x2F19
L_207191:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207192
L_207200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_207201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207201
.p2align 0x4
.long 0x2F1E
L_207201:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_207192:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0xD53
L_207163:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2F22
L_207213:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207214
L_207267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207268
.p2align 0x4
.long 0x2F30
L_207268:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_207214:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_207135
L_207216:
	movq $0x3FE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	movl %r13d,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_207217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x2F35
L_207283:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rewriteGoto_0
.p2align 0x4
.long 0x2F3A
L_207301:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207302
L_207303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_207304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207304
.p2align 0x4
.long 0x2F3B
L_207304:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_207302:
	movq $0x240F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D83,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x27B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	jmp L_207162
.p2align 0x4
.long 0x2F3A
L_207306:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207307
L_207311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_207312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207312
.p2align 0x4
.long 0x2F15
L_207312:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_207307:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x2F14
L_207165:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207166
L_207167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_207168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207168
.p2align 0x4
.long 0x2F15
L_207168:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_207166:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x27B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	jmp L_207162
.p2align 0x4
.long 0x2F1A
L_207193:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x2,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x2F23
L_207217:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207218
L_207265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207266
.p2align 0x4
.long 0x2F25
L_207266:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_207218:
	movq $0x37A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_207219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x2F36
L_207284:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_464872
L_207285:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
L_207286:
	movq %r14,%r15
	andq $0x3,%r15
	jnz x_677
L_207329:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEC1,%r15
	jne x_677
L_207330:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1207,%r14
	jne x_1917
L_207331:
	movq 0x0(%r11),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movl %ecx,0x60(%rbp)
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_207135
L_207333:
	decl %ecx
	jo L_207152
L_207334:
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
loop_2180:
	cmpl $0x0,%ecx
	jl L_464842
L_207335:
	movl %ecx,%r15d
	decl %r15d
	movslq %ecx,%r14
	movq 0x68(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq 0x10(%r11),%r9
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_464841
L_207336:
	cmpq $0x1,%r10
	je L_464840
L_207337:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r10)
	jne L_464839
L_207340:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r14
	shrq $0x1,%r14
	cmpq $0xEB6,%r14
	jne L_464838
L_207342:
	movq 0x0(%r9),%r14
	movq %r14,0x70(%rbp)
	movl %r15d,%ecx
	jmp loop_2180
.p2align 0x4
L_464838:
L_207341:
	movq $0x1,0x70(%rbp)
	movl %r15d,%ecx
	jmp loop_2180
.p2align 0x4
L_464839:
	movl %r15d,%ecx
L_207339:
	jmp loop_2180
.p2align 0x4
L_464840:
	movl %r15d,%ecx
	jmp L_207339
.p2align 0x4
L_464841:
L_207344:
	movq $0x1,0x70(%rbp)
	movl %r15d,%ecx
	jmp loop_2180
.p2align 0x4
L_464842:
L_207345:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207347
L_207451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207452
.p2align 0x4
.long 0x2F5B
L_207452:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207347:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_207348
L_207349:
	movq 0x10(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	jne L_464865
L_207351:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_464864
L_207352:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x18(%rbp)
	cmpq %r11,%r14
	jne L_207135
L_207354:
	testq %r11,%r11
	jz L_464862
L_207355:
	cmpq $0x7FFFFFFF,%r11
	ja L_207257
L_207356:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207357
L_207446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207447
.p2align 0x4
.long 0x2F46
L_207447:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207357:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	movq 0x18(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207358
.p2align 0x4
.long 0x2F46
L_207358:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x60(%rbp)
L_207359:
	movq $0x0,0x70(%rbp)
loop_2181:
	movq 0x18(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_464859
L_207360:
	movq 0x60(%rbp),%r15
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_464843
L_207361:
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_464843:
L_207423:
	movq $0x1,0x18(%rbp)
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
L_207375:
	movq $0x27B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_207376:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464858
.p2align 0x4,,0x7
L_207377:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF63,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2979,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_464844
L_207378:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_207376
.p2align 0x4
L_464844:
L_207379:
	movq %r13,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_207380:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464857
.p2align 0x4,,0x7
L_207381:
	movq $0x2979,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_464845
L_207382:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_207380
.p2align 0x4
L_464845:
L_207383:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_464852
L_207384:
	movq 0x30(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_207385:
	addq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r13
	je L_464846
L_207386:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_207385
.p2align 0x4
L_464846:
L_207387:
	testq %r15,%r15
	jz L_464851
L_207388:
	cmpq $0x7FFFFFFF,%r15
	ja L_207257
L_207389:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207390
.p2align 0x4
.long 0x2F4C
L_207390:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,%r15
L_207391:
	movq 0x38(%rbp),%r10
	movq 0x30(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2182:
	cmpq 0x20(%rbp),%r14
	jnl L_464849
.p2align 0x4,,0x7
loop_2183:
	cmpq 0x0(%r11),%r13
	jl L_464848
L_207394:
	cmpq $0x1,%r10
	je L_464847
L_207395:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2183
.p2align 0x4
L_464847:
L_207396:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_464848:
L_207397:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2182
.p2align 0x4
L_464849:
L_207392:
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_207296
.p2align 0x4
L_464851:
L_207399:
	movq (globalObjptr+0x2058)(%rip),%r14
	xchgq %r14,%r15
	jmp L_207391
.p2align 0x4
L_464852:
L_207400:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x20(%rbp)
	je L_464856
L_207401:
	testq %r13,%r13
	jz L_464855
L_207402:
	cmpq $0x7FFFFFFF,%r13
	ja L_207257
L_207403:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207404
.p2align 0x4
.long 0x2F1F
L_207404:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,%r15
L_207405:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2184:
	cmpq 0x38(%rbp),%r14
	jnl L_464853
L_207407:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2184
.p2align 0x4
L_464853:
L_207406:
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_207296
.p2align 0x4
L_464855:
L_207409:
	movq (globalObjptr+0x2060)(%rip),%r15
	jmp L_207405
.p2align 0x4
L_464856:
L_207410:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_207296
.p2align 0x4
L_464857:
L_207411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207412
.p2align 0x4
.long 0x2F4D
L_207412:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_207381
.p2align 0x4
L_464858:
L_207413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207414
.p2align 0x4
.long 0x2F4D
L_207414:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_207377
.p2align 0x4
L_464859:
L_207424:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x88(%rbp)
	movq %r11,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_464862:
L_207449:
	movq (globalObjptr+0x2050)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_207359
.p2align 0x4
L_464864:
L_207450:
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%rbp),%r15
	jmp L_207375
.p2align 0x4
L_464865:
L_207348:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_207296
.p2align 0x4
x_1917:
x_677:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_207135
L_207288:
	testl %r13d,%r13d
	jz L_464870
L_207289:
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_464870:
L_207318:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0xB0,%rbp
	leaq (L_207319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_464872:
L_207453:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%rbp)
	xchgq %r14,%r15
	jmp L_207296
.p2align 0x4
.long 0x2F19
L_207308:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x2,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_207309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x2F1B
L_207194:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x88,%rbp
	leaq (L_207195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addNewBlock_0
.p2align 0x4
.long 0x2F24
L_207219:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	jne L_207135
L_207221:
	testq %rdx,%rdx
	jz L_464880
L_207222:
	cmpq $0x7FFFFFFF,%rdx
	ja L_207257
L_207223:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1493,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207224
.p2align 0x4
.long 0x2F25
L_207224:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x30(%rbp)
L_207225:
	movq $0x0,0x68(%rbp)
loop_2176:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x68(%rbp)
	jl L_464878
L_207226:
	movq 0x30(%rbp),%r15
	movq $0x96F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xB0(%rbp),%rdx
	testq %rdx,%rdx
	jz L_464877
L_207227:
	cmpq $0x7FFFFFFF,%rdx
	ja L_207257
L_207228:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207229
.p2align 0x4
.long 0x2F26
L_207229:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x48(%rbp)
L_207230:
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_2177:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_464875
.p2align 0x4,,0x7
L_207231:
	movq 0x58(%rbp),%r15
	cmpq 0xB0(%rbp),%r15
	jnl L_464874
L_207250:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0xA8(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq 0x50(%rbp),%r15
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_464873
L_207251:
	movq $0x1,%r15
L_207252:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_2177
.p2align 0x4
L_464873:
L_207253:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r14
	jmp L_207252
.p2align 0x4
L_464874:
L_207232:
	movq 0x48(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x38(%rbp),%r14
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_464875:
L_207254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_207255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207255
.p2align 0x4
.long 0x2F2E
L_207255:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_207231
.p2align 0x4
L_464877:
L_207258:
	movq (globalObjptr+0x2008)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_207230
.p2align 0x4
L_464878:
L_207259:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (x_676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_464880:
L_207264:
	movq (globalObjptr+0x2040)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_207225
.p2align 0x4
.long 0x2F47
L_207362:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2F52
L_207425:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2F37
L_207290:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207291
L_207316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207317
.p2align 0x4
.long 0x2F3F
L_207317:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207291:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x28,%r12
	movl 0x18(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x2F40
L_207319:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207320
L_207327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207328
.p2align 0x4
.long 0x2F45
L_207328:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207320:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x28,%r12
	movl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x2F3C
L_207309:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x88,%rbp
	leaq (L_207310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addNewBlock_0
.p2align 0x4
.long 0x2F1C
L_207195:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207196
L_207198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_207199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207199
.p2align 0x4
.long 0x2F1D
L_207199:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_207196:
	movq 0x38(%rbp),%r15
	jmp L_207197
.p2align 0x4
.long 0x2F27
L_207233:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207234
L_207248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207249
.p2align 0x4
.long 0x2F2D
L_207249:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207234:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x4A5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x80(%rbp),%r10
	movq %r10,0x0(%r13)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	cmpq $0x1,0x18(%rbp)
	je L_207175
L_207235:
	movq $0x1,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x2F2F
x_676:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r15),%r14
L_207260:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_464887
L_207262:
	movq 0x0(%r14),%r15
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2176
.p2align 0x4
L_464887:
L_207261:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2F48
L_207363:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207364
L_207421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207422
.p2align 0x4
.long 0x2F51
L_207422:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207364:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_207135
L_207366:
	movl %r13d,0xB8(%rbp)
	movq $0x3EE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x2F53
L_207426:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207427
L_207444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207445
.p2align 0x4
.long 0x2F5A
L_207445:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207427:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA8(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x90(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_207135
L_207429:
	movl %r13d,0xC0(%rbp)
	movq $0x3EE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_207430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x2F38
L_207292:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addNewBlock_0
.p2align 0x4
.long 0x2F41
L_207321:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x2,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x2F3D
L_207310:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp doit_29
.p2align 0x4
.long 0x2F28
L_207236:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rewriteGoto_0
.p2align 0x4
.long 0x2F49
L_207367:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207368
L_207419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207420
.p2align 0x4
.long 0x2F50
L_207420:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207368:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_207135
L_207370:
	movl %r13d,0xB8(%rbp)
	movq $0x3FC1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x2F54
L_207430:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207431
L_207442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_207443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207443
.p2align 0x4
.long 0x2F59
L_207443:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_207431:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_207135
L_207433:
	movl %r13d,0xC0(%rbp)
	movq $0x3FC1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_207434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x2F39
L_207293:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207294
L_207314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207315
.p2align 0x4
.long 0x2F3E
L_207315:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207294:
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r15
	movl 0x18(%rbp),%ecx
L_207295:
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x28,%r12
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r13,%r15
	jmp L_207296
.p2align 0x4
.long 0x2F42
L_207322:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addNewBlock_0
.p2align 0x4
.long 0x2F29
L_207237:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r13
	je L_464897
L_207238:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_207239:
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addNewBlock_0
.p2align 0x4
L_464897:
L_207241:
	movq $0x2,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0x2F4A
L_207371:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207372
L_207417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207418
.p2align 0x4
.long 0x2F4F
L_207418:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207372:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB0,%rbp
	leaq (L_207373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addNewBlock_0
.p2align 0x4
.long 0x2F55
L_207434:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207435
L_207440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_207441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207441
.p2align 0x4
.long 0x2F58
L_207441:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_207435:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xB8,%rbp
	leaq (L_207436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addNewBlock_0
.p2align 0x4
.long 0x2F43
L_207323:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207324
L_207325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207326
.p2align 0x4
.long 0x2F44
L_207326:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207324:
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
	movl 0x30(%rbp),%ecx
	jmp L_207295
.p2align 0x4
.long 0x2F2A
L_207240:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp doit_28
.p2align 0x4
.long 0x2F29
L_207242:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_207243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x2F4B
L_207373:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207374
L_207415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207416
.p2align 0x4
.long 0x2F4E
L_207416:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207374:
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x60(%rbp),%r15
	jmp L_207375
.p2align 0x4
.long 0x2F56
L_207436:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207437
L_207438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_207439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207439
.p2align 0x4
.long 0x2F57
L_207439:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_207437:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_2181
.p2align 0x4
.long 0x2F2B
L_207243:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_207244
L_207245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_207246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_207246
.p2align 0x4
.long 0x2F2C
L_207246:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_207244:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r15
	jmp L_207239
