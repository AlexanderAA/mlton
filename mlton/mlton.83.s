/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:30 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_2000
.hidden x_2000
x_2000:
L_246391:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_246392
L_246496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_246497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246497
.p2align 0x4
.long 0x45C
L_246497:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_246392:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x18(%rbp)
	cmpq $0x1,%r13
	je L_481044
L_246393:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_246394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_481044:
L_246475:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_246476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x655
L_246394:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246395
L_246473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246474
.p2align 0x4
.long 0x4DF
L_246474:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246395:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_246402
L_246396:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_246397:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106D,%r13
	je L_481052
L_246398:
	cmpq $0x1,%r15
	je L_481046
L_246399:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x30(%rbp)
	jmp L_246397
.p2align 0x4
L_481046:
L_246400:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246402
L_246466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246467
.p2align 0x4
.long 0x4DF
L_246467:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246402:
	movq $0x1E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_845:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481048
L_246403:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r11
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_481047
L_246404:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	movq %r11,%r15
L_246405:
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_246406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peekStrid_0
.p2align 0x4
L_481047:
L_246464:
	movq %r11,%r15
L_246411:
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_246412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peekStrid_0
.p2align 0x4
L_481048:
L_246465:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
L_246427:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x1,%r15
	je L_481049
L_246428:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x20(%rbp)
L_246429:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_246430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481049:
L_246459:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_246447:
	testl %ecx,%ecx
	jz L_481050
L_246448:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_246449:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_246419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_481050:
L_246450:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_246449
.p2align 0x4
L_481052:
L_246468:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246469
L_246470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_246471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246471
.p2align 0x4
.long 0x659
L_246471:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_246469:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_845
.p2align 0x4
.long 0x4DD
L_246476:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246477
L_246494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_246495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246495
.p2align 0x4
.long 0x4AF
L_246495:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_246477:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_246484
L_246478:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_246479:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106D,%r13
	je L_481059
L_246480:
	cmpq $0x1,%r15
	je L_481056
L_246481:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_246479
.p2align 0x4
L_481056:
L_246482:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246484
L_246487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_246488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246488
.p2align 0x4
.long 0x4AF
L_246488:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_246484:
	movq $0x1E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_846:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481057
L_246485:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r13
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x8(%r15)
	movq %r13,%r15
L_246414:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481057:
L_246416:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_246417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_16
.p2align 0x4
L_481059:
L_246489:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246490
L_246491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246492
.p2align 0x4
.long 0x65A
L_246492:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_246490:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_846
.p2align 0x4
.long 0x656
L_246406:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246407
L_246462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_246463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246463
.p2align 0x4
.long 0x658
L_246463:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_246407:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_481064
L_246408:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_246411
L_246409:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_246405
.p2align 0x4
L_481064:
L_246422:
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_246423:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481066
.p2align 0x4,,0x7
L_246424:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_481065
L_246425:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_246423
.p2align 0x4
L_481065:
L_246426:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,%r15
	jmp L_246427
.p2align 0x4
L_481066:
L_246460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246461
.p2align 0x4
.long 0x4DF
L_246461:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_246424
.p2align 0x4
.long 0x789
L_246412:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_246416
L_246413:
	jmp L_246414
.p2align 0x4
.long 0x4A6
L_246430:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246431
L_246457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246458
.p2align 0x4
.long 0x638
L_246458:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246431:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_481069
L_246432:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_246429
.p2align 0x4
L_481069:
L_246433:
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_246434:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481071
.p2align 0x4,,0x7
L_246435:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_481070
L_246436:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_246434
.p2align 0x4
L_481070:
L_246437:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_246438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481071:
L_246455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246456
.p2align 0x4
.long 0x638
L_246456:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_246435
.p2align 0x4
.long 0x1
L_246419:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_246417:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246418
L_246420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246421
.p2align 0x4
.long 0x4E2
L_246421:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_246418:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_246419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x63A
L_246438:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_246439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x518
L_246439:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246440
L_246453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246454
.p2align 0x4
.long 0x4EA
L_246454:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_246440:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246441:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_481076
L_246443:
	cmpq $0x1,%r14
	je L_481074
L_246444:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_246441
.p2align 0x4
L_481074:
L_246445:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246446
L_246451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246452
.p2align 0x4
.long 0x464
L_246452:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246446:
	movq 0x28(%rbp),%r15
	movl 0x18(%rbp),%ecx
	jmp L_246447
.p2align 0x4
L_481076:
L_246442:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1995
.hidden x_1995
x_1995:
L_246498:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_246499
L_246555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_246556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246556
.p2align 0x4
.long 0x460
L_246556:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_246499:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481096
L_246500:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_246501:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481095
.p2align 0x4,,0x7
L_246502:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481094
L_246503:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x18(%r11),%r13
	movq 0x20(%r11),%r10
	movq $0x1119,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x2695,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481078
L_246504:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_246501
.p2align 0x4
L_481078:
L_246505:
	movq %r15,0x10(%rbp)
L_246506:
	movq 0x0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481093
L_246507:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246508:
	incl %ecx
	jo L_246509
L_246510:
	cmpq $0x1,%r15
	je L_481079
L_246511:
	movq 0x8(%r15),%r15
	jmp L_246508
.p2align 0x4
L_481079:
L_246512:
L_246513:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_481091
L_246514:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_246515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246515
.p2align 0x4
.long 0x4A5
L_246515:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2781:
	cmpq 0x18(%rbp),%r15
	jnl L_481081
L_246546:
	cmpq $0x1,%r14
	je L_481080
L_246547:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2781
.p2align 0x4
L_481080:
L_246548:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481081:
L_246516:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246517
L_246544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246545
.p2align 0x4
.long 0x49E
L_246545:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_246517:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	je L_481082
L_246518:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481082:
L_246519:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_481089
L_246520:
	movq $0x17E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x18(%rbp)
	jna L_246522
L_246523:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_481087
L_246524:
	movq %r14,0x38(%rbp)
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2782:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_481086
L_246525:
	decl %r15d
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_246522
L_246527:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_481084
L_246529:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_481083
L_246530:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_246531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_25
.p2align 0x4
L_481083:
L_246509:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481084:
L_246522:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481086:
L_246537:
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_246538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481087:
L_246542:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481089:
L_246534:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481091:
L_246549:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481093:
L_246550:
	xorl %ecx,%ecx
	jmp L_246513
.p2align 0x4
L_481094:
L_246551:
	movq (globalObjptr+0x7E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481095:
L_246552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246553
.p2align 0x4
.long 0x63D
L_246553:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246502
.p2align 0x4
L_481096:
L_246554:
	movq $0x1,0x10(%rbp)
	jmp L_246506
.p2align 0x4
.long 0x3C9F
L_246531:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246532
L_246535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246536
.p2align 0x4
.long 0x4E7
L_246536:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246532:
	movq $0x3CE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_246533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3CA0
L_246538:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r14d
	movl %r14d,0x44(%rbp)
	testl %r14d,%r14d
	jnz L_481099
L_246539:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%ecx
L_246540:
	movq %r15,0x38(%rbp)
	movl %ecx,0x2C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2782
.p2align 0x4
L_481099:
L_246541:
	movq 0x38(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_246540
.p2align 0x4
.long 0x45A
L_246533:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246534
.text
.p2align 0x4
.globl qsort_25
.hidden qsort_25
qsort_25:
L_246557:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2783
L_246607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_246608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246608
.p2align 0x4
.long 0x4E9
L_246608:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2783:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_246559
L_246560:
	cmpl $0x14,%r15d
	jng L_481101
L_246562:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_481100
L_246563:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_246564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_481100:
L_246559:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481101:
L_246561:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_246564:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_246565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_246565:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_246559
L_246566:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_246568
L_246569:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_246568
L_246571:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_246568
L_246573:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_246568
L_246575:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_246568
L_246577:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_246559
L_246578:
	movl %r15d,0x50(%rbp)
loop_2785:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_246559
L_246579:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_481103
L_246581:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_246582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481103:
L_246568:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F6
L_246582:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_481112
L_246583:
	movl 0x54(%rbp),%ecx
	jmp loop_2785
.p2align 0x4
L_481112:
L_246584:
	movl 0x50(%rbp),%ecx
loop_2786:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_246559
L_246585:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_246568
L_246587:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_246588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F7
L_246588:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_481115
L_246589:
	movl 0x50(%rbp),%ecx
	jmp loop_2786
.p2align 0x4
L_481115:
L_246590:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_481120
L_246591:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_246568
L_246593:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_246568
L_246595:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_246568
L_246597:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_246568
L_246599:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2785
.p2align 0x4
L_481120:
L_246600:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_246568
L_246602:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_246568
L_246604:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_246559
L_246605:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_246606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_25
.p2align 0x4
.long 0x4F8
L_246606:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2783
.text
.p2align 0x4
.globl x_1996
.hidden x_1996
x_1996:
L_246609:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_246610
L_246666:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_246667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246667
.p2align 0x4
.long 0x460
L_246667:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_246610:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481142
L_246611:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_246612:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481141
.p2align 0x4,,0x7
L_246613:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481140
L_246614:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x18(%r11),%r13
	movq 0x20(%r11),%r10
	movq $0x1115,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x2699,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481124
L_246615:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_246612
.p2align 0x4
L_481124:
L_246616:
	movq %r15,0x10(%rbp)
L_246617:
	movq 0x0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481139
L_246618:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246619:
	incl %ecx
	jo L_246620
L_246621:
	cmpq $0x1,%r15
	je L_481125
L_246622:
	movq 0x8(%r15),%r15
	jmp L_246619
.p2align 0x4
L_481125:
L_246623:
L_246624:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_481137
L_246625:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x29,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_246626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246626
.p2align 0x4
.long 0x4A5
L_246626:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2787:
	cmpq 0x18(%rbp),%r15
	jnl L_481127
L_246657:
	cmpq $0x1,%r14
	je L_481126
L_246658:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2787
.p2align 0x4
L_481126:
L_246659:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481127:
L_246627:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246628
L_246655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246656
.p2align 0x4
.long 0x49E
L_246656:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_246628:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	je L_481128
L_246629:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481128:
L_246630:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_481135
L_246631:
	movq $0x17E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x18(%rbp)
	jna L_246633
L_246634:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_481133
L_246635:
	movq %r14,0x38(%rbp)
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2788:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_481132
L_246636:
	decl %r15d
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_246633
L_246638:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_481130
L_246640:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_481129
L_246641:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_246642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_26
.p2align 0x4
L_481129:
L_246620:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481130:
L_246633:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481132:
L_246648:
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_246649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481133:
L_246653:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481135:
L_246645:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481137:
L_246660:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481139:
L_246661:
	xorl %ecx,%ecx
	jmp L_246624
.p2align 0x4
L_481140:
L_246662:
	movq (globalObjptr+0x7E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481141:
L_246663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246664
.p2align 0x4
.long 0x63D
L_246664:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246613
.p2align 0x4
L_481142:
L_246665:
	movq $0x1,0x10(%rbp)
	jmp L_246617
.p2align 0x4
.long 0x3C9F
L_246642:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246643
L_246646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246647
.p2align 0x4
.long 0x4E7
L_246647:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246643:
	movq $0x3D23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_246644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3CA0
L_246649:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r14d
	movl %r14d,0x44(%rbp)
	testl %r14d,%r14d
	jnz L_481145
L_246650:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%ecx
L_246651:
	movq %r15,0x38(%rbp)
	movl %ecx,0x2C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2788
.p2align 0x4
L_481145:
L_246652:
	movq 0x38(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_246651
.p2align 0x4
.long 0x45A
L_246644:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246645
.text
.p2align 0x4
.globl qsort_26
.hidden qsort_26
qsort_26:
L_246668:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2789
L_246718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_246719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246719
.p2align 0x4
.long 0x4E9
L_246719:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2789:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_246670
L_246671:
	cmpl $0x14,%r15d
	jng L_481147
L_246673:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_481146
L_246674:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_246675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_481146:
L_246670:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481147:
L_246672:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_246675:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_246676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_246676:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_246670
L_246677:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_246679
L_246680:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_246679
L_246682:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_246679
L_246684:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_246679
L_246686:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_246679
L_246688:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_246670
L_246689:
	movl %r15d,0x50(%rbp)
loop_2791:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_246670
L_246690:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_481149
L_246692:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_246693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481149:
L_246679:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F6
L_246693:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_481158
L_246694:
	movl 0x54(%rbp),%ecx
	jmp loop_2791
.p2align 0x4
L_481158:
L_246695:
	movl 0x50(%rbp),%ecx
loop_2792:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_246670
L_246696:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_246679
L_246698:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_246699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F7
L_246699:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_481161
L_246700:
	movl 0x50(%rbp),%ecx
	jmp loop_2792
.p2align 0x4
L_481161:
L_246701:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_481166
L_246702:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_246679
L_246704:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_246679
L_246706:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_246679
L_246708:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_246679
L_246710:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2791
.p2align 0x4
L_481166:
L_246711:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_246679
L_246713:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_246679
L_246715:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_246670
L_246716:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_246717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_26
.p2align 0x4
.long 0x4F8
L_246717:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2789
.text
.p2align 0x4
.globl x_1997
.hidden x_1997
x_1997:
L_246720:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_246721
L_246777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_246778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246778
.p2align 0x4
.long 0x460
L_246778:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_246721:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481188
L_246722:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_246723:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481187
.p2align 0x4,,0x7
L_246724:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481186
L_246725:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x18(%r11),%r13
	movq 0x20(%r11),%r10
	movq $0x111B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x2693,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481170
L_246726:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_246723
.p2align 0x4
L_481170:
L_246727:
	movq %r15,0x10(%rbp)
L_246728:
	movq 0x0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481185
L_246729:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246730:
	incl %ecx
	jo L_246731
L_246732:
	cmpq $0x1,%r15
	je L_481171
L_246733:
	movq 0x8(%r15),%r15
	jmp L_246730
.p2align 0x4
L_481171:
L_246734:
L_246735:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_481183
L_246736:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_246737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246737
.p2align 0x4
.long 0x4A5
L_246737:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2793:
	cmpq 0x18(%rbp),%r15
	jnl L_481173
L_246768:
	cmpq $0x1,%r14
	je L_481172
L_246769:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2793
.p2align 0x4
L_481172:
L_246770:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481173:
L_246738:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246739
L_246766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246767
.p2align 0x4
.long 0x49E
L_246767:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_246739:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	je L_481174
L_246740:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481174:
L_246741:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_481181
L_246742:
	movq $0x17E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x18(%rbp)
	jna L_246744
L_246745:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_481179
L_246746:
	movq %r14,0x38(%rbp)
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2794:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_481178
L_246747:
	decl %r15d
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_246744
L_246749:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_481176
L_246751:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_481175
L_246752:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_246753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_27
.p2align 0x4
L_481175:
L_246731:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481176:
L_246744:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481178:
L_246759:
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_246760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481179:
L_246764:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481181:
L_246756:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481183:
L_246771:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481185:
L_246772:
	xorl %ecx,%ecx
	jmp L_246735
.p2align 0x4
L_481186:
L_246773:
	movq (globalObjptr+0x7E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481187:
L_246774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246775
.p2align 0x4
.long 0x63D
L_246775:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246724
.p2align 0x4
L_481188:
L_246776:
	movq $0x1,0x10(%rbp)
	jmp L_246728
.p2align 0x4
.long 0x3C9F
L_246753:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246754
L_246757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246758
.p2align 0x4
.long 0x4E7
L_246758:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246754:
	movq $0x3D25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_246755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3CA0
L_246760:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r14d
	movl %r14d,0x44(%rbp)
	testl %r14d,%r14d
	jnz L_481191
L_246761:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%ecx
L_246762:
	movq %r15,0x38(%rbp)
	movl %ecx,0x2C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2794
.p2align 0x4
L_481191:
L_246763:
	movq 0x38(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_246762
.p2align 0x4
.long 0x45A
L_246755:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246756
.text
.p2align 0x4
.globl qsort_27
.hidden qsort_27
qsort_27:
L_246779:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2795
L_246829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_246830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246830
.p2align 0x4
.long 0x4E9
L_246830:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2795:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_246781
L_246782:
	cmpl $0x14,%r15d
	jng L_481193
L_246784:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_481192
L_246785:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_246786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_481192:
L_246781:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481193:
L_246783:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_246786:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_246787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_246787:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_246781
L_246788:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_246790
L_246791:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_246790
L_246793:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_246790
L_246795:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_246790
L_246797:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_246790
L_246799:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_246781
L_246800:
	movl %r15d,0x50(%rbp)
loop_2797:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_246781
L_246801:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_481195
L_246803:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_246804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481195:
L_246790:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F6
L_246804:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_481204
L_246805:
	movl 0x54(%rbp),%ecx
	jmp loop_2797
.p2align 0x4
L_481204:
L_246806:
	movl 0x50(%rbp),%ecx
loop_2798:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_246781
L_246807:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_246790
L_246809:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_246810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F7
L_246810:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_481207
L_246811:
	movl 0x50(%rbp),%ecx
	jmp loop_2798
.p2align 0x4
L_481207:
L_246812:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_481212
L_246813:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_246790
L_246815:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_246790
L_246817:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_246790
L_246819:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_246790
L_246821:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2797
.p2align 0x4
L_481212:
L_246822:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_246790
L_246824:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_246790
L_246826:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_246781
L_246827:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_246828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_27
.p2align 0x4
.long 0x4F8
L_246828:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2795
.text
.p2align 0x4
.globl x_1998
.hidden x_1998
x_1998:
L_246831:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_246832
L_246888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_246889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246889
.p2align 0x4
.long 0x460
L_246889:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_246832:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481234
L_246833:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_246834:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481233
.p2align 0x4,,0x7
L_246835:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481232
L_246836:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x18(%r11),%r13
	movq 0x20(%r11),%r10
	movq $0x1111,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x269D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481216
L_246837:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_246834
.p2align 0x4
L_481216:
L_246838:
	movq %r15,0x10(%rbp)
L_246839:
	movq 0x0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481231
L_246840:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246841:
	incl %ecx
	jo L_246842
L_246843:
	cmpq $0x1,%r15
	je L_481217
L_246844:
	movq 0x8(%r15),%r15
	jmp L_246841
.p2align 0x4
L_481217:
L_246845:
L_246846:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_481229
L_246847:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_246848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246848
.p2align 0x4
.long 0x4A5
L_246848:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2799:
	cmpq 0x18(%rbp),%r15
	jnl L_481219
L_246879:
	cmpq $0x1,%r14
	je L_481218
L_246880:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2799
.p2align 0x4
L_481218:
L_246881:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481219:
L_246849:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246850
L_246877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246878
.p2align 0x4
.long 0x49E
L_246878:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_246850:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	je L_481220
L_246851:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481220:
L_246852:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_481227
L_246853:
	movq $0x17E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x18(%rbp)
	jna L_246855
L_246856:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_481225
L_246857:
	movq %r14,0x38(%rbp)
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2800:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_481224
L_246858:
	decl %r15d
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_246855
L_246860:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_481222
L_246862:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_481221
L_246863:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_246864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_28
.p2align 0x4
L_481221:
L_246842:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481222:
L_246855:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481224:
L_246870:
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_246871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481225:
L_246875:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481227:
L_246867:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481229:
L_246882:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481231:
L_246883:
	xorl %ecx,%ecx
	jmp L_246846
.p2align 0x4
L_481232:
L_246884:
	movq (globalObjptr+0x7E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481233:
L_246885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246886
.p2align 0x4
.long 0x63D
L_246886:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246835
.p2align 0x4
L_481234:
L_246887:
	movq $0x1,0x10(%rbp)
	jmp L_246839
.p2align 0x4
.long 0x3C9F
L_246864:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246865
L_246868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246869
.p2align 0x4
.long 0x4E7
L_246869:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246865:
	movq $0x3CEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_246866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3CA0
L_246871:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r14d
	movl %r14d,0x44(%rbp)
	testl %r14d,%r14d
	jnz L_481237
L_246872:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%ecx
L_246873:
	movq %r15,0x38(%rbp)
	movl %ecx,0x2C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2800
.p2align 0x4
L_481237:
L_246874:
	movq 0x38(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_246873
.p2align 0x4
.long 0x45A
L_246866:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246867
.text
.p2align 0x4
.globl qsort_28
.hidden qsort_28
qsort_28:
L_246890:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2801
L_246940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_246941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246941
.p2align 0x4
.long 0x4E9
L_246941:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2801:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_246892
L_246893:
	cmpl $0x14,%r15d
	jng L_481239
L_246895:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_481238
L_246896:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_246897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_481238:
L_246892:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481239:
L_246894:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_246897:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_246898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_246898:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_246892
L_246899:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_246901
L_246902:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_246901
L_246904:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_246901
L_246906:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_246901
L_246908:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_246901
L_246910:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_246892
L_246911:
	movl %r15d,0x50(%rbp)
loop_2803:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_246892
L_246912:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_481241
L_246914:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_246915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481241:
L_246901:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F6
L_246915:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_481250
L_246916:
	movl 0x54(%rbp),%ecx
	jmp loop_2803
.p2align 0x4
L_481250:
L_246917:
	movl 0x50(%rbp),%ecx
loop_2804:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_246892
L_246918:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_246901
L_246920:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_246921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F7
L_246921:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_481253
L_246922:
	movl 0x50(%rbp),%ecx
	jmp loop_2804
.p2align 0x4
L_481253:
L_246923:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_481258
L_246924:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_246901
L_246926:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_246901
L_246928:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_246901
L_246930:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_246901
L_246932:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2803
.p2align 0x4
L_481258:
L_246933:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_246901
L_246935:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_246901
L_246937:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_246892
L_246938:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_246939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_28
.p2align 0x4
.long 0x4F8
L_246939:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2801
.text
.p2align 0x4
.globl elabSigexp_0
.hidden elabSigexp_0
elabSigexp_0:
L_246942:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_246969
L_246943:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481263
L_246944:
	movq 0x8(%rbp),%r15
	movq 0x60(%r15),%r14
	movq 0x50(%r15),%r13
	movq 0x160(%r13),%r11
	movq 0x158(%r13),%r10
	movq 0x150(%r13),%r9
	movq 0x148(%r13),%r8
	movq 0x140(%r13),%rsp
	movq 0x138(%r13),%rsi
	movq 0x130(%r13),%rdi
	movq 0x128(%r13),%rdx
	movq 0x120(%r13),%rcx
	movq 0x118(%r13),%rbx
	movq 0x110(%r13),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x108(%r13),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x100(%r13),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0xF8(%r13),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0xF0(%r13),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0xE8(%r13),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0xE0(%r13),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0xD8(%r13),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0xC8(%r13),%rax
	movq %rax,(localObjptr+0xA0)(%rip)
	movq 0x88(%r13),%rax
	movq %rax,(localObjptr+0xA8)(%rip)
	movq 0x80(%r13),%rax
	movq %rax,0x10(%rbp)
	movq 0x78(%r13),%rax
	movq %rax,(localObjptr+0xB0)(%rip)
	movq 0x70(%r13),%rax
	movq %rax,(localObjptr+0xB8)(%rip)
	movq 0x68(%r13),%rax
	movq %rax,(localObjptr+0xC0)(%rip)
	movq 0x40(%r13),%rax
	movq %rax,(localObjptr+0xC8)(%rip)
	movq 0x30(%r13),%rax
	movq %rax,(localObjptr+0xD0)(%rip)
	movq 0x20(%r13),%rax
	movq %rax,(localObjptr+0xD8)(%rip)
	movq 0x18(%r13),%rax
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE25,%r15
	je L_481262
L_246945:
	movq %r11,0x18(%rbp)
	movq %r10,0x20(%rbp)
	movq %r9,0x28(%rbp)
	movq %r8,0x30(%rbp)
	movq %rsp,0x38(%rbp)
	movq %rsi,0x40(%rbp)
	movq %rdi,0x48(%rbp)
	movq %rdx,0x50(%rbp)
	movq %rcx,0x58(%rbp)
	movq %rbx,0x60(%rbp)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq (localObjptr+0xA0)(%rip),%r15
	movq %r15,0xA8(%rbp)
	movq (localObjptr+0xA8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	movq (localObjptr+0xB0)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq (localObjptr+0xB8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq (localObjptr+0xC0)(%rip),%r15
	movq %r15,0xD0(%rbp)
	movq (localObjptr+0xC8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	movq (localObjptr+0xD0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq $0x4487,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rax,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq (localObjptr+0xD8)(%rip),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r11)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0x10(%rbp)
	movl $0x1,0x0(%rbp)
	jmp elaborateSigexp_0
.p2align 0x4
L_481262:
L_246946:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq 0x20(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_246947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_481263:
L_246969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_246970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246970
.p2align 0x4
.long 0x460
L_246970:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_246944
.p2align 0x4
.long 0x4A7
L_246947:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246948
L_246967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_246968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246968
.p2align 0x4
.long 0x721
L_246968:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_246948:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_246955
L_246949:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_246950:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106E,%r13
	je L_481268
L_246951:
	cmpq $0x1,%r15
	je L_481265
L_246952:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x38(%rbp)
	jmp L_246950
.p2align 0x4
L_481265:
L_246953:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246955
L_246960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_246961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246961
.p2align 0x4
.long 0x721
L_246961:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_246955:
	movq $0x15D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_847:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481266
L_246956:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r15
	movq $0x24D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x8(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481266:
L_246957:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_246958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481268:
L_246962:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246963
L_246964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_246965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246965
.p2align 0x4
.long 0xA48
L_246965:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_246963:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_847
.p2align 0x4
.long 0x491
L_246958:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA458)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_246959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x1
L_246959:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl elaborateSigexp_0
.hidden elaborateSigexp_0
elaborateSigexp_0:
L_246971:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_247408
L_246972:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481275
L_246973:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE24,%r15
	je L_481273
	cmpq $0xE25,%r15
	je L_481272
L_246974:
	movq 0x0(%r14),%r15
	movq %r15,0x128(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x38(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0xF0(%rbp)
	movq 0x10(%r13),%r9
	movq %r9,0xF8(%rbp)
	movq 0x10(%r9),%r13
	movq %r13,0x100(%rbp)
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	movq $0x1,0x10(%r9)
	movq 0x10(%r10),%r13
	movq %r13,0x108(%rbp)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq $0x1,0x10(%r10)
	movq 0x10(%r11),%r13
	movq %r13,0x110(%rbp)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq $0x1,0x10(%r11)
	movq 0x0(%r14),%r13
	movq %r13,0x118(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x44D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r11,0x0(%r14)
	movq %r15,0x130(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x128,%rbp
	leaq (L_246975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSpec_0
.p2align 0x4
L_481272:
L_247372:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq %r13,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_247373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_481273:
L_247161:
	movq 0x8(%r14),%r15
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq (globalObjptr+0x4D18)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	movl %r13d,0xF0(%rbp)
	jo L_481274
L_247162:
	movq %r15,0x108(%rbp)
	movl %r13d,0x0(%r14)
	movl $0x0,0x100(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x100,%rbp
	leaq (L_247163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSigexp_0
.p2align 0x4
L_481274:
L_246985:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481275:
L_247408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_247409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247409
.p2align 0x4
.long 0x2F92
L_247409:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_246973
.p2align 0x4
.long 0x3CA1
L_246975:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0xF8(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_481341
L_246976:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_246977:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481340
.p2align 0x4,,0x7
L_246978:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_247113
L_246979:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%r11),%r15
	movq 0x20(%r11),%r14
	movq $0x1117,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x2697,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481277
L_246980:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_246977
.p2align 0x4
L_481277:
L_246981:
	movq %r15,0x10(%rbp)
L_246982:
	movq 0xF8(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x100(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481338
L_246983:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246984:
	incl %ecx
	jo L_246985
L_246986:
	cmpq $0x1,%r15
	je L_481278
L_246987:
	movq 0x8(%r15),%r15
	jmp L_246984
.p2align 0x4
L_481278:
L_246988:
L_246989:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_247093
L_246990:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA93,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_246991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246991
.p2align 0x4
.long 0x3CA2
L_246991:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2805:
	cmpq 0x18(%rbp),%r15
	jnl L_481280
L_247152:
	cmpq $0x1,%r14
	je L_481279
L_247153:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2805
.p2align 0x4
L_481279:
L_247109:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481280:
L_246992:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246993
L_247150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247151
.p2align 0x4
.long 0x3CA4
L_247151:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_246993:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	movq %r13,0x10(%rbp)
	cmpq %r15,%r13
	jne L_246995
L_246996:
	testl %r14d,%r14d
	jz L_481287
L_246997:
	movq $0x17FD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_246999
L_247000:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_481285
L_247001:
	movq %r15,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
loop_2806:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_481284
L_247002:
	decl %r15d
	movslq 0x38(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_246999
L_247004:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_481282
L_247006:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_246985
L_247007:
	movl %r15d,0x128(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r11,0x130(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_247008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_29
.p2align 0x4
L_481282:
L_246999:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481284:
L_247143:
	movslq 0x3C(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_247144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481285:
L_247102:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481287:
L_247011:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_247093
L_247012:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA93,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247013
.p2align 0x4
.long 0x3CA4
L_247013:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2807:
	cmpq 0x10(%rbp),%r15
	jnl L_481288
L_247139:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2807
.p2align 0x4
L_481288:
L_247014:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_481332
L_247015:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_247016:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481331
.p2align 0x4,,0x7
L_247017:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_247113
L_247018:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%r11),%r15
	movq 0x20(%r11),%r14
	movq $0x110D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x26A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481289
L_247019:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_247016
.p2align 0x4
L_481289:
L_247020:
	movq %r15,0x10(%rbp)
L_247021:
	movq 0xF0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x108(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481329
L_247022:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_247023:
	incl %ecx
	jo L_246985
L_247024:
	cmpq $0x1,%r15
	je L_481290
L_247025:
	movq 0x8(%r15),%r15
	jmp L_247023
.p2align 0x4
L_481290:
L_247026:
L_247027:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_247093
L_247028:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAD5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247029
.p2align 0x4
.long 0x3CA5
L_247029:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x28(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2808:
	cmpq 0x20(%rbp),%r15
	jnl L_481292
L_247130:
	cmpq $0x1,%r14
	je L_247109
L_247131:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2808
.p2align 0x4
L_481292:
L_247030:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247031
L_247128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247129
.p2align 0x4
.long 0x3CA7
L_247129:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_247031:
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	movq %r13,0x10(%rbp)
	cmpq %r15,%r13
	jne L_246995
L_247033:
	testl %r14d,%r14d
	jz L_481299
L_247034:
	movq $0x17FB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_246999
L_247036:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_247102
L_247037:
	movq %r15,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	movl $0x0,0x44(%rbp)
loop_2809:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_481296
L_247038:
	decl %r15d
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	jnb L_246999
L_247040:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_246999
L_247042:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_246985
L_247043:
	movl %r15d,0x128(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r11,0x130(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_247044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_30
.p2align 0x4
L_481296:
L_247121:
	movslq 0x44(%rbp),%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_247122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481299:
L_247047:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_247093
L_247048:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAD5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247049
.p2align 0x4
.long 0x3CA7
L_247049:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2810:
	cmpq 0x10(%rbp),%r15
	jnl L_481300
L_247117:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2810
.p2align 0x4
L_481300:
L_247050:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_481323
L_247051:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_247052:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481322
.p2align 0x4,,0x7
L_247053:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481321
L_247054:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%r11),%r15
	movq 0x20(%r11),%r14
	movq $0x1121,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x2691,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481301
L_247055:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_247052
.p2align 0x4
L_481301:
L_247056:
	movq %r15,0x10(%rbp)
L_247057:
	movq 0xE8(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_481320
L_247058:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_247059:
	incl %ecx
	jo L_246985
L_247060:
	cmpq $0x1,%r15
	je L_481302
L_247061:
	movq 0x8(%r15),%r15
	jmp L_247059
.p2align 0x4
L_481302:
L_247062:
L_247063:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_247093
L_247064:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA91,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247065
.p2align 0x4
.long 0x3CA8
L_247065:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x30(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2811:
	cmpq 0x28(%rbp),%r15
	jnl L_481304
L_247106:
	cmpq $0x1,%r14
	je L_247109
L_247107:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2811
.p2align 0x4
L_481304:
L_247066:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247067
L_247104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247105
.p2align 0x4
.long 0x3CAA
L_247105:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_247067:
	movq 0x28(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	movq %r13,0x10(%rbp)
	cmpq %r15,%r13
	jne L_481316
L_247069:
	testl %r14d,%r14d
	jz L_481311
L_247070:
	movq $0x17F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_246999
L_247072:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_247102
L_247073:
	movq %r15,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	movl $0x0,0x4C(%rbp)
loop_2812:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x4C(%rbp)
	jl L_481308
L_247074:
	decl %r15d
	movslq 0x48(%rbp),%r14
	movq 0x28(%rbp),%r13
	cmpq %r13,%r14
	jnb L_246999
L_247076:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_246999
L_247078:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_246985
L_247079:
	movl %r15d,0x128(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r11,0x130(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_247080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_31
.p2align 0x4
L_481308:
L_247096:
	movslq 0x4C(%rbp),%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_247097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481311:
L_247083:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_481315
L_247084:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xFFF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247085
.p2align 0x4
.long 0x3CAA
L_247085:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2813:
	cmpq 0x10(%rbp),%r15
	jnl L_481312
L_247091:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x28(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2813
.p2align 0x4
L_481312:
L_247086:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247087
L_247089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247090
.p2align 0x4
.long 0x3CAB
L_247090:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_247087:
	movq $0xFFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFFD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x4D78)(%rip),%r11
	movl 0x0(%r11),%r10d
	incl %r10d
	jo L_246985
L_247088:
	movl %r10d,0x0(%r11)
	movq $0x1001,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r10d,0x0(%r11)
	movq %r13,0x20(%r11)
	movq %r14,0x30(%r11)
	movq %r15,0x38(%r11)
	addq $0x48,%r12
	movl 0x0(%rbp),%r15d
	movl %r15d,0x4(%r11)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r11)
	movq $0x1,0x28(%r11)
	movq $0x2895,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x5C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481315:
L_247093:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481316:
L_246995:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481320:
L_247111:
	xorl %ecx,%ecx
	jmp L_247063
.p2align 0x4
L_481321:
L_247113:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481322:
L_247114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247115
.p2align 0x4
.long 0x3CAD
L_247115:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_247053
.p2align 0x4
L_481323:
L_247116:
	movq $0x1,0x10(%rbp)
	jmp L_247057
.p2align 0x4
L_481329:
L_247134:
	xorl %ecx,%ecx
	jmp L_247027
.p2align 0x4
L_481331:
L_247136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247137
.p2align 0x4
.long 0x3CAF
L_247137:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_247017
.p2align 0x4
L_481332:
L_247138:
	movq $0x1,0x10(%rbp)
	jmp L_247021
.p2align 0x4
L_481338:
L_247156:
	xorl %ecx,%ecx
	jmp L_246989
.p2align 0x4
L_481340:
L_247158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247159
.p2align 0x4
.long 0x3CB1
L_247159:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_246978
.p2align 0x4
L_481341:
L_247160:
	movq $0x1,0x10(%rbp)
	jmp L_246982
.p2align 0x4
.long 0x3CD0
L_247373:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247374
L_247406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_247407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247407
.p2align 0x4
.long 0x3CD2
L_247407:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_247374:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_247381
L_247375:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_247376:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106E,%r13
	je L_481345
L_247377:
	cmpq $0x1,%r15
	je L_481342
L_247378:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x38(%rbp)
	jmp L_247376
.p2align 0x4
L_481342:
L_247379:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247381
L_247399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_247400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247400
.p2align 0x4
.long 0x3CD2
L_247400:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_247381:
	movq $0x15D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_849:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481343
L_247382:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq $0x24D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x8(%r13)
	movq 0xC0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq $0x1731,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_247383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3814
.p2align 0x4
L_481343:
L_247396:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_247397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481345:
L_247401:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247402
L_247403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_247404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247404
.p2align 0x4
.long 0x3CD3
L_247404:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_247402:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_849
.p2align 0x4
.long 0x3CB2
L_247163:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_481352
L_247164:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_246995
L_247166:
	cmpl $0x0,%r13d
	jl L_247102
L_247167:
	movl $0x0,0x24(%rbp)
loop_2814:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_481349
L_247168:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481349:
L_247169:
	movslq 0x24(%rbp),%r15
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	movq %r11,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_247170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookupLongtycon_1
.p2align 0x4
L_481352:
L_247371:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CA3
L_247008:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247009
L_247141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247142
.p2align 0x4
.long 0x3CA4
L_247142:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_247009:
	movq $0x3D2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movl $0x1,0x134(%rbp)
	addq $0x128,%rbp
	leaq (L_247010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3CB0
L_247144:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	testl %r14d,%r14d
	jnz L_481354
L_247145:
	movq 0x40(%rbp),%r15
	movl 0x3C(%rbp),%ecx
L_247146:
	movq %r15,0x30(%rbp)
	movl %ecx,0x38(%rbp)
	incl 0x3C(%rbp)
	jmp loop_2806
.p2align 0x4
L_481354:
L_247147:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_247146
.p2align 0x4
.long 0x3CA6
L_247044:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247045
L_247119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247120
.p2align 0x4
.long 0x3CA7
L_247120:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_247045:
	movq $0x3CDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movl $0x1,0x134(%rbp)
	addq $0x128,%rbp
	leaq (L_247046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3CAE
L_247122:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r14d
	movl %r14d,0x50(%rbp)
	testl %r14d,%r14d
	jnz L_481356
L_247123:
	movq 0x48(%rbp),%r15
	movl 0x44(%rbp),%ecx
L_247124:
	movq %r15,0x38(%rbp)
	movl %ecx,0x40(%rbp)
	incl 0x44(%rbp)
	jmp loop_2809
.p2align 0x4
L_481356:
L_247125:
	movq 0x38(%rbp),%r15
	movl 0x40(%rbp),%ecx
	jmp L_247124
.p2align 0x4
.long 0x3CA9
L_247080:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247081
L_247094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_247095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247095
.p2align 0x4
.long 0x3CAA
L_247095:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_247081:
	movq $0x3D31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movl $0x1,0x134(%rbp)
	addq $0x128,%rbp
	leaq (L_247082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3CAC
L_247097:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r14d
	movl %r14d,0x58(%rbp)
	testl %r14d,%r14d
	jnz L_481358
L_247098:
	movq 0x50(%rbp),%r15
	movl 0x4C(%rbp),%ecx
L_247099:
	movq %r15,0x40(%rbp)
	movl %ecx,0x48(%rbp)
	incl 0x4C(%rbp)
	jmp loop_2812
.p2align 0x4
L_481358:
L_247100:
	movq 0x40(%rbp),%r15
	movl 0x48(%rbp),%ecx
	jmp L_247099
.p2align 0x4
.long 0x7C0
L_247383:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_247388
L_247384:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_247385:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481359
L_247386:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_247385
.p2align 0x4
L_481359:
L_247388:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_247393
L_247389:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_247390:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481360
L_247391:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_247390
.p2align 0x4
L_481360:
L_247393:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CD1
L_247397:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA458)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_247398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x3CB3
L_247170:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_481363
L_247171:
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (L_247172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateScheme_0
.p2align 0x4
L_481363:
L_247201:
	incl 0x24(%rbp)
	jmp loop_2814
.p2align 0x4
.long 0x3CA3
L_247010:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_247011
.p2align 0x4
.long 0x3CA6
L_247046:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_247047
.p2align 0x4
.long 0x3CA9
L_247082:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_247083
.p2align 0x4
.long 0x1
L_247398:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	jmp L_247371
.p2align 0x4
.long 0x3CB4
L_247172:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq 0x108(%rbp),%r10
	movq %r10,0x58(%rbp)
	movq 0x28(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%esp
	movl %esp,0x60(%rbp)
	movslq %esp,%r15
	cmpq %r15,%r8
	jne L_246995
L_247174:
	movl %esp,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_247175
L_247348:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_246995
L_247350:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r11,%r13
	jne L_246995
L_247352:
	cmpl %ecx,%ebx
	jne L_247175
L_247354:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2817:
	cmpl %ecx,%ebx
	je L_481370
L_247355:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_246999
L_247357:
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1056,%r9
	jne L_247175
L_247358:
	movq 0x0(%r10),%r9
	cmpq %r13,%r11
	jnb L_246999
L_247360:
	movq 0x8(%r9),%r10
	movq 0x30(%rbp),%r8
	movq 0x0(%r8,%r11,8),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%r10)
	jne L_481365
L_247362:
	incl %ebx
	jo L_246985
L_247363:
	jmp loop_2817
.p2align 0x4
L_481365:
L_247175:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247176
L_247346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247347
.p2align 0x4
.long 0x3CCE
L_247347:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247176:
	movq $0x20B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
L_247177:
	movq 0xE0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x2A71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x10638)(%rip),%r15
	movq %r15,0x110(%rbp)
	movl 0xF0(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_247178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFlex_0
.p2align 0x4
L_481370:
L_247364:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247365
L_247366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247367
.p2align 0x4
.long 0x3CCF
L_247367:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247365:
	movq $0x20B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	jmp L_247177
.p2align 0x4
.long 0x3CB5
L_247178:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	je L_247201
L_247179:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_247180
L_247213:
	shrq $0x1,%r13
	movl %r13d,%r11d
	cmpl 0x60(%rbp),%r11d
	jne L_481380
L_247215:
	movq 0x8(%r14),%r15
loop_2815:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x105C,%r14
	je L_481379
	cmpq $0x105D,%r14
	je L_481378
L_247216:
	movq 0x0(%r15),%r15
tyconAdmitsEquality_0:
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	jne L_481377
L_247217:
	movq %r13,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481377:
L_247329:
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481378:
L_247344:
	movq 0x8(%r15),%r15
	jmp tyconAdmitsEquality_0
.p2align 0x4
L_481379:
L_247339:
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x100,%rbp
	leaq (L_247340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
L_481380:
L_247180:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CC0
L_247218:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
L_247219:
	testb %dl,%dl
	jnz L_481386
L_247276:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_481385
	cmpq $0x105D,%r15
	je L_481384
L_247277:
	movq 0x0(%r14),%r15
tyconAdmitsEquality_1:
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	jne L_481383
L_247278:
	movq %r13,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481383:
L_247306:
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481384:
L_247328:
	movq 0x8(%r14),%r15
	jmp tyconAdmitsEquality_1
.p2align 0x4
L_481385:
L_247327:
	movq 0x0(%r14),%r15
L_247317:
	movq %r15,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x100,%rbp
	leaq (L_247318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
L_481386:
L_247221:
	movq 0x78(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x3CC0
L_247330:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	movq %r14,%r13
	shrq $0x1,%r13
	cmpq $0x1458,%r13
	jne L_481391
L_247331:
	movq 0x8(%r15),%r13
	movq 0x30(%r13),%r11
	movq 0x20(%r13),%r14
	movq 0x0(%r14),%r10
L_247332:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_247310
L_247333:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xD5C,%r15
	jne L_481389
L_247334:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r14
	je L_481388
L_247335:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105E,%r15
	jne L_481387
L_247336:
	movq 0x8(%r14),%r14
	movq %r14,%r15
	jmp loop_2815
.p2align 0x4
L_481387:
L_247325:
	movq (globalObjptr+0x4D60)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481388:
L_247338:
	movb 0x0(%r11),%dl
	jmp L_247219
.p2align 0x4
L_481389:
L_247310:
	movq (globalObjptr+0x4D38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481391:
L_247224:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CCD
L_247340:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_247341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
.long 0x3CB6
L_247181:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x3CCB
L_247279:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
L_247280:
	cmpb $0x1,%dl
	jne L_247221
L_247282:
	movq (globalObjptr+0x10660)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CC0
L_247307:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	movq %r14,%r13
	shrq $0x1,%r13
	cmpq $0x1458,%r13
	jne L_247224
L_247308:
	movq 0x8(%r15),%r13
	movq 0x30(%r13),%r11
	movq 0x20(%r13),%r14
	movq 0x0(%r14),%r10
L_247309:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_247310
L_247311:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xD5C,%r15
	jne L_247310
L_247312:
	movq 0x0(%r10),%r15
	cmpq $0x1,%r15
	je L_481396
L_247313:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x105E,%r14
	jne L_247325
L_247314:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_481394
	cmpq $0x105D,%r15
	je L_481393
L_247315:
	movq 0x0(%r14),%r15
	jmp tyconAdmitsEquality_1
.p2align 0x4
L_481393:
L_247322:
	movq 0x8(%r14),%r15
	jmp tyconAdmitsEquality_1
.p2align 0x4
L_481394:
L_247316:
	movq 0x0(%r14),%r15
	jmp L_247317
.p2align 0x4
L_481396:
L_247326:
	movb 0x0(%r11),%dl
	jmp L_247280
.p2align 0x4
.long 0x3CCC
L_247318:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_247319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
.long 0x3CC1
L_247222:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247223
L_247274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247275
.p2align 0x4
.long 0x3CCA
L_247275:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247223:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1458,%r15
	jne L_247224
L_247225:
	movq 0x8(%r14),%r15
	movq 0x20(%r15),%r13
	movq %r13,0x50(%rbp)
	movl 0xC(%r15),%r13d
	testl %r13d,%r13d
	jz x_848
L_247227:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x105C,%r14
	jne x_2007
L_247228:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
x_2007:
x_848:
	movq $0x20BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1AB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_247201
.p2align 0x4
.long 0x3CC0
L_247341:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	testl %r15d,%r15d
	jnz L_481402
L_247342:
	movb $0x1,%dl
	jmp L_247219
.p2align 0x4
L_481402:
L_247343:
	xorb %dl,%dl
	jmp L_247219
.p2align 0x4
.long 0x3CB7
L_247182:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x108(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247183
L_247211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247212
.p2align 0x4
.long 0x3CBF
L_247212:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247183:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10640)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CC3
L_247283:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x3CCB
L_247319:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_481404
L_247320:
	movb $0x1,%dl
	jmp L_247280
.p2align 0x4
L_481404:
L_247321:
	xorb %dl,%dl
	jmp L_247280
.p2align 0x4
.long 0x3CC2
L_247229:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r11
	movq %r11,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_247230
L_247254:
	movq 0x8(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_246995
L_247256:
	movq 0x58(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r13,%r11
	jne L_246995
L_247258:
	cmpl %ecx,%ebx
	jne L_247230
L_247260:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2816:
	cmpl %ebx,%ecx
	je L_481410
L_247261:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_246999
L_247263:
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1056,%r9
	jne L_247230
L_247264:
	movq 0x0(%r10),%r9
	cmpq %r13,%r11
	jnb L_246999
L_247266:
	movq 0x8(%r9),%r10
	movq 0x58(%rbp),%r8
	movq 0x0(%r8,%r11,8),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%r10)
	jne L_481406
L_247268:
	incl %ebx
	jo L_246985
L_247269:
	jmp loop_2816
.p2align 0x4
L_481406:
L_247230:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481410:
L_247270:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_848
L_247272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247273
.p2align 0x4
.long 0x3CC9
L_247273:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp x_848
.p2align 0x4
.long 0x3CB8
L_247184:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_481415
L_247185:
	movq (globalObjptr+0x10648)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481415:
L_247209:
	movq 0x80(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_247210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3CC4
L_247284:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x108(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247285
L_247304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247305
.p2align 0x4
.long 0x3CC8
L_247305:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247285:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10668)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CC3
L_247231:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x3CB9
L_247186:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x10650)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CB9
L_247210:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CC5
L_247286:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247287
L_247302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247303
.p2align 0x4
.long 0x3CC7
L_247303:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247287:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_247288:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_246985
L_247289:
	cmpq $0x1,%r14
	je L_481417
L_247290:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_247288
.p2align 0x4
L_481417:
L_247291:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247292
L_247300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247301
.p2align 0x4
.long 0x3CC6
L_247301:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247292:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481419
L_247293:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_247294:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_246985
L_247295:
	movl %r13d,0x0(%r15)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_247296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481419:
L_247299:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_247294
.p2align 0x4
.long 0x3CC4
L_247232:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x108(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247233
L_247252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247253
.p2align 0x4
.long 0x3CC8
L_247253:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247233:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10658)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CBA
L_247187:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_247188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3CBC
L_247296:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_247201
L_247203:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CC5
L_247234:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247235
L_247250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247251
.p2align 0x4
.long 0x3CC7
L_247251:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247235:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_247236:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_246985
L_247237:
	cmpq $0x1,%r14
	je L_481425
L_247238:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_247236
.p2align 0x4
L_481425:
L_247239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247240
L_247248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247249
.p2align 0x4
.long 0x3CC6
L_247249:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247240:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481427
L_247241:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_247242:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_246985
L_247243:
	movl %r13d,0x0(%r15)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_247244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481427:
L_247247:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_247242
.p2align 0x4
.long 0x3CBB
L_247188:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CBC
L_247244:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_247203
	jmp L_247201
.p2align 0x4
.long 0x3CBB
L_247189:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247190
L_247207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247208
.p2align 0x4
.long 0x3CBE
L_247208:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247190:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_247191:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_246985
L_247192:
	cmpq $0x1,%r14
	je L_481432
L_247193:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_247191
.p2align 0x4
L_481432:
L_247194:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247195
L_247205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247206
.p2align 0x4
.long 0x3CBD
L_247206:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247195:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481434
L_247196:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_247197:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_246985
L_247198:
	movl %r13d,0x0(%r15)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_247199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481434:
L_247204:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_247197
.p2align 0x4
.long 0x3CBC
L_247199:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_247203
	jmp L_247201
.text
.p2align 0x4
.globl elaborateSpec_0
.hidden elaborateSpec_0
elaborateSpec_0:
L_247410:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_248023
L_247411:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481515
L_247412:
	movq 0x0(%rbp),%r15
loop_2818:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_481514
L_247413:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE19,%rax
	cmpq $0x9,%rax
	ja L_481439
	jmp *jumpTable_738(,%rax,8)
.data
.p2align 0x4
jumpTable_738:
.quad L_481510,L_481509,L_481486,L_481484,L_481483,L_481479,L_481478,L_481473,L_481467,L_481443
.text
.p2align 0x4
L_481439:
L_247414:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_481442
L_247417:
	cmpl $0x0,%r13d
	jl L_481441
L_247418:
	movl $0x0,0x1C(%rbp)
loop_2819:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481440
L_247419:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481440:
L_247420:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq 0x28(%r14),%r11
	movq 0x20(%r14),%r10
	movq 0x18(%r14),%r9
	movq 0x10(%r14),%r8
	movq 0x8(%r14),%rsp
	movq 0x0(%r14),%rsi
	movq $0xB6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xBBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsi,0x0(%r14)
	movq %rsp,0x8(%r14)
	movq %r8,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r11,0x28(%r14)
	movq %r13,0x30(%r14)
	addq $0x50,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_247421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_481441:
L_247449:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481442:
L_247416:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481443:
L_247853:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_481466
L_247869:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0x60(%rbp)
	cmpq %r15,%r13
	movq %r11,0x58(%rbp)
	jne L_247416
L_247871:
	testq %r13,%r13
	jz L_481464
L_247872:
	cmpq $0x7FFFFFFF,%r13
	ja L_247445
L_247873:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247874
L_248018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_248019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248019
.p2align 0x4
.long 0xE14
L_248019:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_247874:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D7,%rcx
	movq 0x60(%rbp),%rdx
	movq $0xE0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_247875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247875
.p2align 0x4
.long 0xE14
L_247875:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_247876:
	movq $0x0,0x70(%rbp)
loop_2831:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_481459
L_247877:
	movq 0x68(%rbp),%r15
	movq $0x17FF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r14,%r11
	jne L_247416
L_247879:
	testq %r11,%r11
	jz L_481457
L_247880:
	cmpq $0x7FFFFFFF,%r11
	ja L_481456
L_247881:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247882
L_248006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_248007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248007
.p2align 0x4
.long 0x9E2
L_248007:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_247882:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D9,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_247883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247883
.p2align 0x4
.long 0x9E2
L_247883:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x60(%rbp)
L_247884:
	movq $0x0,0x70(%rbp)
loop_2832:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_481453
L_247885:
	movq 0x60(%rbp),%r15
	movq $0x1807,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r14
	movl $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_247416
L_247887:
	cmpl $0x0,%r13d
	jl L_247449
L_247888:
	movl $0x0,0x1C(%rbp)
loop_2833:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481447
L_247889:
	movq 0x38(%rbp),%r15
	movl $0x0,0x0(%r15)
.p2align 0x4,,0x7
L_247890:
	movl $0x0,0x1C(%rbp)
	movl $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_2834:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x20(%rbp)
	jl L_481445
L_247891:
	movl 0x1C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_247890
L_247892:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481445:
L_247894:
	movslq 0x20(%rbp),%r15
	movq %r15,%r14
	imulq $0x30,%r14
	movq 0x60(%rbp),%r13
	movq 0x10(%r13,%r14,1),%r11
	imulq $0x30,%r15
	movq 0x28(%r13,%r15,1),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1054,%r15
	je L_481446
L_247916:
	movq 0x0(%r11),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_247917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481446:
L_247895:
	movq 0x8(%r11),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_247896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481447:
L_247919:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	imulq $0x30,%r14
	movq 0x60(%rbp),%r10
	movq 0x10(%r10,%r14,1),%r9
	movq %r9,0x20(%rbp)
	imulq $0x30,%r13
	movq 0x18(%r10,%r13,1),%r14
	movq %r14,0x28(%rbp)
	imulq $0x30,%r11
	movq 0x0(%r10,%r11,1),%r14
	movq %r14,0x30(%rbp)
	imulq $0x30,%r15
	movq 0x20(%r10,%r15,1),%r14
	movq %r14,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_247416
L_247921:
	cmpl $0x0,%r13d
	jl L_247449
L_247922:
	movl $0x0,0x6C(%rbp)
loop_2836:
	movl 0x68(%rbp),%r15d
	cmpl %r15d,0x6C(%rbp)
	jl L_481448
L_247923:
	movq $0x20BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x110B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_247924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481448:
L_247928:
	movslq 0x6C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x58(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x78(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x88(%rbp)
	movb $0x2,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_247929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendVid_0
.p2align 0x4
L_481453:
L_247935:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	imulq $0x28,%r14
	movq 0x68(%rbp),%r9
	movq 0x8(%r9,%r14,1),%r8
	movq %r8,0x78(%rbp)
	imulq $0x28,%r13
	movq 0x10(%r9,%r13,1),%r14
	movq %r14,0x80(%rbp)
	imulq $0x28,%r11
	movq 0x18(%r9,%r11,1),%r14
	movq %r14,0x88(%rbp)
	imulq $0x28,%r10
	movq 0x0(%r9,%r10,1),%r14
	movq %r14,0x90(%rbp)
	imulq $0x28,%r15
	movq 0x20(%r9,%r15,1),%r14
	movq %r14,0x98(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_247416
L_247937:
	movl %r14d,0xB0(%rbp)
	movq $0x3831,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r8,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_247938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_481456:
L_247445:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481457:
L_248009:
	movq (globalObjptr+0x4E40)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_247884
.p2align 0x4
L_481459:
L_248010:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x80(%rbp)
	movq 0x10(%r13),%r9
	movq %r9,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_247416
L_248012:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x90(%rbp)
	movq $0xFE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x4D18)(%rip),%r11
	movl 0x0(%r11),%r9d
	movq $0xFED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq (globalObjptr+0x4D50)(%rip),%r8
	movq %r8,0x0(%r11)
	movq (globalObjptr+0x4D20)(%rip),%r8
	movl 0x0(%r8),%esp
	incl %esp
	jo L_481460
L_248013:
	movl %esp,0x0(%r8)
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq $0xFEF,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movl %esp,0x8(%rsi)
	movl %r9d,0x10(%rsi)
	movq %r8,0x18(%rsi)
	movq %r11,0x20(%rsi)
	movq %r13,0x28(%rsi)
	movq %r14,0x30(%rsi)
	addq $0x40,%r12
	movq %r15,0x0(%rsi)
	movl $0x1,0xC(%rsi)
	movl $0x0,0x14(%rsi)
	movq $0x28B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsi,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x20AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x20B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x110B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	movq %r10,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xA8,%rbp
	leaq (L_248014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481460:
L_247424:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481464:
L_248021:
	movq (globalObjptr+0x4E38)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_247876
.p2align 0x4
L_481466:
L_247854:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_247855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookupLongtycon_0
.p2align 0x4
L_481467:
L_247852:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movl $0x1,0x10(%rbp)
elaborateTypedescs_0:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_247416
L_247489:
	cmpl $0x0,%r13d
	jl L_247449
L_247490:
	movl $0x0,0x28(%rbp)
loop_2823:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x28(%rbp)
	jl L_481468
L_247491:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481468:
L_247492:
	movslq 0x28(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_247416
L_247494:
	movl %r9d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x38(%rbp)
	movq $0xFE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x4D18)(%rip),%r11
	movl 0x0(%r11),%r10d
	movq $0xFED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq (globalObjptr+0x4D50)(%rip),%r9
	movq %r9,0x0(%r11)
	movq (globalObjptr+0x4D20)(%rip),%r9
	movl 0x0(%r9),%r8d
	incl %r8d
	jo L_247424
L_247495:
	movl %r8d,0x0(%r9)
	movq $0x13,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq $0xFEF,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x8(%rsp)
	movl %r10d,0x10(%rsp)
	movq %r9,0x18(%rsp)
	movq %r11,0x20(%rsp)
	movq %r13,0x28(%rsp)
	movq %r14,0x30(%rsp)
	addq $0x40,%r12
	movq %r15,0x0(%rsp)
	movl $0x0,0xC(%rsp)
	movl $0x0,0x14(%rsp)
	movq $0x28B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x20AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	addq $0x50,%rbp
	leaq (L_247496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481473:
L_247830:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_247416
L_247832:
	cmpl $0x0,%r13d
	jl L_247449
L_247833:
	movl $0x0,0x1C(%rbp)
loop_2829:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481474
L_247834:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481474:
L_247835:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x20(%rbp)
	cmpq $0x1,%r11
	je L_481475
L_247836:
	movq %r11,0xE0(%rbp)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (L_247837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateScheme_0
.p2align 0x4
L_481475:
L_247850:
	movq 0xC0(%rbp),%r15
L_247841:
	movq (globalObjptr+0xF60)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x111D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0xD8(%rbp)
	movb $0x1,0xE0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xD8,%rbp
	leaq (L_247842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendVid_0
.p2align 0x4
L_481478:
L_247826:
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r13
	movq $0x10D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xF8(%rbp)
	movl $0x0,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0xF0,%rbp
	leaq (L_247827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSigexp_0
.p2align 0x4
L_481479:
L_247784:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_247416
L_247786:
	cmpl $0x0,%r13d
	jl L_247449
L_247787:
	movl $0x0,0x1C(%rbp)
loop_2828:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481480
L_247788:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481480:
L_247789:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_247790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_481483:
L_247779:
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0xF0,%rbp
	leaq (L_247780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSpec_0
.p2align 0x4
L_481484:
L_247591:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq (globalObjptr+0x4D18)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	movl %r13d,0xE8(%rbp)
	jo L_247424
L_247592:
	movq %r15,0xF8(%rbp)
	movl %r13d,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0xF8,%rbp
	leaq (L_247593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSpec_0
.p2align 0x4
L_481486:
L_247510:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xE8(%rbp)
	cmpq %r14,%r11
	movq %r15,0xE0(%rbp)
	jne L_247416
L_247512:
	testq %r11,%r11
	jz L_481507
L_247513:
	cmpq $0x7FFFFFFF,%r11
	ja L_247445
L_247514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247515
L_247587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247588
.p2align 0x4
.long 0x3CDC
L_247588:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247515:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D5,%rcx
	movq 0xE8(%rbp),%rdx
	movq $0xE0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247516
.p2align 0x4
.long 0x3CDC
L_247516:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0xF0(%rbp)
L_247517:
	movq $0x0,0xF8(%rbp)
loop_2824:
	movq 0xE8(%rbp),%r15
	cmpq %r15,0xF8(%rbp)
	jl L_481504
L_247518:
	movq 0xF0(%rbp),%r15
	movq $0x1809,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_247416
L_247520:
	cmpl $0x0,%r13d
	jl L_247449
L_247521:
	movl $0x0,0x14(%rbp)
loop_2825:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_481487
L_247522:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481487:
L_247523:
	movslq 0x14(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x18(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x28(%rbp)
	movq 0x80(%rbp),%r13
	movq 0x10(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%rbp),%r13
	movq 0x50(%r13),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x38(%r13),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_481501
L_247525:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_481500
L_247526:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x70(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_247528:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_247529
L_247567:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_247529
L_247568:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x58(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_481494
L_247529:
	movl 0x70(%rbp),%r13d
	incl %r13d
	movl %r13d,0x74(%rbp)
	jo L_247424
L_247530:
	cmpq $0x1,%r15
	je L_481488
L_247531:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x70(%rbp)
	jmp L_247528
.p2align 0x4
L_481488:
L_247532:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247533
L_247565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247566
.p2align 0x4
.long 0x3CE4
L_247566:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247533:
	movl 0x74(%rbp),%ecx
L_247534:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_481491
L_247536:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_247538
L_247564:
	movl %ecx,0x0(%r15)
L_247538:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_247539:
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_9
L_247540:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne new_37
L_247547:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481489
L_247548:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10670)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA460)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481489:
L_247558:
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_37:
new_9:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x267F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481491:
L_247535:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481494:
L_247570:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247571
L_247575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247576
.p2align 0x4
.long 0x3CE5
L_247576:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247571:
	movl 0x70(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_247535
L_247572:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481495
L_247573:
	movq 0x78(%rbp),%r15
	jmp L_247539
.p2align 0x4
L_481495:
L_247574:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x70(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_247539
.p2align 0x4
L_481500:
L_247577:
	xorl %ecx,%ecx
	jmp L_247534
.p2align 0x4
L_481501:
L_247524:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481504:
L_247579:
	movq 0xF8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x118(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x100(%rbp)
	movl $0x0,0x110(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x110,%rbp
	leaq (L_247580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSigexp_0
.p2align 0x4
L_481507:
L_247590:
	movq (globalObjptr+0x4E30)(%rip),%r15
	movq %r15,0xF0(%rbp)
	jmp L_247517
.p2align 0x4
L_481509:
L_247487:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movl $0x0,0x10(%rbp)
	jmp elaborateTypedescs_0
.p2align 0x4
L_481510:
L_247450:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_247416
L_247452:
	cmpl $0x0,%r13d
	jl L_247449
L_247453:
	movl $0x0,0x24(%rbp)
loop_2821:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_481511
L_247454:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481511:
L_247455:
	movslq 0x24(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r11,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_247456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateScheme_0
.p2align 0x4
L_481514:
L_248022:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481515:
L_248023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_248024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248024
.p2align 0x4
.long 0x16BD
L_248024:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_247412
.p2align 0x4
.long 0x3CD4
L_247421:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_481524
L_247422:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_247423:
	incl %ecx
	jo L_247424
L_247425:
	cmpq $0x1,%r15
	je L_481517
L_247426:
	movq 0x8(%r15),%r15
	jmp L_247423
.p2align 0x4
L_481517:
L_247427:
L_247428:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_481522
L_247429:
	cmpq $0x7FFFFFFF,%rdx
	ja L_247445
L_247430:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_247431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247431
.p2align 0x4
.long 0x3CD5
L_247431:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x40(%rbp)
L_247432:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2820:
	cmpq 0x28(%rbp),%r15
	jnl L_481519
L_247441:
	cmpq $0x1,%r14
	je L_481518
L_247442:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2820
.p2align 0x4
L_481518:
L_247443:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481519:
L_247433:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247434
L_247439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_247440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247440
.p2align 0x4
.long 0x3CD7
L_247440:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_247434:
	movq 0x40(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x111D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	movb $0x0,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xA0,%rbp
	leaq (L_247435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendVid_0
.p2align 0x4
L_481522:
L_247446:
	movq (globalObjptr+0xD88)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_247432
.p2align 0x4
L_481524:
L_247447:
	xorl %ecx,%ecx
	jmp L_247428
.p2align 0x4
.long 0x3D0C
L_247917:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1458,%r15
	jne L_481532
L_247918:
	movq 0x8(%r14),%r15
	movq 0x30(%r15),%r13
	movq %r13,0x30(%rbp)
L_247897:
	movq 0x30(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_247913
	cmpb $0x2,%r15b
	je L_481530
L_247898:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_247416
L_247900:
	movl $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_2835:
	movl 0x40(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	je L_481528
L_247901:
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_481527
L_247903:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	jne L_481526
.p2align 0x4,,0x7
L_247909:
	movl 0x40(%rbp),%r15d
	incl %r15d
	jo L_247424
L_247910:
	movl %r15d,0x40(%rbp)
	jmp loop_2835
.p2align 0x4
L_481526:
L_247904:
	movq %r13,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x70,%rbp
	leaq (L_247905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
L_481527:
L_247474:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481528:
L_247913:
	movl 0x1C(%rbp),%ecx
L_247907:
	movl %ecx,0x1C(%rbp)
	incl 0x20(%rbp)
	jmp loop_2834
.p2align 0x4
L_481530:
L_247915:
	movq (globalObjptr+0x4E48)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481532:
L_247498:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D0C
L_247896:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r15
	movq %r15,0x30(%rbp)
	jmp L_247897
.p2align 0x4
.long 0x3D0F
L_247924:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247925
L_247926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_247927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247927
.p2align 0x4
.long 0x3D10
L_247927:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_247925:
	incl 0x1C(%rbp)
	jmp loop_2833
.p2align 0x4
.long 0x3D11
L_247929:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247930
L_247931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_247932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247932
.p2align 0x4
.long 0x3D12
L_247932:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_247930:
	incl 0x6C(%rbp)
	jmp loop_2836
.p2align 0x4
.long 0x3D13
L_247938:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247939
L_248004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_248005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248005
.p2align 0x4
.long 0x3D1C
L_248005:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_247939:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq 0x8(%r14),%r13
	je L_481549
L_247940:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x0(%r15),%r13
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1BD9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
L_247941:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xB8(%rbp)
	cmpq %r14,%r11
	jne L_247416
L_247943:
	testq %r11,%r11
	jz L_481547
L_247944:
	cmpq $0x7FFFFFFF,%r11
	ja L_247445
L_247945:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247946
L_247999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_248000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248000
.p2align 0x4
.long 0x3D14
L_248000:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_247946:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15DB,%rcx
	movq 0xB8(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_247947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247947
.p2align 0x4
.long 0x3D14
L_247947:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xC0(%rbp)
L_247948:
	movq $0x0,0xC8(%rbp)
loop_2837:
	movq 0xB8(%rbp),%r15
	cmpq %r15,0xC8(%rbp)
	jl L_481543
L_247949:
	movq 0xC0(%rbp),%r15
	movq $0x1803,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x98(%rbp)
	cmpq %rdx,%r14
	jne L_247416
L_247951:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0xA0(%rbp)
	je L_481541
L_247952:
	cmpq $0x7FFFFFFF,%rdx
	ja L_247445
L_247953:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_247954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247954
.p2align 0x4
.long 0x3D15
L_247954:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0xA8(%rbp)
L_247955:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2838:
	cmpq 0x98(%rbp),%r15
	jnl L_481535
L_247968:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	salq $0x4,%r10
	movq 0xC0(%rbp),%r14
	movq 0x8(%r14,%r10,1),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0xA8(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2838
.p2align 0x4
L_481535:
L_247956:
	movq 0xA8(%rbp),%r15
	movq $0x689,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0xA0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_481539
L_247957:
	movq 0x98(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_247445
L_247958:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15DD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_247959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247959
.p2align 0x4
.long 0x3D16
L_247959:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0xA0(%rbp)
L_247960:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2839:
	cmpq 0x98(%rbp),%r15
	jnl L_481536
L_247965:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2839
.p2align 0x4
L_481536:
L_247961:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247962
L_247963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_247964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247964
.p2align 0x4
.long 0x3D17
L_247964:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_247962:
	movq 0xA0(%rbp),%r15
	movq $0x1805,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x78(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x80(%rbp),%r9
	movq %r9,0x10(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x88(%rbp),%r9
	movq %r9,0x18(%r14,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x90(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0xA8(%rbp),%r9
	movq %r9,0x20(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x30,%r11
	movq %r15,0x28(%r14,%r11,1)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_2832
.p2align 0x4
L_481539:
L_247967:
	movq (globalObjptr+0x4E60)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_247960
.p2align 0x4
L_481541:
L_247970:
	movq (globalObjptr+0x4E58)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_247955
.p2align 0x4
L_481543:
L_247971:
	movq 0xC8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0xD0(%rbp)
	cmpq $0x1,%r11
	je L_481544
L_247972:
	movq $0x3835,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movl $0x2,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_247973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_481544:
L_247998:
	movq 0xA0(%rbp),%r15
	movq $0x1,0xD8(%rbp)
L_247977:
	movq $0x65D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xE8,%rbp
	leaq (L_247978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateScheme_0
.p2align 0x4
L_481547:
L_248002:
	movq (globalObjptr+0x4E50)(%rip),%r15
	movq %r15,0xC0(%rbp)
	jmp L_247948
.p2align 0x4
L_481549:
L_248003:
	movq $0x1BDD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1BD7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r13,0xA0(%rbp)
	addq $0x10,%r12
	jmp L_247941
.p2align 0x4
.long 0x3D1D
L_248014:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248015
L_248016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_248017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248017
.p2align 0x4
.long 0x3D1E
L_248017:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_248015:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x70(%rbp),%r14
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x78(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x98(%rbp),%r10
	movq %r10,0x10(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x80(%rbp),%r10
	movq %r10,0x18(%r15,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x90(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x28,%r13
	movq 0x88(%rbp),%r11
	movq %r11,0x20(%r15,%r13,1)
	incq %r14
	movq %r14,0x70(%rbp)
	jmp loop_2831
.p2align 0x4
.long 0x3D0A
L_247855:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_481552
L_247856:
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_247857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481552:
L_247868:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9B0
L_247496:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247497
L_247507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_247508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247508
.p2align 0x4
.long 0x3CDB
L_247508:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_247497:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1458,%r14
	jne L_247498
L_247499:
	movq 0x8(%r15),%r14
	movq 0x30(%r14),%r13
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_481553
L_247500:
	movb $0x1,%dl
	movq %r13,%r15
L_247501:
	movb %dl,0x0(%r15)
	movq $0x20B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x110B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_247502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481553:
L_247506:
	xorb %dl,%dl
	movq %r13,%r15
	jmp L_247501
.p2align 0x4
.long 0x3D05
L_247837:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247838
L_247848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_247849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247849
.p2align 0x4
.long 0x3D09
L_247849:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_247838:
	movq $0x377D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD8(%rbp)
	movl $0x2,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_247839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
.long 0x3D06
L_247842:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247843
L_247844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_247845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247845
.p2align 0x4
.long 0x3D07
L_247845:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_247843:
	incl 0x1C(%rbp)
	jmp loop_2829
.p2align 0x4
.long 0x3D04
L_247827:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_481558
L_247828:
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%rbp),%r14
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp openInterface_0
.p2align 0x4
L_481558:
L_247829:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CFE
L_247790:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247791
L_247823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_247824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247824
.p2align 0x4
.long 0x3D02
L_247824:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_247791:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_247798
L_247792:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_247793:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106E,%r13
	je L_481562
L_247794:
	cmpq $0x1,%r15
	je L_481559
L_247795:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x38(%rbp)
	jmp L_247793
.p2align 0x4
L_481559:
L_247796:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247798
L_247816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_247817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247817
.p2align 0x4
.long 0x3D02
L_247817:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_247798:
	movq $0x15D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_850:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481560
L_247799:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0xC8(%rbp)
	movq 0x8(%r13),%r15
	movq $0x24D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x8(%r13)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq $0x1731,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_247800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3814
.p2align 0x4
L_481560:
L_247814:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_247815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481562:
L_247818:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247819
L_247820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_247821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247821
.p2align 0x4
.long 0x3D03
L_247821:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_247819:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_850
.p2align 0x4
.long 0x2F95
L_247780:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247781
L_247782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_247783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247783
.p2align 0x4
.long 0x2F92
L_247783:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_247781:
	movq 0xE0(%rbp),%r15
	jmp loop_2818
.p2align 0x4
.long 0x3CE8
L_247593:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl $0x0,0x10(%rbp)
.p2align 0x4,,0x7
loop_2826:
	movl 0x10(%rbp),%r15d
	cmpl $0x1,%r15d
	jnl L_481609
L_247595:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1337,%r15
	je L_481568
L_247753:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_481567
.p2align 0x4,,0x7
L_247666:
	incl 0x10(%rbp)
	jmp loop_2826
.p2align 0x4
L_481567:
L_247754:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_247755:
	movq 0x20(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_247756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookupLongtycon_0
.p2align 0x4
L_481568:
L_247596:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_247666
L_247597:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_247598:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481607
.p2align 0x4,,0x7
L_247599:
	movq 0x20(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq %r9,0x30(%rbp)
	cmpq $0x1,%r10
	jne L_481587
L_247719:
	movq 0x8(%rbp),%r13
	movq 0x38(%r13),%r11
	movq 0x10(%r11),%r8
	movq 0x0(%r8),%rsp
	movq %rsp,0x38(%rbp)
	movq 0x8(%r9),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_247524
L_247720:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_481585
L_247721:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x14(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_247723:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_247724
L_247739:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_247724
L_247740:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x38(%rbp)
	je L_481579
L_247724:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x50(%rbp)
	jo L_247424
L_247725:
	cmpq $0x1,%r15
	je L_481569
L_247726:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	jmp L_247723
.p2align 0x4
L_481569:
L_247727:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481577
.p2align 0x4,,0x7
L_247728:
	movl 0x50(%rbp),%ecx
L_247729:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_247535
L_247730:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_247732
L_247736:
	movl %ecx,0x0(%r15)
L_247732:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_247733:
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_481574
L_247734:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x18(%r15),%r11
	movq 0x8(%r14),%r15
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r11,0x30(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x8(%r14)
.p2align 0x4,,0x7
L_247690:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481573
.p2align 0x4,,0x7
L_247691:
	movq $0x1135,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2675,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_481570
L_247692:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_247598
.p2align 0x4
L_481570:
L_247693:
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_247658:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481572
.p2align 0x4,,0x7
L_247659:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_247666
L_247660:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
L_247661:
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x110(%rbp)
	movq $0x180B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movl 0xE8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x130(%rbp)
	movq $0x1,0xF8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x108(%rbp)
	movl %r14d,0x118(%rbp)
	movq %r13,0x128(%rbp)
	addq $0xF8,%rbp
	leaq (L_247662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp share_0
.p2align 0x4
L_481572:
L_247670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247671
.p2align 0x4
.long 0x3CF0
L_247671:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247659
.p2align 0x4
L_481573:
L_247694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247695
.p2align 0x4
.long 0x3CF5
L_247695:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247691
.p2align 0x4
L_481574:
L_247735:
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (error_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481577:
L_247737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247738
.p2align 0x4
.long 0x3CF4
L_247738:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247728
.p2align 0x4
L_481579:
L_247742:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481582
.p2align 0x4,,0x7
L_247743:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_247535
L_247744:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481580
L_247745:
	movq 0x50(%rbp),%r15
	jmp L_247733
.p2align 0x4
L_481580:
L_247746:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_247733
.p2align 0x4
L_481582:
L_247747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247748
.p2align 0x4
.long 0x3CFA
L_247748:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247743
.p2align 0x4
L_481585:
L_247749:
	xorl %ecx,%ecx
	jmp L_247729
.p2align 0x4
L_481587:
L_247600:
	movq 0x8(%r10),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r10),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x38(%r11),%r10
	movq 0x10(%r10),%r8
	movq 0x0(%r8),%rsp
	movq %rsp,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_247524
L_247601:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_481605
L_247602:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x14(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_247604:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_247605
L_247708:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_247605
L_247709:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x48(%rbp)
	je L_481599
L_247605:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x68(%rbp)
	jo L_247424
L_247606:
	cmpq $0x1,%r15
	je L_481588
L_247607:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	jmp L_247604
.p2align 0x4
L_481588:
L_247608:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247609
L_247706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247707
.p2align 0x4
.long 0x3CF7
L_247707:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247609:
	movl 0x68(%rbp),%ecx
L_247610:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_247535
L_247611:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_247613
L_247705:
	movl %ecx,0x0(%r15)
L_247613:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_247614:
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_481594
L_247615:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x18(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x8(%r14)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_481593
L_247616:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_247617:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481592
.p2align 0x4,,0x7
L_247618:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481589
L_247619:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_247617
.p2align 0x4
L_481589:
L_247620:
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_247621:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481591
.p2align 0x4,,0x7
L_247622:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481590
L_247623:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_247621
.p2align 0x4
L_481590:
L_247624:
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq $0x1,0x48(%rbp)
L_247625:
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_247626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481591:
L_247699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247700
.p2align 0x4
.long 0x3CF6
L_247700:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247622
.p2align 0x4
L_481592:
L_247701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247702
.p2align 0x4
.long 0x3CF7
L_247702:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247618
.p2align 0x4
L_481593:
L_247703:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq $0x1,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_247625
.p2align 0x4
L_481594:
L_247704:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (error_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481599:
L_247711:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247712
L_247716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247717
.p2align 0x4
.long 0x3CF9
L_247717:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247712:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_247535
L_247713:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481600
L_247714:
	movq 0x68(%rbp),%r15
	jmp L_247614
.p2align 0x4
L_481600:
L_247715:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp L_247614
.p2align 0x4
L_481605:
L_247718:
	xorl %ecx,%ecx
	jmp L_247610
.p2align 0x4
L_481607:
L_247750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247751
.p2align 0x4
.long 0x3CFB
L_247751:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247599
.p2align 0x4
L_481609:
L_247594:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CDF
L_247549:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_247550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CE2
L_247559:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247560
L_247561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247562
.p2align 0x4
.long 0x3CE3
L_247562:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247560:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2681,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_247544:
	incl 0x14(%rbp)
	jmp loop_2825
.p2align 0x4
.long 0x3CDD
L_247542:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247543
L_247545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247546
.p2align 0x4
.long 0x3CDE
L_247546:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247543:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2681,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_247544
.p2align 0x4
.long 0x3CE6
L_247580:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247581
L_247585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_247586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247586
.p2align 0x4
.long 0x3CE7
L_247586:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_247581:
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_481612
L_247582:
L_247583:
	movq 0xF0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xF8(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x100(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0xF8(%rbp)
	jmp loop_2824
.p2align 0x4
L_481612:
L_247584:
	movq 0x78(%rbp),%r14
	xchgq %r14,%r15
	jmp L_247583
.p2align 0x4
.long 0xB63
L_247456:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r11
	movq %r11,0x40(%rbp)
	movq 0x50(%rbp),%r10
	movq %r10,0x48(%rbp)
	movq 0x28(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r8
	jne L_247416
L_247458:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_247459
L_247465:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_247416
L_247467:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r11,%r13
	jne L_247416
L_247469:
	cmpl %ebx,%ecx
	jne L_247459
L_247471:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2822:
	cmpl %ecx,%ebx
	je L_481620
L_247472:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_247474
L_247475:
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1056,%r9
	jne L_247459
L_247476:
	movq 0x0(%r10),%r9
	cmpq %r13,%r11
	jnb L_247474
L_247478:
	movq 0x40(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r9),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%rsp)
	jne L_481615
L_247480:
	incl %ebx
	jo L_247424
L_247481:
	jmp loop_2822
.p2align 0x4
L_481615:
L_247459:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247460
L_247463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_247464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247464
.p2align 0x4
.long 0x3CD8
L_247464:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_247460:
	movq $0x20B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
L_247461:
	movq $0x110B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_247462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481620:
L_247482:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247483
L_247484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247485
.p2align 0x4
.long 0x3CD9
L_247485:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_247483:
	movq $0x20B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_247461
.p2align 0x4
.long 0x1E43
L_247435:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247436
L_247437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_247438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247438
.p2align 0x4
.long 0x3CD6
L_247438:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_247436:
	incl 0x1C(%rbp)
	jmp loop_2819
.p2align 0x4
.long 0x3D0D
L_247905:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (not_57+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
.long 0x3D18
L_247973:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247974
L_247996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_247997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247997
.p2align 0x4
.long 0x3D1B
L_247997:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_247974:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	cmpq %r11,0xA8(%rbp)
	je L_481628
L_247975:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x145,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1BD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
L_247976:
	movq 0x20(%rbp),%r14
	movq %r14,0xD8(%rbp)
	jmp L_247977
.p2align 0x4
L_481628:
L_247995:
	movq $0x1BDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BD7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp L_247976
.p2align 0x4
.long 0x3D19
L_247978:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247979
L_247993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247994
.p2align 0x4
.long 0x3D1A
L_247994:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247979:
	movq $0x111D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1801,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0xD8(%rbp),%r10
	cmpq $0x1,%r10
	je L_481635
L_247980:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_247981
L_247982:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1054,%r13
	jne L_247981
L_247983:
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r9
	cmpq %r9,0x10(%r10)
	jne L_481632
L_247985:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x0,%r14
	jna L_247474
L_247987:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	jna L_247474
L_247989:
	movq %r11,%r15
	movq %r13,%r14
L_247990:
	movq 0xC0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xC8(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0xC8(%rbp)
	jmp loop_2837
.p2align 0x4
L_481632:
L_247981:
	movq (globalObjptr+0x4E68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481635:
L_247992:
	movq $0x1,%r14
	movq %r11,%r15
	jmp L_247990
.p2align 0x4
.long 0x3D0B
L_247857:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105D,%r15
	jne L_481640
L_247867:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
L_247859:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_247416
L_247861:
	cmpl $0x0,%r13d
	jl L_247449
L_247862:
	movl $0x0,0x1C(%rbp)
loop_2830:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481637
L_247863:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481637:
L_247864:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x60(%rbp)
	movb $0x2,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_247865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendVid_0
.p2align 0x4
L_481640:
L_247858:
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_247859
.p2align 0x4
.long 0x3CDA
L_247502:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247503
L_247504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_247505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247505
.p2align 0x4
.long 0x9AF
L_247505:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_247503:
	incl 0x28(%rbp)
	jmp loop_2823
.p2align 0x4
.long 0x3D05
L_247839:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247840
L_247846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_247847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247847
.p2align 0x4
.long 0x3D08
L_247847:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_247840:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_247841
.p2align 0x4
.long 0x3CFF
L_247800:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r13
	movq %r13,0x38(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_247805
L_247801:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_247802:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481643
L_247803:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_247802
.p2align 0x4
L_481643:
L_247805:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_247810
L_247806:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_247807:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481644
L_247808:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_247807
.p2align 0x4
L_481644:
L_247810:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_247811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openInterface_0
.p2align 0x4
.long 0x3D01
L_247815:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA458)(%rip),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_247811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x3CF8
L_247756:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247757
L_247776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247777
.p2align 0x4
.long 0x3CF5
L_247777:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247757:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_481649
L_247758:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_481647
L_247759:
	movq 0x0(%r13),%r11
	movq 0x20(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x409D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r13,0x0(%r8)
	addq $0x10,%r12
	movq $0x180D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r8,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x108(%rbp)
	addq $0x20,%r12
	movq $0x409D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r10,0x0(%r14)
	movq $0x180D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x20,%r12
	movq %r15,0x10(%r13)
	movq %r13,0x100(%rbp)
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_247760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2010
.p2align 0x4
L_481647:
L_247766:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_247666
L_247767:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x20(%rbp)
	jmp L_247755
.p2align 0x4
L_481649:
L_247769:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481651
L_247770:
	movq $0x2679,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_247666
L_247771:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_247755
.p2align 0x4
L_481651:
L_247773:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_247666
L_247774:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r11,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_247755
.p2align 0x4
.long 0x3CEE
L_247662:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247663
L_247667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247668
.p2align 0x4
.long 0x3CEF
L_247668:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247663:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_247666
L_247664:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_247661
.p2align 0x4
.long 0x3CF8
error_5:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
error_4:
	movq %r15,0xF8(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_247654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x3CE9
L_247626:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144A,%r14
	jne L_247498
L_247627:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_247416
L_247629:
	cmpl $0x0,%ecx
	jl L_247449
L_247630:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_2827:
	cmpl %ecx,%ebx
	jnl L_481659
L_247684:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x38(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r10)
	je L_481656
L_247685:
	incl %ebx
	jmp loop_2827
.p2align 0x4
L_481656:
L_247686:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247687
L_247696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247697
.p2align 0x4
.long 0x3CF6
L_247697:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247687:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481657
L_247688:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	jmp L_247625
.p2align 0x4
L_481657:
L_247689:
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_247690
.p2align 0x4
L_481659:
L_247631:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_247632:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481661
.p2align 0x4,,0x7
L_247633:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481660
L_247634:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_247632
.p2align 0x4
L_481660:
L_247635:
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq $0x1,0x38(%rbp)
L_247636:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_247637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481661:
L_247682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247683
.p2align 0x4
.long 0x3CF4
L_247683:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247633
.p2align 0x4
.long 0x3CDF
L_247550:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_247424
L_247551:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_247552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x743
L_247462:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	incl 0x24(%rbp)
	jmp loop_2821
.p2align 0x4
.long 0x3D0E
not_57:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	testl %r15d,%r15d
	jnz L_247909
L_247906:
	movq 0x30(%rbp),%r15
	movb $0x1,0x0(%r15)
	movl $0x1,%ecx
	jmp L_247907
.p2align 0x4
.long 0xAA9
L_247865:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x1C(%rbp)
	jmp loop_2830
.p2align 0x4
.long 0x3D00
L_247811:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	incl 0x1C(%rbp)
	jmp loop_2828
.p2align 0x4
.long 0x3CFC
L_247760:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247761
L_247764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247765
.p2align 0x4
.long 0x3CFD
L_247765:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247761:
	movq $0x2679,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_247666
L_247762:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_247755
.p2align 0x4
.long 0x3CED
L_247654:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_481669
L_247655:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_247598
.p2align 0x4
L_481669:
L_247656:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_247666
L_247657:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	jmp L_247658
.p2align 0x4
.long 0x3CEA
L_247637:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247638
L_247680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247681
.p2align 0x4
.long 0x3CF3
L_247681:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247638:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481671
L_247639:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_247636
.p2align 0x4
L_481671:
L_247640:
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_247641:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481673
.p2align 0x4,,0x7
L_247642:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481672
L_247643:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_247641
.p2align 0x4
L_481672:
L_247644:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_247645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481673:
L_247678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247679
.p2align 0x4
.long 0x3CF3
L_247679:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_247642
.p2align 0x4
.long 0x3CE0
L_247552:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247553
L_247556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_247557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247557
.p2align 0x4
.long 0x3CE1
L_247557:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_247553:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_247544
L_247555:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CEB
L_247645:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_247646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3CEC
L_247646:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247647
L_247676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247677
.p2align 0x4
.long 0x3CF2
L_247677:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247647:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_247648:
	addl 0x0(%r15),%ecx
	movl %ecx,0x14(%rbp)
	jo L_247424
L_247649:
	cmpq $0x1,%r14
	je L_481677
L_247650:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_247648
.p2align 0x4
L_481677:
L_247651:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247652
L_247674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_247675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247675
.p2align 0x4
.long 0x3CF1
L_247675:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_247652:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_481678
L_247653:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp error_4
.p2align 0x4
L_481678:
L_247673:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp error_4
.text
.p2align 0x4
.globl extendVid_0
.hidden extendVid_0
extendVid_0:
L_248025:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_248079
L_248026:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481696
L_248027:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq $0x111F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x48(%rbp)
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x0(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x18(%rbp),%r11
	movq 0x50(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x38(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r9),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_481695
L_248029:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_481694
L_248030:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x18(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_248032:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_248033
L_248068:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_248033
L_248069:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x60(%rbp)
	je L_481688
L_248033:
	movl 0x18(%rbp),%r13d
	incl %r13d
	movl %r13d,0x1C(%rbp)
	jo L_481687
L_248035:
	cmpq $0x1,%r15
	je L_481682
L_248036:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x18(%rbp)
	jmp L_248032
.p2align 0x4
L_481682:
L_248037:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248038
L_248066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_248067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248067
.p2align 0x4
.long 0x7EF
L_248067:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_248038:
	movl 0x1C(%rbp),%ecx
L_248039:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_481685
L_248041:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_248043
L_248065:
	movl %ecx,0x0(%r15)
L_248043:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_248044:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_10
L_248045:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x50(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne new_39
L_248051:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481683
L_248052:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10670)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEF70)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481683:
L_248059:
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_248060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_39:
new_10:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x267B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_248047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481685:
L_248040:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481687:
L_248034:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481688:
L_248071:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248072
L_248076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_248077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248077
.p2align 0x4
.long 0x3D21
L_248077:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_248072:
	movl 0x18(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_248040
L_248073:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481689
L_248074:
	movq 0x20(%rbp),%r15
	jmp L_248044
.p2align 0x4
L_481689:
L_248075:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp L_248044
.p2align 0x4
L_481694:
L_248078:
	xorl %ecx,%ecx
	jmp L_248039
.p2align 0x4
L_481695:
L_248028:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481696:
L_248079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_248080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248080
.p2align 0x4
.long 0x65A
L_248080:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_248027
.p2align 0x4
.long 0x6DB
L_248053:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x297A
L_248060:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248061
L_248062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248063
.p2align 0x4
.long 0x3D20
L_248063:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248061:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x267D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x297B
L_248047:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248048
L_248049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248050
.p2align 0x4
.long 0x3D1F
L_248050:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248048:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x267D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6DB
L_248054:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_248034
L_248055:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_248056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x1
L_248056:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481701
L_248057:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481701:
L_248058:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl elaborateScheme_0
.hidden elaborateScheme_0
elaborateScheme_0:
L_248081:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_248195
L_248082:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481702
L_248083:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x30(%r13),%r11
	movq 0x28(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x18(%r13),%r8
	movq 0x10(%r13),%rsp
	movq 0x8(%r13),%rsi
	movq 0x0(%r13),%rdi
	movq $0xB6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xBBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdi,0x0(%r14)
	movq %rsi,0x8(%r14)
	movq %rsp,0x10(%r14)
	movq %r8,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r10,0x28(%r14)
	movq %r11,0x30(%r14)
	addq $0x50,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_248084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_481702:
L_248195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_248196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248196
.p2align 0x4
.long 0x4AF
L_248196:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_248083
.p2align 0x4
.long 0xBA1
L_248084:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_481711
L_248085:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248086:
	incl %ecx
	jo L_481710
L_248088:
	cmpq $0x1,%r15
	je L_481704
L_248089:
	movq 0x8(%r15),%r15
	jmp L_248086
.p2align 0x4
L_481704:
L_248090:
L_248091:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_481709
L_248092:
	cmpq $0x7FFFFFFF,%rdx
	ja L_481708
L_248093:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_248094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248094
.p2align 0x4
.long 0xA48
L_248094:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_248095:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2840:
	cmpq 0x30(%rbp),%r15
	jnl L_481706
L_248189:
	cmpq $0x1,%r14
	je L_481705
L_248190:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2840
.p2align 0x4
L_481705:
L_248191:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481706:
L_248096:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248097
L_248187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248188
.p2align 0x4
.long 0xC44
L_248188:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248097:
	movq 0x40(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x3225,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_248098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMapi_0
.p2align 0x4
L_481708:
L_248165:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481709:
L_248193:
	movq (globalObjptr+0xD88)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_248095
.p2align 0x4
L_481710:
L_248087:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481711:
L_248194:
	xorl %ecx,%ecx
	jmp L_248091
.p2align 0x4
.long 0x95F
L_248098:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248099
L_248185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248186
.p2align 0x4
.long 0x70F
L_248186:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248099:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x38(%rbp)
	movslq %r11d,%r15
	cmpq %r13,%r15
	jne L_248101
L_248102:
	testl %r11d,%r11d
	jz L_481714
L_248103:
	movq 0x40(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_481713
L_248106:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x48(%rbp)
	cmpl $0x1,%r11d
	jg L_481712
L_248107:
	movq (globalObjptr+0xA058)(%rip),%r15
L_248108:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA18)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10678)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_248109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481712:
L_248183:
	movq (globalObjptr+0xE7E8)(%rip),%r15
	jmp L_248108
.p2align 0x4
L_481713:
L_248105:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481714:
L_248138:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_248101
L_248140:
	testq %rdx,%rdx
	jz L_481725
L_248141:
	cmpq $0x7FFFFFFF,%rdx
	ja L_248165
L_248142:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248143
.p2align 0x4
.long 0x1797
L_248143:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,%r15
L_248144:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2841:
	cmpq 0x20(%rbp),%r14
	jnl L_481723
L_248146:
	movl %r14d,%ebx
	movslq %ebx,%r13
	movq 0x10(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movq 0x40(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ecx
	movslq %ecx,%r13
	cmpq %r11,%r13
	jne L_481722
L_248148:
	xorl %ebx,%ebx
	movq %r9,%r13
.p2align 0x4,,0x7
loop_2842:
	cmpl %ebx,%ecx
	je L_248161
L_248149:
	movslq %ebx,%r10
	cmpq %r11,%r10
	jnb L_248105
L_248151:
	movq 0x40(%rbp),%rsp
	movq 0x0(%rsp,%r10,8),%rsi
	movq 0x8(%r13),%rsp
	movq 0x10(%rsp),%rdi
	movq 0x8(%rsi),%rsp
	movq 0x10(%rsp),%rdx
	cmpq %rdi,%rdx
	je L_481719
L_248152:
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%rdx),%r9
	jne L_481718
L_248156:
	xorq %r8,%r8
	xchgq %rdi,%r15
	xchgq %rdx,%r14
	movq %rsi,%r10
	movq %rdi,(localObjptr+0x0)(%rip)
	movq %rdx,(localWord64+0x0)(%rip)
.p2align 0x4,,0x7
vectorEqualLoop_193:
	cmpq %r8,%r9
	je L_481717
L_248157:
	movb 0x0(%r14,%r8,1),%spl
	cmpb %spl,0x0(%r15,%r8,1)
	jne L_481715
L_248159:
	incq %r8
	jmp vectorEqualLoop_193
.p2align 0x4
L_481715:
L_248154:
	incl %ebx
	jo L_248087
L_248155:
	movq (localObjptr+0x0)(%rip),%r15
	movq (localWord64+0x0)(%rip),%r14
	jmp loop_2842
.p2align 0x4
L_481717:
L_248160:
	movq %r10,%r13
	movq (localObjptr+0x0)(%rip),%r15
	movq (localWord64+0x0)(%rip),%r14
L_248161:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2841
.p2align 0x4
L_481718:
	movq %r15,(localObjptr+0x0)(%rip)
	movq %r14,(localWord64+0x0)(%rip)
	jmp L_248154
.p2align 0x4
L_481719:
L_248162:
	movq %rsi,%r13
	jmp L_248161
.p2align 0x4
L_481722:
L_248101:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481723:
L_248145:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481725:
L_248166:
	movq (globalObjptr+0x4E28)(%rip),%r15
	jmp L_248144
.p2align 0x4
.long 0x705
L_248109:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_248110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x705
L_248110:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248111
L_248181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248182
.p2align 0x4
.long 0x1856
L_248182:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248111:
	movq $0x3C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_248112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xA88
L_248112:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248113
L_248179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248180
.p2align 0x4
.long 0x990
L_248180:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248113:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_481730
L_248114:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_248115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481730:
L_248178:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_248123:
	testl %ecx,%ecx
	jz L_481736
L_248124:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_248125:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248126:
	addl 0x0(%r14),%ecx
	movl %ecx,0x50(%rbp)
	jo L_248087
L_248127:
	cmpq $0x1,%r15
	je L_481731
L_248128:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_248126
.p2align 0x4
L_481731:
L_248129:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248130
L_248171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248172
.p2align 0x4
.long 0x3D24
L_248172:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248130:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481733
L_248131:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_248132:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_248087
L_248133:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_248134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481733:
L_248170:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248132
.p2align 0x4
L_481736:
L_248173:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_248125
.p2align 0x4
.long 0x19C1
L_248115:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_248116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3D23
L_248134:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248135
L_248168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248169
.p2align 0x4
.long 0x86E
L_248169:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248135:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481738
L_248136:
	movq $0xBC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3790
.p2align 0x4
L_481738:
L_248167:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D22
L_248116:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248117
L_248176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_248177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248177
.p2align 0x4
.long 0x3D25
L_248177:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_248117:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248118:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_248087
L_248119:
	cmpq $0x1,%r14
	je L_481740
L_248120:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248118
.p2align 0x4
L_481740:
L_248121:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248122
L_248174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_248175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248175
.p2align 0x4
.long 0x19F4
L_248175:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_248122:
	movq 0x58(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_248123
.p2align 0x4
.long 0x18AF
L_248137:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_248138
.text
.p2align 0x4
.globl extendTycon_1
.hidden extendTycon_1
extendTycon_1:
L_248197:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_248251
L_248198:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481758
L_248199:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x50(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x38(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x0(%r9),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_481757
L_248201:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_481756
L_248202:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x10(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_248204:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_248205
L_248240:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_248205
L_248241:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x50(%rbp)
	je L_481750
L_248205:
	movl 0x10(%rbp),%r13d
	incl %r13d
	movl %r13d,0x14(%rbp)
	jo L_481749
L_248207:
	cmpq $0x1,%r15
	je L_481744
L_248208:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x10(%rbp)
	jmp L_248204
.p2align 0x4
L_481744:
L_248209:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248210
L_248238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_248239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248239
.p2align 0x4
.long 0xD07
L_248239:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_248210:
	movl 0x14(%rbp),%ecx
L_248211:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_481747
L_248213:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_248215
L_248237:
	movl %ecx,0x0(%r15)
L_248215:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_248216:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_11
L_248217:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r14)
	jne new_41
L_248223:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481745
L_248224:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10670)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA440)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_248225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481745:
L_248231:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_41:
new_11:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2683,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481747:
L_248212:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481749:
L_248206:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481750:
L_248243:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248244
L_248248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_248249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248249
.p2align 0x4
.long 0x1DCA
L_248249:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_248244:
	movl 0x10(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_248212
L_248245:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481751
L_248246:
	movq 0x18(%rbp),%r15
	jmp L_248216
.p2align 0x4
L_481751:
L_248247:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x18(%rbp),%r15
	jmp L_248216
.p2align 0x4
L_481756:
L_248250:
	xorl %ecx,%ecx
	jmp L_248211
.p2align 0x4
L_481757:
L_248200:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481758:
L_248251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_248252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248252
.p2align 0x4
.long 0x4AF
L_248252:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_248199
.p2align 0x4
.long 0x7CC
L_248225:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_248226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD45
L_248232:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248233
L_248234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248235
.p2align 0x4
.long 0xD46
L_248235:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248233:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1127,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2685,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1573
L_248219:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248220
L_248221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248222
.p2align 0x4
.long 0x2E9F
L_248222:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248220:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1127,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2685,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7CC
L_248226:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_248206
L_248227:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_248228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x1
L_248228:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481763
L_248229:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481763:
L_248230:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl share_0
.hidden share_0
share_0:
L_248253:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_248254
L_248390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_248391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248391
.p2align 0x4
.long 0x1131
L_248391:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_248254:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_248255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x1130
L_248255:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x1135
L_248256:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	je L_481765
L_248257:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_248258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481765:
L_248389:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp ensureFlexible_0
.p2align 0x4
.long 0x1130
L_248258:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_481766
L_248260:
	movq 0x8(%r14),%r15
	movq 0x28(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481766:
L_248259:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1135
L_248261:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_248259
L_248262:
	movq 0x8(%r14),%r15
	movq 0x28(%r15),%r13
	movq %r13,0x48(%rbp)
L_248263:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_248264
L_248383:
	andq $0x3,%r13
	jnz L_481767
L_248384:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_248385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481767:
L_248264:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_248265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3D2B
L_248385:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x580
L_248265:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_248259
L_248266:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x1135
L_248386:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r15,0x40(%rbp)
	jne L_248264
L_248388:
	jmp loop_3943
.p2align 0x4
.long 0x3D26
L_248267:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_248259
L_248268:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r11
	cmpq %r14,%r11
	jne L_248270
L_248271:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x58(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x60(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_248270
L_248273:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
both_0:
	cmpl 0x24(%rbp),%ecx
	jnl L_248275
L_248333:
	cmpl 0x60(%rbp),%ebx
	jnl L_248275
L_248335:
	movslq %ecx,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_248286
L_248337:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movslq %ebx,%r15
	cmpq 0x58(%rbp),%r15
	jnb L_248286
L_248339:
	movl %ebx,0x64(%rbp)
	movl %ecx,0x68(%rbp)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
loop_2845:
	movq 0x0(%r15),%rsp
	movq %rsp,0x70(%rbp)
	movq 0x8(%r15),%rsp
	movq %rsp,0x78(%rbp)
	movq 0x0(%r14),%rdi
	movq %rdi,0x80(%rbp)
	movq 0x8(%rsp),%rdi
	movq 0x10(%rdi),%rsi
	movq 0x8(%r14),%rsp
	movq 0x8(%rsp),%rdi
	movq 0x10(%rdi),%r8
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r9
	xorq %r11,%r11
	xorq %r13,%r13
.p2align 0x4,,0x7
loop_2846:
	cmpq %r10,%r13
	jl L_481811
L_248340:
	movl $0x1,%ecx
L_248341:
	cmpq %r9,%r11
	jnl L_248343
L_248368:
	testl %ecx,%ecx
	jnz L_248374
L_248369:
	movb 0x0(%rsi,%r13,1),%spl
	movb 0x0(%r8,%r11,1),%dil
	cmpb %dil,%spl
	jb L_481805
L_248370:
	cmpb %spl,%dil
	jb L_481772
L_248371:
	incq %r13
	incq %r11
	jmp loop_2846
.p2align 0x4
L_481772:
L_248343:
	cmpq %r8,%rsi
	je L_481803
L_248344:
	cmpq %r10,%r9
	jne L_248346
L_248352:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_195:
	cmpq %r10,%r14
	je L_481800
L_248353:
	movb 0x0(%r8,%r14,1),%r13b
	cmpb %r13b,0x0(%rsi,%r14,1)
	jne L_481773
L_248355:
	incq %r14
	jmp vectorEqualLoop_195
.p2align 0x4
L_481773:
L_248346:
	movl 0x64(%rbp),%r13d
	incl %r13d
	jo L_248297
L_248347:
	cmpl 0x60(%rbp),%r13d
	jnl L_481775
L_248349:
	movslq %r13d,%r14
	cmpq 0x58(%rbp),%r14
	jnb L_481774
L_248351:
	movl %r13d,0x64(%rbp)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
	jmp loop_2845
.p2align 0x4
L_481774:
L_248286:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481775:
L_248275:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_248270
L_248277:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_481797
L_248279:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
both_1:
	cmpl 0x24(%rbp),%ecx
	jnl L_248281
L_248282:
	cmpl 0x48(%rbp),%ebx
	jnl L_248281
L_248284:
	movslq %ecx,%r15
	cmpq 0x38(%rbp),%r15
	jnb L_248286
L_248287:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movslq %ebx,%r15
	cmpq 0x40(%rbp),%r15
	jnb L_248286
L_248289:
	movl %ebx,0x4C(%rbp)
	movl %ecx,0x50(%rbp)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
loop_2843:
	movq 0x0(%r15),%rsp
	movq %rsp,0x58(%rbp)
	movq 0x8(%r15),%rsp
	movq %rsp,0x60(%rbp)
	movq 0x0(%r14),%rdi
	movq %rdi,0x68(%rbp)
	movq 0x8(%rsp),%rdi
	movq 0x10(%rdi),%rsi
	movq 0x8(%r14),%rsp
	movq 0x8(%rsp),%rdi
	movq 0x10(%rdi),%r8
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r9
	xorq %r11,%r11
	xorq %r13,%r13
.p2align 0x4,,0x7
loop_2844:
	cmpq %r10,%r13
	jl L_481792
L_248290:
	movl $0x1,%ecx
L_248291:
	cmpq %r9,%r11
	jnl L_248293
L_248319:
	testl %ecx,%ecx
	jnz L_248325
L_248320:
	movb 0x0(%rsi,%r13,1),%spl
	movb 0x0(%r8,%r11,1),%dil
	cmpb %dil,%spl
	jb L_481786
L_248321:
	cmpb %spl,%dil
	jb L_481776
L_248322:
	incq %r13
	incq %r11
	jmp loop_2844
.p2align 0x4
L_481776:
L_248293:
	cmpq %rsi,%r8
	je L_481784
L_248294:
	cmpq %r10,%r9
	jne L_248296
L_248303:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_194:
	cmpq %r14,%r10
	je L_481781
L_248304:
	movb 0x0(%r8,%r14,1),%r13b
	cmpb %r13b,0x0(%rsi,%r14,1)
	jne L_481777
L_248306:
	incq %r14
	jmp vectorEqualLoop_194
.p2align 0x4
L_481777:
L_248296:
	movl 0x4C(%rbp),%r13d
	incl %r13d
	jo L_481780
L_248298:
	cmpl 0x48(%rbp),%r13d
	jnl L_481779
L_248300:
	movslq %r13d,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_248286
L_248302:
	movl %r13d,0x4C(%rbp)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
	jmp loop_2843
.p2align 0x4
L_481779:
L_248281:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481780:
L_248297:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481781:
L_248307:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248309
L_248313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_248314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248314
.p2align 0x4
.long 0x3D28
L_248314:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_248309:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x409F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movq 0x60(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x0(%rbp),%r8
	movq %r8,0x8(%r10)
	movq %r15,0x10(%r10)
	movq $0x180D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x70(%rbp)
	movq $0x409F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r9,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x180D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x20,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x68(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_248310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2010
.p2align 0x4
L_481784:
L_248315:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248309
L_248317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_248318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248318
.p2align 0x4
.long 0x3D28
L_248318:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_248309
.p2align 0x4
L_481786:
L_248325:
	movl 0x50(%rbp),%r13d
	incl %r13d
	jo L_248297
L_248326:
	cmpl 0x24(%rbp),%r13d
	jnl L_248281
L_248328:
	movslq %r13d,%r15
	cmpq 0x38(%rbp),%r15
	jnb L_248286
L_248330:
	movl %r13d,0x50(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,%r15
	jmp loop_2843
.p2align 0x4
L_481792:
L_248332:
	xorl %ecx,%ecx
	jmp L_248291
.p2align 0x4
L_481797:
L_248270:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481800:
L_248356:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248358
L_248362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248363
.p2align 0x4
.long 0x3D2A
L_248363:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248358:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x78,%rbp
	leaq (L_248359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp share_0
.p2align 0x4
L_481803:
L_248364:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248358
L_248366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248367
.p2align 0x4
.long 0x3D2A
L_248367:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_248358
.p2align 0x4
L_481805:
L_248374:
	movl 0x68(%rbp),%r13d
	incl %r13d
	jo L_248297
L_248375:
	cmpl 0x24(%rbp),%r13d
	jnl L_248275
L_248377:
	movslq %r13d,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_248286
L_248379:
	movl %r13d,0x68(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,%r15
	jmp loop_2845
.p2align 0x4
L_481811:
L_248381:
	xorl %ecx,%ecx
	jmp L_248341
.p2align 0x4
.long 0x3D27
L_248310:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x50(%rbp),%ecx
	incl %ecx
	jo L_248297
L_248311:
	movl 0x4C(%rbp),%ebx
	incl %ebx
	jo L_248297
L_248312:
	jmp both_1
.p2align 0x4
.long 0x3D29
L_248359:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x68(%rbp),%ecx
	incl %ecx
	jo L_248297
L_248360:
	movl 0x64(%rbp),%ebx
	incl %ebx
	jo L_248297
L_248361:
	jmp both_0
.text
.p2align 0x4
.globl x_2010
.hidden x_2010
x_2010:
L_248392:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_248601
L_248393:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481828
L_248394:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	andq $0x1,%r14
	jnz L_481825
L_248395:
	andq $0x1,%r11
	jnz L_481824
L_248533:
	movq 0x38(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x204E,%r14
	je L_481823
L_248596:
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq $0x2A73,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq %r13,%r14
L_248535:
	movq %r14,0x68(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x10690)(%rip),%r15
	movq %r15,0x78(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x68,%rbp
	leaq (L_248536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFlex_0
.p2align 0x4
L_481823:
L_248534:
	movq 0x0(%r13),%r14
	movq $0x2A75,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_248535
.p2align 0x4
L_481824:
L_248396:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481825:
L_248597:
	movq 0x60(%rbp),%r14
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_248396
L_248598:
	shrq $0x1,%r11
	movl %r11d,%r14d
	cmpl %r13d,%r14d
	jne L_248396
	jmp L_248533
.p2align 0x4
L_481828:
L_248601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_248602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248602
.p2align 0x4
.long 0x4E8
L_248602:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_248394
.p2align 0x4
.long 0x3D3E
L_248536:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248537
L_248594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_248595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248595
.p2align 0x4
.long 0x3D42
L_248595:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_248537:
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x204E,%r15
	je L_481830
L_248593:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x2A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq %r14,%r15
L_248539:
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x10690)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	addq $0x18,%rbp
	leaq (L_248540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFlex_0
.p2align 0x4
L_481830:
L_248538:
	movq 0x0(%r14),%r15
	movq $0x2A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_248539
.p2align 0x4
.long 0x3D2C
L_248397:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248398
L_248530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_248531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248531
.p2align 0x4
.long 0x3D39
L_248531:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_248398:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x204E,%r14
	je L_481847
L_248486:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	cmpq $0x1,%r14
	je L_481846
L_248487:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_248488:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481845
.p2align 0x4,,0x7
L_248489:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481832
L_248490:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_248488
.p2align 0x4
L_481832:
L_248492:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x26AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_248493:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481844
.p2align 0x4,,0x7
L_248494:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481833
L_248495:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_248493
.p2align 0x4
L_481833:
L_248496:
	movq 0x70(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_248497:
	cmpq $0x1,%r15
	je L_248507
L_248498:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_248499:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481842
.p2align 0x4,,0x7
L_248500:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_481834
L_248501:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_248499
.p2align 0x4
L_481834:
L_248502:
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
L_248503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481841
.p2align 0x4,,0x7
L_248504:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_481835
L_248505:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_248503
.p2align 0x4
L_481835:
L_248506:
	movq %r15,0x58(%rbp)
L_248507:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481836
L_248508:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_248497
.p2align 0x4
L_481836:
L_248509:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248510
L_248518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_248519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248519
.p2align 0x4
.long 0x3D3A
L_248519:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_248510:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	cmpq $0x1,%r14
	je L_481839
L_248511:
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r14
	cmpq $0x1,%r10
	je L_248514
L_248512:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	je L_481837
L_248513:
	movq 0x8(%r14),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
L_248514:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_248400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481837:
L_248515:
	movq %r10,%r14
	jmp L_248514
.p2align 0x4
L_481839:
L_248517:
	movq 0x0(%r13),%r11
	xchgq %r11,%r14
	jmp L_248514
.p2align 0x4
L_481841:
L_248520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_248521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248521
.p2align 0x4
.long 0x3D3B
L_248521:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_248504
.p2align 0x4
L_481842:
L_248522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248523
.p2align 0x4
.long 0x3D3C
L_248523:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_248500
.p2align 0x4
L_481844:
L_248525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_248526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248526
.p2align 0x4
.long 0x3D3D
L_248526:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_248494
.p2align 0x4
L_481845:
L_248527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248528
.p2align 0x4
.long 0x3D3C
L_248528:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_248489
.p2align 0x4
L_481846:
L_248529:
	movq $0x1,%r15
	jmp L_248492
.p2align 0x4
L_481847:
L_248399:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x522
L_248540:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
L_248541:
	movq 0x8(%rbp),%r15
	andq $0x3,%r15
	jz L_481849
L_248542:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481849:
L_248544:
	movq 0x10(%rbp),%r15
	andq $0x3,%r15
	jz L_481850
L_248545:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481850:
L_248546:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_248547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x3D2D
L_248400:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248401
L_248484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_248485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248485
.p2align 0x4
.long 0x3D39
L_248485:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_248401:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10640)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E6
L_248547:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1458,%r15
	jne L_481852
L_248549:
	movq 0x8(%r14),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movl 0x8(%r15),%r13d
	movl %r13d,0x28(%rbp)
	movl 0xC(%r15),%r13d
	movl %r13d,0x2C(%rbp)
	movl 0x10(%r15),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_248550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481852:
L_248548:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D2E
L_248402:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	andq $0x1,%r15
	jnz L_481853
L_248403:
	movq (globalObjptr+0x10648)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481853:
L_248482:
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_248483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x745
L_248550:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1458,%r15
	jne L_248548
L_248551:
	movq 0x8(%r14),%r15
	movl 0xC(%r15),%r13d
	movl %r13d,0x34(%rbp)
	movl 0x10(%r15),%r13d
	movl %r13d,0x40(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_248552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x3D2F
L_248404:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x10680)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D2F
L_248483:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D3F
L_248552:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_248553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x3D30
L_248405:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248406
L_248480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_248481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248481
.p2align 0x4
.long 0x155B
L_248481:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_248406:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x204E,%r14
	je L_481870
L_248436:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	cmpq $0x1,%r14
	je L_481869
L_248437:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_248438:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481868
.p2align 0x4,,0x7
L_248439:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481855
L_248440:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_248438
.p2align 0x4
L_481855:
L_248442:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x26AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_248443:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481867
.p2align 0x4,,0x7
L_248444:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481856
L_248445:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_248443
.p2align 0x4
L_481856:
L_248446:
	movq 0x80(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x78(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_248447:
	cmpq $0x1,%r15
	je L_248457
L_248448:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
L_248449:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481865
.p2align 0x4,,0x7
L_248450:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_481857
L_248451:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_248449
.p2align 0x4
L_481857:
L_248452:
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
L_248453:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481864
.p2align 0x4,,0x7
L_248454:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_481858
L_248455:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_248453
.p2align 0x4
L_481858:
L_248456:
	movq %r15,0x78(%rbp)
L_248457:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481859
L_248458:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_248447
.p2align 0x4
L_481859:
L_248459:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248460
L_248468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_248469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248469
.p2align 0x4
.long 0x3D36
L_248469:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_248460:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	cmpq $0x1,%r14
	je L_481862
L_248461:
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r14
	cmpq $0x1,%r10
	je L_248464
L_248462:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	je L_481860
L_248463:
	movq 0x8(%r14),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
L_248464:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_248408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481860:
L_248465:
	movq %r10,%r14
	jmp L_248464
.p2align 0x4
L_481862:
L_248467:
	movq 0x0(%r13),%r11
	xchgq %r11,%r14
	jmp L_248464
.p2align 0x4
L_481864:
L_248470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248471
.p2align 0x4
.long 0x3D37
L_248471:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_248454
.p2align 0x4
L_481865:
L_248472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248473
.p2align 0x4
.long 0x156F
L_248473:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_248450
.p2align 0x4
L_481867:
L_248475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248476
.p2align 0x4
.long 0x3D38
L_248476:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_248444
.p2align 0x4
L_481868:
L_248477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248478
.p2align 0x4
.long 0x156F
L_248478:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_248439
.p2align 0x4
L_481869:
L_248479:
	movq $0x1,%r15
	jmp L_248442
.p2align 0x4
L_481870:
L_248407:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x3D40
L_248553:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248554
L_248591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248592
.p2align 0x4
.long 0x3D41
L_248592:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248554:
	movq 0x10(%rbp),%r15
	movq 0x50(%rbp),%r14
	cmpq %r14,%r15
	je L_248561
L_248555:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1458,%r11
	jne L_248556
L_248557:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x1458,%r10
	jne L_248556
L_248558:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_481883
L_248559:
	movq $0x28B3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r10d,%r11d
	jne L_248561
L_248585:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1458,%r10
	jne L_481881
L_248586:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_481880
L_248587:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1458,%r13
	jne L_481879
L_248588:
	movq 0x8(%r15),%r13
	movq $0x28B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
L_248561:
	movq 0x48(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x38(%rbp),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x0,%r15b
	je L_481877
	cmpb $0x2,%r15b
	je L_248580
L_248562:
	cmpb $0x0,%r14b
	je L_481875
	cmpb $0x2,%r14b
	je L_481874
L_248563:
	movb $0x1,%dl
L_248564:
	movq $0xFE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movzbl %dl,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movl 0x40(%rbp),%ecx
	cmpl %ecx,0x30(%rbp)
	jl L_481873
L_248565:
L_248566:
	movq $0xFED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq (globalObjptr+0x4D50)(%rip),%r11
	movq %r11,0x0(%r13)
	movl 0x2C(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_481872
L_248567:
	movl 0x34(%rbp),%ebx
L_248568:
	movq $0xFEF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x10(%rbp)
	movl %ebx,0xC(%r11)
	movl %ecx,0x10(%r11)
	movq %r13,0x20(%r11)
	movq %r15,0x28(%r11)
	movq %r14,0x30(%r11)
	addq $0x40,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r11)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x8(%r11)
	movl $0x0,0x14(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r11)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_248569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481872:
L_248575:
	movl $0x1,%ebx
	jmp L_248568
.p2align 0x4
L_481873:
L_248576:
	movl 0x30(%rbp),%r13d
	xchgl %r13d,%ecx
	jmp L_248566
.p2align 0x4
L_481874:
L_248580:
	movb $0x2,%dl
	jmp L_248564
.p2align 0x4
L_481875:
L_248578:
	xorb %dl,%dl
	jmp L_248564
.p2align 0x4
L_481877:
L_248581:
	cmpb $0x2,%r14b
	je L_248580
	jmp L_248578
.p2align 0x4
L_481879:
L_248571:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481880:
L_248416:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481881:
L_248556:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481883:
L_248589:
	movq $0x28B3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_248561
.p2align 0x4
.long 0x3D31
L_248408:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248409
L_248434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_248435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248435
.p2align 0x4
.long 0x3D35
L_248435:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_248409:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movl 0x70(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10640)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_248410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2B
L_248569:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248570
L_248573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_248574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248574
.p2align 0x4
.long 0x2C
L_248574:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_248570:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1458,%r13
	jne L_248571
L_248572:
	movl 0x0(%r14),%r13d
	movq $0x28B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D32
L_248410:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x68(%rbp),%r15
	andq $0x1,%r15
	jnz L_481891
L_248411:
	movq (globalObjptr+0x10648)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_248412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481891:
L_248432:
	movq 0x68(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_248433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3D33
L_248412:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x10688)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_248413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D33
L_248433:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_248412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3A28
L_248413:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248414
L_248430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_248431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248431
.p2align 0x4
.long 0x7E6
L_248431:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_248414:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248415:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_248416
L_248417:
	cmpq $0x1,%r14
	je L_481892
L_248418:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248415
.p2align 0x4
L_481892:
L_248419:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248420
L_248428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248429
.p2align 0x4
.long 0x3D34
L_248429:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248420:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481894
L_248421:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_248422:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_248416
L_248423:
	movl %r13d,0x0(%r15)
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_248424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481894:
L_248427:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248422
.p2align 0x4
.long 0x1
L_248424:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481898
L_248425:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481898:
L_248426:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl getFlex_0
.hidden getFlex_0
getFlex_0:
L_248603:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_248604
L_248750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_248751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248751
.p2align 0x4
.long 0x100C
L_248751:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_248604:
	movq 0x28(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_481904
	cmpq $0x105D,%r15
	je L_481902
L_248605:
	movq 0x0(%r13),%r13
	movq %r13,%r15
loopTycon_0:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	je L_481899
L_248703:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
L_248704:
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481899:
L_248606:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
L_248607:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481900
L_248608:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_481900:
L_248610:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_481901
L_248700:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_248701+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_481901:
L_248611:
L_248612:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (toString_354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481902:
L_248749:
	movq 0x8(%r13),%r13
	movq %r13,%r15
L_248741:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	je L_481903
L_248743:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_248704
.p2align 0x4
L_481903:
L_248742:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_248607
.p2align 0x4
L_481904:
L_248748:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_248716:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
.long 0x251E
L_248705:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	movq %r14,%r13
	shrq $0x1,%r13
	cmpq $0x1458,%r13
	jne L_481913
L_248707:
	movq 0x8(%r15),%r13
	movl 0x10(%r13),%r11d
	movq 0x20(%r13),%r14
	movq 0x0(%r14),%r10
L_248708:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_248709
L_248710:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xD5C,%r15
	jne L_481911
L_248711:
	movq 0x0(%r10),%r15
	cmpq $0x1,%r15
	je L_481909
L_248712:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x105E,%r14
	jne L_481908
L_248713:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_481907
	cmpq $0x105D,%r15
	je L_481906
L_248714:
	movq 0x0(%r14),%r15
	jmp loopTycon_0
.p2align 0x4
L_481906:
L_248740:
	movq 0x8(%r14),%r15
	jmp L_248741
.p2align 0x4
L_481907:
L_248715:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp L_248716
.p2align 0x4
L_481908:
L_248744:
	movq (globalObjptr+0x4D70)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481909:
L_248745:
	cmpl 0x18(%rbp),%r11d
	jl L_481910
L_248746:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481910:
L_248747:
	movq (globalObjptr+0x106B8)(%rip),%r15
	movq %r15,0x18(%rbp)
error_7:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_248621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481911:
L_248709:
	movq (globalObjptr+0x4D38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481913:
L_248706:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D43
L_248609:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_248610
.p2align 0x4
.long 0x3D47
L_248701:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_248612
.p2align 0x4
.long 0x3D44
toString_354:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (rev_352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x251E
L_248717:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r10
	movq %r10,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_248718
L_248719:
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_248721
L_248722:
	movq 0x20(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r11,%r10
	jne L_481922
L_248724:
	cmpl %ecx,%ebx
	jne L_248718
L_248726:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2847:
	cmpl %ecx,%ebx
	je L_481919
L_248727:
	movslq %ebx,%r10
	cmpq %r14,%r10
	jnb L_248729
L_248730:
	movq 0x0(%r13,%r10,8),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r8
	shrq $0x1,%r8
	cmpq $0x1056,%r8
	jne L_248718
L_248731:
	movq 0x0(%r9),%r8
	cmpq %r11,%r10
	jnb L_481916
L_248733:
	movq 0x20(%rbp),%r9
	movq 0x0(%r9,%r10,8),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%r8),%rdi
	movq 0x8(%rdi),%rdx
	cmpq %rdx,0x8(%rsi)
	jne L_481915
L_248735:
	incl %ebx
	jo L_481914
L_248736:
	jmp loop_2847
.p2align 0x4
L_481914:
L_248630:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481915:
L_248718:
	movq (globalObjptr+0x106B0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp error_7
.p2align 0x4
L_481916:
L_248729:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481919:
L_248737:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	je L_481920
L_248739:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_248704
.p2align 0x4
L_481920:
L_248738:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_248607
.p2align 0x4
L_481922:
L_248721:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2497
L_248621:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248622
L_248693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_248694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248694
.p2align 0x4
.long 0xE7B
L_248694:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_248622:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1539,%r14
	je L_481926
	cmpq $0x153A,%r14
	je L_481925
L_248623:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_248624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481925:
L_248692:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_248624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481926:
L_248648:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	cmpq $0x1,%r14
	je L_481941
L_248649:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_248650:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481940
.p2align 0x4,,0x7
L_248651:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481927
L_248652:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_248650
.p2align 0x4
L_481927:
L_248654:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x26AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x38(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_248655:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481939
.p2align 0x4,,0x7
L_248656:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481928
L_248657:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_248655
.p2align 0x4
L_481928:
L_248658:
	movq 0x48(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_248659:
	cmpq $0x1,%r15
	je L_248669
L_248660:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_248661:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481937
.p2align 0x4,,0x7
L_248662:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481929
L_248663:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_248661
.p2align 0x4
L_481929:
L_248664:
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
L_248665:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481936
.p2align 0x4,,0x7
L_248666:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_481930
L_248667:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_248665
.p2align 0x4
L_481930:
L_248668:
	movq %r15,0x40(%rbp)
L_248669:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481931
L_248670:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_248659
.p2align 0x4
L_481931:
L_248671:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248672
L_248680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248681
.p2align 0x4
.long 0xAA7
L_248681:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248672:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	cmpq $0x1,%r14
	je L_481934
L_248673:
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r14
	cmpq $0x1,%r10
	je L_248676
L_248674:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	je L_481932
L_248675:
	movq 0x8(%r14),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
L_248676:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	addq $0x40,%rbp
	leaq (L_248624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481932:
L_248677:
	movq %r10,%r14
	jmp L_248676
.p2align 0x4
L_481934:
L_248679:
	movq 0x0(%r13),%r11
	xchgq %r11,%r14
	jmp L_248676
.p2align 0x4
L_481936:
L_248682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248683
.p2align 0x4
.long 0x85D
L_248683:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_248666
.p2align 0x4
L_481937:
L_248684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_248685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248685
.p2align 0x4
.long 0x9E4
L_248685:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_248662
.p2align 0x4
L_481939:
L_248687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_248688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248688
.p2align 0x4
.long 0x8A8
L_248688:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_248656
.p2align 0x4
L_481940:
L_248689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_248690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248690
.p2align 0x4
.long 0x9E4
L_248690:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_248651
.p2align 0x4
L_481941:
L_248691:
	movq $0x1,%r15
	jmp L_248654
.p2align 0x4
.long 0x3D44
rev_352:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_481945
L_248613:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_248614:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481944
.p2align 0x4,,0x7
L_248615:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_481943
L_248616:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_248614
.p2align 0x4
L_481943:
L_248618:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_248619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481944:
L_248697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_248698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248698
.p2align 0x4
.long 0x647
L_248698:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_248615
.p2align 0x4
L_481945:
L_248699:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_248618
.p2align 0x4
.long 0x812
L_248624:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248625
L_248646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_248647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248647
.p2align 0x4
.long 0x73E
L_248647:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_248625:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x106A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x106A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3D44
L_248619:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248620
L_248695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_248696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248696
.p2align 0x4
.long 0x983
L_248696:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_248620:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10698)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (error_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3D45
L_248626:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D44
error_6:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp error_7
.p2align 0x4
.long 0x3D45
L_248627:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248628
L_248644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248645
.p2align 0x4
.long 0x3D46
L_248645:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248628:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248629:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_248630
L_248631:
	cmpq $0x1,%r14
	je L_481948
L_248632:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248629
.p2align 0x4
L_481948:
L_248633:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248634
L_248642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_248643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248643
.p2align 0x4
.long 0x798
L_248643:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_248634:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481950
L_248635:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_248636:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_248630
L_248637:
	movl %r13d,0x0(%r15)
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_248638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481950:
L_248641:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248636
.p2align 0x4
.long 0x1
L_248638:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481954
L_248639:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481954:
L_248640:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3943
.hidden loop_3943
loop_3943:
L_248752:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_248753
L_248814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_248815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248815
.p2align 0x4
.long 0x646
L_248815:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_248753:
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_248754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x27CB
L_248754:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_481956
L_248756:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movl 0x4(%r15),%r13d
	movl %r13d,0x24(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481956:
L_248755:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1135
L_248757:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248758
L_248812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_248813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248813
.p2align 0x4
.long 0x3D4D
L_248813:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_248758:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_248755
L_248759:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_481957
L_248792:
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_248793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481957:
L_248761:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_248763
L_248764:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_248763
L_248766:
	cmpl %r13d,%ecx
	jne L_248768
L_248769:
	cmpl $0x0,%r13d
	jl L_248768
L_248770:
	xorl %ecx,%ecx
loop_2848:
	cmpl 0x8(%rbp),%ecx
	jnl L_481958
L_248786:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0xC(%rbp)
	movslq %ecx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r9
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r8
	movq $0x409F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x20,%r12
	movq %r10,0x0(%rsp)
	movq 0x0(%rbp),%rsi
	movq %rsi,0x8(%rsp)
	movq %r15,0x10(%rsp)
	movq $0x180D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x70(%rbp)
	addq $0x20,%r12
	movq $0x409F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x20,%r12
	movq %rsi,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x180D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r8,0x8(%r14)
	movq %r9,0x10(%r14)
	movq %r14,0x68(%rbp)
	addq $0x20,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_248787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2010
.p2align 0x4
L_481958:
L_248771:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_248763
L_248773:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_481962
L_248775:
	cmpl %ecx,%r13d
	jne L_248768
L_248777:
	cmpl $0x0,%r13d
	jl L_481960
L_248778:
	xorl %ecx,%ecx
loop_2849:
	cmpl 0x8(%rbp),%ecx
	jnl L_481959
L_248780:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0xC(%rbp)
	movslq %ecx,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x68(%rbp)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x60,%rbp
	leaq (L_248781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3943
.p2align 0x4
L_481959:
L_248779:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481960:
L_248768:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481962:
L_248763:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D4B
L_248793:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_248794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3D49
L_248787:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248788
L_248789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248790
.p2align 0x4
.long 0x3D4A
L_248790:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248788:
	movl 0xC(%rbp),%ecx
	jmp loop_2848
.p2align 0x4
.long 0x3440
L_248781:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248782
L_248783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248784
.p2align 0x4
.long 0x3D48
L_248784:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248782:
	movl 0xC(%rbp),%ecx
	jmp loop_2849
.p2align 0x4
.long 0x3D4C
L_248794:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248795
L_248810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248811
.p2align 0x4
.long 0x2958
L_248811:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248795:
	movq 0x10(%rbp),%r15
	movq 0x8(%rbp),%r14
	cmpq %r14,%r15
	je L_248761
L_248796:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x144A,%r11
	jne L_248797
L_248798:
	movl 0x0(%r13),%r11d
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x144A,%r10
	jne L_248797
L_248799:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_481976
L_248800:
	movq $0x2897,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r14)
	cmpl %r10d,%r11d
	jne L_248761
L_248802:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x144A,%r10
	jne L_481974
L_248803:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_481973
L_248805:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	jne L_481972
L_248807:
	movq 0x8(%r14),%r13
	movq $0x2895,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_248761
.p2align 0x4
L_481972:
L_248806:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481973:
L_248804:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481974:
L_248797:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481976:
L_248808:
	movq $0x2897,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_248761
.text
.p2align 0x4
.globl ensureFlexible_0
.hidden ensureFlexible_0
ensureFlexible_0:
L_248816:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_248874
L_248817:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481981
L_248818:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_248819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481981:
L_248874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_248875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248875
.p2align 0x4
.long 0x45C
L_248875:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_248818
.p2align 0x4
.long 0x27CB
L_248819:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_481983
L_248821:
	movq 0x8(%r14),%r15
	movq 0x20(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r13,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_248822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_481983:
L_248820:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1130
L_248822:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248823
L_248872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248873
.p2align 0x4
.long 0x113A
L_248873:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248823:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_481986
L_248824:
	movq $0x1,0x38(%rbp)
L_248825:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481984
L_248826:
	movl $0x1,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_248827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481984:
L_248839:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_481985
L_248840:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
L_248841:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3DCB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_481985:
L_248846:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481986:
L_248866:
	movq 0x8(%rbp),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_248867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0xD41
L_248827:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248828
L_248863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_248864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248864
.p2align 0x4
.long 0x1131
L_248864:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_248828:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_248820
L_248829:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x24(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_248831
L_248832:
	cmpl $0x0,%r14d
	jl L_248856
L_248833:
	movl $0x0,0x48(%rbp)
loop_2850:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x48(%rbp)
	jl L_481991
L_248834:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_481990
L_248836:
	cmpl $0x0,%r13d
	jl L_481989
L_248837:
	movl $0x0,0x14(%rbp)
loop_2851:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_248839
L_248850:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x2A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x20,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0x10690)(%rip),%r15
	movq %r15,0x58(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x48,%rbp
	leaq (L_248851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFlex_0
.p2align 0x4
L_481989:
L_248856:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481990:
L_248831:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481991:
L_248857:
	movslq 0x48(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_248858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ensureFlexible_0
.p2align 0x4
.long 0x513
L_248842:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248843
L_248847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_248848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248848
.p2align 0x4
.long 0x515
L_248848:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_248843:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_248846
L_248844:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_248841
.p2align 0x4
.long 0x1130
L_248867:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248868
L_248870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248871
.p2align 0x4
.long 0x113A
L_248871:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248868:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144A,%r14
	jne L_248820
L_248869:
	movq 0x8(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	movq %r15,0x38(%rbp)
	movq %r14,%r15
	jmp L_248825
.p2align 0x4
.long 0x580
L_248851:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248852
L_248853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_248854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248854
.p2align 0x4
.long 0x5C4
L_248854:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_248852:
	incl 0x14(%rbp)
	jmp loop_2851
.p2align 0x4
.long 0x3D4E
L_248858:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248859
L_248860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_248861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248861
.p2align 0x4
.long 0x3D4F
L_248861:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_248859:
	incl 0x48(%rbp)
	jmp loop_2850
.text
.p2align 0x4
.globl openInterface_0
.hidden openInterface_0
openInterface_0:
L_248876:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_248877
L_249064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_249065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249065
.p2align 0x4
.long 0x4AF
L_249065:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_248877:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_248878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3D50
L_248878:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248879
L_249062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_249063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249063
.p2align 0x4
.long 0x1010
L_249063:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_248879:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_482054
L_248881:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_248883
L_248884:
	cmpl $0x0,%r14d
	jl L_248953
L_248885:
	movl $0x0,0x44(%rbp)
loop_2852:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_482037
L_248886:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_248883
L_248888:
	cmpl $0x0,%r13d
	jl L_248953
L_248889:
	movl $0x0,0x24(%rbp)
loop_2853:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_482020
L_248890:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482019
L_248892:
	cmpl $0x0,%r13d
	jl L_482018
L_248893:
	movl $0x0,0x1C(%rbp)
loop_2854:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_482003
L_248894:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482003:
L_248895:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x20(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r11
	movq %r11,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x50(%r13),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x38(%r13),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_482017
L_248897:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482016
L_248898:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x78(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_248900:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_248901
L_248941:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_248901
L_248942:
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x60(%rbp)
	je L_482010
L_248901:
	movl 0x78(%rbp),%r13d
	incl %r13d
	movl %r13d,0x7C(%rbp)
	jo L_482009
L_248903:
	cmpq $0x1,%r15
	je L_482004
L_248904:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x78(%rbp)
	jmp L_248900
.p2align 0x4
L_482004:
L_248905:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248906
L_248939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_248940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248940
.p2align 0x4
.long 0x3D55
L_248940:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_248906:
	movl 0x7C(%rbp),%ecx
L_248907:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482007
L_248909:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_248911
L_248938:
	movl %ecx,0x0(%r15)
L_248911:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_248912:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_12
L_248913:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x50(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne new_43
L_248920:
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_482005
L_248921:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10670)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEF70)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_248922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482005:
L_248932:
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_248933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_43:
new_12:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x267B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_248915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482007:
L_248908:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482009:
L_248902:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482010:
L_248944:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248945
L_248949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248950
.p2align 0x4
.long 0x3D56
L_248950:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248945:
	movl 0x78(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_248908
L_248946:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_482011
L_248947:
	movq 0x80(%rbp),%r15
	jmp L_248912
.p2align 0x4
L_482011:
L_248948:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x80(%rbp),%r15
	jmp L_248912
.p2align 0x4
L_482016:
L_248951:
	xorl %ecx,%ecx
	jmp L_248907
.p2align 0x4
L_482017:
L_248896:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482018:
L_248953:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482019:
L_248883:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482020:
L_248954:
	movslq 0x24(%rbp),%r15
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x50(%r13),%r11
	movq 0x0(%r11),%r9
	movq %r9,0x60(%rbp)
	movq 0x38(%r13),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x68(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r10),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_248896
L_248955:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482033
L_248956:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x88(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_248958:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_248959
L_248996:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_248959
L_248997:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x70(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_482027
L_248959:
	movl 0x88(%rbp),%r13d
	incl %r13d
	movl %r13d,0x8C(%rbp)
	jo L_248902
L_248960:
	cmpq $0x1,%r15
	je L_482021
L_248961:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x88(%rbp)
	jmp L_248958
.p2align 0x4
L_482021:
L_248962:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248963
L_248994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248995
.p2align 0x4
.long 0x3D5C
L_248995:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_248963:
	movl 0x8C(%rbp),%ecx
L_248964:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_248908
L_248965:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_248967
L_248993:
	movl %ecx,0x0(%r15)
L_248967:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_248968:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_13
L_248969:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x60(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r14)
	jne new_45
L_248976:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_482022
L_248977:
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10670)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA440)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_248978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482022:
L_248987:
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_45:
new_13:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2683,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_248971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482027:
L_248999:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249000
L_249004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249005
.p2align 0x4
.long 0x3D5D
L_249005:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249000:
	movl 0x88(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_248908
L_249001:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_482028
L_249002:
	movq 0x90(%rbp),%r15
	jmp L_248968
.p2align 0x4
L_482028:
L_249003:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x88(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x90(%rbp),%r15
	jmp L_248968
.p2align 0x4
L_482033:
L_249006:
	xorl %ecx,%ecx
	jmp L_248964
.p2align 0x4
L_482037:
L_249008:
	movslq 0x44(%rbp),%r15
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x50(%r13),%r11
	movq 0x0(%r11),%r9
	movq %r9,0x70(%rbp)
	movq 0x38(%r13),%r11
	movq 0x10(%r11),%r9
	movq %r9,0x78(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r10),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_248896
L_249009:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482050
L_249010:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x98(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_249012:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_249013
L_249050:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_249013
L_249051:
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x80(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_482044
L_249013:
	movl 0x98(%rbp),%r13d
	incl %r13d
	movl %r13d,0x9C(%rbp)
	jo L_248902
L_249014:
	cmpq $0x1,%r15
	je L_482038
L_249015:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x98(%rbp)
	jmp L_249012
.p2align 0x4
L_482038:
L_249016:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249017
L_249048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_249049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249049
.p2align 0x4
.long 0x3D64
L_249049:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_249017:
	movl 0x9C(%rbp),%ecx
L_249018:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_248908
L_249019:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_249021
L_249047:
	movl %ecx,0x0(%r15)
L_249021:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_249022:
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_14
L_249023:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x70(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne new_47
L_249030:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_482039
L_249031:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10670)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA460)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_249032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482039:
L_249041:
	movq 0x58(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_47:
new_14:
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x267F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482044:
L_249053:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249054
L_249058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_249059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249059
.p2align 0x4
.long 0x3D65
L_249059:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_249054:
	movl 0x98(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_248908
L_249055:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_482045
L_249056:
	movq 0xA0(%rbp),%r15
	jmp L_249022
.p2align 0x4
L_482045:
L_249057:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x98(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xA0(%rbp),%r15
	jmp L_249022
.p2align 0x4
L_482050:
L_249060:
	xorl %ecx,%ecx
	jmp L_249018
.p2align 0x4
L_482054:
L_248880:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x114B
L_248922:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_248923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D53
L_248933:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248934
L_248935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_248936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248936
.p2align 0x4
.long 0x3D54
L_248936:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_248934:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x267D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_248917:
	incl 0x1C(%rbp)
	jmp loop_2854
.p2align 0x4
.long 0x3D51
L_248915:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248916
L_248918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_248919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248919
.p2align 0x4
.long 0x3D52
L_248919:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_248916:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x267D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_248917
.p2align 0x4
.long 0x3D59
L_248978:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_248979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D5A
L_248988:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248989
L_248990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248991
.p2align 0x4
.long 0x3D5B
L_248991:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248989:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1127,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2685,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_248973:
	incl 0x24(%rbp)
	jmp loop_2853
.p2align 0x4
.long 0x3D57
L_248971:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248972
L_248974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_248975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248975
.p2align 0x4
.long 0x3D58
L_248975:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_248972:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1127,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2685,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_248973
.p2align 0x4
.long 0x3D60
L_249032:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_249033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D62
L_249042:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249043
L_249044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249045
.p2align 0x4
.long 0x3D63
L_249045:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249043:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2681,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_249027:
	incl 0x44(%rbp)
	jmp loop_2852
.p2align 0x4
.long 0x3D5E
L_249025:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249026
L_249028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249029
.p2align 0x4
.long 0x3D5F
L_249029:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249026:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2681,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_249027
.p2align 0x4
.long 0x114B
L_248923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_248902
L_248924:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_248925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3D59
L_248979:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_248902
L_248980:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_248981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3D60
L_249033:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_248902
L_249034:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_249035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3D44
L_248925:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248926
L_248930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_248931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248931
.p2align 0x4
.long 0x1F0A
L_248931:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_248926:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_248917
L_248929:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x27CB
L_248981:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248982
L_248985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_248986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248986
.p2align 0x4
.long 0x646
L_248986:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_248982:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_248929
	jmp L_248973
.p2align 0x4
.long 0x3D61
L_249035:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249036
L_249039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_249040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249040
.p2align 0x4
.long 0x796
L_249040:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_249036:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_248929
	jmp L_249027
