/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:17:20 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1649
.hidden x_1649
x_1649:
L_176826:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_176827
L_176882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_176883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176883
.p2align 0x4
.long 0x460
L_176883:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_176827:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r11
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_453118
L_176829:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_453117
L_176830:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_176832:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_453116
L_176873:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCD8,%r10
	jne L_453115
L_176874:
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x10)(%rip)
	je L_453112
L_176833:
	incl %ecx
	jo L_453111
L_176835:
	cmpq $0x1,%r15
	je L_453109
L_176836:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	jmp L_176832
.p2align 0x4
L_453109:
L_176837:
L_176838:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453110
L_176840:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_565
L_176872:
	movl %ecx,0x0(%r15)
x_565:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_176842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_453110:
L_176839:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453111:
L_176834:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453112:
L_176876:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_176839
L_176877:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_453113
L_176880:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_176879:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453113:
L_176878:
	movq %r14,%r15
	jmp L_176879
.p2align 0x4
L_453115:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_176833
.p2align 0x4
L_453116:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_176833
.p2align 0x4
L_453117:
L_176881:
	xorl %ecx,%ecx
	jmp L_176838
.p2align 0x4
L_453118:
L_176828:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_176842:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_176843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_176843:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_176844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_176844:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF578)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_176845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_176845:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_176846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_176846:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176847
L_176870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_176871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176871
.p2align 0x4
.long 0x4AF
L_176871:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_176847:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_176848:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_176834
L_176849:
	cmpq $0x1,%r14
	je L_453120
L_176850:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_176848
.p2align 0x4
L_453120:
L_176851:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176852
L_176868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_176869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176869
.p2align 0x4
.long 0x4E7
L_176869:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_176852:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453121
L_176853:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_253:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_453121:
L_176867:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_253
.p2align 0x4
.long 0x1
rev_251:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_453127
L_176854:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_176855:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453126
.p2align 0x4,,0x7
L_176856:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453125
L_176857:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_176855
.p2align 0x4
L_453125:
L_176859:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_176860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_453126:
L_176864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_176865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176865
.p2align 0x4
.long 0x45C
L_176865:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_176856
.p2align 0x4
L_453127:
L_176866:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_176859
.p2align 0x4
.long 0x1
L_176860:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176861
L_176862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_176863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176863
.p2align 0x4
.long 0x452
L_176863:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_176861:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1792
.hidden x_1792
x_1792:
L_176884:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_176919
L_176885:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453143
L_176886:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEA9,%r13
	je L_176888
L_176917:
	movq 0x0(%r14),%r13
	addl 0x0(%r13),%r11d
	jo L_176895
L_176918:
	movl %r11d,0x0(%r13)
L_176888:
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x8(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_453140
L_176890:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453139
L_176891:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_176893:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453138
L_176908:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD8,%r11
	jne L_453137
L_176909:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_453134
L_176894:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_453133
L_176896:
	cmpq $0x1,%r15
	je L_453129
L_176897:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_176893
.p2align 0x4
L_453129:
L_176898:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176899
L_176906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_176907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176907
.p2align 0x4
.long 0x525
L_176907:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_176899:
	movl 0x10(%rbp),%ecx
L_176900:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453131
L_176902:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_176904
L_176905:
	movl %ecx,0x0(%r15)
L_176904:
	movq $0x19B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453131:
L_176901:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453133:
L_176895:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453134:
L_176911:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_176901
L_176912:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_453135
L_176915:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_176914:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453135:
L_176913:
	movq %r13,%r15
	jmp L_176914
.p2align 0x4
L_453137:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_176894
.p2align 0x4
L_453138:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_176894
.p2align 0x4
L_453139:
L_176916:
	xorl %ecx,%ecx
	jmp L_176900
.p2align 0x4
L_453140:
L_176889:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453143:
L_176919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_176920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176920
.p2align 0x4
.long 0x4AF
L_176920:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_176886
.text
.p2align 0x4
.globl x_1793
.hidden x_1793
x_1793:
L_176921:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_176922
L_177064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_177065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177065
.p2align 0x4
.long 0x452
L_177065:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_176922:
	movq 0x0(%rbp),%rax
	andq $0xFF,%rax
	subq $0x1,%rax
	cmpq $0x89,%rax
	ja L_453145
	jmp *jumpTable_589(,%rax,8)
.data
.p2align 0x4
jumpTable_589:
.quad
.text
.p2align 0x4
L_453145:
L_176923:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x120F,%r14
	je L_176927
	cmpq $0x1210,%r14
	je L_176929
	cmpq $0x1212,%r14
	je L_176927
	cmpq $0x1217,%r14
	je L_176929
	cmpq $0x121C,%r14
	je L_176927
	cmpq $0x121E,%r14
	je L_176927
	cmpq $0x1226,%r14
	je L_176927
	cmpq $0x122B,%r14
	je L_176927
	cmpq $0x122C,%r14
	je L_453147
	cmpq $0x122D,%r14
	je L_453146
L_176925:
	movb $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453146:
L_176929:
	movb $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453147:
L_176927:
	movb $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453188:
L_176960:
	movb $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl intInfBinary_24
.hidden intInfBinary_24
intInfBinary_24:
L_177066:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177206
L_177067:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453262
L_177068:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_177069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_453262:
L_177206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177207
.p2align 0x4
.long 0x805
L_177207:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_177068
.p2align 0x4
.long 0x660
L_177069:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_453264
L_177070:
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_177071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_453264:
L_177074:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x660
L_177071:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_177074
L_177072:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_453299
	cmpq $0x1E,%r14
	je L_453290
	cmpq $0x23,%r14
	je L_453288
	cmpq $0x26,%r14
	je L_453287
	cmpq $0x2A,%r14
	je L_453278
	cmpq $0x2B,%r14
	je L_453277
	cmpq $0x2D,%r14
	je L_453276
	cmpq $0x2E,%r14
	je L_453275
	cmpq $0x33,%r14
	je L_453266
L_177073:
	andq $0x3,%r15
	jnz L_177074
L_177075:
	jmp L_177074
.p2align 0x4
L_453266:
L_177179:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	movq 0x8(%rbp),%r11
	andq %r11,%r13
	andq $0x1,%r13
	jz L_453267
L_177180:
	xorq %r11,%r14
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_19:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_453267:
L_177187:
	andq $0x1,%r11
	jz L_453273
L_177188:
	movq $0x1,%r13
	xchgq %r13,%r15
L_177189:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_453271
L_177190:
	movq $0x1,%r14
L_177191:
	cmpq %r14,%r15
	jnl L_177193
L_177199:
	movq %r14,%r15
L_177193:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%r15
	addq $0x7,%r13
	addq %r11,%r13
	addq %r13,%r15
	movq %r15,%rsi
	movq %r15,0x10(%rbp)
	addq $0x0,%rsi
	jc L_453269
L_177194:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_177195
L_177197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_177198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177198
.p2align 0x4
.long 0x14B4
L_177198:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_177195:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_xorb
L_177196:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_19
.p2align 0x4
L_453269:
L_177099:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_453271:
L_177200:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_453272
L_177201:
	jmp L_177191
.p2align 0x4
L_453272:
L_177107:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453273:
L_177202:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	decq %r11
	jo L_177107
L_177203:
	xchgq %r11,%r15
	jmp L_177189
.p2align 0x4
L_453275:
L_177171:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_177172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_453276:
L_177163:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_177164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_453277:
L_177155:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_177156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_453278:
L_177130:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	movq 0x8(%rbp),%r11
	andq %r11,%r13
	andq $0x1,%r13
	jz L_453279
L_177131:
	orq %r11,%r14
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_18:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_453279:
L_177138:
	andq $0x1,%r11
	jz L_453285
L_177139:
	movq $0x1,%r13
	xchgq %r13,%r15
L_177140:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_453283
L_177141:
	movq $0x1,%r14
L_177142:
	cmpq %r14,%r15
	jnl L_177144
L_177150:
	movq %r14,%r15
L_177144:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%r15
	addq $0x7,%r13
	addq %r11,%r13
	addq %r13,%r15
	movq %r15,%rsi
	movq %r15,0x10(%rbp)
	addq $0x0,%rsi
	jc L_177099
L_177145:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_177146
L_177148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_177149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177149
.p2align 0x4
.long 0x14B4
L_177149:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_177146:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_orb
L_177147:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_18
.p2align 0x4
L_453283:
L_177151:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_177107
L_177152:
	jmp L_177142
.p2align 0x4
L_453285:
L_177153:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	decq %r11
	jo L_177107
L_177154:
	xchgq %r11,%r15
	jmp L_177140
.p2align 0x4
L_453287:
L_177122:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_177123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_453288:
L_177111:
	movq 0x0(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
loop_1797:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_453289
L_177112:
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_177113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_453289:
L_177115:
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_177116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_453290:
L_177084:
	movq 0x8(%rbp),%r14
	andq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_453291
L_177085:
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_17:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_453291:
L_177092:
	movq 0x8(%rbp),%r14
	andq $0x1,%r14
	jz L_453297
L_177093:
	movq $0x1,%r14
	xchgq %r14,%r15
L_177094:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_453295
L_177095:
	movq $0x1,%r14
L_177096:
	cmpq %r14,%r15
	jnl L_177098
L_177105:
	movq %r14,%r15
L_177098:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%rsi
	movq %rsi,%r13
	movq 0x0(%r14),%r11
	imulq %r15,%r13
	addq $0x7,%r11
	addq %r11,%rsi
	addq %r13,%rsi
	movq %rsi,%r15
	movq %rsi,0x18(%rbp)
	addq $0x0,%r15
	jc L_177099
L_177100:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_177101
L_177103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_177104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177104
.p2align 0x4
.long 0x14B4
L_177104:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_177101:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_andb
L_177102:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_17
.p2align 0x4
L_453295:
L_177106:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_177107
L_177108:
	jmp L_177096
.p2align 0x4
L_453297:
L_177109:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_177107
L_177110:
	xchgq %r13,%r15
	jmp L_177094
.p2align 0x4
L_453299:
L_177076:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_177077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x907
L_177181:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177182
L_177185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177186
.p2align 0x4
.long 0x771
L_177186:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177182:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177183:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_177172:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x61C
L_177164:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x61C
L_177156:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x907
L_177132:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177133
L_177136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177137
.p2align 0x4
.long 0x771
L_177137:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177133:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177134:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_177123:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x14B5
L_177113:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_177114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x79B
L_177116:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177117
L_177120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177121
.p2align 0x4
.long 0x14B6
L_177121:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177117:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177118:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_177086:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177087
L_177090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177091
.p2align 0x4
.long 0x771
L_177091:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177087:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177088:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_177077:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x907
L_177173:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177174
L_177177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177178
.p2align 0x4
.long 0x771
L_177178:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177174:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177175:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_177165:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177166
L_177169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177170
.p2align 0x4
.long 0x771
L_177170:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177166:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177167:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_177157:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177158
L_177161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177162
.p2align 0x4
.long 0x771
L_177162:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177158:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177159:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_177124:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177125
L_177128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177129
.p2align 0x4
.long 0x771
L_177129:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177125:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177126:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x77F
L_177114:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	jmp loop_1797
.p2align 0x4
.long 0x907
L_177078:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177079
L_177082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177083
.p2align 0x4
.long 0x771
L_177083:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177079:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_177074
L_177080:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopExp_0
.hidden loopExp_0
loopExp_0:
L_177208:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_177209
L_177775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_177776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177776
.p2align 0x4
.long 0x555
L_177776:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_177209:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_177235
L_177210:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_177211:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_453359
	cmpq $0xE9A,%r14
	je L_453357
	cmpq $0xE9B,%r14
	je L_453350
L_177212:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177213
L_177359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_177360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177360
.p2align 0x4
.long 0x247F
L_177360:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_177213:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_177231
L_177214:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x19D6,%r11
	je L_453333
	cmpq $0x19D7,%r11
	je L_453332
	cmpq $0x19D8,%r11
	je L_453319
L_177215:
	movq 0x18(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x68(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_177216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_453319:
L_177333:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_453331
L_177334:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_453330
L_177335:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_177337:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453329
L_177350:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_453328
L_177351:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453325
L_177338:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_453324
L_177339:
	cmpq $0x1,%r15
	je L_453320
L_177340:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177337
.p2align 0x4
L_453320:
L_177341:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177342
L_177348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177349
.p2align 0x4
.long 0x247E
L_177349:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177342:
	movl 0x14(%rbp),%ecx
L_177343:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453322
L_177344:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177346
L_177347:
	movl %ecx,0x0(%r15)
L_177346:
	movq $0x193F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_177231:
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_177232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453322:
L_177294:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453324:
L_177223:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453325:
L_177353:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177294
L_177354:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453326
L_177356:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453326:
L_177355:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453328:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177338
.p2align 0x4
L_453329:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177338
.p2align 0x4
L_453330:
L_177357:
	xorl %ecx,%ecx
	jmp L_177343
.p2align 0x4
L_453331:
L_177283:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453332:
L_177315:
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r15),%r10
	movq $0xB75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r10,0x18(%r15)
	movq %r10,0x90(%rbp)
	addq $0x28,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x10(%r15)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_177316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_453333:
L_177277:
	movq 0x0(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_453347
L_177280:
	testl %r11d,%r11d
	jz L_453346
L_177281:
	movq $0x1,0x58(%rbp)
L_177282:
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r14
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_177283
L_177284:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453344
L_177285:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_177287:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453343
L_177301:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD8,%r11
	jne L_453342
L_177302:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453339
L_177288:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_177223
L_177289:
	cmpq $0x1,%r15
	je L_453334
L_177290:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177287
.p2align 0x4
L_453334:
L_177291:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177292
L_177299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_177300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177300
.p2align 0x4
.long 0x2479
L_177300:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_177292:
	movl 0x14(%rbp),%ecx
L_177293:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177294
L_177295:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177297
L_177298:
	movl %ecx,0x0(%r15)
L_177297:
	movq $0x19B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_177231
.p2align 0x4
L_453339:
L_177304:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177294
L_177305:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_453340
L_177308:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_177307:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_177231
.p2align 0x4
L_453340:
L_177306:
	movq %r13,%r15
	jmp L_177307
.p2align 0x4
L_453342:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177288
.p2align 0x4
L_453343:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177288
.p2align 0x4
L_453344:
L_177309:
	xorl %ecx,%ecx
	jmp L_177293
.p2align 0x4
L_453346:
L_177310:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x12C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1,0x78(%rbp)
	movl $0x0,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_177311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_453347:
L_177279:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453350:
L_177771:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_453351
L_177772:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453351:
L_177235:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_177253
	cmpq $0x2,%r15
	je L_453353
L_177236:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x19D9,%r14
	je L_453352
L_177257:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_177258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453352:
L_177237:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_177238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453353:
L_177253:
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_453355
	cmpb $0x2,%r15b
	je L_453354
L_177242:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453354:
L_177246:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453355:
L_177244:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453357:
L_177763:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177764
L_177769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_177770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177770
.p2align 0x4
.long 0x247F
L_177770:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_177764:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x3393,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_177765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_453359:
L_177361:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177362
L_177761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_177762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177762
.p2align 0x4
.long 0x247F
L_177762:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_177362:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x50(%rbp)
	movq $0x1107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_177363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
.long 0xC0A
L_177216:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_177217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA32
L_177232:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177233:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xC07
L_177316:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movb 0x88(%rbp),%r15b
	movb %r15b,0x11(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177317
L_177331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_177332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177332
.p2align 0x4
.long 0x247D
L_177332:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_177317:
	movb 0x11(%rbp),%r15b
	testb %r15b,%r15b
	jz L_177231
L_177319:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_453365
L_177320:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_177279
L_177322:
	movl %r13d,0x90(%rbp)
	movq $0x3AC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_177323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_453365:
L_177329:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_177223
L_177330:
	movl %r14d,0x0(%r15)
L_177326:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_177231
.p2align 0x4
.long 0xC0A
L_177311:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177312
L_177313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_177314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177314
.p2align 0x4
.long 0x247A
L_177314:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_177312:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	jmp L_177282
.p2align 0x4
.long 0x48B
L_177258:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_177253
L_177259:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453373
L_177264:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177265:
	movl %r15d,0x0(%r14)
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_177244
	cmpb $0x2,%r15b
	je L_177246
	jmp L_177242
.p2align 0x4
L_453373:
L_177260:
	movb 0x10(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_177244
	cmpb $0x2,%r14b
	je L_177246
	jmp L_177242
.p2align 0x4
.long 0x48B
L_177238:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_177253
L_177239:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453380
L_177247:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_177223
L_177248:
	movl %r15d,0x0(%r14)
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_177244
	cmpb $0x2,%r15b
	je L_177246
	jmp L_177242
.p2align 0x4
L_453380:
L_177240:
	movb 0x10(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_177244
	cmpb $0x2,%r14b
	je L_177246
	jmp L_177242
.p2align 0x4
.long 0x2480
L_177765:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177766
L_177767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_177768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177768
.p2align 0x4
.long 0x2485
L_177768:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_177766:
	movq $0x3395,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movzbl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x2480
L_177363:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177364
L_177759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_177760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177760
.p2align 0x4
.long 0x2485
L_177760:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_177364:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_177745
	cmpq $0x2,%r15
	je L_453511
L_177365:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x19DC,%r14
	je L_453496
	cmpq $0x19DD,%r14
	je L_453482
	cmpq $0x19DE,%r14
	je L_453464
	cmpq $0x19DF,%r14
	je L_453449
L_177366:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453385
	jmp *jumpTable_590(,%rax,8)
.data
.p2align 0x4
jumpTable_590:
.quad L_453448,L_453442,L_453436,L_453434,L_453426,L_453425,L_453424,L_453422,L_453414,L_453400,L_453391
.text
.p2align 0x4
L_453385:
L_177367:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
L_177368:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453389
	cmpq $0x2,%r14
	je L_453387
L_177369:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x19D9,%r13
	je L_453386
L_177383:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453386:
L_177370:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453387:
L_177399:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177400:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453389:
L_177396:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177397:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453391:
L_177615:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
L_177616:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_177638
	cmpq $0x2,%r14
	je L_453393
L_177617:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x19D9,%r13
	je L_453392
L_177661:
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_177662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453392:
L_177618:
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_177619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453393:
L_177638:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453397
	cmpq $0x2,%r14
	je L_453395
L_177639:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x19D9,%r15
	je L_453394
L_177641:
	movq 0x0(%r14),%r15
L_177642:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453394:
L_177640:
	movq 0x0(%r14),%r15
L_177622:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453395:
L_177658:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177659:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453397:
L_177655:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177656:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453400:
L_177560:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
L_177561:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_177599
	cmpq $0x2,%r14
	je L_453402
L_177562:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x19D9,%r13
	je L_453401
L_177602:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_177603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453401:
L_177563:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_177564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453402:
L_177599:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_453409
L_177601:
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
L_177582:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_177279
L_177584:
	cmpl $0x0,%r13d
	jl L_453407
L_177585:
	movl $0x0,0x58(%rbp)
loop_1800:
	movl 0x58(%rbp),%r15d
	cmpl 0x14(%rbp),%r15d
	jnl L_453404
L_177587:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0x10(%r15),%r11
	cmpq $0x1,%r11
	je L_453403
L_177588:
	movq %r11,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_177589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
L_453403:
L_177590:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x68,%rbp
	leaq (L_177591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453404:
L_177573:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453405
L_177574:
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_177232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453405:
L_177575:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177576:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453407:
L_177429:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453409:
L_177600:
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
L_177568:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_177279
L_177570:
	cmpl $0x0,%r13d
	jl L_177429
L_177571:
	movl $0x0,0x58(%rbp)
loop_1799:
	movl 0x58(%rbp),%r15d
	cmpl 0x14(%rbp),%r15d
	jnl L_177573
L_177578:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x68,%rbp
	leaq (L_177579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453414:
L_177521:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
L_177522:
	cmpq $0x1,%r15
	je L_453420
L_177523:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453418
	cmpq $0x2,%r14
	je L_453416
L_177524:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x19D9,%r13
	je L_453415
L_177538:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453415:
L_177525:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453416:
L_177554:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177555:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453418:
L_177551:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177552:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453420:
L_177557:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177558:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453422:
L_177518:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177519:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453424:
L_177508:
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_177509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_453425:
L_177505:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
L_177506:
	movq $0x1107,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_177507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
L_453426:
L_177504:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
handleVarExps_0:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_177279
L_177404:
	cmpl $0x0,%r13d
	jl L_177429
L_177405:
	movl $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_1798:
	movl 0x50(%rbp),%r15d
	cmpl 0x14(%rbp),%r15d
	jnl L_453430
L_177409:
	movslq %r15d,%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_177415
	cmpq $0x2,%r15
	je L_453428
L_177410:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x19D9,%r14
	je L_453427
L_177419:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_177420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453427:
L_177411:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_177412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453428:
.p2align 0x4,,0x7
L_177415:
	incl 0x50(%rbp)
	jmp loop_1798
.p2align 0x4
L_453430:
L_177406:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177407:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453434:
L_177501:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177502:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453436:
L_177465:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
L_177466:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453440
	cmpq $0x2,%r14
	je L_453438
L_177467:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x19D9,%r13
	je L_453437
L_177481:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453437:
L_177468:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453438:
L_177497:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177498:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453440:
L_177494:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177495:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453442:
L_177430:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
L_177431:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453446
	cmpq $0x2,%r14
	je L_453444
L_177432:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x19D9,%r13
	je L_453443
L_177446:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453443:
L_177433:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_177434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453444:
L_177462:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177463:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453446:
L_177459:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177460:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453448:
L_177402:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453449:
L_177727:
	movq 0x0(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453450
	jmp *jumpTable_591(,%rax,8)
.data
.p2align 0x4
jumpTable_591:
.quad L_453463,L_453462,L_453461,L_177501,L_453457,L_453456,L_453455,L_177518,L_453453,L_453452,L_453451
.text
.p2align 0x4
L_453450:
L_177728:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177368
.p2align 0x4
L_453451:
L_177743:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_177616
.p2align 0x4
L_453452:
L_177742:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177561
.p2align 0x4
L_453453:
L_177741:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177522
.p2align 0x4
L_453455:
L_177739:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
L_177683:
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x60,%rbp
	leaq (L_177684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453456:
L_177738:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_177506
.p2align 0x4
L_453457:
L_177733:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x3F,%r15
	je L_453459
L_177734:
	andq $0x3,%r13
	jnz L_453458
L_177736:
	xchgq %r11,%r14
L_177735:
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453458:
	movq %r11,%r14
	jmp L_177735
.p2align 0x4
L_453459:
L_177737:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453461:
L_177731:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177466
.p2align 0x4
L_453462:
L_177730:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177431
.p2align 0x4
L_453463:
L_177729:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453464:
L_177704:
	movq 0x0(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453465
	jmp *jumpTable_592(,%rax,8)
.data
.p2align 0x4
jumpTable_592:
.quad L_453481,L_453480,L_453479,L_177501,L_453472,L_453471,L_453470,L_177518,L_453468,L_453467,L_453466
.text
.p2align 0x4
L_453465:
L_177705:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177368
.p2align 0x4
L_453466:
L_177726:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_177616
.p2align 0x4
L_453467:
L_177725:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177561
.p2align 0x4
L_453468:
L_177724:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177522
.p2align 0x4
L_453470:
L_177722:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177683
.p2align 0x4
L_453471:
L_177721:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_177506
.p2align 0x4
L_453472:
L_177710:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r11,%r15
	andq $0xFF,%r15
	cmpq $0x17,%r15
	je L_453476
	cmpq $0x1A,%r15
	je L_453474
L_177711:
	andq $0x3,%r11
	jnz L_453473
L_177713:
	xchgq %r10,%r14
L_177712:
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453473:
	movq %r10,%r14
	jmp L_177712
.p2align 0x4
L_453474:
L_177718:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r13)
	jna L_453475
L_177720:
	movq 0x0(%r13),%r15
	movq $0x19BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x18,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453475:
L_177716:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453476:
L_177714:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r13)
	jna L_177716
L_177717:
	movq 0x0(%r13),%r15
	movq $0x19BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x18,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453479:
L_177708:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177466
.p2align 0x4
L_453480:
L_177707:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177431
.p2align 0x4
L_453481:
L_177706:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453482:
L_177690:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177691:
	movl %r15d,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453483
	jmp *jumpTable_593(,%rax,8)
.data
.p2align 0x4
jumpTable_593:
.quad L_453494,L_453493,L_453492,L_177501,L_453490,L_453489,L_453488,L_177518,L_453486,L_453485,L_453484
.text
.p2align 0x4
L_453483:
L_177692:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177368
.p2align 0x4
L_453484:
L_177703:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_177616
.p2align 0x4
L_453485:
L_177702:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177561
.p2align 0x4
L_453486:
L_177701:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177522
.p2align 0x4
L_453488:
L_177699:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177683
.p2align 0x4
L_453489:
L_177698:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_177506
.p2align 0x4
L_453490:
L_177697:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453492:
L_177695:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177466
.p2align 0x4
L_453493:
L_177694:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177431
.p2align 0x4
L_453494:
L_177693:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453496:
L_177670:
	movq 0x0(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453497
	jmp *jumpTable_594(,%rax,8)
.data
.p2align 0x4
jumpTable_594:
.quad L_453510,L_453509,L_453508,L_177501,L_453504,L_453503,L_453502,L_177518,L_453500,L_453499,L_453498
.text
.p2align 0x4
L_453497:
L_177671:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177368
.p2align 0x4
L_453498:
L_177689:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_177616
.p2align 0x4
L_453499:
L_177688:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177561
.p2align 0x4
L_453500:
L_177687:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177522
.p2align 0x4
L_453502:
L_177682:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177683
.p2align 0x4
L_453503:
L_177681:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_177506
.p2align 0x4
L_453504:
L_177676:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x53,%r15
	je L_453506
L_177677:
	andq $0x3,%r13
	jnz L_453505
L_177679:
	xchgq %r11,%r14
L_177678:
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453505:
	movq %r11,%r14
	jmp L_177678
.p2align 0x4
L_453506:
L_177680:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453508:
L_177674:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177466
.p2align 0x4
L_453509:
L_177673:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177431
.p2align 0x4
L_453510:
L_177672:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453511:
L_177745:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453512
	jmp *jumpTable_595(,%rax,8)
.data
.p2align 0x4
jumpTable_595:
.quad L_453523,L_453522,L_453521,L_177501,L_453519,L_453518,L_453517,L_177518,L_453515,L_453514,L_453513
.text
.p2align 0x4
L_453512:
L_177746:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177368
.p2align 0x4
L_453513:
L_177757:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_177616
.p2align 0x4
L_453514:
L_177756:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177561
.p2align 0x4
L_453515:
L_177755:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_177522
.p2align 0x4
L_453517:
L_177753:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177683
.p2align 0x4
L_453518:
L_177752:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_177506
.p2align 0x4
L_453519:
L_177751:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453521:
L_177749:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177466
.p2align 0x4
L_453522:
L_177748:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_177431
.p2align 0x4
L_453523:
L_177747:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
.long 0xC0A
L_177217:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_177218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x247B
L_177323:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177324
L_177327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_177328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177328
.p2align 0x4
.long 0x247C
L_177328:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_177324:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_177223
L_177325:
	movl %r14d,0x0(%r15)
	jmp L_177326
.p2align 0x4
.long 0xA32
L_177384:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453532
L_177385:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453530
L_177389:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177390:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177391:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453530:
L_177386:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177387:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453532:
L_177393:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177394:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA32
L_177371:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453538
L_177372:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453536
L_177376:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_177223
L_177377:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177378:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453536:
L_177373:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177374:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453538:
L_177380:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177381:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA35
L_177662:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_177638
L_177663:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_453541
L_177665:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_177223
L_177666:
	movl %r14d,0x0(%r15)
	movq 0x50(%rbp),%r15
	jmp L_177642
.p2align 0x4
L_453541:
L_177664:
	movq 0x50(%rbp),%r15
	jmp L_177642
.p2align 0x4
.long 0xA35
L_177619:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_177638
L_177620:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_453544
L_177635:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_177223
L_177636:
	movl %r14d,0x0(%r15)
	movq 0x50(%rbp),%r15
	jmp L_177622
.p2align 0x4
L_453544:
L_177621:
	movq 0x50(%rbp),%r15
	jmp L_177622
.p2align 0x4
.long 0xA32
L_177643:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453550
L_177644:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453548
L_177648:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177649:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177650:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453548:
L_177645:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177646:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453550:
L_177652:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177653:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA32
L_177623:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453556
L_177624:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453554
L_177628:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_177223
L_177629:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177630:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453554:
L_177625:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177626:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453556:
L_177632:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177633:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA35
L_177603:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_177599
L_177604:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453560
L_177608:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177609:
	movl %r15d,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_453558
L_177611:
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
	jmp L_177582
.p2align 0x4
L_453558:
L_177610:
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	jmp L_177568
.p2align 0x4
L_453560:
L_177605:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	je L_453561
L_177607:
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177582
.p2align 0x4
L_453561:
L_177606:
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177568
.p2align 0x4
.long 0xA35
L_177564:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_177599
L_177565:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453565
L_177594:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_177223
L_177595:
	movl %r15d,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_453563
L_177597:
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
	jmp L_177582
.p2align 0x4
L_453563:
L_177596:
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	jmp L_177568
.p2align 0x4
L_453565:
L_177566:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	je L_453566
L_177581:
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177582
.p2align 0x4
L_453566:
L_177567:
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_177568
.p2align 0x4
.long 0x2484
L_177589:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_177590
.p2align 0x4
.long 0x2483
L_177591:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	incl 0x58(%rbp)
	jmp loop_1800
.p2align 0x4
.long 0x2483
L_177579:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	incl 0x58(%rbp)
	jmp loop_1799
.p2align 0x4
.long 0xA32
L_177539:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453572
L_177540:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453570
L_177544:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177545:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177546:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453570:
L_177541:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177542:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453572:
L_177548:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177549:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA32
L_177526:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453578
L_177527:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453576
L_177531:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_177223
L_177532:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177533:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453576:
L_177528:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177529:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453578:
L_177535:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177536:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0x2482
L_177509:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (new1_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0xA33
L_177507:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_177232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2481
L_177420:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_177415
L_177421:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_177415
L_177423:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177424:
	movl %r15d,0x0(%r14)
	jmp L_177415
.p2align 0x4
.long 0x2481
L_177412:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_177415
L_177413:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_177415
L_177416:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_177223
L_177417:
	movl %r15d,0x0(%r14)
	jmp L_177415
.p2align 0x4
.long 0xA32
L_177482:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453590
L_177483:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453588
L_177487:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177488:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177489:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453588:
L_177484:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177485:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453590:
L_177491:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177492:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA32
L_177469:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453596
L_177470:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453594
L_177474:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_177223
L_177475:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177476:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453594:
L_177471:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177472:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453596:
L_177478:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177479:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA32
L_177447:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453602
L_177448:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453600
L_177452:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_177223
L_177453:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177454:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453600:
L_177449:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177450:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453602:
L_177456:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177457:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA32
L_177434:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453608
L_177435:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453606
L_177439:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_177223
L_177440:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_177235
L_177441:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453606:
L_177436:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177437:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
L_453608:
L_177443:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_177235
L_177444:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_177211
.p2align 0x4
.long 0xA35
L_177684:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_177685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
.long 0x2472
L_177218:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_177219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x907
new1_24:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177510
L_177515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177516
.p2align 0x4
.long 0xA9A
L_177516:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177510:
	movq $0x37A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movl $0x1,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0xA33
L_177685:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_177232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2473
L_177219:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_177220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_3
.p2align 0x4
.long 0x907
L_177511:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177512
L_177513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177514
.p2align 0x4
.long 0xA9A
L_177514:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177512:
	movq $0x1B2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2474
L_177220:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177221
L_177275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_177276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177276
.p2align 0x4
.long 0x2478
L_177276:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_177221:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_177222:
	addl 0x0(%r15),%ecx
	movl %ecx,0x14(%rbp)
	jo L_177223
L_177224:
	cmpq $0x1,%r14
	je L_453612
L_177225:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_177222
.p2align 0x4
L_453612:
L_177226:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177227
L_177273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177274
.p2align 0x4
.long 0x2477
L_177274:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177227:
	movl 0x14(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453613
L_177228:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
x_566:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x80(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_177229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_453613:
L_177272:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_566
.p2align 0x4
.long 0x2475
L_177229:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_177230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2476
L_177230:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_177231
.text
.p2align 0x4
.globl monoVar_0
.hidden monoVar_0
monoVar_0:
L_177777:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177883
L_177778:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453647
L_177779:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_453646
L_177780:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x19D6,%r13
	je L_453631
	cmpq $0x19D7,%r13
	je L_453630
	cmpq $0x19D8,%r13
	je L_453617
L_177781:
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_177782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_453617:
L_177857:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_453629
L_177858:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_453628
L_177859:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_177861:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453627
L_177874:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_453626
L_177875:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453623
L_177862:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_453622
L_177863:
	cmpq $0x1,%r15
	je L_453618
L_177864:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177861
.p2align 0x4
L_453618:
L_177865:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177866
L_177872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177873
.p2align 0x4
.long 0x451
L_177873:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_177866:
	movl 0x18(%rbp),%ecx
L_177867:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453620
L_177868:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177870
L_177871:
	movl %ecx,0x0(%r15)
L_177870:
	movq $0x193F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453620:
L_177818:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453622:
L_177789:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453623:
L_177877:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177818
L_177878:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453624
L_177880:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453624:
L_177879:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453626:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177862
.p2align 0x4
L_453627:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177862
.p2align 0x4
L_453628:
L_177881:
	xorl %ecx,%ecx
	jmp L_177867
.p2align 0x4
L_453629:
L_177807:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453630:
L_177839:
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r10
	movq $0xB75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r10,0x18(%r15)
	movq %r10,0x50(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_177840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_453631:
L_177801:
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_453645
L_177804:
	testl %r11d,%r11d
	jz L_453644
L_177805:
	movq $0x1,0x20(%rbp)
L_177806:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_177807
L_177808:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453642
L_177809:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_177811:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453641
L_177825:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD8,%r11
	jne L_453640
L_177826:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453637
L_177812:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_177789
L_177813:
	cmpq $0x1,%r15
	je L_453632
L_177814:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177811
.p2align 0x4
L_453632:
L_177815:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177816
L_177823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_177824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177824
.p2align 0x4
.long 0x1858
L_177824:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_177816:
	movl 0x38(%rbp),%ecx
L_177817:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177818
L_177819:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177821
L_177822:
	movl %ecx,0x0(%r15)
L_177821:
	movq $0x19B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453637:
L_177828:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177818
L_177829:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_453638
L_177832:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_177831:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453638:
L_177830:
	movq %r13,%r15
	jmp L_177831
.p2align 0x4
L_453640:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177812
.p2align 0x4
L_453641:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177812
.p2align 0x4
L_453642:
L_177833:
	xorl %ecx,%ecx
	jmp L_177817
.p2align 0x4
L_453644:
L_177834:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x12C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_177835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_453645:
L_177803:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453646:
L_177882:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453647:
L_177883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_177884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177884
.p2align 0x4
.long 0x460
L_177884:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_177779
.p2align 0x4
.long 0x4A7
L_177782:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_177783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A9
L_177840:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movb 0x48(%rbp),%r15b
	movb %r15b,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177841
L_177855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_177856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177856
.p2align 0x4
.long 0x517
L_177856:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_177841:
	movb 0x40(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_453649
L_177842:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453649:
L_177843:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_453651
L_177844:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_177803
L_177846:
	movl %r13d,0x50(%rbp)
	movq $0x3AC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_177847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_453651:
L_177853:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_177789
L_177854:
	movl %r14d,0x0(%r15)
L_177850:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_177835:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177836
L_177837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_177838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177838
.p2align 0x4
.long 0x721
L_177838:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_177836:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	jmp L_177806
.p2align 0x4
.long 0x4A7
L_177783:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_177784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E4
L_177847:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177848
L_177851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_177852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177852
.p2align 0x4
.long 0x794
L_177852:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_177848:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_177789
L_177849:
	movl %r14d,0x0(%r15)
	jmp L_177850
.p2align 0x4
.long 0x4A8
L_177784:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_177785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x4B3
L_177785:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_177786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_3
.p2align 0x4
.long 0x7B5
L_177786:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177787
L_177799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_177800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177800
.p2align 0x4
.long 0x5F5
L_177800:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_177787:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_177788:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_177789
L_177790:
	cmpq $0x1,%r14
	je L_453657
L_177791:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_177788
.p2align 0x4
L_453657:
L_177792:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177793
L_177797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_177798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177798
.p2align 0x4
.long 0x90F
L_177798:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_177793:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453658
L_177794:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
x_567:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_177795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_453658:
L_177796:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_567
.p2align 0x4
.long 0x51B
L_177795:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl stronglyConnectedComponents_0
.hidden stronglyConnectedComponents_0
stronglyConnectedComponents_0:
L_177885:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177920
L_177886:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453665
L_177887:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x703,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movb $0x1,%r14b
	movzbq %r14b,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x410D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x17CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r11,0x8(%r13)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r14,0x10(%r13)
	movq $0x1,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	movl $0x0,0x48(%rbp)
loop_1801:
	movq $0x17CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x20,%r12
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	cmpq $0x1,%r15
	je L_453662
L_177888:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_177889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1795
.p2align 0x4
L_453662:
L_177899:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_453663
L_177900:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_177901:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3DD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_177902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_453663:
L_177906:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_453664
L_177907:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_177908:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3DD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_177909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_453664:
L_177913:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453665:
L_177920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_177921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177921
.p2align 0x4
.long 0x452
L_177921:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_177887
.p2align 0x4
.long 0x11D5
L_177889:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177890
L_177897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177898
.p2align 0x4
.long 0x1E64
L_177898:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177890:
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_453667
L_177891:
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_177892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_13
.p2align 0x4
L_453667:
L_177896:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp loop_1801
.p2align 0x4
.long 0x4EE
L_177902:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177903
L_177917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_177918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177918
.p2align 0x4
.long 0x4F0
L_177918:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_177903:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_177906
L_177904:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_177901
.p2align 0x4
.long 0xA28
L_177909:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177910
L_177914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_177915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177915
.p2align 0x4
.long 0xA2C
L_177915:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_177910:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_177913
L_177911:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_177908
.p2align 0x4
.long 0x2486
L_177892:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177893
L_177894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_177895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177895
.p2align 0x4
.long 0xBD2
L_177895:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_177893:
	movq 0x58(%rbp),%r15
	jmp loop_1801
.text
.p2align 0x4
.globl x_1795
.hidden x_1795
x_1795:
L_177922:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177969
L_177923:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453694
L_177924:
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_453693
L_177926:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453692
L_177927:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_177929:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453691
L_177961:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC4,%r11
	jne L_453690
L_177962:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453687
L_177930:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_453686
L_177932:
	cmpq $0x1,%r15
	je L_453674
L_177933:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177929
.p2align 0x4
L_453674:
L_177934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177935
L_177959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177960
.p2align 0x4
.long 0x651
L_177960:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_177935:
	movl 0x28(%rbp),%ecx
L_177936:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453684
L_177938:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453682
L_177956:
	movl %ecx,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_453679
L_177957:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
.p2align 0x4,,0x7
loop_1802:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453678
.p2align 0x4,,0x7
L_177941:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_453675
L_177942:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	jmp loop_1802
.p2align 0x4
L_453675:
L_177943:
	shrq $0x1,%r15
	movb %r15b,%r14b
	cmpb $0x1,%r14b
	je L_453677
	cmpb $0x2,%r14b
	je L_453676
L_177944:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
L_177945:
	movq $0x1405,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_177946:
	movq $0x1989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_568:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453676:
L_177948:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_177945
.p2align 0x4
L_453677:
L_177947:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_177945
.p2align 0x4
L_453678:
L_177949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_177950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177950
.p2align 0x4
.long 0x720
L_177950:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_177941
.p2align 0x4
L_453679:
L_177958:
	shrq $0x1,%r15
	movb %r15b,%dl
x_569:
	cmpb $0x1,%dl
	je L_453681
	cmpb $0x2,%dl
	je L_453680
L_177952:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
L_177953:
	movq $0x1405,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_177946
.p2align 0x4
L_453680:
L_177955:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_177953
.p2align 0x4
L_453681:
L_177954:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_177953
.p2align 0x4
L_453682:
L_177939:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_453683
L_177940:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	jmp loop_1802
.p2align 0x4
L_453683:
L_177951:
	shrq $0x1,%r14
	movb %r14b,%dl
	jmp x_569
.p2align 0x4
L_453684:
L_177937:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453686:
L_177931:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453687:
L_177964:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177937
L_177965:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_453688
L_177967:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp x_568
.p2align 0x4
L_453688:
L_177966:
	movq %r11,%r15
	jmp x_568
.p2align 0x4
L_453690:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177930
.p2align 0x4
L_453691:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177930
.p2align 0x4
L_453692:
L_177968:
	xorl %ecx,%ecx
	jmp L_177936
.p2align 0x4
L_453693:
L_177925:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453694:
L_177969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_177970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177970
.p2align 0x4
.long 0x460
L_177970:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_177924
.text
.p2align 0x4
.globl visit_13
.hidden visit_13
visit_13:
L_177971:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_178039
L_177972:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453712
L_177973:
	movq 0x8(%rbp),%r13
	movl $0x1,0x0(%r13)
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r11d
	movl %r11d,0x40(%rbp)
	movl %r11d,%r13d
	incl %r13d
	movl %r13d,0x44(%rbp)
	jo L_177974
L_177975:
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x10,%r12
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x50(%rbp)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x10(%rbp),%r9
	movq %r9,0x0(%r10)
	movq $0x1401,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	addq $0x18,%r12
	movl $0x1,0x0(%r10)
	movl %r11d,0x4(%r10)
	movq %r13,0x8(%r10)
	movq 0x8(%r9),%r13
	movq %r13,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_453710
L_177977:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_453709
L_177978:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_177980:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_177981
L_178031:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCB,%r13
	jne L_177981
L_178032:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_453704
L_177981:
	incl %ecx
	movl %ecx,0x68(%rbp)
	jo L_453703
L_177982:
	cmpq $0x1,%r15
	je L_453696
L_177983:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_177980
.p2align 0x4
L_453696:
L_177984:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177985
L_178029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_178030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178030
.p2align 0x4
.long 0x248C
L_178030:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177985:
	movl 0x68(%rbp),%ecx
L_177986:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453701
L_177988:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177990
L_178028:
	movl %ecx,0x0(%r15)
L_177990:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1997,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r11),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
loop_1803:
	movq $0x17CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x20,%r12
	movl 0x44(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r14)
	cmpq $0x1,%r15
	je L_453697
L_177991:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r13,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_177992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1795
.p2align 0x4
L_453697:
L_178013:
	movq 0x48(%rbp),%r15
	movl 0x0(%r15),%r14d
	cmpl %r14d,0x40(%rbp)
	je L_453698
L_178014:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453698:
L_178015:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_453699
L_178016:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_178017:
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_178018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_116
.p2align 0x4
L_453699:
L_178023:
	movq (globalObjptr+0x1428)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453701:
L_177987:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453703:
L_177974:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453704:
L_178034:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177987
L_178035:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453705
L_178037:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453705:
L_178036:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453709:
L_178038:
	xorl %ecx,%ecx
	jmp L_177986
.p2align 0x4
L_453710:
L_177976:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453712:
L_178039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178040
.p2align 0x4
.long 0x647
L_178040:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_177973
.p2align 0x4
.long 0x2487
L_177992:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_453714
L_177993:
	movq 0x58(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x80,%rbp
	leaq (L_177994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_13
.p2align 0x4
L_453714:
L_178001:
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_178002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_116
.p2align 0x4
.long 0x248B
L_178018:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178019
L_178025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_178026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178026
.p2align 0x4
.long 0x9A1
L_178026:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_178019:
	movq 0x48(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%r14),%r13
	cmpq %r13,0x60(%rbp)
	je L_453716
L_178020:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_178023
L_178021:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_178017
.p2align 0x4
L_453716:
L_178024:
	movq $0x2719,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2488
L_177994:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x90(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_177995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_116
.p2align 0x4
.long 0x2489
L_178002:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178003
L_178011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_178012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178012
.p2align 0x4
.long 0x248A
L_178012:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_178003:
	movq 0x58(%rbp),%r14
	movl 0x4(%r14),%r13d
	cmpl 0x40(%rbp),%r13d
	jnl L_178005
L_178006:
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jz L_178005
L_178008:
	movq 0x48(%rbp),%r14
	cmpl 0x0(%r14),%r13d
	jnl L_453718
L_178010:
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp loop_1803
.p2align 0x4
L_453718:
L_178005:
	movq 0x68(%rbp),%r15
	jmp loop_1803
.p2align 0x4
.long 0x2489
L_177995:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177996
L_177999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_178000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178000
.p2align 0x4
.long 0x248A
L_178000:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177996:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r15),%r14d
	movq 0x48(%rbp),%r13
	cmpl 0x0(%r13),%r14d
	jnl L_453722
L_177998:
	movl %r14d,0x0(%r13)
	movq 0x68(%rbp),%r15
	jmp loop_1803
.p2align 0x4
L_453722:
L_177997:
	movq 0x68(%rbp),%r15
	jmp loop_1803
.text
.p2align 0x4
.globl get_116
.hidden get_116
get_116:
L_178041:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_178100
L_178042:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453736
L_178043:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_453735
L_178045:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453734
L_178046:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_178048:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453733
L_178092:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCCB,%r11
	jne L_453732
L_178093:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453729
L_178049:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_453728
L_178051:
	cmpq $0x1,%r15
	je L_453724
L_178052:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_178048
.p2align 0x4
L_453724:
L_178053:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178054
L_178090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178091
.p2align 0x4
.long 0x45F
L_178091:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178054:
	movl 0x20(%rbp),%ecx
L_178055:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453726
L_178057:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_178059
L_178089:
	movl %ecx,0x0(%r15)
L_178059:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_178060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_453726:
L_178056:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453728:
L_178050:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453729:
L_178095:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_178056
L_178096:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453730
L_178098:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453730:
L_178097:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453732:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_178049
.p2align 0x4
L_453733:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_178049
.p2align 0x4
L_453734:
L_178099:
	xorl %ecx,%ecx
	jmp L_178055
.p2align 0x4
L_453735:
L_178044:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453736:
L_178100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_178101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178101
.p2align 0x4
.long 0x460
L_178101:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_178043
.p2align 0x4
.long 0x1
L_178060:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_178061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_178061:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF580)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_178062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_178062:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_178063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_178063:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178064
L_178087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_178088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178088
.p2align 0x4
.long 0x4AF
L_178088:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_178064:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_178065:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_178050
L_178066:
	cmpq $0x1,%r14
	je L_453738
L_178067:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178065
.p2align 0x4
L_453738:
L_178068:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178069
L_178085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178086
.p2align 0x4
.long 0x4E7
L_178086:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178069:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453739
L_178070:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_254:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_453739:
L_178084:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_254
.p2align 0x4
.long 0x1
rev_252:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_453745
L_178071:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_178072:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453744
.p2align 0x4,,0x7
L_178073:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453743
L_178074:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_178072
.p2align 0x4
L_453743:
L_178076:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_178077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_453744:
L_178081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_178082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178082
.p2align 0x4
.long 0x45C
L_178082:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_178073
.p2align 0x4
L_453745:
L_178083:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_178076
.p2align 0x4
.long 0x1
L_178077:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178078
L_178079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_178080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178080
.p2align 0x4
.long 0x452
L_178080:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_178078:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopExp_1
.hidden loopExp_1
loopExp_1:
L_178102:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178103
L_178306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178307
.p2align 0x4
.long 0xFA7
L_178307:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_178103:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_453788
L_178104:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x14(%rbp)
.p2align 0x4,,0x7
L_178105:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_453752
	cmpq $0xE9A,%r14
	je L_453747
L_178106:
	movq (globalObjptr+0x50E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453747:
L_178270:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178271
L_178303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_178304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178304
.p2align 0x4
.long 0x9AA
L_178304:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_178271:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_453750
L_178273:
	testl %r13d,%r13d
	jz L_453749
L_178274:
	cmpq $0x0,%r15
	jna L_453748
L_178276:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_178277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_453748:
L_178125:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453749:
L_178287:
	movq $0x33A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_178288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_453750:
L_178121:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453752:
L_178107:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453753
	jmp *jumpTable_596(,%rax,8)
.data
.p2align 0x4
jumpTable_596:
.quad L_453784,L_453783,L_453781,L_453779,L_453775,L_453773,L_453772,L_178115,L_453769,L_453758,L_453754
.text
.p2align 0x4
L_453753:
L_178108:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_178109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_453754:
L_178263:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_453756
L_178264:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453755
L_178265:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movl $0x0,0x14(%rbp)
	jmp L_178105
.p2align 0x4
L_453755:
L_178266:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453756:
L_178267:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453757
L_178268:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	jmp L_178105
.p2align 0x4
L_453757:
L_178269:
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453758:
L_178224:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1235,%r15
	je L_453764
L_178250:
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x60(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_178121
L_178252:
	cmpl $0x0,%r13d
	jl L_453762
L_178253:
	movl 0x14(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movl $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_1808:
	movl 0x60(%rbp),%r15d
	cmpl %r15d,0x68(%rbp)
	jl L_453761
L_178254:
	cmpq $0x1,0x50(%rbp)
	jne L_453760
L_178256:
	movl 0x64(%rbp),%ecx
L_178240:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453759
L_178241:
	movl %ecx,0x14(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453759:
L_178242:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453760:
L_178255:
	movq 0x50(%rbp),%r15
	movl 0x64(%rbp),%r14d
	movl %r14d,0x50(%rbp)
L_178231:
	movq %r15,0x68(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x60,%rbp
	leaq (L_178232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453761:
L_178257:
	movslq 0x68(%rbp),%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x80(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x78,%rbp
	leaq (L_178258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453762:
L_178249:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453764:
L_178225:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x60(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_178121
L_178227:
	cmpl $0x0,%r13d
	jl L_178249
L_178228:
	movl 0x14(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movl $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_1807:
	movl 0x60(%rbp),%r15d
	cmpl %r15d,0x68(%rbp)
	jl L_453766
L_178229:
	cmpq $0x1,0x50(%rbp)
	jne L_453765
L_178239:
	movl 0x64(%rbp),%ecx
	jmp L_178240
.p2align 0x4
L_453765:
L_178230:
	movq 0x50(%rbp),%r15
	movl 0x64(%rbp),%r14d
	movl %r14d,0x50(%rbp)
	jmp L_178231
.p2align 0x4
L_453766:
L_178243:
	movslq 0x68(%rbp),%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x80(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x78,%rbp
	leaq (L_178244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453769:
L_178218:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_453770
L_178219:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_178220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_453770:
L_178115:
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_178116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_453772:
L_178212:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r15
	movq %r15,0x68(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x60,%rbp
	leaq (L_178213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453773:
L_178194:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178195
L_178210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_178211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178211
.p2align 0x4
.long 0x2490
L_178211:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_178195:
	movq 0x68(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movq $0x104D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r11,0x70(%rbp)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movl $0x0,0x68(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x68,%rbp
	leaq (L_178196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453775:
L_178145:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x78(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x80(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_178121
L_178147:
	movl $0x0,0x68(%rbp)
loop_1805:
	movl 0x68(%rbp),%r15d
	cmpl 0x80(%rbp),%r15d
	je L_453777
L_178148:
	movslq %r15d,%r14
	cmpq 0x78(%rbp),%r14
	jnb L_178125
L_178150:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_178151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_453777:
L_178170:
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_178171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1793
.p2align 0x4
L_453779:
L_178142:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453780
L_178143:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453780:
L_178144:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453781:
L_178139:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453782
L_178140:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453782:
L_178141:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453783:
L_178135:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_178136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_453784:
L_178119:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x60(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x70(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_178121
L_178122:
	movl $0x0,0x68(%rbp)
loop_1804:
	movl 0x68(%rbp),%r15d
	cmpl 0x70(%rbp),%r15d
	je L_178115
L_178123:
	movslq %r15d,%r14
	cmpq 0x60(%rbp),%r14
	jnb L_178125
L_178126:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_178127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_453788:
L_178305:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x999
L_178277:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178278
L_178300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_178301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178301
.p2align 0x4
.long 0x8C1
L_178301:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_178278:
	movq 0x50(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x68(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x70(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_178121
L_178280:
	movl $0x0,0x50(%rbp)
loop_1809:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x70(%rbp)
	je L_453791
L_178281:
	movslq %r15d,%r14
	cmpq 0x68(%rbp),%r14
	jnb L_178125
L_178283:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_178284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_453791:
L_178295:
	movq $0x3389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x68(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_178296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x913
L_178288:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453794
L_178289:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453794:
L_178290:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x999
L_178109:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_178115
L_178110:
	movl 0x14(%rbp),%ecx
L_178111:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453795
L_178112:
	movl %ecx,0x14(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453795:
L_178113:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2491
L_178232:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x14(%rbp)
	jnz L_453798
L_178233:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453797
L_178234:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movl $0x0,0x14(%rbp)
	jmp L_178105
.p2align 0x4
L_453797:
L_178235:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453798:
L_178236:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453799
L_178237:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453799:
L_178238:
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2492
L_178258:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	testl %r15d,%r15d
	jnz L_453800
L_178259:
	xorl %ecx,%ecx
L_178260:
	movl %ecx,0x64(%rbp)
	incl 0x68(%rbp)
	jmp loop_1808
.p2align 0x4
L_453800:
L_178261:
	movl 0x64(%rbp),%ecx
	jmp L_178260
.p2align 0x4
.long 0x2492
L_178244:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	testl %r15d,%r15d
	jnz L_453801
L_178245:
	xorl %ecx,%ecx
L_178246:
	movl %ecx,0x64(%rbp)
	incl 0x68(%rbp)
	jmp loop_1807
.p2align 0x4
L_453801:
L_178247:
	movl 0x64(%rbp),%ecx
	jmp L_178246
.p2align 0x4
.long 0x999
L_178220:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_178115
L_178221:
	movl 0x14(%rbp),%ecx
	jmp L_178111
.p2align 0x4
.long 0x913
L_178116:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x20(%r15),%r14
	movl $0x1,0x0(%r14)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453803
L_178117:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453803:
L_178118:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BD
L_178213:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movl %r15d,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x58,%rbp
	leaq (L_178214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
.long 0x914
L_178196:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_178197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
.long 0x248E
L_178151:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_453805
L_178168:
	movl 0x68(%rbp),%r15d
	incl %r15d
	jo L_453804
L_178169:
	movl %r15d,0x68(%rbp)
	jmp loop_1805
.p2align 0x4
L_453804:
L_178132:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453805:
L_178153:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_453810
L_178156:
	xorl %ecx,%ecx
L_178157:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x51,%r14
	je L_453808
L_178158:
	andq $0x3,%r15
	jnz L_178159
L_178163:
L_178159:
	testl %ecx,%ecx
	jz L_453806
L_178162:
	movl $0x1,0x14(%rbp)
	jmp L_178115
.p2align 0x4
L_453806:
L_178161:
	movl $0x1,%ecx
	jmp L_178111
.p2align 0x4
L_453808:
L_178164:
	testl %ecx,%ecx
	jz L_453809
L_178167:
	movl $0x0,0x14(%rbp)
	jmp L_178115
.p2align 0x4
L_453809:
L_178166:
	xorl %ecx,%ecx
	jmp L_178111
.p2align 0x4
L_453810:
L_178155:
	xorl %ecx,%ecx
	jmp L_178111
.p2align 0x4
.long 0x99C
L_178171:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movb 0x70(%rbp),%r15b
	movb %r15b,0x68(%rbp)
	cmpb $0x2,%r15b
	jne L_178173
L_178186:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x3A,%r14
	je L_178173
	cmpq $0x3D,%r14
	je L_453813
L_178187:
	andq $0x3,%r15
	jnz L_178188
L_178191:
L_178188:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_453811
L_178190:
	movl $0x1,%ecx
	jmp L_178157
.p2align 0x4
L_453811:
L_178183:
	movl $0x0,0x14(%rbp)
	jmp L_178115
.p2align 0x4
L_453813:
L_178173:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_178153
L_178175:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x49,%r14
	je L_453816
	cmpq $0x51,%r14
	je L_178166
L_178176:
	andq $0x3,%r15
	jnz L_178161
L_178177:
	jmp L_178161
.p2align 0x4
L_453816:
L_178178:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_178179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeIsSmall_0
.p2align 0x4
.long 0x999
L_178136:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_178115
L_178137:
	movl 0x14(%rbp),%ecx
	jmp L_178111
.p2align 0x4
.long 0x248D
L_178127:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_453822
L_178128:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453821
L_178129:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453821:
L_178130:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453822:
L_178131:
	movl 0x68(%rbp),%r15d
	incl %r15d
	jo L_178132
L_178133:
	movl %r15d,0x68(%rbp)
	jmp loop_1804
.p2align 0x4
.long 0x248F
L_178284:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178285
L_178293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_178294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178294
.p2align 0x4
.long 0x2493
L_178294:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_178285:
	movq 0x78(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_178287
L_178291:
	movl 0x50(%rbp),%r15d
	incl %r15d
	jo L_178132
L_178292:
	movl %r15d,0x50(%rbp)
	jmp loop_1809
.p2align 0x4
.long 0x999
L_178296:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178287
L_178298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_178299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178299
.p2align 0x4
.long 0x2150
L_178299:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_178287
.p2align 0x4
.long 0x913
L_178214:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453828
L_178215:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453828:
L_178216:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x999
L_178197:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x68(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x70(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_178121
L_178199:
	movl $0x0,0x50(%rbp)
loop_1806:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x70(%rbp)
	je L_178115
L_178200:
	movslq %r15d,%r14
	cmpq 0x68(%rbp),%r14
	jnb L_178125
L_178202:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_178203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
.long 0x914
L_178179:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_453833
L_178180:
	testl %r15d,%r15d
	jnz L_178183
	jmp L_178155
.p2align 0x4
L_453833:
L_178184:
	movl %r15d,%ecx
	jmp L_178157
.p2align 0x4
.long 0x248F
L_178203:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_453835
L_178204:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453834
L_178205:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_178105
.p2align 0x4
L_453834:
L_178206:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453835:
L_178207:
	movl 0x50(%rbp),%r15d
	incl %r15d
	jo L_178132
L_178208:
	movl %r15d,0x50(%rbp)
	jmp loop_1806
.text
.p2align 0x4
.globl typeIsSmall_0
.hidden typeIsSmall_0
typeIsSmall_0:
L_178308:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178309
L_178335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_178336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178336
.p2align 0x4
.long 0x460
L_178336:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_178309:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_453837
L_178310:
	movq %r14,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_178311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_453837:
L_178334:
	movq (globalObjptr+0x50E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E4
L_178311:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,%r14
	andq $0x1,%r14
	jz L_178313
L_178331:
	shrq $0x1,%r15
	movl %r15d,%r14d
	testl %r14d,%r14d
	jnz L_453844
L_178313:
	movq 0x10(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,0x10(%r15)
	je L_178318
L_178314:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%r15),%r14
	je L_453839
L_178316:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453839:
L_178318:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x18(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	je L_453840
L_178319:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453840:
L_178320:
	movl $0x0,0x1C(%rbp)
loop_1810:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	je L_178316
L_178321:
	movslq %r15d,%r14
	cmpq 0x10(%rbp),%r14
	jnb L_453841
L_178323:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (not_46+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeIsSmall_0
.p2align 0x4
L_453841:
L_178322:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453844:
L_178325:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x497
not_46:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jz L_178325
L_178326:
	movl 0x1C(%rbp),%r15d
	incl %r15d
	jo L_453846
L_178328:
	movl %r15d,0x1C(%rbp)
	jmp loop_1810
.p2align 0x4
L_453846:
L_178327:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl clearExp_0
.hidden clearExp_0
clearExp_0:
L_178337:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178338
L_178397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_178398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178398
.p2align 0x4
.long 0x452
L_178398:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_178338:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_178350
L_178339:
	movq 0x8(%r13),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_178340:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_453857
	cmpq $0xE9A,%r14
	je L_453853
	cmpq $0xE9B,%r14
	je L_453851
L_178341:
	movq 0x10(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r10)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	cmpq %r11,%r15
	jne L_453850
L_178344:
	cmpl $0x0,%ecx
	jl L_453849
L_178345:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_1811:
	cmpl %ecx,%ebx
	jnl L_453848
L_178351:
	movslq %ebx,%r13
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r9)
	incl %ebx
	jmp loop_1811
.p2align 0x4
L_453848:
L_178346:
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_178347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453849:
L_178353:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453850:
L_178343:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453851:
L_178393:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453852
L_178394:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178340
.p2align 0x4
L_453852:
L_178350:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453853:
L_178386:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r11
	jne L_178343
L_178388:
	cmpl $0x0,%ecx
	jl L_178353
L_178389:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_1814:
	cmpl %ecx,%ebx
	jnl L_453854
L_178391:
	movslq %ebx,%r13
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r9)
	incl %ebx
	jmp loop_1814
.p2align 0x4
L_453854:
L_178390:
	movq %r15,0x18(%rbp)
	movq $0x1,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_178347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_453857:
L_178354:
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r11)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA3,%r15
	je L_453871
	cmpq $0xEA4,%r15
	je L_453870
	cmpq $0xEA7,%r15
	je L_453859
L_178355:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_178350
L_178356:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_178340
.p2align 0x4
L_453859:
L_178361:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_453866
L_178375:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_178343
L_178377:
	cmpl $0x0,%r13d
	jl L_178353
L_178378:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_1813:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_453862
L_178367:
	cmpq $0x1,0x8(%rbp)
	jne L_453861
L_178369:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178350
L_178370:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178340
.p2align 0x4
L_453861:
L_178368:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_178347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453862:
L_178380:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x10(%r14),%r10
	cmpq $0x1,%r10
	je L_453863
L_178381:
	movq 0x8(%r10),%r14
	movq 0x10(%r14),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq %r11,%r15
L_178382:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_178383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453863:
	movq %r11,%r15
	jmp L_178382
.p2align 0x4
L_453866:
L_178362:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_178343
L_178364:
	cmpl $0x0,%r13d
	jl L_178353
L_178365:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_1812:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_178367
L_178372:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_178373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453870:
L_178359:
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_178360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453871:
L_178358:
	movq 0x18(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	addq $0x10,%rbp
	leaq (L_178347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
.long 0x4B0
L_178347:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178350
L_178348:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178340
.p2align 0x4
.long 0xB9F
L_178383:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_1813
.p2align 0x4
.long 0xB9F
L_178373:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_1812
.p2align 0x4
.long 0x51F
L_178360:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_178347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.text
.p2align 0x4
.globl get_108
.hidden get_108
get_108:
L_178399:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_178508
L_178400:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453907
L_178401:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_178402
L_178403:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_453905
L_178404:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_178406:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_178407
L_178494:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCDC,%r13
	jne L_178407
L_178495:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_453898
L_178407:
	movl 0x38(%rbp),%r13d
	incl %r13d
	movl %r13d,0x3C(%rbp)
	jo L_178408
L_178409:
	cmpq $0x1,%r15
	je L_453875
L_178410:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x38(%rbp)
	jmp L_178406
.p2align 0x4
L_453875:
L_178411:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178412
L_178492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178493
.p2align 0x4
.long 0x635
L_178493:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_178412:
	movl 0x3C(%rbp),%ecx
L_178413:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_178414
L_178415:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_178417
L_178491:
	movl %ecx,0x0(%r15)
L_178417:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r11)
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE96,%r14
	je L_453888
L_178439:
	movq 0x0(%r15),%r11
	movq 0x8(%r11),%r13
	movq 0x8(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_453887
L_178440:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_453886
L_178441:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x20(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_178443:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_178444
L_178480:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_178444
L_178481:
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_453879
L_178444:
	movl 0x20(%rbp),%r11d
	incl %r11d
	jo L_453878
L_178445:
	cmpq $0x1,%r15
	je L_453876
L_178446:
	movl %r11d,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_178443
.p2align 0x4
L_453876:
	movl %r11d,%ecx
L_178448:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453877
L_178449:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_570
L_178479:
	movl %ecx,0x0(%r15)
x_570:
	movq 0x10(%r13),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_178451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_453877:
L_178414:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453878:
L_178408:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453879:
L_178483:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178484
L_178488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178489
.p2align 0x4
.long 0x18AC
L_178489:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_178484:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_178414
L_178485:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_453881
L_178486:
	movq 0x38(%rbp),%r15
x_571:
	movl 0x0(%r15),%r14d
	movq $0x5311,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
L_178427:
	movq $0x19B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2987,%r14
	je L_453880
L_178429:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq $0x5313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453880:
L_178428:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x5315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	addq $0x20,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453881:
L_178487:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp x_571
.p2align 0x4
L_453886:
L_178490:
	xorl %ecx,%ecx
	jmp L_178448
.p2align 0x4
L_453887:
L_178402:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453888:
L_178418:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r11,%r15
	je L_453889
L_178419:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453889:
L_178420:
	movq 0x48(%rbp),%r15
	testq %r15,%r15
	jz L_453893
L_178421:
	cmpq $0x7FFFFFFF,%r15
	ja L_453892
L_178422:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178423
L_178435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_178436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178436
.p2align 0x4
.long 0xAA0
L_178436:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_178423:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1523,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_178424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178424
.p2align 0x4
.long 0xAA0
L_178424:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_178425:
	movq $0x0,0x58(%rbp)
loop_1815:
	movq 0x48(%rbp),%r14
	cmpq %r14,0x58(%rbp)
	jl L_453890
L_178426:
	movq 0x50(%rbp),%r14
	movq $0xA5,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x530F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_178427
.p2align 0x4
L_453890:
L_178430:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x68,%rbp
	leaq (L_178431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_108
.p2align 0x4
L_453892:
L_178437:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453893:
L_178438:
	movq (globalObjptr+0x1CF0)(%rip),%r14
	movq %r14,0x50(%rbp)
	jmp L_178425
.p2align 0x4
L_453898:
L_178497:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178498
L_178505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178506
.p2align 0x4
.long 0x48D
L_178506:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_178498:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2987,%r15
	je L_453901
L_178504:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movq $0x5313,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
L_178500:
	movl 0x38(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_178414
L_178501:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_453899
L_178502:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453899:
L_178503:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453901:
L_178499:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x5315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq %r14,%r15
	jmp L_178500
.p2align 0x4
L_453905:
L_178507:
	xorl %ecx,%ecx
	jmp L_178413
.p2align 0x4
L_453907:
L_178508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178509
.p2align 0x4
.long 0x4DF
L_178509:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_178401
.p2align 0x4
.long 0x1
L_178451:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_178452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1037
L_178431:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178432
L_178433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_178434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178434
.p2align 0x4
.long 0xBD5
L_178434:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_178432:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_1815
.p2align 0x4
.long 0x4B0
L_178452:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_178453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_178453:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_178454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_178454:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178455
L_178477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_178478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178478
.p2align 0x4
.long 0x4AF
L_178478:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_178455:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_178456:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_178408
L_178457:
	cmpq $0x1,%r14
	je L_453910
L_178458:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178456
.p2align 0x4
L_453910:
L_178459:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178460
L_178475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178476
.p2align 0x4
.long 0x4E7
L_178476:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178460:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453911
L_178461:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_255:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_453911:
L_178474:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_255
.p2align 0x4
.long 0x1
rev_253:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_453917
L_178462:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_178463:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453916
.p2align 0x4,,0x7
L_178464:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453915
L_178465:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_178463
.p2align 0x4
L_453915:
L_178467:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_453916:
L_178471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_178472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178472
.p2align 0x4
.long 0x45C
L_178472:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_178464
.p2align 0x4
L_453917:
L_178473:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_178467
.p2align 0x4
.long 0x1
bug_469:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178468
L_178469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_178470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178470
.p2align 0x4
.long 0x452
L_178470:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_178468:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1192
.hidden x_1192
x_1192:
L_178510:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178511
L_179120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_179121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179121
.p2align 0x4
.long 0x458
L_179121:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_178511:
	movslq 0x8(%rbp),%r15
	movq 0x0(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_454264
L_178513:
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x0(%r14,%r13,1),%r11
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r13
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_454263
L_178514:
	movl $0x1,0x0(%r13)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_178521
L_178515:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_178516:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0xC,%rax
	ja L_453919
	jmp *jumpTable_597(,%rax,8)
.data
.p2align 0x4
jumpTable_597:
.quad L_454260,L_454258,L_454256,L_178517,L_454253,L_454251,L_454249,L_178517,L_454247,L_454245,L_454243,L_178517,L_454241
.text
.p2align 0x4
L_453919:
L_178517:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x24BA,%rax
	cmpq $0x8A,%rax
	ja L_453920
	jmp *jumpTable_598(,%rax,8)
.data
.p2align 0x4
jumpTable_598:
.quad L_454239,L_454237,L_454235,L_454230,L_454225,L_454220,L_454219,L_454218,L_454217,L_454215,L_454213,L_454211,L_454209,L_454204,L_454199,L_454194,L_454193,L_454192,L_454191,L_454190,L_454187,L_454184,L_454181,L_454178,L_454175,L_454172,L_454169,L_454166,L_454165,L_454164,L_454162,L_454160,L_454158,L_454156,L_454154,L_454152,L_454150,L_454148,L_454146,L_454144,L_454142,L_454140,L_454138,L_454136,L_454134,L_454132,L_454130,L_454128,L_454126,L_454124,L_454122,L_454120,L_454118,L_454116,L_454114,L_454112,L_454110,L_454108,L_454106,L_454104,L_454102,L_454100,L_454098,L_454096,L_454094,L_454092,L_454090,L_454088,L_454086,L_454084,L_454083,L_454082,L_454080,L_454078,L_454076,L_454074,L_454072,L_454070,L_454068,L_454066,L_454064,L_454062,L_454060,L_454058,L_454056,L_454054,L_454052,L_454050,L_454048,L_454046,L_454044,L_454042,L_454040,L_454038,L_454036,L_454034,L_454032,L_454030,L_454028,L_454026,L_454024,L_454022,L_454020,L_454018,L_454016,L_454014,L_454012,L_454010,L_454008,L_454006,L_454004,L_454002,L_453999,L_453997,L_453994,L_453991,L_453988,L_453985,L_453982,L_453979,L_453978,L_453977,L_453976,L_453971,L_453966,L_453961,L_453956,L_453954,L_453952,L_453950,L_453949,L_453948,L_453943,L_453938,L_453933,L_453928,L_453926,L_453924,L_453922
.text
.p2align 0x4
L_453920:
L_178518:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453921
L_178519:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453921:
L_178521:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453922:
L_179087:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179088:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453924:
L_179084:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179085:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453926:
L_179081:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179082:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453928:
L_179070:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453932
L_179071:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_179072:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_453931
L_179073:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453929
L_179074:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_179072
.p2align 0x4
L_453929:
	movq %r14,%r15
	movq %r13,%r14
L_179076:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179077:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453931:
L_178541:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453932:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_179076
.p2align 0x4
L_453933:
L_179059:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453937
L_179060:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_179061:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_179062:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453934
L_179063:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_179061
.p2align 0x4
L_453934:
	movq %r14,%r15
	movq %r13,%r14
L_179065:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179066:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453937:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_179065
.p2align 0x4
L_453938:
L_179048:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453942
L_179049:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_179050:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_179051:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453939
L_179052:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_179050
.p2align 0x4
L_453939:
	movq %r14,%r15
	movq %r13,%r14
L_179054:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179055:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453942:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_179054
.p2align 0x4
L_453943:
L_179037:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453947
L_179038:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_179039:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_179040:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453944
L_179041:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_179039
.p2align 0x4
L_453944:
	movq %r14,%r15
	movq %r13,%r14
L_179043:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179044:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453947:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_179043
.p2align 0x4
L_453948:
L_179036:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1187
.p2align 0x4
L_453949:
L_179035:
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1188
.p2align 0x4
L_453950:
L_179032:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179033:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453952:
L_179029:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179030:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453954:
L_179026:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179027:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453956:
L_179015:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453960
L_179016:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_179017:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_179018:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453957
L_179019:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_179017
.p2align 0x4
L_453957:
	movq %r14,%r15
	movq %r13,%r14
L_179021:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179022:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453960:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_179021
.p2align 0x4
L_453961:
L_179004:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453965
L_179005:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_179006:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_179007:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453962
L_179008:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_179006
.p2align 0x4
L_453962:
	movq %r14,%r15
	movq %r13,%r14
L_179010:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179011:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453965:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_179010
.p2align 0x4
L_453966:
L_178993:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453970
L_178994:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178995:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_178996:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453967
L_178997:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178995
.p2align 0x4
L_453967:
	movq %r14,%r15
	movq %r13,%r14
L_178999:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179000:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453970:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178999
.p2align 0x4
L_453971:
L_178982:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453975
L_178983:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178984:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_178985:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453972
L_178986:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178984
.p2align 0x4
L_453972:
	movq %r14,%r15
	movq %r13,%r14
L_178988:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178989:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453975:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178988
.p2align 0x4
L_453976:
L_178972:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_453977:
L_178962:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_453978:
L_178961:
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x2(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x39(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseNonexhaustiveMatch_0
.p2align 0x4
L_453979:
L_178956:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178957:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178958:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453982:
L_178951:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178952:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178953:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453985:
L_178946:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178947:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178948:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453988:
L_178941:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178942:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178943:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453991:
L_178936:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_178541
L_178937:
	movq 0x8(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178938:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453994:
L_178931:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178932:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178933:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453997:
L_178928:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movl $0x0,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178929:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_453999:
L_178923:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178924:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178925:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454002:
L_178920:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178921:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454004:
L_178917:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178918:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454006:
L_178914:
	movq 0x0(%r15),%r14
	movb $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178915:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454008:
L_178911:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178912:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454010:
L_178908:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178909:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454012:
L_178905:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178906:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454014:
L_178902:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178903:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454016:
L_178899:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178900:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454018:
L_178896:
	movq 0x0(%r15),%r14
	movb $0x7,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178897:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454020:
L_178893:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178894:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454022:
L_178890:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178891:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454024:
L_178887:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178888:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454026:
L_178884:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178885:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454028:
L_178881:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178882:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454030:
L_178878:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178879:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454032:
L_178875:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178876:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454034:
L_178872:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178873:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454036:
L_178869:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178870:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454038:
L_178866:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178867:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454040:
L_178863:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178864:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454042:
L_178860:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178861:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454044:
L_178857:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178858:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454046:
L_178854:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178855:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454048:
L_178851:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x90)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178852:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454050:
L_178848:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178849:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454052:
L_178845:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178846:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454054:
L_178842:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178843:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454056:
L_178839:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178840:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454058:
L_178836:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178837:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454060:
L_178833:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178834:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454062:
L_178830:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178831:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454064:
L_178827:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178828:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454066:
L_178824:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178825:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454068:
L_178821:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178822:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454070:
L_178818:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA98)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178819:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454072:
L_178815:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA78)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178816:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454074:
L_178812:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178813:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454076:
L_178809:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178810:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454078:
L_178806:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178807:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454080:
L_178803:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178804:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454082:
L_178802:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1190
.p2align 0x4
L_454083:
L_178801:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1191
.p2align 0x4
L_454084:
L_178798:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178799:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454086:
L_178795:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x80)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178796:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454088:
L_178792:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178793:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454090:
L_178789:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178790:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454092:
L_178786:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178787:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454094:
L_178783:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA88)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178784:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454096:
L_178780:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCAA8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178781:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454098:
L_178777:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178778:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454100:
L_178774:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454102:
L_178771:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178772:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454104:
L_178768:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178769:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454106:
L_178765:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178766:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454108:
L_178762:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178763:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454110:
L_178759:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178760:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454112:
L_178756:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178757:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454114:
L_178753:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178754:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454116:
L_178750:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178751:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454118:
L_178747:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178748:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454120:
L_178744:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x70)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178745:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454122:
L_178741:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xBDB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178742:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454124:
L_178738:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178739:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454126:
L_178735:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178736:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454128:
L_178732:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178733:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454130:
L_178729:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178730:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454132:
L_178726:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178727:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454134:
L_178723:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178724:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454136:
L_178720:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178721:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454138:
L_178717:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178718:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454140:
L_178714:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x60)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178715:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454142:
L_178711:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x7F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178712:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454144:
L_178708:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178709:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454146:
L_178705:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178706:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454148:
L_178702:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178703:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454150:
L_178699:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178700:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454152:
L_178696:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178697:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454154:
L_178693:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178694:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454156:
L_178690:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178691:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454158:
L_178687:
	movq 0x0(%r15),%r14
	movb $0x4,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454160:
L_178684:
	movq 0x0(%r15),%r14
	movb $0x3,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178685:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454162:
L_178681:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178682:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454164:
L_178680:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_454165:
L_178679:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_454166:
L_178674:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178675:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178676:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454169:
L_178670:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_454171
L_178671:
	movl %r14d,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178672:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454171:
L_178640:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454172:
L_178664:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
L_178665:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_454174
L_178667:
	movq 0x0(%r11),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178668:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454174:
L_178666:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454175:
L_178659:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178660:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178661:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454178:
L_178654:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178655:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178656:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454181:
L_178649:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178650:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178651:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454184:
L_178644:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_178541
L_178645:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178646:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454187:
L_178639:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_178640
L_178641:
	movl %r14d,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178642:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454190:
L_178638:
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseRedundantMatch_0
.p2align 0x4
L_454191:
L_178637:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resolve_0
.p2align 0x4
L_454192:
L_178627:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_454193:
L_178617:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_454194:
L_178606:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_454198
L_178607:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178608:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_178609:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_454195
L_178610:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178608
.p2align 0x4
L_454195:
	movq %r14,%r15
	movq %r13,%r14
L_178612:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178613:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454198:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178612
.p2align 0x4
L_454199:
L_178595:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_454203
L_178596:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178597:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_178598:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_454200
L_178599:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178597
.p2align 0x4
L_454200:
	movq %r14,%r15
	movq %r13,%r14
L_178601:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178602:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454203:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178601
.p2align 0x4
L_454204:
L_178584:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_454208
L_178585:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178586:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_178587:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_454205
L_178588:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178586
.p2align 0x4
L_454205:
	movq %r14,%r15
	movq %r13,%r14
L_178590:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178591:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454208:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178590
.p2align 0x4
L_454209:
L_178581:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178582:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454211:
L_178578:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178579:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454213:
L_178575:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178576:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454215:
L_178572:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178573:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454217:
L_178571:
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1194
.p2align 0x4
L_454218:
L_178570:
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1195
.p2align 0x4
L_454219:
L_178565:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1196
.p2align 0x4
L_454220:
L_178554:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_454224
L_178555:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178556:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_178557:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_454221
L_178558:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178556
.p2align 0x4
L_454221:
	movq %r14,%r15
	movq %r13,%r14
L_178560:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178561:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454224:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178560
.p2align 0x4
L_454225:
L_178543:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_454229
L_178544:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178545:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_178546:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_454226
L_178547:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178545
.p2align 0x4
L_454226:
	movq %r14,%r15
	movq %r13,%r14
L_178549:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178550:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454229:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178549
.p2align 0x4
L_454230:
L_178531:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_454234
L_178532:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178533:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_178541
L_178534:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_454231
L_178535:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178533
.p2align 0x4
L_454231:
	movq %r14,%r15
	movq %r13,%r14
L_178537:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178538:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454234:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178537
.p2align 0x4
L_454235:
L_178528:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178529:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454237:
L_178525:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178526:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454239:
L_178522:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178523:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454241:
L_179115:
	movq (globalObjptr+0x838)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179116:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454243:
L_179112:
	movq (globalObjptr+0x830)(%rip),%r14
	movl $0x8,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179113:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454245:
.p2align 0x4,,0x7
L_178567:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_178568:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454247:
L_179108:
	movq (globalObjptr+0x828)(%rip),%r14
	movl $0x3C,0x0(%r14)
	movl $0x140,0x4(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179109:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454249:
L_179105:
	movq (globalObjptr+0x820)(%rip),%r14
	movl $0x3,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179106:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454251:
L_179102:
	movq (globalObjptr+0x818)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179103:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454253:
L_179099:
	movq (globalObjptr+0x810)(%rip),%r14
	movl $0x2710,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179100:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454256:
L_179096:
	movq (globalObjptr+0x808)(%rip),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179097:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454258:
L_179093:
	movq (globalObjptr+0x800)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179094:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454260:
L_179090:
	movq (globalObjptr+0x7F8)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_178521
L_179091:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_178516
.p2align 0x4
L_454263:
L_179119:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454264:
L_178512:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_178566:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_178567
.p2align 0x4
.long 0x4DE
L_178973:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_178974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_178963:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_178964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_178628:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_178629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DE
L_178618:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_178619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x466
L_178974:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178975
L_178980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178981
.p2align 0x4
.long 0x45B
L_178981:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178975:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_178964:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178965
L_178970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178971
.p2align 0x4
.long 0x45B
L_178971:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178965:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_178629:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178630
L_178635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178636
.p2align 0x4
.long 0x45B
L_178636:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178630:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x466
L_178619:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178620
L_178625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178626
.p2align 0x4
.long 0x45B
L_178626:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178620:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x968
L_178976:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178977
L_178978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178979
.p2align 0x4
.long 0x52D
L_178979:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178977:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_178966:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178967
L_178968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178969
.p2align 0x4
.long 0x52D
L_178969:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178967:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_178631:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178632
L_178633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178634
.p2align 0x4
.long 0x52D
L_178634:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178632:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x968
L_178621:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178622
L_178623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178624
.p2align 0x4
.long 0x52D
L_178624:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178622:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_178566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.text
.p2align 0x4
.globl resolve_0
.hidden resolve_0
resolve_0:
L_179122:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179123
L_179151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_179152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179152
.p2align 0x4
.long 0x4AF
L_179152:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_179123:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_179124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
.long 0x51F
L_179124:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_454276
L_179126:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_454275
L_179127:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454275:
L_179128:
	movq (globalObjptr+0xF588)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_179129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454276:
L_179125:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51F
L_179129:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_179130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x65C
L_179130:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x557
L_179131:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x557
L_179132:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179133
L_179149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179150
.p2align 0x4
.long 0x63D
L_179150:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179133:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179134:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_179135
L_179136:
	cmpq $0x1,%r14
	je L_454277
L_179137:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179134
.p2align 0x4
L_454277:
L_179138:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179139
L_179147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179148
.p2align 0x4
.long 0x56E
L_179148:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179139:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454279
L_179140:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_179141:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_454278
L_179142:
	movl %r13d,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_179143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454278:
L_179135:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454279:
L_179146:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179141
.p2align 0x4
.long 0x1
L_179143:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_454283
L_179144:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454283:
L_179145:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl diagnoseRedundantMatch_0
.hidden diagnoseRedundantMatch_0
diagnoseRedundantMatch_0:
L_179153:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179154
L_179314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179315
.p2align 0x4
.long 0xE7B
L_179315:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179154:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r14
	jne L_179156
L_179157:
	testq %rdx,%rdx
	jz L_454299
L_179158:
	cmpq $0x7FFFFFFF,%rdx
	ja L_179302
L_179159:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15B7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179160
.p2align 0x4
.long 0xE7C
L_179160:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_179161:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1816:
	cmpq 0x38(%rbp),%r15
	jnl L_454287
L_179304:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r14
	movl 0x0(%r11),%r13d
	testl %r13d,%r13d
	jnz L_454286
L_179305:
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_454285
L_179309:
	incl %ecx
	jo L_454284
L_179310:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_179308:
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1816
.p2align 0x4
L_454284:
L_179182:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454285:
	movl %ecx,(localWord32+0x0)(%rip)
L_179307:
	movq $0x1,%r14
	jmp L_179308
.p2align 0x4
L_454286:
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_179307
.p2align 0x4
L_454287:
L_179162:
	movq 0x40(%rbp),%r15
	movq $0x1795,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_454297
L_179163:
	cmpq $0x7FFFFFFF,%rdx
	ja L_454296
L_179164:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15B9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179165
.p2align 0x4
.long 0x1574
L_179165:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_179166:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1817:
	cmpq 0x30(%rbp),%r15
	jnl L_454291
.p2align 0x4,,0x7
loop_1818:
	movslq %ecx,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_454289
L_179299:
	incl %ecx
	jo L_179182
L_179300:
	jmp loop_1818
.p2align 0x4
L_454289:
L_179297:
	incl %ecx
	jo L_179182
L_179298:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r10
	movq %r15,%r9
	movq %r15,%r8
	movq 0x8(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x18(%r11),%rdi
	movl 0x0(%r11),%edx
	movq 0x20(%r11),%rbx
	movq 0x38(%rbp),%r11
	movq %r11,%rax
	shrq $0x8,%rax
	movq %r12,(gcState+0x0)(%rip)
	movq (gcState+0x3C8)(%rip),%r12
	movb $0x1,0x0(%r12,%rax,1)
	imulq $0x28,%r14
	movq %rsp,0x8(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r12,%r14,1)
	imulq $0x28,%r13
	movq %rsi,0x10(%r11,%r13,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r12,%r14,1)
	imulq $0x28,%r10
	movq %rdi,0x18(%r11,%r10,1)
	imulq $0x28,%r9
	movl %edx,0x0(%r11,%r9,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r12,%r14,1)
	imulq $0x28,%r8
	movq %rbx,0x20(%r11,%r8,1)
	incq %r15
	movq (gcState+0x0)(%rip),%r12
	jmp loop_1817
.p2align 0x4
L_454291:
L_179167:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179168
L_179294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179295
.p2align 0x4
.long 0x1138
L_179295:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179168:
	movq 0x38(%rbp),%r15
	movq $0xAF7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_454294
L_179170:
	testl %r13d,%r13d
	jz L_454293
L_179171:
	cmpb $0x2,0x28(%rbp)
	je L_454292
L_179172:
	movq $0x2B49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
L_179173:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4C30)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_179174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454292:
L_179292:
	movq $0x2B4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	jmp L_179173
.p2align 0x4
L_454293:
L_179293:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454294:
L_179156:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454296:
L_179302:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454297:
L_179303:
	movq (globalObjptr+0x4C28)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_179166
.p2align 0x4
L_454299:
L_179313:
	movq (globalObjptr+0x4C20)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_179161
.p2align 0x4
.long 0xC76
L_179174:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_179175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC76
L_179175:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xF590)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_179176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1137
L_179176:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179177
L_179290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179291
.p2align 0x4
.long 0x1138
L_179291:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179177:
	movq $0x3C8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_179178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4DE
L_179178:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4DE
L_179179:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179180
L_179288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179289
.p2align 0x4
.long 0xE7B
L_179289:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179180:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454316
L_179181:
	decl %ecx
	jo L_179182
L_179183:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_179184:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179185:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_179182
L_179186:
	cmpq $0x1,%r15
	je L_454303
L_179187:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179185
.p2align 0x4
L_454303:
L_179188:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179189
L_179285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179286
.p2align 0x4
.long 0x645
L_179286:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179189:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454312
L_179190:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_179191:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_454311
	cmpq $0x2,%r15
	je L_454310
	cmpq $0x3,%r15
	je L_454309
	cmpq $0x5,%r15
	je L_454308
	cmpq $0x6,%r15
	je L_454307
L_179192:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2546,%r14
	je L_454306
	cmpq $0x2547,%r14
	je L_454305
	cmpq $0x2548,%r14
	je L_454304
L_179193:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454304:
L_179263:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454305:
L_179244:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454306:
L_179239:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_454307:
L_179283:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_179214:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_179215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_454308:
L_179282:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_179214
.p2align 0x4
L_454309:
L_179281:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_179214
.p2align 0x4
L_454310:
L_179280:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_179214
.p2align 0x4
L_454311:
L_179279:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_179214
.p2align 0x4
L_454312:
L_179284:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179191
.p2align 0x4
L_454316:
L_179287:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179184
.p2align 0x4
.long 0x912
L_179194:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_179195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0xF43
L_179264:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl $0x1,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0xF43
L_179245:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x65D
L_179240:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179241
L_179242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179243
.p2align 0x4
.long 0x811
L_179243:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179241:
	movq 0x8(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_179214
.p2align 0x4
.long 0x4DD
L_179215:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179216
L_179227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179228
.p2align 0x4
.long 0x65A
L_179228:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179216:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454322
L_179217:
	decl %ecx
	jo L_179182
L_179218:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_179219:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x15A4,%r13
	je L_454320
L_179221:
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r11d
	incl %r11d
	jo L_179182
L_179222:
	movl %r11d,0x0(%r15)
	movq %r14,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_179223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454320:
L_179220:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
	movq (globalObjptr+0xDD30)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp msg_0
.p2align 0x4
L_454322:
L_179226:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179219
.p2align 0x4
.long 0xD44
L_179195:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4DE
L_179265:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4DE
L_179246:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179247
L_179261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179262
.p2align 0x4
.long 0x5F7
L_179262:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179247:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x1
L_179223:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_454325
L_179224:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454325:
L_179225:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2494
L_179196:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4DE
L_179266:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179267
L_179277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179278
.p2align 0x4
.long 0x4DF
L_179278:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179267:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179268:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_179182
L_179269:
	cmpq $0x1,%r14
	je L_454326
L_179270:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179268
.p2align 0x4
L_454326:
L_179271:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179272
L_179275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179276
.p2align 0x4
.long 0x1CFD
L_179276:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179272:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454327
L_179273:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_179214
.p2align 0x4
L_454327:
L_179274:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179214
.p2align 0x4
.long 0x4DE
L_179248:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179249
L_179259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179260
.p2align 0x4
.long 0x4DF
L_179260:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179249:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179250:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_179182
L_179251:
	cmpq $0x1,%r14
	je L_454331
L_179252:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179250
.p2align 0x4
L_454331:
L_179253:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179254
L_179257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179258
.p2align 0x4
.long 0x1CFD
L_179258:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179254:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454332
L_179255:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_179214
.p2align 0x4
L_454332:
L_179256:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179214
.p2align 0x4
.long 0x656
L_179197:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179198
L_179237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179238
.p2align 0x4
.long 0x658
L_179238:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179198:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179199:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_179182
L_179200:
	cmpq $0x1,%r14
	je L_454336
L_179201:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179199
.p2align 0x4
L_454336:
L_179202:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179203
L_179235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179236
.p2align 0x4
.long 0x1574
L_179236:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_179203:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454337
L_179204:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_179205:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
L_454337:
L_179234:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179205
.p2align 0x4
.long 0x4DE
L_179206:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179207
L_179232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179233
.p2align 0x4
.long 0x4DF
L_179233:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179207:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179208:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_179182
L_179209:
	cmpq $0x1,%r14
	je L_454341
L_179210:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179208
.p2align 0x4
L_454341:
L_179211:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179212
L_179230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179231
.p2align 0x4
.long 0x1CFD
L_179231:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179212:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454342
L_179213:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_179214
.p2align 0x4
L_454342:
L_179229:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179214
.text
.p2align 0x4
.globl x_1193
.hidden x_1193
x_1193:
L_179316:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179317
L_179374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179375
.p2align 0x4
.long 0x45C
L_179375:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_179317:
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_454368
L_179319:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_454367
L_179320:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_179322:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_179323
L_179345:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCDB,%r13
	jne L_179323
L_179346:
	movq 0x8(%r15),%r13
	movq 0x0(%rbp),%r11
	cmpq %r11,0x0(%r15)
	je L_454354
L_179323:
	incl %ecx
	jo L_454353
L_179325:
	cmpq $0x1,%r14
	je L_454346
L_179326:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179322
.p2align 0x4
L_454346:
L_179327:
L_179328:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_454352
L_179330:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179332
L_179344:
	movl %ecx,0x0(%r15)
L_179332:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_454350
L_179335:
	cmpl $0x0,%r13d
	jl L_454349
L_179336:
	movl $0x0,0x1C(%rbp)
loop_1819:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_454347
L_179337:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454347:
L_179338:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2989,%r15
	je L_454348
L_179341:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_179340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_454348:
L_179339:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_179340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_454349:
L_179343:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454350:
L_179334:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454352:
L_179329:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454353:
L_179324:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454354:
L_179348:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179329
L_179349:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_454363
L_179372:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
L_179351:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_179334
L_179353:
	cmpl $0x0,%r13d
	jl L_179343
L_179354:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_1820:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454360
.p2align 0x4,,0x7
L_179355:
	movl 0x24(%rbp),%r11d
	cmpl 0x20(%rbp),%r11d
	jnl L_454359
L_179357:
	movslq %r11d,%r15
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_454358
L_179359:
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x0(%r11,%r13,1),%r10
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jnz L_454356
L_179360:
	movq 0x0(%r10),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2989,%r15
	je L_454355
L_179364:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r9
	movq $0x49AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq %r10,%r15
L_179362:
	movq $0x1B55,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
.p2align 0x4,,0x7
L_179363:
	incl 0x24(%rbp)
	jmp loop_1820
.p2align 0x4
L_454355:
L_179361:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r11d
	movq $0x49AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r10,%r15
	jmp L_179362
.p2align 0x4
L_454356:
L_179365:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2989,%r15
	je L_454357
L_179368:
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_179367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_454357:
L_179366:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_179367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_454358:
L_179358:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454359:
L_179356:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454360:
L_179369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179370
.p2align 0x4
.long 0x45F
L_179370:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_179355
.p2align 0x4
L_454363:
L_179350:
	movq %r13,0x18(%rbp)
	jmp L_179351
.p2align 0x4
L_454367:
L_179373:
	xorl %ecx,%ecx
	jmp L_179328
.p2align 0x4
L_454368:
L_179318:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2495
L_179340:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_1819
.p2align 0x4
.long 0x60A
L_179367:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_179363
.text
.p2align 0x4
.globl x_1191
.hidden x_1191
x_1191:
L_179376:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179377
L_179440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179441
.p2align 0x4
.long 0x453
L_179441:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_179377:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_179384
L_179378:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_179379:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_454375
L_179380:
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	cmpb $0x1,0x0(%r13)
	jne L_179381
L_179385:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	jne L_454371
.p2align 0x4,,0x7
L_179381:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_454370
L_179382:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_179379
.p2align 0x4
L_454370:
L_179384:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454371:
L_179386:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179387
L_179396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179397
.p2align 0x4
.long 0x720
L_179397:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179387:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x14AE,%r14
	je L_454372
L_179394:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_179395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_454372:
L_179388:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	leaq L_179390(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_179389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_454375:
L_179399:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movb 0x0(%r15),%r13b
	testb %r13b,%r13b
	jz L_179381
L_179400:
	movq 0x10(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x38(%rbp)
	cmpb $0x1,%r13b
	jne L_179401
L_179424:
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	jne L_454383
.p2align 0x4,,0x7
L_179401:
	movq 0x28(%rbp),%r15
	cmpb $0x1,0x0(%r15)
	jne L_179402
L_179416:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%r14),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	movl 0x0(%r10),%r15d
	testl %r15d,%r15d
	jz L_454381
.p2align 0x4,,0x7
L_179402:
	movq 0x28(%rbp),%r13
	movb $0x0,0x0(%r13)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_179381
L_179403:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_454379
L_179414:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
L_179405:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_454377
L_179411:
	movl %r11d,0x0(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_179384
L_179412:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_179379
.p2align 0x4
L_454377:
L_179406:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179407
L_179409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179410
.p2align 0x4
.long 0x49E
L_179410:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179407:
	movq (globalObjptr+0x518)(%rip),%r15
L_179408:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x20(%r13),%r11
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq (globalObjptr+0xF5A0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454379:
L_179404:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
	jmp L_179405
.p2align 0x4
L_454381:
L_179417:
	movl $0x1,0x0(%r10)
	movl %r11d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x40(%rbp)
	leaq L_179419(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_179418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_454383:
L_179425:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179426
L_179435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179436
.p2align 0x4
.long 0x5EC
L_179436:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_179426:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x14AE,%r14
	je L_454384
L_179433:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	leaq L_179419(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_179434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_454384:
L_179427:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	leaq L_179429(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_179428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
.long 0x490
L_179395:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_179381
.p2align 0x4
.long 0x51A
L_179389:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_179381
.p2align 0x4
.long 0x72F
L_179390:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179391
L_179392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179393
.p2align 0x4
.long 0x5E6
L_179393:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179391:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF598)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_179418:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	jmp L_179402
.p2align 0x4
.long 0x72F
L_179419:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179420
L_179421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179422
.p2align 0x4
.long 0x5E6
L_179422:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179420:
	movq 0x18(%rbp),%r15
	jmp L_179408
.p2align 0x4
.long 0x511
L_179434:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_179401
.p2align 0x4
.long 0x511
L_179428:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_179401
.p2align 0x4
.long 0x72F
L_179429:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179430
L_179431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179432
.p2align 0x4
.long 0x5E6
L_179432:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179430:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x20(%r13),%r15
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq (globalObjptr+0xF598)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_179408
.text
.p2align 0x4
.globl x_1190
.hidden x_1190
x_1190:
L_179442:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179443
L_179466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179467
.p2align 0x4
.long 0x453
L_179467:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_179443:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_179450
L_179444:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_179445:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x18(%r14),%r11
	movq 0x0(%r15),%r10
	andq $0x1,%r10
	jz L_179447
L_179451:
	movl 0x0(%r13),%r10d
	movl %r10d,0x0(%r11)
	movq $0x0,0x0(%r15)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x24B2,%r15
	je L_454395
L_179455:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_454394
L_179447:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_454393
L_179448:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_179445
.p2align 0x4
L_454393:
L_179450:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454394:
L_179456:
	movl $0x1,0x0(%r15)
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	leaq L_179460(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_179457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_454395:
L_179452:
	movq 0x0(%r14),%r13
	movl $0x1,0x0(%r13)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_179450
L_179453:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_179445
.p2align 0x4
.long 0x51A
L_179457:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_179450
L_179458:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_179445
.p2align 0x4
.long 0x72F
L_179460:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179461
L_179462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179463
.p2align 0x4
.long 0x5E6
L_179463:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179461:
	movq 0x20(%rbp),%r15
	movq 0x20(%r15),%r14
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xE5E0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl diagnoseNonexhaustiveMatch_0
.hidden diagnoseNonexhaustiveMatch_0
diagnoseNonexhaustiveMatch_0:
L_179468:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179469
L_179671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179672
.p2align 0x4
.long 0x249A
L_179672:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_179469:
	cmpb $0x2,0x40(%rbp)
	je L_454432
L_179470:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_179472
L_179473:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1821:
	cmpl %ecx,%ebx
	je L_454430
L_179474:
	movslq %ebx,%r14
	movq %r14,0x40(%rbp)
	cmpq %r15,%r14
	jnb L_179476
L_179477:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r11),%r9d
	testl %r9d,%r9d
	jz L_179479
L_179482:
	cmpl $0x0,0x0(%r10)
	jg L_454403
L_179479:
	incl %ebx
	jo L_454402
L_179481:
	jmp loop_1821
.p2align 0x4
L_454402:
L_179480:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454403:
L_179484:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179485
L_179667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179668
.p2align 0x4
.long 0x2499
L_179668:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_179485:
	movq 0x30(%rbp),%rdx
	movq 0x0(%rdx),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_454426
L_179486:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r14,%rdx
	jne L_179472
L_179488:
	testq %rdx,%rdx
	jz L_454424
L_179489:
	cmpq $0x7FFFFFFF,%rdx
	ja L_179639
L_179490:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15B3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179491
.p2align 0x4
.long 0x2496
L_179491:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_179492:
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_1822:
	movq 0x50(%rbp),%r14
	cmpq 0x30(%rbp),%r14
	jnl L_454411
L_179646:
	movl %r14d,%ecx
	movslq %ecx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	cmpq $0x1,%r11
	je L_454410
L_179647:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179648:
	incl %ecx
	jo L_179480
L_179649:
	cmpq $0x1,%r15
	je L_454404
L_179650:
	movq 0x8(%r15),%r15
	jmp L_179648
.p2align 0x4
L_454404:
L_179651:
L_179652:
	movslq %ecx,%r14
	movq %r14,0x60(%rbp)
	testq %r14,%r14
	jnz L_454407
L_179662:
	movq (globalObjptr+0x4C00)(%rip),%r15
.p2align 0x4,,0x7
L_179656:
	movq 0x58(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1824:
	cmpq 0x60(%rbp),%r14
	jnl L_454406
L_179658:
	cmpq $0x1,%r13
	je L_454405
L_179659:
	movq %r14,%r11
	movq %r14,%r10
	movq 0x0(%r13),%r9
	movq 0x8(%r13),%r13
	movq 0x8(%r9),%r8
	salq $0x4,%r11
	movl 0x0(%r9),%esp
	movl %esp,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	salq $0x4,%r10
	movq %r8,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_1824
.p2align 0x4
L_454405:
L_179660:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454406:
L_179657:
	movq $0xC17,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_1822
.p2align 0x4
L_454407:
L_179653:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_454408
L_179654:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15B5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179655
.p2align 0x4
.long 0x2498
L_179655:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,%r15
	jmp L_179656
.p2align 0x4
L_454408:
L_179639:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454410:
L_179663:
	xorl %ecx,%ecx
	jmp L_179652
.p2align 0x4
L_454411:
L_179493:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179494
L_179644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_179645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179645
.p2align 0x4
.long 0xE69
L_179645:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_179494:
	movq 0x48(%rbp),%r15
	movq $0x1793,0xFFFFFFFFFFFFFFF8(%r15)
L_179495:
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_454421
L_179497:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movb 0x29(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_454419
L_179498:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r15
	jne L_454418
L_179500:
	testq %rdx,%rdx
	jz L_454417
L_179501:
	cmpq $0x7FFFFFFF,%rdx
	ja L_179639
L_179502:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179503
.p2align 0x4
.long 0xE7C
L_179503:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_179504:
	movl $0x0,0x2C(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1823:
	cmpq 0x38(%rbp),%r15
	jnl L_454414
L_179633:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq %r14,%r13
	salq $0x4,%r13
	salq $0x4,%r14
	movq 0x30(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	movl 0x0(%r11,%r13,1),%r9d
	testl %r9d,%r9d
	jnz L_454413
L_179634:
	movl 0x2C(%rbp),%ecx
	incl %ecx
	jo L_179480
	movq %r10,%r14
L_179636:
	movl %ecx,0x2C(%rbp)
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1823
.p2align 0x4
L_454413:
L_179637:
	movl 0x2C(%rbp),%ecx
	movq $0x1,%r14
	jmp L_179636
.p2align 0x4
L_454414:
L_179505:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179506
L_179631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179632
.p2align 0x4
.long 0x1574
L_179632:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_179506:
	movq 0x40(%rbp),%r15
	movq $0xC1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC1D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x38FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_179507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_454417:
L_179640:
	movq (globalObjptr+0x4C10)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_179504
.p2align 0x4
L_454418:
L_179472:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454419:
L_179641:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_179472
L_179643:
	movl %r14d,0x40(%rbp)
	movq $0x390D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_179507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_454421:
L_179476:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454424:
L_179665:
	movq (globalObjptr+0x4BF8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_179492
.p2align 0x4
L_454426:
L_179666:
	movq (globalObjptr+0x4C08)(%rip),%r14
	movq $0x1793,0xFFFFFFFFFFFFFFF8(%r14)
	xchgq %r14,%r15
	jmp L_179495
.p2align 0x4
L_454430:
L_179669:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454432:
L_179670:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE7A
L_179507:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179508
L_179629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179630
.p2align 0x4
.long 0xE7B
L_179630:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179508:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_179472
L_179510:
	testl %r13d,%r13d
	jz L_454435
L_179511:
	cmpb $0x2,0x28(%rbp)
	je L_454434
L_179512:
	movq $0x2B49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
L_179513:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4C18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454434:
L_179627:
	movq $0x2B4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	jmp L_179513
.p2align 0x4
L_454435:
L_179628:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x578
L_179514:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x578
L_179515:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xF5A8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2497
L_179516:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179517
L_179625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179626
.p2align 0x4
.long 0xE7B
L_179626:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179517:
	movq $0x3BEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_179518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4DE
L_179518:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_179519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0x4DE
L_179519:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179520
L_179623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179624
.p2align 0x4
.long 0x5F7
L_179624:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179520:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179521:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_179480
L_179522:
	cmpq $0x1,%r14
	je L_454439
L_179523:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179521
.p2align 0x4
L_454439:
L_179524:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179525
L_179621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179622
.p2align 0x4
.long 0x8E6
L_179622:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179525:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454448
L_179526:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_179527:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_454447
	cmpq $0x2,%r15
	je L_454446
	cmpq $0x3,%r15
	je L_454445
	cmpq $0x5,%r15
	je L_454444
	cmpq $0x6,%r15
	je L_454443
L_179528:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2546,%r14
	je L_454442
	cmpq $0x2547,%r14
	je L_454441
	cmpq $0x2548,%r14
	je L_454440
L_179529:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454440:
L_179599:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454441:
L_179580:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454442:
L_179575:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_454443:
L_179619:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_179550:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_179551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_454444:
L_179618:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_179550
.p2align 0x4
L_454445:
L_179617:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_179550
.p2align 0x4
L_454446:
L_179616:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_179550
.p2align 0x4
L_454447:
L_179615:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_179550
.p2align 0x4
L_454448:
L_179620:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179527
.p2align 0x4
.long 0x912
L_179530:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_179531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0xF43
L_179600:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl $0x1,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0xF43
L_179581:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x65D
L_179576:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179577
L_179578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179579
.p2align 0x4
.long 0x811
L_179579:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179577:
	movq 0x8(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_179550
.p2align 0x4
.long 0x4DD
L_179551:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179552
L_179563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179564
.p2align 0x4
.long 0x65A
L_179564:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179552:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454456
L_179553:
	decl %ecx
	jo L_179480
L_179554:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_179555:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x15A4,%r13
	je L_454454
L_179557:
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r11d
	incl %r11d
	jo L_179480
L_179558:
	movl %r11d,0x0(%r15)
	movq %r14,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_179559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454454:
L_179556:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
	movq (globalObjptr+0xDD30)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp msg_0
.p2align 0x4
L_454456:
L_179562:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179555
.p2align 0x4
.long 0xD44
L_179531:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4DE
L_179601:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4DE
L_179582:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179583
L_179597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179598
.p2align 0x4
.long 0x5F7
L_179598:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179583:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x1
L_179559:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_454459
L_179560:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454459:
L_179561:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2494
L_179532:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4DE
L_179602:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179603
L_179613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179614
.p2align 0x4
.long 0x4DF
L_179614:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179603:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179604:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_179480
L_179605:
	cmpq $0x1,%r14
	je L_454460
L_179606:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179604
.p2align 0x4
L_454460:
L_179607:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179608
L_179611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179612
.p2align 0x4
.long 0x1CFD
L_179612:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179608:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454461
L_179609:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_179550
.p2align 0x4
L_454461:
L_179610:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179550
.p2align 0x4
.long 0x4DE
L_179584:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179585
L_179595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179596
.p2align 0x4
.long 0x4DF
L_179596:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179585:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179586:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_179480
L_179587:
	cmpq $0x1,%r14
	je L_454465
L_179588:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179586
.p2align 0x4
L_454465:
L_179589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179590
L_179593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179594
.p2align 0x4
.long 0x1CFD
L_179594:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179590:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454466
L_179591:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_179550
.p2align 0x4
L_454466:
L_179592:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179550
.p2align 0x4
.long 0x656
L_179533:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179534
L_179573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179574
.p2align 0x4
.long 0x658
L_179574:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179534:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179535:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_179480
L_179536:
	cmpq $0x1,%r14
	je L_454470
L_179537:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179535
.p2align 0x4
L_454470:
L_179538:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179539
L_179571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179572
.p2align 0x4
.long 0x1574
L_179572:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_179539:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454471
L_179540:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_179541:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
L_454471:
L_179570:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179541
.p2align 0x4
.long 0x4DE
L_179542:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179543
L_179568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179569
.p2align 0x4
.long 0x4DF
L_179569:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179543:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179544:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_179480
L_179545:
	cmpq $0x1,%r14
	je L_454475
L_179546:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179544
.p2align 0x4
L_454475:
L_179547:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179548
L_179566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179567
.p2align 0x4
.long 0x1CFD
L_179567:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179548:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454476
L_179549:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_179550
.p2align 0x4
L_454476:
L_179565:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179550
.text
.p2align 0x4
.globl x_1188
.hidden x_1188
x_1188:
L_179673:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179674
L_179757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179758
.p2align 0x4
.long 0xBF0
L_179758:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179674:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_454483
L_179677:
	cmpl $0x0,%r13d
	jl L_454482
L_179678:
	movl $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_1825:
	movl 0x30(%rbp),%r15d
	cmpl 0xC(%rbp),%r15d
	jnl L_454481
L_179680:
	movslq %r15d,%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpl %r15d,0x8(%rbp)
	jne L_454480
.p2align 0x4,,0x7
L_179729:
	incl 0x30(%rbp)
	jmp loop_1825
.p2align 0x4
L_454480:
L_179681:
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_454481:
L_179679:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454482:
L_179756:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454483:
L_179676:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBE1
L_179682:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_454491
L_179684:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_179685:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_179686
L_179747:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_179686
L_179748:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_179686
L_179750:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_179676
L_179752:
	testl %r11d,%r11d
	jz L_179729
L_179686:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq %r14,0x38(%rbp)
	jb L_454485
L_179687:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454485:
L_179688:
	movq 0x10(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xEC20)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_179689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454491:
L_179683:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBE2
L_179689:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE2B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_179690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBE3
L_179690:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_179691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBE4
L_179691:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_179692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0xBE5
L_179692:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_179693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBE6
L_179693:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179694
L_179745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179746
.p2align 0x4
.long 0xBEF
L_179746:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_179694:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179695:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_179696
L_179697:
	cmpq $0x1,%r14
	je L_454492
L_179698:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179695
.p2align 0x4
L_454492:
L_179699:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179700
L_179743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_179744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179744
.p2align 0x4
.long 0xBEE
L_179744:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_179700:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454497
L_179701:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_179702:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179703:
	addl 0x0(%r14),%ecx
	movl %ecx,0x34(%rbp)
	jo L_454496
L_179704:
	cmpq $0x1,%r15
	je L_454493
L_179705:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179703
.p2align 0x4
L_454493:
L_179706:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179707
L_179740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179741
.p2align 0x4
.long 0xBED
L_179741:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179707:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454494
L_179708:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_179709:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_179710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454494:
L_179739:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179709
.p2align 0x4
L_454496:
L_179696:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454497:
L_179742:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179702
.p2align 0x4
.long 0xBE3
L_179710:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl $0x1,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_179711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0xBE7
L_179711:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_179712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0xBE7
L_179712:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179713
L_179737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_179738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179738
.p2align 0x4
.long 0xBEC
L_179738:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_179713:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179714:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_179696
L_179715:
	cmpq $0x1,%r14
	je L_454501
L_179716:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179714
.p2align 0x4
L_454501:
L_179717:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179718
L_179735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179736
.p2align 0x4
.long 0xBEB
L_179736:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179718:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454502
L_179719:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_179720:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_179721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_454502:
L_179734:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179720
.p2align 0x4
.long 0xBE8
L_179721:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179722
L_179732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179733
.p2align 0x4
.long 0xBEA
L_179733:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179722:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454508
L_179723:
	decl %ecx
	jo L_179696
L_179724:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
L_179725:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_179696
L_179726:
	movl %r13d,0x0(%r15)
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_179727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454508:
L_179731:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179725
.p2align 0x4
.long 0xBE9
L_179727:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_179729
L_179730:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1187
.hidden x_1187
x_1187:
L_179759:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179760
L_179807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_179808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179808
.p2align 0x4
.long 0x4AF
L_179808:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_179760:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_179761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4A6
L_179761:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_454517
L_179763:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_179764:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_179765
L_179799:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_179765
L_179800:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_179765
L_179802:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_454513
L_179804:
	testl %r11d,%r11d
	jnz L_454512
L_179806:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454512:
L_179765:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xDD18)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_179766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454513:
L_179803:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454517:
L_179762:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_179766:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDD20)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_179767:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_179768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A9
L_179768:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_179769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x4AA
L_179769:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AB
L_179770:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179771
L_179797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_179798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179798
.p2align 0x4
.long 0x4AE
L_179798:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_179771:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179772:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_179773
L_179774:
	cmpq $0x1,%r14
	je L_454518
L_179775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179772
.p2align 0x4
L_454518:
L_179776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179777
L_179795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179796
.p2align 0x4
.long 0x4AD
L_179796:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179777:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454524
L_179778:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_179779:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179780:
	addl 0x0(%r14),%ecx
	movl %ecx,0x38(%rbp)
	jo L_179773
L_179781:
	cmpq $0x1,%r15
	je L_454519
L_179782:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179780
.p2align 0x4
L_454519:
L_179783:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179784
L_179792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179793
.p2align 0x4
.long 0x4AC
L_179793:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179784:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454521
L_179785:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_179786:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_454520
L_179787:
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_179788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454520:
L_179773:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454521:
L_179791:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179786
.p2align 0x4
L_454524:
L_179794:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179779
.p2align 0x4
.long 0x1
L_179788:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_454528
L_179789:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454528:
L_179790:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl makeBool_0
.hidden makeBool_0
makeBool_0:
L_179809:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179810
L_179834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179835
.p2align 0x4
.long 0x63D
L_179835:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179810:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1518)(%rip),%r15
	movq $0x1,%r14
.p2align 0x4,,0x7
L_179811:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_179812:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454533
.p2align 0x4,,0x7
L_179813:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_454530
L_179814:
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_454529
L_179815:
	jmp L_179811
.p2align 0x4
L_454529:
L_179816:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_179812
.p2align 0x4
L_454530:
L_179817:
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_179818:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454532
.p2align 0x4,,0x7
L_179819:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_454531
L_179820:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_179818
.p2align 0x4
L_454531:
L_179821:
	movq $0x1B79,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x12F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1BA9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq $0xE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x0,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq (globalObjptr+0x1520)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xBD28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_179822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454532:
L_179830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179831
.p2align 0x4
.long 0x249D
L_179831:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_179819
.p2align 0x4
L_454533:
L_179832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179833
.p2align 0x4
.long 0x249D
L_179833:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_179813
.p2align 0x4
.long 0x249B
L_179822:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179823
L_179828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179829
.p2align 0x4
.long 0x19C7
L_179829:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179823:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4863,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x12F3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r10)
	movq $0x1BA3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4A13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xBD28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_179824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x249C
L_179824:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179825
L_179826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179827
.p2align 0x4
.long 0x249D
L_179827:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_179825:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4843,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x12F3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r10)
	movq $0x1BA3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x49EF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r14)
	movq $0x1FD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq $0x5D1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq %r14,0x0(%r11)
	movq 0x68(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x60(%rbp),%r9
	movq %r9,0x10(%r11)
	movq 0x58(%rbp),%r8
	movq %r8,0x18(%r11)
	movq %r11,0x8(%rbp)
	movq $0x201,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq 0x50(%rbp),%rsp
	movq %rsp,0x10(%r11)
	movq $0x205,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x10(%rsp)
	movq %r14,0x28(%rsp)
	addq $0x40,%r12
	movq %r13,0x0(%rsp)
	movq %r8,0x8(%rsp)
	movq %r9,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rsp)
	movq $0x771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r10,0x10(%r15)
	movq $0x76D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r9,0x8(%r14)
	movq $0x16CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %rsp,0x10(%r13)
	movq %r11,0x18(%r13)
	movq %r13,0x0(%rbp)
	addq $0x28,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
