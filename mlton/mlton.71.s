/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:16 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1927
.hidden x_1927
x_1927:
L_209759:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_209904
L_209760:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465678
L_209761:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_209889
L_209762:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1494,%r14
	je L_465674
L_209890:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x58(%rbp)
	movq $0x927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC93,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x347D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	leaq L_209899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_209891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_465674:
L_209763:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
L_209764:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_465676
L_209765:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1498,%r13
	je L_465675
L_209767:
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	leaq L_209828(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0x40(%rbp)
	movq %r13,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_209768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dominators_0
.p2align 0x4
L_465675:
L_209766:
	movq 0x0(%r14),%r13
	movq %r13,0x0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465676:
L_209889:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465678:
L_209904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_209905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209905
.p2align 0x4
.long 0x453
L_209905:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_209761
.p2align 0x4
.long 0x4AB
L_209891:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_209892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x72F
L_209899:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209900
L_209901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_209902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209902
.p2align 0x4
.long 0x51D
L_209902:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_209900:
	movq $0x292B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_209768:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209769
L_209886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_209887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209887
.p2align 0x4
.long 0x5E8
L_209887:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_209769:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_465681
L_209770:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_209771:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_209772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_20
.p2align 0x4
L_465681:
L_209854:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_209855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_2
.p2align 0x4
.long 0x72F
L_209828:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209829
L_209830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_209831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209831
.p2align 0x4
.long 0x5E8
L_209831:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_209829:
	movq 0x38(%rbp),%r15
L_209776:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x113E
L_209892:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209893
L_209897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_209898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209898
.p2align 0x4
.long 0x707
L_209898:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_209893:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_465684
L_209894:
L_209895:
	movq $0x2933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0xF7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2929,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,0x0(%r15)
	movq %r11,0x18(%rbp)
	jmp L_209764
.p2align 0x4
L_465684:
L_209896:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_209895
.p2align 0x4
.long 0x8BD
L_209772:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209773
L_209883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_209884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209884
.p2align 0x4
.long 0x8C1
L_209884:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_209773:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_465716
	cmpq $0x2,%r13
	je L_465714
L_209774:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_209775
L_209777:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_465712
L_209778:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_209780:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_209781
L_209866:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD38,%r13
	jne L_209781
L_209867:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x40(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_465706
L_209781:
	movl 0x58(%rbp),%r13d
	incl %r13d
	movl %r13d,0x5C(%rbp)
	jo L_209782
L_209786:
	cmpq $0x1,%r15
	je L_465686
L_209787:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x58(%rbp)
	jmp L_209780
.p2align 0x4
L_465686:
L_209788:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209789
L_209864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_209865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209865
.p2align 0x4
.long 0x293E
L_209865:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_209789:
	movl 0x5C(%rbp),%ecx
L_209790:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_209791
L_209792:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_209794
L_209863:
	movl %ecx,0x0(%r15)
L_209794:
	movq $0x927,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_465701
L_209795:
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_465700
L_209796:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x68(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_209798:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_209799
L_209843:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB2,%r13
	jne L_209799
L_209844:
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_465693
L_209799:
	movl 0x68(%rbp),%r13d
	incl %r13d
	movl %r13d,0x6C(%rbp)
	jo L_465691
L_209800:
	cmpq $0x1,%r15
	je L_465687
L_209801:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x68(%rbp)
	jmp L_209798
.p2align 0x4
L_465687:
L_209802:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209803
L_209841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_209842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209842
.p2align 0x4
.long 0x293D
L_209842:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_209803:
	movl 0x6C(%rbp),%ecx
L_209804:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_465689
L_209805:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_209807
L_209840:
	movl %ecx,0x0(%r15)
L_209807:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_209808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_465689:
L_209791:
	movq (globalObjptr+0x1080)(%rip),%r15
	jmp L_209776
.p2align 0x4
L_465691:
L_209782:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209783
L_209784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_209785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209785
.p2align 0x4
.long 0x720
L_209785:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_209783:
	movq $0x3,%r15
	jmp L_209776
.p2align 0x4
L_465693:
L_209846:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209847
L_209860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_209861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209861
.p2align 0x4
.long 0xC2B
L_209861:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_209847:
	movl 0x68(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_209791
L_209848:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_465695
L_209849:
	movq 0x70(%rbp),%r15
L_209850:
	movq $0x1383,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1A71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_209851:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_209854
L_209852:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_209771
.p2align 0x4
L_465695:
L_209859:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x68(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x70(%rbp),%r15
	jmp L_209850
.p2align 0x4
L_465700:
L_209862:
	xorl %ecx,%ecx
	jmp L_209804
.p2align 0x4
L_465701:
L_209775:
	movq (globalObjptr+0x1088)(%rip),%r15
	jmp L_209776
.p2align 0x4
L_465706:
L_209869:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209870
L_209874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_209875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209875
.p2align 0x4
.long 0x293F
L_209875:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_209870:
	movl 0x58(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_209791
L_209871:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_465707
L_209872:
	movq 0x68(%rbp),%r15
	jmp L_209851
.p2align 0x4
L_465707:
L_209873:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp L_209851
.p2align 0x4
L_465712:
L_209876:
	xorl %ecx,%ecx
	jmp L_209790
.p2align 0x4
L_465714:
L_209880:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_209854
L_209881:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_209771
.p2align 0x4
L_465716:
L_209877:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_209854
L_209878:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_209771
.p2align 0x4
.long 0x511
L_209855:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209856
L_209857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_209858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209858
.p2align 0x4
.long 0xBAA
L_209858:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_209856:
	movq $0x2931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_209808:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_209809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F1
L_209809:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_209810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AB
L_209810:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_209811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x913
L_209811:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209812
L_209838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_209839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209839
.p2align 0x4
.long 0x9AA
L_209839:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_209812:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_209813:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_209782
L_209814:
	cmpq $0x1,%r14
	je L_465720
L_209815:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_209813
.p2align 0x4
L_465720:
L_209816:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209817
L_209836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_209837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209837
.p2align 0x4
.long 0x293C
L_209837:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_209817:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_465721
L_209818:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
toString_318:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x1,0x40(%rbp)
	addq $0x40,%rbp
	leaq (rev_316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_465721:
L_209835:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_318
.p2align 0x4
.long 0x511
rev_316:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_465727
L_209819:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_209820:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465726
.p2align 0x4,,0x7
L_209821:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_465725
L_209822:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_209820
.p2align 0x4
L_465725:
L_209824:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (bug_518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465726:
L_209832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_209833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209833
.p2align 0x4
.long 0x4AE
L_209833:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_209821
.p2align 0x4
L_465727:
L_209834:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_209824
.p2align 0x4
.long 0x511
bug_518:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209825
L_209826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_209827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209827
.p2align 0x4
.long 0x5E8
L_209827:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_209825:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_209776
.text
.p2align 0x4
.globl treeAt_2
.hidden treeAt_2
treeAt_2:
L_209906:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_210020
L_209907:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465763
L_209908:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_209909
L_209910:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_465761
L_209911:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_209913:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_209914
L_210009:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD38,%r13
	jne L_209914
L_210010:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x10(%rbp)
	je L_465755
L_209914:
	movl 0x20(%rbp),%r13d
	incl %r13d
	movl %r13d,0x24(%rbp)
	jo L_209915
L_209916:
	cmpq $0x1,%r15
	je L_465729
L_209917:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x20(%rbp)
	jmp L_209913
.p2align 0x4
L_465729:
L_209918:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209919
L_210007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_210008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210008
.p2align 0x4
.long 0x4E2
L_210008:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_209919:
	movl 0x24(%rbp),%ecx
L_209920:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_209921
L_209922:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_209924
L_210006:
	movl %ecx,0x0(%r15)
L_209924:
	movq $0x927,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_465750
L_209925:
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_465749
L_209926:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x28(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_209928:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_209929
L_209966:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB2,%r13
	jne L_209929
L_209967:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x8(%rbp)
	je L_465734
L_209929:
	movl 0x28(%rbp),%r13d
	incl %r13d
	jo L_465733
L_209930:
	cmpq $0x1,%r15
	je L_465730
L_209931:
	movl %r13d,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_209928
.p2align 0x4
L_465730:
	movl %r13d,%ecx
L_209933:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_465732
L_209934:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_209936
L_209965:
	movl %ecx,0x0(%r15)
L_209936:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_209937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_465732:
L_209921:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465733:
L_209915:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465734:
L_209969:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209970
L_210003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_210004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210004
.p2align 0x4
.long 0xA2B
L_210004:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_209970:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_209921
L_209971:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_465744
L_209972:
	movq 0x30(%rbp),%r15
L_209973:
	movq $0x1383,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1A71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_209974:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r13
	je L_465743
L_209975:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_209976:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_209915
L_209977:
	cmpq $0x1,%r15
	je L_465735
L_209978:
	movq 0x8(%r15),%r15
	jmp L_209976
.p2align 0x4
L_465735:
L_209979:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209980
L_209999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_210000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210000
.p2align 0x4
.long 0x765
L_210000:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_209980:
	movl 0x28(%rbp),%ecx
L_209981:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	testq %r15,%r15
	jz L_465740
L_209982:
	cmpq $0x7FFFFFFF,%r15
	ja L_465739
L_209983:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209984
L_209995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_209996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209996
.p2align 0x4
.long 0x765
L_209996:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_209984:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1551,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_209985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209985
.p2align 0x4
.long 0x765
L_209985:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_209986:
	movq 0x20(%rbp),%r15
	movq $0x0,0x20(%rbp)
loop_2202:
	movq 0x28(%rbp),%r14
	cmpq %r14,0x20(%rbp)
	jnl L_465737
L_209988:
	cmpq $0x1,%r15
	je L_465736
L_209989:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_209990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_2
.p2align 0x4
L_465736:
L_209994:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465737:
L_209987:
	movq 0x30(%rbp),%r15
	movq $0x1D,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x5345,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465739:
L_209997:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465740:
L_209998:
	movq (globalObjptr+0x21D8)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_209986
.p2align 0x4
L_465743:
L_210001:
	xorl %ecx,%ecx
	jmp L_209981
.p2align 0x4
L_465744:
L_210002:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_209973
.p2align 0x4
L_465749:
L_210005:
	xorl %ecx,%ecx
	jmp L_209933
.p2align 0x4
L_465750:
L_209909:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465755:
L_210012:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210013
L_210017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_210018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210018
.p2align 0x4
.long 0x464
L_210018:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_210013:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_209921
L_210014:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_465756
L_210015:
	movq 0x28(%rbp),%r15
	jmp L_209974
.p2align 0x4
L_465756:
L_210016:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_209974
.p2align 0x4
L_465761:
L_210019:
	xorl %ecx,%ecx
	jmp L_209920
.p2align 0x4
L_465763:
L_210020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_210021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210021
.p2align 0x4
.long 0x45C
L_210021:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_209908
.p2align 0x4
.long 0x1
L_209937:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_209938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB2C
L_209990:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209991
L_209992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_209993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209993
.p2align 0x4
.long 0x2941
L_209993:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_209991:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x20(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	movq 0x38(%rbp),%r15
	jmp loop_2202
.p2align 0x4
.long 0x4B0
L_209938:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_209939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_209939:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_209940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_209940:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209941
L_209963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_209964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209964
.p2align 0x4
.long 0x4AF
L_209964:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_209941:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_209942:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_209915
L_209943:
	cmpq $0x1,%r14
	je L_465766
L_209944:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_209942
.p2align 0x4
L_465766:
L_209945:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209946
L_209961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_209962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209962
.p2align 0x4
.long 0x4E7
L_209962:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_209946:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_465767
L_209947:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_319:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_465767:
L_209960:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_319
.p2align 0x4
.long 0x1
rev_317:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_465773
L_209948:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_209949:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465772
.p2align 0x4,,0x7
L_209950:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_465771
L_209951:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_209949
.p2align 0x4
L_465771:
L_209953:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465772:
L_209957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_209958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209958
.p2align 0x4
.long 0x45C
L_209958:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_209950
.p2align 0x4
L_465773:
L_209959:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_209953
.p2align 0x4
.long 0x1
bug_519:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_209954
L_209955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_209956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_209956
.p2align 0x4
.long 0x452
L_209956:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_209954:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3913
.hidden loop_3913
loop_3913:
L_210022:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_210262
L_210023:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465775
L_210024:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq $0x33D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq %r13,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_210025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_465775:
L_210262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_210263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210263
.p2align 0x4
.long 0x2958
L_210263:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_210024
.p2align 0x4
.long 0x2942
L_210025:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210026
L_210260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_210261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210261
.p2align 0x4
.long 0x2957
L_210261:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_210026:
	movq $0x3341,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_210027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x2942
L_210027:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210028
L_210258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_210259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210259
.p2align 0x4
.long 0x2957
L_210259:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_210028:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je x_1928
L_210029:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_465797
	cmpq $0xF32,%r14
	je L_465796
	cmpq $0xF33,%r14
	je L_465795
	cmpq $0xF34,%r14
	je L_465794
	cmpq $0xF35,%r14
	je L_465779
	cmpq $0xF36,%r14
	je L_465778
L_210030:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x352B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (x_700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_465778:
L_210255:
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x352B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_210256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_465779:
L_210208:
	movq 0x8(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x80(%rbp)
	movq 0x38(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x88(%rbp)
	movq 0x0(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x90(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x98(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_465793
L_210209:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_465792
L_210210:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x24(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_210212:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_465791
L_210244:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA0,%r11
	jne L_465790
L_210245:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_465786
L_210213:
	movl 0x24(%rbp),%r11d
	incl %r11d
	movl %r11d,0x60(%rbp)
	jo L_465785
L_210214:
	cmpq $0x1,%r15
	je L_465780
L_210215:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x24(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_210212
.p2align 0x4
L_465780:
L_210216:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210217
L_210242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_210243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210243
.p2align 0x4
.long 0x2954
L_210243:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_210217:
	movl 0x60(%rbp),%ecx
L_210218:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_465783
L_210219:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_210221
L_210241:
	movl %ecx,0x0(%r15)
L_210221:
	movq $0x1413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1941,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_702:
	cmpb $0x1,0x0(%r15)
	je L_465781
L_210222:
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_210223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_465781:
L_210240:
	movq $0x352B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (x_700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_465783:
L_210095:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465785:
L_210089:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465786:
L_210247:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210248
L_210252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_210253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210253
.p2align 0x4
.long 0x2955
L_210253:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_210248:
	movl 0x24(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_210095
L_210249:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_465787
L_210250:
	movq 0x60(%rbp),%r15
	jmp x_702
.p2align 0x4
L_465787:
L_210251:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x24(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x60(%rbp),%r15
	jmp x_702
.p2align 0x4
L_465790:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_210213
.p2align 0x4
L_465791:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_210213
.p2align 0x4
L_465792:
L_210254:
	xorl %ecx,%ecx
	jmp L_210218
.p2align 0x4
L_465793:
L_210083:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465794:
L_210052:
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_210053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1352
.p2align 0x4
L_465795:
L_210051:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x352B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (x_700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_465796:
L_210050:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x352B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (x_700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_465797:
L_210049:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x352B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (x_700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
x_1928:
x_701:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_465800
L_210034:
	cmpl $0x0,%r13d
	jl L_465799
L_210035:
	movl $0x0,0x60(%rbp)
loop_2203:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x60(%rbp)
	jl L_465798
L_210036:
	movq $0x3337,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_210037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_465798:
L_210041:
	movslq 0x60(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0x80,%rbp
	leaq (L_210042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3913
.p2align 0x4
L_465799:
L_210046:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465800:
L_210033:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2943
x_700:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_701
L_210047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_210048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210048
.p2align 0x4
.long 0x2946
L_210048:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp x_701
.p2align 0x4
.long 0x2956
L_210256:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (x_700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
.long 0x1
L_210223:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2947
L_210053:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210054
L_210206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_210207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210207
.p2align 0x4
.long 0x2953
L_210207:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_210054:
	movq 0x88(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1208,%r15
	je L_465835
L_210082:
	movq 0x0(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x98(%rbp)
	movq 0x0(%r10),%r14
	movq 0x78(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xA0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_210083
L_210084:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_465833
L_210085:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x24(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_210087:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_465832
L_210195:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD3A,%r11
	jne L_465831
L_210196:
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_465827
L_210088:
	movl 0x24(%rbp),%r11d
	incl %r11d
	movl %r11d,0x88(%rbp)
	jo L_210089
L_210090:
	cmpq $0x1,%r15
	je L_465802
L_210091:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x24(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_210087
.p2align 0x4
L_465802:
L_210092:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210093
L_210193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_210194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210194
.p2align 0x4
.long 0x2951
L_210194:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_210093:
	movl 0x88(%rbp),%ecx
L_210094:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_210095
L_210096:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_210098
L_210192:
	movl %ecx,0x0(%r15)
L_210098:
	movq $0x137F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_210099:
	movq 0x0(%r15),%r14
L_210100:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_465822
L_210119:
	movq 0x8(%r14),%r15
L_210120:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_210121
L_210122:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF26,%r14
	jne L_465820
L_210123:
	movq 0x0(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x88(%rbp)
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x90(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x98(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_210083
L_210124:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_465818
L_210125:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_210127:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_465817
L_210184:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD39,%r11
	jne L_465816
L_210185:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_465813
L_210128:
	incl %ecx
	movl %ecx,0x24(%rbp)
	jo L_210089
L_210129:
	cmpq $0x1,%r15
	je L_465803
L_210130:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_210127
.p2align 0x4
L_465803:
L_210131:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210132
L_210182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_210183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210183
.p2align 0x4
.long 0x2950
L_210183:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_210132:
	movl 0x24(%rbp),%ecx
L_210133:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_210095
L_210134:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_210136
L_210181:
	movl %ecx,0x0(%r15)
L_210136:
	movq $0x1381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_210137:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_465807
L_210159:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x78(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x24(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_465806
L_210160:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xCC1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_210161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210161
.p2align 0x4
.long 0x294D
L_210161:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2205:
	cmpq 0x88(%rbp),%r15
	jnl L_465804
L_210179:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2205
.p2align 0x4
L_465804:
L_210162:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210163
L_210177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_210178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210178
.p2align 0x4
.long 0x294F
L_210178:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_210163:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl 0x24(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x365F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x98(%rbp)
	movb $0x4,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_210164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_465806:
L_210081:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465807:
L_210138:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_465808
L_210157:
	movq %r11,0x90(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_210158+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_465808:
L_210139:
L_210140:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_465813:
L_210187:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_210095
L_210188:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_465814
L_210190:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_210137
.p2align 0x4
L_465814:
L_210189:
	movq %r11,%r15
	jmp L_210137
.p2align 0x4
L_465816:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_210128
.p2align 0x4
L_465817:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_210128
.p2align 0x4
L_465818:
L_210191:
	xorl %ecx,%ecx
	jmp L_210133
.p2align 0x4
L_465820:
L_210121:
	movq (globalObjptr+0x1EC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465822:
L_210101:
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_210102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_465827:
L_210198:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210199
L_210203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_210204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210204
.p2align 0x4
.long 0x2952
L_210204:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_210199:
	movl 0x24(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_210095
L_210200:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_465828
L_210201:
	movq 0x88(%rbp),%r15
	jmp L_210099
.p2align 0x4
L_465828:
L_210202:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x24(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x88(%rbp),%r15
	jmp L_210099
.p2align 0x4
L_465831:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_210088
.p2align 0x4
L_465832:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_210088
.p2align 0x4
L_465833:
L_210205:
	xorl %ecx,%ecx
	jmp L_210094
.p2align 0x4
L_465835:
L_210055:
	movq 0x8(%r11),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_210056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2944
L_210037:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210038
L_210039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_210040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210040
.p2align 0x4
.long 0x2945
L_210040:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_210038:
	movq $0x33DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_1
.p2align 0x4
.long 0x2943
L_210042:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210043
L_210044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_210045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210045
.p2align 0x4
.long 0x2946
L_210045:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_210043:
	incl 0x60(%rbp)
	jmp loop_2203
.p2align 0x4
.long 0x1
toString_322:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2948
L_210164:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	movq %r11,0x88(%rbp)
	jne L_210033
L_210166:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210167
L_210175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_210176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210176
.p2align 0x4
.long 0x294E
L_210176:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_210167:
	movq 0x88(%rbp),%rsi
	shlq $0x1,%rsi
	orq $0x1,%rsi
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x78(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_210168:
	cmpq $0x1,0x80(%rbp)
	je L_465839
L_210169:
	testl %eax,%eax
	jz x_701
L_210070:
	movq (globalObjptr+0x1EC0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465839:
L_210172:
	testl %eax,%eax
	jnz x_701
L_210073:
	movq (globalObjptr+0x1EB8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD53
L_210158:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_210140
.p2align 0x4
.long 0x1
toString_321:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
L_210102:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2948
L_210056:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_210057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
rev_320:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_465844
L_210224:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_210225:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465843
.p2align 0x4,,0x7
L_210226:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_465842
L_210227:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_210225
.p2align 0x4
L_465842:
L_210229:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_210230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465843:
L_210237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_210238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210238
.p2align 0x4
.long 0x45C
L_210238:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_210226
.p2align 0x4
L_465844:
L_210239:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_210229
.p2align 0x4
.long 0x1
rev_319:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_465847
L_210141:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_210142:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465846
.p2align 0x4,,0x7
L_210143:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_465845
L_210144:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_210142
.p2align 0x4
L_465845:
L_210146:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_210147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465846:
L_210154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_210155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210155
.p2align 0x4
.long 0x45C
L_210155:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_210143
.p2align 0x4
L_465847:
L_210156:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_210146
.p2align 0x4
.long 0x1
toString_320:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2948
L_210057:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x24(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_210081
L_210058:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD05,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_210059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210059
.p2align 0x4
.long 0x2949
L_210059:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2204:
	cmpq 0x88(%rbp),%r15
	jnl L_465848
L_210079:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2204
.p2align 0x4
L_465848:
L_210060:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210061
L_210077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_210078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210078
.p2align 0x4
.long 0x294C
L_210078:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_210061:
	movq $0xD07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl 0x24(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x360F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x28,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%r11)
	movq %r11,0x98(%rbp)
	movb $0x6,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_210062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
.long 0x1
L_210230:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210231
L_210235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_210236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210236
.p2align 0x4
.long 0x452
L_210236:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_210231:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_210147:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210148
L_210152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_210153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210153
.p2align 0x4
.long 0x452
L_210153:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_210148:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
rev_318:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_465855
L_210103:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_210104:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465854
.p2align 0x4,,0x7
L_210105:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_465853
L_210106:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_210104
.p2align 0x4
L_465853:
L_210108:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_210109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465854:
L_210116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_210117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210117
.p2align 0x4
.long 0x45C
L_210117:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_210105
.p2align 0x4
L_465855:
L_210118:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_210108
.p2align 0x4
.long 0x294A
L_210062:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	movq %r11,0x88(%rbp)
	jne L_210033
L_210064:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210065
L_210075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_210076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210076
.p2align 0x4
.long 0x294B
L_210076:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_210065:
	movq 0x88(%rbp),%rdi
	shlq $0x1,%rdi
	orq $0x1,%rdi
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x78(%rbp),%rsi
	xorq %rax,%rax
	call IntInf_equal
L_210066:
	cmpq $0x1,0x80(%rbp)
	je L_465857
L_210067:
	testl %eax,%eax
	jnz L_210070
	jmp x_701
.p2align 0x4
L_465857:
L_210071:
	testl %eax,%eax
	jnz x_701
	jmp L_210073
.p2align 0x4
.long 0x1
bug_522:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210232
L_210233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_210234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210234
.p2align 0x4
.long 0x452
L_210234:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_210232:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_521:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210149
L_210150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_210151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210151
.p2align 0x4
.long 0x452
L_210151:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_210149:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_210109:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210110
L_210114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_210115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210115
.p2align 0x4
.long 0x452
L_210115:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_210110:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_520:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210111
L_210112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_210113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210113
.p2align 0x4
.long 0x452
L_210113:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_210111:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl typeCheck_1
.hidden typeCheck_1
typeCheck_1:
L_210264:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x120(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_210265
L_210503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210504
.p2align 0x4
.long 0x3027
L_210504:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_210265:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x128(%rbp)
	movq %r15,0x138(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_210266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1926
.p2align 0x4
.long 0x3008
L_210266:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210267
L_210501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_210502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210502
.p2align 0x4
.long 0x3026
L_210502:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_210267:
	movq 0x108(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je outputc_6
L_210268:
	movq 0x0(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (outputc_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1926
.p2align 0x4
outputc_6:
outputc_3:
	movq $0x7F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x100(%rbp)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x3249,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0xE8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x138(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_210270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x3009
outputc_2:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb outputc_3
L_210498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_210499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210499
.p2align 0x4
.long 0x3025
L_210499:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	jmp outputc_3
.p2align 0x4
.long 0x300A
L_210270:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x310,%r15
	jnb L_210271
L_210496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x310,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_210497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210497
.p2align 0x4
.long 0x3024
L_210497:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_210271:
	movq $0xA65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xD0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq $0xA67,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xE8(%rbp)
	movq %r15,0x8(%r9)
	addq $0x30,%r12
	movq %r10,0x0(%r9)
	movq 0xB8(%rbp),%r8
	movq %r8,0x10(%r9)
	movq 0xC0(%rbp),%rsp
	movq %rsp,0x18(%r9)
	movq 0xC8(%rbp),%rsi
	movq %rsi,0x20(%r9)
	movq $0xA61,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xF0(%rbp)
	addq $0xB0,%r12
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r9)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r9)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r9)
	movq 0x58(%rbp),%r14
	movq %r14,0x28(%r9)
	movq 0x60(%rbp),%r14
	movq %r14,0x30(%r9)
	movq 0x68(%rbp),%r14
	movq %r14,0x38(%r9)
	movq 0x70(%rbp),%r14
	movq %r14,0x40(%r9)
	movq 0x78(%rbp),%r14
	movq %r14,0x48(%r9)
	movq 0x80(%rbp),%r14
	movq %r14,0x50(%r9)
	movq 0x88(%rbp),%r14
	movq %r14,0x58(%r9)
	movq 0x90(%rbp),%r14
	movq %r14,0x60(%r9)
	movq 0x98(%rbp),%r13
	movq %r13,0x68(%r9)
	movq 0xA0(%rbp),%rdi
	movq %rdi,0x70(%r9)
	movq %rsi,0x78(%r9)
	movq %rsp,0x80(%r9)
	movq %r8,0x88(%r9)
	movq %r11,0x90(%r9)
	movq 0xA8(%rbp),%r11
	movq %r11,0x98(%r9)
	movq 0xB0(%rbp),%r11
	movq %r11,0xA0(%r9)
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r9
	movq %r9,0x110(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x130(%rbp)
	movq 0x10(%r11),%r9
	movq %r9,0x138(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x38(%rbp),%rdi
	movq %rdi,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x89,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x140(%rbp)
	movq %r15,0x0(%rdx)
	movq %r15,0x8(%rdx)
	addq $0x18,%r12
	movq $0x8FD,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x148(%rbp)
	movq %r10,0x0(%rdx)
	movq %r11,0x8(%rdx)
	addq $0x40,%r12
	movq %r8,0x10(%rdx)
	movq %rsp,0x18(%rdx)
	movq %rsi,0x20(%rdx)
	movq %r13,0x28(%rdx)
	movq %r14,0x30(%rdx)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x150(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x158(%rbp)
	addq $0x18,%r12
	movq %rdi,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq %rdi,0x0(%r13)
	movq %r14,0x8(%r13)
	cmpq $0x1,%r9
	je L_465867
L_210272:
	movq 0x8(%r9),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
L_210273:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_465866
L_210301:
	movl %r14d,0x180(%rbp)
	movq $0x3A3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x178(%rbp)
	leaq L_210369(%rip),%r15
	movq %r15,0x118(%rbp)
	movq %rbp,%r15
	addq $0x120,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x178,%rbp
	leaq (L_210302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_465866:
L_210275:
	movq (globalObjptr+0x518)(%rip),%r15
L_210276:
	movq %r15,0x130(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x130,%rbp
	leaq (toString_323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_0
.p2align 0x4
L_465867:
L_210334:
	movq $0xCB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x78,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x108(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x20(%r15)
	movq 0x148(%rbp),%r11
	movq %r11,0x28(%r15)
	movq 0x70(%rbp),%r10
	movq %r10,0x30(%r15)
	movq 0x168(%rbp),%r10
	movq %r10,0x38(%r15)
	movq 0x158(%rbp),%r9
	movq %r9,0x40(%r15)
	movq 0xE8(%rbp),%r9
	movq %r9,0x48(%r15)
	movq 0xF0(%rbp),%r8
	movq %r8,0x50(%r15)
	movq %r11,0x58(%r15)
	movq %r9,0x60(%r15)
	movq %r10,0x68(%r15)
	movq $0xA63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x100(%rbp),%r10
	movq %r10,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r11,0x20(%r15)
	movq 0x8(%rbp),%r14
	movq 0x30(%r14),%rsp
	movq 0x28(%r14),%rsi
	movq 0x20(%r14),%rdi
	movq 0x38(%r14),%rdx
	movq 0x8(%rdx),%rcx
	movq $0x3D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x20(%r14)
	addq $0x70,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r11,0x28(%r14)
	movq %r8,0x30(%r14)
	movq 0xD8(%rbp),%r15
	movq %r15,0x38(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%r14)
	movq %r13,0x48(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x50(%r14)
	movq 0x140(%rbp),%r15
	movq %r15,0x58(%r14)
	movq %r10,0x60(%r14)
	movq $0xCA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %rcx,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %rsp,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq %rdi,0x20(%r15)
	addq $0x30,%r12
	leaq L_210369(%rip),%r15
	movq %r15,0x118(%rbp)
	movq %rbp,%r15
	addq $0x120,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x178(%rbp)
	movl $0x0,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_210335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0x3010
L_210302:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210303
L_210493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_210494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210494
.p2align 0x4
.long 0x3023
L_210494:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_210303:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_465870
L_210304:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_210275
L_210306:
	movl %r13d,0x180(%rbp)
	movq $0x3A43,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_210307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_465870:
L_210490:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_465872
L_210491:
	movq $0x1,0x48(%rbp)
	xchgq %r14,%r15
L_210310:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_210275
L_210312:
	movl %r13d,0x180(%rbp)
	movq $0x3A3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x178(%rbp)
	addq $0x10,%r12
	addq $0x178,%rbp
	leaq (L_210313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_465872:
L_210492:
	movq $0x1,%r13
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
L_210315:
	movq $0x1377,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_465885
L_210317:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_465884
L_210318:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_210320:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_210321
L_210477:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD3E,%r13
	jne L_210321
L_210478:
	movq 0x0(%r14),%r13
	cmpq %r13,0x150(%rbp)
	je L_465879
L_210321:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_465878
L_210323:
	cmpq $0x1,%r15
	je L_465873
L_210324:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_210320
.p2align 0x4
L_465873:
L_210325:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210326
L_210475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_210476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210476
.p2align 0x4
.long 0x3022
L_210476:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_210326:
	movl 0x58(%rbp),%ecx
L_210327:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_465876
L_210329:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_210331
L_210474:
	movl %ecx,0x0(%r15)
L_210331:
	movq $0x1A7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_210334
L_210332:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_210273
.p2align 0x4
L_465876:
L_210328:
	movq (globalObjptr+0x1080)(%rip),%r15
	jmp L_210276
.p2align 0x4
L_465878:
L_210322:
	movq $0x3,%r15
	jmp L_210276
.p2align 0x4
L_465879:
L_210480:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_210328
L_210481:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_465880
L_210483:
	movl %ecx,0x0(%r14)
	movq (globalObjptr+0x530)(%rip),%r15
	jmp L_210276
.p2align 0x4
L_465880:
L_210482:
	movq (globalObjptr+0x530)(%rip),%r15
	jmp L_210276
.p2align 0x4
L_465884:
L_210484:
	xorl %ecx,%ecx
	jmp L_210327
.p2align 0x4
L_465885:
L_210316:
	movq (globalObjptr+0x1088)(%rip),%r15
	jmp L_210276
.p2align 0x4
.long 0x3016
L_210369:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_210276
.p2align 0x4
.long 0x300B
toString_323:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x130(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (rev_321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x3012
L_210335:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0x110(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_210316
L_210336:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_465895
L_210337:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_210339:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_210340
L_210379:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD3E,%r13
	jne L_210340
L_210380:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x150(%rbp)
	je L_465890
L_210340:
	incl %ecx
	jo L_210322
L_210341:
	cmpq $0x1,%r14
	je L_465887
L_210342:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_210339
.p2align 0x4
L_465887:
L_210343:
L_210344:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_210328
L_210345:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_703
L_210378:
	movl %ecx,0x0(%r15)
x_703:
	movq 0x110(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_210347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_465890:
L_210382:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_210328
L_210383:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_465891
L_210472:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_210385:
	movq 0x10(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq (globalObjptr+0xCE00)(%rip),%r15
	movq %r15,0x188(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x178,%rbp
	leaq (L_210386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_0
.p2align 0x4
L_465891:
L_210384:
	movq %r13,%r15
	jmp L_210385
.p2align 0x4
L_465895:
L_210473:
	xorl %ecx,%ecx
	jmp L_210344
.p2align 0x4
.long 0x3011
L_210307:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210308
L_210488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_210489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210489
.p2align 0x4
.long 0x3023
L_210489:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_210308:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_465897
L_210309:
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_210310
.p2align 0x4
L_465897:
L_210487:
	movq $0x1,%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_210315
.p2align 0x4
.long 0x3011
L_210313:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210314
L_210485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_210486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210486
.p2align 0x4
.long 0x3023
L_210486:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_210314:
	movq 0x50(%rbp),%r14
	movq 0x48(%rbp),%r15
	jmp L_210315
.p2align 0x4
.long 0x300B
rev_321:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq $0x1,%r15
	je L_465902
L_210277:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x100(%rbp)
	movq %r14,0x108(%rbp)
	movq $0x1,0x110(%rbp)
.p2align 0x4,,0x7
L_210278:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465901
.p2align 0x4,,0x7
L_210279:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r14
	cmpq $0x1,%r14
	je L_465900
L_210280:
	movq %r15,0x110(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x108(%rbp)
	jmp L_210278
.p2align 0x4
L_465900:
L_210282:
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465901:
L_210298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210299
.p2align 0x4
.long 0x300F
L_210299:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_210279
.p2align 0x4
L_465902:
L_210300:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_210282
.p2align 0x4
.long 0x300B
L_210347:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3019
L_210386:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210387
L_210470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_210471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210471
.p2align 0x4
.long 0x3021
L_210471:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_210387:
	movq $0x3343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x178(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_210388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x300B
L_210283:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210284
L_210296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210297
.p2align 0x4
.long 0x300E
L_210297:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_210284:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10060)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x300B
L_210348:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3019
L_210388:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210389
L_210468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_210469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210469
.p2align 0x4
.long 0x3021
L_210469:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_210389:
	movq 0x138(%rbp),%r14
	cmpq $0x1,%r14
	je L_465905
L_210390:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_210391:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x180(%rbp)
	movq $0x348D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_210392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_465905:
L_210446:
	movq 0x120(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x148(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_210447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x300B
L_210285:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210286
L_210294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210295
.p2align 0x4
.long 0x300E
L_210295:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_210286:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3013
L_210349:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xF010)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x301A
L_210392:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_210316
L_210393:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_465916
L_210394:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_210396:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_210397
L_210435:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD3E,%r13
	jne L_210397
L_210436:
	movq 0x8(%r15),%r13
	movq 0x150(%rbp),%r11
	cmpq %r11,0x0(%r15)
	je L_465911
L_210397:
	incl %ecx
	jo L_210322
L_210398:
	cmpq $0x1,%r14
	je L_465908
L_210399:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_210396
.p2align 0x4
L_465908:
L_210400:
L_210401:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_210328
L_210402:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_704
L_210434:
	movl %ecx,0x0(%r15)
x_704:
	movq 0x60(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_210404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_465911:
L_210438:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_210328
L_210439:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_465912
L_210465:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_210441:
	movq 0x0(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x178,%rbp
	leaq (L_210442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_5
.p2align 0x4
L_465912:
L_210440:
	movq %r13,%r15
	jmp L_210441
.p2align 0x4
L_465916:
L_210466:
	xorl %ecx,%ecx
	jmp L_210401
.p2align 0x4
.long 0x301C
L_210447:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq $0x1,0x148(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_210448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x300B
L_210287:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x130(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_210288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x3014
L_210350:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x300B
L_210404:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x301B
L_210442:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210443
L_210463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_210464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210464
.p2align 0x4
.long 0x3020
L_210464:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_210443:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_210446
L_210444:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_210391
.p2align 0x4
.long 0x301D
L_210448:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x138(%rbp),%r14
	cmpq $0x1,%r14
	je L_465920
L_210449:
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x0(%r14),%r15
L_210450:
	movq 0x8(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x138(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x150(%rbp)
	movq $0x1,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_210451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_465920:
L_210458:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x300B
L_210288:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210289
L_210292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210293
.p2align 0x4
.long 0x300D
L_210293:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_210289:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_210290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x3015
L_210351:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210352
L_210376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_210377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210377
.p2align 0x4
.long 0x3018
L_210377:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_210352:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x130(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x100(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_210353:
	addl 0x0(%r15),%ecx
	movl %ecx,0x100(%rbp)
	jo L_210322
L_210354:
	cmpq $0x1,%r14
	je L_465922
L_210355:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_210353
.p2align 0x4
L_465922:
L_210356:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210357
L_210374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_210375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210375
.p2align 0x4
.long 0x3017
L_210375:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_210357:
	movl 0x100(%rbp),%ecx
	testl %ecx,%ecx
	jz L_465923
L_210358:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
toString_324:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x138(%rbp)
	movq $0x1,0x130(%rbp)
	addq $0x130,%rbp
	leaq (rev_322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_465923:
L_210373:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_324
.p2align 0x4
.long 0x300B
L_210405:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1ECA
L_210451:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq $0x1,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_210452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x300B
L_210290:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_210291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x300B
rev_322:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq $0x1,%r15
	je L_465929
L_210359:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x100(%rbp)
	movq %r14,0x108(%rbp)
	movq $0x1,0x110(%rbp)
.p2align 0x4,,0x7
L_210360:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465928
.p2align 0x4,,0x7
L_210361:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r14
	cmpq $0x1,%r14
	je L_465927
L_210362:
	movq %r15,0x110(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x108(%rbp)
	jmp L_210360
.p2align 0x4
L_465927:
L_210364:
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465928:
L_210370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210371
.p2align 0x4
.long 0x300F
L_210371:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_210361
.p2align 0x4
L_465929:
L_210372:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_210364
.p2align 0x4
.long 0x3013
L_210406:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xF010)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x301E
L_210452:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210453
L_210460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_210461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210461
.p2align 0x4
.long 0x301F
L_210461:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_210453:
	movq 0x130(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_465931
L_210454:
L_210455:
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	cmpq $0x1,%r14
	je L_210458
L_210456:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x128(%rbp)
	jmp L_210450
.p2align 0x4
L_465931:
L_210459:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x300C
L_210291:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq $0x17,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x300B
L_210365:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210366
L_210367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210368
.p2align 0x4
.long 0x300E
L_210368:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_210366:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_210276
.p2align 0x4
.long 0x3014
L_210407:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3015
L_210408:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210409
L_210432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_210433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210433
.p2align 0x4
.long 0x3018
L_210433:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_210409:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x130(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x100(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_210410:
	addl 0x0(%r15),%ecx
	movl %ecx,0x100(%rbp)
	jo L_210322
L_210411:
	cmpq $0x1,%r14
	je L_465934
L_210412:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_210410
.p2align 0x4
L_465934:
L_210413:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210414
L_210430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_210431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210431
.p2align 0x4
.long 0x3017
L_210431:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_210414:
	movl 0x100(%rbp),%ecx
	testl %ecx,%ecx
	jz L_465935
L_210415:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
toString_325:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x138(%rbp)
	movq $0x1,0x130(%rbp)
	addq $0x130,%rbp
	leaq (rev_323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_465935:
L_210429:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_325
.p2align 0x4
.long 0x300B
rev_323:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq $0x1,%r15
	je L_465941
L_210416:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x100(%rbp)
	movq %r14,0x108(%rbp)
	movq $0x1,0x110(%rbp)
.p2align 0x4,,0x7
L_210417:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465940
.p2align 0x4,,0x7
L_210418:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r14
	cmpq $0x1,%r14
	je L_465939
L_210419:
	movq %r15,0x110(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x108(%rbp)
	jmp L_210417
.p2align 0x4
L_465939:
L_210421:
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_210422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465940:
L_210426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210427
.p2align 0x4
.long 0x300F
L_210427:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_210418
.p2align 0x4
L_465941:
L_210428:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_210421
.p2align 0x4
.long 0x300B
L_210422:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210423
L_210424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210425
.p2align 0x4
.long 0x300E
L_210425:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_210423:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_210276
.text
.p2align 0x4
.globl passTypeCheck_1
.hidden passTypeCheck_1
passTypeCheck_1:
L_210505:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_210672
L_210506:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_465955
L_210507:
	movq 0x30(%rbp),%r14
	movq 0x68(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x78(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_465943
L_210508:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_210509:
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_465943:
L_210515:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20A8,%r14
	je L_465954
	cmpq $0x20A9,%r14
	je L_465953
	cmpq $0x20AA,%r14
	je L_465952
	cmpq $0x20AB,%r14
	je L_465951
L_210516:
	movq 0x60(%r15),%r14
	movq 0x58(%r15),%r13
	movq 0x50(%r15),%r11
	movq 0x48(%r15),%r10
	movq 0x40(%r15),%r9
	movq 0x38(%r15),%r8
	movq 0x30(%r15),%rsp
	movq 0x28(%r15),%rsi
	movq 0x20(%r15),%rdi
	movq 0x18(%r15),%rdx
	movq 0x10(%r15),%rcx
	movq 0x8(%r15),%rbx
	movq 0x0(%r15),%rax
	movq $0x30A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rax,0x0(%r15)
	movq %rbx,0x8(%r15)
	movq %rcx,0x10(%r15)
	movq %rdx,0x18(%r15)
	movq %rdi,0x20(%r15)
	movq %rsi,0x28(%r15)
	movq %rsp,0x30(%r15)
	movq %r8,0x38(%r15)
	movq %r9,0x40(%r15)
	movq %r10,0x48(%r15)
	movq %r11,0x50(%r15)
	movq %r13,0x58(%r15)
	movq %r14,0x60(%r15)
	movq %r15,0x8(%rbp)
	addq $0x70,%r12
L_210517:
	movq 0x58(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_210596
	cmpb $0x1,%r15b
	je L_465949
L_210518:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1854,%r14
	je L_465948
	cmpq $0x1855,%r14
	je L_465947
	cmpq $0x1856,%r14
	je L_465946
	cmpq $0x1857,%r14
	je L_465945
	cmpq $0x1858,%r14
	je L_465944
L_210519:
	movq 0x60(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	addq $0xC0,%rbp
	leaq (L_210520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1879
.p2align 0x4
L_465944:
L_210594:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_210520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1880
.p2align 0x4
L_465945:
L_210593:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_210520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1881
.p2align 0x4
L_465946:
L_210582:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x8A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1640)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465947:
L_210581:
	movq 0x98(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	addq $0xC0,%rbp
	leaq (L_210520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1882
.p2align 0x4
L_465948:
L_210580:
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addProfile_0
.p2align 0x4
L_465949:
L_210596:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1600)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465951:
L_210667:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x30B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_210517
.p2align 0x4
L_465952:
L_210666:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x30AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_210517
.p2align 0x4
L_465953:
L_210665:
	movq 0x98(%r15),%r14
	movq 0x90(%r15),%r13
	movq 0x88(%r15),%r11
	movq 0x80(%r15),%r10
	movq 0x78(%r15),%r9
	movq 0x70(%r15),%r8
	movq 0x68(%r15),%rsp
	movq 0x60(%r15),%rsi
	movq 0x58(%r15),%rdi
	movq 0x50(%r15),%rdx
	movq 0x48(%r15),%rcx
	movq 0x40(%r15),%rbx
	movq 0x38(%r15),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x30(%r15),%r14
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x28(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x20(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x18(%r15),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x10(%r15),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x8(%r15),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x0(%r15),%rsp
	movq $0x30AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r11,0x20(%r15)
	movq %r13,0x28(%r15)
	movq %r14,0x30(%r15)
	movq %rax,0x38(%r15)
	movq %rbx,0x40(%r15)
	movq %rcx,0x48(%r15)
	movq %rdx,0x50(%r15)
	movq %rdi,0x58(%r15)
	movq %rsi,0x60(%r15)
	movq (localObjptr+0x30)(%rip),%r14
	movq %r14,0x68(%r15)
	movq (localObjptr+0x28)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x90(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0x98(%r15)
	movq %r15,0x8(%rbp)
	addq $0xA8,%r12
	jmp L_210517
.p2align 0x4
L_465954:
L_210664:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x30A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_210517
.p2align 0x4
L_465955:
L_210672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_210673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210673
.p2align 0x4
.long 0xC06
L_210673:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_210507
.p2align 0x4
.long 0x297D
L_210510:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210511
L_210669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_210670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210670
.p2align 0x4
.long 0x29A7
L_210670:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_210511:
	movl 0xB8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_465958
L_210512:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_210515
L_210513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_210509
.p2align 0x4
L_465958:
L_210668:
	movq $0x30AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	jmp L_210517
.p2align 0x4
.long 0x297E
L_210520:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210522
L_210578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210579
.p2align 0x4
.long 0x2992
L_210579:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210522:
	movq $0x310D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x0,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2993
L_210583:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210584
L_210591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210592
.p2align 0x4
.long 0x2996
L_210592:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210584:
	movq $0x4131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movb $0x4,0xC8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_210585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x2997
L_210597:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210598
L_210661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210662
.p2align 0x4
.long 0x29A6
L_210662:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210598:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movb $0x1,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x297F
L_210523:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210524
L_210576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210577
.p2align 0x4
.long 0x2992
L_210577:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210524:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_465963
L_210526:
	movl %r14d,0x0(%r15)
	movq $0x3125,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xC0(%rbp)
	movb $0x0,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_465963:
L_210525:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2994
L_210585:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210586
L_210589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210590
.p2align 0x4
.long 0x2995
L_210590:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210586:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_465965
L_210587:
	movq %r14,0x8(%rbp)
	jmp L_210522
.p2align 0x4
L_465965:
L_210588:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2997
L_210599:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2980
L_210527:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210528
L_210574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210575
.p2align 0x4
.long 0x2991
L_210575:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210528:
	movq $0x310B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movb $0x0,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2997
L_210600:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210601
L_210659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210660
.p2align 0x4
.long 0x29A5
L_210660:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210601:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_210525
L_210602:
	movl %r14d,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1854,%r14
	je L_465972
	cmpq $0x1855,%r14
	je L_465971
	cmpq $0x1856,%r14
	je L_465970
	cmpq $0x1857,%r14
	je L_465969
	cmpq $0x1858,%r14
	je L_465968
L_210603:
	movq 0x60(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	leaq L_210642(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_210604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1879
.p2align 0x4
L_465968:
L_210658:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	leaq L_210642(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_210604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1880
.p2align 0x4
L_465969:
L_210657:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	leaq L_210642(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_210604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1881
.p2align 0x4
L_465970:
L_210649:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq $0x8A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1640)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	leaq L_210642(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xD0,%rbp
	leaq (L_210650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_465971:
L_210648:
	movq 0x98(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	leaq L_210642(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_210604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1882
.p2align 0x4
L_465972:
L_210647:
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	leaq L_210642(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_210604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addProfile_0
.p2align 0x4
.long 0x2981
L_210529:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210530
L_210572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210573
.p2align 0x4
.long 0x2990
L_210573:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210530:
	movq $0x3113,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movb $0x0,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2998
L_210604:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%rbp)
L_210605:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_465976
L_210630:
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_465976:
L_210606:
	movq $0x3,0x28(%rbp)
L_210607:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_210525
L_210608:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_210609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0xA20
L_210642:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_210607
.p2align 0x4
.long 0x29A2
L_210650:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210651
L_210655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_210656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210656
.p2align 0x4
.long 0x29A4
L_210656:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_210651:
	movq $0x4131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movb $0x4,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_210652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x2982
L_210531:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210532
L_210570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210571
.p2align 0x4
.long 0x298F
L_210571:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210532:
	movq $0x311D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movb $0x0,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x299E
L_210631:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2999
L_210609:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_210610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x29A3
L_210652:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_465980
L_210653:
	movq %r14,0x8(%rbp)
	jmp L_210605
.p2align 0x4
L_465980:
L_210654:
	movq $0x9,0x28(%rbp)
	jmp L_210607
.p2align 0x4
.long 0x2983
L_210533:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210534
L_210568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210569
.p2align 0x4
.long 0x298E
L_210569:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210534:
	movq (globalObjptr+0x15E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	subl $0x3,%r13d
	jo L_210525
L_210535:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x1608)(%rip),%r14
	cmpl $0x0,0x0(%r14)
	jg L_465983
L_210536:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_465981
L_210537:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_210538:
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_465981:
L_210544:
	movq 0xA8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_465982
L_210545:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_465982:
L_210546:
	movq 0xB0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq $0x4159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x847,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x8(%r8)
	movq %r13,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r10,0x20(%r8)
	movq %r9,0x28(%r8)
	movq %r15,0x30(%r8)
	addq $0x40,%r12
	movq (globalObjptr+0x1650)(%rip),%r15
	movq %r15,0x0(%r8)
	movq %r8,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_210547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1926
.p2align 0x4
L_465983:
L_210564:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1620)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xFC58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (fail_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x299F
L_210632:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x299A
L_210610:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_210611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2984
L_210539:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210540
L_210561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210562
.p2align 0x4
.long 0x298C
L_210562:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210540:
	movl 0x48(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_465987
L_210541:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_210544
L_210542:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_210538
.p2align 0x4
L_465987:
L_210548:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2985
L_210547:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x298D
fail_4:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210565
L_210566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_210567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210567
.p2align 0x4
.long 0x478
L_210567:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_210565:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x29A0
L_210633:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x299B
L_210611:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_210612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x2986
L_210549:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210550
L_210559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210560
.p2align 0x4
.long 0x298B
L_210560:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210550:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%r15),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xC0(%rbp)
	addq $0x18,%r12
	addq $0xC0,%rbp
	leaq (L_210551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x299E
L_210634:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210635
L_210645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210646
.p2align 0x4
.long 0x29A1
L_210646:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210635:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x299C
L_210612:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210613
L_210628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_210629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210629
.p2align 0x4
.long 0x299D
L_210629:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_210613:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_210614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2987
L_210551:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210552
L_210557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210558
.p2align 0x4
.long 0x298A
L_210558:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210552:
	movq $0x31B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	movq (globalObjptr+0x1628)(%rip),%r15
	movq %r15,0xD8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x100(%rbp)
	movb $0x6,0x108(%rbp)
	addq $0xC0,%rbp
	leaq (L_210553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1832
.p2align 0x4
.long 0x299E
L_210636:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210637
L_210643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210644
.p2align 0x4
.long 0x29A1
L_210644:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_210637:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	movb $0x1,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_210638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x299C
L_210614:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210615
L_210626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_210627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210627
.p2align 0x4
.long 0x299D
L_210627:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_210615:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x1,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_210616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2988
L_210553:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210544
L_210555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210556
.p2align 0x4
.long 0x2989
L_210556:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_210544
.p2align 0x4
.long 0x299E
L_210638:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210522
L_210640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_210641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210641
.p2align 0x4
.long 0x2992
L_210641:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_210522
.p2align 0x4
.long 0x299C
L_210616:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_210617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x299C
L_210617:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210618
L_210624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_210625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210625
.p2align 0x4
.long 0x299D
L_210625:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_210618:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_210619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x927
L_210619:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210620
L_210622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_210623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210623
.p2align 0x4
.long 0x928
L_210623:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_210620:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_210621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x90C
L_210621:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl addProfile_0
.hidden addProfile_0
addProfile_0:
L_210674:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_210894
L_210675:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466001
L_210676:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x1,0x28(%rbp)
loop_2206:
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	cmpq $0x1,%r15
	je L_466000
L_210677:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x20(%r11),%r9
	movq %r9,0x78(%rbp)
	movq 0x28(%r11),%r9
	movq %r9,0x80(%rbp)
	movq %r10,0x90(%rbp)
	movq %r13,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_210678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_466000:
L_210893:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466001:
L_210894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_210895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210895
.p2align 0x4
.long 0x460
L_210895:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_210676
.p2align 0x4
.long 0xF56
L_210678:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210679
L_210891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_210892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210892
.p2align 0x4
.long 0x11CE
L_210892:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_210679:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1C81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_210680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3028
L_210680:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210681
L_210889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_210890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210890
.p2align 0x4
.long 0x3043
L_210890:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_210681:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0xA0(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_466071
L_210888:
	movq 0xA8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_210683:
	movq $0x1C87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	movq $0x1C85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x90(%rbp)
	cmpq %r14,%r11
	jne L_210685
L_210686:
	testq %r11,%r11
	jz L_466069
L_210687:
	cmpq $0x7FFFFFFF,%r11
	ja L_210716
L_210688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210689
L_210884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_210885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210885
.p2align 0x4
.long 0x1228
L_210885:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_210689:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0x90(%rbp),%rdx
	movq $0xA0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_210690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210690
.p2align 0x4
.long 0x1228
L_210690:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xB0(%rbp)
L_210691:
	movq $0x1,0xB8(%rbp)
	movq $0x0,0xC0(%rbp)
loop_2207:
	movq 0x90(%rbp),%r14
	cmpq %r14,0xC0(%rbp)
	jl L_466012
L_210692:
	movq 0xB0(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466011
L_210693:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_210694:
	incl %ecx
	jo L_466010
L_210696:
	cmpq $0x1,%r15
	je L_466004
L_210697:
	movq 0x8(%r15),%r15
	jmp L_210694
.p2align 0x4
L_466004:
L_210698:
L_210699:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_466009
L_210700:
	cmpq $0x7FFFFFFF,%rdx
	ja L_466008
L_210701:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_210702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210702
.p2align 0x4
.long 0x3029
L_210702:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x40(%rbp)
L_210703:
	movq 0xB8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2208:
	cmpq 0x38(%rbp),%r15
	jnl L_466006
L_210712:
	cmpq $0x1,%r14
	je L_466005
L_210713:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2208
.p2align 0x4
L_466005:
L_210714:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466006:
L_210704:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210705
L_210710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_210711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210711
.p2align 0x4
.long 0x302C
L_210711:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_210705:
	movq 0x40(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_210706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_5
.p2align 0x4
L_466008:
L_210716:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466009:
L_210717:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_210703
.p2align 0x4
L_466010:
L_210695:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466011:
L_210718:
	xorl %ecx,%ecx
	jmp L_210699
.p2align 0x4
L_466012:
L_210719:
	movq 0xC0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0xD8(%rbp)
	movq 0x18(%r13),%r9
	movq %r9,0xE0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_210685
L_210721:
	testl %r14d,%r14d
	jz L_466013
L_210722:
	movq %r10,0xF0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_210723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_466013:
L_210883:
	movq $0x2B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	movq $0x2B5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	movq $0x1,0xF0(%rbp)
	movq $0x1,0xF8(%rbp)
L_210729:
	movq 0xD8(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_466050
L_210730:
	cmpq $0x1,0xF8(%rbp)
	je L_466046
L_210731:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210732
L_210836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_210837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210837
.p2align 0x4
.long 0x3036
L_210837:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_210732:
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_210733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210733
.p2align 0x4
.long 0x302F
L_210733:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xF8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2209:
	cmpq $0x1,%r15
	jnl L_466014
L_210835:
	movq 0xF8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2209
.p2align 0x4
L_466014:
L_210734:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210735
L_210833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_210834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210834
.p2align 0x4
.long 0x3036
L_210834:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_210735:
	movq 0xF8(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
L_210736:
	movq 0xC8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz doitL_1
L_210754:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_466042
	cmpq $0xF32,%r14
	je L_466040
	cmpq $0xF35,%r14
	je L_466019
doitL_1:
	movq 0xF8(%rbp),%r15
doitL_2:
	movq 0xF0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466018
L_210737:
	movq %r14,0xE8(%rbp)
	movq %r15,0xF0(%rbp)
x_705:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210738
L_210750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_210751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210751
.p2align 0x4
.long 0x3033
L_210751:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_210738:
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_210739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210739
.p2align 0x4
.long 0x3030
L_210739:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq %rax,0xE8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2210:
	cmpq $0x1,%r15
	jnl L_466015
L_210749:
	movq 0xE8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2210
.p2align 0x4
L_466015:
L_210740:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210741
L_210747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_210748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210748
.p2align 0x4
.long 0x3033
L_210748:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_210741:
	movq 0xE8(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xF0(%rbp),%r14
L_210742:
	movq $0x271F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xF0(%rbp)
	addq $0x18,%r12
	addq $0xF0,%rbp
	leaq (L_210743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_466018:
L_210753:
	movq (globalObjptr+0xF38)(%rip),%r13
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r13)
	movq %r15,%r14
	movq %r13,%r15
	jmp L_210742
.p2align 0x4
L_466019:
L_210785:
	movq 0xC8(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0xF8(%rbp),%r13
	movq %r13,0x108(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xF8(%rbp)
L_210786:
	cmpq $0x1,%r15
	je L_466030
	cmpq $0x2,%r15
	je L_466029
L_210787:
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_466028
	cmpq $0x2,%r14
	je L_466021
L_210788:
	movq 0xF0(%rbp),%r15
	cmpq $0x1,%r15
	je L_466020
L_210789:
	movq %r15,0xE8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0xF0(%rbp)
	jmp x_705
.p2align 0x4
L_466020:
L_210790:
	movq 0x108(%rbp),%r14
	xchgq %r14,%r15
	jmp L_210753
.p2align 0x4
L_466021:
L_210792:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_466023
L_210793:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_466022
L_210795:
	movq $0x4025,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x118(%rbp)
	movl %r13d,0x120(%rbp)
	addq $0x118,%rbp
	leaq (L_210796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_466022:
L_210685:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466023:
L_210828:
	movq $0x2,%r14
	xchgq %r14,%r15
L_210808:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	cmpq $0x1,0xF0(%rbp)
	je L_466027
L_210809:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210810
L_210818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_210819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210819
.p2align 0x4
.long 0x303C
L_210819:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_210810:
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_210811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210811
.p2align 0x4
.long 0x303B
L_210811:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq %rax,0xF0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2214:
	cmpq $0x1,%r15
	jnl L_466024
L_210817:
	movq 0xF0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2214
.p2align 0x4
L_466024:
L_210812:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210813
L_210815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_210816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210816
.p2align 0x4
.long 0x303C
L_210816:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_210813:
	movq 0xF0(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
L_210814:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,0xC8(%rbp)
	movq 0x108(%rbp),%r14
	jmp L_210742
.p2align 0x4
L_466027:
L_210820:
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_210814
.p2align 0x4
L_466028:
L_210791:
	movq 0x108(%rbp),%r15
	jmp doitL_2
.p2align 0x4
L_466029:
L_210832:
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x108(%rbp),%r14
	jmp L_210742
.p2align 0x4
L_466030:
L_210829:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x15AC,%r14
	je L_466034
L_210831:
	movq 0x0(%r15),%r15
	movq %r15,0xE8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0xF0(%rbp)
leaveF_1:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210772
L_210779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_210780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210780
.p2align 0x4
.long 0x3033
L_210780:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_210772:
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_210773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210773
.p2align 0x4
.long 0x3030
L_210773:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq %rax,0xE8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2212:
	cmpq $0x1,%r15
	jnl L_466031
L_210778:
	movq 0xE8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2212
.p2align 0x4
L_466031:
L_210774:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210775
L_210776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_210777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210777
.p2align 0x4
.long 0x3033
L_210777:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_210775:
	movq 0xE8(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xF0(%rbp),%r14
	jmp L_210742
.p2align 0x4
L_466034:
L_210830:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xE8(%rbp)
	movq %r14,0xF0(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
x_706:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210758
L_210769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_210770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210770
.p2align 0x4
.long 0x3036
L_210770:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_210758:
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x108(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_210759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210759
.p2align 0x4
.long 0x3034
L_210759:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq %rax,0xE8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2211:
	cmpq $0x2,%r15
	jnl L_466037
L_210764:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_466036
	cmpl $0x1,%r14d
	je L_466035
L_210765:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466035:
L_210768:
	movq 0x108(%rbp),%r14
L_210767:
	movq 0xE8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2211
.p2align 0x4
L_466036:
L_210766:
	movq 0x100(%rbp),%r14
	jmp L_210767
.p2align 0x4
L_466037:
L_210760:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210761
L_210762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_210763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210763
.p2align 0x4
.long 0x3035
L_210763:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_210761:
	movq 0xE8(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xF8(%rbp),%r14
	jmp L_210742
.p2align 0x4
L_466040:
L_210781:
	movq 0xF8(%rbp),%r15
L_210782:
	movq 0xE8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x15AC,%r13
	je L_466041
L_210784:
	movq %r15,0xF0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp leaveF_1
.p2align 0x4
L_466041:
L_210783:
	movq %r15,0xF8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xF0(%rbp)
	jmp x_706
.p2align 0x4
L_466042:
L_210755:
	movq 0xF8(%rbp),%r15
L_210756:
	movq 0xE8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x15AC,%r13
	je L_466043
L_210771:
	movq %r15,0xF0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp leaveF_1
.p2align 0x4
L_466043:
L_210757:
	movq %r15,0xF8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xF0(%rbp)
	jmp x_706
.p2align 0x4
L_466046:
L_210838:
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
L_210839:
	movq 0xC8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz doitL_3
L_210840:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_466049
	cmpq $0xF32,%r14
	je L_466048
	cmpq $0xF35,%r14
	je L_466047
doitL_3:
	movq (globalObjptr+0xF38)(%rip),%r15
	jmp doitL_2
.p2align 0x4
L_466047:
L_210843:
	movq 0xC8(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x100(%rbp)
	movq (globalObjptr+0xF38)(%rip),%r14
	movq %r14,0x108(%rbp)
	jmp L_210786
.p2align 0x4
L_466048:
L_210842:
	movq (globalObjptr+0xF38)(%rip),%r15
	jmp L_210782
.p2align 0x4
L_466049:
L_210841:
	movq (globalObjptr+0xF38)(%rip),%r15
	jmp L_210756
.p2align 0x4
L_466050:
L_210844:
	movq 0x100(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x15AE,%r14
	je L_466057
L_210863:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210864
L_210876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_210877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210877
.p2align 0x4
.long 0x302F
L_210877:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_210864:
	movq 0x100(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_210865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210865
.p2align 0x4
.long 0x3036
L_210865:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq %rax,0x100(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2216:
	cmpq $0x1,%r15
	jnl L_466051
L_210875:
	movq 0x100(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2216
.p2align 0x4
L_466051:
L_210866:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210867
L_210873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_210874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210874
.p2align 0x4
.long 0x302F
L_210874:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_210867:
	movq 0x100(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
L_210868:
	movq 0xC8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz doitL_5
L_210869:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_466054
	cmpq $0xF32,%r14
	je L_466053
	cmpq $0xF35,%r14
	je L_466052
doitL_5:
	movq 0x100(%rbp),%r15
	jmp doitL_2
.p2align 0x4
L_466052:
L_210872:
	movq 0xC8(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x100(%rbp),%r13
	movq %r13,0x108(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x100(%rbp)
	jmp L_210786
.p2align 0x4
L_466053:
L_210871:
	movq 0x100(%rbp),%r15
	jmp L_210782
.p2align 0x4
L_466054:
L_210870:
	movq 0x100(%rbp),%r15
	jmp L_210756
.p2align 0x4
L_466057:
L_210845:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210846
L_210861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_210862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210862
.p2align 0x4
.long 0x302F
L_210862:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_210846:
	movq 0x100(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x108(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_210847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210847
.p2align 0x4
.long 0x3040
L_210847:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq %rax,0x100(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2215:
	cmpq $0x2,%r15
	jnl L_466060
L_210857:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_466059
	cmpl $0x1,%r14d
	je L_466058
	jmp L_210765
.p2align 0x4
L_466058:
L_210860:
	movq 0x108(%rbp),%r14
L_210859:
	movq 0x100(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2215
.p2align 0x4
L_466059:
L_210858:
	movq 0xF8(%rbp),%r14
	jmp L_210859
.p2align 0x4
L_466060:
L_210848:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210849
L_210855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_210856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210856
.p2align 0x4
.long 0x302F
L_210856:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_210849:
	movq 0x100(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
L_210850:
	movq 0xC8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz doitL_4
L_210851:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_466063
	cmpq $0xF32,%r14
	je L_466062
	cmpq $0xF35,%r14
	je L_466061
doitL_4:
	movq 0x100(%rbp),%r15
	jmp doitL_2
.p2align 0x4
L_466061:
L_210854:
	movq 0xC8(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x100(%rbp),%r13
	movq %r13,0x108(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x100(%rbp)
	jmp L_210786
.p2align 0x4
L_466062:
L_210853:
	movq 0x100(%rbp),%r15
	jmp L_210782
.p2align 0x4
L_466063:
L_210852:
	movq 0x100(%rbp),%r15
	jmp L_210756
.p2align 0x4
L_466069:
L_210887:
	movq (globalObjptr+0x2318)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_210691
.p2align 0x4
L_466071:
	movq %r14,%r15
	jmp L_210683
.p2align 0x4
.long 0x302A
L_210706:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210707
L_210708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_210709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210709
.p2align 0x4
.long 0x302B
L_210709:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_210707:
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	jmp loop_2206
.p2align 0x4
.long 0x302D
L_210723:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210724
L_210881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_210882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210882
.p2align 0x4
.long 0x3042
L_210882:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_210724:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1C81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x98(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_210725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3031
L_210743:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210744
L_210745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_210746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210746
.p2align 0x4
.long 0x3032
L_210746:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_210744:
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xC0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xC0(%rbp)
	jmp loop_2207
.p2align 0x4
.long 0x3037
L_210796:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_210797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x302E
L_210725:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210726
L_210879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_210880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210880
.p2align 0x4
.long 0x3041
L_210880:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_210726:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0xE8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xF0(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0xA0(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_466076
L_210878:
	movq 0xA8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_210728:
	movq $0x1C87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1C85,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2B5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0xF8(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x100(%rbp)
	movq $0x2B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r13,0xF0(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	jmp L_210729
.p2align 0x4
L_466076:
	movq %r14,%r15
	jmp L_210728
.p2align 0x4
.long 0x3038
L_210797:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xCC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210798
L_210826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_210827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210827
.p2align 0x4
.long 0x303F
L_210827:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_210798:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x118(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xCC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x110(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_210685
L_210800:
	cmpl 0xC8(%rbp),%r13d
	jne L_466078
L_210802:
	movl %r13d,0x130(%rbp)
	movq $0x38F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_210803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
L_466078:
L_210801:
	movq (globalObjptr+0x540)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3039
L_210803:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210804
L_210824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_210825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210825
.p2align 0x4
.long 0x303E
L_210825:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_210804:
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_210805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210805
.p2align 0x4
.long 0x303A
L_210805:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq %rax,0x128(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2213:
	cmpq $0x1,%r15
	jnl L_466081
L_210823:
	movq 0x128(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x120(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2213
.p2align 0x4
L_466081:
L_210806:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210807
L_210821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_210822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210822
.p2align 0x4
.long 0x303D
L_210822:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_210807:
	movq 0x128(%rbp),%r14
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x28,%r12
	movq %r14,0x8(%r13)
	movq 0x118(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0xC8(%rbp),%r14
	movq %r14,0x18(%r13)
	movq $0x1E99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	jmp L_210808
.text
.p2align 0x4
.globl concat_5
.hidden concat_5
concat_5:
L_210896:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_210897
L_210940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_210941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210941
.p2align 0x4
.long 0x452
L_210941:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_210897:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_466099
L_210898:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_210899:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466098
.p2align 0x4,,0x7
L_210900:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x29A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466084
L_210901:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_210899
.p2align 0x4
L_466084:
L_210902:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_210903:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466097
.p2align 0x4,,0x7
L_210904:
	movq $0x29A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466085
L_210905:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_210903
.p2align 0x4
L_466085:
L_210906:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_466092
L_210907:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_210908:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_466086
L_210909:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_210908
.p2align 0x4
L_466086:
L_210910:
	testq %r15,%r15
	jz L_466091
L_210911:
	cmpq $0x7FFFFFFF,%r15
	ja L_466090
L_210912:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_210913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210913
.p2align 0x4
.long 0x49C
L_210913:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_210914:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2217:
	cmpq 0x18(%rbp),%r14
	jnl L_466089
.p2align 0x4,,0x7
loop_2218:
	cmpq 0x0(%r11),%r13
	jl L_466088
L_210917:
	cmpq $0x1,%r10
	je L_466087
L_210918:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2218
.p2align 0x4
L_466087:
L_210919:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466088:
L_210920:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2217
.p2align 0x4
L_466089:
L_210915:
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466090:
L_210922:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466091:
L_210923:
	movq (globalObjptr+0x5F8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_210914
.p2align 0x4
L_466092:
L_210924:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,0xFFFFFFFFFFFFFFF0(%r13)
	movq %r13,0x10(%rbp)
	je L_466096
L_210925:
	testq %rdx,%rdx
	jz L_466095
L_210926:
	cmpq $0x7FFFFFFF,%rdx
	ja L_210922
L_210927:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_210928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210928
.p2align 0x4
.long 0x4A5
L_210928:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_210929:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2219:
	cmpq 0x18(%rbp),%r14
	jnl L_466093
L_210931:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2219
.p2align 0x4
L_466093:
L_210930:
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466095:
L_210933:
	movq (globalObjptr+0x600)(%rip),%r15
	jmp L_210929
.p2align 0x4
L_466096:
L_210934:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466097:
L_210935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_210936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210936
.p2align 0x4
.long 0x45C
L_210936:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_210904
.p2align 0x4
L_466098:
L_210937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_210938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210938
.p2align 0x4
.long 0x45C
L_210938:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_210900
.p2align 0x4
L_466099:
L_210939:
	movq (globalObjptr+0x608)(%rip),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl concat_6
.hidden concat_6
concat_6:
L_210942:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_210943
L_210986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_210987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210987
.p2align 0x4
.long 0x452
L_210987:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_210943:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_466116
L_210944:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_210945:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466115
.p2align 0x4,,0x7
L_210946:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF33,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x29A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466101
L_210947:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_210945
.p2align 0x4
L_466101:
L_210948:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_210949:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466114
.p2align 0x4,,0x7
L_210950:
	movq $0x29A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466102
L_210951:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_210949
.p2align 0x4
L_466102:
L_210952:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_466109
L_210953:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_210954:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_466103
L_210955:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_210954
.p2align 0x4
L_466103:
L_210956:
	testq %r15,%r15
	jz L_466108
L_210957:
	cmpq $0x7FFFFFFF,%r15
	ja L_466107
L_210958:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_210959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210959
.p2align 0x4
.long 0x49C
L_210959:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_210960:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2220:
	cmpq 0x18(%rbp),%r14
	jnl L_466106
.p2align 0x4,,0x7
loop_2221:
	cmpq 0x0(%r11),%r13
	jl L_466105
L_210963:
	cmpq $0x1,%r10
	je L_466104
L_210964:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2221
.p2align 0x4
L_466104:
L_210965:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466105:
L_210966:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2220
.p2align 0x4
L_466106:
L_210961:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466107:
L_210968:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466108:
L_210969:
	movq (globalObjptr+0x5E0)(%rip),%r14
	xchgq %r14,%r15
	jmp L_210960
.p2align 0x4
L_466109:
L_210970:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,0xFFFFFFFFFFFFFFF0(%r13)
	movq %r13,0x10(%rbp)
	je L_466113
L_210971:
	testq %rdx,%rdx
	jz L_466112
L_210972:
	cmpq $0x7FFFFFFF,%rdx
	ja L_210968
L_210973:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_210974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210974
.p2align 0x4
.long 0x4A5
L_210974:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_210975:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2222:
	cmpq 0x18(%rbp),%r14
	jnl L_466110
L_210977:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2222
.p2align 0x4
L_466110:
L_210976:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466112:
L_210979:
	movq (globalObjptr+0x5E8)(%rip),%r15
	jmp L_210975
.p2align 0x4
L_466113:
L_210980:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466114:
L_210981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_210982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210982
.p2align 0x4
.long 0x45C
L_210982:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_210950
.p2align 0x4
L_466115:
L_210983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_210984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210984
.p2align 0x4
.long 0x45C
L_210984:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_210946
.p2align 0x4
L_466116:
L_210985:
	movq (globalObjptr+0x5F0)(%rip),%r14
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1882
.hidden x_1882
x_1882:
L_210988:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_211293
L_210989:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466144
L_210990:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x18(%r15),%r14
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xB89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r15,0x60(%r13)
	addq $0x70,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x30(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%r13)
	movq %r13,0xC0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xD0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xD8(%rbp)
	cmpq %rdx,%r15
	movq %r14,0xB8(%rbp)
	jne L_210992
L_210993:
	testq %rdx,%rdx
	jz L_466142
L_210994:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211072
L_210995:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1679,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_210996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_210996
.p2align 0x4
.long 0x3044
L_210996:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq %rax,0x38(%rbp)
L_210997:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_2223:
	movq 0x40(%rbp),%r15
	cmpq 0xD8(%rbp),%r15
	jnl L_466124
L_211238:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xB8(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x48(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r15,%r11
	jne L_210992
L_211240:
	testq %r11,%r11
	jnz L_466121
L_211290:
	movq (globalObjptr+0x7268)(%rip),%r15
	movq %r15,0xE0(%rbp)
.p2align 0x4,,0x7
L_211244:
	movq $0x0,0xE8(%rbp)
.p2align 0x4,,0x7
loop_2229:
	movq 0x58(%rbp),%r15
	cmpq %r15,0xE8(%rbp)
	jl L_466118
L_211245:
	movq 0xE0(%rbp),%r15
	movq $0xAFF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq 0x48(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_2223
.p2align 0x4
L_466118:
L_211246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211247
L_211287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_211288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211288
.p2align 0x4
.long 0x306B
L_211288:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_211247:
	movq 0xE8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xF0(%rbp)
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_466119
L_211249:
	movl %r14d,0x108(%rbp)
	movq $0x38B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (x_708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_466119:
L_210992:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466121:
L_211241:
	movq 0x58(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_466122
L_211242:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_211243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211243
.p2align 0x4
.long 0x3065
L_211243:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq %rax,0xE0(%rbp)
	jmp L_211244
.p2align 0x4
L_466122:
L_211072:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466124:
L_210998:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_210999
L_211236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_211237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211237
.p2align 0x4
.long 0x3064
L_211237:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_210999:
	movq 0x38(%rbp),%r14
	movq $0x767,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x18D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x48,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0xC0(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0xD0(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0x78(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x70(%rbp),%r11
	movq %r11,0x30(%r14)
	movq %r13,0x38(%r14)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466139
L_211000:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x50(%rbp)
L_211001:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x28(%r14),%r13
	movq 0x30(%r14),%r11
	movq %r11,0xB0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0xB8(%rbp)
	cmpq %r11,%r15
	movq %r13,0x88(%rbp)
	jne L_210992
L_211003:
	testq %r11,%r11
	jz L_466137
L_211004:
	cmpq $0x7FFFFFFF,%r11
	ja L_211072
L_211005:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211006
L_211231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_211232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211232
.p2align 0x4
.long 0x3045
L_211232:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_211006:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0xB8(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_211007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211007
.p2align 0x4
.long 0x3045
L_211007:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xD0(%rbp)
L_211008:
	movq $0x1,0xD8(%rbp)
	movq $0x0,0xE0(%rbp)
loop_2224:
	movq 0xB8(%rbp),%r14
	cmpq %r14,0xE0(%rbp)
	jl L_466133
L_211009:
	movq 0xD0(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466132
L_211010:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_211011:
	incl %ecx
	jo L_466131
L_211013:
	cmpq $0x1,%r15
	je L_466125
L_211014:
	movq 0x8(%r15),%r15
	jmp L_211011
.p2align 0x4
L_466125:
L_211015:
L_211016:
	movslq %ecx,%rdx
	movq %rdx,0x88(%rbp)
	testq %rdx,%rdx
	jz L_466130
L_211017:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211072
L_211018:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_211019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211019
.p2align 0x4
.long 0x3046
L_211019:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq %rax,0xB8(%rbp)
L_211020:
	movq 0xD8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2225:
	cmpq 0x88(%rbp),%r15
	jnl L_466127
L_211068:
	cmpq $0x1,%r14
	je L_466126
L_211069:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xB8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2225
.p2align 0x4
L_466126:
L_211070:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466127:
L_211021:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211022
L_211066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_211067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211067
.p2align 0x4
.long 0x304D
L_211067:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_211022:
	movq 0xB8(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_211023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_5
.p2align 0x4
L_466130:
L_211073:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0xB8(%rbp)
	jmp L_211020
.p2align 0x4
L_466131:
L_211012:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466132:
L_211074:
	xorl %ecx,%ecx
	jmp L_211016
.p2align 0x4
L_466133:
L_211075:
	movq 0xE0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xF0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xF8(%rbp)
	movq 0x18(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_210992
L_211077:
	movl %r14d,0x110(%rbp)
	movq $0x38F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_211078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
L_466137:
L_211234:
	movq (globalObjptr+0x7240)(%rip),%r15
	movq %r15,0xD0(%rbp)
	jmp L_211008
.p2align 0x4
L_466139:
L_211235:
	movq $0x1,0x48(%rbp)
L_211047:
	movq 0xA8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_211048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertStatements_0
.p2align 0x4
L_466142:
L_211292:
	movq (globalObjptr+0x7238)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_210997
.p2align 0x4
L_466144:
L_211293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_211294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211294
.p2align 0x4
.long 0x2307
L_211294:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_210990
.p2align 0x4
.long 0x3066
x_708:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0xF0(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_210992
L_211251:
	cmpl $0x0,%ecx
	jl L_466148
L_211252:
	movl %ebx,0x108(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2230:
	cmpl %ecx,%ebx
	jnl L_466146
L_211285:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x108(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0xF8(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x108(%rbp)
	incl %ebx
	jmp loop_2230
.p2align 0x4
L_466146:
L_211253:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211254
L_211283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_211284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211284
.p2align 0x4
.long 0x306A
L_211284:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_211254:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x108(%rbp),%r14d
	movl %r14d,0x110(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_211255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_466148:
L_211286:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3047
L_211023:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211024
L_211064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_211065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211065
.p2align 0x4
.long 0x3045
L_211065:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_211024:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_210992
L_211026:
	movl %r13d,0xE0(%rbp)
	movq $0x38F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_211027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x304E
L_211078:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_211079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertStatements_0
.p2align 0x4
.long 0x304A
L_211048:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211049
L_211050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_211051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211051
.p2align 0x4
.long 0x304B
L_211051:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_211049:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp shrink_1
.p2align 0x4
.long 0x3067
L_211255:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211256
L_211281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_211282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211282
.p2align 0x4
.long 0x3069
L_211282:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_211256:
	movq 0xF0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x108(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_466164
L_211257:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_466163
L_211258:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_211260:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_211261
L_211273:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA4,%r13
	jne L_211261
L_211274:
	movq 0xC8(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_466158
L_211261:
	incl %ecx
	movl %ecx,0x110(%rbp)
	jo L_211012
L_211262:
	cmpq $0x1,%r15
	je L_466153
L_211263:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_211260
.p2align 0x4
L_466153:
L_211264:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211265
L_211271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_211272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211272
.p2align 0x4
.long 0x3068
L_211272:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_211265:
	movl 0x110(%rbp),%ecx
L_211266:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_466155
L_211267:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_211269
L_211270:
	movl %ecx,0x0(%r15)
L_211269:
	movq $0x1949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xE8(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0xF0(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0xF8(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0xE8(%rbp)
	jmp loop_2229
.p2align 0x4
L_466155:
L_211116:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466158:
L_211276:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211116
L_211277:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_466159
L_211279:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466159:
L_211278:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466163:
L_211280:
	xorl %ecx,%ecx
	jmp L_211266
.p2align 0x4
L_466164:
L_211106:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3048
L_211027:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211028
L_211062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_211063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211063
.p2align 0x4
.long 0x3045
L_211063:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_211028:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_466167
L_211029:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_210992
L_211031:
	movl %r13d,0xE0(%rbp)
	movq $0x3A33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_211032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_466167:
L_211059:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_466169
L_211060:
	movq $0x1,0x68(%rbp)
	xchgq %r14,%r15
L_211035:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_210992
L_211037:
	movl %r13d,0xE0(%rbp)
	movq $0x3A33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_211038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_466169:
L_211061:
	movq $0x1,%r13
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
L_211040:
	movq $0xF7D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x38,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x88(%rbp),%r14
	movq %r14,0x20(%r13)
	movq 0xB0(%rbp),%r14
	movq %r14,0x28(%r13)
	movq $0x292B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_466170
L_211041:
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_211001
.p2align 0x4
L_466170:
L_211042:
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_211043:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466172
.p2align 0x4,,0x7
L_211044:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_466171
L_211045:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_211043
.p2align 0x4
L_466171:
L_211046:
	movq %r15,0x48(%rbp)
	jmp L_211047
.p2align 0x4
L_466172:
L_211052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_211053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211053
.p2align 0x4
.long 0x304C
L_211053:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_211044
.p2align 0x4
.long 0x304F
L_211079:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211080
L_211229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_211230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211230
.p2align 0x4
.long 0x3063
L_211230:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_211080:
	movq 0xE8(%rbp),%r15
	cmpq $0x1,%r15
	je L_466205
L_211081:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_466204
	cmpq $0xEBF,%r14
	je L_466203
	cmpq $0xEC0,%r14
	je L_466202
	cmpq $0xEC1,%r14
	je L_466180
	cmpq $0xEC2,%r14
	je L_466175
	cmpq $0xEC3,%r14
	je L_466174
L_211082:
	movq 0x10(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x120,%rbp
	leaq (L_211083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertPrim_0
.p2align 0x4
L_466174:
L_211222:
	movq 0x20(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_211223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertPrim_0
.p2align 0x4
L_466175:
L_211213:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r10
	cmpq $0x1,%r14
	je L_466179
	cmpq $0x2,%r14
	je L_466178
L_211214:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	cmpq $0x1,%r15
	je L_466177
	cmpq $0x2,%r15
	je L_466176
L_211215:
	movq %r10,%r14
L_211216:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
L_211217:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq 0xD8(%rbp),%r15
	movq %r11,%r14
L_211085:
	movq %r15,0xD8(%rbp)
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x28,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xE0(%rbp)
	jmp loop_2224
.p2align 0x4
L_466176:
L_211219:
	movq $0x2,%r15
	movq %r10,%r14
	jmp L_211216
.p2align 0x4
L_466177:
L_211218:
	movq $0x1,%r15
	movq %r10,%r14
	jmp L_211216
.p2align 0x4
L_466178:
L_211221:
	movq $0x2,%r11
	movq %r10,%r15
	movq %r13,%r14
	movq %r11,%r13
	jmp L_211217
.p2align 0x4
L_466179:
L_211220:
	movq $0x1,%r11
	movq %r10,%r15
	movq %r13,%r14
	movq %r11,%r13
	jmp L_211217
.p2align 0x4
L_466180:
L_211091:
	movq 0x10(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_466201
L_211094:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x118(%rbp)
	cmpq %r14,%rdx
	movq %r15,0xE8(%rbp)
	jne L_210992
L_211096:
	testq %rdx,%rdx
	jz L_466199
L_211097:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211072
L_211098:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_211099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211099
.p2align 0x4
.long 0x3052
L_211099:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x120(%rbp)
L_211100:
	movq $0x0,0x128(%rbp)
.p2align 0x4,,0x7
loop_2226:
	movq 0x128(%rbp),%r11
	cmpq 0x118(%rbp),%r11
	jnl L_466196
L_211105:
	movl %r11d,%ecx
	movslq %ecx,%r15
	movq 0xE8(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x130(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x138(%rbp)
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_211106
L_211107:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_466194
L_211108:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_211110:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_466193
L_211152:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xCA4,%r11
	jne L_466192
L_211153:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpq %r10,0xC8(%rbp)
	je L_466185
	movq %r13,(localObjptr+0x0)(%rip)
L_211111:
	incl %ecx
	jo L_211012
L_211112:
	cmpq $0x1,%r14
	je L_466181
L_211113:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_211110
.p2align 0x4
L_466181:
L_211114:
L_211115:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211116
L_211117:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_707
L_211151:
	movl %ecx,0x0(%r15)
x_707:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_466182
L_211149:
	movq %r11,0x78(%rbp)
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_211150+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_466182:
L_211119:
L_211120:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_211121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_466185:
L_211155:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211116
L_211156:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_466190
L_211209:
	movl %ecx,0x0(%r15)
	movq %r11,0x140(%rbp)
	movq %r13,(localObjptr+0x0)(%rip)
L_211158:
	movq 0x140(%rbp),%r13
	movq 0x8(%r13),%r15
L_211159:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_211160
L_211161:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF25,%r14
	jne L_466188
L_211162:
	movq 0x0(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	movq %r9,0x150(%rbp)
	cmpq %r11,%r9
	jne L_210992
L_211164:
	testl %r10d,%r10d
	jnz L_466186
L_211208:
	movq (localObjptr+0x0)(%rip),%r14
	movq 0xD8(%rbp),%r15
.p2align 0x4,,0x7
L_211187:
	movq %r15,0xD8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x128(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x128(%rbp)
	jmp loop_2226
.p2align 0x4
L_466186:
L_211165:
	movq 0x90(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_211166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_466188:
L_211160:
	movq (globalObjptr+0x7250)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466190:
L_211157:
	movq %r11,0x140(%rbp)
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_211158
.p2align 0x4
L_466192:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_211111
.p2align 0x4
L_466193:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_211111
.p2align 0x4
L_466194:
L_211210:
	xorl %ecx,%ecx
	jmp L_211115
.p2align 0x4
L_466196:
L_211101:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211102
L_211103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_211104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211104
.p2align 0x4
.long 0x3053
L_211104:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_211102:
	movq 0x120(%rbp),%r14
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
L_211093:
	movq $0x1E69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x20,%r12
	movq 0x110(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x108(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r13,%r14
	jmp L_211085
.p2align 0x4
L_466199:
L_211212:
	movq (globalObjptr+0x7248)(%rip),%r15
	movq %r15,0x120(%rbp)
	jmp L_211100
.p2align 0x4
L_466201:
L_211092:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x2411,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	jmp L_211093
.p2align 0x4
L_466202:
L_211090:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_211085
.p2align 0x4
L_466203:
L_211089:
	movq 0x0(%r15),%r14
	movq $0x1E65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0xD8(%rbp),%r15
	movq %r13,%r14
	jmp L_211085
.p2align 0x4
L_466204:
L_211088:
	movq 0x0(%r15),%r14
	movq $0x1E63,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0xD8(%rbp),%r15
	movq %r13,%r14
	jmp L_211085
.p2align 0x4
L_466205:
L_211228:
	movq 0xD8(%rbp),%r13
	movq $0x1,%r14
	xchgq %r13,%r15
	jmp L_211085
.p2align 0x4
.long 0x3049
L_211032:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211033
L_211057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_211058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211058
.p2align 0x4
.long 0x3045
L_211058:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_211033:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_466207
L_211034:
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_211035
.p2align 0x4
L_466207:
L_211056:
	movq $0x1,%r14
	movq 0x70(%rbp),%r13
	xchgq %r13,%r15
	jmp L_211040
.p2align 0x4
.long 0x3049
L_211038:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211039
L_211054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_211055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211055
.p2align 0x4
.long 0x3045
L_211055:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_211039:
	movq 0x70(%rbp),%r14
	movq 0x68(%rbp),%r15
	jmp L_211040
.p2align 0x4
.long 0x3050
L_211083:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211084
L_211086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_211087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211087
.p2align 0x4
.long 0x3051
L_211087:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_211084:
	movq $0x1E61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x108(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0xD8(%rbp),%r15
	jmp L_211085
.p2align 0x4
.long 0x3060
L_211223:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_211224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
.long 0xCAA
L_211150:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_211120
.p2align 0x4
.long 0x1
L_211121:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_211122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3054
L_211166:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211167
L_211206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_211207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211207
.p2align 0x4
.long 0x305F
L_211207:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_211167:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x160(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x158(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x78(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_211168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3061
L_211224:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211225
L_211226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_211227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211227
.p2align 0x4
.long 0x3062
L_211227:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_211225:
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x120(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x118(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x108(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0xD8(%rbp),%r15
	jmp L_211085
.p2align 0x4
.long 0x4B0
L_211122:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA440)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_211123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3055
L_211168:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211169
L_211204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_211205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211205
.p2align 0x4
.long 0x305E
L_211205:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_211169:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x158(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x168(%rbp)
	movq 0x150(%rbp),%r15
	testq %r15,%r15
	jz L_466217
L_211170:
	cmpq $0x7FFFFFFF,%r15
	ja L_211072
L_211171:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211172
L_211200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_211201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211201
.p2align 0x4
.long 0x3056
L_211201:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_211172:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167B,%rcx
	movq 0x150(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_211173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211173
.p2align 0x4
.long 0x3056
L_211173:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq %rax,0x158(%rbp)
L_211174:
	movq $0x0,0x170(%rbp)
loop_2227:
	movq 0x150(%rbp),%r15
	cmpq %r15,0x170(%rbp)
	jl L_466214
L_211175:
	movq 0x158(%rbp),%r15
	movq $0x94B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x148(%rbp)
	cmpq %r11,%r14
	jne L_210992
L_211177:
	movl %r13d,0x180(%rbp)
	movq $0x4047,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_211178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_466214:
L_211195:
	movq 0x170(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x178(%rbp)
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x148(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x180(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_211196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_466217:
L_211203:
	movq (globalObjptr+0x7258)(%rip),%r14
	movq %r14,0x158(%rbp)
	jmp L_211174
.p2align 0x4
.long 0x5B0
L_211123:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_211124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3057
L_211178:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x148(%rbp),%rdx
	testq %rdx,%rdx
	jz L_466222
L_211179:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211072
L_211180:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_211181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211181
.p2align 0x4
.long 0x3058
L_211181:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq %rax,0x170(%rbp)
L_211182:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2228:
	cmpq 0x148(%rbp),%r15
	jnl L_466219
L_211192:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x158(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x170(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2228
.p2align 0x4
L_466219:
L_211183:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211184
L_211190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_211191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211191
.p2align 0x4
.long 0x305B
L_211191:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_211184:
	movq 0x170(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x38E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movl $0x1,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_211185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
L_466222:
L_211194:
	movq (globalObjptr+0x7260)(%rip),%r15
	movq %r15,0x170(%rbp)
	jmp L_211182
.p2align 0x4
.long 0x305C
L_211196:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movl 0x190(%rbp),%r15d
	movl %r15d,0x17C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211197
L_211198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_211199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211199
.p2align 0x4
.long 0x305D
L_211199:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_211197:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x17C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x178(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x170(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r14,%r9,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r13,0x8(%r14,%r15,1)
	incq %r11
	movq %r11,0x170(%rbp)
	jmp loop_2227
.p2align 0x4
.long 0x51F
L_211124:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211125
L_211147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_211148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211148
.p2align 0x4
.long 0x4AF
L_211148:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_211125:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_211126:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_211012
L_211127:
	cmpq $0x1,%r14
	je L_466224
L_211128:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_211126
.p2align 0x4
L_466224:
L_211129:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211130
L_211145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_211146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211146
.p2align 0x4
.long 0x4E7
L_211146:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_211130:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_466225
L_211131:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_326:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_466225:
L_211144:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_326
.p2align 0x4
.long 0x3059
L_211185:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211186
L_211188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_211189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211189
.p2align 0x4
.long 0x305A
L_211189:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_211186:
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x170(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x130(%rbp),%r13
	movq %r13,0x18(%r15)
	movq $0x1E99,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r15,%r14
	movq %r13,%r15
	jmp L_211187
.p2align 0x4
.long 0x1
rev_324:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_466232
L_211132:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_211133:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466231
.p2align 0x4,,0x7
L_211134:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466230
L_211135:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_211133
.p2align 0x4
L_466230:
L_211137:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_466231:
L_211141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_211142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211142
.p2align 0x4
.long 0x45C
L_211142:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_211134
.p2align 0x4
L_466232:
L_211143:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_211137
.p2align 0x4
.long 0x1
bug_523:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211138
L_211139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_211140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211140
.p2align 0x4
.long 0x452
L_211140:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_211138:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl convertStatements_0
.hidden convertStatements_0
convertStatements_0:
L_211295:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_211296
L_211500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_211501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211501
.p2align 0x4
.long 0x460
L_211501:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_211296:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x10(%rbp)
	cmpq %r11,%r14
	je L_466234
L_211297:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466234:
L_211298:
	movq 0x10(%rbp),%rdx
	testq %rdx,%rdx
	jz L_466237
L_211299:
	cmpq $0x7FFFFFFF,%rdx
	ja L_466236
L_211300:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x155F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_211301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211301
.p2align 0x4
.long 0x45E
L_211301:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
L_211302:
	movq $0x0,0x20(%rbp)
loop_2231:
	movq 0x10(%rbp),%r15
	cmpq %r15,0x20(%rbp)
	jl L_466235
L_211303:
	movq 0x18(%rbp),%r15
	movq $0x1791,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp concatV_0
.p2align 0x4
L_466235:
L_211304:
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x8(%rbp),%r14
	movq 0x38(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	addq $0x78,%rbp
	leaq (L_211305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_466236:
L_211498:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466237:
L_211499:
	movq (globalObjptr+0x7230)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_211302
.p2align 0x4
.long 0x306C
L_211305:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211306
L_211496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211497
.p2align 0x4
.long 0x5B2
L_211497:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211306:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_466272
	cmpq $0xEB8,%r14
	je L_466271
	cmpq $0xEB9,%r14
	je L_466269
	cmpq $0xEBA,%r14
	je L_466245
	cmpq $0xEBB,%r14
	je L_466244
	cmpq $0xEBC,%r14
	je L_466241
L_211307:
	movq 0x0(%r15),%r14
	movq $0x1E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
simple_17:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211308
L_211313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211314
.p2align 0x4
.long 0x306D
L_211314:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211308:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_211309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211309
.p2align 0x4
.long 0x56A
L_211309:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2232:
	cmpq $0x1,%r15
	jnl L_466239
L_211312:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2232
.p2align 0x4
L_466239:
L_211310:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
L_211311:
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	jmp loop_2231
.p2align 0x4
L_466241:
L_211422:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
L_211423:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_211424
L_211425:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF26,%r15
	jne L_466242
L_211426:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_211427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_466242:
L_211424:
	movq (globalObjptr+0x7228)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466244:
L_211421:
	movq 0x0(%r15),%r14
	movq $0x1E59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	jmp simple_17
.p2align 0x4
L_466245:
L_211335:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x2,%r15
	je L_466268
	cmpq $0x5,%r15
	je sub_1
	cmpq $0x7,%r15
	je L_466263
	cmpq $0x45,%r15
	je L_466254
	cmpq $0x46,%r15
	je L_466252
	cmpq $0x47,%r15
	je L_466250
	cmpq $0x59,%r15
	je L_466249
	cmpq $0x5A,%r15
	je sub_4
L_211336:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_466246
L_211342:
	movq %r14,%r15
L_211337:
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_211338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp convertPrim_0
.p2align 0x4
L_466246:
	movq %r14,%r15
	jmp L_211337
.p2align 0x4
sub_4:
sub_1:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x1,%r14
	jna L_211351
L_211390:
	movq 0x8(%r15),%r13
	cmpq $0x0,%r14
	jna L_466247
L_211392:
	movq 0x0(%r15),%r14
	movq $0x1E79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x28(%rbp)
	jmp simple_17
.p2align 0x4
L_466247:
L_211351:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466249:
L_211419:
	movq $0x1E53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp simple_17
.p2align 0x4
L_466250:
L_211412:
	movq 0x38(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_211351
L_211414:
	movq 0x0(%r15),%r14
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_211415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_466252:
L_211409:
	movq 0x38(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_211351
L_211411:
	movq 0x0(%r15),%r14
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x28(%rbp)
	jmp simple_17
.p2align 0x4
L_466254:
L_211402:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x0,%r14
	jna L_211351
L_211404:
	movq 0x0(%r15),%r13
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	cmpq $0x1,%r14
	jna L_211351
L_211406:
	movq 0x8(%r15),%r14
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	cmpq $0x1,0x60(%rbp)
	je L_466259
L_211407:
	movq %r15,0x30(%rbp)
L_211319:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211320
L_211328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211329
.p2align 0x4
.long 0x306E
L_211329:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211320:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_211321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211321
.p2align 0x4
.long 0x52E
L_211321:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2233:
	cmpq $0x2,%r15
	jnl L_466257
L_211323:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_466256
	cmpl $0x1,%r13d
	je L_466255
L_211324:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466255:
L_211327:
	movq 0x30(%rbp),%r13
L_211326:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2233
.p2align 0x4
L_466256:
L_211325:
	movq 0x38(%rbp),%r13
	jmp L_211326
.p2align 0x4
L_466257:
L_211322:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	jmp L_211311
.p2align 0x4
L_466259:
L_211408:
	movq %r15,0x28(%rbp)
L_211331:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_211332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211332
.p2align 0x4
.long 0x56E
L_211332:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2234:
	cmpq $0x1,%r15
	jnl L_466260
L_211334:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2234
.p2align 0x4
L_466260:
L_211333:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	jmp L_211311
.p2align 0x4
L_466263:
L_211393:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x1,%r14
	jna L_211351
L_211395:
	movq 0x8(%r15),%r13
	cmpq $0x0,%r14
	jna L_211351
L_211397:
	movq 0x0(%r15),%r11
	movq $0x1E79,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	cmpq $0x2,%r14
	jna L_211351
L_211399:
	movq 0x10(%r15),%r14
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	cmpq $0x1,0x60(%rbp)
	je L_466264
L_211400:
	movq %r15,0x30(%rbp)
	jmp L_211319
.p2align 0x4
L_466264:
L_211401:
	movq %r15,0x28(%rbp)
	jmp L_211331
.p2align 0x4
L_466268:
L_211343:
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_211344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_466269:
L_211317:
	movq 0x0(%r15),%r14
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,0x60(%rbp)
	je L_466270
L_211318:
	movq %r15,0x30(%rbp)
	jmp L_211319
.p2align 0x4
L_466270:
L_211330:
	movq %r15,0x28(%rbp)
	jmp L_211331
.p2align 0x4
L_466271:
L_211316:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x28(%rbp)
	jmp simple_17
.p2align 0x4
L_466272:
L_211315:
	movq 0x0(%r15),%r14
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp simple_17
.p2align 0x4
.long 0x307F
L_211427:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211428
L_211494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211495
.p2align 0x4
.long 0x3081
L_211495:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211428:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x50(%rbp)
	movq %r15,0x8(%r10)
	movq %r14,0x10(%r10)
	addq $0x28,%r12
	movl 0x30(%rbp),%r9d
	movl %r9d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq (globalObjptr+0xCE38)(%rip),%r9
	movq %r9,0x18(%r10)
	movq $0x1E55,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r10)
	movq 0x38(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_466288
L_211430:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_466287
L_211431:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_211433:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_466286
L_211476:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCA4,%r10
	jne L_466285
L_211477:
	movq 0x8(%r14),%r10
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x10)(%rip)
	je L_466278
L_211434:
	incl %ecx
	jo L_466277
L_211436:
	cmpq $0x1,%r15
	je L_466274
L_211437:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	jmp L_211433
.p2align 0x4
L_466274:
L_211438:
L_211439:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_466276
L_211441:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_709
L_211475:
	movl %ecx,0x0(%r15)
x_709:
	movq 0x0(%r13),%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_466275
L_211473:
	movq %r11,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_211474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_466275:
L_211443:
	movq %r14,%r15
L_211444:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_211445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_466276:
L_211440:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466277:
L_211435:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466278:
L_211479:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211440
L_211480:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_466283
L_211492:
	movl %ecx,0x0(%r15)
	movq %r10,0x28(%rbp)
L_211482:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211483
L_211490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211491
.p2align 0x4
.long 0x3080
L_211491:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211483:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq $0x1E57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_211484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211484
.p2align 0x4
.long 0x52E
L_211484:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2236:
	cmpq $0x2,%r15
	jnl L_466281
L_211486:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_466280
	cmpl $0x1,%r13d
	je L_466279
	jmp L_211324
.p2align 0x4
L_466279:
L_211489:
	movq 0x38(%rbp),%r13
L_211488:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2236
.p2align 0x4
L_466280:
L_211487:
	movq 0x30(%rbp),%r13
	jmp L_211488
.p2align 0x4
L_466281:
L_211485:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	jmp L_211311
.p2align 0x4
L_466283:
L_211481:
	movq %r10,0x28(%rbp)
	jmp L_211482
.p2align 0x4
L_466285:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_211434
.p2align 0x4
L_466286:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_211434
.p2align 0x4
L_466287:
L_211493:
	xorl %ecx,%ecx
	jmp L_211439
.p2align 0x4
L_466288:
L_211429:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x306F
L_211338:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211339
L_211340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211341
.p2align 0x4
.long 0x3070
L_211341:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211339:
	movq $0x1E53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp simple_17
.p2align 0x4
.long 0x307E
L_211415:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211416
L_211417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211418
.p2align 0x4
.long 0x306D
L_211418:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211416:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp simple_17
.p2align 0x4
.long 0x3071
L_211344:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211345
L_211386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211387
.p2align 0x4
.long 0x307D
L_211387:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211345:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_466292
L_211346:
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_211347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_466292:
L_211381:
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_211382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x69C
L_211474:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_211444
.p2align 0x4
.long 0x1
L_211445:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_211446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3072
L_211347:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_211348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_211382:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4B0
L_211446:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA440)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_211447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3073
L_211348:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211349
L_211379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_211380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211380
.p2align 0x4
.long 0x307C
L_211380:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_211349:
	movslq 0x50(%rbp),%r15
	movq 0x78(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_211351
L_211352:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_466294
L_211353:
	movl 0x0(%r13),%r15d
	movl %r15d,0x88(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_211354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_466294:
L_211378:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_525:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211383
L_211384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_211385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211385
.p2align 0x4
.long 0x452
L_211385:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_211383:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_211447:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_211448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3074
L_211354:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_466298
L_211355:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_211356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_466298:
L_211373:
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_211374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x51F
L_211448:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211449
L_211471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_211472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211472
.p2align 0x4
.long 0x4AF
L_211472:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_211449:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_211450:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_211435
L_211451:
	cmpq $0x1,%r14
	je L_466299
L_211452:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_211450
.p2align 0x4
L_466299:
L_211453:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211454
L_211469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_211470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211470
.p2align 0x4
.long 0x4E7
L_211470:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_211454:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_466300
L_211455:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_327:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_466300:
L_211468:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_327
.p2align 0x4
.long 0x3075
L_211356:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_211357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_211374:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
rev_325:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_466306
L_211456:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_211457:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466305
.p2align 0x4,,0x7
L_211458:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466304
L_211459:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_211457
.p2align 0x4
L_466304:
L_211461:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_466305:
L_211465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_211466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211466
.p2align 0x4
.long 0x45C
L_211466:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_211458
.p2align 0x4
L_466306:
L_211467:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_211461
.p2align 0x4
.long 0x3076
L_211357:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0x80(%rbp)
	movq $0x3,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_211358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
bug_524:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211375
L_211376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_211377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211377
.p2align 0x4
.long 0x452
L_211377:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_211375:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_526:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211462
L_211463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_211464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211464
.p2align 0x4
.long 0x452
L_211464:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_211462:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3077
L_211358:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x80(%rbp)
	movq $0x1,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_211359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3078
L_211359:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211360
L_211371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211372
.p2align 0x4
.long 0x307B
L_211372:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211360:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1E59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x3FE3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_211361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x3079
L_211361:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211362
L_211369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_211370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211370
.p2align 0x4
.long 0x307A
L_211370:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_211362:
	movq $0x1E53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_211363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211363
.p2align 0x4
.long 0x124D
L_211363:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2235:
	cmpq $0x2,%r15
	jnl L_466312
L_211365:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_466311
	cmpl $0x1,%r13d
	je L_466310
	jmp L_211324
.p2align 0x4
L_466310:
L_211368:
	movq 0x30(%rbp),%r13
L_211367:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2235
.p2align 0x4
L_466311:
L_211366:
	movq 0x48(%rbp),%r13
	jmp L_211367
.p2align 0x4
L_466312:
L_211364:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	jmp L_211311
.text
.p2align 0x4
.globl convertPrim_0
.hidden convertPrim_0
convertPrim_0:
L_211502:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_211648
L_211503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466452
L_211504:
	movq 0x0(%rbp),%rax
	andq $0xFF,%rax
	subq $0x1,%rax
	cmpq $0x88,%rax
	ja L_466314
	jmp *jumpTable_679(,%rax,8)
.data
.p2align 0x4
jumpTable_679:
.quad L_466451,L_466450,L_466449,L_211505,L_466447,L_466446,L_466445,L_211505,L_466444,L_466443,L_466442,L_211505,L_466441,L_466440,L_466439,L_211505,L_466438,L_466437,L_466436,L_211505,L_466435,L_466434,L_466433,L_211505,L_466432,L_466431,L_466430,L_211505,L_466429,L_466428,L_466427,L_211505,L_466426,L_466425,L_466424,L_211505,L_466423,L_466422,L_466421,L_211505,L_466420,L_466419,L_466418,L_211505,L_466417,L_466416,L_466415,L_211505,L_466414,L_466413,L_466412,L_211505,L_466411,L_466410,L_466409,L_211505,L_466408,L_466407,L_466406,L_211505,L_466405,L_466404,L_466403,L_211505,L_466402,L_466401,L_466400,L_211505,L_466399,L_466398,L_466397,L_211505,L_466396,L_466395,L_466394,L_211505,L_466393,L_466392,L_466391,L_211505,L_466390,L_466389,L_466388,L_211505,L_466387,L_466386,L_466385,L_211505,L_466384,L_466383,L_466382,L_211505,L_466381,L_466380,L_466379,L_211505,L_466378,L_466377,L_466376,L_211505,L_466375,L_466374,L_466373,L_211505,L_466372,L_466371,L_466370,L_211505,L_466369,L_466368,L_466367,L_211505,L_466366,L_466365,L_466364,L_211505,L_466363,L_466362,L_466361,L_211505,L_466360,L_466359,L_466358,L_211505,L_466357,L_466356,L_466355,L_211505,L_466354,L_466353,L_466352,L_211505,L_466351,L_466350,L_466349,L_211505,L_466348
.text
.p2align 0x4
L_466314:
L_211505:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xEF5,%rax
	cmpq $0x1E,%rax
	ja L_466315
	jmp *jumpTable_680(,%rax,8)
.data
.p2align 0x4
jumpTable_680:
.quad L_466347,L_466346,L_466345,L_466344,L_466343,L_466342,L_466341,L_466340,L_466339,L_466338,L_466337,L_466336,L_466335,L_466334,L_466333,L_466332,L_466331,L_466330,L_466329,L_466328,L_466327,L_466326,L_466325,L_466324,L_466323,L_466322,L_466321,L_466320,L_466318,L_466317,L_466316
.text
.p2align 0x4
L_466315:
L_211506:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466316:
L_211544:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2409,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466317:
L_211543:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2407,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466318:
L_211535:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x19(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_466319
L_211537:
	movl %r13d,0x40(%rbp)
	movq $0x3A4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_211538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_466319:
L_211536:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466320:
L_211534:
	movq 0x0(%rbp),%r15
	movb 0x2(%r15),%r14b
	movq 0x8(%r15),%r13
	movw 0x0(%r15),%r11w
	movq $0x2403,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzwl %r11w,%r13d
	movzbl %r14b,%r11d
	shll $0x10,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466321:
L_211533:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x2401,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466322:
L_211532:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movb 0x4(%r15),%r11b
	movq $0x23FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466323:
L_211531:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466324:
L_211530:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x23FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466325:
L_211529:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466326:
L_211528:
	movq 0x0(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r13
	movq $0x23F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466327:
L_211527:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466328:
L_211526:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466329:
L_211525:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466330:
L_211524:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x23EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466331:
L_211523:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x23ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466332:
L_211522:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x23EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466333:
L_211521:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466334:
L_211520:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466335:
L_211519:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466336:
L_211518:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466337:
L_211517:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x23E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466338:
L_211516:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x23DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466339:
L_211515:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movb 0x4(%r15),%r13b
	movq 0x8(%r15),%r11
	movq $0x23DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466340:
L_211514:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466341:
L_211513:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466342:
L_211512:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x23D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466343:
L_211511:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466344:
L_211510:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x23D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466345:
L_211509:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466346:
L_211508:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466347:
L_211507:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466348:
L_211647:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	shrq $0x10,%r14
	movb %r14b,%r13b
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq %r14,%r15
	shlq $0x8,%r15
	orq $0x89,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466349:
L_211646:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x87,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466350:
L_211645:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x86,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466351:
L_211644:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x85,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466352:
L_211643:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466353:
L_211642:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x82,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466354:
L_211641:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x81,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466355:
L_211640:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7F,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466356:
L_211639:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7E,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466357:
L_211638:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7D,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466358:
L_211637:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7B,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466359:
L_211636:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7A,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466360:
L_211635:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x79,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466361:
L_211634:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466362:
L_211633:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x76,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466363:
L_211632:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x75,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466364:
L_211631:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x73,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466365:
L_211630:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x72,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466366:
L_211629:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x71,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466367:
L_211628:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6F,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466368:
L_211627:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6E,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466369:
L_211626:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6D,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466370:
L_211625:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6B,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466371:
L_211624:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6A,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466372:
L_211623:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x69,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466373:
L_211622:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x67,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466374:
L_211621:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x66,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466375:
L_211620:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x65,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466376:
L_211619:
	movq $0x63,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466377:
L_211618:
	movq $0x62,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466378:
L_211617:
	movq $0x61,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466379:
L_211616:
	movq $0x5F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466380:
L_211615:
	movq $0x5E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466381:
L_211614:
	movq $0x5D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466382:
L_211613:
	movq $0x5B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466383:
L_211612:
	movq $0x5A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466384:
L_211611:
	movq $0x59,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466385:
L_211610:
	movq $0x57,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466386:
L_211609:
	movq $0x56,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466387:
L_211608:
	movq $0x55,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466388:
L_211607:
	movq $0x53,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466389:
L_211606:
	movq $0x52,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466390:
L_211605:
	movq $0x51,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466391:
L_211604:
	movq $0x4F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466392:
L_211603:
	movq $0x4E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466393:
L_211602:
	movq $0x4D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466394:
L_211601:
	movq $0x4B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466395:
L_211600:
	movq $0x4A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466396:
L_211599:
	movq $0x49,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466397:
L_211598:
	movq $0x47,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466398:
L_211597:
	movq $0x46,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466399:
L_211596:
	movq $0x45,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466400:
L_211595:
	movq $0x43,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466401:
L_211594:
	movq $0x42,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466402:
L_211593:
	movq $0x41,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466403:
L_211592:
	movq $0x3F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466404:
L_211591:
	movq $0x3E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466405:
L_211590:
	movq $0x3D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466406:
L_211589:
	movq $0x3B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466407:
L_211588:
	movq $0x3A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466408:
L_211587:
	movq $0x39,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466409:
L_211586:
	movq $0x37,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466410:
L_211585:
	movq $0x36,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466411:
L_211584:
	movq $0x35,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466412:
L_211583:
	movq $0x33,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466413:
L_211582:
	movq $0x32,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466414:
L_211581:
	movq $0x31,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466415:
L_211580:
	movq $0x2F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466416:
L_211579:
	movq $0x2E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466417:
L_211578:
	movq $0x2D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466418:
L_211577:
	movq $0x2B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466419:
L_211576:
	movq $0x2A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466420:
L_211575:
	movq $0x29,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466421:
L_211574:
	movq $0x27,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466422:
L_211573:
	movq $0x26,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466423:
L_211572:
	movq $0x25,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466424:
L_211571:
	movq $0x23,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466425:
L_211570:
	movq $0x22,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466426:
L_211569:
	movq $0x21,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466427:
L_211568:
	movq $0x1F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466428:
L_211567:
	movq $0x1E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466429:
L_211566:
	movq $0x1D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466430:
L_211565:
	movq $0x1B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466431:
L_211564:
	movq $0x1A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466432:
L_211563:
	movq $0x19,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466433:
L_211562:
	movq $0x17,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466434:
L_211561:
	movq $0x16,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466435:
L_211560:
	movq $0x15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466436:
L_211559:
	movq $0x13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466437:
L_211558:
	movq $0x12,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466438:
L_211557:
	movq $0x11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466439:
L_211556:
	movq $0xF,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466440:
L_211555:
	movq $0xE,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466441:
L_211554:
	movq $0xD,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466442:
L_211553:
	movq $0xB,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466443:
L_211552:
	movq $0xA,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466444:
L_211551:
	movq $0x9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466445:
L_211550:
	movq $0x7,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466446:
L_211549:
	movq $0x6,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466447:
L_211548:
	movq $0x5,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466449:
L_211547:
	movq $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466450:
L_211546:
	movq $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466451:
L_211545:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466452:
L_211648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_211649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211649
.p2align 0x4
.long 0x460
L_211649:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_211504
.p2align 0x4
.long 0x63A
L_211538:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_211539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
.long 0x50E
L_211539:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211540
L_211541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_211542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211542
.p2align 0x4
.long 0x165E
L_211542:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_211540:
	movq $0x2405,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x19(%rbp),%r14d
	movzbl 0x18(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl shrink_1
.hidden shrink_1
shrink_1:
L_211650:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_211683
L_211651:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466455
L_211652:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xF8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xE0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xD8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x58(%r15),%r13
	movq 0x50(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x48(%r15),%r10
	movq %r10,0x98(%rbp)
	movq 0x40(%r15),%r9
	movq %r9,0xA0(%rbp)
	movq 0x38(%r15),%r8
	movq %r8,0xA8(%rbp)
	movq 0x18(%r15),%r8
	movq %r8,0xB0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0xB8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq 0x8(%r8),%rsi
	movq $0x8DB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0xC0(%rbp)
	movq %rsi,0x0(%r8)
	addq $0x30,%r12
	movq %rsp,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r10,0x18(%r8)
	movq %r9,0x20(%r8)
	movq 0x40(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x30(%r13),%r9
	movq 0x28(%r13),%rsi
	movq 0x20(%r13),%rdi
	movq 0x48(%r13),%rdx
	movq 0x8(%rdx),%rcx
	movq $0x40B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x8C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	movq %rcx,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %rsi,0x28(%r15)
	movq %rdi,0x30(%r15)
	addq $0x40,%r12
	movq $0x3335,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %rsp,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r15,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_211653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_466455:
L_211683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_211684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211684
.p2align 0x4
.long 0x460
L_211684:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_211652
.p2align 0x4
.long 0x3082
L_211653:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211654
L_211681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_211682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211682
.p2align 0x4
.long 0x3085
L_211682:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_211654:
	movq $0x18CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0xC0,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r13,0x18(%r14)
	movq %r13,0x20(%r14)
	movq 0xB0(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x38(%rbp),%r11
	movq %r11,0x30(%r14)
	movq 0x40(%rbp),%r11
	movq %r11,0x38(%r14)
	movq 0x48(%rbp),%r11
	movq %r11,0x40(%r14)
	movq 0xA0(%rbp),%r11
	movq %r11,0x48(%r14)
	movq 0x98(%rbp),%r11
	movq %r11,0x50(%r14)
	movq 0x90(%rbp),%r11
	movq %r11,0x58(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x60(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x68(%r14)
	movq %r13,0x70(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x78(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x80(%r14)
	movq 0x70(%rbp),%r11
	movq %r11,0x88(%r14)
	movq 0x78(%rbp),%r11
	movq %r11,0x90(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x98(%r14)
	movq %r13,0xA0(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0xA8(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0xB0(%r14)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_466457
L_211655:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x38(%rbp)
L_211656:
	movq %r15,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_211657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1937
.p2align 0x4
L_466457:
L_211680:
	movq $0x1,0x20(%rbp)
L_211661:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_211662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x3083
L_211657:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211658
L_211678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_211679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211679
.p2align 0x4
.long 0x3084
L_211679:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_211658:
	movq $0x11F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x23C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_466459
L_211659:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_211656
.p2align 0x4
L_466459:
L_211660:
	movq %r14,0x20(%rbp)
	jmp L_211661
.p2align 0x4
.long 0x80D
L_211662:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq $0x1,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_211663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x7B4
L_211663:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_466461
L_211664:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_211665:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x60(%rbp)
	movq $0x1,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_211666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_466461:
L_211673:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x146A
L_211666:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq $0x1,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_211667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x513
L_211667:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211668
L_211675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_211676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211676
.p2align 0x4
.long 0x86B
L_211676:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_211668:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_466463
L_211669:
L_211670:
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_211673
L_211671:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_211665
.p2align 0x4
L_466463:
L_211674:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1937
.hidden x_1937
x_1937:
L_211685:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_211686
L_211850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_211851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211851
.p2align 0x4
.long 0x45C
L_211851:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_211686:
	movq 0x8(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_466498
L_211687:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%r14),%r13
	movq 0x28(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %r15,%rdx
	movq %r13,0x30(%rbp)
	jne L_211689
L_211690:
	testq %rdx,%rdx
	jz L_466496
L_211691:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211759
L_211692:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_211693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211693
.p2align 0x4
.long 0x67E
L_211693:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_211694:
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_2237:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466494
.p2align 0x4,,0x7
L_211695:
	movq 0x50(%rbp),%r13
	cmpq 0x40(%rbp),%r13
	jnl L_466493
L_211781:
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r13d
	movl %r13d,0x78(%rbp)
	movslq %r13d,%r15
	cmpq %r15,%r14
	jne L_211689
L_211783:
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_2244:
	cmpl 0x78(%rbp),%ecx
	je L_211813
L_211784:
	movslq %ecx,%r13
	cmpq %r14,%r13
	jnb L_466490
L_211786:
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0xF2E,%r9
	je L_466466
L_211787:
	incl %ecx
	jo L_466465
L_211788:
	jmp loop_2244
.p2align 0x4
L_466465:
L_211733:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466466:
L_211789:
	cmpl $0x0,0x78(%rbp)
	jl L_466489
L_211790:
	movq $0x1,0x80(%rbp)
	movl $0x0,0x7C(%rbp)
loop_2245:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466488
.p2align 0x4,,0x7
L_211791:
	movl 0x78(%rbp),%r14d
	cmpl %r14d,0x7C(%rbp)
	jl L_466481
L_211792:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_466480
L_211793:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_211794:
	incl %ecx
	jo L_211733
L_211795:
	cmpq $0x1,%r15
	je L_466467
L_211796:
	movq 0x8(%r15),%r15
	jmp L_211794
.p2align 0x4
L_466467:
L_211797:
L_211798:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	testq %r15,%r15
	jnz L_466477
L_211824:
	movq (globalObjptr+0xD48)(%rip),%r15
	movq %r15,0x78(%rbp)
.p2align 0x4,,0x7
L_211802:
	movq 0x80(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2246:
	cmpq 0x60(%rbp),%r15
	jnl L_466469
L_211820:
	cmpq $0x1,%r14
	je L_466468
L_211821:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x78(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2246
.p2align 0x4
L_466468:
L_211757:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466469:
L_211803:
	movq 0x78(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x60(%rbp)
	cmpq %r14,%r11
	jne L_466476
L_211805:
	decl %r13d
	movl %r13d,0x80(%rbp)
	jo L_211733
L_211806:
	testq %r11,%r11
	jnz L_466473
L_211819:
	movq (globalObjptr+0x2278)(%rip),%r15
	movq %r15,0x88(%rbp)
.p2align 0x4,,0x7
L_211810:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2247:
	cmpq 0x60(%rbp),%r15
	jnl L_466471
L_211816:
	movl %r15d,%r14d
	movl 0x80(%rbp),%r13d
	subl %r14d,%r13d
	jo L_211733
L_211817:
	movslq %r13d,%r14
	movq 0x78(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2247
.p2align 0x4
L_466471:
L_211811:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466472
.p2align 0x4,,0x7
L_211812:
	movq 0x88(%rbp),%r14
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
L_211813:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_2237
.p2align 0x4
L_466472:
L_211814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_211815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211815
.p2align 0x4
.long 0x309A
L_211815:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_211812
.p2align 0x4
L_466473:
L_211807:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_466474
L_211808:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_211809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211809
.p2align 0x4
.long 0x3099
L_211809:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
	jmp L_211810
.p2align 0x4
L_466474:
L_211759:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466476:
L_211689:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466477:
L_211799:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211759
L_211800:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_211801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211801
.p2align 0x4
.long 0x3098
L_211801:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x78(%rbp)
	jmp L_211802
.p2align 0x4
L_466480:
L_211825:
	xorl %ecx,%ecx
	jmp L_211798
.p2align 0x4
L_466481:
L_211826:
	movslq 0x7C(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_466482
L_211827:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
L_211828:
	movq %r15,0x80(%rbp)
	incl 0x7C(%rbp)
	jmp loop_2245
.p2align 0x4
L_466482:
L_211829:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE42,%r14
	jne L_466487
L_211831:
	movq 0x0(%r15),%r14
L_211832:
	movq 0x80(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_466486
L_211834:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0xF2E,%r11
	jne L_466485
L_211836:
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xE43,%r10
	jne L_466484
L_211838:
	movq 0x0(%r11),%r10
	movq 0x8(%r14),%r9
	cmpq %r9,0x8(%r10)
	jne L_466483
L_211840:
	jmp L_211828
.p2align 0x4
L_466483:
L_211839:
	movq (globalObjptr+0x2280)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466484:
L_211837:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_211828
.p2align 0x4
L_466485:
L_211835:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_211828
.p2align 0x4
L_466486:
L_211833:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r11,0x8(%r15)
	jmp L_211828
.p2align 0x4
L_466487:
L_211830:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_211828
.p2align 0x4
L_466488:
L_211841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_211842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211842
.p2align 0x4
.long 0x309B
L_211842:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_211791
.p2align 0x4
L_466489:
L_211843:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466490:
L_211725:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466493:
L_211696:
	movq 0x48(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r10
	movq %r10,0x8(%r14)
	movq 0x20(%rbp),%r9
	movq %r9,0x10(%r14)
	movq 0x28(%rbp),%r8
	movq %r8,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x38(%rbp),%r8
	movq %r8,0x28(%r14)
	movq $0x292B,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq %r14,0x0(%rsp)
	movq $0x11ED,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsp,0x0(%rsi)
	movq %rsi,0x50(%rbp)
	addq $0x10,%r12
	movq %r9,0x30(%rbp)
	movq %r11,0x40(%rbp)
	movq %r15,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq %r8,0x18(%rbp)
	movq %r10,0x38(%rbp)
x_710:
	movq 0x10(%rbp),%r15
	movq 0xB0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq $0x1,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_211697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_466494:
L_211845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_211846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211846
.p2align 0x4
.long 0x309C
L_211846:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_211695
.p2align 0x4
L_466496:
L_211848:
	movq (globalObjptr+0x2270)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_211694
.p2align 0x4
L_466498:
L_211849:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x18(%rbp)
	jmp x_710
.p2align 0x4
.long 0x3086
L_211697:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq $0x1,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_211698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3086
L_211698:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211699
L_211779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_211780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211780
.p2align 0x4
.long 0x1731
L_211780:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_211699:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_466500
L_211700:
L_211701:
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq $0x33D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_211702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_466500:
L_211751:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3087
L_211702:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211703
L_211776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_211777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211777
.p2align 0x4
.long 0x3097
L_211777:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_211703:
	movq $0x4377,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x3467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_211704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3088
L_211704:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0xF8(%rbp)
	cmpq %r14,%rdx
	movq %r14,0x50(%rbp)
	jne L_211689
L_211706:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211759
L_211707:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8E9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_211708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211708
.p2align 0x4
.long 0x3089
L_211708:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x108(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2238:
	cmpq 0xF8(%rbp),%r15
	jnl L_466503
L_211774:
	movq 0x108(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2238
.p2align 0x4
L_466503:
L_211709:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0xF8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_211710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211710
.p2align 0x4
.long 0x308A
L_211710:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq %rax,0x110(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2239:
	cmpq 0xF8(%rbp),%r15
	jnl L_466504
L_211773:
	movq 0x110(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2239
.p2align 0x4
L_466504:
L_211711:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0xF8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_211712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211712
.p2align 0x4
.long 0x308B
L_211712:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq %rax,0x118(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2240:
	cmpq 0xF8(%rbp),%r15
	jnl L_466505
L_211772:
	movq 0x118(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2240
.p2align 0x4
L_466505:
L_211713:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0xF8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_211714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211714
.p2align 0x4
.long 0x308C
L_211714:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x120(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2241:
	cmpq 0xF8(%rbp),%r15
	jnl L_466506
L_211771:
	movq 0x120(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2241
.p2align 0x4
L_466506:
L_211715:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211716
L_211769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_211770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211770
.p2align 0x4
.long 0x3096
L_211770:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_211716:
	movq $0x8D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x138(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x140(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0x148(%rbp)
	movq %r15,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x138,%rbp
	leaq (L_211717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_1
.p2align 0x4
.long 0x308D
L_211717:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211718
L_211767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_211768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211768
.p2align 0x4
.long 0x3095
L_211768:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_211718:
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x8EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0xB0(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0xB8(%rbp),%r10
	movq %r10,0x20(%r15)
	movq 0xC0(%rbp),%r9
	movq %r9,0x28(%r15)
	movq 0xC8(%rbp),%r8
	movq %r8,0x30(%r15)
	movq 0xD0(%rbp),%rbx
	movq %rbx,0x38(%r15)
	movq $0x8ED,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x8(%rsp)
	addq $0x40,%r12
	movq %r14,0x0(%rsp)
	movq %r14,0xE0(%rbp)
	movq %r11,0x10(%rsp)
	movq %r10,0x18(%rsp)
	movq %r9,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rbx,0x30(%rsp)
	movq %rsp,0xE8(%rbp)
	movq $0x8F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0xF0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0xF8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_211719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211719
.p2align 0x4
.long 0x308E
L_211719:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq %rax,0xD8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2242:
	cmpq 0xF8(%rbp),%r15
	jnl L_466510
L_211766:
	movq 0xD8(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2242
.p2align 0x4
L_466510:
L_211720:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x210,%r15
	jnb L_211721
L_211764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x210,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_211765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211765
.p2align 0x4
.long 0x3094
L_211765:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_211721:
	movq $0x8EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xB0(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0xE0(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x110(%rbp),%r9
	movq %r9,0x20(%r15)
	movq 0x20(%rbp),%r8
	movq %r8,0x28(%r15)
	movq 0xE8(%rbp),%rsp
	movq %rsp,0x30(%r15)
	movq 0x120(%rbp),%rsi
	movq %rsi,0x38(%r15)
	movq $0x8D7,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	addq $0x40,%r12
	movq 0xD0(%rbp),%rdi
	movq %rdi,0x0(%rsi)
	movq 0xC8(%rbp),%rdx
	movq %rdx,0x8(%rsi)
	movq %r14,0x10(%rsi)
	movq %r13,0x18(%rsi)
	movq %r11,0x20(%rsi)
	movq 0xA0(%rbp),%rcx
	movq %rcx,0x28(%rsi)
	movq 0xA8(%rbp),%rcx
	movq %rcx,0x30(%rsi)
	movq $0x6FB,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x130(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%rcx)
	movq $0x8F1,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	addq $0x80,%r12
	movq %rdi,0x0(%rbx)
	movq %rdx,0x8(%rbx)
	movq %r14,0x10(%rbx)
	movq %r13,0x18(%rbx)
	movq %r11,0x20(%rbx)
	movq %r10,0x28(%rbx)
	movq 0x68(%rbp),%rax
	movq %rax,0x30(%rbx)
	movq 0x70(%rbp),%rcx
	movq %rcx,0x38(%rbx)
	movq 0x78(%rbp),%rcx
	movq %rcx,0x40(%rbx)
	movq 0x80(%rbp),%rcx
	movq %rcx,0x48(%rbx)
	movq 0x88(%rbp),%rcx
	movq %rcx,0x50(%rbx)
	movq 0x90(%rbp),%rcx
	movq %rcx,0x58(%rbx)
	movq %rsi,0x60(%rbx)
	movq 0x98(%rbp),%rcx
	movq %rcx,0x68(%rbx)
	movq 0x100(%rbp),%rcx
	movq %rcx,0x70(%rbx)
	movq $0x8F5,0x0(%r12)
	movq %r12,%rax
	addq $0x8,%rax
	movq %rax,0x138(%rbp)
	movq %r15,0x58(%rax)
	movq %rbx,0xA8(%rax)
	movq %rsi,0xC0(%rax)
	movq %r15,0xC8(%rax)
	addq $0xF8,%r12
	movq %rsp,0x0(%rax)
	movq %rdi,0x8(%rax)
	movq %rdx,0x10(%rax)
	movq %r14,0x18(%rax)
	movq %r13,0x20(%rax)
	movq %r11,0x28(%rax)
	movq %r10,0x30(%rax)
	movq %r9,0x38(%rax)
	movq %r8,0x40(%rax)
	movq %rcx,0x48(%rax)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rax)
	movq 0x118(%rbp),%r15
	movq %r15,0x60(%rax)
	movq 0xD8(%rbp),%r15
	movq %r15,0x68(%rax)
	movq 0x128(%rbp),%r15
	movq %r15,0x70(%rax)
	movq %r10,0x78(%rax)
	movq %r15,0x80(%rax)
	movq 0xF0(%rbp),%r15
	movq %r15,0x88(%rax)
	movq %r10,0x90(%rax)
	movq 0x130(%rbp),%r15
	movq %r15,0x98(%rax)
	movq %r10,0xA0(%rax)
	movq %r10,0xB0(%rax)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rax)
	movq 0x90(%rbp),%r15
	movq %r15,0xD0(%rax)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rax)
	movq %r8,0xE0(%rax)
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rax)
	movq 0x40(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_211722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x308F
L_211722:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211723
L_211762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_211763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211763
.p2align 0x4
.long 0x3093
L_211763:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_211723:
	movslq 0x40(%rbp),%r15
	cmpq 0xF8(%rbp),%r15
	jnb L_211725
L_211726:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_211727:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_466513
L_211729:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
L_466513:
L_211728:
	movq (globalObjptr+0x2230)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3090
L_211730:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x130(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r13
	je L_466524
L_211731:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_211732:
	incl %ecx
	jo L_211733
L_211734:
	cmpq $0x1,%r15
	je L_466516
L_211735:
	movq 0x8(%r15),%r15
	jmp L_211732
.p2align 0x4
L_466516:
L_211736:
L_211737:
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_466522
L_211738:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211759
L_211739:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_211740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211740
.p2align 0x4
.long 0x3091
L_211740:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_211741:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2243:
	cmpq 0x58(%rbp),%r15
	jnl L_466518
L_211754:
	cmpq $0x1,%r14
	je L_211757
L_211755:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2243
.p2align 0x4
L_466518:
L_211742:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211743
L_211752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_211753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211753
.p2align 0x4
.long 0x3092
L_211753:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_211743:
	movq 0x60(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x40(%rbp),%r14
	cmpq 0x50(%rbp),%r14
	jnb L_211725
L_211745:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r10,0x0(%r14)
	addq $0x38,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x292B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x50(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x11EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x1,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_211746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_466522:
L_211760:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_211741
.p2align 0x4
L_466524:
L_211761:
	xorl %ecx,%ecx
	jmp L_211737
.p2align 0x4
.long 0xB79
L_211746:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq $0x1,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_211747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0xB78
L_211747:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_211751
L_211748:
L_211749:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1881
.hidden x_1881
x_1881:
L_211852:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_214082
L_211853:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x328,%r15
	jb L_466647
L_211854:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_466643
L_211855:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x235C,%rax
	cmpq $0x7,%rax
	ja L_466526
	jmp *jumpTable_681(,%rax,8)
.data
.p2align 0x4
jumpTable_681:
.quad L_466622,L_466621,L_466618,L_466617,L_466602,L_466593,L_466560,L_466527
.text
.p2align 0x4
L_466526:
L_211856:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x84B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	addq $0x28,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp addProfile_0
.p2align 0x4
L_466527:
L_213731:
	movq 0x0(%rbp),%r14
	movq 0xC8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0xA0(%rbp)
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq %r10,0xA8(%rbp)
	movq 0x28(%r14),%r9
	movq %r9,0xB0(%rbp)
	movq 0x20(%r14),%r8
	movq %r8,0xB8(%rbp)
	movq 0x18(%r14),%rsp
	movq %rsp,0xC0(%rbp)
	movq 0x10(%r14),%rsi
	movq %rsi,0xC8(%rbp)
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq %rdx,0xD0(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%rdx
	movq %rdx,0xD8(%rbp)
	movq 0x8(%r14),%rdx
	movq %rdx,0xE0(%rbp)
	movq 0x10(%r14),%rdx
	movq %rdx,0xE8(%rbp)
	movq 0x18(%r14),%rcx
	movq %rcx,0xF0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rdi),%rcx
	movq %rcx,0x100(%rbp)
	movq $0x92F,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x108(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%rdi)
	movq %r14,0x8(%rdi)
	movq %r10,0x10(%rdi)
	movq %r9,0x18(%rdi)
	movq %r8,0x20(%rdi)
	movq %rsp,0x28(%rdi)
	movq %rsi,0x30(%rdi)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA59,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x110(%rbp)
	movq %r14,0x38(%rbx)
	addq $0x48,%r12
	movq %rsi,0x0(%rbx)
	movq %rsp,0x8(%rbx)
	movq %r8,0x10(%rbx)
	movq %r9,0x18(%rbx)
	movq %r10,0x20(%rbx)
	movq %rdi,0x28(%rbx)
	movq %rcx,0x30(%rbx)
	movq $0xA5B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x118(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%r14)
	movq %rbx,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r8,0x20(%r14)
	movq %rsp,0x28(%r14)
	movq %rsi,0x30(%r14)
	movq $0xA5F,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x120(%rbp)
	movq %r15,0x0(%rdi)
	movq %r11,0x30(%rdi)
	addq $0x48,%r12
	movq %rsi,0x8(%rdi)
	movq %rsp,0x10(%rdi)
	movq %r8,0x18(%rdi)
	movq %r9,0x20(%rdi)
	movq %r10,0x28(%rdi)
	movq %rbx,0x38(%rdi)
	movq $0xA5D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x128(%rbp)
	addq $0x18,%r12
	movq %rbx,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x130(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x138(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%rdi)
	movq %r11,0x8(%rdi)
	movq $0x89,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x140(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%rbx)
	movq %r11,0x8(%rbx)
	movq $0x8FD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x148(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %r10,0x10(%r11)
	movq %r9,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %rsp,0x28(%r11)
	movq %rsi,0x30(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x150(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x158(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x160(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x168(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	movq $0xD43,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq %rbx,0x0(%r13)
	movq %r14,0x8(%r13)
	cmpq $0x1,%rdx
	je L_213777
L_213732:
	movq 0x8(%rdx),%r14
	movq %r14,0x178(%rbp)
	movq 0x0(%rdx),%r15
.p2align 0x4,,0x7
L_213733:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x188(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x198(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x1A0(%rbp)
	cmpq %r15,%r11
	jne L_211861
L_213735:
	testq %r11,%r11
	jnz L_466556
L_214070:
	movq (globalObjptr+0x22E8)(%rip),%r15
	movq %r15,0x1A8(%rbp)
.p2align 0x4,,0x7
L_213739:
	movq $0x0,0x1B0(%rbp)
.p2align 0x4,,0x7
loop_2286:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466555
.p2align 0x4,,0x7
L_213740:
	movq 0x1A0(%rbp),%r15
	cmpq %r15,0x1B0(%rbp)
	jl L_466554
L_213741:
	movq 0x1A8(%rbp),%r15
	movq $0xB8F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x188(%rbp),%r15
	cmpq $0x1,%r15
	je L_466552
L_213742:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x198(%rbp)
	cmpq %r14,%r11
	jne L_211861
L_213744:
	testq %r11,%r11
	jnz L_466549
L_214026:
	movq (globalObjptr+0x7310)(%rip),%r15
	movq %r15,0x1A0(%rbp)
.p2align 0x4,,0x7
L_213748:
	movq $0x0,0x1B0(%rbp)
.p2align 0x4,,0x7
loop_2287:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466548
.p2align 0x4,,0x7
L_213749:
	movq 0x198(%rbp),%r15
	cmpq %r15,0x1B0(%rbp)
	jl L_466547
L_213750:
	movq 0x1A0(%rbp),%r15
	movq $0xB8F,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x1,0x180(%rbp)
	je L_466546
L_213751:
	movq %r15,0x188(%rbp)
L_213752:
	movq 0x180(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x198(%rbp)
	cmpq %r14,%r11
	jne L_466545
L_213754:
	testq %r11,%r11
	jnz L_466543
L_214011:
	movq (globalObjptr+0x7318)(%rip),%r15
	movq %r15,0x1A0(%rbp)
.p2align 0x4,,0x7
L_213758:
	movq $0x0,0x1B0(%rbp)
.p2align 0x4,,0x7
loop_2288:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466542
.p2align 0x4,,0x7
L_213759:
	movq 0x198(%rbp),%r13
	cmpq %r13,0x1B0(%rbp)
	jl L_466541
L_213760:
	movq 0x1A0(%rbp),%r14
	movq $0xB8F,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x188(%rbp),%r15
L_213761:
	movq $0x136F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x180(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x1A8(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x190(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x188(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_466540
L_213762:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_466539
L_213763:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_213765:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213766
L_213990:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD45,%r13
	jne L_213766
L_213991:
	movq 0x150(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_466534
L_213766:
	incl %ecx
	movl %ecx,0x190(%rbp)
	jo L_466533
L_213767:
	cmpq $0x1,%r15
	je L_466528
L_213768:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213765
.p2align 0x4
L_466528:
L_213769:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466532
.p2align 0x4,,0x7
L_213770:
	movl 0x190(%rbp),%ecx
L_213771:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_466531
L_213772:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213774
L_213987:
	movl %ecx,0x0(%r15)
L_213774:
	movq $0x1A8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x188(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x178(%rbp),%r14
	cmpq $0x1,%r14
	je L_466529
L_213775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x178(%rbp)
	jmp L_213733
.p2align 0x4
L_466529:
L_213777:
	movq $0xCA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x110(%rbp)
	addq $0x68,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x90(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x168(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x158(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0xA0(%rbp),%r10
	movq %r10,0x38(%r15)
	movq 0x128(%rbp),%r9
	movq %r9,0x40(%r15)
	movq %r14,0x48(%r15)
	movq %r10,0x50(%r15)
	movq %r13,0x58(%r15)
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r13
	movq 0x28(%r15),%r8
	movq 0x20(%r15),%rsp
	movq 0x38(%r15),%rsi
	movq 0x8(%rsi),%rdi
	movq $0x3D55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x60,%r12
	movq 0x70(%rbp),%rsi
	movq %rsi,0x0(%r15)
	movq 0x118(%rbp),%rsi
	movq %rsi,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0x120(%rbp),%rdx
	movq %rdx,0x18(%r15)
	movq %r14,0x20(%r15)
	movq %rsi,0x28(%r15)
	movq %r14,0x30(%r15)
	movq %r9,0x38(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x48(%r15)
	movq %r10,0x50(%r15)
	movq $0xCA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movq %rdi,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r8,0x18(%r14)
	movq %rsp,0x20(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF40)(%rip),%r15
	movq $0xB8F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xD8(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq %r11,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_213778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_70
.p2align 0x4
L_466531:
L_211969:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466532:
L_213988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_213989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213989
.p2align 0x4
.long 0x31A0
L_213989:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_213770
.p2align 0x4
L_466533:
L_211890:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466534:
L_213993:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213994:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212434
L_213996:
	movl %ecx,0x0(%r15)
L_212434:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466539:
L_213997:
	xorl %ecx,%ecx
	jmp L_213771
.p2align 0x4
L_466540:
L_211958:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466541:
L_213998:
	movq 0x1B0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x180(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (makeValue_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_466542:
L_214008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_214009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214009
.p2align 0x4
.long 0x31A3
L_214009:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	jmp L_213759
.p2align 0x4
L_466543:
L_213755:
	movq 0x198(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_466544
L_213756:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_213757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213757
.p2align 0x4
.long 0x3178
L_213757:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq %rax,0x1A0(%rbp)
	jmp L_213758
.p2align 0x4
L_466544:
L_211895:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466545:
L_211861:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466546:
L_214012:
	movq $0x1,%r14
	jmp L_213761
.p2align 0x4
L_466547:
L_214013:
	movq 0x1B0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x188(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (makeValue_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_466548:
L_214023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_214024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214024
.p2align 0x4
.long 0x31A3
L_214024:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	jmp L_213749
.p2align 0x4
L_466549:
L_213745:
	movq 0x198(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213746:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_213747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213747
.p2align 0x4
.long 0x3178
L_213747:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq %rax,0x1A0(%rbp)
	jmp L_213748
.p2align 0x4
L_466552:
L_214027:
	cmpq $0x1,0x180(%rbp)
	je L_466553
L_214028:
	movq $0x1,0x188(%rbp)
	jmp L_213752
.p2align 0x4
L_466553:
L_214029:
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_213761
.p2align 0x4
L_466554:
L_214030:
	movq 0x1B0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x198(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x1C8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x1B8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (makeValue_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_466555:
L_214067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_214068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214068
.p2align 0x4
.long 0x31A7
L_214068:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	jmp L_213740
.p2align 0x4
L_466556:
L_213736:
	movq 0x1A0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213737:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_213738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213738
.p2align 0x4
.long 0x3177
L_213738:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq %rax,0x1A8(%rbp)
	jmp L_213739
.p2align 0x4
L_466560:
L_213205:
	movq 0x0(%rbp),%r14
	movq 0xC8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq %r10,0xA8(%rbp)
	movq 0x28(%r14),%r9
	movq %r9,0xB0(%rbp)
	movq 0x20(%r14),%r8
	movq %r8,0xB8(%rbp)
	movq 0x18(%r14),%rsp
	movq %rsp,0xC0(%rbp)
	movq 0x10(%r14),%rsi
	movq %rsi,0xC8(%rbp)
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq %rdx,0xD0(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%rdx
	movq %rdx,0xD8(%rbp)
	movq 0x8(%r14),%rdx
	movq %rdx,0xE0(%rbp)
	movq 0x10(%r14),%rdx
	movq %rdx,0xE8(%rbp)
	movq 0x18(%r14),%rcx
	movq %rcx,0xF0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rdi),%rcx
	movq %rcx,0x100(%rbp)
	movq $0x92F,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x108(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%rdi)
	movq %r14,0x8(%rdi)
	movq %r10,0x10(%rdi)
	movq %r9,0x18(%rdi)
	movq %r8,0x20(%rdi)
	movq %rsp,0x28(%rdi)
	movq %rsi,0x30(%rdi)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA69,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x110(%rbp)
	movq %r14,0x10(%rbx)
	addq $0x20,%r12
	movq %r11,0x0(%rbx)
	movq %rdi,0x8(%rbx)
	movq $0xA6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x118(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%r14)
	movq %rbx,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r8,0x20(%r14)
	movq %rsp,0x28(%r14)
	movq %rsi,0x30(%r14)
	movq $0xA6F,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x120(%rbp)
	movq %r15,0x28(%rdi)
	addq $0x40,%r12
	movq %rsi,0x0(%rdi)
	movq %rsp,0x8(%rdi)
	movq %r8,0x10(%rdi)
	movq %r9,0x18(%rdi)
	movq %r10,0x20(%rdi)
	movq %rbx,0x30(%rdi)
	movq $0xA6D,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x128(%rbp)
	movq %r11,0x0(%rdi)
	addq $0x20,%r12
	movq %rbx,0x8(%rdi)
	movq %r14,0x10(%rdi)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x130(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x138(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%rdi)
	movq %r11,0x8(%rdi)
	movq $0x8FD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x140(%rbp)
	movq %r15,0x8(%r11)
	addq $0x40,%r12
	movq %rcx,0x0(%r11)
	movq %r10,0x10(%r11)
	movq %r9,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %rsp,0x28(%r11)
	movq %rsi,0x30(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x148(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x150(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x158(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x160(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	movq $0xD41,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq %rdi,0x0(%r13)
	movq %r14,0x8(%r13)
	cmpq $0x1,%rdx
	je L_213251
L_213206:
	movq 0x8(%rdx),%r14
	movq %r14,0x170(%rbp)
	movq 0x0(%rdx),%r15
.p2align 0x4,,0x7
L_213207:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x188(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x198(%rbp)
	cmpq %r11,%r15
	jne L_211861
L_213209:
	testq %r11,%r11
	jnz L_466589
L_213729:
	movq (globalObjptr+0x2380)(%rip),%r15
	movq %r15,0x1A0(%rbp)
.p2align 0x4,,0x7
L_213213:
	movq $0x0,0x1A8(%rbp)
.p2align 0x4,,0x7
loop_2278:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466588
.p2align 0x4,,0x7
L_213214:
	movq 0x198(%rbp),%r15
	cmpq %r15,0x1A8(%rbp)
	jl L_466587
L_213215:
	movq 0x1A0(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x180(%rbp),%r15
	cmpq $0x1,%r15
	je L_466585
L_213216:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x190(%rbp)
	cmpq %r14,%r11
	jne L_211861
L_213218:
	testq %r11,%r11
	jnz L_466582
L_213688:
	movq (globalObjptr+0x72E0)(%rip),%r15
	movq %r15,0x198(%rbp)
.p2align 0x4,,0x7
L_213222:
	movq $0x0,0x1A8(%rbp)
.p2align 0x4,,0x7
loop_2279:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466581
.p2align 0x4,,0x7
L_213223:
	movq 0x190(%rbp),%r15
	cmpq %r15,0x1A8(%rbp)
	jl L_466580
L_213224:
	movq 0x198(%rbp),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x1,0x178(%rbp)
	je L_466579
L_213225:
	movq %r15,0x180(%rbp)
L_213226:
	movq 0x178(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x190(%rbp)
	cmpq %r11,%r14
	jne L_211861
L_213228:
	testq %r11,%r11
	jnz L_466576
L_213673:
	movq (globalObjptr+0x72E8)(%rip),%r15
	movq %r15,0x198(%rbp)
.p2align 0x4,,0x7
L_213232:
	movq $0x0,0x1A8(%rbp)
.p2align 0x4,,0x7
loop_2280:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466575
.p2align 0x4,,0x7
L_213233:
	movq 0x190(%rbp),%r13
	cmpq %r13,0x1A8(%rbp)
	jl L_466574
L_213234:
	movq 0x198(%rbp),%r14
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x180(%rbp),%r15
L_213235:
	movq $0x1369,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x178(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x1A0(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x188(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x180(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_213236:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_466572
L_213237:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_213239:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213240
L_213652:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4B,%r13
	jne L_213240
L_213653:
	movq 0x148(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_466567
L_213240:
	incl %ecx
	movl %ecx,0x188(%rbp)
	jo L_211890
L_213241:
	cmpq $0x1,%r15
	je L_466561
L_213242:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213239
.p2align 0x4
L_466561:
L_213243:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466565
.p2align 0x4,,0x7
L_213244:
	movl 0x188(%rbp),%ecx
L_213245:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213246:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213248
L_213649:
	movl %ecx,0x0(%r15)
L_213248:
	movq $0x1A97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x180(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x170(%rbp),%r14
	cmpq $0x1,%r14
	je L_466562
L_213249:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x170(%rbp)
	jmp L_213207
.p2align 0x4
L_466562:
L_213251:
	movq $0xCA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x110(%rbp)
	addq $0x58,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x160(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x150(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x128(%rbp),%r10
	movq %r10,0x38(%r15)
	movq %r14,0x40(%r15)
	movq %r13,0x48(%r15)
	movq 0x68(%rbp),%r15
	movq 0x30(%r15),%r13
	movq 0x28(%r15),%r9
	movq 0x20(%r15),%r8
	movq 0x38(%r15),%rsp
	movq 0x8(%rsp),%rsi
	movq $0x3D51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x58,%r12
	movq 0x78(%rbp),%rsp
	movq %rsp,0x0(%r15)
	movq 0x118(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0x120(%rbp),%rdi
	movq %rdi,0x18(%r15)
	movq %r14,0x20(%r15)
	movq %rsp,0x28(%r15)
	movq %r14,0x30(%r15)
	movq %r10,0x38(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x48(%r15)
	movq $0xCA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movq %rsi,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r8,0x20(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF00)(%rip),%r15
	movq $0xB91,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xD8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq %r11,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_213252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_466565:
L_213650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_213651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213651
.p2align 0x4
.long 0x2B0F
L_213651:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	jmp L_213244
.p2align 0x4
L_466567:
L_213655:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213656:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212434
L_213658:
	movl %ecx,0x0(%r15)
	jmp L_212434
.p2align 0x4
L_466572:
L_213659:
	xorl %ecx,%ecx
	jmp L_213245
.p2align 0x4
L_466574:
L_213660:
	movq 0x1A8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x178(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_213661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_466575:
L_213670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_213671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213671
.p2align 0x4
.long 0x3172
L_213671:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_213233
.p2align 0x4
L_466576:
L_213229:
	movq 0x190(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213230:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_213231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213231
.p2align 0x4
.long 0x313A
L_213231:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq %rax,0x198(%rbp)
	jmp L_213232
.p2align 0x4
L_466579:
L_213674:
	movq $0x1,%r14
	jmp L_213235
.p2align 0x4
L_466580:
L_213675:
	movq 0x1A8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x180(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_213676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_466581:
L_213685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_213686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213686
.p2align 0x4
.long 0x3172
L_213686:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_213223
.p2align 0x4
L_466582:
L_213219:
	movq 0x190(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213220:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_213221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213221
.p2align 0x4
.long 0x313A
L_213221:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq %rax,0x198(%rbp)
	jmp L_213222
.p2align 0x4
L_466585:
L_213689:
	cmpq $0x1,0x178(%rbp)
	je L_466586
L_213690:
	movq $0x1,0x180(%rbp)
	jmp L_213226
.p2align 0x4
L_466586:
L_213691:
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_213235
.p2align 0x4
L_466587:
L_213692:
	movq 0x1A8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x190(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x1C0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (L_213693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_466588:
L_213726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_213727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213727
.p2align 0x4
.long 0x3176
L_213727:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_213214
.p2align 0x4
L_466589:
L_213210:
	movq 0x198(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213211:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_213212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213212
.p2align 0x4
.long 0x3139
L_213212:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq %rax,0x1A0(%rbp)
	jmp L_213213
.p2align 0x4
L_466593:
L_213019:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r14
	je L_466601
L_213020:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_213021:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	cmpq $0x1,%r14
	jne L_466600
.p2align 0x4,,0x7
length_39:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466599
.p2align 0x4,,0x7
L_213035:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_213037:
	movq (globalObjptr+0x810)(%rip),%r15
	cmpl %r13d,0x0(%r15)
	jl L_466595
L_213038:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_466594
L_213039:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_213021
.p2align 0x4
L_466594:
L_213041:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466595:
L_213042:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_466597
L_213043:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1494,%r14
	je L_466596
L_213182:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x0(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0xF0(%rbp)
	movq $0x927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC93,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x347D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xE8(%rbp)
	leaq L_213191(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xE8,%rbp
	leaq (L_213183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_466596:
L_213044:
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
L_213045:
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (loop_2276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
L_466597:
L_213195:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466599:
L_213196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_213197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213197
.p2align 0x4
.long 0x2BE7
L_213197:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_213035
.p2align 0x4
L_466600:
L_213022:
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_213023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_466601:
L_213204:
	movq $0x1,%r15
	jmp L_213041
.p2align 0x4
L_466602:
L_212959:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq $0xCAD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r13
	je L_466616
L_212960:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_212961:
	incl %ecx
	jo L_211890
L_212962:
	cmpq $0x1,%r15
	je L_466603
L_212963:
	movq 0x8(%r15),%r15
	jmp L_212961
.p2align 0x4
L_466603:
L_212964:
L_212965:
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_466614
L_212966:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212967:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1553,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_212968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212968
.p2align 0x4
.long 0x7AF
L_212968:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_212969:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2272:
	cmpq 0x50(%rbp),%r15
	jnl L_466605
L_213013:
	cmpq $0x1,%r14
	je L_466604
L_213014:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x58(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2272
.p2align 0x4
L_466604:
L_212222:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466605:
L_212970:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212971
L_213011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_213012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213012
.p2align 0x4
.long 0x3129
L_213012:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_212971:
	movq 0x58(%rbp),%r15
	movq $0xCAB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	movq %r11,0x50(%rbp)
	cmpq %r14,%r11
	jne L_211861
L_212973:
	movq $0x436D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	cmpl $0x0,%r13d
	jl L_466610
L_212974:
	movl $0x0,0x4C(%rbp)
loop_2273:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x4C(%rbp)
	jl L_466609
L_212975:
	movq 0x50(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212976:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_212977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212977
.p2align 0x4
.long 0x3121
L_212977:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2274:
	cmpq 0x50(%rbp),%r15
	jnl L_466606
L_213001:
	movq 0x70(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2274
.p2align 0x4
L_466606:
L_212978:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212979
L_212999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_213000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213000
.p2align 0x4
.long 0x3126
L_213000:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_212979:
	movq $0xCAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_212980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_7
.p2align 0x4
L_466609:
L_213003:
	movslq 0x4C(%rbp),%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_213004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_466610:
L_213010:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466614:
L_213017:
	movq (globalObjptr+0x2218)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_212969
.p2align 0x4
L_466616:
L_213018:
	xorl %ecx,%ecx
	jmp L_212965
.p2align 0x4
L_466617:
L_212958:
	movq 0x0(%rbp),%r15
	movq 0xF8(%r15),%r14
	movq 0xF0(%r15),%r13
	movq 0xE8(%r15),%r11
	movq 0xE0(%r15),%r10
	movq 0xD8(%r15),%r9
	movq 0xD0(%r15),%r8
	movq 0xC8(%r15),%rsp
	movq 0xC0(%r15),%rsi
	movl 0x14(%r15),%edi
	movq 0xB8(%r15),%rdx
	movq 0xB0(%r15),%rcx
	movq 0xA8(%r15),%rbx
	movq 0xA0(%r15),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%r15),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%r15),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%r15),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%r15),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%r15),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%r15),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%r15),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%r15),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%r15),%rax
	movq %rax,(localObjptr+0xA0)(%rip)
	movq 0x50(%r15),%rax
	movq %rax,(localObjptr+0xA8)(%rip)
	movq 0x48(%r15),%rax
	movq %rax,(localObjptr+0xB0)(%rip)
	movq 0x40(%r15),%rax
	movq %rax,(localObjptr+0xB8)(%rip)
	movq 0x38(%r15),%rax
	movq %rax,(localObjptr+0xC0)(%rip)
	movq 0x30(%r15),%rax
	movq %rax,(localObjptr+0xC8)(%rip)
	movl 0x10(%r15),%eax
	movq %rbx,(localObjptr+0x50)(%rip)
	movq 0x8(%r15),%rbx
	movq %rcx,(localObjptr+0x48)(%rip)
	movq 0x0(%r15),%rcx
	movq %rdx,(localObjptr+0x40)(%rip)
	movq 0x28(%r15),%rdx
	movq %rdx,(localObjptr+0xD0)(%rip)
	movq 0x20(%r15),%rdx
	movq %rdx,(localObjptr+0xD8)(%rip)
	movq 0x18(%r15),%rdx
	movq $0x375,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rbx,0x0(%r15)
	movq %rcx,0x8(%r15)
	movl %edi,0x10(%r15)
	movl %eax,0x14(%r15)
	movq %r14,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r11,0x28(%r15)
	movq %r10,0x30(%r15)
	movq %r9,0x38(%r15)
	movq %r8,0x40(%r15)
	movq %rsp,0x48(%r15)
	movq %rsi,0x50(%r15)
	movq (localObjptr+0x40)(%rip),%r14
	movq %r14,0x58(%r15)
	movq (localObjptr+0x48)(%rip),%r14
	movq %r14,0x60(%r15)
	movq (localObjptr+0x50)(%rip),%r14
	movq %r14,0x68(%r15)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x60)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x68)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x70)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x78)(%rip),%r14
	movq %r14,0x90(%r15)
	movq (localObjptr+0x80)(%rip),%r14
	movq %r14,0x98(%r15)
	movq (localObjptr+0x88)(%rip),%r14
	movq %r14,0xA0(%r15)
	movq (localObjptr+0x90)(%rip),%r14
	movq %r14,0xA8(%r15)
	movq (localObjptr+0x98)(%rip),%r14
	movq %r14,0xB0(%r15)
	movq (localObjptr+0xA0)(%rip),%r14
	movq %r14,0xB8(%r15)
	movq (localObjptr+0xA8)(%rip),%r14
	movq %r14,0xC0(%r15)
	movq (localObjptr+0xB0)(%rip),%r14
	movq %r14,0xC8(%r15)
	movq (localObjptr+0xB8)(%rip),%r14
	movq %r14,0xD0(%r15)
	movq (localObjptr+0xC0)(%rip),%r14
	movq %r14,0xD8(%r15)
	movq (localObjptr+0xC8)(%rip),%r14
	movq %r14,0xE0(%r15)
	movq (localObjptr+0xD0)(%rip),%r14
	movq %r14,0xE8(%r15)
	movq (localObjptr+0xD8)(%rip),%r14
	movq %r14,0xF0(%r15)
	movq %rdx,0xF8(%r15)
	addq $0x108,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp shrink_1
.p2align 0x4
L_466618:
L_212887:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r14
	je L_466620
L_212888:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_212889:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x80(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x90(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x98(%rbp)
	movslq %r14d,%r11
	movq %r11,0xA0(%rbp)
	cmpq %r11,%r15
	jne L_211861
L_212891:
	movq $0x4369,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xB0(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq $0x3493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_212892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_466620:
L_212957:
	movq $0x1,%r15
L_212922:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466621:
L_211909:
	movq 0x0(%rbp),%r15
	movq 0x80(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x88(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r8
	movq %r8,0x98(%rbp)
	movq 0x8(%r15),%r8
	movq %r8,0xA0(%rbp)
	movq 0x10(%r15),%r8
	movq %r8,0xA8(%rbp)
	movq 0x18(%r15),%r8
	movq %r8,0xB0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xB1,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0xC0(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%rsp)
	movq %r9,0x8(%rsp)
	movq %r15,0x10(%rsp)
	movq $0x71,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0xB1,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0xC8(%rbp)
	addq $0x20,%r12
	movq %r9,0x0(%rsi)
	movq %r10,0x8(%rsi)
	movq %r9,0x10(%rsi)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xD0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rdi)
	movl $0x0,0x4(%rdi)
	movq $0x703,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0xE0(%rbp)
	addq $0x18,%r12
	movq %r10,0x0(%rdx)
	movq %rdi,0x8(%rdx)
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0xB1,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0xF0(%rbp)
	addq $0x20,%r12
	movq %r10,0x0(%rdi)
	movq %r11,0x8(%rdi)
	movq %r10,0x10(%rdi)
	movq $0x71,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0xF8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rcx)
	movl $0x0,0x4(%rcx)
	movq $0xB1,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x100(%rbp)
	addq $0x20,%r12
	movq %rcx,0x0(%rbx)
	movq %r11,0x8(%rbx)
	movq %rcx,0x10(%rbx)
	movq $0x89,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x108(%rbp)
	addq $0x18,%r12
	movq %rcx,0x0(%rbx)
	movq %rcx,0x8(%rbx)
	movq $0x71,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x110(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rcx)
	movl $0x0,0x4(%rcx)
	movq $0x47B,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x118(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%rbx)
	movq %rcx,0x8(%rbx)
	movq $0x74D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x120(%rbp)
	addq $0x20,%r12
	movq %rsp,0x0(%r11)
	movq %rsi,0x8(%r11)
	movq %rdx,0x10(%r11)
	movq $0x759,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x128(%rbp)
	addq $0x28,%r12
	movq %r10,0x0(%rcx)
	movq %r10,0x8(%rcx)
	movq %r11,0x10(%rcx)
	movq %rdi,0x18(%rcx)
	movq $0x705,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x48,%r12
	movq %rsi,0x0(%r10)
	movq %rsi,0x8(%r10)
	movq %rdx,0x10(%r10)
	movq %rdi,0x18(%r10)
	movq %rdi,0x20(%r10)
	movq %rdi,0x28(%r10)
	movq %rsp,0x30(%r10)
	movq %rdi,0x38(%r10)
	movq $0x75B,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x130(%rbp)
	movq %r10,0x20(%rdx)
	addq $0x40,%r12
	movq %rdi,0x0(%rdx)
	movq %rsp,0x8(%rdx)
	movq %rdi,0x10(%rdx)
	movq %rdi,0x18(%rdx)
	movq %r11,0x28(%rdx)
	movq %rcx,0x30(%rdx)
	movq $0x324F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r9,0x30(%r11)
	movq %r14,0x38(%r11)
	addq $0x48,%r12
	movq %rsp,0x0(%r11)
	movq %rsi,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r15,0x18(%r11)
	movq %r11,0x140(%rbp)
	movq %r8,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_466622:
L_211857:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movb $0x7,0x0(%r13)
	cmpq $0x1,%r15
	je L_466642
L_211858:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1,0x40(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_211859:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x78(%rbp)
	cmpq %r15,%r11
	jne L_211861
L_211862:
	testq %r11,%r11
	jnz L_466639
L_211907:
	movq (globalObjptr+0x7270)(%rip),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_211866:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466638
.p2align 0x4,,0x7
L_211867:
	movq $0x0,0x88(%rbp)
loop_2248:
	movq 0x78(%rbp),%r14
	cmpq %r14,0x88(%rbp)
	jl L_466624
L_211868:
	movq 0x80(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_466623
L_211869:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_211859
.p2align 0x4
L_466623:
L_211870:
L_211871:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466624:
L_211872:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0xA0(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0xA8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0xB0(%rbp)
	cmpq %r13,%r15
	jne L_211861
L_211874:
	testq %r13,%r13
	jnz L_466635
L_211903:
	movq (globalObjptr+0x7278)(%rip),%r15
	movq %r15,0xB8(%rbp)
.p2align 0x4,,0x7
L_211878:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2249:
	cmpq 0xB0(%rbp),%r15
	jnl L_466627
L_211897:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xF2E,%r14
	je L_466626
L_211898:
	incl %ecx
	jo L_211890
L_211899:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_211900:
	movq 0xB8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2249
.p2align 0x4
L_466626:
L_211901:
	movq $0x1,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_211900
.p2align 0x4
L_466627:
L_211879:
	movq 0xB8(%rbp),%r15
	movq $0x18CF,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%r15
	movq %r15,0x98(%rbp)
	testq %r15,%r15
	jnz L_466633
L_211896:
	movq (globalObjptr+0x7280)(%rip),%r15
	movq %r15,0xB0(%rbp)
.p2align 0x4,,0x7
L_211883:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2250:
	cmpq 0x98(%rbp),%r15
	jnl L_466631
.p2align 0x4,,0x7
loop_2251:
	movslq %ecx,%r14
	movq 0xB8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_466629
L_211892:
	incl %ecx
	jo L_211890
L_211893:
	jmp loop_2251
.p2align 0x4
L_466629:
L_211889:
	incl %ecx
	jo L_211890
L_211891:
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2250
.p2align 0x4
L_466631:
L_211884:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466632
.p2align 0x4,,0x7
L_211885:
	movq 0xB0(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xA8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	jmp loop_2248
.p2align 0x4
L_466632:
L_211886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_211887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211887
.p2align 0x4
.long 0x309F
L_211887:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_211885
.p2align 0x4
L_466633:
L_211880:
	movq 0x98(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_211881:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_211882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211882
.p2align 0x4
.long 0x309E
L_211882:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xB0(%rbp)
	jmp L_211883
.p2align 0x4
L_466635:
L_211875:
	movq 0xB0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_211876:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_211877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211877
.p2align 0x4
.long 0x309D
L_211877:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xB8(%rbp)
	jmp L_211878
.p2align 0x4
L_466638:
L_211904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_211905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211905
.p2align 0x4
.long 0x30A0
L_211905:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_211867
.p2align 0x4
L_466639:
L_211863:
	movq 0x78(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_211864:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_211865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_211865
.p2align 0x4
.long 0x1CCA
L_211865:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x80(%rbp)
	jmp L_211866
.p2align 0x4
L_466642:
L_211908:
	movq $0x1,%r15
	jmp L_211871
.p2align 0x4
L_466643:
L_214072:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq 0x18(%r14),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r13
	je L_466646
L_214073:
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_214074:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466645
.p2align 0x4,,0x7
L_214075:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_466644
L_214076:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_214074
.p2align 0x4
L_466644:
L_214078:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466645:
L_214079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214080
.p2align 0x4
.long 0x4B6
L_214080:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_214075
.p2align 0x4
L_466646:
L_214081:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_214078
.p2align 0x4
L_466647:
L_214082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x328,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_214083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214083
.p2align 0x4
.long 0x45D
L_214083:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_211854
.p2align 0x4
.long 0x3179
L_213778:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x180(%rbp)
	movq (globalObjptr+0xF40)(%rip),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xCE00)(%rip),%r15
	movq %r15,0x190(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x180,%rbp
	leaq (L_213779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
.long 0x31A1
makeValue_10:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213999
L_214006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_214007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214007
.p2align 0x4
.long 0x31A2
L_214007:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_213999:
	movq 0x1B8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_466649
L_214005:
	movq 0x0(%r14),%r15
L_214003:
	movq 0x1A0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1B0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1B0(%rbp)
	jmp loop_2288
.p2align 0x4
L_466649:
L_214000:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_466650
L_214004:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_214003
.p2align 0x4
L_466650:
L_214001:
	movq 0x0(%r15),%r14
	movq %r14,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_214002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x31A1
makeValue_11:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214014
L_214021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_214022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214022
.p2align 0x4
.long 0x31A2
L_214022:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_214014:
	movq 0x1B8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_466652
L_214020:
	movq 0x0(%r14),%r15
L_214018:
	movq 0x1A0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1B0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1B0(%rbp)
	jmp loop_2287
.p2align 0x4
L_466652:
L_214015:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_466653
L_214019:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_214018
.p2align 0x4
L_466653:
L_214016:
	movq 0x0(%r15),%r14
	movq %r14,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_214017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x31A4
makeValue_12:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214031
L_214065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_214066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214066
.p2align 0x4
.long 0x31A6
L_214066:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_214031:
	movq 0x1C0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A1,%r14
	je L_466667
L_214064:
	movq 0x0(%r15),%r15
	movq %r15,0x1C0(%rbp)
L_214036:
	movq 0x1B8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x1C8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_214037:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_466665
L_214038:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_214040:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_214041
L_214053:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD44,%r13
	jne L_214041
L_214054:
	movq 0x0(%r14),%r13
	cmpq %r13,0x130(%rbp)
	je L_466660
L_214041:
	incl %ecx
	movl %ecx,0x1B8(%rbp)
	jo L_211890
L_214042:
	cmpq $0x1,%r15
	je L_466655
L_214043:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_214040
.p2align 0x4
L_466655:
L_214044:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214045
L_214051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_214052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214052
.p2align 0x4
.long 0x31A5
L_214052:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_214045:
	movl 0x1B8(%rbp),%ecx
L_214046:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_214047:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_214049
L_214050:
	movl %ecx,0x0(%r15)
L_214049:
	movq $0x1A89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq 0x1A8(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1B0(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x1B0(%rbp)
	jmp loop_2286
.p2align 0x4
L_466660:
L_214056:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_214057:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212434
L_214059:
	movl %ecx,0x0(%r15)
	jmp L_212434
.p2align 0x4
L_466665:
L_214060:
	xorl %ecx,%ecx
	jmp L_214046
.p2align 0x4
L_466667:
L_214032:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D6,%r15
	je L_466668
L_214063:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x100F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1C0(%rbp)
	addq $0x10,%r12
	jmp L_214036
.p2align 0x4
L_466668:
L_214033:
	movq 0x0(%r14),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_214034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1355
.p2align 0x4
.long 0x313B
L_213252:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xF00)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq (globalObjptr+0xCE00)(%rip),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_213253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_2
.p2align 0x4
.long 0x3170
L_213661:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213662
L_213668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_213669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213669
.p2align 0x4
.long 0x3171
L_213669:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_213662:
	movq 0x1B0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_466670
L_213667:
	movq 0x0(%r14),%r15
L_213665:
	movq 0x198(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1A8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1A8(%rbp)
	jmp loop_2280
.p2align 0x4
L_466670:
L_213663:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D8,%r14
	je L_466671
L_213666:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_213665
.p2align 0x4
L_466671:
L_213664:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_213665
.p2align 0x4
.long 0x3170
L_213676:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213677
L_213683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_213684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213684
.p2align 0x4
.long 0x3171
L_213684:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_213677:
	movq 0x1B0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_466673
L_213682:
	movq 0x0(%r14),%r15
L_213680:
	movq 0x198(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1A8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1A8(%rbp)
	jmp loop_2279
.p2align 0x4
L_466673:
L_213678:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D8,%r14
	je L_466674
L_213681:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_213680
.p2align 0x4
L_466674:
L_213679:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_213680
.p2align 0x4
.long 0x3173
L_213693:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213694
L_213724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_213725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213725
.p2align 0x4
.long 0x3175
L_213725:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_213694:
	movq 0x1B8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_466688
L_213723:
	movq 0x0(%r15),%r15
	movq %r15,0x1B8(%rbp)
L_213697:
	movq 0x1B0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x1C0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_213698:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_466686
L_213699:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_213701:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213702
L_213714:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4A,%r13
	jne L_213702
L_213715:
	movq 0x130(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_466681
L_213702:
	incl %ecx
	movl %ecx,0x1B0(%rbp)
	jo L_211890
L_213703:
	cmpq $0x1,%r15
	je L_466676
L_213704:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213701
.p2align 0x4
L_466676:
L_213705:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213706
L_213712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_213713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213713
.p2align 0x4
.long 0x3174
L_213713:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_213706:
	movl 0x1B0(%rbp),%ecx
L_213707:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213708:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213710
L_213711:
	movl %ecx,0x0(%r15)
L_213710:
	movq $0x1A95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq 0x1A0(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1A8(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x1A8(%rbp)
	jmp loop_2278
.p2align 0x4
L_466681:
L_213717:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213718:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212434
L_213720:
	movl %ecx,0x0(%r15)
	jmp L_212434
.p2align 0x4
L_466686:
L_213721:
	xorl %ecx,%ecx
	jmp L_213707
.p2align 0x4
L_466688:
L_213695:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_466689
L_213722:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	addq $0x10,%r12
	jmp L_213697
.p2align 0x4
L_466689:
L_213696:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	addq $0x10,%r12
	jmp L_213697
.p2align 0x4
.long 0x2CFA
L_213183:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xC0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq %r14,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_213184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x25
L_213191:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213192
L_213193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_213194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213194
.p2align 0x4
.long 0x3137
L_213194:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_213192:
	movq $0x292B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2BE9
loop_2276:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	cmpq $0x1,%r14
	je L_213119
L_213046:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
.p2align 0x4,,0x7
L_213047:
	cmpq $0x1,%r15
	je L_213116
L_213048:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_466718
L_213049:
	movq %r14,0xC0(%rbp)
	movq %r13,%r15
L_213050:
	movq 0x8(%r15),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_213051:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_466716
L_213052:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0xC8(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_213054:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213055
L_213092:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB2,%r13
	jne L_213055
L_213093:
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x78(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_466696
L_213055:
	movl 0xC8(%rbp),%r13d
	incl %r13d
	jo L_211890
L_213056:
	cmpq $0x1,%r15
	je L_466692
L_213057:
	movl %r13d,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213054
.p2align 0x4
L_466692:
	movl %r13d,%ecx
L_213059:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213060:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213062
L_213091:
	movl %ecx,0x0(%r15)
L_213062:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_213063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_466696:
L_213095:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466713
.p2align 0x4,,0x7
L_213096:
	movl 0xC8(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_211969
L_213097:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_466711
L_213098:
	movq 0xD0(%rbp),%r15
L_213099:
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_213100:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_466709
L_213101:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_213103:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213104
L_213155:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB0,%r13
	jne L_213104
L_213156:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0xA8(%rbp)
	je L_466704
L_213104:
	incl %ecx
	movl %ecx,0xD0(%rbp)
	jo L_211890
L_213105:
	cmpq $0x1,%r15
	je L_466697
L_213106:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213103
.p2align 0x4
L_466697:
L_213107:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466702
.p2align 0x4,,0x7
L_213108:
	movl 0xD0(%rbp),%ecx
L_213109:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213110:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213112
L_213152:
	movl %ecx,0x0(%r15)
L_213112:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x13B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1961,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_213113:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466698
L_213114:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	jmp L_213050
.p2align 0x4
L_466698:
L_213116:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466699
L_213117:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	jmp L_213047
.p2align 0x4
L_466699:
L_213119:
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_213120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1927
.p2align 0x4
L_466702:
L_213153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_213154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213154
.p2align 0x4
.long 0x3133
L_213154:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_213108
.p2align 0x4
L_466704:
L_213158:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213159:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_466705
L_213161:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_213113
.p2align 0x4
L_466705:
L_213160:
	movq %r13,%r15
	jmp L_213113
.p2align 0x4
L_466709:
L_213162:
	xorl %ecx,%ecx
	jmp L_213109
.p2align 0x4
L_466711:
L_213163:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0xC8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xD0(%rbp),%r15
	jmp L_213099
.p2align 0x4
L_466713:
L_213164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_213165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213165
.p2align 0x4
.long 0x3134
L_213165:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_213096
.p2align 0x4
L_466716:
L_213166:
	xorl %ecx,%ecx
	jmp L_213059
.p2align 0x4
L_466718:
L_213167:
	movq 0x0(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_213173
L_213168:
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r9
	movq %r13,%r14
	movq %r9,%r13
.p2align 0x4,,0x7
L_213169:
	movq 0x0(%r13),%r10
	movq 0x8(%r14),%r9
	cmpq %r9,0x8(%r10)
	je L_466721
L_213170:
	cmpq $0x1,%r11
	je L_466719
L_213171:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_213169
.p2align 0x4
L_466719:
L_213173:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_213119
L_213174:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	jmp L_213047
.p2align 0x4
L_466721:
L_213176:
	cmpq $0x1,%r15
	je L_213116
L_213177:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r15
	jmp L_213050
.p2align 0x4
.long 0x2BE3
L_213023:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_213024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3122
L_212980:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212981
L_212997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_212998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212998
.p2align 0x4
.long 0x3125
L_212998:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_212981:
	movl $0x0,0x20(%rbp)
loop_2275:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x20(%rbp)
	jl L_466729
L_212982:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_466728
L_212983:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_212984:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466727
.p2align 0x4,,0x7
L_212985:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_466726
L_212986:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_212984
.p2align 0x4
L_466726:
L_212988:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466727:
L_212989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_212990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212990
.p2align 0x4
.long 0x4B6
L_212990:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_212985
.p2align 0x4
L_466728:
L_212991:
	movq $0x1,%r15
	jmp L_212988
.p2align 0x4
L_466729:
L_212992:
	movslq 0x20(%rbp),%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x78(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_212993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x3127
L_213004:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213005
L_213008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_213009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213009
.p2align 0x4
.long 0x3128
L_213009:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_213005:
	movq 0x78(%rbp),%r15
	andq $0x1,%r15
	jnz L_212434
L_213006:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	incl %r14d
	movl %r14d,0x4C(%rbp)
	jmp loop_2273
.p2align 0x4
.long 0x3117
L_212892:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xA0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212893:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_212894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212894
.p2align 0x4
.long 0x3118
L_212894:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2267:
	cmpq 0xA0(%rbp),%r15
	jnl L_466733
L_212955:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2267
.p2align 0x4
L_466733:
L_212895:
	movq %r14,0xD8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xB8,%rbp
	leaq (L_212896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_6
.p2align 0x4
.long 0x2C3F
L_211910:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
.long 0x317A
L_213779:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213780
L_213985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_213986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213986
.p2align 0x4
.long 0x319F
L_213986:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_213780:
	movq $0x3343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x180(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_213781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x31A1
L_214002:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	jmp L_214003
.p2align 0x4
.long 0x31A1
L_214017:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	jmp L_214018
.p2align 0x4
.long 0x31A4
L_214034:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214036
L_214061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_214062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214062
.p2align 0x4
.long 0x31A6
L_214062:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_214036
.p2align 0x4
.long 0x313B
L_213253:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213254
L_213647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_213648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213648
.p2align 0x4
.long 0x316F
L_213648:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_213254:
	movq $0x3343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x178(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_213255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x3135
L_213184:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213185
L_213189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_213190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213190
.p2align 0x4
.long 0x3136
L_213190:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_213185:
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_466738
L_213186:
L_213187:
	movq $0x2933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0xF7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2929,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x20,%r12
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq 0xB8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r14,0x0(%r11)
	movq %r13,0x78(%rbp)
	jmp L_213045
.p2align 0x4
L_466738:
L_213188:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xE0(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_213187
.p2align 0x4
.long 0x474
L_213063:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_213064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x312B
L_213120:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x838)(%rip),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movl %r13d,0xD0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xC0,%rbp
	leaq (L_213121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addCuts_0
.p2align 0x4
.long 0x2BE3
L_213024:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0x10210)(%rip),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_213025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3123
L_212993:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212994
L_212995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_212996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212996
.p2align 0x4
.long 0x3124
L_212996:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_212994:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x20(%rbp)
	jmp loop_2275
.p2align 0x4
.long 0x3119
L_212896:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212897
L_212953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_212954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212954
.p2align 0x4
.long 0x3120
L_212954:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_212897:
	movq $0x3465,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_212898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x30A1
L_211911:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_466742
L_211912:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x2,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466742:
L_211914:
	movq 0x70(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
.long 0x317A
L_213781:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213782
L_213983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_213984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213984
.p2align 0x4
.long 0x319F
L_213984:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_213782:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466743
L_213783:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
L_213784:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x188(%rbp)
	movq $0x3463,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x170(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_213785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_466743:
L_213791:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466744
L_213792:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
L_213793:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x170(%rbp)
	movq $0x33E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_213794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_466744:
L_213800:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_466745
L_213801:
	movq $0x323F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x168(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_466745:
L_213814:
	movq 0xF0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_211861
L_213816:
	testq %rdx,%rdx
	jz L_466768
L_213817:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213818:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1679,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213819
.p2align 0x4
.long 0x3183
L_213819:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0x60(%rbp)
L_213820:
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_2289:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466766
.p2align 0x4,,0x7
L_213821:
	movq 0x68(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_466765
L_213912:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x70(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x80(%rbp)
	cmpq %r11,%r15
	jne L_211861
L_213914:
	testq %r11,%r11
	jnz L_466762
L_213960:
	movq (globalObjptr+0x7328)(%rip),%r15
	movq %r15,0x90(%rbp)
.p2align 0x4,,0x7
L_213918:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466761
.p2align 0x4,,0x7
L_213919:
	movq $0x0,0xA0(%rbp)
loop_2292:
	movq 0x80(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_466746
L_213920:
	movq 0x90(%rbp),%r15
	movq $0xAFF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq 0x70(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2289
.p2align 0x4
L_466746:
L_213921:
	movq 0xA0(%rbp),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x78(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0xD0(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r10
	movq %r10,0x108(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x110(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_211958
L_213922:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_466759
L_213923:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_213925:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213926
L_213949:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD42,%r13
	jne L_213926
L_213950:
	movq 0x8(%r14),%r13
	movq 0xF8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_466754
L_213926:
	incl %ecx
	movl %ecx,0x118(%rbp)
	jo L_211890
L_213927:
	cmpq $0x1,%r15
	je L_466747
L_213928:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213925
.p2align 0x4
L_466747:
L_213929:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466752
.p2align 0x4,,0x7
L_213930:
	movl 0x118(%rbp),%ecx
L_213931:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213932:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213934
L_213946:
	movl %ecx,0x0(%r15)
L_213934:
	movq $0x1371,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x110(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_719:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_466749
.p2align 0x4,,0x7
L_213941:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466748
.p2align 0x4,,0x7
L_213942:
	movq 0x90(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0xD0(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x108(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0xA0(%rbp)
	jmp loop_2292
.p2align 0x4
L_466748:
L_213943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213944
.p2align 0x4
.long 0x3195
L_213944:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_213942
.p2align 0x4
L_466749:
L_213935:
	movq %r14,0x168(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_466752:
L_213947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213948
.p2align 0x4
.long 0x3196
L_213948:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_213930
.p2align 0x4
L_466754:
L_213952:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213953:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_466755
L_213955:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_719
.p2align 0x4
L_466755:
L_213954:
	movq %r13,%r15
	jmp x_719
.p2align 0x4
L_466759:
L_213956:
	xorl %ecx,%ecx
	jmp L_213931
.p2align 0x4
L_466761:
L_213957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213958
.p2align 0x4
.long 0x3197
L_213958:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_213919
.p2align 0x4
L_466762:
L_213915:
	movq 0x80(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213916:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213917
.p2align 0x4
.long 0x3193
L_213917:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0x90(%rbp)
	jmp L_213918
.p2align 0x4
L_466765:
L_213822:
	movq 0x60(%rbp),%r14
	movq $0x767,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x8DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x30,%r12
	movq 0x100(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0xA8(%rbp),%r10
	movq %r10,0x10(%r14)
	movq 0xB0(%rbp),%r9
	movq %r9,0x18(%r14)
	movq 0xB8(%rbp),%r8
	movq %r8,0x20(%r14)
	movq $0xC21,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x58(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%rsp)
	movq 0x48(%rbp),%rsi
	movq %rsi,0x8(%rsp)
	movq 0x148(%rbp),%rdi
	movq %rdi,0x10(%rsp)
	movq $0xCB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x20,%r12
	movq %rsp,0x0(%r15)
	movq %rdi,0x8(%r15)
	movq 0x50(%rbp),%rdx
	movq %rdx,0x10(%r15)
	movq $0x95F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x88(%rbp),%rcx
	movq %rcx,0x8(%r15)
	movq $0xCB5,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %r14,0x40(%rcx)
	movq %r13,0x58(%rcx)
	addq $0x88,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%rcx)
	movq 0xC0(%rbp),%r13
	movq %r13,0x8(%rcx)
	movq %r8,0x10(%rcx)
	movq %r9,0x18(%rcx)
	movq %r10,0x20(%rcx)
	movq 0x28(%rbp),%rbx
	movq %rbx,0x28(%rcx)
	movq 0x30(%rbp),%rbx
	movq %rbx,0x30(%rcx)
	movq 0x38(%rbp),%rbx
	movq %rbx,0x38(%rcx)
	movq 0x40(%rbp),%rbx
	movq %rbx,0x48(%rcx)
	movq %rsi,0x50(%rcx)
	movq %rdx,0x60(%rcx)
	movq %rdi,0x68(%rcx)
	movq %rsp,0x70(%rcx)
	movq %r15,0x78(%rcx)
	movq $0xCB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %rcx,0x28(%r15)
	addq $0x40,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r8,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r10,0x20(%r15)
	movq %r11,0x30(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x168(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp transformStatements_0
.p2align 0x4
L_466766:
L_213961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213962
.p2align 0x4
.long 0x3198
L_213962:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_213821
.p2align 0x4
L_466768:
L_213964:
	movq (globalObjptr+0x7320)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_213820
.p2align 0x4
.long 0x313B
L_213255:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213256
L_213645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_213646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213646
.p2align 0x4
.long 0x316F
L_213646:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_213256:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466771
L_213257:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_213258:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x180(%rbp)
	movq $0x349B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_213259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_466771:
L_213265:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x92F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x40,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA8(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0xB0(%rbp),%r10
	movq %r10,0x18(%r14)
	movq 0xB8(%rbp),%r9
	movq %r9,0x20(%r14)
	movq 0xC0(%rbp),%r8
	movq %r8,0x28(%r14)
	movq 0xC8(%rbp),%rsp
	movq %rsp,0x30(%r14)
	movq 0x58(%rbp),%rsi
	movq 0x30(%rsi),%rdi
	movq 0x28(%rsi),%rdx
	movq 0x20(%rsi),%rcx
	movq 0x38(%rsi),%rbx
	movq 0x8(%rbx),%rax
	movq $0x3D5D,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x28(%rsi)
	addq $0x40,%r12
	movq %rsp,0x0(%rsi)
	movq %r8,0x8(%rsi)
	movq %r9,0x10(%rsi)
	movq %r10,0x18(%rsi)
	movq %r11,0x20(%rsi)
	movq %r13,0x30(%rsi)
	movq $0xC9F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %rax,0x0(%r15)
	movq %rsi,0x8(%r15)
	movq %rdi,0x10(%r15)
	movq %rdx,0x18(%r15)
	movq %rcx,0x20(%r15)
	addq $0x30,%r12
	movq $0xCA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x78(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r8)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r8)
	movq %r15,0x10(%r8)
	movq %r15,0x18(%r8)
	movq $0xCA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x30,%r12
	movq %r13,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x45A
L_213064:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_213065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x312C
L_213121:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213122
L_213150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_213151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213151
.p2align 0x4
.long 0x3132
L_213151:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_213122:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x957,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x959,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x6FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_213123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B6F
L_213025:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq (globalObjptr+0x10218)(%rip),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_213026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x311A
L_212898:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212899
L_212951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_212952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212952
.p2align 0x4
.long 0x311F
L_212952:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_212899:
	movl $0x0,0x9C(%rbp)
loop_2268:
	movl 0x9C(%rbp),%r15d
	cmpl 0x98(%rbp),%r15d
	je L_466775
L_212900:
	movslq %r15d,%r14
	cmpq 0x90(%rbp),%r14
	jnb L_466774
L_212902:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_212903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_466774:
L_212475:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_466775:
L_212917:
	movq $0x3495,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_212918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x30A1
L_211913:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_211914
.p2align 0x4
.long 0x30A2
L_211915:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_466777
L_211916:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x2,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466777:
L_211918:
	movq 0x70(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_466778
L_211919:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466778:
L_211921:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_466779
L_212882:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_212883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466779:
L_211923:
	movq 0x68(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
.long 0x317B
L_213785:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_213786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_70
.p2align 0x4
.long 0x317E
L_213794:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213795
L_213977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213978
.p2align 0x4
.long 0x319D
L_213978:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213795:
	movq $0x3497,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x168(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3180
L_213802:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213803
L_213972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213973
.p2align 0x4
.long 0x319B
L_213973:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213803:
	movq $0x3333,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x168(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x3194
L_213936:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x108(%rbp)
L_213937:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_213938
L_213939:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_466782
L_213940:
	movq 0x0(%r14),%r15
	movq %r15,0x108(%rbp)
	jmp L_213941
.p2align 0x4
L_466782:
L_213938:
	movq (globalObjptr+0x7330)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3184
L_213823:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213824
L_213910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213911
.p2align 0x4
.long 0x3192
L_213911:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213824:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466784
L_213825:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x38(%rbp)
L_213826:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x168(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_70
.p2align 0x4
L_466784:
L_213909:
	movq $0x1,0x30(%rbp)
L_213868:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_213869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x313C
L_213259:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_213260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
.long 0x313F
L_213266:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213267
L_213640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213641
.p2align 0x4
.long 0x316D
L_213641:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213267:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x3331,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x5EE
L_213065:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_213066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x312D
L_213123:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213124
L_213148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_213149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213149
.p2align 0x4
.long 0x3131
L_213149:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_213124:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x95B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x28,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xD8,%rbp
	leaq (L_213125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3914
.p2align 0x4
.long 0x2BE8
L_213026:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213027
L_213201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_213202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213202
.p2align 0x4
.long 0x2C34
L_213202:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_213027:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_213028:
	addl 0x0(%r15),%ecx
	movl %ecx,0x98(%rbp)
	jo L_211890
L_213029:
	cmpq $0x1,%r14
	je L_466788
L_213030:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_213028
.p2align 0x4
L_466788:
L_213031:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213032
L_213199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_213200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213200
.p2align 0x4
.long 0x3138
L_213200:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_213032:
	movl 0x98(%rbp),%ecx
	testl %ecx,%ecx
	jz L_466789
L_213033:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
x_717:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xA8(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_213034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_466789:
L_213198:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_717
.p2align 0x4
.long 0x311A
L_212903:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212904
L_212948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_212949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212949
.p2align 0x4
.long 0x311E
L_212949:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_212904:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_212906
L_212944:
	shrq $0x1,%r15
	movl %r15d,%r14d
	testl %r14d,%r14d
	jz L_466794
L_212946:
	movl 0x9C(%rbp),%r15d
	incl %r15d
	jo L_211890
L_212947:
	movl %r15d,0x9C(%rbp)
	jmp loop_2268
.p2align 0x4
L_466794:
L_212906:
	movq 0xA0(%rbp),%rdx
	testq %rdx,%rdx
	jz L_466803
L_212907:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1681,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_212908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212908
.p2align 0x4
.long 0x311B
L_212908:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x48(%rbp)
L_212909:
	movl $0x0,0x90(%rbp)
	movq $0x0,0x98(%rbp)
loop_2269:
	movq 0xA0(%rbp),%r15
	cmpq %r15,0x98(%rbp)
	jl L_466802
L_212910:
	movq 0x48(%rbp),%r15
	movq $0x18C7,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x90(%rbp),%rdx
	movq %rdx,0x98(%rbp)
	testq %rdx,%rdx
	jz L_466801
L_212911:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212912:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_212913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212913
.p2align 0x4
.long 0x311C
L_212913:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x90(%rbp)
L_212914:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2270:
	cmpq 0x98(%rbp),%r15
	jnl L_466798
.p2align 0x4,,0x7
loop_2271:
	movslq %ecx,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_466796
L_212930:
	incl %ecx
	jo L_211890
L_212931:
	jmp loop_2271
.p2align 0x4
L_466796:
L_212928:
	incl %ecx
	jo L_211890
L_212929:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2270
.p2align 0x4
L_466798:
L_212915:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212916
L_212925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_212926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212926
.p2align 0x4
.long 0x311D
L_212926:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_212916:
	movq 0x90(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x292B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	jmp L_212917
.p2align 0x4
L_466801:
L_212933:
	movq (globalObjptr+0x72D8)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_212914
.p2align 0x4
L_466802:
L_212934:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_212935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_466803:
L_212943:
	movq (globalObjptr+0x72D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_212909
.p2align 0x4
.long 0x4B4
L_212918:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212919
L_212923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_212924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212924
.p2align 0x4
.long 0x7AD
L_212924:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_212919:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_212922
L_212920:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_212889
.p2align 0x4
.long 0x30A1
L_211917:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_211918
.p2align 0x4
.long 0x30A1
L_211920:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_211921
.p2align 0x4
.long 0x30A2
L_212883:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_211923
.p2align 0x4
.long 0x30A3
L_211924:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211925
L_212880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212881
.p2align 0x4
.long 0x3111
L_212881:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_211925:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_466808
L_211926:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x2,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466808:
L_211929:
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_466809
L_211930:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466809:
L_211933:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_466810
L_212869:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_212870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466810:
L_211935:
	movq $0x3329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_211936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x317C
L_213786:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x180,%rbp
	leaq (L_213787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_4
.p2align 0x4
.long 0x317F
L_213796:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213797
L_213975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213976
.p2align 0x4
.long 0x319C
L_213976:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213797:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_213800
L_213798:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_213793
.p2align 0x4
.long 0x3180
L_213804:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213805
L_213970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213971
.p2align 0x4
.long 0x319B
L_213971:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213805:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_213814
L_213806:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
L_213807:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x170(%rbp)
	movq $0x33CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_213808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
.long 0x3185
L_213827:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213828
L_213907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213908
.p2align 0x4
.long 0x3191
L_213908:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213828:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_213830:
	movl %r13d,0x170(%rbp)
	movq $0x38EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x148(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_213831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x4B3
L_213869:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq $0x1,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_213870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x313D
L_213260:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x178,%rbp
	leaq (L_213261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_3
.p2align 0x4
.long 0x3140
L_213268:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213269
L_213638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213639
.p2align 0x4
.long 0x316C
L_213639:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213269:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466819
L_213270:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_213271:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x88(%rbp)
	cmpq %r11,%r15
	jne L_211861
L_213273:
	movq $0x4367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x98(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq $0x345D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq %r13,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_466819:
L_213284:
	movq $0x3349,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x700
L_213066:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213067
L_213089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_213090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213090
.p2align 0x4
.long 0x5EF
L_213090:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_213067:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_213068:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_211890
L_213069:
	cmpq $0x1,%r14
	je L_466821
L_213070:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_213068
.p2align 0x4
L_466821:
L_213071:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213072
L_213087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_213088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213088
.p2align 0x4
.long 0x48D
L_213088:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_213072:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_466822
L_213073:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_328:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_466822:
L_213086:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_328
.p2align 0x4
.long 0x312E
L_213125:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r13
	je L_466834
L_213126:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_213127:
	incl %ecx
	jo L_211890
L_213128:
	cmpq $0x1,%r15
	je L_466826
L_213129:
	movq 0x8(%r15),%r15
	jmp L_213127
.p2align 0x4
L_466826:
L_213130:
L_213131:
	movslq %ecx,%rdx
	movq %rdx,0x78(%rbp)
	testq %rdx,%rdx
	jz L_466832
L_213132:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213133:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_213134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213134
.p2align 0x4
.long 0x312F
L_213134:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0xA8(%rbp)
L_213135:
	movq 0x68(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2277:
	cmpq 0x78(%rbp),%r15
	jnl L_466828
L_213142:
	cmpq $0x1,%r14
	je L_212222
L_213143:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xA8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2277
.p2align 0x4
L_466828:
L_213136:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213137
L_213140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_213141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213141
.p2align 0x4
.long 0x3130
L_213141:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_213137:
	movq 0xA8(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x292B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_213041
L_213138:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_213021
.p2align 0x4
L_466832:
L_213146:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_213135
.p2align 0x4
L_466834:
L_213147:
	xorl %ecx,%ecx
	jmp L_213131
.p2align 0x4
.long 0x2BE3
L_213034:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (length_38+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x3119
L_212935:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jz L_212937
L_212939:
	shrq $0x1,%r14
	movl %r14d,%r13d
	testl %r13d,%r13d
	jz L_466836
L_212941:
	movl 0x90(%rbp),%ecx
	incl %ecx
	jo L_211890
L_212942:
	movq 0xA8(%rbp),%r15
L_212938:
	movl %ecx,0x90(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x98(%rbp)
	jmp loop_2269
.p2align 0x4
L_466836:
L_212937:
	movl 0x90(%rbp),%ecx
	movq $0x1,%r15
	jmp L_212938
.p2align 0x4
.long 0x30A2
L_211927:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211929
L_212877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212878
.p2align 0x4
.long 0x3111
L_212878:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_211929
.p2align 0x4
.long 0x30A2
L_211931:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211933
L_212874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212875
.p2align 0x4
.long 0x3111
L_212875:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_211933
.p2align 0x4
.long 0x30A3
L_212870:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211935
L_212872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212873
.p2align 0x4
.long 0x3116
L_212873:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_211935
.p2align 0x4
.long 0x30A3
L_211936:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211937
L_212867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212868
.p2align 0x4
.long 0x3116
L_212868:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_211937:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466841
L_211938:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_211939:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x138(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x150(%rbp)
	movq $0x33C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r14,0x18(%r15)
	movq %r15,0x160(%rbp)
	movq %r13,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_211940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_466841:
L_211982:
	movq 0x98(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (x_711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_40
.p2align 0x4
.long 0x317D
L_213787:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213788
L_213980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_213981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213981
.p2align 0x4
.long 0x319E
L_213981:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_213788:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_213791
L_213789:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_213784
.p2align 0x4
.long 0x3181
L_213808:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213809
L_213967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213968
.p2align 0x4
.long 0x319A
L_213968:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213809:
	movq $0x3461,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x168(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3186
L_213831:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213832
L_213905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213906
.p2align 0x4
.long 0x3190
L_213906:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213832:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_466847
L_213833:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_213835:
	movl %r13d,0x170(%rbp)
	movq $0x3A45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_213836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_466847:
L_213902:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_466849
L_213903:
	movq $0x1,0x90(%rbp)
	xchgq %r14,%r15
L_213839:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_211861
L_213841:
	movl %r13d,0x170(%rbp)
	movq $0x3A45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_213842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_466849:
L_213904:
	movq $0x1,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
L_213844:
	movq $0x6FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0xB8(%rbp)
	cmpq %r11,%r15
	jne L_211861
L_213846:
	movq $0x4379,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xC0(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	movq $0x3499,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x168(%rbp)
	movq %r14,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x75E
L_213870:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_466852
L_213871:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_213872:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x58(%rbp)
	movq $0x1,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_213873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_466852:
L_213880:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp shrink_1
.p2align 0x4
.long 0x313E
L_213261:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213262
L_213642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_213643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213643
.p2align 0x4
.long 0x316E
L_213643:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_213262:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_213265
L_213263:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_213258
.p2align 0x4
.long 0x3141
L_213274:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x88(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213275:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213276
.p2align 0x4
.long 0x3142
L_213276:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2281:
	cmpq 0x88(%rbp),%r15
	jnl L_466855
L_213635:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2281
.p2align 0x4
L_466855:
L_213277:
	movq %r14,0x180(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x160,%rbp
	leaq (L_213278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_2
.p2align 0x4
.long 0x3145
L_213285:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213286
L_213629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213630
.p2align 0x4
.long 0x3163
L_213630:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213286:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466857
L_213287:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_213288:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x345B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_466857:
L_213293:
	movq $0x332F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x474
rev_326:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_466861
L_213074:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_213075:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466860
.p2align 0x4,,0x7
L_213076:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_466859
L_213077:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_213075
.p2align 0x4
L_466859:
L_213079:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_466860:
L_213083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_213084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213084
.p2align 0x4
.long 0x4FD
L_213084:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_213076
.p2align 0x4
L_466861:
L_213085:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_213079
.p2align 0x4
.long 0x312A
length_38:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp length_39
.p2align 0x4
.long 0x2C43
L_211940:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211941
L_212864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_212865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212865
.p2align 0x4
.long 0x2CC6
L_212865:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_211941:
	movq 0x150(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_211943:
	movl %r13d,0x160(%rbp)
	movq $0x3849,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_211944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
.long 0x30A5
x_711:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211983
L_212828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212829
.p2align 0x4
.long 0x3110
L_212829:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_211983:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_466864
L_211984:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x128(%rbp)
	movb $0x2,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_211985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466864:
L_211987:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r14
	je L_466865
L_211988:
	movq $0x3239,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x128(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_211989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_466865:
L_212067:
	movq $0xBC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x48(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %rdx,%r14
	jne L_211861
L_212069:
	testq %rdx,%rdx
	jz L_466874
L_212070:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212071:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212072
.p2align 0x4
.long 0x30B3
L_212072:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x28(%rbp)
L_212073:
	movl $0x0,0x30(%rbp)
	movq $0x0,0x58(%rbp)
loop_2252:
	movq 0x50(%rbp),%rdx
	cmpq %rdx,0x58(%rbp)
	jl L_466872
L_212074:
	movq 0x28(%rbp),%r15
	movq $0x18CB,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x30(%rbp),%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_466871
L_212075:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212076:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1679,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212077
.p2align 0x4
.long 0x30B4
L_212077:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x30(%rbp)
L_212078:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2253:
	cmpq 0x50(%rbp),%r15
	jnl L_466869
.p2align 0x4,,0x7
loop_2262:
	movslq %ecx,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_466867
L_212688:
	incl %ecx
	jo L_211890
L_212689:
	jmp loop_2262
.p2align 0x4
L_466867:
L_212686:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	incl %ecx
	jo L_211890
L_212687:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x30(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x0(%r9,%r11,1)
	movq %r9,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r10
	movq %r13,0x8(%r9,%r10,1)
	incq %r15
	jmp loop_2253
.p2align 0x4
L_466869:
L_212079:
	movq 0x30(%rbp),%r15
	movq $0x767,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x128,%rbp
	leaq (L_212080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyStatements_0
.p2align 0x4
L_466871:
L_212691:
	movq (globalObjptr+0x7290)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_212078
.p2align 0x4
L_466872:
L_212692:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xB0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x68(%rbp)
	movq %r11,0x128(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_466874:
L_212772:
	movq (globalObjptr+0x7288)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_212073
.p2align 0x4
.long 0x3182
L_213810:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213811
L_213965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213966
.p2align 0x4
.long 0x3199
L_213966:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213811:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_213814
L_213812:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_213807
.p2align 0x4
.long 0x3187
L_213836:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213837
L_213900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213901
.p2align 0x4
.long 0x318D
L_213901:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213837:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_466879
L_213838:
	jmp L_213839
.p2align 0x4
L_466879:
L_213899:
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_213844
.p2align 0x4
.long 0x3188
L_213842:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213843
L_213897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213898
.p2align 0x4
.long 0x318D
L_213898:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213843:
	movq 0xA0(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_213844
.p2align 0x4
.long 0x3189
L_213847:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0xB8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213848:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213849
.p2align 0x4
.long 0x318A
L_213849:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2290:
	cmpq 0xB8(%rbp),%r15
	jnl L_466882
L_213895:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2290
.p2align 0x4
L_466882:
L_213850:
	movq %r14,0x198(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x168,%rbp
	leaq (L_213851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_1
.p2align 0x4
.long 0x4B5
L_213873:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq $0x1,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_213874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3143
L_213278:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213279
L_213633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213634
.p2align 0x4
.long 0x316B
L_213634:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213279:
	movq $0x349D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3146
L_213289:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213290
L_213626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213627
.p2align 0x4
.long 0x3164
L_213627:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213290:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_213293
L_213291:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_213288
.p2align 0x4
.long 0x3145
L_213294:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213295
L_213624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213625
.p2align 0x4
.long 0x3163
L_213625:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213295:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466887
L_213296:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_213297:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x349F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_466887:
L_213302:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x927,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x324B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x30,%r12
	movq %r15,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r14,0x18(%r11)
	movq %r13,0x20(%r11)
	movq %r11,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x474
bug_527:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213080
L_213081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_213082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213082
.p2align 0x4
.long 0x49E
L_213082:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_213080:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B14
L_211944:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211945
L_212862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_212863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212863
.p2align 0x4
.long 0x2CC6
L_212863:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_211945:
	movq 0x138(%rbp),%r15
	cmpq $0x1,%r15
	je L_466891
L_211946:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_211948:
	movl %r13d,0x168(%rbp)
	movq $0x3845,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_211949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_466891:
L_212859:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_466893
L_212860:
	movq $0x1,0x78(%rbp)
	xchgq %r14,%r15
L_211952:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_211861
L_211954:
	movl %r13d,0x168(%rbp)
	movq $0x3845,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	addq $0x160,%rbp
	leaq (L_211955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_466893:
L_212861:
	movq $0x1,%r13
	movq $0x1,%r11
	xchgq %r13,%r15
	xchgq %r11,%r14
L_211957:
	movq $0x6F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x272D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x6F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x272F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x6F7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq $0x2733,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq $0x1,0x0(%rsp)
	movq $0x6F9,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0x78(%rbp)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movl $0x0,0x0(%rsi)
	movl $0x0,0x4(%rsi)
	movq $0x6FB,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq $0x1,0x0(%rsp)
	movq $0x6FD,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x138(%rbp)
	movq %rsp,0x0(%rdi)
	movq %r15,0x10(%rdi)
	movq %r8,0x18(%rdi)
	movq %r14,0x20(%rdi)
	movq %r11,0x28(%rdi)
	movq %r9,0x30(%rdi)
	movq %r10,0x38(%rdi)
	movq %r13,0x40(%rdi)
	addq $0x58,%r12
	movq %rsi,0x8(%rdi)
	movq 0x150(%rbp),%r13
	movq %r13,0x48(%rdi)
	movq 0x140(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x158(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_211959:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_466906
L_211960:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_211962:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_211963
L_212846:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD53,%r13
	jne L_211963
L_212847:
	movq 0x0(%r14),%r13
	cmpq %r13,0x110(%rbp)
	je L_466901
L_211963:
	incl %ecx
	movl %ecx,0x140(%rbp)
	jo L_211890
L_211964:
	cmpq $0x1,%r15
	je L_466894
L_211965:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_211962
.p2align 0x4
L_466894:
L_211966:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211967
L_212844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_212845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212845
.p2align 0x4
.long 0x3115
L_212845:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_211967:
	movl 0x140(%rbp),%ecx
L_211968:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_211970:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_211972
L_212843:
	movl %ecx,0x0(%r15)
L_211972:
	movq $0x1AA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_466896
L_211973:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_466895
L_211974:
L_211975:
	movq $0x41B9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x100(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_211976:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_211977:
	movq $0x34A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x88,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x120(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0x118(%rbp),%r11
	movq %r11,0x20(%r15)
	movq %r14,0x28(%r15)
	movq %r13,0x30(%r15)
	movq %r14,0x38(%r15)
	movq %r13,0x40(%r15)
	movq 0xC0(%rbp),%r13
	movq %r13,0x48(%r15)
	movq %r14,0x50(%r15)
	movq 0xC8(%rbp),%r13
	movq %r13,0x58(%r15)
	movq 0x108(%rbp),%r13
	movq %r13,0x60(%r15)
	movq 0x138(%rbp),%r13
	movq %r13,0x68(%r15)
	movq %r14,0x70(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x78(%r15)
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_211978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_466895:
L_212832:
	movq $0x41B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x100(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_211976
.p2align 0x4
L_466896:
L_212833:
	movq 0x70(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (x_716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_466901:
L_212849:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_212850:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212434
L_212852:
	movl %ecx,0x0(%r15)
	jmp L_212434
.p2align 0x4
L_466906:
L_212853:
	xorl %ecx,%ecx
	jmp L_211968
.p2align 0x4
.long 0x30A5
L_211985:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211987
L_212825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212826
.p2align 0x4
.long 0x310F
L_212826:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_211987
.p2align 0x4
.long 0x30A6
L_211989:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_211990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x30B5
L_212080:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212081
L_212683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212684
.p2align 0x4
.long 0x30F6
L_212684:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212081:
	movq 0x20(%rbp),%r15
	movq 0xF8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x58(%r15),%r14
	movq 0x50(%r15),%r13
	movq %r13,0x108(%rbp)
	movq 0x48(%r15),%r11
	movq %r11,0x110(%rbp)
	movq 0x40(%r15),%r10
	movq %r10,0x120(%rbp)
	movq 0x38(%r15),%r9
	movq %r9,0x128(%rbp)
	movq 0x18(%r15),%r9
	movq %r9,0x130(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x138(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r8)
	movq %r15,0x8(%r8)
	movq 0x8(%r9),%rsp
	movq $0x8DB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x140(%rbp)
	movq %rsp,0x0(%r9)
	addq $0x30,%r12
	movq %r8,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r11,0x18(%r9)
	movq %r10,0x20(%r9)
	movq 0x40(%r14),%r13
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq 0x28(%r14),%rsp
	movq 0x20(%r14),%rsi
	movq 0x48(%r14),%rdi
	movq 0x8(%rdi),%rdx
	movq $0x40B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x8C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	movq %rdx,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	movq %rsp,0x28(%r15)
	movq %rsi,0x30(%r15)
	addq $0x40,%r12
	movq $0x3335,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r8,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_212082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x30F7
L_212693:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212694
L_212769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212770
.p2align 0x4
.long 0x30F8
L_212770:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212694:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_466911
L_212695:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
L_212696:
	movl %ecx,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_2252
.p2align 0x4
L_466911:
L_212697:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %r14,%rdx
	jne L_211861
L_212699:
	testq %rdx,%rdx
	jz L_466921
L_212700:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212701:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1683,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212702
.p2align 0x4
.long 0x30F8
L_212702:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x80(%rbp)
L_212703:
	movl $0x0,0x34(%rbp)
	movq $0x0,0x88(%rbp)
loop_2263:
	movq 0x78(%rbp),%r15
	cmpq %r15,0x88(%rbp)
	jl L_466919
L_212704:
	movq 0x80(%rbp),%r15
	movq $0x18C9,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x34(%rbp),%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_466918
L_212705:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212706:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212707
.p2align 0x4
.long 0x30F9
L_212707:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x70(%rbp)
L_212708:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2264:
	cmpq 0x68(%rbp),%r15
	jnl L_466915
.p2align 0x4,,0x7
loop_2265:
	movslq %ecx,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_466913
L_212719:
	incl %ecx
	jo L_211890
L_212720:
	jmp loop_2265
.p2align 0x4
L_466913:
L_212717:
	incl %ecx
	jo L_211890
L_212718:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x70(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2264
.p2align 0x4
L_466915:
L_212709:
	movq 0x70(%rbp),%r15
	movq $0xAFF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x34(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_212711:
	movq 0x60(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (x_714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_466918:
L_212722:
	movq (globalObjptr+0x72C0)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_212708
.p2align 0x4
L_466919:
L_212723:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0xE0(%rbp)
	movq %r13,0x128(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_466921:
L_212768:
	movq (globalObjptr+0x72B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_212703
.p2align 0x4
.long 0x318B
L_213851:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213852
L_213893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213894
.p2align 0x4
.long 0x318F
L_213894:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213852:
	movq $0x345F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x168(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_213853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x4B3
L_213874:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213875
L_213882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_213883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213883
.p2align 0x4
.long 0x5EF
L_213883:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_213875:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_466926
L_213876:
L_213877:
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_213880
L_213878:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_213872
.p2align 0x4
L_466926:
L_213472:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3144
L_213280:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213281
L_213631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213632
.p2align 0x4
.long 0x316A
L_213632:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213281:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_213284
L_213282:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_213271
.p2align 0x4
.long 0x3146
L_213298:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213299
L_213621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213622
.p2align 0x4
.long 0x3164
L_213622:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213299:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_213302
L_213300:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_213297
.p2align 0x4
.long 0x3147
L_213303:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213304
L_213619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213620
.p2align 0x4
.long 0x3167
L_213620:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213304:
	movq $0x323D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x30A4
L_211949:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211950
L_212857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_212858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212858
.p2align 0x4
.long 0x2CC6
L_212858:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_211950:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_466933
L_211951:
	movq 0x138(%rbp),%r14
	movq %r14,0x78(%rbp)
	jmp L_211952
.p2align 0x4
L_466933:
L_212856:
	movq $0x1,%r13
	movq 0x138(%rbp),%r14
	xchgq %r13,%r15
	jmp L_211957
.p2align 0x4
.long 0x30A4
L_211955:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211956
L_212854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_212855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212855
.p2align 0x4
.long 0x2CC6
L_212855:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_211956:
	movq 0x138(%rbp),%r15
	movq 0x78(%rbp),%r14
	jmp L_211957
.p2align 0x4
.long 0x30A2
L_211978:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211979
L_212830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212831
.p2align 0x4
.long 0x3111
L_212831:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_211979:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_211982
L_211980:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_211939
.p2align 0x4
.long 0x3112
x_716:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212834
L_212841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212842
.p2align 0x4
.long 0x3114
L_212842:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_212834:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_211977
L_212835:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movb $0x2,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_212836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x30A6
L_211990:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211991
L_212822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212823
.p2align 0x4
.long 0x310E
L_212823:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_211991:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x128(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x130(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_211992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x30B6
L_212082:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212083
L_212681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212682
.p2align 0x4
.long 0x30F5
L_212682:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_212083:
	movq $0x18CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0xC0,%r12
	movq 0x140(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x138(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r13,0x18(%r14)
	movq %r13,0x20(%r14)
	movq 0x130(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x30(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x38(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x40(%r14)
	movq 0x120(%rbp),%r11
	movq %r11,0x48(%r14)
	movq 0x110(%rbp),%r11
	movq %r11,0x50(%r14)
	movq 0x108(%rbp),%r11
	movq %r11,0x58(%r14)
	movq 0x70(%rbp),%r11
	movq %r11,0x60(%r14)
	movq 0x78(%rbp),%r11
	movq %r11,0x68(%r14)
	movq %r13,0x70(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x78(%r14)
	movq 0x88(%rbp),%r11
	movq %r11,0x80(%r14)
	movq 0xA0(%rbp),%r11
	movq %r11,0x88(%r14)
	movq 0xB0(%rbp),%r11
	movq %r11,0x90(%r14)
	movq 0xE0(%rbp),%r11
	movq %r11,0x98(%r14)
	movq %r13,0xA0(%r14)
	movq 0x148(%rbp),%r13
	movq %r13,0xA8(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0xB0(%r14)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_466941
L_212084:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x60(%rbp)
L_212085:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x80(%rbp)
	movq %r13,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_40
.p2align 0x4
L_466941:
L_212680:
	movq $0x1,0x20(%rbp)
L_212096:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_466942
L_212097:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_212098:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x3D97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_212099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_466942:
L_212103:
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_212104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x30FA
x_714:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212712
L_212714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212715
.p2align 0x4
.long 0x30F8
L_212715:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212712:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x34(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq $0x2723,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x30(%rbp),%ecx
	incl %ecx
	jo L_211890
L_212713:
	jmp L_212696
.p2align 0x4
.long 0x30FB
L_212724:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x18(%r15),%r14
	cmpq $0x1,0x8(%r14)
	je L_466955
L_212725:
	xorl %ecx,%ecx
L_212726:
	movq 0xE8(%rbp),%r14
	movq 0x10(%r14),%r13
	movb 0x4(%r13),%r15b
	testb %r15b,%r15b
	jz L_466947
L_212727:
	testl %ecx,%ecx
	jnz addDummy_0
L_212729:
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je addDummy_1
L_212730:
	movl 0x34(%rbp),%ecx
	movq $0x1,%r15
L_212731:
	movl %ecx,0x34(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	jmp loop_2263
.p2align 0x4
addDummy_1:
addDummy_0:
	movq 0x70(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_466946
L_212733:
	movl $0x1,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_466946:
L_212737:
	movl 0x34(%rbp),%ecx
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_212731
.p2align 0x4
L_466947:
L_212739:
	testl %ecx,%ecx
	jz L_212729
L_212741:
	movq 0xE8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x110(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x108(%rbp)
	jne L_211861
L_212743:
	testq %rdx,%rdx
	jz L_466952
L_212744:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212745:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1569,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212746
.p2align 0x4
.long 0x30FD
L_212746:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xE8(%rbp)
L_212747:
	movl $0x0,0x120(%rbp)
	movq $0x0,0x128(%rbp)
.p2align 0x4,,0x7
loop_2266:
	movq 0x128(%rbp),%r14
	cmpq 0x110(%rbp),%r14
	jnl L_466949
L_212755:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x108(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x124(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,0x8(%r9)
	je L_466948
L_212756:
	movl 0x120(%rbp),%ecx
	movq $0x1,%r15
.p2align 0x4,,0x7
L_212757:
	movl %ecx,0x120(%rbp)
	movq 0xE8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x128(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x128(%rbp)
	jmp loop_2266
.p2align 0x4
L_466948:
L_212758:
	movq %r11,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_212759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_466949:
L_212748:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212749
L_212753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_212754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212754
.p2align 0x4
.long 0x30FF
L_212754:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_212749:
	movq 0xE8(%rbp),%r15
	movq $0xC25,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC27,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x38C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movl 0x120(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	addq $0x128,%rbp
	leaq (x_715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_466952:
L_212765:
	movq (globalObjptr+0x72C8)(%rip),%r15
	movq %r15,0xE8(%rbp)
	jmp L_212747
.p2align 0x4
L_466955:
L_212766:
	movl $0x1,%ecx
	jmp L_212726
.p2align 0x4
.long 0x318C
L_213853:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_466964
L_213854:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_213855:
	incl %ecx
	jo L_211890
L_213856:
	cmpq $0x1,%r15
	je L_466956
L_213857:
	movq 0x8(%r15),%r15
	jmp L_213855
.p2align 0x4
L_466956:
L_213858:
L_213859:
	movslq %ecx,%rdx
	movq %rdx,0xA8(%rbp)
	testq %rdx,%rdx
	jz L_466962
L_213860:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213861:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213862
.p2align 0x4
.long 0x318D
L_213862:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0xB0(%rbp)
L_213863:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2291:
	cmpq 0xA8(%rbp),%r15
	jnl L_466958
L_213887:
	cmpq $0x1,%r14
	je L_212222
L_213888:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xB0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2291
.p2align 0x4
L_466958:
L_213864:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213865
L_213885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_213886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213886
.p2align 0x4
.long 0x318E
L_213886:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_213865:
	movq 0xB0(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xA0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_466959
L_213866:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_213826
.p2align 0x4
L_466959:
L_213867:
	movq %r15,0x30(%rbp)
	jmp L_213868
.p2align 0x4
L_466962:
L_213891:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_213863
.p2align 0x4
L_466964:
L_213892:
	xorl %ecx,%ecx
	jmp L_213859
.p2align 0x4
.long 0x3148
L_213305:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (loop_2282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
.long 0x3112
L_212836:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211977
L_212838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212839
.p2align 0x4
.long 0x3113
L_212839:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	jmp L_211977
.p2align 0x4
.long 0x30A7
L_211992:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_211993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x30B7
L_212086:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212087
L_212678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212679
.p2align 0x4
.long 0x30BB
L_212679:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212087:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_466970
L_212088:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_466966
L_212089:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_212085
.p2align 0x4
L_466966:
L_212090:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_466969
L_212091:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_212092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466968
.p2align 0x4,,0x7
L_212093:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_466967
L_212094:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_212092
.p2align 0x4
L_466967:
L_212095:
	movq %r15,0x20(%rbp)
	jmp L_212096
.p2align 0x4
L_466968:
L_212115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_212116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212116
.p2align 0x4
.long 0x30B8
L_212116:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_212093
.p2align 0x4
L_466969:
L_212117:
	movq $0x1,0x20(%rbp)
	jmp L_212096
.p2align 0x4
L_466970:
L_212118:
	movq 0x88(%rbp),%r15
	movq 0x48(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_211861
L_212120:
	movq 0x80(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_211861
L_212122:
	cmpl %r11d,%r9d
	jne L_466971
L_212125:
	movl %r11d,0x130(%rbp)
	movq $0x39BD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_212126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
L_466971:
L_212124:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2C59
L_212099:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212100
L_212112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_212113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212113
.p2align 0x4
.long 0x2C5A
L_212113:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_212100:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_212103
L_212101:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_212098
.p2align 0x4
.long 0x512
L_212104:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_212109
L_212105:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_212106:
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r10)
	cmpq $0x1,%r14
	je L_466977
L_212107:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_212106
.p2align 0x4
L_466977:
L_212109:
	movq $0x1,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_212110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x30FC
L_212734:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq 0x10(%r14),%r15
L_212735:
	movl 0x34(%rbp),%ecx
	incl %ecx
	jo L_211890
	jmp L_212731
.p2align 0x4
.long 0x3100
L_212759:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212760
L_212762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212763
.p2align 0x4
.long 0x3101
L_212763:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212760:
	movq $0x2775,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x124(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x120(%rbp),%ecx
	incl %ecx
	jo L_211890
	jmp L_212757
.p2align 0x4
.long 0x30FB
x_715:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212750
L_212751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212752
.p2align 0x4
.long 0x30FE
L_212752:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212750:
	movq $0x10B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_212735
.p2align 0x4
.long 0x3149
loop_2282:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213306
L_213617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213618
.p2align 0x4
.long 0x3169
L_213618:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213306:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_213384
L_213307:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x78(%rbp)
.p2align 0x4,,0x7
L_213308:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467020
.p2align 0x4,,0x7
L_213309:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_213381
L_213310:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	je L_467011
L_213311:
	movq %r15,0x78(%rbp)
	movq %r13,%r15
L_213312:
	movq 0x8(%r15),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_213313:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_467009
L_213314:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x80(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_213316:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213317
L_213354:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA7,%r13
	jne L_213317
L_213355:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x70(%rbp)
	je L_466987
L_213317:
	movl 0x80(%rbp),%r13d
	incl %r13d
	jo L_211890
L_213318:
	cmpq $0x1,%r15
	je L_466983
L_213319:
	movl %r13d,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213316
.p2align 0x4
L_466983:
	movl %r13d,%ecx
L_213321:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213322:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213324
L_213353:
	movl %ecx,0x0(%r15)
L_213324:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_213325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_466987:
L_213357:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467006
.p2align 0x4,,0x7
L_213358:
	movl 0x80(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_211969
L_213359:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_467004
L_213360:
	movq 0x88(%rbp),%r15
L_213361:
	movq 0x10(%r15),%r13
	movq %r13,0x80(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_211958
L_213362:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_467002
L_213363:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_213365:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213366
L_213582:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA5,%r13
	jne L_213366
L_213583:
	movq 0x8(%r14),%r13
	movq 0x50(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_466997
L_213366:
	incl %ecx
	movl %ecx,0x88(%rbp)
	jo L_211890
L_213367:
	cmpq $0x1,%r15
	je L_466988
L_213368:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213365
.p2align 0x4
L_466988:
L_213369:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466995
.p2align 0x4,,0x7
L_213370:
	movl 0x88(%rbp),%ecx
L_213371:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213372:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213374
L_213579:
	movl %ecx,0x0(%r15)
L_213374:
	movq $0x2741,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x74B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x194B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
makeTop_0:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	jne L_466992
.p2align 0x4,,0x7
L_213377:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_466991
.p2align 0x4,,0x7
L_213378:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_466989
L_213379:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_213312
.p2align 0x4
L_466989:
L_213381:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_466990
L_213382:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_213308
.p2align 0x4
L_466990:
L_213384:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xD21,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x324D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_466991:
L_213576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213577
.p2align 0x4
.long 0x3166
L_213577:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213378
.p2align 0x4
L_466992:
L_213375:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r15)
	movl $0x0,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x160(%rbp)
	movb $0x13,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_466995:
L_213580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213581
.p2align 0x4
.long 0x3167
L_213581:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213370
.p2align 0x4
L_466997:
L_213585:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213586:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_466998
L_213588:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp makeTop_0
.p2align 0x4
L_466998:
L_213587:
	movq %r13,%r15
	jmp makeTop_0
.p2align 0x4
L_467002:
L_213589:
	xorl %ecx,%ecx
	jmp L_213371
.p2align 0x4
L_467004:
L_213590:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x80(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x88(%rbp),%r15
	jmp L_213361
.p2align 0x4
L_467006:
L_213591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213592
.p2align 0x4
.long 0x3168
L_213592:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213358
.p2align 0x4
L_467009:
L_213593:
	xorl %ecx,%ecx
	jmp L_213321
.p2align 0x4
L_467011:
L_213594:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_213601
L_213595:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r13,%r15
	movq %r10,%r14
	movq %r11,%r13
.p2align 0x4,,0x7
L_213596:
	movq 0x0(%r14),%r11
	movq 0x8(%r15),%r10
	cmpq %r10,0x8(%r11)
	je L_467015
L_213597:
	cmpq $0x1,%r13
	je L_467012
L_213598:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_213596
.p2align 0x4
L_467012:
L_213599:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467014
.p2align 0x4,,0x7
L_213601:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_213384
L_213602:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_213308
.p2align 0x4
L_467014:
L_213604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213605
.p2align 0x4
.long 0x3169
L_213605:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213601
.p2align 0x4
L_467015:
L_213606:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467017
.p2align 0x4,,0x7
L_213607:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_213381
L_213608:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_213312
.p2align 0x4
L_467017:
L_213610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213611
.p2align 0x4
.long 0x3166
L_213611:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213607
.p2align 0x4
L_467020:
L_213614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213615
.p2align 0x4
.long 0x3166
L_213615:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213309
.p2align 0x4
.long 0x30A7
L_211993:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_211994
L_212820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212821
.p2align 0x4
.long 0x310D
L_212821:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_211994:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_212067
L_211995:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_211996:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,0x128(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_211997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x30B9
L_212126:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212127
L_212676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212677
.p2align 0x4
.long 0x30BD
L_212677:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212127:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xA0(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x130(%rbp)
	movq $0x38F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x128(%rbp)
	addq $0x18,%r12
	addq $0x128,%rbp
	leaq (L_212128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x78C
L_212110:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
L_213325:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_213326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3145
L_213385:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213386
L_213574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213575
.p2align 0x4
.long 0x3163
L_213575:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213386:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_467026
L_213387:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_213388:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x3459,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_467026:
L_213393:
	movq $0x332D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x314A
L_213376:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213377
.p2align 0x4
.long 0x30A8
L_211997:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_211998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x30BA
L_212128:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xA0(%rbp)
	cmpq %rdx,%r14
	jne L_211861
L_212130:
	testq %rdx,%rdx
	jz L_467044
L_212131:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212132:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1681,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212133
.p2align 0x4
.long 0x30BB
L_212133:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xA8(%rbp)
L_212134:
	movl $0x0,0xB0(%rbp)
	movq $0x0,0xE0(%rbp)
loop_2254:
	movq 0xA0(%rbp),%r15
	cmpq %r15,0xE0(%rbp)
	jl L_467042
L_212135:
	movq 0xA8(%rbp),%r15
	movq $0x18C7,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0xB0(%rbp),%rdx
	movq %rdx,0x78(%rbp)
	testq %rdx,%rdx
	jz L_467041
L_212136:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212137:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212138
.p2align 0x4
.long 0x30BC
L_212138:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xA0(%rbp)
L_212139:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2255:
	cmpq 0x78(%rbp),%r15
	jnl L_467031
.p2align 0x4,,0x7
loop_2259:
	movslq %ecx,%r14
	movq 0xA8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_467029
L_212229:
	incl %ecx
	jo L_211890
L_212230:
	jmp loop_2259
.p2align 0x4
L_467029:
L_212227:
	incl %ecx
	jo L_211890
L_212228:
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2255
.p2align 0x4
L_467031:
L_212140:
	movq 0xA0(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	cmpq $0x1,%r11
	je L_467039
L_212141:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_212142:
	incl %ecx
	jo L_211890
L_212143:
	cmpq $0x1,%r15
	je L_467032
L_212144:
	movq 0x8(%r15),%r15
	jmp L_212142
.p2align 0x4
L_467032:
L_212145:
L_212146:
	movslq %ecx,%rdx
	movq %rdx,0xA8(%rbp)
	testq %rdx,%rdx
	jz L_467037
L_212147:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212148:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212149
.p2align 0x4
.long 0x30BD
L_212149:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xB0(%rbp)
L_212150:
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2256:
	cmpq 0xA8(%rbp),%r15
	jnl L_467034
L_212219:
	cmpq $0x1,%r14
	je L_212222
L_212220:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xB0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2256
.p2align 0x4
L_467034:
L_212151:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212152
L_212217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212218
.p2align 0x4
.long 0x30C8
L_212218:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212152:
	movq 0xB0(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_212153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_5
.p2align 0x4
L_467037:
L_212224:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_212150
.p2align 0x4
L_467039:
L_212225:
	xorl %ecx,%ecx
	jmp L_212146
.p2align 0x4
L_467041:
L_212232:
	movq (globalObjptr+0x72A0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_212139
.p2align 0x4
L_467042:
L_212233:
	movq 0xE0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x108(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x110(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x120(%rbp)
	movq %r11,0x130(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_212234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_467044:
L_212675:
	movq (globalObjptr+0x7298)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_212134
.p2align 0x4
.long 0x45A
L_213326:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x10220)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_213327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3146
L_213389:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213390
L_213571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213572
.p2align 0x4
.long 0x3164
L_213572:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213390:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_213393
L_213391:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_213388
.p2align 0x4
.long 0x314B
L_213394:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213395
L_213569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213570
.p2align 0x4
.long 0x3165
L_213570:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213395:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_467048
L_213396:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
L_213397:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x33CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_467048:
L_213404:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_467049
L_213405:
	movq $0x323B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_467049:
L_213418:
	movq $0xB93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xB8(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0xB0(%rbp),%r10
	movq %r10,0x20(%r15)
	movq 0xA8(%rbp),%r9
	movq %r9,0x28(%r15)
	movq 0x100(%rbp),%r8
	movq %r8,0x30(%r15)
	movq 0x38(%rbp),%rbx
	movq %rbx,0x38(%r15)
	movq $0x178F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq $0x1,0x0(%rsp)
	movq $0x18C1,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	addq $0x28,%r12
	movq %rsp,0x0(%rsi)
	movq %r15,0x8(%rsi)
	movq %r15,0x10(%rsi)
	movq 0x28(%rbp),%rbx
	movq %rbx,0x18(%rsi)
	movq $0x18C3,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rsi,0x0(%rdi)
	addq $0x20,%r12
	movq 0x68(%rbp),%rbx
	movq %rbx,0x8(%rdi)
	movq 0x140(%rbp),%rsi
	movq %rsi,0x10(%rdi)
	movq $0x18C5,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rsp,0x10(%rdx)
	movq %rdi,0x40(%rdx)
	addq $0x70,%r12
	movq %rbx,0x0(%rdx)
	movq %r15,0x8(%rdx)
	movq %r14,0x18(%rdx)
	movq %r13,0x20(%rdx)
	movq %r11,0x28(%rdx)
	movq %r10,0x30(%rdx)
	movq %r9,0x38(%rdx)
	movq %r8,0x48(%rdx)
	movq %rsi,0x50(%rdx)
	movq %r15,0x58(%rdx)
	movq %r15,0x40(%rbp)
	movq %rsi,0x60(%rdx)
	movq %rdx,0x48(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %rdx,%r14
	jne L_211861
L_213420:
	testq %rdx,%rdx
	jz L_467072
L_213421:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213422:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1679,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213423
.p2align 0x4
.long 0x314F
L_213423:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x28(%rbp)
L_213424:
	movq $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_2283:
	movq 0x30(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnl L_467069
L_213503:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x38(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x60(%rbp)
	cmpq %r15,%r11
	jne L_211861
L_213505:
	testq %r11,%r11
	jnz L_467066
L_213551:
	movq (globalObjptr+0x7300)(%rip),%r15
	movq %r15,0x68(%rbp)
.p2align 0x4,,0x7
L_213509:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467065
.p2align 0x4,,0x7
L_213510:
	movq $0x0,0x70(%rbp)
loop_2285:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_467050
L_213511:
	movq 0x68(%rbp),%r15
	movq $0xAFF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq 0x38(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_2283
.p2align 0x4
L_467050:
L_213512:
	movq 0x70(%rbp),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x58(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x78(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r10
	movq %r10,0x80(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x88(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_211958
L_213513:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_467063
L_213514:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_213516:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_213517
L_213540:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD48,%r13
	jne L_213517
L_213541:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0xF8(%rbp)
	je L_467058
L_213517:
	incl %ecx
	movl %ecx,0x90(%rbp)
	jo L_211890
L_213518:
	cmpq $0x1,%r15
	je L_467051
L_213519:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_213516
.p2align 0x4
L_467051:
L_213520:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467056
.p2align 0x4,,0x7
L_213521:
	movl 0x90(%rbp),%ecx
L_213522:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213523:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_213525
L_213537:
	movl %ecx,0x0(%r15)
L_213525:
	movq $0x136B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A91,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x88(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_718:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_467053
.p2align 0x4,,0x7
L_213532:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467052
.p2align 0x4,,0x7
L_213533:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x70(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x78(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x70(%rbp)
	jmp loop_2285
.p2align 0x4
L_467052:
L_213534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213535
.p2align 0x4
.long 0x315D
L_213535:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213533
.p2align 0x4
L_467053:
L_213526:
	movq %r14,0x160(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_467056:
L_213538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213539
.p2align 0x4
.long 0x315E
L_213539:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213521
.p2align 0x4
L_467058:
L_213543:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_213544:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_467059
L_213546:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_718
.p2align 0x4
L_467059:
L_213545:
	movq %r13,%r15
	jmp x_718
.p2align 0x4
L_467063:
L_213547:
	xorl %ecx,%ecx
	jmp L_213522
.p2align 0x4
L_467065:
L_213548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213549
.p2align 0x4
.long 0x315F
L_213549:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_213510
.p2align 0x4
L_467066:
L_213506:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_213507:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213508
.p2align 0x4
.long 0x315B
L_213508:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x68(%rbp)
	jmp L_213509
.p2align 0x4
L_467069:
L_213425:
	movq 0x28(%rbp),%r14
	movq $0x767,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_467070
L_213426:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x38(%rbp)
L_213427:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x68(%rbp)
	movq %r13,0x160(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_467070:
L_213502:
	movq $0x1,0x30(%rbp)
L_213456:
	movq 0xE0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_213457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp transformStatements_1
.p2align 0x4
L_467072:
L_213553:
	movq (globalObjptr+0x72F0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_213424
.p2align 0x4
.long 0x30A8
L_211998:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_211999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x30BE
L_212153:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212154
L_212215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212216
.p2align 0x4
.long 0x30BB
L_212216:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212154:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	cmpq $0x1,%r14
	je L_212156
L_212155:
	movq 0x30(%r15),%r13
	cmpq $0x1,0x8(%r13)
	jne L_467081
L_212191:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xA8(%rbp)
	cmpq %rdx,%r15
	jne L_211861
L_212193:
	testq %rdx,%rdx
	jz L_467079
L_212194:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212195:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1565,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212196
.p2align 0x4
.long 0x30BD
L_212196:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xB0(%rbp)
L_212197:
	movl $0x0,0xE0(%rbp)
	movq $0x0,0xE8(%rbp)
.p2align 0x4,,0x7
loop_2258:
	movq 0xE8(%rbp),%r14
	cmpq 0xA8(%rbp),%r14
	jnl L_467076
L_212206:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xA0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r10
	cmpq $0x1,0x8(%r10)
	je L_467075
L_212207:
	movl 0xE0(%rbp),%ecx
	movq $0x1,%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_212208:
	movl %ecx,0xE0(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xE8(%rbp)
	jmp loop_2258
.p2align 0x4
L_467075:
L_212209:
	movq %r11,0x128(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_467076:
L_212198:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212199
L_212204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212205
.p2align 0x4
.long 0x30C6
L_212205:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212199:
	movq 0xB0(%rbp),%r15
	movq $0xB8B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xB8D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3A49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_467079:
L_212213:
	movq (globalObjptr+0x72A8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_212197
.p2align 0x4
L_467081:
L_212156:
	movq $0x1,0xA0(%rbp)
L_212157:
	movq 0x88(%rbp),%rdx
	movq 0x20(%rdx),%r15
	movq %r15,0xA8(%rbp)
	cmpq $0x1,%r15
	je L_212159
L_212158:
	movq 0x38(%rdx),%r14
	cmpq $0x1,0x8(%r14)
	jne L_467088
L_212167:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq %rdx,%r14
	jne L_211861
L_212169:
	testq %rdx,%rdx
	jz L_467086
L_212170:
	cmpq $0x7FFFFFFF,%rdx
	ja L_211895
L_212171:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1565,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212172
.p2align 0x4
.long 0x30C1
L_212172:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xB0(%rbp)
L_212173:
	movl $0x0,0xE0(%rbp)
	movq $0x0,0xE8(%rbp)
.p2align 0x4,,0x7
loop_2257:
	movq 0xE8(%rbp),%r14
	cmpq 0x88(%rbp),%r14
	jnl L_467083
L_212182:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xA8(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r10
	cmpq $0x1,0x8(%r10)
	je L_467082
L_212183:
	movl 0xE0(%rbp),%ecx
	movq $0x1,%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_212184:
	movl %ecx,0xE0(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xE8(%rbp)
	jmp loop_2257
.p2align 0x4
L_467082:
L_212185:
	movq %r11,0x128(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_467083:
L_212174:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212175
L_212180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212181
.p2align 0x4
.long 0x30C3
L_212181:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212175:
	movq 0xB0(%rbp),%r15
	movq $0xB8B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xB8D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3A35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_467086:
L_212189:
	movq (globalObjptr+0x72B0)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_212173
.p2align 0x4
L_467088:
L_212159:
	movq $0x1,%r15
L_212160:
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x38,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x292B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x128(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_212161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1937
.p2align 0x4
.long 0x30C9
L_212234:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212235
L_212672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_212673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212673
.p2align 0x4
.long 0x30D3
L_212673:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_212235:
	movq 0x128(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_467092
L_212236:
	movl 0xB0(%rbp),%ecx
	movq $0x1,%r15
L_212237:
	movl %ecx,0xB0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xE0(%rbp)
	jmp loop_2254
.p2align 0x4
L_467092:
L_212238:
	movq 0x128(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x130(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_211861
L_212240:
	movq 0x120(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_211861
L_212242:
	cmpl %r9d,%r11d
	jne L_212124
L_212244:
	movl %r11d,0x148(%rbp)
	movq $0x39B3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x5EE
L_213327:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_213328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3146
L_213398:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213399
L_213566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213567
.p2align 0x4
.long 0x3164
L_213567:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213399:
	movq $0x34A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x314C
L_213406:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213407
L_213561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213562
.p2align 0x4
.long 0x3162
L_213562:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213407:
	movq $0x332B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x315C
L_213527:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x80(%rbp)
L_213528:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_213529
L_213530:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_467099
L_213531:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	jmp L_213532
.p2align 0x4
L_467099:
L_213529:
	movq (globalObjptr+0x7308)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3150
L_213428:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213429
L_213500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213501
.p2align 0x4
.long 0x315A
L_213501:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213429:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_467102
L_213430:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_211861
L_213432:
	movl %r13d,0x168(%rbp)
	movq $0x3A39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_467102:
L_213497:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_467104
L_213498:
	movq $0x1,0x70(%rbp)
L_213436:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_213438:
	movl %r13d,0x168(%rbp)
	movq $0x3A39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_467104:
L_213499:
	movq $0x1,0x70(%rbp)
	movq $0x1,0x78(%rbp)
L_213441:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_213443:
	movl %r13d,0x168(%rbp)
	movq $0x38F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x140(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x3155
L_213457:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213458
L_213476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_213477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213477
.p2align 0x4
.long 0x3156
L_213477:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_213458:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_213459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x30A9
L_211999:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_40
.p2align 0x4
.long 0x30C7
L_212210:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	movl 0xE0(%rbp),%ecx
	incl %ecx
	jo L_211890
L_212211:
	jmp L_212208
.p2align 0x4
.long 0x30C5
L_212200:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212157
L_212202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212203
.p2align 0x4
.long 0x30BD
L_212203:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_212157
.p2align 0x4
.long 0x30C4
L_212186:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	movl 0xE0(%rbp),%ecx
	incl %ecx
	jo L_211890
L_212187:
	jmp L_212184
.p2align 0x4
.long 0x30C2
L_212176:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212177
L_212178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212179
.p2align 0x4
.long 0x30BD
L_212179:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212177:
	movq 0x88(%rbp),%r15
	jmp L_212160
.p2align 0x4
.long 0x30BF
L_212161:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212162
L_212165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212166
.p2align 0x4
.long 0x30C0
L_212166:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212162:
	movq $0x11F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_467112
L_212163:
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	jmp L_212085
.p2align 0x4
L_467112:
L_212164:
	movq %r14,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_212092
.p2align 0x4
.long 0x30CA
L_212245:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212246
L_212670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212671
.p2align 0x4
.long 0x30D8
L_212671:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212246:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x120(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x130(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x140(%rbp)
	movq $0x38E9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	addq $0x138,%rbp
	leaq (L_212247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x700
L_213328:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213329
L_213351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_213352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213352
.p2align 0x4
.long 0x5EF
L_213352:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_213329:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_213330:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_211890
L_213331:
	cmpq $0x1,%r14
	je L_467115
L_213332:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_213330
.p2align 0x4
L_467115:
L_213333:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213334
L_213349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_213350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213350
.p2align 0x4
.long 0x48D
L_213350:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_213334:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_467116
L_213335:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_329:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_467116:
L_213348:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_329
.p2align 0x4
.long 0x3145
L_213400:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213401
L_213564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213565
.p2align 0x4
.long 0x3163
L_213565:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213401:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_213404
L_213402:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_213397
.p2align 0x4
.long 0x314C
L_213408:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213409
L_213559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213560
.p2align 0x4
.long 0x3162
L_213560:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213409:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_213418
L_213410:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
L_213411:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x33C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
.long 0x3151
L_213433:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213434
L_213495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213496
.p2align 0x4
.long 0x3154
L_213496:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213434:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_467124
L_213435:
	jmp L_213436
.p2align 0x4
L_467124:
L_213494:
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_213441
.p2align 0x4
.long 0x3152
L_213439:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213440
L_213492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213493
.p2align 0x4
.long 0x3154
L_213493:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213440:
	movq 0x78(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_213441
.p2align 0x4
.long 0x3153
L_213444:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213445
L_213490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213491
.p2align 0x4
.long 0x3154
L_213491:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213445:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x80(%rbp)
	cmpq %r14,%r11
	jne L_211861
L_213447:
	testq %r11,%r11
	jz L_467132
L_213448:
	cmpq $0x7FFFFFFF,%r11
	ja L_211895
L_213449:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213450
L_213486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213487
.p2align 0x4
.long 0x3154
L_213487:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213450:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0x80(%rbp),%rdx
	movq $0xA0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213451
.p2align 0x4
.long 0x3154
L_213451:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x88(%rbp)
L_213452:
	movq $0x0,0x90(%rbp)
loop_2284:
	movq 0x80(%rbp),%r14
	cmpq %r14,0x90(%rbp)
	jl L_467128
L_213453:
	movq 0x88(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_467127
L_213454:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_213427
.p2align 0x4
L_467127:
L_213455:
	movq %r15,0x30(%rbp)
	jmp L_213456
.p2align 0x4
L_467128:
L_213478:
	movq 0x90(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x18(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_211861
L_213480:
	movl %r14d,0x168(%rbp)
	movq $0x38F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_213481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
L_467132:
L_213489:
	movq (globalObjptr+0x72F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_213452
.p2align 0x4
.long 0x7AA
L_213459:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq $0x1,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_213460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x30AA
L_212000:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212001
L_212817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212818
.p2align 0x4
.long 0x3105
L_212818:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212001:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x48(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_211861
L_212003:
	movl %r13d,0x140(%rbp)
	movq $0x3B61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_212004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x30CB
L_212247:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x138,%rbp
	leaq (L_212248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyStatements_0
.p2align 0x4
.long 0x474
rev_327:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_467139
L_213336:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_213337:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467138
.p2align 0x4,,0x7
L_213338:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_467137
L_213339:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_213337
.p2align 0x4
L_467137:
L_213341:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_467138:
L_213345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_213346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213346
.p2align 0x4
.long 0x4FD
L_213346:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_213338
.p2align 0x4
L_467139:
L_213347:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_213341
.p2align 0x4
.long 0x314D
L_213412:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213413
L_213556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213557
.p2align 0x4
.long 0x3161
L_213557:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213413:
	movq $0x3457,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x160(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3157
L_213481:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_213482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp transformStatements_1
.p2align 0x4
.long 0x868
L_213460:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_467141
L_213461:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_213462:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x58(%rbp)
	movq $0x1,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_213463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_467141:
L_213470:
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp shrink_1
.p2align 0x4
.long 0x30AB
L_212004:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x138(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x138,%rbp
	leaq (L_212005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x30CC
L_212248:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212249
L_212668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_212669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212669
.p2align 0x4
.long 0x30D3
L_212669:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_212249:
	movq 0x128(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0xE8(%rbp),%r15
	cmpq $0x1,%r15
	je L_467158
L_212250:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_467153
	cmpq $0xF32,%r14
	je L_467148
	cmpq $0xF33,%r14
	je L_467147
	cmpq $0xF34,%r14
	je L_467144
	cmpq $0xF35,%r14
	je L_467143
	cmpq $0xF36,%r14
	je L_467142
L_212251:
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x148(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_212252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_467142:
L_212646:
	movq 0x20(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x148(%rbp)
	movq %r14,0x158(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_212647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_467143:
L_212352:
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x140(%rbp)
	movq %r14,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_212353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_40
.p2align 0x4
L_467144:
L_212319:
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1209,%r15
	je L_467146
L_212320:
	movq $0x1E69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x20,%r12
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
L_212259:
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x120(%rbp),%r13
	movq %r13,0x18(%r14)
	movl 0xB0(%rbp),%ecx
	incl %ecx
	jo L_211890
L_212260:
	movq %r14,%r15
	jmp L_212237
.p2align 0x4
L_467146:
L_212321:
	movq 0x0(%r11),%r15
	movq %r15,0x148(%rbp)
	movq $0x3209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x90(%rbp),%r10
	movq %r10,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMap_0
.p2align 0x4
L_467147:
L_212300:
	movq 0x8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x130(%rbp)
	movq %r14,0x140(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_212301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_467148:
L_212283:
	movq 0x0(%r15),%r14
	movq 0x130(%rbp),%r15
	movq 0x20(%r15),%r13
	cmpq $0x1,%r13
	je L_467152
L_212284:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_211861
L_212286:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jne L_211861
L_212288:
	cmpl %r9d,%r10d
	jne L_212124
L_212290:
	movl %r10d,0x138(%rbp)
	movq $0x38AF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r11,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_212291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_467152:
L_212282:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467153:
L_212265:
	movq 0x0(%r15),%r14
	movq 0x130(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq $0x1,%r13
	je L_212282
L_212266:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_211861
L_212268:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jne L_211861
L_212270:
	cmpl %r9d,%r10d
	jne L_212124
L_212272:
	movl %r10d,0x138(%rbp)
	movq $0x3889,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r11,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_212273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_467158:
L_212341:
	movq $0x1,%r15
	jmp L_212259
.p2align 0x4
.long 0x474
bug_528:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213342
L_213343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_213344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213344
.p2align 0x4
.long 0x49E
L_213344:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_213342:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x314E
L_213414:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213415
L_213554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213555
.p2align 0x4
.long 0x3160
L_213555:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213415:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_213418
L_213416:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_213411
.p2align 0x4
.long 0x3158
L_213482:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213483
L_213484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_213485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213485
.p2align 0x4
.long 0x3159
L_213485:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_213483:
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_2284
.p2align 0x4
.long 0x4B5
L_213463:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq $0x1,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_213464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x30AB
L_212005:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212006
L_212815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_212816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212816
.p2align 0x4
.long 0x310C
L_212816:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_212006:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xDF28)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x128(%rbp),%r14
	cmpq $0x1,0x8(%r14)
	je L_467164
L_212007:
	movq (globalObjptr+0x10108)(%rip),%r15
L_212008:
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_467164:
L_212814:
	movq (globalObjptr+0x10130)(%rip),%r15
	jmp L_212008
.p2align 0x4
.long 0x30CD
L_212252:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212253
L_212263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_212264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212264
.p2align 0x4
.long 0x30D0
L_212264:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_212253:
	movq 0xE8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_211861
L_212255:
	movl %r13d,0x150(%rbp)
	movq $0x384B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	addq $0x10,%r12
	addq $0x148,%rbp
	leaq (L_212256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
.long 0x30EF
L_212647:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212648
L_212665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212666
.p2align 0x4
.long 0x30E9
L_212666:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_212648:
	movq 0xE8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_211861
L_212650:
	movl %r13d,0x160(%rbp)
	movq $0x384B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x158(%rbp)
	addq $0x10,%r12
	addq $0x158,%rbp
	leaq (L_212651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
.long 0x30DC
L_212353:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212354
L_212644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_212645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212645
.p2align 0x4
.long 0x30DF
L_212645:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_212354:
	movq 0x128(%rbp),%r14
	cmpq $0x1,%r14
	je L_467218
	cmpq $0x2,%r14
	je L_467217
L_212355:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	je L_467216
	cmpq $0x2,%r15
	je L_467215
L_212356:
	movq %r15,0x128(%rbp)
	movq %r13,%r15
L_212357:
	movq 0xE8(%rbp),%r14
	movq 0x30(%r14),%r13
	cmpq $0x1,0x8(%r13)
	jne L_467214
L_212550:
	cmpq $0x1,%r15
	je L_467172
	cmpq $0x2,%r15
	je L_467171
L_212551:
	movq 0x10(%r14),%r13
	cmpq $0x1,%r13
	je L_212282
L_212552:
	movq %r13,0x150(%rbp)
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x150,%rbp
	leaq (L_212553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
L_467171:
L_212639:
	movq (globalObjptr+0x2418)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467172:
L_212558:
	movq 0x130(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x148(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x150(%rbp)
L_212559:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_212560
L_212562:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_467212
L_212563:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_211861
L_212565:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r13,%r14
	jne L_211861
L_212567:
	cmpl %ebx,%ecx
	jne L_212471
L_212569:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2261:
	cmpl %ebx,%ecx
	je L_467180
L_212570:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_212475
L_212572:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x148(%rbp),%r10
	movq 0x8(%r10,%r11,1),%r9
	cmpq %r14,%r13
	jnb L_212475
L_212574:
	salq $0x4,%r13
	movq 0x150(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq 0x0(%r9),%r11
	cmpq $0x1,0x8(%r11)
	je L_467177
L_212575:
	xorl %r11d,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
L_212576:
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_467176
L_212577:
	xorl %r13d,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
L_212578:
	cmpl %ecx,%ebx
	jne L_467174
L_212631:
	movl (localWord32+0x4)(%rip),%ebx
	incl %ebx
	jo L_211890
L_212632:
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2261
.p2align 0x4
L_467174:
L_212579:
	movq 0x130(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_467175
L_212586:
	movq 0x40(%rbp),%r14
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_212587+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467175:
L_212581:
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x150,%rbp
	leaq (L_212582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
L_467176:
L_212633:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
	jmp L_212578
.p2align 0x4
L_467177:
L_212634:
	movl $0x1,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
	jmp L_212576
.p2align 0x4
L_467180:
L_212635:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212636
L_212637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_212638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212638
.p2align 0x4
.long 0x30DF
L_212638:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_212636:
	movq $0x1,0x148(%rbp)
L_212359:
	movq 0xE8(%rbp),%r13
	movq 0x38(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_467188
L_212360:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_467187
	cmpq $0x2,%r14
	je L_467186
L_212361:
	movq $0x2,%r15
L_212362:
	cmpq $0x1,%r15
	je L_467185
	cmpq $0x2,%r15
	je L_467184
L_212363:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x128(%rbp)
	addq $0x18,%r12
L_212364:
	movq 0xE8(%rbp),%r15
	movq 0x48(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x130(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x140(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_211861
L_212366:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r11
	jne L_211861
L_212368:
	cmpl %r10d,%r9d
	jne L_212124
L_212370:
	movl %r10d,0x150(%rbp)
	movq $0x388B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_212371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_467184:
L_212380:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x128(%rbp)
	jmp L_212364
.p2align 0x4
L_467185:
L_212379:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x2,0x8(%r15)
	movq %r15,0x128(%rbp)
	jmp L_212364
.p2align 0x4
L_467186:
L_212382:
	movq $0x2,0x128(%rbp)
	jmp L_212364
.p2align 0x4
L_467187:
L_212381:
	movq $0x1,0x128(%rbp)
	jmp L_212364
.p2align 0x4
L_467188:
L_212383:
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_467191
	cmpq $0x2,%r15
	je L_467190
L_212384:
	movq 0xE8(%rbp),%r14
	movq 0x20(%r14),%r13
	cmpq $0x1,%r13
	je L_212282
L_212385:
	movq %r13,0x158(%rbp)
	movq %r15,0x160(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_212386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
L_467190:
L_212549:
	movq (globalObjptr+0x2410)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467191:
L_212460:
	movq 0x130(%rbp),%r13
	movq 0x20(%r13),%r15
	movq %r15,0x128(%rbp)
	movq 0xE8(%rbp),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x150(%rbp)
L_212461:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_212462
L_212464:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_467206
L_212465:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r13
	jne L_211861
L_212467:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%ebx
	movslq %ebx,%r15
	cmpq %r15,%r14
	jne L_211861
L_212469:
	cmpl %ecx,%ebx
	jne L_467203
L_212472:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_2260:
	cmpl %ecx,%ebx
	je L_467199
L_212473:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_212475
L_212476:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x128(%rbp),%r10
	movq 0x8(%r10,%r11,1),%r9
	cmpq %r14,%r13
	jnb L_212475
L_212478:
	salq $0x4,%r13
	movq 0x150(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq 0x0(%r9),%r11
	cmpq $0x1,0x8(%r11)
	je L_467196
L_212479:
	xorl %r11d,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
L_212480:
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_467195
L_212481:
	xorl %r13d,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
L_212482:
	cmpl %ecx,%ebx
	jne L_467193
L_212538:
	movl (localWord32+0x4)(%rip),%ebx
	incl %ebx
	jo L_211890
L_212539:
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2260
.p2align 0x4
L_467193:
L_212483:
	movq 0x130(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_467194
L_212493:
	movq 0x40(%rbp),%r14
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_212494+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467194:
L_212485:
	movq %r15,0x160(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_212486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
L_467195:
L_212540:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
	jmp L_212482
.p2align 0x4
L_467196:
L_212541:
	movl $0x1,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
	jmp L_212480
.p2align 0x4
L_467199:
L_212542:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212543
L_212547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212548
.p2align 0x4
.long 0x30ED
L_212548:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_212543:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_467201
	cmpq $0x2,%r14
	je L_467200
L_212544:
	movq $0x1,%r15
	jmp L_212362
.p2align 0x4
L_467200:
L_212546:
	movq $0x1,0x128(%rbp)
	jmp L_212364
.p2align 0x4
L_467201:
L_212545:
	movq $0x1,0x128(%rbp)
	jmp L_212364
.p2align 0x4
L_467203:
L_212471:
	movq (globalObjptr+0x1B28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467206:
L_212462:
	movq (globalObjptr+0x2408)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467212:
L_212560:
	movq (globalObjptr+0x2400)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467214:
L_212358:
	movq $0x2,0x148(%rbp)
	jmp L_212359
.p2align 0x4
L_467215:
L_212641:
	movq $0x1,0x128(%rbp)
	movq %r13,%r15
	jmp L_212357
.p2align 0x4
L_467216:
L_212640:
	movq $0x2,0x128(%rbp)
	movq %r13,%r15
	jmp L_212357
.p2align 0x4
L_467217:
L_212643:
	movq $0x2,0x128(%rbp)
	movq $0x2,%r15
	jmp L_212357
.p2align 0x4
L_467218:
L_212642:
	movq $0x1,0x128(%rbp)
	movq $0x1,%r15
	jmp L_212357
.p2align 0x4
.long 0x30D4
L_212322:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212323
L_212350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212351
.p2align 0x4
.long 0x30D8
L_212351:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212323:
	cmpq $0x1,0x130(%rbp)
	je L_467222
L_212324:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xB4(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_212326:
	testl %r13d,%r13d
	jz L_467220
L_212327:
	movq 0x128(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_212328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_467220:
L_212338:
	movq 0x130(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_212339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_467222:
L_212349:
	movq $0x2413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq $0x1,0x8(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_212259
.p2align 0x4
.long 0x30D4
L_212301:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212302
L_212317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212318
.p2align 0x4
.long 0x30D8
L_212318:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212302:
	movq 0xE8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x138(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x130(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_211861
L_212304:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jne L_211861
L_212306:
	cmpl %r10d,%r9d
	jne L_212124
L_212308:
	movl %r10d,0x150(%rbp)
	movq $0x38AD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_212309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x30C9
L_212291:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212292
L_212297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_212298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212298
.p2align 0x4
.long 0x30D3
L_212298:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_212292:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x138(%rbp)
	movq $0x402D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x130(%rbp)
	addq $0x18,%r12
	addq $0x130,%rbp
	leaq (L_212293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x30C9
L_212273:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212274
L_212279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_212280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212280
.p2align 0x4
.long 0x30D3
L_212280:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_212274:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x138(%rbp)
	movq $0x3F99,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x130(%rbp)
	addq $0x18,%r12
	addq $0x130,%rbp
	leaq (L_212275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x865
L_213464:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_213465
L_213473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_213474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_213474
.p2align 0x4
.long 0x7A4
L_213474:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_213465:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_213472
L_213466:
L_213467:
	movq $0x292B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_213470
L_213468:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_213462
.p2align 0x4
.long 0x30AC
L_212009:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212010
L_212812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212813
.p2align 0x4
.long 0x310B
L_212813:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212010:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x128(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0x10110)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x120(%rbp),%r14
	cmpq $0x1,0x8(%r14)
	je L_467233
L_212011:
	movq (globalObjptr+0x10118)(%rip),%r15
L_212012:
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_467233:
L_212811:
	movq (globalObjptr+0x10128)(%rip),%r15
	jmp L_212012
.p2align 0x4
.long 0x30CD
L_212256:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x148(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x148,%rbp
	leaq (L_212257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
.long 0x30EF
L_212651:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x158(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_212652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
.long 0x30E7
L_212553:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212359
L_212555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212556
.p2align 0x4
.long 0x30E9
L_212556:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	jmp L_212359
.p2align 0x4
.long 0x30EA
L_212587:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212588
L_212629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_212630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212630
.p2align 0x4
.long 0x30EC
L_212630:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_212588:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movl 0xB4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x170(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x148(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_211861
L_212590:
	movl %r11d,0x188(%rbp)
	movq $0x39BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_212591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x30E7
L_212582:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212359
L_212584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212585
.p2align 0x4
.long 0x30E9
L_212585:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	jmp L_212359
.p2align 0x4
.long 0x30CD
L_212371:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212372
L_212377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_212378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212378
.p2align 0x4
.long 0x30D0
L_212378:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_212372:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x130(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x150(%rbp)
	movq $0x3F9B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	addq $0x148,%rbp
	leaq (L_212373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x30DD
L_212386:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212387
L_212457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212458
.p2align 0x4
.long 0x30E9
L_212458:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_212387:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_467241
	cmpq $0x2,%r14
	je L_467240
L_212388:
	movq 0x128(%rbp),%r15
	jmp L_212362
.p2align 0x4
L_467240:
L_212448:
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_212449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467241:
L_212390:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x148(%rbp)
	cmpq $0x1,%r14
	je L_212282
L_212391:
	movq 0x130(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_467242
L_212398:
	movq 0x40(%rbp),%r14
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_212399+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467242:
L_212393:
	movq %r15,0x158(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x150,%rbp
	leaq (L_212394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
.long 0x30EA
L_212494:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212495
L_212536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_212537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212537
.p2align 0x4
.long 0x30EC
L_212537:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_212495:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movl 0xB4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x170(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x128(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_211861
L_212497:
	movl %r11d,0x188(%rbp)
	movq $0x39B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_212498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x30DD
L_212486:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212487
L_212491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212492
.p2align 0x4
.long 0x30E9
L_212492:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_212487:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_212390
	cmpq $0x2,%r14
	je L_212448
L_212488:
	movq 0x128(%rbp),%r15
	jmp L_212362
.p2align 0x4
.long 0x30D9
L_212328:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_212329:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_212330
L_212331:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF26,%r15
	jne L_467250
L_212332:
	movq 0x0(%r13),%r15
	movq %r15,0x140(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (x_713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_467250:
L_212330:
	movq (globalObjptr+0x23F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x30DA
L_212339:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212340
L_212347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212348
.p2align 0x4
.long 0x30DB
L_212348:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212340:
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x8(%r14)
	jne L_212341
L_212342:
	movq $0x1,0x140(%rbp)
	movl $0x0,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_212343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x30D5
L_212309:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212310
L_212315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_212316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212316
.p2align 0x4
.long 0x30D7
L_212316:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_212310:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x138(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x140(%rbp)
	movq $0x402B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	addq $0x138,%rbp
	leaq (L_212311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x30D1
L_212293:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212294
L_212295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_212296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212296
.p2align 0x4
.long 0x30D2
L_212296:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_212294:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_212259
.p2align 0x4
.long 0x30D1
L_212275:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212276
L_212277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_212278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212278
.p2align 0x4
.long 0x30D2
L_212278:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_212276:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_212259
.p2align 0x4
.long 0x30AD
L_212013:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212014
L_212809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212810
.p2align 0x4
.long 0x310A
L_212810:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212014:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10120)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x110(%rbp)
	je L_467257
L_212015:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_467257:
L_212804:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x30CE
L_212257:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212258
L_212261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_212262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212262
.p2align 0x4
.long 0x30CF
L_212262:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_212258:
	movq $0x1E61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_212259
.p2align 0x4
.long 0x30F0
L_212652:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_212653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
.long 0x30E1
L_212591:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212592
L_212627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_212628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212628
.p2align 0x4
.long 0x30E4
L_212628:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_212592:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x178(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x170(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x180(%rbp)
	movq $0x38F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	addq $0x178,%rbp
	leaq (L_212593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x30D5
L_212373:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212374
L_212375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_212376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212376
.p2align 0x4
.long 0x30D7
L_212376:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_212374:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_212259
.p2align 0x4
.long 0x30E7
L_212449:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212450
L_212455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_212456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212456
.p2align 0x4
.long 0x30DF
L_212456:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_212450:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x148(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xB4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x158(%rbp)
	movl $0x0,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_212451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x30E0
L_212399:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212400
L_212444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_212445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212445
.p2align 0x4
.long 0x30E6
L_212445:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_212400:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x158(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x160(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movl 0xB4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x130(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x168(%rbp)
	cmpq $0x1,%r14
	je L_212282
L_212401:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x170(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_211861
L_212403:
	movl %r11d,0x188(%rbp)
	movq $0x39BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_212404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x30DE
L_212394:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212395
L_212396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_212397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212397
.p2align 0x4
.long 0x30DF
L_212397:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_212395:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	jmp L_212364
.p2align 0x4
.long 0x30E1
L_212498:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212499
L_212534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_212535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212535
.p2align 0x4
.long 0x30E4
L_212535:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_212499:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x178(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x170(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x180(%rbp)
	movq $0x38EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	addq $0x178,%rbp
	leaq (L_212500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x30D9
x_713:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212333
L_212336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_212337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212337
.p2align 0x4
.long 0x30D0
L_212337:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_212333:
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0xB4(%rbp)
	je L_467268
L_212334:
	movq $0x2413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x130(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_212259
.p2align 0x4
L_467268:
L_212335:
	movq $0x2413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq $0x1,0x8(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_212259
.p2align 0x4
.long 0x30DA
L_212343:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212344
L_212345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212346
.p2align 0x4
.long 0x30DB
L_212346:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212344:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_212259
.p2align 0x4
.long 0x30D6
L_212311:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212312
L_212313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_212314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212314
.p2align 0x4
.long 0x30D3
L_212314:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_212312:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_212259
.p2align 0x4
.long 0x30AE
L_212016:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212017
L_212802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212803
.p2align 0x4
.long 0x2CB9
L_212803:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212017:
	movq 0x110(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_212019:
	movl %r13d,0x148(%rbp)
	movq $0x3C6F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3109
L_212805:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212806
L_212807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212808
.p2align 0x4
.long 0x2D10
L_212808:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212806:
	movq 0x60(%rbp),%r15
L_212029:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF250)(%rip),%r15
	movq %r15,0x8(%r14)
	cmpq $0x1,0x108(%rbp)
	je L_467274
L_212030:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_467274:
L_212792:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x30F1
L_212653:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212654
L_212663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212664
.p2align 0x4
.long 0x30E9
L_212664:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_212654:
	movq 0x140(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_211861
L_212656:
	movl %r13d,0x160(%rbp)
	movq $0x384B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x158(%rbp)
	addq $0x10,%r12
	addq $0x158,%rbp
	leaq (L_212657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
.long 0x30E2
L_212593:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212594
L_212625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_212626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212626
.p2align 0x4
.long 0x30E5
L_212626:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_212594:
	movq 0x170(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_212596:
	movl %r13d,0x188(%rbp)
	movq $0x4027,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_212597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x30E8
L_212451:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212452
L_212453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_212454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212454
.p2align 0x4
.long 0x30E6
L_212454:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_212452:
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq $0x1,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x148(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x150(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x130(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r13
	movq $0x1E99,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	movq $0x23B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x128(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x128(%rbp)
	jmp L_212364
.p2align 0x4
.long 0x30E1
L_212404:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212405
L_212441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_212442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212442
.p2align 0x4
.long 0x30E4
L_212442:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_212405:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x178(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x170(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x180(%rbp)
	movq $0x38F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	addq $0x178,%rbp
	leaq (L_212406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x30E2
L_212500:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212501
L_212532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_212533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212533
.p2align 0x4
.long 0x30E5
L_212533:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_212501:
	movq 0x170(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_211861
L_212503:
	movl %r13d,0x188(%rbp)
	movq $0x4029,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_212504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x2D07
L_212020:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x150(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x158(%rbp)
	addq $0x140,%rbp
	leaq (L_212021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x2D07
L_212031:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212032
L_212790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212791
.p2align 0x4
.long 0x2CB9
L_212791:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212032:
	movq 0x108(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_212034:
	movl %r13d,0x148(%rbp)
	movq $0x3B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3107
L_212793:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212794
L_212795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212796
.p2align 0x4
.long 0x2D10
L_212796:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212794:
	movq 0x108(%rbp),%r15
L_212044:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF020)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,0x8(%r14)
	je L_467286
L_212045:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_212046:
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_212047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_467286:
L_212784:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_212046
.p2align 0x4
.long 0x30F1
L_212657:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq %r15,0x158(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_212658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
.long 0x30E1
L_212597:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212598
L_212623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_212624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212624
.p2align 0x4
.long 0x30E4
L_212624:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_212598:
	movq (globalObjptr+0xF38)(%rip),%r13
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq %r13,0x8(%r14)
	movq 0x168(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x170(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x158(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x130(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r11
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r15)
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x6FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x701,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x180(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x28,%r12
	movq %r13,0x10(%r11)
	movq 0x148(%rbp),%r13
	movq %r13,0x18(%r11)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_212599:
	movq %r15,0x0(%r13)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_467298
L_212600:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_212602:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_212603
L_212615:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD52,%r13
	jne L_212603
L_212616:
	movq 0x0(%r14),%r13
	cmpq %r13,0xF8(%rbp)
	je L_467293
L_212603:
	incl %ecx
	movl %ecx,0xB4(%rbp)
	jo L_211890
L_212604:
	cmpq $0x1,%r15
	je L_467288
L_212605:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_212602
.p2align 0x4
L_467288:
L_212606:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212607
L_212613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_212614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212614
.p2align 0x4
.long 0x30EE
L_212614:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_212607:
	movl 0xB4(%rbp),%ecx
L_212608:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_212609:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212611
L_212612:
	movl %ecx,0x0(%r15)
L_212611:
	movq $0x1AA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x160(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x168(%rbp),%r15
	jmp L_212581
.p2align 0x4
L_467293:
L_212618:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_212619:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212434
L_212621:
	movl %ecx,0x0(%r15)
	jmp L_212434
.p2align 0x4
L_467298:
L_212622:
	xorl %ecx,%ecx
	jmp L_212608
.p2align 0x4
.long 0x30E2
L_212406:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212407
L_212439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_212440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212440
.p2align 0x4
.long 0x30E5
L_212440:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_212407:
	movq 0x170(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_211861
L_212409:
	movl %r13d,0x188(%rbp)
	movq $0x4027,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_212410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x30E1
L_212504:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212505
L_212530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_212531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212531
.p2align 0x4
.long 0x30E4
L_212531:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_212505:
	movq (globalObjptr+0xF38)(%rip),%r13
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq %r13,0x8(%r14)
	movq 0x168(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x170(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x158(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x130(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r11
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r15)
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x6FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x701,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x180(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x28,%r12
	movq %r13,0x10(%r11)
	movq 0x128(%rbp),%r13
	movq %r13,0x18(%r11)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_212506:
	movq %r15,0x0(%r13)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_467313
L_212507:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_212509:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_212510
L_212522:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD52,%r13
	jne L_212510
L_212523:
	movq 0x0(%r14),%r13
	cmpq %r13,0xF8(%rbp)
	je L_467308
L_212510:
	incl %ecx
	movl %ecx,0xB4(%rbp)
	jo L_211890
L_212511:
	cmpq $0x1,%r15
	je L_467303
L_212512:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_212509
.p2align 0x4
L_467303:
L_212513:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212514
L_212520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_212521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212521
.p2align 0x4
.long 0x30EB
L_212521:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_212514:
	movl 0xB4(%rbp),%ecx
L_212515:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_212516:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212518
L_212519:
	movl %ecx,0x0(%r15)
L_212518:
	movq $0x1AA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x160(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x168(%rbp),%r15
	jmp L_212485
.p2align 0x4
L_467308:
L_212525:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_212526:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212434
L_212528:
	movl %ecx,0x0(%r15)
	jmp L_212434
.p2align 0x4
L_467313:
L_212529:
	xorl %ecx,%ecx
	jmp L_212515
.p2align 0x4
.long 0x2D07
L_212021:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212022
L_212800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212801
.p2align 0x4
.long 0x2CB9
L_212801:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212022:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_212023:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_211890
L_212024:
	cmpq $0x1,%r14
	je L_467316
L_212025:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_212023
.p2align 0x4
L_467316:
L_212026:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212027
L_212798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_212799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212799
.p2align 0x4
.long 0x3108
L_212799:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_212027:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_467317
L_212028:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x138(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_212029
.p2align 0x4
L_467317:
L_212797:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_212029
.p2align 0x4
.long 0x30AF
L_212035:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x150(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x158(%rbp)
	addq $0x140,%rbp
	leaq (L_212036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x30B0
L_212047:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212048
L_212782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212783
.p2align 0x4
.long 0x2D10
L_212783:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212048:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x128(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_212049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x30F2
L_212658:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_212659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
.long 0x30E1
L_212410:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212411
L_212437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_212438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212438
.p2align 0x4
.long 0x30E4
L_212438:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_212411:
	movq (globalObjptr+0xF38)(%rip),%r13
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq %r13,0x8(%r14)
	movq 0x160(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x170(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x150(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x130(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r11
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r15)
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x6FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x701,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x180(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x28,%r12
	movq %r13,0x10(%r11)
	movq 0x168(%rbp),%r13
	movq %r13,0x18(%r11)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_211958
L_212412:
	movq %r15,0x0(%r13)
	movq 0x158(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_467332
L_212413:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_212415:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_212416
L_212428:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD52,%r13
	jne L_212416
L_212429:
	movq 0x0(%r14),%r13
	cmpq %r13,0xF8(%rbp)
	je L_467327
L_212416:
	incl %ecx
	movl %ecx,0xB4(%rbp)
	jo L_211890
L_212417:
	cmpq $0x1,%r15
	je L_467322
L_212418:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_212415
.p2align 0x4
L_467322:
L_212419:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212420
L_212426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_212427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212427
.p2align 0x4
.long 0x30E3
L_212427:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_212420:
	movl 0xB4(%rbp),%ecx
L_212421:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_212422:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212424
L_212425:
	movl %ecx,0x0(%r15)
L_212424:
	movq $0x1AA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x160(%rbp),%r15
	jmp L_212393
.p2align 0x4
L_467327:
L_212431:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_211969
L_212432:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_212434
L_212435:
	movl %ecx,0x0(%r15)
	jmp L_212434
.p2align 0x4
L_467332:
L_212436:
	xorl %ecx,%ecx
	jmp L_212421
.p2align 0x4
.long 0x30AF
L_212036:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212037
L_212788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_212789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212789
.p2align 0x4
.long 0x2CB9
L_212789:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_212037:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_212038:
	addl 0x0(%r15),%ecx
	movl %ecx,0x108(%rbp)
	jo L_211890
L_212039:
	cmpq $0x1,%r14
	je L_467335
L_212040:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_212038
.p2align 0x4
L_467335:
L_212041:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212042
L_212786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_212787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212787
.p2align 0x4
.long 0x3106
L_212787:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_212042:
	movl 0x108(%rbp),%r15d
	testl %r15d,%r15d
	jz L_467336
L_212043:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x138(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_212044
.p2align 0x4
L_467336:
L_212785:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_212044
.p2align 0x4
.long 0x30AA
L_212049:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212050
L_212780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212781
.p2align 0x4
.long 0x3105
L_212781:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212050:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xE8(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_212051:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_211890
L_212052:
	cmpq $0x1,%r14
	je L_467340
L_212053:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_212051
.p2align 0x4
L_467340:
L_212054:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212055
L_212778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212779
.p2align 0x4
.long 0x3104
L_212779:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212055:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_467341
L_212056:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
x_712:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x130(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_212057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_467341:
L_212777:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_712
.p2align 0x4
.long 0x30F3
L_212659:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212660
L_212661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_212662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212662
.p2align 0x4
.long 0x30F4
L_212662:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_212660:
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x20(%r15)
	jmp L_212259
.p2align 0x4
.long 0x30B1
L_212057:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x30B1
L_212058:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212059
L_212775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212776
.p2align 0x4
.long 0x3103
L_212776:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212059:
	movq $0x3455,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x128(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x30B2
L_212060:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_212061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x30B2
L_212061:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x128(%rbp)
	movq %r15,0x130(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_212062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x30B2
L_212062:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_212063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x30B2
L_212063:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_212064
L_212773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_212774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_212774
.p2align 0x4
.long 0x3102
L_212774:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_212064:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_212067
L_212065:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_211996
