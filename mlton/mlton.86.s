/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:18:29 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_2017
.hidden x_2017
x_2017:
L_255030:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_255031
L_255222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_255223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255223
.p2align 0x4
.long 0x460
L_255223:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_255031:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r14,%r11
	jne L_484290
L_255034:
	cmpl $0x0,%r13d
	jl L_484289
L_255035:
	movl $0x0,0x8(%rbp)
.p2align 0x4,,0x7
loop_2998:
	movl 0x8(%rbp),%r15d
	cmpl 0x50(%rbp),%r15d
	jnl L_484287
L_255216:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x0(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	salq $0x4,%r14
	movl 0x0(%r13,%r14,1),%r15d
	testl %r15d,%r15d
	jnz L_484286
.p2align 0x4,,0x7
L_255218:
	incl 0x8(%rbp)
	jmp loop_2998
.p2align 0x4
L_484286:
L_255219:
	movq %r11,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_255220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3799
.p2align 0x4
L_484287:
L_255036:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255037
L_255214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_255215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255215
.p2align 0x4
.long 0x406E
L_255215:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_255037:
	movq $0x3221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_255038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMapi_0
.p2align 0x4
L_484289:
L_255221:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484290:
L_255033:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x406F
L_255220:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_255218
.p2align 0x4
.long 0x405C
L_255038:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_255033
L_255040:
	decl %r13d
	jo L_255041
L_255042:
	movl %r13d,0x40(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
loop_2999:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484307
.p2align 0x4,,0x7
L_255043:
	movl 0x40(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_484292
L_255044:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp loop_2999
.p2align 0x4
L_484292:
L_255045:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_484293
L_255046:
	movq 0x0(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x30(%rbp)
L_255047:
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_255048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_484293:
L_255211:
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq $0x1,0x10(%rbp)
	movq %r14,%r15
L_255057:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x443,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%rdx
	testq %rdx,%rdx
	jz L_484306
L_255058:
	cmpq $0x7FFFFFFF,%rdx
	ja L_255085
L_255059:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_255060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255060
.p2align 0x4
.long 0x405E
L_255060:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x20(%rbp)
L_255061:
	movq $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_3000:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484304
.p2align 0x4,,0x7
L_255062:
	movq 0x30(%rbp),%r14
	cmpq 0x58(%rbp),%r14
	jnl L_484303
L_255064:
	movl %r14d,%ecx
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x0(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x38(%rbp)
	salq $0x4,%r15
	movl 0x0(%r13,%r15,1),%r14d
	testl %r14d,%r14d
	jnz L_484302
L_255065:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_484301
L_255066:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255067:
	incl %ecx
	jo L_484300
L_255068:
	cmpq $0x1,%r15
	je L_484294
L_255069:
	movq 0x8(%r15),%r15
	jmp L_255067
.p2align 0x4
L_484294:
L_255070:
L_255071:
	movslq %ecx,%r15
	movq %r15,0x40(%rbp)
	testq %r15,%r15
	jnz L_484298
L_255086:
	movq (globalObjptr+0xD88)(%rip),%r15
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_255075:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3001:
	cmpq 0x40(%rbp),%r15
	jnl L_484296
L_255081:
	cmpq $0x1,%r14
	je L_484295
L_255082:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3001
.p2align 0x4
L_484295:
L_255083:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484296:
L_255076:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484297
.p2align 0x4,,0x7
L_255077:
	movq 0x48(%rbp),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x47BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x30,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r13,0x10(%r11)
	movq 0x38(%rbp),%r13
	movq %r13,0x18(%r11)
	movq %r14,0x20(%r11)
	movq %r11,%r15
L_255078:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_3000
.p2align 0x4
L_484297:
L_255079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_255080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255080
.p2align 0x4
.long 0x4060
L_255080:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_255077
.p2align 0x4
L_484298:
L_255072:
	movq 0x40(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_484299
L_255073:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_255074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255074
.p2align 0x4
.long 0x405F
L_255074:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x48(%rbp)
	jmp L_255075
.p2align 0x4
L_484299:
L_255085:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484300:
L_255041:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484301:
L_255087:
	xorl %ecx,%ecx
	jmp L_255071
.p2align 0x4
L_484302:
L_255088:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_255078
.p2align 0x4
L_484303:
L_255063:
	movq 0x20(%rbp),%r15
	movq $0xC15,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484304:
L_255089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_255090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255090
.p2align 0x4
.long 0x4061
L_255090:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_255062
.p2align 0x4
L_484306:
L_255092:
	movq (globalObjptr+0x1BB8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_255061
.p2align 0x4
L_484307:
L_255212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_255213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255213
.p2align 0x4
.long 0x406D
L_255213:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_255043
.p2align 0x4
.long 0x405D
L_255048:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255049
L_255209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_255210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255210
.p2align 0x4
.long 0x1637
L_255210:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_255049:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_484331
L_255051:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r15),%r10
	movq %r10,0x60(%rbp)
	movq 0x18(%r15),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r15
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r10d
	cmpl %r10d,0x0(%r15)
	jl L_484329
L_255052:
L_255053:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_255054
L_255093:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_484317
	cmpq $0xE7A,%r15
	je L_484311
L_255054:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_484310
L_255055:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_255047
.p2align 0x4
L_484310:
L_255056:
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%rbp),%r15
	jmp L_255057
.p2align 0x4
L_484311:
L_255183:
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x78(%rbp)
	movq $0xECF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_484316
L_255184:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_255185:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484315
.p2align 0x4,,0x7
L_255186:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x2831,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_484312
L_255187:
	movq %r15,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_255185
.p2align 0x4
L_484312:
L_255188:
	movq %r14,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_255189:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484314
.p2align 0x4,,0x7
L_255190:
	movq $0x2831,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_484313
L_255191:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_255189
.p2align 0x4
L_484313:
L_255193:
	movq $0xED1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x18(%r14)
	movq $0x11B3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x78(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x2545,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x88(%rbp)
	movq %r13,0x0(%r10)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r10)
	movq $0x1CF3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x20,%r12
	movq %r11,0x8(%r13)
	movq %r15,0x10(%r13)
	movq $0xFF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	movq %r13,0x0(%r15)
	addq $0x28,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_255194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_484314:
L_255201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_255202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255202
.p2align 0x4
.long 0x1D36
L_255202:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_255190
.p2align 0x4
L_484315:
L_255203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_255204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255204
.p2align 0x4
.long 0x1D36
L_255204:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_255186
.p2align 0x4
L_484316:
L_255205:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_255193
.p2align 0x4
L_484317:
L_255094:
	movl 0x0(%r13),%r15d
	testl %r15d,%r15d
	jnz L_484319
L_255095:
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_484318
L_255096:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_255047
.p2align 0x4
L_484318:
L_255097:
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_255057
.p2align 0x4
L_484319:
L_255098:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_484327
	cmpq $0x2,%r14
	je L_484326
L_255099:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_484323
L_255160:
	movq 0x0(%r14),%r15
L_255161:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E2,%r14
	je L_484322
	cmpq $0x23E3,%r14
	je L_484321
	cmpq $0x23E4,%r14
	je L_484320
L_255162:
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x78,%rbp
	leaq (L_255163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_484320:
L_255180:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (loop_3003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_484321:
L_255179:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (loop_3003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_484322:
L_255173:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (loop_3003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_484323:
L_255100:
	movq 0x0(%r14),%r15
x_858:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_484325
L_255159:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x60(%rbp)
newNoname_4:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movl 0x60(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_484324
L_255113:
	movq (globalObjptr+0xD338)(%rip),%r15
L_255114:
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xD330)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_255115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_484324:
L_255131:
	movq (globalObjptr+0xDD40)(%rip),%r15
	jmp L_255114
.p2align 0x4
L_484325:
L_255101:
	movq $0x2,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_255102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_3
.p2align 0x4
L_484326:
L_255158:
	movl $0x0,0x60(%rbp)
	jmp newNoname_4
.p2align 0x4
L_484327:
L_255169:
	movl $0x1,0x60(%rbp)
	jmp newNoname_4
.p2align 0x4
L_484329:
L_255206:
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_484330
L_255207:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_255047
.p2align 0x4
L_484330:
L_255208:
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_255057
.p2align 0x4
L_484331:
L_255050:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x406B
L_255194:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255195
L_255199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_255200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255200
.p2align 0x4
.long 0x406C
L_255200:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_255195:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_484334
L_255196:
	movl 0x0(%r14),%r13d
	movq $0x289D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_484333
L_255197:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_255047
.p2align 0x4
L_484333:
L_255198:
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%rbp),%r15
	jmp L_255057
.p2align 0x4
L_484334:
L_255123:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x406A
L_255163:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_255158
	cmpb $0x2,%r13b
	je L_484339
L_255164:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_255169
	cmpq $0x2,%r14
	je L_255158
L_255165:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_484336
L_255167:
	movq 0x0(%r14),%r15
	jmp L_255161
.p2align 0x4
L_484336:
L_255166:
	movq 0x0(%r14),%r15
	jmp x_858
.p2align 0x4
L_484339:
L_255146:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4062
loop_3003:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_255169
	cmpq $0x2,%r14
	je L_255158
L_255174:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_484341
L_255176:
	movq 0x0(%r14),%r15
	jmp L_255161
.p2align 0x4
L_484341:
L_255175:
	movq 0x0(%r14),%r15
	jmp x_858
.p2align 0x4
.long 0x4063
L_255115:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x528)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_255041
L_255116:
	movl %r14d,0x0(%r15)
	movl %r13d,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_255117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4062
L_255102:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r14d
	movl %r14d,0x60(%rbp)
	testl %r14d,%r14d
	jnz L_255158
L_255103:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_255133
	cmpq $0x2,%r14
	je L_255109
L_255104:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_484348
L_255134:
	movq 0x0(%r14),%r15
L_255135:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E2,%r14
	je L_484347
	cmpq $0x23E3,%r14
	je L_484346
	cmpq $0x23E4,%r14
	je L_484345
L_255136:
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x78,%rbp
	leaq (L_255137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_484345:
L_255154:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (loop_3002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_484346:
L_255153:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (loop_3002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_484347:
L_255147:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (loop_3002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_484348:
L_255105:
	movq 0x0(%r14),%r15
x_859:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_484350
L_255107:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_484349
L_255109:
	movq (globalObjptr+0xE290)(%rip),%r15
L_255110:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_255111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484349:
L_255133:
	movq (globalObjptr+0xE298)(%rip),%r15
	jmp L_255110
.p2align 0x4
L_484350:
L_255106:
	movq (globalObjptr+0x1AC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4064
L_255117:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_255118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x406A
L_255137:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_255109
	cmpb $0x2,%r13b
	je L_255146
L_255138:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_255133
	cmpq $0x2,%r14
	je L_255109
L_255139:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_484354
L_255141:
	movq 0x0(%r14),%r15
	jmp L_255135
.p2align 0x4
L_484354:
L_255140:
	movq 0x0(%r14),%r15
	jmp x_859
.p2align 0x4
.long 0x4062
loop_3002:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_255133
	cmpq $0x2,%r14
	je L_255109
L_255148:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_484359
L_255150:
	movq 0x0(%r14),%r15
	jmp L_255135
.p2align 0x4
L_484359:
L_255149:
	movq 0x0(%r14),%r15
	jmp x_859
.p2align 0x4
.long 0x4062
L_255111:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE290)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_255112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4065
L_255118:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_255119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4062
L_255112:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl $0x0,0x60(%rbp)
	jmp newNoname_4
.p2align 0x4
.long 0x4066
L_255119:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255120
L_255129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_255130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255130
.p2align 0x4
.long 0x4069
L_255130:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_255120:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x64(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1CED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x10(%r15)
	addq $0x28,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_255121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4067
L_255121:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255122
L_255127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_255128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255128
.p2align 0x4
.long 0x4068
L_255128:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_255122:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_255123
L_255124:
	movl 0x0(%r14),%r13d
	movq $0x289D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_484363
L_255125:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_255047
.p2align 0x4
L_484363:
L_255126:
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%rbp),%r15
	jmp L_255057
.text
.p2align 0x4
.globl x_2018
.hidden x_2018
x_2018:
L_255224:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_255249
L_255225:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x238,%r15
	jb L_484366
L_255226:
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl 0x4(%r15),%r13d
	movq $0xB4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x1E0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xB53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r13d,0x0(%r11)
	addq $0x60,%r12
	movl $0x0,0x4(%r11)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r11)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r11)
	movq 0x48(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x18(%rbp),%r10
	movq %r10,0x20(%r11)
	movq 0x40(%rbp),%r9
	movq %r9,0x28(%r11)
	movq %r15,0x30(%r11)
	movq 0x38(%rbp),%r15
	movq %r15,0x38(%r11)
	movq 0x30(%rbp),%r8
	movq %r8,0x40(%r11)
	movq 0x28(%rbp),%rsp
	movq %rsp,0x48(%r11)
	movq 0x20(%rbp),%rsp
	movq %rsp,0x50(%r11)
	movq $0xB55,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r14d,0x8(%rsp)
	movq %r11,0x78(%rsp)
	addq $0x1C8,%r12
	movq 0x190(%rbp),%r14
	movq %r14,0x0(%rsp)
	movl $0x0,0xC(%rsp)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x10(%rsp)
	movq %r9,0x18(%rsp)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x20(%rsp)
	movq %r13,0x28(%rsp)
	movq 0x1C8(%rbp),%r14
	movq %r14,0x30(%rsp)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x38(%rsp)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x40(%rsp)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x48(%rsp)
	movq 0x0(%rbp),%r14
	movq %r14,0x50(%rsp)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x58(%rsp)
	movq %r8,0x60(%rsp)
	movq 0x1A0(%rbp),%r14
	movq %r14,0x68(%rsp)
	movq 0x198(%rbp),%r14
	movq %r14,0x70(%rsp)
	movq %r15,0x80(%rsp)
	movq 0x188(%rbp),%r15
	movq %r15,0x88(%rsp)
	movq 0x180(%rbp),%r15
	movq %r15,0x90(%rsp)
	movq 0x178(%rbp),%r15
	movq %r15,0x98(%rsp)
	movq 0x170(%rbp),%r15
	movq %r15,0xA0(%rsp)
	movq 0x168(%rbp),%r15
	movq %r15,0xA8(%rsp)
	movq 0x160(%rbp),%r15
	movq %r15,0xB0(%rsp)
	movq 0x158(%rbp),%r15
	movq %r15,0xB8(%rsp)
	movq 0x150(%rbp),%r15
	movq %r15,0xC0(%rsp)
	movq 0x148(%rbp),%r15
	movq %r15,0xC8(%rsp)
	movq 0x140(%rbp),%r15
	movq %r15,0xD0(%rsp)
	movq 0x138(%rbp),%r15
	movq %r15,0xD8(%rsp)
	movq 0x130(%rbp),%r15
	movq %r15,0xE0(%rsp)
	movq 0x128(%rbp),%r15
	movq %r15,0xE8(%rsp)
	movq 0x120(%rbp),%r15
	movq %r15,0xF0(%rsp)
	movq 0x118(%rbp),%r15
	movq %r15,0xF8(%rsp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rsp)
	movq 0x108(%rbp),%r15
	movq %r15,0x108(%rsp)
	movq 0x100(%rbp),%r15
	movq %r15,0x110(%rsp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x118(%rsp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x120(%rsp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x128(%rsp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x130(%rsp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x138(%rsp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x140(%rsp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x148(%rsp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x150(%rsp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x158(%rsp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x160(%rsp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x168(%rsp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x170(%rsp)
	movq 0x98(%rbp),%r15
	movq %r15,0x178(%rsp)
	movq 0x90(%rbp),%r15
	movq %r15,0x180(%rsp)
	movq 0x88(%rbp),%r15
	movq %r15,0x188(%rsp)
	movq 0x80(%rbp),%r15
	movq %r15,0x190(%rsp)
	movq 0x78(%rbp),%r15
	movq %r15,0x198(%rsp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1A0(%rsp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1A8(%rsp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1B0(%rsp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1B8(%rsp)
	movq %rsp,0x1F8(%rbp)
	movq %r10,0x1F0(%rbp)
	addq $0x1F0,%rbp
	leaq (L_255227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3950
.p2align 0x4
L_484366:
L_255249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x238,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_255250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255250
.p2align 0x4
.long 0x4071
L_255250:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	jmp L_255226
.p2align 0x4
.long 0x4070
L_255227:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x1E0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r13
	je L_484375
L_255228:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255229:
	incl %ecx
	jo L_484374
L_255231:
	cmpq $0x1,%r15
	je L_484368
L_255232:
	movq 0x8(%r15),%r15
	jmp L_255229
.p2align 0x4
L_484368:
L_255233:
L_255234:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_484373
L_255235:
	cmpq $0x7FFFFFFF,%rdx
	ja L_484372
L_255236:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_255237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255237
.p2align 0x4
.long 0xD43
L_255237:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x38(%rbp)
L_255238:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3004:
	cmpq 0x30(%rbp),%r15
	jnl L_484370
L_255243:
	cmpq $0x1,%r14
	je L_484369
L_255244:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x38(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3004
.p2align 0x4
L_484369:
L_255245:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484370:
L_255239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255240
L_255241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_255242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255242
.p2align 0x4
.long 0x187D
L_255242:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_255240:
	movq 0x38(%rbp),%r15
	movq $0x1139,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x113B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x2661,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484372:
L_255246:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484373:
L_255247:
	movq (globalObjptr+0x4FE0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_255238
.p2align 0x4
L_484374:
L_255230:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484375:
L_255248:
	xorl %ecx,%ecx
	jmp L_255234
.text
.p2align 0x4
.globl loop_3950
.hidden loop_3950
loop_3950:
loopS_28:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_255251
L_256562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_256563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256563
.p2align 0x4
.long 0x460
L_256563:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_255251:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_3005:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484450
.p2align 0x4,,0x7
L_255252:
	movq 0x8(%rbp),%r15
	movq 0x1B8(%r15),%r14
	movq 0x1B0(%r15),%r13
	movq 0x1A8(%r15),%r11
	movq 0x1A0(%r15),%r10
	movq 0x198(%r15),%r9
	movq 0x190(%r15),%r8
	movq %r8,0x18(%rbp)
	movq 0x188(%r15),%r8
	movq %r8,0x20(%rbp)
	movq 0x180(%r15),%r8
	movq 0x178(%r15),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x170(%r15),%rsp
	movq 0x168(%r15),%rsi
	movq %rsi,0x30(%rbp)
	movq 0x160(%r15),%rsi
	movq 0x158(%r15),%rdi
	movq %rdi,0x38(%rbp)
	movq 0x150(%r15),%rdi
	movq 0x148(%r15),%rdx
	movq %rdx,0x40(%rbp)
	movq 0x140(%r15),%rdx
	movq 0x138(%r15),%rcx
	movq 0x130(%r15),%rbx
	movq 0x128(%r15),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x120(%r15),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x118(%r15),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x110(%r15),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x108(%r15),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x100(%r15),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0xF8(%r15),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0xC8(%r15),%rax
	movq %rax,0x48(%rbp)
	movq 0xB8(%r15),%rax
	movq %rax,0x50(%rbp)
	movq 0xB0(%r15),%rax
	movq %rax,0x58(%rbp)
	movq 0xA8(%r15),%rax
	movq %rax,0x60(%rbp)
	movl 0x8(%r15),%eax
	movl %eax,0x68(%rbp)
	movq 0xA0(%r15),%rax
	movq %rax,0x70(%rbp)
	movq 0x98(%r15),%rax
	movq %rax,0x78(%rbp)
	movq 0x90(%r15),%rax
	movq %rax,0x80(%rbp)
	movq 0x88(%r15),%rax
	movq %rax,0x88(%rbp)
	movq 0x80(%r15),%rax
	movq %rax,0x90(%rbp)
	movq 0x78(%r15),%rax
	movq %rax,0x98(%rbp)
	movq 0x70(%r15),%rax
	movq %rax,0xA0(%rbp)
	movq 0x68(%r15),%rax
	movq %rax,0xA8(%rbp)
	movq 0x60(%r15),%rax
	movq %rax,0xB0(%rbp)
	movq 0x58(%r15),%rax
	movq %rax,0xB8(%rbp)
	movq 0x50(%r15),%rax
	movq %rax,0xC0(%rbp)
	movq 0x48(%r15),%rax
	movq %rax,0xC8(%rbp)
	movq 0x40(%r15),%rax
	movq %rax,0xD0(%rbp)
	movq 0x38(%r15),%rax
	movq %rax,0xD8(%rbp)
	movq 0x30(%r15),%rax
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x28(%r15),%rbx
	movq %rbx,0xE0(%rbp)
	movq 0x20(%r15),%rbx
	movq %rbx,0xE8(%rbp)
	movq 0x18(%r15),%rbx
	movq %rbx,0xF0(%rbp)
	movq 0x10(%rbp),%r15
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x0(%r15),%rcx
	movq %rcx,0xF8(%rbp)
	movq $0x1DB,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x100(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%rcx)
	movq %rbx,0x8(%rcx)
	movq 0x8(%r15),%rcx
	cmpq $0x1,%rcx
	je L_484448
L_255253:
	movq 0xFFFFFFFFFFFFFFF8(%rcx),%r15
	shrq $0x1,%r15
	subq $0xDF2,%r15
	xchgq %r15,%rax
	cmpq $0x7,%rax
	ja L_484376
	jmp *jumpTable_740(,%rax,8)
.data
.p2align 0x4
jumpTable_740:
.quad L_484446,L_484432,L_484430,L_484427,L_484386,L_484385,L_484378,L_484377
.text
.p2align 0x4
L_484376:
L_255254:
	movq 0x8(%rcx),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_255255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2019
.p2align 0x4
L_484377:
L_256330:
	movq 0x8(%rcx),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rcx),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2019
.p2align 0x4
L_484378:
L_256315:
	movq 0x8(%rcx),%r15
	movq 0x0(%rcx),%rbx
	movq $0x8AF,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %r15,0x0(%rcx)
	addq $0x18,%r12
	movq %rbx,0x8(%rcx)
	movq $0x8B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x88)(%rip),%rax
	movq %rax,0x8(%r15)
	movq (localObjptr+0x90)(%rip),%rax
	movq %rax,0x10(%r15)
	addq $0x28,%r12
	movq 0xB0(%rbp),%rax
	movq %rax,0x0(%r15)
	movq %rcx,0x18(%r15)
	movq $0x8B3,0x0(%r12)
	movq %r9,(localObjptr+0x20)(%rip)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x48(%rbp)
	movq %r14,(localObjptr+0x0)(%rip)
	movq (localObjptr+0x78)(%rip),%r14
	movq %r14,0x8(%r9)
	movq %rcx,0x10(%r9)
	movq (localObjptr+0x80)(%rip),%r14
	movq %r14,0x18(%r9)
	addq $0x28,%r12
	movq %rax,0x0(%r9)
	movq $0x8AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq (localObjptr+0x68)(%rip),%r9
	movq %r9,0x0(%r14)
	movq (localObjptr+0x70)(%rip),%r9
	movq %r9,0x8(%r14)
	addq $0x18,%r12
	movq %rbx,%r9
	andq $0x1,%r9
	cmpq $0x1,%r9
	je L_484383
L_256316:
	movq 0xFFFFFFFFFFFFFFF8(%rbx),%r9
	shrq $0x1,%r9
	cmpq $0x128F,%r9
	je L_484382
	cmpq $0x1290,%r9
	je L_484381
	cmpq $0x1291,%r9
	je L_484380
	cmpq $0x1292,%r9
	je L_484379
L_256317:
	movq 0x0(%rbx),%r9
	movq (localObjptr+0x20)(%rip),%rcx
	movq 0x8(%rcx),%r13
	movq 0x0(%rcx),%rbx
	movq 0x8(%rbx),%r10
	movzbq 0x0(%rbx),%rax
	shlq $0x1,%rax
	orq $0x1,%rax
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq 0x0(%r13),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rsp,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rax,0x0(%rsp)
	movq %r13,0x8(%rsp)
	movq %r8,0x10(%rsp)
	movq %r10,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rsp,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x16B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq $0x40E9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rdx,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %rdi,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %rsi,0x30(%r13)
	addq $0x58,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%r13)
	movq %r10,0x40(%r13)
	movq %r14,0x48(%r13)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x446D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq %r14,0x0(%r9)
	movq $0x1287,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq $0x0,0x0(%r8)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r8,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	movq %r9,0x0(%r15)
	movq $0x47B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D0D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484379:
L_256326:
	movq 0x0(%rbx),%r15
	movq (localObjptr+0x0)(%rip),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq 0x8(%r10),%r9
	movzbq 0x0(%r10),%r8
	shlq $0x1,%r8
	orq $0x1,%r8
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r11),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r8,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r9,0x18(%r10)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x16B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x40E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x48,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%r13)
	movq %r11,0x30(%r13)
	movq %r14,0x38(%r13)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x446F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r14,0x0(%r10)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq $0x0,0x0(%r9)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r15)
	movq $0x47B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D0D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484380:
L_256325:
	movq 0x0(%rbx),%r13
	movq (localObjptr+0x50)(%rip),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rcx
	shlq $0x1,%rcx
	orq $0x1,%rcx
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %rcx,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r8,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x16B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x40EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %rdi,0x18(%r11)
	movq %rsi,0x28(%r11)
	movq %r13,0x38(%r11)
	movq %rsp,0x40(%r11)
	addq $0x60,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%r11)
	movq 0x30(%rbp),%r15
	movq %r15,0x30(%r11)
	movq %r10,0x48(%r11)
	movq %r14,0x50(%r11)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x446B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x0,0x0(%r9)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r11,0x0(%r15)
	movq $0x47B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D0D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484381:
L_256324:
	movq 0x0(%rbx),%r9
	movq 0x8(%r10),%r8
	movq 0x0(%r10),%rsp
	movq 0x8(%rsp),%rsi
	movzbq 0x0(%rsp),%rdi
	shlq $0x1,%rdi
	orq $0x1,%rdi
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq 0x0(%r8),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %rsp,0x0(%r8)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rdi,0x0(%rsp)
	movq %r8,0x8(%rsp)
	movq %r10,0x10(%rsp)
	movq %rsi,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %rsp,0x8(%r10)
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x16B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	addq $0x10,%r12
	movq $0x40EF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r9,0x10(%r10)
	movq %r13,0x20(%r10)
	addq $0x40,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r10)
	movq %r8,0x28(%r10)
	movq %r14,0x30(%r10)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4467,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x0,0x0(%r10)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq $0x47BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D0D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484382:
L_256318:
	movq 0x0(%rbx),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r8),%r15
	movq 0x8(%r8),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq 0x8(%r10),%r9
	movzbq 0x0(%r10),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r11),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %rsp,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r9,0x18(%r10)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x16B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0x1,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_256319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_484383:
L_256327:
	shrq $0x1,%rbx
	movl %ebx,%r15d
	testl %r15d,%r15d
	jnz L_484384
L_256328:
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484384:
L_256329:
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484385:
L_256241:
	movq 0x8(%rcx),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rcx),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3950
.p2align 0x4
L_484386:
L_255786:
	movq 0x0(%rcx),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_484426
L_255788:
	testl %r13d,%r13d
	jz L_484425
L_255789:
	cmpq $0x0,%r14
	jna L_484424
L_255791:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r14),%r15
L_255792:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_255793
L_256168:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDF1,%r14
	jne L_255793
L_256169:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x40(%rbp)
	movb 0x0(%r15),%r14b
	testb %r14b,%r14b
	jnz L_255793
L_256170:
	cmpq $0x1,%r11
	je L_484420
.p2align 0x4,,0x7
L_255793:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484419
.p2align 0x4,,0x7
L_255794:
	movq $0x266B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	cmpl $0x1,0x30(%rbp)
	jl L_484418
L_255795:
	movq %r15,0x38(%rbp)
	movl $0x1,0x34(%rbp)
loop_3016:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_484395
L_255796:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_484394
L_255797:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1335,%r14
	jne L_484391
L_255798:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	jne L_484387
L_255854:
	movq %r13,0x10(%rbp)
	jmp loop_3005
.p2align 0x4
L_484387:
L_255799:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1336,%r15
	jne L_255800
L_255801:
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r14
	movq %r15,0x10(%rbp)
	movq %r14,%r15
	movq %r13,%r14
L_255803:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_255800
L_255804:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1335,%r13
	jne L_484388
L_255805:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq $0x3AEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movl $0x2,0x60(%rbp)
	addq $0x58,%rbp
	leaq (tuple_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_484388:
L_255800:
	movq (globalObjptr+0x4E80)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484391:
L_255855:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
L_255856:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_255800
L_255857:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1335,%r15
	jne L_255800
L_255858:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x4E90)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_484394:
L_255922:
	movq (globalObjptr+0x4E98)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484395:
L_255923:
	movslq 0x34(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r13),%r15
L_255924:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_255926
L_256113:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDF1,%r14
	jne L_255926
L_256114:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x50(%rbp)
	movb 0x0(%r15),%r14b
	testb %r14b,%r14b
	jnz L_255926
L_256115:
	cmpq $0x1,%r11
	je L_484414
.p2align 0x4,,0x7
L_255926:
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_484413
L_255928:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1335,%r15
	je L_484398
L_256070:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_256071:
	cmpq $0x1,%r15
	jne L_484397
.p2align 0x4,,0x7
L_256097:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484396
.p2align 0x4,,0x7
L_256098:
	movq $0x266B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_255937:
	movq %r15,0x38(%rbp)
	incl 0x34(%rbp)
	jmp loop_3016
.p2align 0x4
L_484396:
L_256099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256100
.p2align 0x4
.long 0x40DB
L_256100:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_256098
.p2align 0x4
L_484397:
L_256072:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (toString_358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
L_484398:
L_255929:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_255930:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484412
.p2align 0x4,,0x7
L_255932:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_255933
L_255976:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1336,%r14
	jne L_484409
L_255977:
	movq 0x8(%r15),%r14
	movq 0x60(%rbp),%r13
	movq %r13,0x68(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x60(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x10(%r15),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_255978:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484408
.p2align 0x4,,0x7
L_255980:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_255981
L_255984:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1335,%r14
	jne L_484406
L_255985:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je x_2022
L_255986:
	movl 0x4(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movl 0x0(%r15),%r13d
	cmpl %r13d,0x60(%rbp)
	jnl L_484399
L_256064:
	movq $0x266D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_255937
.p2align 0x4
L_484399:
L_255987:
	cmpl %r13d,0x60(%rbp)
	jne L_484400
L_256039:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq (globalObjptr+0x10868)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484400:
L_255989:
	movq $0x3AEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x100(%rbp)
	movl $0x2,0x108(%rbp)
	addq $0x100,%rbp
	leaq (tuple_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
x_2022:
x_862:
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
x_861:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
L_255941:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_255942
L_255969:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDF1,%r13
	jne L_484404
L_255970:
	movq 0x8(%r14),%r13
	movq $0x1BF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r11
	je L_255973
L_255971:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_484402
L_255972:
	movq 0x8(%r15),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r10,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r15
L_255973:
	movq $0x159,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
.p2align 0x4,,0x7
L_255959:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484401
.p2align 0x4,,0x7
L_255960:
	movq $0x266B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_255937
.p2align 0x4
L_484401:
L_255961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255962
.p2align 0x4
.long 0x40DB
L_255962:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_255960
.p2align 0x4
L_484402:
L_255974:
	movq %r11,%r15
	jmp L_255973
.p2align 0x4
L_484404:
L_255942:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0x10860)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484406:
L_255981:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je x_862
L_255982:
	movl 0x4(%r14),%r13d
	movq $0x266D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_255937
.p2align 0x4
L_484408:
L_256066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256067
.p2align 0x4
.long 0x40EE
L_256067:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_255980
.p2align 0x4
L_484409:
L_255933:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je x_861
L_255934:
	movl 0x4(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_255935:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484410
.p2align 0x4,,0x7
L_255936:
	movq $0x266D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_255937
.p2align 0x4
L_484410:
L_255938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255939
.p2align 0x4
.long 0x40D4
L_255939:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_255936
.p2align 0x4
L_484412:
L_256068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256069
.p2align 0x4
.long 0x40EF
L_256069:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_255932
.p2align 0x4
L_484413:
L_255927:
	movq (globalObjptr+0x4EA0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484414:
L_256116:
	movq 0xE0(%rbp),%r15
	movq 0x40(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_484418:
L_255490:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484419:
L_256166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256167
.p2align 0x4
.long 0x40F7
L_256167:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_255794
.p2align 0x4
L_484420:
L_256171:
	movq 0xE0(%rbp),%r15
	movq 0x40(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_484424:
L_255427:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484425:
L_256240:
	movq (globalObjptr+0x4EA8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484426:
L_255363:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484427:
L_255652:
	movq 0x18(%rcx),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rcx),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rcx),%r15
	cmpq $0x1,%r15
	je L_484428
L_255653:
	movq %r15,0x108(%rbp)
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq 0x40(%r14),%r13
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq 0x28(%r14),%r9
	movq 0x20(%r14),%r8
	movq 0x18(%r14),%rsp
	movq 0x10(%r14),%rsi
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdx,0x0(%r14)
	movq %rdi,0x8(%r14)
	movq %rsi,0x10(%r14)
	movq %rsp,0x18(%r14)
	movq %r8,0x20(%r14)
	movq %r9,0x28(%r14)
	movq %r10,0x30(%r14)
	movq %r15,0x38(%r14)
	movq %r11,0x40(%r14)
	movq %r13,0x48(%r14)
	movq %r14,0x110(%rbp)
	addq $0x58,%r12
	addq $0x108,%rbp
	leaq (L_255654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_484428:
L_255784:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r10d
	incl %r10d
	jo L_484429
L_255785:
	movl %r10d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq 0x0(%r13),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r11),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r13,0x0(%r11)
L_255656:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x108(%rbp)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_255657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2019
.p2align 0x4
L_484429:
L_255264:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484430:
L_255540:
	movq 0x0(%rcx),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	movq %r11,0x28(%rbp)
	cmpq %r14,%r11
	jne L_255363
L_255542:
	movq $0x3AF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x100(%rbp)
	movl %r13d,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_255543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_44
.p2align 0x4
L_484432:
L_255376:
	movq 0x8(%rcx),%r15
	movl 0x0(%rcx),%r14d
	movl %r14d,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x10(%rbp)
	jne L_255363
L_255378:
	testq %rdx,%rdx
	jz L_484444
L_255379:
	cmpq $0x7FFFFFFF,%rdx
	ja L_255448
L_255380:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255381
.p2align 0x4
.long 0x4085
L_255381:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x28(%rbp)
L_255382:
	movq $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_3006:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484442
.p2align 0x4,,0x7
L_255383:
	movq 0x30(%rbp),%r13
	cmpq 0x20(%rbp),%r13
	jnl L_484436
L_255527:
	movl %r13d,%r11d
	movslq %r11d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x107D,%r15
	je L_484433
L_255535:
	movq 0x0(%r11),%r11
	movq %r11,%r15
L_255532:
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x30(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0x30(%rbp)
	jmp loop_3006
.p2align 0x4
L_484433:
L_255528:
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_484435
L_255529:
	movq $0x1BEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movb $0x0,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x1,0x8(%r11)
	movq %r11,%r15
L_255530:
	movq $0x159,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1,0x0(%r11)
	cmpq $0x1,%r13
	je L_484434
L_255531:
	movq $0x1BEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x159,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq %r13,%r15
	jmp L_255532
.p2align 0x4
L_484434:
L_255533:
	movq %r11,%r15
	jmp L_255532
.p2align 0x4
L_484435:
L_255534:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq %r10,0x8(%r15)
	movq 0x0(%r10),%r11
	movq $0x145,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq $0x1BE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_255530
.p2align 0x4
L_484436:
L_255384:
	movq 0x28(%rbp),%r15
	movq $0xB63,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x20(%rbp)
	movl %r11d,0x10(%rbp)
	cmpq %rdx,%r14
	jne L_255363
L_255386:
	testq %rdx,%rdx
	jz L_484440
L_255387:
	cmpq $0x7FFFFFFF,%rdx
	ja L_484439
L_255388:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA9D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255389
.p2align 0x4
.long 0x4086
L_255389:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x30(%rbp)
L_255390:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3007:
	cmpq 0x20(%rbp),%r15
	jnl L_484437
L_255524:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x28(%rbp),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3007
.p2align 0x4
L_484437:
L_255391:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255392
L_255522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255523
.p2align 0x4
.long 0x4097
L_255523:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255392:
	movq 0x30(%rbp),%r15
	movq $0xBCF,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x3ADF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_255393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_484439:
L_255448:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484440:
L_255526:
	movq (globalObjptr+0x4FC8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_255390
.p2align 0x4
L_484442:
L_255536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255537
.p2align 0x4
.long 0x4098
L_255537:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_255383
.p2align 0x4
L_484444:
L_255539:
	movq (globalObjptr+0x4FC0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_255382
.p2align 0x4
L_484446:
L_255361:
	movq 0x0(%rcx),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_255363
L_255364:
	movl %r13d,0x70(%rbp)
	movq $0x3AFD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_255365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_44
.p2align 0x4
L_484448:
L_256558:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r10d
	incl %r10d
	jo L_255264
L_256559:
	movl %r10d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq 0x0(%r13),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r11),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484450:
L_256560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_256561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256561
.p2align 0x4
.long 0x4E9
L_256561:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_255252
.p2align 0x4
.long 0x4072
L_255255:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255257
L_255359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255360
.p2align 0x4
.long 0x4083
L_255360:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255257:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_255258
L_255291:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1075,%r14
	jne L_484454
L_255292:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jz L_484452
L_255336:
	movq (globalObjptr+0x10830)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484452:
L_255294:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je x_2025
L_255295:
	movq 0xD8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq %r10,0x118(%rbp)
	movq $0x3ED5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r14,0x108(%rbp)
	addq $0x10,%r12
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_255296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
x_2025:
x_860:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r10d
	incl %r10d
	jo L_255264
L_255326:
	movl %r10d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq 0x0(%r13),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r11),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484454:
L_255258:
	cmpq $0x1,0x78(%rbp)
	je L_484455
L_255259:
	movq (globalObjptr+0x10820)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484455:
L_255285:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r10d
	incl %r10d
	jo L_255264
L_255286:
	movl %r10d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq 0x0(%r13),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r11),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_255287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindToType_0
.p2align 0x4
.long 0x410E
L_256331:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256332
L_256556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256557
.p2align 0x4
.long 0x4137
L_256557:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256332:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_484462
L_256333:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1074,%r14
	je L_484459
L_256369:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r14
	je x_860
L_256370:
	movq %r14,0x110(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x118(%rbp)
	movq $0x3ED5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x108(%rbp)
	addq $0x10,%r12
	addq $0x108,%rbp
	leaq (L_256371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_484459:
L_256334:
	movq 0x0(%r15),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	cmpq $0x1,%r14
	je L_484460
L_256335:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x40(%rbp)
	movq %r14,%r15
L_256336:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_256337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484460:
L_256368:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_256353:
	testl %ecx,%ecx
	jz L_484461
L_256354:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_256355:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xF8(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (x_865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_484461:
L_256359:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_256355
.p2align 0x4
L_484462:
L_256497:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	cmpq $0x1,%r15
	je L_484463
L_256498:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1,0x48(%rbp)
	movq %r14,%r15
L_256499:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_256500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484463:
L_256555:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_256526:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_256527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA3B
L_256319:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r14
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_256320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x40FC
L_256242:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256243
L_256313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256314
.p2align 0x4
.long 0x410D
L_256314:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256243:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq 0x40(%r14),%r13
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq 0x28(%r14),%r9
	movq 0x20(%r14),%r8
	movq 0x18(%r14),%rsp
	movq 0x10(%r14),%rsi
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdx,0x0(%r14)
	movq %rdi,0x8(%r14)
	movq %rsi,0x10(%r14)
	movq %rsp,0x18(%r14)
	movq %r8,0x20(%r14)
	movq %r9,0x28(%r14)
	movq %r10,0x30(%r14)
	movq %r15,0x38(%r14)
	movq %r11,0x40(%r14)
	movq %r13,0x48(%r14)
	movq %r14,0x110(%rbp)
	addq $0x58,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
.long 0xF10
tuple_4:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255806
L_255852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_255853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255853
.p2align 0x4
.long 0x17F3
L_255853:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_255806:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_255363
L_255808:
	cmpl $0x1,%r13d
	jne L_484473
L_255849:
	cmpq $0x0,%r14
	jna L_255427
L_255851:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
L_255810:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
L_255811:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_255812
L_255842:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDF1,%r13
	jne L_484470
L_255843:
	movq 0x8(%r14),%r13
	movq $0x1BF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r11
	je L_255846
L_255844:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_484468
L_255845:
	movq 0x8(%r15),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r10,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r15
L_255846:
	movq $0x159,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_255830:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_484467
L_255831:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1336,%r14
	jne L_255800
L_255832:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x10(%rbp)
	movq %r15,%r14
	movq %r11,%r15
	jmp L_255803
.p2align 0x4
L_484467:
L_255833:
	movq %r15,0x10(%rbp)
	jmp loop_3005
.p2align 0x4
L_484468:
L_255847:
	movq %r11,%r15
	jmp L_255846
.p2align 0x4
L_484470:
L_255812:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10860)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_255813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484473:
L_255809:
	movq $0x1BE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x30(%rbp)
	jmp L_255810
.p2align 0x4
.long 0x40D0
L_255859:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40F0
toString_358:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x40E9
L_256040:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40DE
tuple_5:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255990
L_256037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256038
.p2align 0x4
.long 0x40E8
L_256038:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255990:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_255363
L_255992:
	cmpl $0x1,%r13d
	jne L_484483
L_256034:
	cmpq $0x0,%r14
	jna L_255427
L_256036:
	movq 0x0(%r15),%r15
	movq %r15,0x60(%rbp)
L_255994:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
L_255995:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_255996
L_256027:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDF1,%r13
	jne L_484480
L_256028:
	movq 0x8(%r14),%r13
	movq $0x1BF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r11
	je L_256031
L_256029:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_484478
L_256030:
	movq 0x8(%r15),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r10,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r15
L_256031:
	movq $0x159,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_256014:
	movq $0x266B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
L_256015:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_484477
L_256017:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1336,%r11
	jne L_484476
L_256018:
	movq %r14,0x68(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x60(%rbp)
	movq %r13,0x70(%rbp)
	jmp L_255978
.p2align 0x4
L_484476:
	movq %r14,%r15
L_256016:
	movq %r15,0x50(%rbp)
	jmp L_255935
.p2align 0x4
L_484477:
	movq %r14,%r15
	jmp L_256016
.p2align 0x4
L_484478:
L_256032:
	movq %r11,%r15
	jmp L_256031
.p2align 0x4
L_484480:
L_255996:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0x10860)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484483:
L_255993:
	movq $0x1BE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x60(%rbp)
	jmp L_255994
.p2align 0x4
.long 0x40D5
L_255943:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40F0
L_256117:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256118
L_256163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256164
.p2align 0x4
.long 0x40F5
L_256164:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256118:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_256125
L_256119:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x60(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_256120:
	movq 0x60(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106F,%r13
	je L_484505
L_256121:
	cmpq $0x1,%r15
	je L_484486
L_256122:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x60(%rbp)
	jmp L_256120
.p2align 0x4
L_484486:
L_256123:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256125
L_256156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256157
.p2align 0x4
.long 0x40F5
L_256157:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256125:
	movq $0x161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_863:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_255926
L_256126:
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r10)
	cmpq $0x1,%r13
	je L_255926
L_256127:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDEF,%r15
	je L_484494
L_256141:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_484491
L_256147:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_255264
L_256148:
	movl %r14d,%r15d
	incl %r15d
	jo L_255264
L_256149:
	movq $0x2537,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movl %r15d,0x4(%r13)
	addq $0x10,%r12
L_256150:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_255927
L_256151:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1335,%r14
	jne L_484487
L_256152:
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	jmp L_255930
.p2align 0x4
L_484487:
	xchgq %r13,%r15
	jmp L_256071
.p2align 0x4
L_484491:
L_256143:
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_255927
L_256144:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1335,%r15
	je L_484492
L_256146:
	movq (globalObjptr+0x4E78)(%rip),%r15
	jmp L_256071
.p2align 0x4
L_484492:
L_256145:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x4E78)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	jmp L_255930
.p2align 0x4
L_484494:
L_256128:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_484499
L_256134:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_255264
L_256135:
	movl %r14d,%r15d
	incl %r15d
	jo L_255264
L_256136:
	movq $0x2537,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movl %r14d,0x4(%r13)
	addq $0x10,%r12
L_256137:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_255927
L_256138:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1335,%r14
	jne L_484495
L_256139:
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	jmp L_255930
.p2align 0x4
L_484495:
	xchgq %r13,%r15
	jmp L_256071
.p2align 0x4
L_484499:
L_256130:
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_255927
L_256131:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1335,%r15
	je L_484500
L_256133:
	movq (globalObjptr+0x4E70)(%rip),%r15
	jmp L_256071
.p2align 0x4
L_484500:
L_256132:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x4E70)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	jmp L_255930
.p2align 0x4
L_484505:
L_256158:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256159
L_256160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256161
.p2align 0x4
.long 0x40F6
L_256161:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256159:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_863
.p2align 0x4
.long 0x40F2
L_256172:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256173
L_256238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256239
.p2align 0x4
.long 0x40FA
L_256239:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256173:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_256180
L_256174:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_256175:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106F,%r13
	je L_484520
L_256176:
	cmpq $0x1,%r15
	je L_484509
L_256177:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x58(%rbp)
	jmp L_256175
.p2align 0x4
L_484509:
L_256178:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256180
L_256231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256232
.p2align 0x4
.long 0x40FA
L_256232:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256180:
	movq $0x161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_864:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_255793
L_256181:
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r10)
	cmpq $0x1,%r13
	je L_255793
L_256182:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDEF,%r15
	je L_484513
L_256224:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_256185
L_256226:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_255264
L_256227:
	incl %r14d
	jo L_255264
L_256185:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (toString_359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
L_484513:
L_256183:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_256185
L_256221:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_255264
L_256222:
	incl %r14d
	jo L_255264
	jmp L_256185
.p2align 0x4
L_484520:
L_256233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256234
L_256235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256236
.p2align 0x4
.long 0x40FB
L_256236:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256234:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_864
.p2align 0x4
.long 0x40AE
L_255654:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255656
L_255782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255783
.p2align 0x4
.long 0x40CD
L_255783:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	jmp L_255656
.p2align 0x4
.long 0x40AF
L_255657:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
L_255658:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_255659
L_255741:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1075,%r14
	jne L_484525
L_255742:
	movq (globalObjptr+0x10858)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484525:
L_255659:
	movq 0x28(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_255660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindToType_0
.p2align 0x4
.long 0x4099
L_255543:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255544
L_255650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255651
.p2align 0x4
.long 0x40AD
L_255651:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255544:
	movq $0x1D09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_255363
L_255546:
	cmpl 0x20(%rbp),%r13d
	jne L_484538
L_255548:
	movq 0x28(%rbp),%rdx
	testq %rdx,%rdx
	jz L_484537
L_255549:
	cmpq $0x7FFFFFFF,%rdx
	ja L_255448
L_255550:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255551
.p2align 0x4
.long 0x409A
L_255551:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0x20(%rbp)
L_255552:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3014:
	cmpq 0x28(%rbp),%r15
	jnl L_484527
L_255647:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r9),%r8
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r9),%rsp
	movq 0x20(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %rsp,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3014
.p2align 0x4
L_484527:
L_255553:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255554
L_255645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255646
.p2align 0x4
.long 0x40AC
L_255646:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255554:
	movq 0x20(%rbp),%r15
	movq $0x1853,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_255363
L_255556:
	testl %r13d,%r13d
	jz L_484532
L_255557:
	cmpq $0x0,%r14
	jna L_255427
L_255559:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	cmpl $0x0,%r13d
	jl L_255490
L_255560:
	movl $0x0,0x1C(%rbp)
loop_3015:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_484528
L_255561:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movl $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_255562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_484528:
L_255567:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r11
	movq 0xC0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1D80,%r15
	je L_484529
L_255640:
	movq 0x0(%r13),%r15
	movq $0x304B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r11,%r15
L_255569:
	movq %r14,0x100(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (L_255570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_484529:
L_255568:
	movq 0x0(%r13),%r15
	movq $0x3047,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r11,%r15
	jmp L_255569
.p2align 0x4
L_484532:
L_255642:
	movq 0xE8(%rbp),%r14
	movq 0x10(%r14),%r11
	movq $0x2847,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq (globalObjptr+0x1AE8)(%rip),%r11
	movl 0x0(%r11),%r8d
	incl %r8d
	jo L_255264
L_255643:
	movl %r8d,0x0(%r11)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r8d,0x4(%r11)
	addq $0x10,%r12
	movl $0x1,0x0(%r11)
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq 0x0(%r10),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %rsp,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r11,0x0(%rsp)
	movq %r10,0x8(%rsp)
	movq %r8,0x10(%rsp)
	movq %r14,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsp,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x16B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq 0x0(%r9),%r14
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r9,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r10,0x0(%r9)
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x48(%rbp)
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movl $0x1,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_255644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_484537:
L_255649:
	movq (globalObjptr+0x4FB8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_255552
.p2align 0x4
L_484538:
L_255408:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4087
L_255393:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255394
L_255520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255521
.p2align 0x4
.long 0x4096
L_255521:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255394:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_255363
L_255396:
	movl %r13d,0x118(%rbp)
	movq $0x3AFB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_255397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_44
.p2align 0x4
.long 0x907
L_255365:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255366
L_255374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_255375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255375
.p2align 0x4
.long 0xA9A
L_255375:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_255366:
	movq $0x1D05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_255363
L_255368:
	movl %r13d,0x80(%rbp)
	movq $0x3EC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_255369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x407E
L_255337:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
.long 0x407A
L_255296:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x110(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4073
L_255260:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
.long 0x1E5E
L_255287:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255288
L_255289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_255290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255290
.p2align 0x4
.long 0x4079
L_255290:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_255288:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0xA8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1D03,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4115
L_256371:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_484546
L_256372:
	movq 0x20(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x128(%rbp)
	addq $0x108,%rbp
	leaq (L_256373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp args_0
.p2align 0x4
L_484546:
L_256495:
	movq $0x1,0x108(%rbp)
	movl $0x0,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x410F
L_256337:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256338
L_256366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256367
.p2align 0x4
.long 0x4114
L_256367:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256338:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_484547
L_256339:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_256336
.p2align 0x4
L_484547:
L_256340:
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_256341:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484549
.p2align 0x4,,0x7
L_256342:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_484548
L_256343:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_256341
.p2align 0x4
L_484548:
L_256344:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_256345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484549:
L_256364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256365
.p2align 0x4
.long 0x4114
L_256365:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_256342
.p2align 0x4
.long 0x4075
x_865:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_860
L_256357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256358
.p2align 0x4
.long 0x4076
L_256358:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp x_860
.p2align 0x4
.long 0x4130
L_256500:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256501
L_256553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256554
.p2align 0x4
.long 0x4136
L_256554:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256501:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_484551
L_256502:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_256499
.p2align 0x4
L_484551:
L_256503:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_256504:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484553
.p2align 0x4,,0x7
L_256505:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_484552
L_256506:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_256504
.p2align 0x4
L_484552:
L_256507:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_256508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484553:
L_256551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256552
.p2align 0x4
.long 0x4136
L_256552:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_256505
.p2align 0x4
.long 0x4133
L_256527:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256528
L_256539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256540
.p2align 0x4
.long 0x4113
L_256540:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256528:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256529:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_255264
L_256530:
	cmpq $0x1,%r14
	je L_484555
L_256531:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256529
.p2align 0x4
L_484555:
L_256532:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256533
L_256537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256538
.p2align 0x4
.long 0x4134
L_256538:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256533:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484556
L_256534:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_256535:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xF8(%rbp)
	movq (globalObjptr+0xA450)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (x_865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_484556:
L_256536:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256535
.p2align 0x4
.long 0x914
L_256320:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256321
L_256322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_256323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256323
.p2align 0x4
.long 0x91F
L_256323:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_256321:
	movq $0x40ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x40(%r15)
	movq $0x291B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x4469,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r15,0x0(%r10)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq $0x0,0x0(%r9)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r10,0x0(%r13)
	movq $0x47BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1D0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x605,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x40FD
L_256244:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256245
L_256311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256312
.p2align 0x4
.long 0x410C
L_256312:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256245:
	movq 0xC0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1D80,%r15
	je L_484561
L_256310:
	movq 0x0(%r14),%r15
	movq $0x304B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_256247:
	movq %r15,0x108(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x108,%rbp
	leaq (L_256248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_484561:
L_256246:
	movq 0x0(%r14),%r15
	movq $0x3047,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_256247
.p2align 0x4
.long 0xB68
L_255813:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_255814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40D0
L_255860:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40F0
rev_356:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_484565
L_256073:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_256074:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484564
.p2align 0x4,,0x7
L_256075:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_484563
L_256076:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_256074
.p2align 0x4
L_484563:
L_256078:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_484564:
L_256109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256110
.p2align 0x4
.long 0x40F4
L_256110:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_256075
.p2align 0x4
L_484565:
L_256111:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_256078
.p2align 0x4
.long 0x40EA
L_256041:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_256042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40DF
L_255997:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40D6
L_255944:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_255945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40F2
toString_359:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x40C3
L_255743:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r13,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40B0
L_255660:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x120(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255661
L_255739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255740
.p2align 0x4
.long 0x40C2
L_255740:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255661:
	movq 0x10(%rbp),%r13
	movq 0x18(%rbp),%r14
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%ecx
L_255662:
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x10(%rbp)
	movl %ecx,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_255663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3950
.p2align 0x4
.long 0x513
L_255562:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_255563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x409B
L_255570:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255571
L_255638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255639
.p2align 0x4
.long 0x40AB
L_255639:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255571:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_484567
L_255572:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x10838)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484567:
L_255613:
	incl 0x1C(%rbp)
	jmp loop_3015
.p2align 0x4
.long 0x9B4
L_255644:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_255563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4088
L_255397:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255398
L_255518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255519
.p2align 0x4
.long 0x4095
L_255519:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255398:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_255363
L_255400:
	movq $0x3EA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	movl %r13d,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_255401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4084
L_255369:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_255370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0x407F
L_255338:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x110(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255339
L_255357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255358
.p2align 0x4
.long 0x4082
L_255358:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255339:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255340:
	addl 0x0(%r15),%ecx
	movl %ecx,0x68(%rbp)
	jo L_255264
L_255341:
	cmpq $0x1,%r14
	je L_484571
L_255342:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255340
.p2align 0x4
L_484571:
L_255343:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255344
L_255355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255356
.p2align 0x4
.long 0x4081
L_255356:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255344:
	movl 0x68(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484573
L_255345:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_255346:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255347:
	movl %r13d,0x0(%r15)
	movq %r14,0x110(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x108,%rbp
	leaq (L_255348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484573:
L_255354:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255346
.p2align 0x4
.long 0x407B
L_255297:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_484581
L_255299:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_255300:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_255301
L_255308:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_255301
L_255309:
	movq 0x60(%rbp),%r15
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	jne L_484577
L_255311:
	movq (globalObjptr+0x10828)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484577:
L_255301:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_484578
L_255302:
	movq 0x20(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_255303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp args_0
.p2align 0x4
L_484578:
L_255307:
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_255303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_484581:
L_255298:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4074
L_255261:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl 0x110(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255262
L_255283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255284
.p2align 0x4
.long 0x4078
L_255284:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255262:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x88(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255263:
	addl 0x0(%r15),%ecx
	movl %ecx,0x98(%rbp)
	jo L_255264
L_255265:
	cmpq $0x1,%r14
	je L_484582
L_255266:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255263
.p2align 0x4
L_484582:
L_255267:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255268
L_255281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255282
.p2align 0x4
.long 0x4077
L_255282:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255268:
	movl 0x98(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484584
L_255269:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
L_255270:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255271:
	movl %r13d,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_255272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484584:
L_255280:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255270
.p2align 0x4
.long 0x4116
L_256373:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3950
.p2align 0x4
.long 0x4110
L_256345:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_256346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x4131
L_256508:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_256509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x40FE
L_256248:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_484588
L_256249:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x10850)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484588:
L_256309:
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A7
L_255814:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_255815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40D1
L_255861:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_255862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40F0
L_256079:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256080
L_256107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256108
.p2align 0x4
.long 0x40F5
L_256108:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256080:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10870)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x40E2
L_256042:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x40E0
L_255998:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_255999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40D7
L_255945:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40F2
rev_357:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_484592
L_256186:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_256187:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484591
.p2align 0x4,,0x7
L_256188:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_484590
L_256189:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_256187
.p2align 0x4
L_484590:
L_256191:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_484591:
L_256218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256219
.p2align 0x4
.long 0x40EF
L_256219:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_256188
.p2align 0x4
L_484592:
L_256220:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_256191
.p2align 0x4
.long 0x40C4
L_255744:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255745
L_255780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255781
.p2align 0x4
.long 0x40CB
L_255781:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255745:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255746:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_255264
L_255747:
	cmpq $0x1,%r14
	je L_484593
L_255748:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255746
.p2align 0x4
L_484593:
L_255749:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255750
L_255778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255779
.p2align 0x4
.long 0x40CC
L_255779:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255750:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484594
L_255751:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_255752:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484594:
L_255777:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255752
.p2align 0x4
.long 0x40B1
L_255663:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255664
L_255737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255738
.p2align 0x4
.long 0x40C1
L_255738:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255664:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xC0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1D80,%r14
	je L_484598
L_255736:
	movq 0x0(%r13),%r14
	movq $0x304B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
L_255666:
	movq %r14,0x108(%rbp)
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x108,%rbp
	leaq (L_255667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_484598:
L_255665:
	movq 0x0(%r13),%r14
	movq $0x3047,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_255666
.p2align 0x4
.long 0x78C
L_255563:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255564
L_255565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_255566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255566
.p2align 0x4
.long 0x78D
L_255566:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_255564:
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x409C
L_255573:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255574
L_255635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255636
.p2align 0x4
.long 0x40AA
L_255636:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255574:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10840)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4089
L_255401:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255402
L_255516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255517
.p2align 0x4
.long 0x4094
L_255517:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255402:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r14,%r11
	jne L_255363
L_255404:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_255363
L_255406:
	cmpl %r13d,%r10d
	jne L_255408
L_255409:
	movq $0x399F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r11,0x110(%rbp)
	movl %r13d,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_255410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
.long 0xCAA
L_255370:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255371
L_255372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_255373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255373
.p2align 0x4
.long 0xCAB
L_255373:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_255371:
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x407E
L_255348:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255349
L_255352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255353
.p2align 0x4
.long 0x4080
L_255353:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255349:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_255294
L_255277:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4073
L_255312:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
.long 0x407C
L_255303:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255304
L_255305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_255306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255306
.p2align 0x4
.long 0x407D
L_255306:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_255304:
	movq $0x1D0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x605,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4075
L_255272:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255273
L_255278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_255279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255279
.p2align 0x4
.long 0x4076
L_255279:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_255273:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
L_255274:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r10d
	incl %r10d
	jo L_255264
L_255275:
	movl %r10d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq 0x0(%r13),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r11),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4117
L_256374:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x4111
L_256346:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256347
L_256362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256363
.p2align 0x4
.long 0x4113
L_256363:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256347:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256348:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_255264
L_256349:
	cmpq $0x1,%r14
	je L_484613
L_256350:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256348
.p2align 0x4
L_484613:
L_256351:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256352
L_256360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256361
.p2align 0x4
.long 0x4112
L_256361:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256352:
	movq 0x48(%rbp),%r15
	movl 0x30(%rbp),%ecx
	jmp L_256353
.p2align 0x4
.long 0x4132
L_256509:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256510
L_256549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256550
.p2align 0x4
.long 0x4114
L_256550:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256510:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256511:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_255264
L_256512:
	cmpq $0x1,%r14
	je L_484617
L_256513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256511
.p2align 0x4
L_484617:
L_256514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256515
L_256547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256548
.p2align 0x4
.long 0x4135
L_256548:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256515:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484618
L_256516:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_256517:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_256518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484618:
L_256546:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256517
.p2align 0x4
.long 0x40FF
L_256250:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256251
L_256307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256308
.p2align 0x4
.long 0x410B
L_256308:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256251:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107B8)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA37
L_255815:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_255816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA37
L_255862:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_255863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x40F0
L_256081:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40E2
L_256043:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256044
L_256062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256063
.p2align 0x4
.long 0x40E7
L_256063:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256044:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256045:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_255264
L_256046:
	cmpq $0x1,%r14
	je L_484623
L_256047:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256045
.p2align 0x4
L_484623:
L_256048:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256049
L_256060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256061
.p2align 0x4
.long 0x40ED
L_256061:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256049:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484625
L_256050:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_256051:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_256052:
	movl %r13d,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_256053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484625:
L_256059:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256051
.p2align 0x4
.long 0x40E1
L_255999:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40D8
L_255946:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_255947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40F2
L_256192:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256193
L_256216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256217
.p2align 0x4
.long 0x40FA
L_256217:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256193:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10870)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x40C5
L_255753:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_255754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40B2
L_255667:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255668
L_255734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255735
.p2align 0x4
.long 0x40C0
L_255735:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255668:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_484630
L_255669:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10850)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484630:
L_255709:
	movq $0x1D0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x605,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x409D
L_255575:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255576
L_255633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255634
.p2align 0x4
.long 0x40A8
L_255634:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255576:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255577:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_255264
L_255578:
	cmpq $0x1,%r14
	je L_484632
L_255579:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255577
.p2align 0x4
L_484632:
L_255580:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255581
L_255631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255632
.p2align 0x4
.long 0x40A9
L_255632:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255581:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484633
L_255582:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_255583:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE288)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484633:
L_255630:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255583
.p2align 0x4
.long 0x4089
L_255410:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_255411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromVector_0
.p2align 0x4
.long 0x4074
L_255313:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl 0x110(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255314
L_255333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255334
.p2align 0x4
.long 0x4078
L_255334:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255314:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x88(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255315:
	addl 0x0(%r15),%ecx
	movl %ecx,0x98(%rbp)
	jo L_255264
L_255316:
	cmpq $0x1,%r14
	je L_484637
L_255317:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255315
.p2align 0x4
L_484637:
L_255318:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255319
L_255331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255332
.p2align 0x4
.long 0x4077
L_255332:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255319:
	movl 0x98(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484639
L_255320:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
L_255321:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255322:
	movl %r13d,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_255323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484639:
L_255330:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255321
.p2align 0x4
.long 0x4118
L_256375:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256376
L_256493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256494
.p2align 0x4
.long 0x412F
L_256494:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256376:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_484644
L_256377:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_256378:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0xC0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x1D80,%r13
	je L_484643
L_256451:
	movq 0x0(%r11),%r13
	movq $0x304B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq %r11,%r13
L_256380:
	movq %r13,0x108(%rbp)
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x108,%rbp
	leaq (L_256381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_484643:
L_256379:
	movq 0x0(%r11),%r13
	movq $0x3047,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq %r11,%r13
	jmp L_256380
.p2align 0x4
L_484644:
L_256452:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r13
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r13
	movl 0x0(%r13),%r9d
	incl %r9d
	jo L_255264
L_256453:
	movl %r9d,%r8d
	movl %r9d,0x0(%r13)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movl %r8d,0x4(%r9)
	addq $0x10,%r12
	movl $0x1,0x0(%r9)
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq 0x0(%r11),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsp,0x0(%rsi)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r9,0x0(%rsp)
	movq %rsi,0x8(%rsp)
	movq %r8,0x10(%rsp)
	movq %r15,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r14,0x0(%r9)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r15,1)
	movq %r9,0x0(%r10)
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	addq $0x10,%r12
	movl 0x0(%r13),%r9d
	incl %r9d
	jo L_255264
L_256454:
	movl %r9d,0x0(%r13)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x4(%r13)
	addq $0x10,%r12
	movl $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0x0(%r11),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rsp,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r13,0x0(%rsp)
	movq %r11,0x8(%rsp)
	movq %r9,0x10(%rsp)
	movq %r15,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r10,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r11,0x0(%r10)
	movq 0xC8(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x50(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x108(%rbp)
	movl $0x2,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x410F
L_256518:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256519
L_256544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256545
.p2align 0x4
.long 0x4114
L_256545:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256519:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256520:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_255264
L_256521:
	cmpq $0x1,%r14
	je L_484648
L_256522:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256520
.p2align 0x4
L_484648:
L_256523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256524
L_256542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_256543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256543
.p2align 0x4
.long 0x4135
L_256543:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_256524:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484649
L_256525:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_256526
.p2align 0x4
L_484649:
L_256541:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256526
.p2align 0x4
.long 0x4100
L_256252:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256253
L_256305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256306
.p2align 0x4
.long 0x4109
L_256306:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256253:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256254:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_255264
L_256255:
	cmpq $0x1,%r14
	je L_484653
L_256256:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256254
.p2align 0x4
L_484653:
L_256257:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256258
L_256303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256304
.p2align 0x4
.long 0x410A
L_256304:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256258:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484654
L_256259:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_256260:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF4A8)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484654:
L_256302:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256260
.p2align 0x4
.long 0x8EF
L_255816:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_255817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0xA37
L_255863:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255864
L_255920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_255921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255921
.p2align 0x4
.long 0x9E4
L_255921:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_255864:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255865:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_255264
L_255866:
	cmpq $0x1,%r14
	je L_484658
L_255867:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255865
.p2align 0x4
L_484658:
L_255868:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255869
L_255918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_255919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255919
.p2align 0x4
.long 0x40D3
L_255919:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_255869:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484660
L_255870:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_255871:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255872:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_255873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484660:
L_255917:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255871
.p2align 0x4
.long 0x40F0
L_256082:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40EB
L_256053:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256054
L_256057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256058
.p2align 0x4
.long 0x40EC
L_256058:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256054:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
	jmp L_255989
.p2align 0x4
.long 0x40E2
L_256000:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_256001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40D9
L_255947:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255948
L_255967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255968
.p2align 0x4
.long 0x40DD
L_255968:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255948:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_255949:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_255264
L_255950:
	cmpq $0x1,%r14
	je L_484666
L_255951:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255949
.p2align 0x4
L_484666:
L_255952:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255953
L_255965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255966
.p2align 0x4
.long 0x40DC
L_255966:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255953:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484668
L_255954:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_255955:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255956:
	movl %r13d,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_255957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484668:
L_255964:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255955
.p2align 0x4
.long 0x40F2
L_256194:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40C6
L_255754:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x40B3
L_255670:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255671
L_255731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255732
.p2align 0x4
.long 0x40BF
L_255732:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255671:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107B8)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x409E
L_255584:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255585
L_255628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255629
.p2align 0x4
.long 0x40A8
L_255629:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255585:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255586:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_255264
L_255587:
	cmpq $0x1,%r14
	je L_484673
L_255588:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255586
.p2align 0x4
L_484673:
L_255589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255590
L_255626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255627
.p2align 0x4
.long 0x40A7
L_255627:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255590:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484674
L_255591:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_255592:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10848)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484674:
L_255625:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255592
.p2align 0x4
.long 0x4089
L_255411:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255412
L_255514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255515
.p2align 0x4
.long 0x4094
L_255515:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255412:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_484678
L_255413:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_255414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_4
.p2align 0x4
L_484678:
L_255450:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_484680
L_255510:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_255363
L_255512:
	movl %r13d,0x118(%rbp)
	movq $0x39A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
	addq $0x10,%r12
	addq $0x110,%rbp
	leaq (L_255513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
L_484680:
L_255451:
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
L_255452:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_255363
L_255454:
	decl %r13d
	movl %r13d,0x3C(%rbp)
	jo L_255264
L_255455:
	movq $0x1,0x48(%rbp)
	movl %r13d,0x50(%rbp)
.p2align 0x4,,0x7
loop_3010:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484697
.p2align 0x4,,0x7
L_255456:
	movl 0x50(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_484681
L_255457:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq $0x2665,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp loop_3010
.p2align 0x4
L_484681:
L_255458:
	movq (globalObjptr+0x4FD0)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_255264
L_255459:
	movl %r13d,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1007,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r11)
	movq $0x288D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x50(%rbp)
	movl %r13d,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
loop_3011:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484695
.p2align 0x4,,0x7
L_255460:
	movl 0x3C(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_484682
L_255461:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x3C(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2543,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp loop_3011
.p2align 0x4
L_484682:
L_255462:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq $0x1CF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r14)
	cmpq $0x1,%r13
	je L_484694
L_255463:
	movq 0x8(%r13),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_255464:
	incl %ecx
	movl %ecx,0x3C(%rbp)
	jo L_255264
L_255465:
	cmpq $0x1,%r15
	je L_484683
L_255466:
	movq 0x8(%r15),%r15
	jmp L_255464
.p2align 0x4
L_484683:
L_255467:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255468
L_255503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255504
.p2align 0x4
.long 0x408B
L_255504:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255468:
	movl 0x3C(%rbp),%ecx
L_255469:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	testq %r15,%r15
	jz L_484691
L_255470:
	cmpq $0x7FFFFFFF,%r15
	ja L_255448
L_255471:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255472
L_255499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255500
.p2align 0x4
.long 0x408B
L_255500:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255472:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1501,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255473
.p2align 0x4
.long 0x408B
L_255473:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x68(%rbp)
L_255474:
	movq 0x48(%rbp),%r15
	movq $0x0,0x48(%rbp)
loop_3012:
	movq 0x60(%rbp),%r14
	cmpq %r14,0x48(%rbp)
	jnl L_484685
L_255491:
	cmpq $0x1,%r15
	je L_484684
L_255492:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_255493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_484684:
L_255498:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484685:
L_255475:
	movq 0x68(%rbp),%r14
	movq $0x16F1,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x3C(%rbp)
	movslq %r11d,%r15
	cmpq %r13,%r15
	jne L_255363
L_255477:
	cmpl $0x0,%r11d
	jl L_255490
L_255478:
	movq $0x1,%r15
	movl $0x0,0x48(%rbp)
loop_3013:
	movl 0x3C(%rbp),%r14d
	cmpl %r14d,0x48(%rbp)
	jl L_484686
L_255479:
	movq %r15,0x118(%rbp)
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
	addq $0x10,%r12
	addq $0x110,%rbp
	leaq (L_255480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp and2_0
.p2align 0x4
L_484686:
L_255484:
	movq %r15,0x110(%rbp)
	movslq 0x48(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_255485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp and2_0
.p2align 0x4
L_484691:
L_255502:
	movq (globalObjptr+0x1AF0)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_255474
.p2align 0x4
L_484694:
L_255505:
	xorl %ecx,%ecx
	jmp L_255469
.p2align 0x4
L_484695:
L_255506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255507
.p2align 0x4
.long 0x4091
L_255507:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_255460
.p2align 0x4
L_484697:
L_255508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255509
.p2align 0x4
.long 0x4092
L_255509:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_255456
.p2align 0x4
.long 0x4075
L_255323:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255324
L_255328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_255329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255329
.p2align 0x4
.long 0x4076
L_255329:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_255324:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
	jmp x_860
.p2align 0x4
.long 0x4119
L_256381:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256382
L_256449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256450
.p2align 0x4
.long 0x4125
L_256450:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256382:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_484703
L_256383:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0x10878)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484703:
L_256424:
	movq $0x1D0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x605,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4126
L_256455:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_256456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4101
L_256261:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256262
L_256300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256301
.p2align 0x4
.long 0x4109
L_256301:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256262:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256263:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_255264
L_256264:
	cmpq $0x1,%r14
	je L_484705
L_256265:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256263
.p2align 0x4
L_484705:
L_256266:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256267
L_256298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256299
.p2align 0x4
.long 0x4108
L_256299:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256267:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484706
L_256268:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_256269:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484706:
L_256297:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256269
.p2align 0x4
.long 0x286C
L_255817:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255818
L_255840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_255841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255841
.p2align 0x4
.long 0x901
L_255841:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_255818:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_255819:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_255264
L_255820:
	cmpq $0x1,%r14
	je L_484710
L_255821:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255819
.p2align 0x4
L_484710:
L_255822:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255823
L_255838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_255839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255839
.p2align 0x4
.long 0x40CF
L_255839:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_255823:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484712
L_255824:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_255825:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255826:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_255827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484712:
L_255837:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255825
.p2align 0x4
.long 0xA33
L_255873:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255874
L_255915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_255916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255916
.p2align 0x4
.long 0x247F
L_255916:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_255874:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
L_255875:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
L_255876:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_255877
L_255907:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDF1,%r13
	jne L_484720
L_255908:
	movq 0x8(%r14),%r13
	movq $0x1BF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_484719
L_255909:
	movq 0x0(%r13),%r15
	movq 0x40(%rbp),%r11
	cmpq $0x1,%r11
	je L_484718
L_255910:
	movq 0x8(%r11),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r13,%r14
L_255911:
	movq $0x159,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
L_255895:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_484717
L_255896:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1336,%r15
	jne L_255800
L_255897:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	jmp L_255803
.p2align 0x4
L_484717:
L_255898:
	movq %r14,0x10(%rbp)
	jmp loop_3005
.p2align 0x4
L_484718:
L_255912:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_255911
.p2align 0x4
L_484719:
L_255913:
	movq 0x40(%rbp),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_255911
.p2align 0x4
L_484720:
L_255877:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10860)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_255878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40F1
L_256083:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_256084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40E3
L_256001:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256002
L_256025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256026
.p2align 0x4
.long 0x40E7
L_256026:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256002:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_256003:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_255264
L_256004:
	cmpq $0x1,%r14
	je L_484724
L_256005:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256003
.p2align 0x4
L_484724:
L_256006:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256007
L_256023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256024
.p2align 0x4
.long 0x40E6
L_256024:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256007:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484726
L_256008:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_256009:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_256010:
	movl %r13d,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_256011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484726:
L_256022:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256009
.p2align 0x4
.long 0x40DA
L_255957:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
L_255958:
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_255959
.p2align 0x4
.long 0x40F2
L_256195:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40C6
L_255755:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255756
L_255775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255776
.p2align 0x4
.long 0x40CB
L_255776:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255756:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255757:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_255264
L_255758:
	cmpq $0x1,%r14
	je L_484731
L_255759:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255757
.p2align 0x4
L_484731:
L_255760:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255761
L_255773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255774
.p2align 0x4
.long 0x40CA
L_255774:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255761:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484733
L_255762:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_255763:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255764:
	movl %r13d,0x0(%r15)
	movq %r14,0x108(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x108,%rbp
	leaq (L_255765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484733:
L_255772:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255763
.p2align 0x4
.long 0x40B4
L_255672:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255673
L_255729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255730
.p2align 0x4
.long 0x40BD
L_255730:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255673:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255674:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_255264
L_255675:
	cmpq $0x1,%r14
	je L_484737
L_255676:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255674
.p2align 0x4
L_484737:
L_255677:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255678
L_255727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255728
.p2align 0x4
.long 0x40BE
L_255728:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255678:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484738
L_255679:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_255680:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF4A8)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484738:
L_255726:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255680
.p2align 0x4
.long 0x409F
L_255593:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_255594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x408A
L_255414:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
L_255415:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jne L_255408
L_255417:
	movq 0x40(%rbp),%rdx
	testq %rdx,%rdx
	jz L_484752
L_255418:
	cmpq $0x7FFFFFFF,%rdx
	ja L_255448
L_255419:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_255420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255420
.p2align 0x4
.long 0x112C
L_255420:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_255421:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3008:
	cmpq 0x40(%rbp),%r15
	jnl L_484742
L_255446:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x38(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3008
.p2align 0x4
L_484742:
L_255422:
	movq 0x38(%rbp),%r14
	movq $0xB57,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x30(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_255363
L_255424:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3009:
	cmpl 0x30(%rbp),%ecx
	je L_484748
L_255425:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_255427
L_255428:
	salq $0x4,%r14
	movq 0x38(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_255429
L_255434:
	shrq $0x1,%r11
	movl %r11d,%r14d
	cmpl %r14d,%ecx
	jne L_484744
L_255436:
	incl %ecx
	jo L_255264
L_255437:
	jmp loop_3009
.p2align 0x4
L_484744:
L_255429:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255430
L_255432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_255433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255433
.p2align 0x4
.long 0x5F4
L_255433:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_255430:
	movq $0x24C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_255431:
	movq $0x1D07,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484748:
L_255438:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255439
L_255444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_255445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255445
.p2align 0x4
.long 0x5F4
L_255445:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_255439:
	movq $0x3AF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_255440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_44
.p2align 0x4
L_484752:
L_255449:
	movq (globalObjptr+0x4FD8)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_255421
.p2align 0x4
.long 0x4093
L_255513:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_255452
.p2align 0x4
.long 0x408F
L_255493:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255494
L_255496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255497
.p2align 0x4
.long 0x4090
L_255497:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255494:
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_255298
L_255495:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq 0x68(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x48(%rbp),%r11
	movq %r13,0x0(%r14,%r11,8)
	incq %r11
	movq %r11,0x48(%rbp)
	movq 0x70(%rbp),%r15
	jmp loop_3012
.p2align 0x4
.long 0x408C
L_255480:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255481
L_255482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255483
.p2align 0x4
.long 0x408B
L_255483:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255481:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x28,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x4999,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq 0x50(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x100(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0xF8(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0xB0(%rbp),%r10
	movq %r10,0x18(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r15)
	jmp L_255415
.p2align 0x4
.long 0x408D
L_255485:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255486
L_255487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_255488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255488
.p2align 0x4
.long 0x408E
L_255488:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_255486:
	incl 0x48(%rbp)
	movq 0x60(%rbp),%r15
	jmp loop_3013
.p2align 0x4
.long 0x40B4
L_256384:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256385
L_256446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256447
.p2align 0x4
.long 0x40BD
L_256447:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256385:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107B8)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4127
L_256456:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256457
L_256491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256492
.p2align 0x4
.long 0x412E
L_256492:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256457:
	movq 0xC0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1D80,%r15
	je L_484759
L_256490:
	movq 0x0(%r14),%r15
	movq $0x304B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_256459:
	movq %r15,0x108(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x108,%rbp
	leaq (L_256460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_484759:
L_256458:
	movq 0x0(%r14),%r15
	movq $0x3047,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_256459
.p2align 0x4
.long 0x4102
L_256270:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40CE
L_255827:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255828
L_255835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_255836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255836
.p2align 0x4
.long 0xBCC
L_255836:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_255828:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_255277
L_255829:
	movq 0x38(%rbp),%r15
	jmp L_255830
.p2align 0x4
.long 0xB68
L_255878:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_255879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40D5
L_256084:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x40E4
L_256011:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256012
L_256020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256021
.p2align 0x4
.long 0x40E5
L_256021:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256012:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_255277
L_256013:
	movq 0x68(%rbp),%r15
	jmp L_256014
.p2align 0x4
.long 0x40F0
L_256196:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_256197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40C7
L_255765:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
L_255766:
	movq 0x90(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x40B5
L_255681:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255682
L_255724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255725
.p2align 0x4
.long 0x40BD
L_255725:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255682:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255683:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_255264
L_255684:
	cmpq $0x1,%r14
	je L_484766
L_255685:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255683
.p2align 0x4
L_484766:
L_255686:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255687
L_255722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255723
.p2align 0x4
.long 0x40BC
L_255723:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255687:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484767
L_255688:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_255689:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484767:
L_255721:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255689
.p2align 0x4
.long 0x40A0
L_255594:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x51B
L_255440:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255441
L_255442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_255443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255443
.p2align 0x4
.long 0x489
L_255443:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_255441:
	movq $0x24C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_255431
.p2align 0x4
.long 0x411A
L_256386:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256387
L_256444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256445
.p2align 0x4
.long 0x4123
L_256445:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256387:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256388:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_255264
L_256389:
	cmpq $0x1,%r14
	je L_484772
L_256390:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256388
.p2align 0x4
L_484772:
L_256391:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256392
L_256442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256443
.p2align 0x4
.long 0x4124
L_256443:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256392:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484773
L_256393:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_256394:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF4A8)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484773:
L_256441:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256394
.p2align 0x4
.long 0x4128
L_256460:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256461
L_256488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256489
.p2align 0x4
.long 0x412D
L_256489:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256461:
	cmpq $0x1,0x28(%rbp)
	je L_484777
L_256462:
	movq (globalObjptr+0x10880)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484777:
L_256487:
	movq 0x40(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r15
	jmp L_256378
.p2align 0x4
.long 0x4103
L_256271:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256272
L_256295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256296
.p2align 0x4
.long 0x4107
L_256296:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256272:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256273:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_255264
L_256274:
	cmpq $0x1,%r14
	je L_484779
L_256275:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256273
.p2align 0x4
L_484779:
L_256276:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256277
L_256293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256294
.p2align 0x4
.long 0x4106
L_256294:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256277:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484780
L_256278:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_256279:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484780:
L_256292:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256279
.p2align 0x4
.long 0x8A7
L_255879:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_255880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40D5
L_256085:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256086
L_256105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256106
.p2align 0x4
.long 0x40F4
L_256106:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256086:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256087:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_255264
L_256088:
	cmpq $0x1,%r14
	je L_484784
L_256089:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256087
.p2align 0x4
L_484784:
L_256090:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256091
L_256103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256104
.p2align 0x4
.long 0x40F3
L_256104:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256091:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484786
L_256092:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_256093:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_256094:
	movl %r13d,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_256095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484786:
L_256102:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256093
.p2align 0x4
.long 0x40F1
L_256197:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_256198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x40C8
L_255767:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255768
L_255769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255770
.p2align 0x4
.long 0x40C9
L_255770:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255768:
	movq $0x15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movl 0x10(%rbp),%ecx
	jmp L_255662
.p2align 0x4
.long 0x40B6
L_255690:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_255691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40A0
L_255595:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255596
L_255623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255624
.p2align 0x4
.long 0x40A6
L_255624:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255596:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255597:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_255264
L_255598:
	cmpq $0x1,%r14
	je L_484791
L_255599:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255597
.p2align 0x4
L_484791:
L_255600:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255601
L_255621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255622
.p2align 0x4
.long 0x40A5
L_255622:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255601:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484792
L_255602:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_255603:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_255604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484792:
L_255620:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255603
.p2align 0x4
.long 0x411B
L_256395:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256396
L_256439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256440
.p2align 0x4
.long 0x4123
L_256440:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256396:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256397:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_255264
L_256398:
	cmpq $0x1,%r14
	je L_484796
L_256399:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256397
.p2align 0x4
L_484796:
L_256400:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256401
L_256437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256438
.p2align 0x4
.long 0x4122
L_256438:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256401:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484797
L_256402:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_256403:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484797:
L_256436:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256403
.p2align 0x4
.long 0x4128
L_256463:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4104
L_256280:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256281
L_256290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256291
.p2align 0x4
.long 0x4105
L_256291:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256281:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484803
L_256282:
	decl %ecx
	jo L_255264
L_256283:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_256284:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_256285:
	movl %r13d,0x0(%r15)
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x30,%rbp
	leaq (L_256286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484803:
L_256289:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256284
.p2align 0x4
.long 0xB6B
L_255880:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_255881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x40F2
L_256095:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
	jmp L_256097
.p2align 0x4
.long 0x40F1
L_256198:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256199
L_256214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256215
.p2align 0x4
.long 0x40EF
L_256215:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256199:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256200:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_255264
L_256201:
	cmpq $0x1,%r14
	je L_484806
L_256202:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256200
.p2align 0x4
L_484806:
L_256203:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256204
L_256212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_256213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256213
.p2align 0x4
.long 0x40F9
L_256213:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_256204:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484808
L_256205:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_256206:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_256207:
	movl %r13d,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_256208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484808:
L_256211:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256206
.p2align 0x4
.long 0x40B7
L_255691:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255692
L_255719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255720
.p2align 0x4
.long 0x40BB
L_255720:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255692:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_255693:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_255264
L_255694:
	cmpq $0x1,%r14
	je L_484812
L_255695:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255693
.p2align 0x4
L_484812:
L_255696:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255697
L_255717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255718
.p2align 0x4
.long 0x40BA
L_255718:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255697:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484813
L_255698:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_255699:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_255700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484813:
L_255716:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255699
.p2align 0x4
.long 0x40A1
L_255604:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255605
L_255618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255619
.p2align 0x4
.long 0x40A4
L_255619:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255605:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484819
L_255606:
	decl %ecx
	jo L_255264
L_255607:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_255608:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255609:
	movl %r13d,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_255610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484819:
L_255617:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255608
.p2align 0x4
.long 0x411C
L_256404:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x4127
L_256464:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_256465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x45A
L_256286:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
L_256287:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EF
L_255881:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_255882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x40F8
L_256208:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
	jmp L_255793
.p2align 0x4
.long 0x40B8
L_255700:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255701
L_255714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_255715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255715
.p2align 0x4
.long 0x40B9
L_255715:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_255701:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484825
L_255702:
	decl %ecx
	jo L_255264
L_255703:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_255704:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255705:
	movl %r13d,0x0(%r15)
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x38,%rbp
	leaq (L_255706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484825:
L_255713:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255704
.p2align 0x4
.long 0x40A2
L_255610:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255611
L_255615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_255616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255616
.p2align 0x4
.long 0x40A3
L_255616:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_255611:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
	jmp L_255613
.p2align 0x4
.long 0x411D
L_256405:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4129
L_256465:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0xBAF
L_255882:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255883
L_255905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_255906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255906
.p2align 0x4
.long 0x901
L_255906:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_255883:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_255884:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_255264
L_255885:
	cmpq $0x1,%r14
	je L_484829
L_255886:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_255884
.p2align 0x4
L_484829:
L_255887:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255888
L_255903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_255904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255904
.p2align 0x4
.long 0x40D2
L_255904:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_255888:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484831
L_255889:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_255890:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_255891:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_255892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484831:
L_255902:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_255890
.p2align 0x4
.long 0x4E3
L_255706:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255707
L_255711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_255712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255712
.p2align 0x4
.long 0x4F3
L_255712:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_255707:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
	jmp L_255709
.p2align 0x4
.long 0x411D
L_256406:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256407
L_256434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256435
.p2align 0x4
.long 0x4121
L_256435:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256407:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256408:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_255264
L_256409:
	cmpq $0x1,%r14
	je L_484837
L_256410:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256408
.p2align 0x4
L_484837:
L_256411:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256412
L_256432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256433
.p2align 0x4
.long 0x4120
L_256433:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256412:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484838
L_256413:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_256414:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_256415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484838:
L_256431:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256414
.p2align 0x4
.long 0x4129
L_256466:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256467
L_256485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256486
.p2align 0x4
.long 0x412C
L_256486:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256467:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256468:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_255264
L_256469:
	cmpq $0x1,%r14
	je L_484842
L_256470:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256468
.p2align 0x4
L_484842:
L_256471:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256472
L_256483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256484
.p2align 0x4
.long 0x412B
L_256484:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256472:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484844
L_256473:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_256474:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_256475:
	movl %r13d,0x0(%r15)
	movq %r14,0x108(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x108,%rbp
	leaq (L_256476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484844:
L_256482:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256474
.p2align 0x4
.long 0x17F2
L_255892:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_255893
L_255900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_255901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_255901
.p2align 0x4
.long 0x183B
L_255901:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_255893:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r15)
	je L_255277
L_255894:
	movq 0x10(%rbp),%r14
	jmp L_255895
.p2align 0x4
.long 0x411E
L_256415:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256416
L_256429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256430
.p2align 0x4
.long 0x411F
L_256430:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256416:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484852
L_256417:
	decl %ecx
	jo L_255264
L_256418:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
L_256419:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_255264
L_256420:
	movl %r13d,0x0(%r15)
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_256421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484852:
L_256428:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256419
.p2align 0x4
.long 0x4128
L_256476:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256477
L_256480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_256481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256481
.p2align 0x4
.long 0x412A
L_256481:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_256477:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_255277
L_256478:
	movq 0x40(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r15
	jmp L_256378
.p2align 0x4
.long 0x511
L_256421:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256422
L_256426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_256427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256427
.p2align 0x4
.long 0x720
L_256427:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_256422:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_255277
	jmp L_256424
.text
.p2align 0x4
.globl x_2019
.hidden x_2019
x_2019:
L_256564:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_256565
L_256677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_256678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256678
.p2align 0x4
.long 0x460
L_256678:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_256565:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x10(%rbp)
	cmpq $0x1,%r13
	je L_484858
L_256566:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_256567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_484858:
L_256649:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_256650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x8AA
L_256567:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256568
L_256647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_256648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256648
.p2align 0x4
.long 0x520
L_256648:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_256568:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_256575
L_256569:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_256570:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106D,%r13
	je L_484883
L_256571:
	cmpq $0x1,%r15
	je L_484860
L_256572:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x30(%rbp)
	jmp L_256570
.p2align 0x4
L_484860:
L_256573:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256575
L_256640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_256641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256641
.p2align 0x4
.long 0x520
L_256641:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_256575:
	movq $0x1E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_866:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_484881
L_256576:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r11
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_484861
L_256577:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	movq %r11,%r15
L_256578:
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_256579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peekStrid_0
.p2align 0x4
L_484861:
L_256638:
	movq %r11,%r15
L_256584:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ebx
	movslq %ebx,%r14
	cmpq %r15,%r14
	jne L_484880
L_256586:
	decl %ebx
	jo L_256587
L_256588:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3017:
	cmpl %ecx,%ebx
	jl L_256608
L_256589:
	movl %ebx,%esp
	addl %ecx,%esp
	movl %ecx,(localWord32+0x4)(%rip)
	jo L_256587
L_256590:
	movl %esp,%esi
	shrl $0x1F,%esi
	addl %esi,%esp
	sarl $0x1,%esp
	movslq %esp,%rsi
	movq %rsi,0x20(%rbp)
	cmpq %r15,%rsi
	jnb L_484876
L_256592:
	movq 0x10(%rbp),%rdi
	movq 0x8(%rdi),%rdx
	movq 0x10(%rdx),%r8
	movq 0x18(%rbp),%rdi
	movq 0x0(%rdi,%rsi,8),%rdx
	movq 0x18(%rdx),%rax
	movq 0x8(%rax),%r14
	movq 0x10(%r14),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	xorq %r13,%r13
	xorq %r14,%r14
	movl %esp,%ecx
.p2align 0x4,,0x7
loop_3018:
	cmpq %r11,%r14
	jl L_484875
L_256593:
	movl $0x1,%esp
	xchgl %esp,%ecx
	movl %esp,(localWord32+0xC)(%rip)
L_256594:
	cmpq %r10,%r13
	jnl L_256596
L_256618:
	testl %ecx,%ecx
	jnz L_484873
L_256619:
	movb 0x0(%r8,%r14,1),%spl
	movb 0x0(%r9,%r13,1),%sil
	cmpb %sil,%spl
	jb L_484871
L_256620:
	cmpb %spl,%sil
	jb L_484862
L_256621:
	incq %r14
	incq %r13
	movl (localWord32+0xC)(%rip),%ecx
	jmp loop_3018
.p2align 0x4
L_484862:
L_256596:
	cmpq %r8,%r9
	je L_484869
L_256597:
	cmpq %r10,%r11
	jne L_256599
L_256601:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_199:
	cmpq %r11,%r14
	je L_484864
L_256602:
	movb 0x0(%r8,%r14,1),%r13b
	cmpb %r13b,0x0(%r9,%r14,1)
	jne L_484863
L_256604:
	incq %r14
	jmp vectorEqualLoop_199
.p2align 0x4
L_484863:
L_256599:
	movl (localWord32+0xC)(%rip),%r14d
	incl %r14d
	jno loop_3951
L_256587:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
loop_3951:
	movl %r14d,%ecx
	jmp loop_3017
.p2align 0x4
L_484864:
L_256605:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256607
L_256612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_256613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256613
.p2align 0x4
.long 0x45F
L_256613:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_256607:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x10(%r13),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x104E,%r15
	je L_484866
	cmpq $0x104F,%r15
	je L_484865
L_256608:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484865:
L_256611:
	movq 0x0(%r11),%r15
L_256610:
	movq $0x20EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484866:
L_256609:
	movq 0x0(%r11),%r15
	jmp L_256610
.p2align 0x4
L_484869:
L_256614:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256607
L_256616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_256617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256617
.p2align 0x4
.long 0x45F
L_256617:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_256607
.p2align 0x4
L_484871:
	movl (localWord32+0x4)(%rip),%ecx
L_256624:
	movl (localWord32+0xC)(%rip),%ebx
	decl %ebx
	jo L_256587
	jmp loop_3017
.p2align 0x4
L_484873:
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_256624
.p2align 0x4
L_484875:
L_256627:
	xorl %esp,%esp
	xchgl %esp,%ecx
	movl %esp,(localWord32+0xC)(%rip)
	jmp L_256594
.p2align 0x4
L_484876:
L_256591:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484880:
L_256585:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484881:
L_256639:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x20E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484883:
L_256642:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256643
L_256644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_256645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256645
.p2align 0x4
.long 0x654
L_256645:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_256643:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_866
.p2align 0x4
.long 0x2B
L_256650:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256651
L_256675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_256676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256676
.p2align 0x4
.long 0x2C
L_256676:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_256651:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_256658
L_256652:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_256653:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106B,%r13
	je L_484894
L_256654:
	cmpq $0x1,%r15
	je L_484887
L_256655:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_256653
.p2align 0x4
L_484887:
L_256656:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256658
L_256668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_256669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256669
.p2align 0x4
.long 0x2C
L_256669:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_256658:
	movq $0x15F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_867:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_256608
L_256659:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x104E,%r14
	je L_484891
	cmpq $0x104F,%r14
	je L_484890
	movq %r10,%r14
L_256660:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x104E,%r14
	je L_484889
	cmpq $0x104F,%r14
	je L_484888
	jmp L_256608
.p2align 0x4
L_484888:
L_256663:
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r13,%r14
L_256662:
	movq $0x20EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484889:
L_256661:
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r13,%r14
	jmp L_256662
.p2align 0x4
L_484890:
	movq %r15,%r14
	movq %r11,%r15
	movq %r10,%r13
L_256665:
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x10(%rbp),%r9
	movq %r9,0x0(%r10)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r10,0x0(%r11)
	movq %r14,%r15
	movq %r13,%r14
	jmp L_256660
.p2align 0x4
L_484891:
	movq %r15,%r14
	movq %r11,%r15
	movq %r10,%r13
	jmp L_256665
.p2align 0x4
L_484894:
L_256670:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256671
L_256672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_256673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256673
.p2align 0x4
.long 0x982
L_256673:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_256671:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_867
.p2align 0x4
.long 0x4A8
L_256579:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256580
L_256636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_256637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256637
.p2align 0x4
.long 0x4B1
L_256637:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_256580:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_484899
L_256581:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_256584
L_256582:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_256578
.p2align 0x4
L_484899:
L_256629:
	movq $0x1,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_256630:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484901
.p2align 0x4,,0x7
L_256631:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_484900
L_256632:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_256630
.p2align 0x4
L_484900:
L_256633:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x20E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484901:
L_256634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_256635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256635
.p2align 0x4
.long 0x5EF
L_256635:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_256631
.text
.p2align 0x4
.globl bindToType_0
.hidden bindToType_0
bindToType_0:
L_256679:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_256680
L_256834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_256835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256835
.p2align 0x4
.long 0x45C
L_256835:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_256680:
	movq 0x10(%rbp),%r15
	movq 0x48(%r15),%r14
	movq 0x40(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x50(%r15),%r13
	movq 0x10(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_256683
L_256681:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne L_484903
L_256827:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x108A8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_256828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484903:
L_256683:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_256684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1F80
L_256828:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_484906
L_256829:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x68,%rbp
	leaq (L_256830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484906:
L_256700:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4138
L_256684:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256685
L_256825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_256826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256826
.p2align 0x4
.long 0x414F
L_256826:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_256685:
	movq $0x15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x17,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x78(%rbp)
	addq $0x28,%r12
	movl 0x20(%rbp),%r8d
	movl %r8d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r13,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r11,0x18(%r9)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je x_868
L_256686:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_256687:
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%rbp),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_484917
L_256688:
	cmpq $0x1,%r15
	je L_484907
L_256689:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_256687
.p2align 0x4
L_484907:
L_256690:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_868
L_256782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_256783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256783
.p2align 0x4
.long 0x414A
L_256783:
	addq $0xFFFFFFFFFFFFFF78,%rbp
x_868:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_256745
L_256692:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_256693:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_484915
L_256695:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3019:
	cmpl %ecx,%ebx
	je L_484911
L_256696:
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb L_484910
L_256698:
	movq 0x0(%r13,%r11,8),%r10
	movq 0x10(%r10),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%rbp),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r8)
	je L_484909
L_256699:
	incl %ebx
	jo L_256700
L_256701:
	jmp loop_3019
.p2align 0x4
L_484909:
L_256702:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x10888)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_256703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484910:
L_256697:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484911:
L_256775:
	cmpq $0x1,%r15
	je L_484912
L_256776:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_256693
.p2align 0x4
L_484912:
L_256777:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256745
L_256779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_256780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256780
.p2align 0x4
.long 0x4142
L_256780:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_256745:
	movq $0x1137,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2663,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_484913
L_256746:
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484913:
L_256747:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	movq $0x2099,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x10(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x8(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x80,%rbp
	leaq (L_256748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_484915:
L_256694:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484917:
L_256784:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x10888)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_256785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1DCB
L_256830:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_256683
L_256754:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4139
L_256703:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_256704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4140
L_256748:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256749
L_256751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_256752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256752
.p2align 0x4
.long 0x4141
L_256752:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_256749:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_256750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x413A
L_256785:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_256786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x413A
L_256704:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x10890)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_256705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCBC
L_256750:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x413B
L_256786:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x108A0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_256787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x413B
L_256705:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256706
L_256773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_256774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256774
.p2align 0x4
.long 0x4149
L_256774:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_256706:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256707:
	addl 0x0(%r15),%ecx
	movl %ecx,0x24(%rbp)
	jo L_256700
L_256708:
	cmpq $0x1,%r14
	je L_484921
L_256709:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256707
.p2align 0x4
L_484921:
L_256710:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256711
L_256771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_256772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256772
.p2align 0x4
.long 0x4148
L_256772:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_256711:
	movl 0x24(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484922
L_256712:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_256713:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_256714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484922:
L_256770:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256713
.p2align 0x4
.long 0x414B
L_256787:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256788
L_256822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_256823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256823
.p2align 0x4
.long 0x414D
L_256823:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_256788:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256789:
	addl 0x0(%r15),%ecx
	movl %ecx,0x24(%rbp)
	jo L_256700
L_256790:
	cmpq $0x1,%r14
	je L_484926
L_256791:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256789
.p2align 0x4
L_484926:
L_256792:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256793
L_256820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_256821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256821
.p2align 0x4
.long 0x414E
L_256821:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_256793:
	movl 0x24(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484927
L_256794:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
L_256795:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_256796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484927:
L_256819:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256795
.p2align 0x4
.long 0x413A
L_256714:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_256715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x413B
L_256796:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_256797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x413C
L_256715:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_256716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x414B
L_256797:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_256798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x413C
L_256716:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256717
L_256768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_256769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256769
.p2align 0x4
.long 0x4147
L_256769:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_256717:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256718:
	addl 0x0(%r15),%ecx
	movl %ecx,0x24(%rbp)
	jo L_256700
L_256719:
	cmpq $0x1,%r14
	je L_484931
L_256720:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256718
.p2align 0x4
L_484931:
L_256721:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256722
L_256766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_256767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256767
.p2align 0x4
.long 0x4146
L_256767:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_256722:
	movl 0x24(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484932
L_256723:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
L_256724:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10898)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_256725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484932:
L_256765:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256724
.p2align 0x4
.long 0x414B
L_256798:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256799
L_256817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_256818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256818
.p2align 0x4
.long 0x414D
L_256818:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_256799:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256800:
	addl 0x0(%r15),%ecx
	movl %ecx,0x24(%rbp)
	jo L_256700
L_256801:
	cmpq $0x1,%r14
	je L_484936
L_256802:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256800
.p2align 0x4
L_484936:
L_256803:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256804
L_256815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_256816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256816
.p2align 0x4
.long 0x414C
L_256816:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_256804:
	movl 0x24(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484938
L_256805:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
L_256806:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_256700
L_256807:
	movl %r13d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x88,%rbp
	leaq (L_256808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484938:
L_256814:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256806
.p2align 0x4
.long 0x413A
L_256725:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_256726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x4139
L_256808:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256809
L_256812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_256813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256813
.p2align 0x4
.long 0x414A
L_256813:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_256809:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_256754
	jmp x_868
.p2align 0x4
.long 0x413D
L_256726:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_256727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x413D
L_256727:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256728
L_256763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_256764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256764
.p2align 0x4
.long 0x4145
L_256764:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_256728:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256729:
	addl 0x0(%r15),%ecx
	movl %ecx,0x24(%rbp)
	jo L_256700
L_256730:
	cmpq $0x1,%r14
	je L_484944
L_256731:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256729
.p2align 0x4
L_484944:
L_256732:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256733
L_256761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_256762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256762
.p2align 0x4
.long 0x4144
L_256762:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_256733:
	movl 0x24(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484945
L_256734:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_256735:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_256736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_484945:
L_256760:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256735
.p2align 0x4
.long 0x413E
L_256736:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256737
L_256758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_256759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256759
.p2align 0x4
.long 0x4143
L_256759:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_256737:
	movl 0x24(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484951
L_256738:
	decl %ecx
	jo L_256700
L_256739:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_256740:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_256700
L_256741:
	movl %r13d,0x0(%r15)
	movq %r14,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x88,%rbp
	leaq (L_256742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_484951:
L_256757:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256740
.p2align 0x4
.long 0x413F
L_256742:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256743
L_256755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_256756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256756
.p2align 0x4
.long 0x4142
L_256756:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_256743:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_256754
	jmp L_256745
.text
.p2align 0x4
.globl tabulate_44
.hidden tabulate_44
tabulate_44:
L_256836:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_256837
L_256857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_256858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256858
.p2align 0x4
.long 0x458
L_256858:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_256837:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_484963
L_256838:
	cmpq $0x7FFFFFFF,%rdx
	ja L_484962
L_256839:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1449,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_256840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256840
.p2align 0x4
.long 0x453
L_256840:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_256841:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_3020:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484961
.p2align 0x4,,0x7
L_256842:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_484960
L_256844:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1D7B,%r13
	je L_484959
	cmpq $0x1D7C,%r13
	je L_484958
	cmpq $0x1D7D,%r13
	je L_484957
	cmpq $0x1D7E,%r13
	je L_484956
	cmpq $0x1D7F,%r13
	je L_484955
L_256845:
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq $0x1D03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x605,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
.p2align 0x4,,0x7
L_256846:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_3020
.p2align 0x4
L_484955:
L_256852:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r13
	movq %r13,%r15
	jmp L_256846
.p2align 0x4
L_484956:
L_256851:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_256848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3950
.p2align 0x4
L_484957:
L_256850:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_256848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3950
.p2align 0x4
L_484958:
L_256849:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r13,%r15,1),%r13
	movq %r13,%r15
	jmp L_256846
.p2align 0x4
L_484959:
L_256847:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_256848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3950
.p2align 0x4
L_484960:
L_256843:
	movq 0x8(%rbp),%r14
	movq $0x9C9,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484961:
L_256853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_256854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256854
.p2align 0x4
.long 0x45D
L_256854:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_256842
.p2align 0x4
L_484962:
L_256855:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484963:
L_256856:
	movq (globalObjptr+0xB20)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_256841
.p2align 0x4
.long 0x5F9
L_256848:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_256846
.text
.p2align 0x4
.globl elabMatch_0
.hidden elabMatch_0
elabMatch_0:
L_256859:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_257140
L_256860:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_484972
L_256861:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x4E0(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x10(%r15),%r13
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r13
	movl 0x0(%r13),%r9d
	incl %r9d
	jo L_256862
L_256863:
	movl %r9d,%r8d
	movl %r9d,0x0(%r13)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movl %r8d,0x4(%r9)
	addq $0x10,%r12
	movl $0x1,0x0(%r9)
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq 0x0(%r11),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsp,0x0(%rsi)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r9,0x0(%rsp)
	movq %rsi,0x8(%rsp)
	movq %r8,0x10(%rsp)
	movq %r15,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x10(%rbp)
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x8(%r8)
	addq $0x18,%r12
	movq %r9,0x0(%r8)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r8,0x0(%r10)
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	addq $0x10,%r12
	movl 0x0(%r13),%r8d
	incl %r8d
	jo L_484970
L_256864:
	movl %r8d,0x0(%r13)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r8d,0x4(%r13)
	addq $0x10,%r12
	movl $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq 0x0(%r11),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rsp,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r13,0x0(%rsp)
	movq %r11,0x8(%rsp)
	movq %r8,0x10(%rsp)
	movq %r15,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x4E8(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r10,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r9,%r15,1)
	movq %r11,0x0(%r10)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x4F0(%rbp)
	cmpq %r15,%r11
	je L_484965
L_256865:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484965:
L_256866:
	movq 0x4F0(%rbp),%r15
	testq %r15,%r15
	jz L_484969
L_256867:
	cmpq $0x7FFFFFFF,%r15
	ja L_484968
L_256868:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256869
L_257136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_257137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257137
.p2align 0x4
.long 0x4150
L_257137:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_256869:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq 0x4F0(%rbp),%rdx
	movq $0x38,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_256870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_256870
.p2align 0x4
.long 0x4150
L_256870:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq %rax,0x4F8(%rbp)
L_256871:
	movq $0x0,0x500(%rbp)
loop_3021:
	movq 0x4F0(%rbp),%r15
	cmpq %r15,0x500(%rbp)
	jl L_484966
L_256872:
	movq 0x4F8(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484966:
L_256873:
	movq 0x500(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x4E0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x508(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x510(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x518(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x44D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq 0x158(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x520(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x160(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x528(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x530(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x170(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x538(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x178(%rbp),%r15
	movq 0x1E0(%r15),%r13
	movq %r13,0x568(%rbp)
	movq 0x1D8(%r15),%r13
	movq %r13,0x570(%rbp)
	movq 0x1D0(%r15),%r13
	movq %r13,0x578(%rbp)
	movq 0x1C8(%r15),%r13
	movq %r13,0x580(%rbp)
	movq 0x1C0(%r15),%r13
	movq %r13,0x588(%rbp)
	movq 0x1B8(%r15),%r13
	movq %r13,0x598(%rbp)
	movq 0x1B0(%r15),%r13
	movq %r13,0x5A0(%rbp)
	movq 0x1A8(%r15),%r13
	movq %r13,0x5A8(%rbp)
	movq 0x1A0(%r15),%r13
	movq %r13,0x5B0(%rbp)
	movq 0x198(%r15),%r13
	movq %r13,0x5B8(%rbp)
	movq 0x190(%r15),%r13
	movq %r13,0x5C0(%rbp)
	movq 0x188(%r15),%r13
	movq %r13,0x5C8(%rbp)
	movq 0x180(%r15),%r13
	movq %r13,0x5D0(%rbp)
	movq 0x178(%r15),%r13
	movq %r13,0x5D8(%rbp)
	movq 0x170(%r15),%r13
	movq %r13,0x5E0(%rbp)
	movq 0x168(%r15),%r13
	movq %r13,0x5E8(%rbp)
	movq 0x160(%r15),%r13
	movq %r13,0x5F0(%rbp)
	movq 0x158(%r15),%r13
	movq %r13,0x5F8(%rbp)
	movq 0x150(%r15),%r13
	movq %r13,0x600(%rbp)
	movq 0x148(%r15),%r13
	movq %r13,0x608(%rbp)
	movq 0x140(%r15),%r13
	movq %r13,0x610(%rbp)
	movq 0x138(%r15),%r13
	movq %r13,0x618(%rbp)
	movq 0x130(%r15),%r13
	movq %r13,0x620(%rbp)
	movq 0x128(%r15),%r13
	movq %r13,0x628(%rbp)
	movq 0x120(%r15),%r13
	movq %r13,0x630(%rbp)
	movq 0x118(%r15),%r13
	movq %r13,0x638(%rbp)
	movq 0x110(%r15),%r13
	movq %r13,0x640(%rbp)
	movq 0x108(%r15),%r13
	movq %r13,0x648(%rbp)
	movq 0x100(%r15),%r13
	movq %r13,0x650(%rbp)
	movq 0xF8(%r15),%r13
	movq %r13,0x658(%rbp)
	movq 0xF0(%r15),%r13
	movq %r13,0x660(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x668(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0x670(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x678(%rbp)
	movq 0xB8(%r15),%r13
	movq %r13,0x680(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x688(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0x690(%rbp)
	movq 0xA0(%r15),%r13
	movq %r13,0x698(%rbp)
	movq 0x98(%r15),%r13
	movq %r13,0x6A0(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0x6A8(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0x6B0(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0x6B8(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0x6C0(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x6C8(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x6D0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x6D8(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x6E0(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x6E8(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x6F0(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x6F8(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x700(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x708(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x710(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x718(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x720(%rbp)
	movq $0xB51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x590(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq (globalObjptr+0x1C00)(%rip),%r15
	movq %r15,0x550(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq %r14,0x560(%rbp)
	addq $0x548,%rbp
	leaq (L_256874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2018
.p2align 0x4
L_484968:
L_257138:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484969:
L_257139:
	movq (globalObjptr+0x6E78)(%rip),%r14
	movq %r14,0x4F8(%rbp)
	jmp L_256871
.p2align 0x4
L_484970:
L_256862:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_484972:
L_257140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4E0,%rbp
	leaq (L_257141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257141
.p2align 0x4
.long 0x417A
L_257141:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	jmp L_256861
.p2align 0x4
.long 0x4151
L_256874:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256875
L_257134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_257135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257135
.p2align 0x4
.long 0x4179
L_257135:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_256875:
	movq 0x548(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1D80,%r14
	je L_484974
L_257133:
	movq 0x0(%r13),%r14
	movq $0x304B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
L_256877:
	movq %r14,0x558(%rbp)
	movq %r15,0x568(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x558,%rbp
	leaq (L_256878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_484974:
L_256876:
	movq 0x0(%r13),%r14
	movq $0x3047,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_256877
.p2align 0x4
.long 0x4152
L_256878:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x540(%rbp)
	cmpq $0x1,%r15
	je L_484976
L_256879:
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x560(%rbp)
	movq (globalObjptr+0x108B0)(%rip),%r15
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_256880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484976:
L_256929:
	movq $0x1,0x558(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x508(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6D8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xA20(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xA28(%rbp)
	addq $0x558,%rbp
	leaq (L_256930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
.long 0x4153
L_256880:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x540(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256881
L_257130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_257131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257131
.p2align 0x4
.long 0x4178
L_257131:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_256881:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x568(%rbp)
	addq $0x18,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x108B8)(%rip),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_256882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4152
L_256930:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x540(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256931
L_257104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_257105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257105
.p2align 0x4
.long 0x4172
L_257105:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_256931:
	movq 0x540(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x550(%rbp)
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1D80,%r15
	je L_484978
L_257103:
	movq 0x0(%r14),%r15
	movq $0x304B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_256933:
	movq %r15,0x560(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x560,%rbp
	leaq (L_256934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_484978:
L_256932:
	movq 0x0(%r14),%r15
	movq $0x3047,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_256933
.p2align 0x4
.long 0x4154
L_256882:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256883
L_257128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_257129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257129
.p2align 0x4
.long 0x4166
L_257129:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_256883:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x570(%rbp)
	addq $0x18,%r12
	movq 0x558(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x568(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256884:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_256862
L_256885:
	cmpq $0x1,%r14
	je L_484980
L_256886:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256884
.p2align 0x4
L_484980:
L_256887:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256888
L_257126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_257127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257127
.p2align 0x4
.long 0x4177
L_257127:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_256888:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_484981
L_256889:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x570(%rbp),%r14
	movq %r14,0x0(%r15)
L_256890:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x558(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x568(%rbp)
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE288)(%rip),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_256891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484981:
L_257125:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256890
.p2align 0x4
.long 0x415B
L_256934:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256935
L_257101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_257102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257102
.p2align 0x4
.long 0x4167
L_257102:
	addq $0xFFFFFFFFFFFFFA98,%rbp
L_256935:
	movq 0x558(%rbp),%r15
	cmpq $0x1,%r15
	je L_484985
L_256936:
	movq 0x8(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x568(%rbp)
	movq 0x508(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x570(%rbp)
	movq (globalObjptr+0x108C0)(%rip),%r15
	movq %r15,0x580(%rbp)
	addq $0x580,%rbp
	leaq (L_256937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_484985:
L_256987:
	movl 0x180(%rbp),%r15d
	testl %r15d,%r15d
	jz L_256990
L_257036:
	movq 0x188(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_256990
L_257038:
	movq 0x190(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_256990
L_257039:
	movq 0x198(%rbp),%r15
	cmpb $0x2,0x0(%r15)
	jne L_484986
L_257041:
	movq 0x510(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x560,%rbp
	leaq (L_257042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
L_484986:
L_256990:
	movq $0x448D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x120(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x510(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x508(%rbp),%r13
	movq %r13,0x18(%r15)
	movq $0x2097,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x550(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x158(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_256997
L_256991:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_256992:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_257022
L_256993:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_484987
L_256994:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256992
.p2align 0x4
L_484987:
L_256995:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256997
L_257032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_257033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257033
.p2align 0x4
.long 0x4165
L_257033:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_256997:
	movq 0x158(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x520(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_257004
L_256998:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_256999:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_257022
L_257000:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_484988
L_257001:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_256999
.p2align 0x4
L_484988:
L_257002:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257004
L_257028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_257029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257029
.p2align 0x4
.long 0x4164
L_257029:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_257004:
	movq 0x160(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x528(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x168(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_257011
L_257005:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_257006:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_257022
L_257007:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_484989
L_257008:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_257006
.p2align 0x4
L_484989:
L_257009:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257011
L_257024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_257025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257025
.p2align 0x4
.long 0x4163
L_257025:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_257011:
	movq 0x168(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x530(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x170(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_257018
L_257012:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_257013:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_484992
L_257014:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_484990
L_257015:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_257013
.p2align 0x4
L_484990:
L_257016:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257018
L_257019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_257020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257020
.p2align 0x4
.long 0x4162
L_257020:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_257018:
	movq 0x170(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x538(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x4F8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x500(%rbp),%r14
	movq %r14,%r11
	imulq $0x18,%r11
	movq 0x548(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x18,%r11
	movq 0x550(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x18,%r13
	movq 0x540(%rbp),%r11
	movq %r11,0x10(%r15,%r13,1)
	incq %r14
	movq %r14,0x500(%rbp)
	jmp loop_3021
.p2align 0x4
L_484992:
L_257022:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4155
L_256891:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256892
L_257123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_257124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257124
.p2align 0x4
.long 0x4166
L_257124:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_256892:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x570(%rbp)
	addq $0x18,%r12
	movq 0x550(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x568(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256893:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_256862
L_256894:
	cmpq $0x1,%r14
	je L_485007
L_256895:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256893
.p2align 0x4
L_485007:
L_256896:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256897
L_257121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_257122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257122
.p2align 0x4
.long 0x4176
L_257122:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_256897:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485008
L_256898:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x570(%rbp),%r14
	movq %r14,0x0(%r15)
L_256899:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x550(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_256900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485008:
L_257120:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256899
.p2align 0x4
.long 0x415C
L_256937:
	addq $0xFFFFFFFFFFFFFA80,%rbp
	movq 0x580(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256938
L_257098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_257099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257099
.p2align 0x4
.long 0x4171
L_257099:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_256938:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x578(%rbp)
	addq $0x18,%r12
	movq 0x568(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107C8)(%rip),%r15
	movq %r15,0x588(%rbp)
	addq $0x588,%rbp
	leaq (L_256939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x415B
L_257042:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq %r15,0x560(%rbp)
	addq $0x560,%rbp
	leaq (toString_360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximatePrefix_0
.p2align 0x4
.long 0x4156
L_256900:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x580(%rbp)
	addq $0x578,%rbp
	leaq (L_256901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x415D
L_256939:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x568(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256940
L_257096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x588,%rbp
	leaq (L_257097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257097
.p2align 0x4
.long 0x416F
L_257097:
	addq $0xFFFFFFFFFFFFFA78,%rbp
L_256940:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x580(%rbp)
	addq $0x18,%r12
	movq 0x568(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x578(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256941:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_256862
L_256942:
	cmpq $0x1,%r14
	je L_485013
L_256943:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256941
.p2align 0x4
L_485013:
L_256944:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256945
L_257094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_257095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257095
.p2align 0x4
.long 0x4170
L_257095:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_256945:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485014
L_256946:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x580(%rbp),%r14
	movq %r14,0x0(%r15)
L_256947:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x568(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x578(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE288)(%rip),%r15
	movq %r15,0x588(%rbp)
	addq $0x588,%rbp
	leaq (L_256948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485014:
L_257093:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256947
.p2align 0x4
.long 0x415B
toString_360:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq $0x1,0x560(%rbp)
	movq %r15,0x568(%rbp)
	addq $0x560,%rbp
	leaq (rev_358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4157
L_256901:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq (globalObjptr+0xDF10)(%rip),%r15
	movq %r15,0x580(%rbp)
	addq $0x580,%rbp
	leaq (L_256902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x415E
L_256948:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x560(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256949
L_257091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x588,%rbp
	leaq (L_257092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257092
.p2align 0x4
.long 0x416F
L_257092:
	addq $0xFFFFFFFFFFFFFA78,%rbp
L_256949:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x580(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x578(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256950:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_256862
L_256951:
	cmpq $0x1,%r14
	je L_485018
L_256952:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256950
.p2align 0x4
L_485018:
L_256953:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256954
L_257089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_257090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257090
.p2align 0x4
.long 0x416E
L_257090:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_256954:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485019
L_256955:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x580(%rbp),%r14
	movq %r14,0x0(%r15)
L_256956:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x560(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x580(%rbp)
	addq $0x580,%rbp
	leaq (L_256957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485019:
L_257088:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256956
.p2align 0x4
.long 0x415B
rev_358:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq $0x1,%r15
	je L_485025
L_257043:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x558(%rbp)
	movq %r14,0x560(%rbp)
	movq $0x1,0x568(%rbp)
.p2align 0x4,,0x7
L_257044:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485024
.p2align 0x4,,0x7
L_257045:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x560(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x568(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x558(%rbp),%r14
	cmpq $0x1,%r14
	je L_485023
L_257046:
	movq %r15,0x568(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x558(%rbp)
	movq %r15,0x560(%rbp)
	jmp L_257044
.p2align 0x4
L_485023:
L_257048:
	movq %r15,0x560(%rbp)
	addq $0x560,%rbp
	leaq (L_257049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485024:
L_257067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_257068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257068
.p2align 0x4
.long 0x4166
L_257068:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	jmp L_257045
.p2align 0x4
L_485025:
L_257069:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_257048
.p2align 0x4
.long 0x4158
L_256902:
	addq $0xFFFFFFFFFFFFFA80,%rbp
	movq 0x580(%rbp),%r15
	movq %r15,0x578(%rbp)
	movl $0x1,0x588(%rbp)
	movq 0x508(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x598(%rbp)
	addq $0x588,%rbp
	leaq (L_256903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4158
L_256957:
	addq $0xFFFFFFFFFFFFFA80,%rbp
	movq 0x580(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x590(%rbp)
	addq $0x588,%rbp
	leaq (L_256958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x415B
L_257049:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257050
L_257065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_257066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257066
.p2align 0x4
.long 0x4167
L_257066:
	addq $0xFFFFFFFFFFFFFA98,%rbp
L_257050:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x107E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x560(%rbp)
	addq $0x560,%rbp
	leaq (L_257051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4159
L_256903:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256904
L_257118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_257119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257119
.p2align 0x4
.long 0x416B
L_257119:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_256904:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x580(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x578(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x588(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x570(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256905:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_256862
L_256906:
	cmpq $0x1,%r14
	je L_485027
L_256907:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256905
.p2align 0x4
L_485027:
L_256908:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256909
L_257116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_257117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257117
.p2align 0x4
.long 0x4175
L_257117:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_256909:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485028
L_256910:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
L_256911:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_256912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
L_485028:
L_257115:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256911
.p2align 0x4
.long 0x4159
L_256958:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq (globalObjptr+0xDF10)(%rip),%r15
	movq %r15,0x590(%rbp)
	addq $0x590,%rbp
	leaq (L_256959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x415B
L_257051:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257052
L_257063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_257064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257064
.p2align 0x4
.long 0x4167
L_257064:
	addq $0xFFFFFFFFFFFFFA98,%rbp
L_257052:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x558(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x508(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_485032
L_257053:
	movq 0x0(%r11),%r11
	movq %r11,%r14
L_257054:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x558(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x578(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x568(%rbp)
	addq $0x578,%rbp
	leaq (L_257055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_485032:
L_257062:
	movq $0x1,%r14
	jmp L_257054
.p2align 0x4
.long 0x4157
L_256912:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x570(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256913
L_257113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_257114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257114
.p2align 0x4
.long 0x4171
L_257114:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_256913:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x570(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x578(%rbp)
	addq $0x18,%r12
	movq 0x568(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256914:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_256862
L_256915:
	cmpq $0x1,%r14
	je L_485034
L_256916:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256914
.p2align 0x4
L_485034:
L_256917:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256918
L_257111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x588,%rbp
	leaq (L_257112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257112
.p2align 0x4
.long 0x4174
L_257112:
	addq $0xFFFFFFFFFFFFFA78,%rbp
L_256918:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485035
L_256919:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x578(%rbp),%r14
	movq %r14,0x0(%r15)
L_256920:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x550(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_256921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_485035:
L_257110:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256920
.p2align 0x4
.long 0x415F
L_256959:
	addq $0xFFFFFFFFFFFFFA70,%rbp
	movq 0x590(%rbp),%r15
	movq %r15,0x588(%rbp)
	movl $0x1,0x598(%rbp)
	movq 0x508(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x598,%rbp
	leaq (L_256960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4157
L_257055:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movl 0x578(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257056
L_257060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_257061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257061
.p2align 0x4
.long 0x4166
L_257061:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_257056:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x184(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x558(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x560(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_485039
L_257059:
	movq 0x568(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_257058:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x540(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x540(%rbp)
	jmp L_256990
.p2align 0x4
L_485039:
	movq %r14,%r15
	jmp L_257058
.p2align 0x4
.long 0x415A
L_256921:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movl 0x570(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256922
L_257108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_257109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257109
.p2align 0x4
.long 0x4173
L_257109:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_256922:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485043
L_256923:
	decl %ecx
	jo L_256862
L_256924:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x550(%rbp),%r14
	movq %r14,0x8(%r15)
L_256925:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_256862
L_256926:
	movl %r13d,0x0(%r15)
	movq %r14,0x558(%rbp)
	movq 0x560(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x570(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x560(%rbp)
	addq $0x558,%rbp
	leaq (L_256927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485043:
L_257107:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256925
.p2align 0x4
.long 0x4160
L_256960:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x590(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256961
L_257086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_257087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257087
.p2align 0x4
.long 0x416D
L_257087:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_256961:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x590(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x588(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x598(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x580(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256962:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_256862
L_256963:
	cmpq $0x1,%r14
	je L_485045
L_256964:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256962
.p2align 0x4
L_485045:
L_256965:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256966
L_257084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_257085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257085
.p2align 0x4
.long 0x416C
L_257085:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_256966:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485046
L_256967:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x598(%rbp),%r14
	movq %r14,0x0(%r15)
L_256968:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x588(%rbp)
	addq $0x588,%rbp
	leaq (L_256969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
L_485046:
L_257083:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256968
.p2align 0x4
.long 0x4152
L_256927:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_256929
L_257072:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4159
L_256969:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256970
L_257081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_257082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257082
.p2align 0x4
.long 0x416B
L_257082:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_256970:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x580(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x588(%rbp)
	addq $0x18,%r12
	movq 0x578(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_256971:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_256862
L_256972:
	cmpq $0x1,%r14
	je L_485051
L_256973:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_256971
.p2align 0x4
L_485051:
L_256974:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256975
L_257079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_257080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257080
.p2align 0x4
.long 0x416A
L_257080:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_256975:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485052
L_256976:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
L_256977:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x560(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x568(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x580(%rbp)
	addq $0x580,%rbp
	leaq (L_256978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_485052:
L_257078:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256977
.p2align 0x4
.long 0x4161
L_256978:
	addq $0xFFFFFFFFFFFFFA80,%rbp
	movl 0x580(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	movq 0x588(%rbp),%r15
	movq %r15,0x560(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256979
L_257076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_257077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257077
.p2align 0x4
.long 0x4169
L_257077:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_256979:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485058
L_256980:
	decl %ecx
	jo L_256862
L_256981:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x560(%rbp),%r14
	movq %r14,0x8(%r15)
L_256982:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_256862
L_256983:
	movl %r13d,0x0(%r15)
	movq %r14,0x560(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x578(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x580(%rbp)
	addq $0x560,%rbp
	leaq (L_256984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485058:
L_257075:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_256982
.p2align 0x4
.long 0x415B
L_256984:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_256985
L_257073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_257074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257074
.p2align 0x4
.long 0x4168
L_257074:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_256985:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257072
	jmp L_256987
.text
.p2align 0x4
.globl elabExp_0
.hidden elabExp_0
elabExp_0:
L_257142:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x4E0(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_257143
L_261034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_261035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261035
.p2align 0x4
.long 0x43DC
L_261035:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257143:
	movq 0x10(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_3022:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x210,%r15
	jb L_485179
.p2align 0x4,,0x7
L_257144:
	movq $0x40D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x4F0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4F8(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xDFB,%rax
	cmpq $0x11,%rax
	ja L_485062
	jmp *jumpTable_741(,%rax,8)
.data
.p2align 0x4
jumpTable_741:
.quad L_485178,L_485177,L_485176,L_485175,L_485174,L_485173,L_485172,L_485165,L_485147,L_485133,L_485126,L_485116,L_485115,L_485114,L_485113,L_485076,L_485074,L_485073
.text
.p2align 0x4
L_485062:
L_257145:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1283,%rax
	cmpq $0x8,%rax
	ja L_485063
	jmp *jumpTable_742(,%rax,8)
.data
.p2align 0x4
jumpTable_742:
.quad L_485072,L_485071,L_485070,L_485069,L_485068,L_485067,L_485066,L_485065,L_485064
.text
.p2align 0x4
L_485063:
L_257146:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0x108C8)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_257147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485064:
L_259076:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0x10970)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_259077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485065:
L_259073:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10968)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_259074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485066:
L_258820:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0x10960)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_258821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485067:
L_258660:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10950)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_258661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485068:
L_257962:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x500(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq (globalObjptr+0x108F8)(%rip),%r15
	movq %r15,0x518(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x518,%rbp
	leaq (L_257963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485069:
L_257895:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x108E8)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_257896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485070:
L_257891:
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq (globalObjptr+0x108E8)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_257892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485071:
L_257704:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x108C8)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_257705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485072:
L_257508:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xB870)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_257509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_2
.p2align 0x4
L_485073:
L_260967:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x508(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x508,%rbp
	leaq (L_260968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2020
.p2align 0x4
L_485074:
L_260927:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x500(%rbp)
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_485075
L_260928:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x508(%rbp)
L_260929:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_260930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_485075:
L_260966:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq (globalObjptr+0x10A50)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x508(%rbp)
	jmp L_260929
.p2align 0x4
L_485076:
L_260606:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x4D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x4F0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x4F8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x184(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_485112
L_260608:
	testl %r13d,%r13d
	jz L_485111
L_260609:
	cmpq $0x0,%r14
	jna L_485110
L_260611:
	movq 0x0(%r15),%r14
	movq %r14,0x500(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE0C,%r14
	jne L_260612
L_260855:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x508(%rbp)
	movb 0x0(%r15),%r14b
	testb %r14b,%r14b
	jnz L_260612
L_260856:
	cmpq $0x1,%r11
	je L_485107
.p2align 0x4,,0x7
L_260612:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485106
.p2align 0x4,,0x7
L_260613:
	movq $0x2667,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x500(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	cmpl $0x1,0x184(%rbp)
	jl L_485105
L_260614:
	movq %r15,0x500(%rbp)
	movl $0x1,0x508(%rbp)
loop_3064:
	movl 0x184(%rbp),%r15d
	cmpl %r15d,0x508(%rbp)
	jl L_485085
L_260615:
	movq 0x500(%rbp),%r15
	cmpq $0x1,%r15
	je L_485084
L_260616:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1333,%r14
	jne L_485081
L_260617:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	jne L_485077
L_260638:
	movq %r13,0x4E8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp loop_3022
.p2align 0x4
L_485077:
L_260618:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1334,%r15
	jne L_260619
L_260620:
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r14
	movq %r15,0x10(%rbp)
	movq %r14,%r15
	movq %r13,%r14
L_260622:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_260619
L_260623:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1333,%r13
	jne L_485078
L_260624:
	movq 0x8(%r15),%r13
	movq %r13,0x4E8(%rbp)
	movq 0x0(%r15),%r13
	movq $0x39DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x4F8(%rbp)
	addq $0x18,%r12
	movl $0x2,0x500(%rbp)
	addq $0x4F8,%rbp
	leaq (L_260625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_485078:
L_260619:
	movq (globalObjptr+0x4E80)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485081:
L_260639:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
L_260640:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_260619
L_260641:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1333,%r15
	jne L_260619
L_260642:
	movq 0x8(%r14),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x500(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0x4EB0)(%rip),%r15
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_260643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485084:
L_260676:
	movq (globalObjptr+0x4E98)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485085:
L_260677:
	movslq 0x508(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x510(%rbp)
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE0C,%r14
	jne L_260679
L_260801:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x518(%rbp)
	movb 0x0(%r15),%r14b
	testb %r14b,%r14b
	jnz L_260679
L_260802:
	cmpq $0x1,%r11
	je L_485102
.p2align 0x4,,0x7
L_260679:
	movq 0x500(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_485101
L_260681:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1333,%r15
	je L_485088
L_260758:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_260759:
	cmpq $0x1,%r15
	jne L_485087
.p2align 0x4,,0x7
L_260785:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485086
.p2align 0x4,,0x7
L_260786:
	movq $0x2667,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x500(%rbp),%r14
	movq %r14,0x8(%r15)
L_260690:
	movq %r15,0x500(%rbp)
	incl 0x508(%rbp)
	jmp loop_3064
.p2align 0x4
L_485086:
L_260787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_260788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260788
.p2align 0x4
.long 0x43C1
L_260788:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	jmp L_260786
.p2align 0x4
L_485087:
L_260760:
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x518(%rbp)
	movl $0x1,0x528(%rbp)
	movq %r15,0x530(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (toString_366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
L_485088:
L_260682:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq $0x1,0x520(%rbp)
	movq %r15,0x528(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x500(%rbp)
.p2align 0x4,,0x7
L_260683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485100
.p2align 0x4,,0x7
L_260685:
	movq 0x500(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_260686
L_260699:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1334,%r14
	jne L_485096
L_260700:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x50C(%rbp)
	movq %r15,0x530(%rbp)
	movq 0x10(%r15),%r15
	movq %r15,0x500(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq %r14,0x518(%rbp)
.p2align 0x4,,0x7
L_260701:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485095
.p2align 0x4,,0x7
L_260703:
	movq 0x500(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_260704
L_260707:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1333,%r14
	jne L_485093
L_260708:
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x520(%rbp),%r15
	cmpq $0x1,%r15
	je x_2030
L_260709:
	movl 0x4(%r15),%r14d
	movl %r14d,0x500(%rbp)
	movl 0x0(%r15),%r13d
	cmpl %r13d,0x50C(%rbp)
	jnl L_485089
L_260752:
	movq $0x2669,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x528(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_260690
.p2align 0x4
L_485089:
L_260710:
	cmpl %r13d,0x50C(%rbp)
	jne L_485090
L_260727:
	movq 0x538(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x528(%rbp)
	movq (globalObjptr+0x10868)(%rip),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_260728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485090:
L_260712:
	movq $0x39DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x538(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x548(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x550(%rbp)
	movl $0x2,0x558(%rbp)
	addq $0x550,%rbp
	leaq (L_260713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
x_2030:
x_871:
	movq 0x530(%rbp),%r14
	movq 0x538(%rbp),%r15
x_870:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x510(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x0(%r15),%r10
	movq 0x0(%r11),%r15
	cmpq $0x1,%r10
	je L_260696
L_260694:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r15
	je L_485091
L_260695:
	movq 0x8(%r15),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
L_260696:
	movq $0x13D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x2667,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	jmp L_260690
.p2align 0x4
L_485091:
L_260697:
	movq %r10,%r15
	jmp L_260696
.p2align 0x4
L_485093:
L_260704:
	movq 0x520(%rbp),%r14
	cmpq $0x1,%r14
	je x_871
L_260705:
	movl 0x4(%r14),%r13d
	movq $0x2669,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x528(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_260690
.p2align 0x4
L_485095:
L_260754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_260755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260755
.p2align 0x4
.long 0x43BC
L_260755:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	jmp L_260703
.p2align 0x4
L_485096:
L_260686:
	movq 0x520(%rbp),%r15
	cmpq $0x1,%r15
	je L_485098
L_260687:
	movl 0x4(%r15),%r14d
	movl %r14d,0x500(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x518(%rbp)
.p2align 0x4,,0x7
L_260688:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485097
.p2align 0x4,,0x7
L_260689:
	movq $0x2669,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x500(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x518(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_260690
.p2align 0x4
L_485097:
L_260691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_260692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260692
.p2align 0x4
.long 0x43B2
L_260692:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	jmp L_260689
.p2align 0x4
L_485098:
L_260693:
	movq 0x500(%rbp),%r14
	movq 0x518(%rbp),%r13
	xchgq %r13,%r15
	jmp x_870
.p2align 0x4
L_485100:
L_260756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_260757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260757
.p2align 0x4
.long 0x43BD
L_260757:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	jmp L_260685
.p2align 0x4
L_485101:
L_260680:
	movq (globalObjptr+0x4EA0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485102:
L_260803:
	movq 0x20(%rbp),%r15
	movq 0x40(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x530(%rbp)
	movq 0x518(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_260804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_485105:
L_258590:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485106:
L_260853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260854
.p2align 0x4
.long 0x429E
L_260854:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	jmp L_260613
.p2align 0x4
L_485107:
L_260857:
	movq 0x20(%rbp),%r15
	movq 0x40(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x520(%rbp)
	movq 0x508(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_260858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_485110:
L_257520:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485111:
L_260926:
	movq (globalObjptr+0x4EA8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485112:
L_257512:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485113:
L_260456:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x518(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_260457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485114:
L_260363:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x518(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_260364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485115:
L_260303:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x530(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4E8(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x44D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x4F0(%rbp)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x4F8(%rbp)
	movq %r13,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq $0x1,0x0(%r13)
	movq 0x168(%rbp),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x500(%rbp)
	movq %r10,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r11,%r9,1)
	movq $0x1,0x0(%r10)
	movq 0x170(%rbp),%r9
	movq 0x0(%r9),%r8
	movq %r8,0x508(%rbp)
	movq %r9,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r11,%r8,1)
	movq $0x1,0x0(%r9)
	movq 0x4C0(%rbp),%r11
	movq 0x0(%r11),%r8
	movq %r8,0x510(%rbp)
	movl $0x0,0x520(%rbp)
	movq 0x8(%rbp),%r8
	movq %r8,0x528(%rbp)
	movq 0x18(%rbp),%r8
	movq %r8,0x538(%rbp)
	movq 0x20(%rbp),%r8
	movq %r8,0x540(%rbp)
	movq 0x28(%rbp),%r8
	movq %r8,0x548(%rbp)
	movq 0x30(%rbp),%r8
	movq %r8,0x550(%rbp)
	movq 0x38(%rbp),%r8
	movq %r8,0x558(%rbp)
	movq 0x40(%rbp),%r8
	movq %r8,0x560(%rbp)
	movq 0x48(%rbp),%r8
	movq %r8,0x568(%rbp)
	movq 0x50(%rbp),%r8
	movq %r8,0x570(%rbp)
	movq 0x58(%rbp),%r8
	movq %r8,0x578(%rbp)
	movq 0x60(%rbp),%r8
	movq %r8,0x580(%rbp)
	movq 0x68(%rbp),%r8
	movq %r8,0x588(%rbp)
	movq 0x70(%rbp),%r8
	movq %r8,0x590(%rbp)
	movq %r15,0x598(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq %r14,0x678(%rbp)
	movq %r13,0x680(%rbp)
	movq %r10,0x688(%rbp)
	movq %r9,0x690(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x698(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6A0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq %r11,0x9E0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	addq $0x520,%rbp
	leaq (toVector_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
L_485116:
L_260278:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x4E8(%rbp)
	movl %r13d,0x184(%rbp)
	cmpq %r14,%r11
	movq %r15,0x10(%rbp)
	jne L_257512
L_260280:
	testq %r11,%r11
	jz L_485124
L_260281:
	cmpq $0x7FFFFFFF,%r11
	ja L_485123
L_260282:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260283
L_260299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_260300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260300
.p2align 0x4
.long 0x4365
L_260300:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_260283:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq 0x4E8(%rbp),%rdx
	movq $0x78,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_260284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260284
.p2align 0x4
.long 0x4365
L_260284:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x4F0(%rbp)
L_260285:
	movq $0x0,0x4F8(%rbp)
loop_3061:
	movq 0x4E8(%rbp),%r15
	cmpq %r15,0x4F8(%rbp)
	jl L_485121
L_260286:
	movq 0x4F0(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x184(%rbp),%ecx
	decl %ecx
	jo L_485120
L_260287:
	movq 0x480(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_260289
	cmpb $0x2,%r14b
	je L_485118
L_260288:
	movq 0x490(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4983,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x38,%r12
	movl %ecx,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x58(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x110(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x488(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x10(%rbp),%r10
	movq %r10,0x20(%r11)
	movq %r15,0x28(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
L_260289:
	movq $0x1D13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movslq %ecx,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_257520
L_260291:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485118:
L_260293:
	movq 0x490(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4A79,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x38,%r12
	movl %ecx,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x30(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x110(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x488(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x10(%rbp),%r10
	movq %r10,0x20(%r11)
	movq %r15,0x28(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_260289
.p2align 0x4
L_485120:
L_257189:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485121:
L_260294:
	movq 0x4F8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x518(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_260295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485123:
L_258374:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485124:
L_260302:
	movq (globalObjptr+0x6ED0)(%rip),%r15
	movq %r15,0x4F0(%rbp)
	jmp L_260285
.p2align 0x4
L_485126:
L_260263:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x8AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq %r13,0x8(%r14)
	movq $0x8B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x360(%rbp),%r10
	movq %r10,0x8(%r15)
	movq 0x340(%rbp),%r10
	movq %r10,0x10(%r15)
	movq %r14,0x18(%r15)
	movq $0x8B3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x38(%rbp)
	movq %r14,0x10(%r10)
	addq $0x28,%r12
	movq %r11,0x0(%r10)
	movq 0x370(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x368(%rbp),%r14
	movq %r14,0x18(%r10)
	movq $0x8AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x380(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x378(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r13,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_485131
L_260264:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x128F,%r11
	je L_485130
	cmpq $0x1290,%r11
	je L_485129
	cmpq $0x1291,%r11
	je L_485128
	cmpq $0x1292,%r11
	je L_485127
L_260265:
	movq 0x0(%r13),%r11
	movq 0x3E8(%rbp),%r13
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %rsp,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r8,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x16B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq $0x40DF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x20(%r13)
	addq $0x58,%r12
	movq 0x390(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x398(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x28(%r13)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x30(%r13)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x38(%r13)
	movq %r10,0x40(%r13)
	movq %r14,0x48(%r13)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x445D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x0,0x0(%r9)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r11,0x0(%r15)
	movq $0x479F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485127:
L_260274:
	movq 0x0(%r13),%r15
	movq 0x408(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq 0x8(%r10),%r9
	movzbq 0x0(%r10),%r8
	shlq $0x1,%r8
	orq $0x1,%r8
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r11),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r8,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r9,0x18(%r10)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x16B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x40DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x48,%r12
	movq 0x398(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x20(%r13)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x28(%r13)
	movq %r11,0x30(%r13)
	movq %r14,0x38(%r13)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x445B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r14,0x0(%r10)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq $0x0,0x0(%r9)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r15)
	movq $0x479D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485128:
L_260273:
	movq 0x0(%r13),%r11
	movq 0x388(%rbp),%r13
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %rsp,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r8,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x16B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq $0x40E1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x38(%r13)
	addq $0x60,%r12
	movq 0x390(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x398(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x20(%r13)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x28(%r13)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x30(%r13)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x40(%r13)
	movq %r10,0x48(%r13)
	movq %r14,0x50(%r13)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x445F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x0,0x0(%r9)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r11,0x0(%r15)
	movq $0x47A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485129:
L_260272:
	movq 0x0(%r13),%r11
	movq 0x3F0(%rbp),%r13
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %rsp,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r8,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x16B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq $0x40F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x10(%r13)
	addq $0x40,%r12
	movq 0x3F8(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x400(%rbp),%r15
	movq %r15,0x20(%r13)
	movq %r10,0x28(%r13)
	movq %r14,0x30(%r13)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4479,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x0,0x0(%r9)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r11,0x0(%r15)
	movq $0x47AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485130:
L_260266:
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x3D8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x0(%r10),%r11
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rsp,0x0(%r11)
	movq %r10,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r8,0x18(%r11)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x4F0(%rbp)
	addq $0x10,%r12
	movl $0x1,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_485131:
L_260275:
	shrq $0x1,%r13
	movl %r13d,%r15d
	testl %r15d,%r15d
	jnz L_485132
L_260276:
	movq 0x270(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485132:
L_260277:
	movq 0x4B8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485133:
L_260208:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1295,%r14
	je L_485140
L_260236:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x4E8(%rbp)
	cmpq %r15,%r11
	movq %r14,0x10(%rbp)
	jne L_257512
L_260238:
	testq %r11,%r11
	jz L_485138
L_260239:
	cmpq $0x7FFFFFFF,%r11
	ja L_258374
L_260240:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260241
L_260259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_260260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260260
.p2align 0x4
.long 0x4365
L_260260:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_260241:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq 0x4E8(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_260242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260242
.p2align 0x4
.long 0x4365
L_260242:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x4F0(%rbp)
L_260243:
	movq $0x0,0x4F8(%rbp)
loop_3060:
	movq 0x4E8(%rbp),%r15
	cmpq %r15,0x4F8(%rbp)
	jl L_485135
L_260244:
	movq 0x4F0(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2481,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x298(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_257512
L_260246:
	movl %r13d,0x4F8(%rbp)
	movq $0x3E95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_485135:
L_260254:
	movq 0x4F8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x518(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_260255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485138:
L_260262:
	movq (globalObjptr+0x6EE0)(%rip),%r15
	movq %r15,0x4F0(%rbp)
	jmp L_260243
.p2align 0x4
L_485140:
L_260209:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x4E8(%rbp)
	cmpq %r15,%r11
	movq %r14,0x10(%rbp)
	jne L_257512
L_260211:
	testq %r11,%r11
	jz L_485145
L_260212:
	cmpq $0x7FFFFFFF,%r11
	ja L_258374
L_260213:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260214
L_260232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_260233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260233
.p2align 0x4
.long 0x4365
L_260233:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_260214:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F3,%rcx
	movq 0x4E8(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_260215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260215
.p2align 0x4
.long 0x4365
L_260215:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x4F0(%rbp)
L_260216:
	movq $0x0,0x4F8(%rbp)
loop_3059:
	movq 0x4E8(%rbp),%r15
	cmpq %r15,0x4F8(%rbp)
	jl L_485142
L_260217:
	movq 0x4F0(%rbp),%r15
	movq $0x11F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x247F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x298(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_257512
L_260219:
	movl %r13d,0x4F8(%rbp)
	movq $0x39B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
L_485142:
L_260227:
	movq 0x4F8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x520(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x500(%rbp)
	movq $0x1,0x510(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x688(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x690(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	addq $0x510,%rbp
	leaq (L_260228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485145:
L_260235:
	movq (globalObjptr+0x6ED8)(%rip),%r15
	movq %r15,0x4F0(%rbp)
	jmp L_260216
.p2align 0x4
L_485147:
L_260088:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x4F8(%rbp)
	movl %r13d,0x184(%rbp)
	cmpq %r11,%r14
	movq %r15,0x10(%rbp)
	jne L_257512
L_260090:
	cmpq $0x0,%r11
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x500(%rbp)
	je L_485163
L_260091:
	cmpq $0x7FFFFFFF,%r11
	ja L_258374
L_260092:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260093
L_260204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260205
.p2align 0x4
.long 0x434D
L_260205:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260093:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq 0x4F8(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260094
.p2align 0x4
.long 0x434D
L_260094:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq %rax,0x508(%rbp)
L_260095:
	movq $0x0,0x510(%rbp)
loop_3056:
	movq 0x4F8(%rbp),%r15
	cmpq %r15,0x510(%rbp)
	jl L_485160
L_260096:
	movq 0x508(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_257512
L_260098:
	cmpl %r13d,0x184(%rbp)
	je L_485148
L_260099:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485148:
L_260100:
	movl 0x500(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_485158
L_260101:
	movq 0x4F8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_258374
L_260102:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_260103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260103
.p2align 0x4
.long 0x434E
L_260103:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq %rax,0x20(%rbp)
L_260104:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3057:
	cmpq 0x4F8(%rbp),%r15
	jnl L_485149
L_260196:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x508(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r9),%r8
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r9),%rsp
	movq 0x20(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %rsp,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3057
.p2align 0x4
L_485149:
L_260105:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260106
L_260194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260195
.p2align 0x4
.long 0x4362
L_260195:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260106:
	movq 0x20(%rbp),%r15
	movq $0x1853,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_257512
L_260108:
	testl %r13d,%r13d
	jz L_485153
L_260109:
	cmpq $0x0,%r14
	jna L_257520
L_260111:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpl $0x0,%r13d
	jl L_258590
L_260112:
	movl $0x0,0x2C(%rbp)
loop_3058:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x2C(%rbp)
	jl L_485150
L_260113:
	movq 0x280(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x4F0(%rbp)
	movl $0x1,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_485150:
L_260119:
	movslq 0x2C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x40(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x508(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x500(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x500,%rbp
	leaq (L_260120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_485153:
L_260191:
	movq 0x140(%rbp),%r14
	movq 0x10(%r14),%r11
	movq $0x2847,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq (globalObjptr+0x1AE8)(%rip),%r11
	movl 0x0(%r11),%r8d
	incl %r8d
	jo L_257189
L_260192:
	movl %r8d,0x0(%r11)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r8d,0x4(%r11)
	addq $0x10,%r12
	movl $0x1,0x0(%r11)
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq 0x0(%r10),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %rsp,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r11,0x0(%rsp)
	movq %r10,0x8(%rsp)
	movq %r8,0x10(%rsp)
	movq %r14,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsp,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x16B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq 0x0(%r9),%r14
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r9,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r10,0x0(%r9)
	movq 0x280(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x4F0(%rbp)
	addq $0x10,%r12
	movl $0x1,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_485158:
L_260198:
	movq (globalObjptr+0x6F00)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_260104
.p2align 0x4
L_485160:
L_260199:
	movq 0x510(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x530(%rbp)
	movq $0x1,0x520(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x698(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6A0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	addq $0x520,%rbp
	leaq (L_260200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485163:
L_260207:
	movq (globalObjptr+0x6EF8)(%rip),%r15
	movq %r15,0x508(%rbp)
	jmp L_260095
.p2align 0x4
L_485165:
L_260070:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1587,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260071
.p2align 0x4
.long 0x4349
L_260071:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x4E8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3054:
	cmpq $0x1,%r15
	jnl L_485166
L_260087:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x4E8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x4A0(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_3054
.p2align 0x4
L_485166:
L_260072:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260073
L_260085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260086
.p2align 0x4
.long 0x434C
L_260086:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260073:
	movq 0x4E8(%rbp),%r15
	movq $0xB23,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1BE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r15,0x8(%r14)
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_260074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260074
.p2align 0x4
.long 0x434A
L_260074:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq %rax,0x4E8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3055:
	cmpq $0x1,%r15
	jnl L_485167
L_260084:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x4E8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x4A8(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_3055
.p2align 0x4
L_485167:
L_260075:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260076
L_260082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_260083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260083
.p2align 0x4
.long 0x434B
L_260083:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_260076:
	movq 0x4E8(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_485169
L_260077:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r11
	je L_485168
L_260078:
	movq 0x8(%r11),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_260079:
	movq $0x1C17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x4E8(%rbp)
	addq $0x18,%r12
	movq $0x1,0x10(%rbp)
	jmp loop_3022
.p2align 0x4
L_485168:
L_260080:
	movq %r13,%r15
	jmp L_260079
.p2align 0x4
L_485169:
L_260081:
	movq %r11,%r15
	jmp L_260079
.p2align 0x4
L_485172:
L_259990:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x518(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_259991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485173:
L_259849:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x518(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_259850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485174:
L_259768:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x510(%rbp)
	movq $0x1,0x500(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x678(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x680(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	addq $0x500,%rbp
	leaq (L_259769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485175:
L_259587:
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x500(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x508(%rbp)
	movq $0x1,0x518(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x520(%rbp)
	movq %r15,0x528(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x690(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x698(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	addq $0x518,%rbp
	leaq (L_259588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485176:
L_259464:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x4F8(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x510(%rbp)
	movq %r15,0x518(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_259465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485177:
L_259341:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x4F8(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x510(%rbp)
	movq %r15,0x518(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_259342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485178:
L_259236:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x4F8(%rbp)
	movq $0x1,0x508(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x510(%rbp)
	movq %r15,0x518(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x680(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x688(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	addq $0x508,%rbp
	leaq (L_259237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485179:
L_261032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x210,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_261033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261033
.p2align 0x4
.long 0x43DB
L_261033:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	jmp L_257144
.p2align 0x4
.long 0x417B
L_257147:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_257148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x426D
L_259077:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_259078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x4251
L_259074:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_259075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x425F
L_258821:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_258822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x4251
L_258661:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_258662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x41DD
L_257963:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x540(%rbp)
	addq $0x518,%rbp
	leaq (L_257964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x41C8
L_257896:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_257897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x41C5
L_257892:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_257893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x41AA
L_257705:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_257706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x41A1
L_257509:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x508,%rbp
	leaq (L_257510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabAndExpandTy_0
.p2align 0x4
.long 0x43D1
L_260968:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260969
L_261030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_261031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261031
.p2align 0x4
.long 0x43DA
L_261031:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260969:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r14
	je L_485181
L_260970:
	movq %r14,0x510(%rbp)
	movq 0x228(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x518(%rbp)
	movq $0x3ED5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x508(%rbp)
	addq $0x10,%r12
	addq $0x508,%rbp
	leaq (L_260971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_485181:
L_261024:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_261025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x43C8
L_260930:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movl 0x518(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260931
L_260964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_260965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260965
.p2align 0x4
.long 0x43D0
L_260965:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_260931:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x510(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x184(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x3B01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x528(%rbp)
	movq 0x508(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x698(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6A0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	addq $0x520,%rbp
	leaq (L_260932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabMatch_0
.p2align 0x4
.long 0x43AC
L_260625:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_260626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_8
.p2align 0x4
.long 0x41DD
L_260643:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_260644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x43BE
toString_366:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq $0x1,0x528(%rbp)
	movq %r15,0x530(%rbp)
	addq $0x528,%rbp
	leaq (rev_364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x43B5
L_260728:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_260729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x43B3
L_260713:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_260714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_8
.p2align 0x4
.long 0x43BE
L_260804:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260805
L_260850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_260851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260851
.p2align 0x4
.long 0x43C4
L_260851:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
L_260805:
	movq 0x520(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_260812
L_260806:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x528(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_260807:
	movq 0x528(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106F,%r13
	je L_485203
L_260808:
	cmpq $0x1,%r15
	je L_485184
L_260809:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x528(%rbp)
	jmp L_260807
.p2align 0x4
L_485184:
L_260810:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260812
L_260843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_260844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260844
.p2align 0x4
.long 0x43C4
L_260844:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
L_260812:
	movq $0x161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x520(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_872:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_260679
L_260813:
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r10)
	cmpq $0x1,%r13
	je L_260679
L_260814:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDEF,%r15
	je L_485192
L_260828:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_485189
L_260834:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_257189
L_260835:
	movl %r14d,%r15d
	incl %r15d
	jo L_257189
L_260836:
	movq $0x2537,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movl %r15d,0x4(%r13)
	addq $0x10,%r12
L_260837:
	movq 0x500(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_260680
L_260838:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1333,%r14
	jne L_485185
L_260839:
	movq %r13,0x520(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq %r15,0x528(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x500(%rbp)
	jmp L_260683
.p2align 0x4
L_485185:
	xchgq %r13,%r15
	jmp L_260759
.p2align 0x4
L_485189:
L_260830:
	movq 0x500(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_260680
L_260831:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1333,%r15
	je L_485190
L_260833:
	movq (globalObjptr+0x4E78)(%rip),%r15
	jmp L_260759
.p2align 0x4
L_485190:
L_260832:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq (globalObjptr+0x4E78)(%rip),%r14
	movq %r14,0x520(%rbp)
	movq %r15,0x528(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x500(%rbp)
	jmp L_260683
.p2align 0x4
L_485192:
L_260815:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_485197
L_260821:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_257189
L_260822:
	movl %r14d,%r15d
	incl %r15d
	jo L_257189
L_260823:
	movq $0x2537,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movl %r14d,0x4(%r13)
	addq $0x10,%r12
L_260824:
	movq 0x500(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_260680
L_260825:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1333,%r14
	jne L_485193
L_260826:
	movq %r13,0x520(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq %r15,0x528(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x500(%rbp)
	jmp L_260683
.p2align 0x4
L_485193:
	xchgq %r13,%r15
	jmp L_260759
.p2align 0x4
L_485197:
L_260817:
	movq 0x500(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_260680
L_260818:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1333,%r15
	je L_485198
L_260820:
	movq (globalObjptr+0x4E70)(%rip),%r15
	jmp L_260759
.p2align 0x4
L_485198:
L_260819:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq (globalObjptr+0x4E70)(%rip),%r14
	movq %r14,0x520(%rbp)
	movq %r15,0x528(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x500(%rbp)
	jmp L_260683
.p2align 0x4
L_485203:
L_260845:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260846
L_260847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_260848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260848
.p2align 0x4
.long 0x43C5
L_260848:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_260846:
	movq 0x528(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_872
.p2align 0x4
.long 0x41DD
L_260858:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260859
L_260924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_260925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260925
.p2align 0x4
.long 0x4250
L_260925:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_260859:
	movq 0x510(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_260866
L_260860:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x518(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_260861:
	movq 0x518(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106F,%r13
	je L_485218
L_260862:
	cmpq $0x1,%r15
	je L_485207
L_260863:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x518(%rbp)
	jmp L_260861
.p2align 0x4
L_485207:
L_260864:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260866
L_260917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_260918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260918
.p2align 0x4
.long 0x4250
L_260918:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_260866:
	movq $0x161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x510(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_873:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_260612
L_260867:
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x508(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r10)
	cmpq $0x1,%r13
	je L_260612
L_260868:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDEF,%r15
	je L_485211
L_260910:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_260871
L_260912:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_257189
L_260913:
	incl %r14d
	jo L_257189
L_260871:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movl $0x1,0x518(%rbp)
	movq %r15,0x520(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x518,%rbp
	leaq (toString_367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
L_485211:
L_260869:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_260871
L_260907:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_257189
L_260908:
	incl %r14d
	jo L_257189
	jmp L_260871
.p2align 0x4
L_485218:
L_260919:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260920
L_260921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_260922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260922
.p2align 0x4
.long 0x43C7
L_260922:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_260920:
	movq 0x518(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_873
.p2align 0x4
.long 0x4283
L_260457:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq $0x1,0x510(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x688(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x690(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	addq $0x510,%rbp
	leaq (L_260458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
.long 0x4283
L_260364:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x500(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260365
L_260454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260455
.p2align 0x4
.long 0x429E
L_260455:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260365:
	movq $0x3B01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x518(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x688(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x690(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	addq $0x510,%rbp
	leaq (L_260366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabMatch_0
.p2align 0x4
.long 0x42DC
toVector_0:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x518(%rbp)
	movl $0x0,0x528(%rbp)
	movq %r15,0x530(%rbp)
	addq $0x528,%rbp
	leaq (L_260304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3952
.p2align 0x4
.long 0x436C
L_260295:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x500(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260296
L_260297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260298
.p2align 0x4
.long 0x436D
L_260298:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260296:
	movq 0x4F0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x4F8(%rbp),%r14
	movq 0x500(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x4F8(%rbp)
	jmp loop_3061
.p2align 0x4
.long 0x436E
L_260267:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x4F0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4366
L_260247:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260248
L_260252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_260253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260253
.p2align 0x4
.long 0x436B
L_260253:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_260248:
	movq 0x2A0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_257512
L_260250:
	movl %r13d,0x4F8(%rbp)
	movq $0x399D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
.long 0x436C
L_260255:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x500(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260256
L_260257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260258
.p2align 0x4
.long 0x436D
L_260258:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260256:
	movq 0x4F0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x4F8(%rbp),%r14
	movq 0x500(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x4F8(%rbp)
	jmp loop_3060
.p2align 0x4
.long 0x4366
L_260220:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
L_260221:
	movq %r15,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromVector_0
.p2align 0x4
.long 0x4369
L_260228:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260229
L_260230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_260231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260231
.p2align 0x4
.long 0x436A
L_260231:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_260229:
	movq 0x4F0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x4F8(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x508(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x500(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x4F8(%rbp)
	jmp loop_3059
.p2align 0x4
.long 0x434F
L_260114:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x4F0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4351
L_260120:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq 0x500(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260121
L_260188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260189
.p2align 0x4
.long 0x4361
L_260189:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260121:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485228
L_260122:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x10838)(%rip),%r15
	movq %r15,0x500(%rbp)
	addq $0x500,%rbp
	leaq (L_260123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485228:
L_260163:
	incl 0x2C(%rbp)
	jmp loop_3058
.p2align 0x4
.long 0x434F
L_260193:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x4F0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4363
L_260200:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x518(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260201
L_260202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_260203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260203
.p2align 0x4
.long 0x4364
L_260203:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_260201:
	movq 0x508(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x510(%rbp),%r14
	movq 0x518(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x510(%rbp)
	jmp loop_3056
.p2align 0x4
.long 0x4334
L_259991:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259992
L_260068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260069
.p2align 0x4
.long 0x4348
L_260069:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259992:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x510(%rbp)
	addq $0x58,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
.long 0x4283
L_259850:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4305
L_259769:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq 0x500(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259770
L_259847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_259848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259848
.p2align 0x4
.long 0x4317
L_259848:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_259770:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x4F8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x4F8,%rbp
	leaq (L_259771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x41DD
L_259588:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq $0x1,0x520(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x698(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6A0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	addq $0x520,%rbp
	leaq (L_259589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
.long 0x4283
L_259465:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq $0x1,0x510(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x688(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x690(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	addq $0x510,%rbp
	leaq (L_259466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
.long 0x4283
L_259342:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq $0x1,0x510(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x688(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x690(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	addq $0x510,%rbp
	leaq (L_259343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
.long 0x4283
L_259237:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x500(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259238
L_259339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259340
.p2align 0x4
.long 0x429E
L_259340:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259238:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x520(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x510(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x510,%rbp
	leaq (L_259239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x417C
L_257148:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257149
L_257506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257507
.p2align 0x4
.long 0x41A0
L_257507:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257149:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_257405(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2033
.p2align 0x4
.long 0x426E
L_259078:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x510(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x338(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4252
L_259075:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq 0x510(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
lookConst_0:
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4260
L_258822:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258823
L_259071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259072
.p2align 0x4
.long 0x426C
L_259072:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258823:
	movq $0x8B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x340(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x18(%r15)
	movq $0x8B3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq %r14,0x0(%r11)
	movq 0x370(%rbp),%r14
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	movq 0x368(%rbp),%r14
	movq %r14,0x18(%r11)
	movq %r11,0x58(%rbp)
	movq $0x8AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x18,%r12
	movq 0x380(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x378(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x8(%r13),%r11
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_485315
L_258824:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x128F,%r13
	je L_485314
	cmpq $0x1290,%r13
	je L_485294
	cmpq $0x1291,%r13
	je L_485274
	cmpq $0x1292,%r13
	je L_485254
L_258825:
	movq 0x0(%r11),%r13
	movq 0x3E8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %rsp,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r8,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x16B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x40F3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x20(%r11)
	movq %r10,0x40(%r11)
	addq $0x58,%r12
	movq 0x390(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x398(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x18(%r11)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x28(%r11)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x30(%r11)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x38(%r11)
	movq %r14,0x48(%r11)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4463,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x0,0x0(%r10)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_485253
L_258826:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_485250
L_258845:
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_485235
	jmp *jumpTable_743(,%rax,8)
.data
.p2align 0x4
jumpTable_743:
.quad L_485249,L_485248,L_485247,L_485246,L_485245,L_485244,L_485243,L_485242,L_485241,L_485240,L_485239,L_485238,L_485237,L_485236
.text
.p2align 0x4
L_485235:
L_258846:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_485236:
L_258872:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_485237:
L_258871:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_485238:
L_258870:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_485239:
L_258869:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_485240:
L_258868:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_485241:
L_258867:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_485242:
L_258866:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_485243:
L_258865:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_485244:
L_258864:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_485245:
L_258863:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_485246:
L_258862:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_485247:
L_258861:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_485248:
L_258860:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_485249:
L_258859:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258855(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_485250:
L_258827:
	movq 0x0(%r15),%r13
L_258828:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_485252
L_258842:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485251
L_258843:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_258844:
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_485251:
	movq %r13,%r15
L_258830:
	movq %r15,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (toString_361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_485252:
	movq %r13,%r15
	jmp L_258830
.p2align 0x4
L_485253:
L_258874:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485254:
L_259021:
	movq 0x0(%r11),%r15
	movq 0x408(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq 0x8(%r10),%r9
	movzbq 0x0(%r10),%r8
	shlq $0x1,%r8
	orq $0x1,%r8
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r11),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r8,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r9,0x18(%r10)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x16B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x40F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	movq %r11,0x30(%r13)
	addq $0x48,%r12
	movq 0x398(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x20(%r13)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x28(%r13)
	movq %r14,0x38(%r13)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4461,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x0,0x0(%r10)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_258874
L_259022:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_485270
L_259039:
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_485255
	jmp *jumpTable_744(,%rax,8)
.data
.p2align 0x4
jumpTable_744:
.quad L_485269,L_485268,L_485267,L_485266,L_485265,L_485264,L_485263,L_485262,L_485261,L_485260,L_485259,L_485258,L_485257,L_485256
.text
.p2align 0x4
L_485255:
L_259040:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_485256:
L_259066:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_485257:
L_259065:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_485258:
L_259064:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_485259:
L_259063:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_485260:
L_259062:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_485261:
L_259061:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_485262:
L_259060:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_485263:
L_259059:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_485264:
L_259058:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_485265:
L_259057:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_485266:
L_259056:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_485267:
L_259055:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_485268:
L_259054:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_485269:
L_259053:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_259049(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_259041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_485270:
L_259023:
	movq 0x0(%r15),%r13
L_259024:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_485272
L_259036:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485271
L_259037:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_259038:
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_485271:
	movq %r13,%r15
L_259026:
	movq %r15,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (toString_365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_485272:
	movq %r13,%r15
	jmp L_259026
.p2align 0x4
L_485274:
L_258974:
	movq 0x0(%r11),%r13
	movq 0x388(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %rsp,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r8,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x16B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x40F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x38(%r11)
	movq %r10,0x48(%r11)
	addq $0x60,%r12
	movq 0x390(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x398(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x18(%r11)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x20(%r11)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x28(%r11)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x30(%r11)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x40(%r11)
	movq %r14,0x50(%r11)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4465,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x0,0x0(%r10)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_258874
L_258975:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_485290
L_258992:
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_485275
	jmp *jumpTable_745(,%rax,8)
.data
.p2align 0x4
jumpTable_745:
.quad L_485289,L_485288,L_485287,L_485286,L_485285,L_485284,L_485283,L_485282,L_485281,L_485280,L_485279,L_485278,L_485277,L_485276
.text
.p2align 0x4
L_485275:
L_258993:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_485276:
L_259019:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_485277:
L_259018:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_485278:
L_259017:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_485279:
L_259016:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_485280:
L_259015:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_485281:
L_259014:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_485282:
L_259013:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_485283:
L_259012:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_485284:
L_259011:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_485285:
L_259010:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_485286:
L_259009:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_485287:
L_259008:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_485288:
L_259007:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_485289:
L_259006:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_259002(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_485290:
L_258976:
	movq 0x0(%r15),%r13
L_258977:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_485292
L_258989:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485291
L_258990:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_258991:
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_485291:
	movq %r13,%r15
L_258979:
	movq %r15,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (toString_364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_485292:
	movq %r13,%r15
	jmp L_258979
.p2align 0x4
L_485294:
L_258927:
	movq 0x0(%r11),%r13
	movq 0x3F0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %rsp,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r8,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x16B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x40E3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x28(%r11)
	addq $0x40,%r12
	movq 0x3F8(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x18(%r11)
	movq 0x400(%rbp),%r15
	movq %r15,0x20(%r11)
	movq %r14,0x30(%r11)
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4473,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x0,0x0(%r10)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_258874
L_258928:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_485310
L_258945:
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_485295
	jmp *jumpTable_746(,%rax,8)
.data
.p2align 0x4
jumpTable_746:
.quad L_485309,L_485308,L_485307,L_485306,L_485305,L_485304,L_485303,L_485302,L_485301,L_485300,L_485299,L_485298,L_485297,L_485296
.text
.p2align 0x4
L_485295:
L_258946:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_485296:
L_258972:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_485297:
L_258971:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_485298:
L_258970:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_485299:
L_258969:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_485300:
L_258968:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_485301:
L_258967:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_485302:
L_258966:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_485303:
L_258965:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_485304:
L_258964:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_485305:
L_258963:
	movq 0x58(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_485306:
L_258962:
	movq 0x58(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_485307:
L_258961:
	movq 0x58(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_485308:
L_258960:
	movq 0x58(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_485309:
L_258959:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258955(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_485310:
L_258929:
	movq 0x0(%r15),%r13
L_258930:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_485312
L_258942:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485311
L_258943:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_258944:
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_485311:
	movq %r13,%r15
L_258932:
	movq %r15,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (toString_363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_485312:
	movq %r13,%r15
	jmp L_258932
.p2align 0x4
L_485314:
L_258875:
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x3D8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r9),%r8
	movzbq 0x0(%r9),%rsp
	shlq $0x1,%rsp
	orq $0x1,%rsp
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x0(%r10),%r11
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rsp,0x0(%r11)
	movq %r10,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r8,0x18(%r11)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq 0x8(%r13),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x508(%rbp)
	addq $0x10,%r12
	movl $0x1,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_485315:
L_259068:
	shrq $0x1,%r11
	movl %r11d,%r13d
	testl %r13d,%r13d
	jnz L_485316
L_259069:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_258838:
	movq 0x48(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp lookConst_0
.p2align 0x4
L_485316:
L_259070:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_258838
.p2align 0x4
.long 0x4252
L_258662:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq 0x510(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp lookConst_0
.p2align 0x4
.long 0x41DE
L_257964:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x510(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257965
L_258658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_258659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258659
.p2align 0x4
.long 0x4250
L_258659:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_257965:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x518(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_258606(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x528,%rbp
	leaq (L_257966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x41C9
L_257897:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257898
L_257960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257961
.p2align 0x4
.long 0x41DC
L_257961:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257898:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_257952(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x41C6
L_257893:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x510(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq 0x4F8(%rbp),%r13
	movq %r13,0x4F0(%rbp)
	movq 0xF8(%rbp),%r13
	movq %r13,0x4F8(%rbp)
	movq %r15,0x500(%rbp)
	movq %r14,0x508(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp import_0
.p2align 0x4
.long 0x41AB
L_257706:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257707
L_257889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257890
.p2align 0x4
.long 0x41C4
L_257890:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257707:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_257778(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x41A2
L_257510:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_257512
L_257513:
	movl $0x0,0x58(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3023:
	cmpl %ecx,%ebx
	jnl L_485322
L_257701:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x50(%rbp),%r14
	jnb L_257520
L_257703:
	movq 0x40(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x58(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r14d,%r11d
	movl %r11d,0x58(%rbp)
	movl %r15d,%ebx
	jmp loop_3023
.p2align 0x4
L_485322:
L_257514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257515
L_257699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257700
.p2align 0x4
.long 0x41A9
L_257700:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257515:
	movq 0x438(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xAE0)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_485473
L_257517:
	movq %r13,0x0(%r14)
	movq 0x440(%rbp),%r14
	movl 0x0(%r14),%r13d
	andl 0x58(%rbp),%r13d
	cmpl $0x0,%r13d
	jl L_257189
L_257518:
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_257520
L_257521:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_257531
L_257522:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x58(%rbp)
.p2align 0x4,,0x7
L_257523:
	movq (globalObjptr+0xAE8)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_485469
L_257525:
	movq %r14,0x0(%r11)
	movq 0x58(%rbp),%r11
	movq 0x8(%r11),%r14
	cmpq %r14,0x40(%rbp)
	je L_485467
L_257526:
	movq 0x50(%rbp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r14)
	jne L_485464
L_257544:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_200:
	cmpq %r13,0x50(%rbp)
	je L_485326
L_257545:
	movq 0x40(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r14,%r13,1)
	jne L_485323
L_257552:
	incq %r13
	jmp vectorEqualLoop_200
.p2align 0x4
L_485323:
L_257546:
	cmpq $0x1,%r15
	je L_485324
L_257547:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x58(%rbp)
	jmp L_257523
.p2align 0x4
L_485324:
L_257548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257531
L_257550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257551
.p2align 0x4
.long 0x41A7
L_257551:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257531:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x108E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485326:
L_257553:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257555
L_257691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257692
.p2align 0x4
.long 0x41A8
L_257692:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257555:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%rax
	movq %rax,%r15
	andq $0xFF,%r15
	subq $0x1,%r15
	xchgq %r15,%rax
	cmpq $0x89,%rax
	ja L_485327
	jmp *jumpTable_747(,%rax,8)
.data
.p2align 0x4
jumpTable_747:
.quad L_485462,L_485461,L_485460,L_257556,L_485458,L_485457,L_485456,L_257556,L_485455,L_485454,L_485453,L_257556,L_485452,L_485451,L_485450,L_257556,L_485449,L_485448,L_485447,L_257556,L_485446,L_485445,L_485444,L_257556,L_485443,L_485442,L_485441,L_257556,L_485440,L_485439,L_485438,L_257556,L_485437,L_485436,L_485435,L_257556,L_485434,L_485433,L_485432,L_257556,L_485431,L_485430,L_485429,L_257556,L_485428,L_485427,L_485426,L_257556,L_485425,L_485424,L_485423,L_257556,L_485422,L_485421,L_485420,L_257556,L_485419,L_485418,L_485417,L_257556,L_485416,L_485415,L_485414,L_257556,L_485413,L_485412,L_485411,L_257556,L_485410,L_485409,L_485408,L_257556,L_485407,L_485406,L_485405,L_257556,L_485404,L_485403,L_485402,L_257556,L_485401,L_485400,L_485399,L_257556,L_485398,L_485397,L_485396,L_257556,L_485395,L_485394,L_485393,L_257556,L_485392,L_485391,L_485390,L_257556,L_485389,L_485388,L_485387,L_257556,L_485386,L_485385,L_485384,L_257556,L_485383,L_485382,L_485381,L_257556,L_485380,L_485379,L_485378,L_257556,L_485377,L_485376,L_485375,L_257556,L_485374,L_485373,L_485372,L_257556,L_485371,L_485370,L_485369,L_257556,L_485368,L_485367,L_485366,L_257556,L_485365,L_485364,L_485363,L_257556,L_485362,L_485361,L_485360,L_257556,L_485359,L_485358
.text
.p2align 0x4
L_485327:
L_257556:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE4F,%rax
	cmpq $0x1C,%rax
	ja L_485328
	jmp *jumpTable_748(,%rax,8)
.data
.p2align 0x4
jumpTable_748:
.quad L_485357,L_485356,L_485355,L_485354,L_485353,L_485352,L_485351,L_485350,L_485349,L_485348,L_485347,L_485346,L_485345,L_485344,L_485343,L_485342,L_485341,L_485340,L_485339,L_485338,L_485337,L_485336,L_485335,L_485334,L_485333,L_485332,L_485331,L_485330,L_485329
.text
.p2align 0x4
L_485328:
L_257557:
	movq 0x0(%r15),%r14
	movq $0x2483,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
eta_0:
	movq %r14,0x4F0(%rbp)
	movq %r15,0x500(%rbp)
	movq (globalObjptr+0xF68)(%rip),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x4F8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp etaExtraNoWrap_0
.p2align 0x4
L_485329:
L_257586:
	movq 0x0(%r15),%r14
	movq $0x24C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485330:
L_257585:
	movq 0x0(%r15),%r14
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485331:
L_257584:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x24B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485332:
L_257583:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movb 0x4(%r15),%r11b
	movq $0x24B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r11b,%r13d
	movl %r13d,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485333:
L_257582:
	movq 0x0(%r15),%r14
	movq $0x24B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485334:
L_257581:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movq $0x24B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485335:
L_257580:
	movq 0x0(%r15),%r14
	movq $0x24B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485336:
L_257579:
	movb 0x0(%r15),%r13b
	movq 0x8(%r15),%r14
	movq $0x24AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485337:
L_257578:
	movq 0x0(%r15),%r14
	movq $0x24AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485338:
L_257577:
	movl 0x0(%r15),%r14d
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq $0x24AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485339:
L_257576:
	movq 0x0(%r15),%r14
	movq $0x24A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485340:
L_257575:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movq $0x24A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485341:
L_257574:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movq $0x24A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485342:
L_257573:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movq $0x24A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485343:
L_257572:
	movq 0x0(%r15),%r14
	movq $0x24A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485344:
L_257571:
	movq 0x0(%r15),%r14
	movq $0x249F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485345:
L_257570:
	movq 0x0(%r15),%r14
	movq $0x249D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485346:
L_257569:
	movq 0x0(%r15),%r14
	movq $0x249B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485347:
L_257568:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movq $0x2499,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485348:
L_257567:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movq $0x2497,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485349:
L_257566:
	movl 0x0(%r15),%r13d
	movb 0x4(%r15),%r11b
	movq 0x8(%r15),%r14
	movq $0x2495,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r11b,%r13d
	movl %r13d,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485350:
L_257565:
	movq 0x0(%r15),%r14
	movq $0x2493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485351:
L_257564:
	movq 0x0(%r15),%r14
	movq $0x2491,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485352:
L_257563:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movq $0x248F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485353:
L_257562:
	movq 0x0(%r15),%r14
	movq $0x248D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485354:
L_257561:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r14
	movq $0x248B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485355:
L_257560:
	movq 0x0(%r15),%r14
	movq $0x2489,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485356:
L_257559:
	movq 0x0(%r15),%r14
	movq $0x2487,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485357:
L_257558:
	movq 0x0(%r15),%r14
	movq $0x2485,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x48(%rbp),%r11
	movq %r11,0x1B8(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp eta_0
.p2align 0x4
L_485358:
L_257690:
	movq %r15,%r14
	shrq $0x10,%r14
	movb %r14b,%r13b
	shrq $0x8,%r15
	movb %r15b,%r11b
	movzbq %r11b,%r14
	movzbq %r13b,%r15
	shlq $0x8,%r15
	orq %r15,%r14
	shlq $0x8,%r14
	orq $0x8A,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485359:
L_257689:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x89,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485360:
L_257688:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x87,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485361:
L_257687:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x86,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485362:
L_257686:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x85,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485363:
L_257685:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x83,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485364:
L_257684:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x82,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485365:
L_257683:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x81,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485366:
L_257682:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x7F,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485367:
L_257681:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x7E,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485368:
L_257680:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x7D,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485369:
L_257679:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x7B,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485370:
L_257678:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x7A,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485371:
L_257677:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x79,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485372:
L_257676:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x77,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485373:
L_257675:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x76,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485374:
L_257674:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x75,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485375:
L_257673:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x73,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485376:
L_257672:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x72,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485377:
L_257671:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x71,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485378:
L_257670:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x6F,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485379:
L_257669:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x6E,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485380:
L_257668:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x6D,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485381:
L_257667:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x6B,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485382:
L_257666:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x6A,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485383:
L_257665:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x69,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485384:
L_257664:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x67,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485385:
L_257663:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq $0x66,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485386:
L_257662:
	movq $0x65,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485387:
L_257661:
	movq $0x63,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485388:
L_257660:
	movq $0x62,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485389:
L_257659:
	movq $0x61,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485390:
L_257658:
	movq $0x5F,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485391:
L_257657:
	movq $0x5E,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485392:
L_257656:
	movq $0x5D,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485393:
L_257655:
	movq $0x5B,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485394:
L_257654:
	movq $0x5A,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485395:
L_257653:
	movq $0x59,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485396:
L_257652:
	movq $0x57,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485397:
L_257651:
	movq $0x56,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485398:
L_257650:
	movq $0x55,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485399:
L_257649:
	movq $0x53,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485400:
L_257648:
	movq $0x52,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485401:
L_257647:
	movq $0x51,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485402:
L_257646:
	movq $0x4F,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485403:
L_257645:
	movq $0x4E,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485404:
L_257644:
	movq $0x4D,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485405:
L_257643:
	movq $0x4B,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485406:
L_257642:
	movq $0x4A,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485407:
L_257641:
	movq $0x49,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485408:
L_257640:
	movq $0x47,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485409:
L_257639:
	movq $0x46,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485410:
L_257638:
	movq $0x45,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485411:
L_257637:
	movq $0x43,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485412:
L_257636:
	movq $0x42,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485413:
L_257635:
	movq $0x41,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485414:
L_257634:
	movq $0x3F,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485415:
L_257633:
	movq $0x3E,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485416:
L_257632:
	movq $0x3D,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485417:
L_257631:
	movq $0x3B,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485418:
L_257630:
	movq $0x3A,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485419:
L_257629:
	movq $0x39,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485420:
L_257628:
	movq $0x37,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485421:
L_257627:
	movq $0x36,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485422:
L_257626:
	movq $0x35,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485423:
L_257625:
	movq $0x33,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485424:
L_257624:
	movq $0x32,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485425:
L_257623:
	movq $0x31,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485426:
L_257622:
	movq $0x2F,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485427:
L_257621:
	movq $0x2E,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485428:
L_257620:
	movq $0x2D,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485429:
L_257619:
	movq $0x2B,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485430:
L_257618:
	movq $0x2A,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485431:
L_257617:
	movq $0x29,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485432:
L_257616:
	movq $0x27,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485433:
L_257615:
	movq $0x26,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485434:
L_257614:
	movq $0x25,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485435:
L_257613:
	movq $0x23,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485436:
L_257612:
	movq $0x22,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485437:
L_257611:
	movq $0x21,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485438:
L_257610:
	movq $0x1F,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485439:
L_257609:
	movq $0x1E,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485440:
L_257608:
	movq $0x1D,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485441:
L_257607:
	movq $0x1B,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485442:
L_257606:
	movq $0x1A,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485443:
L_257605:
	movq $0x19,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485444:
L_257604:
	movq $0x17,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485445:
L_257603:
	movq $0x16,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485446:
L_257602:
	movq $0x15,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485447:
L_257601:
	movq $0x13,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485448:
L_257600:
	movq $0x12,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485449:
L_257599:
	movq $0x11,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485450:
L_257598:
	movq $0xF,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485451:
L_257597:
	movq $0xE,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485452:
L_257596:
	movq $0xD,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485453:
L_257595:
	movq $0xB,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485454:
L_257594:
	movq $0xA,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485455:
L_257593:
	movq $0x9,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485456:
L_257592:
	movq $0x7,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485457:
L_257591:
	movq $0x6,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485458:
L_257590:
	movq $0x5,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485460:
L_257589:
	movq $0x3,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485461:
L_257588:
	movq $0x2,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485462:
L_257587:
	movq $0x1,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485464:
L_257527:
	cmpq $0x1,%r15
	je L_485465
L_257528:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x58(%rbp)
	jmp L_257523
.p2align 0x4
L_485465:
L_257529:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257531
L_257542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257543
.p2align 0x4
.long 0x41A7
L_257543:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_257531
.p2align 0x4
L_485467:
L_257693:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257555
L_257695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257696
.p2align 0x4
.long 0x41A8
L_257696:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	jmp L_257555
.p2align 0x4
L_485469:
L_257524:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485473:
L_257516:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43D2
L_260971:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260972
L_261022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_261023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261023
.p2align 0x4
.long 0x43D7
L_261023:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260972:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x104D,%r15
	je L_485495
	cmpq $0x104E,%r15
	je L_485494
	cmpq $0x104F,%r15
	je L_485492
L_260973:
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_485491
L_260975:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_485490
L_260976:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x40(%rbp)
	movl $0x0,0x60(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_260978:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_260979
L_261004:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_485485
L_260979:
	movl 0x60(%rbp),%r14d
	incl %r14d
	movl %r14d,0x40(%rbp)
	jo L_257189
L_260980:
	cmpq $0x1,%r15
	je L_485476
L_260981:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x60(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_260978
.p2align 0x4
L_485476:
L_260982:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260983
L_261002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_261003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261003
.p2align 0x4
.long 0x43D3
L_261003:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_260983:
	movl 0x40(%rbp),%ecx
L_260984:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_485482
L_260986:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_260988
L_261001:
	movl %ecx,0x0(%r15)
L_260988:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_260989:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_485479
L_260990:
	movq $0x29B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_260991:
	movq $0x4795,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	cmpq $0x1,%r15
	je L_485478
L_260992:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x14D9,%r14
	je L_485477
L_260996:
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq $0x478F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r14,0x20(%r15)
	addq $0x30,%r12
	movq %r15,%r14
	movq %r13,%r15
L_260994:
	movq $0x1D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_260995:
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485477:
L_260993:
	movq 0x0(%r15),%r14
	movq $0x478D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,%r14
	movq %r13,%r15
	jmp L_260994
.p2align 0x4
L_485478:
L_260997:
	movq $0x1,%r14
	movq %r13,%r15
	jmp L_260994
.p2align 0x4
L_485479:
L_260998:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_485480
L_260999:
	movq 0x20(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r14),%r9
	movq $0x29B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r10,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	addq $0x30,%r12
	movq %r14,%r15
	jmp L_260991
.p2align 0x4
L_485480:
L_261000:
	movq $0x1,%r15
	jmp L_260991
.p2align 0x4
L_485482:
L_260985:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485485:
L_261005:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261006
L_261010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_261011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261011
.p2align 0x4
.long 0x43D4
L_261011:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_261006:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x60(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_260985
L_261007:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_260989
L_261009:
	movl %r14d,0x0(%r13)
	jmp L_260989
.p2align 0x4
L_485490:
L_261012:
	xorl %ecx,%ecx
	jmp L_260984
.p2align 0x4
L_485491:
L_260974:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485492:
L_261021:
	movq 0x0(%r14),%r14
	movq %r14,0x40(%rbp)
con_1:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485493
L_261015:
	movq 0x20(%r15),%r14
	movq %r14,0x4F0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x4F8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x500(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x510(%rbp)
	addq $0x4F0,%rbp
	leaq (L_261016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp args_0
.p2align 0x4
L_485493:
L_261020:
	movq $0x1,0x4F0(%rbp)
	movl $0x0,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_261016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_485494:
L_261014:
	movq 0x0(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp con_1
.p2align 0x4
L_485495:
L_261013:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x2927,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x50(%r14)
	addq $0x60,%r12
	movq 0x1A8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x340(%rbp),%r15
	movq %r15,0x28(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%r14)
	movq 0x450(%rbp),%r15
	movq %r15,0x38(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%r14)
	movq 0x228(%rbp),%r15
	movq %r15,0x48(%r14)
	movq $0x247,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x4475,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r15,0x0(%r10)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq $0x20F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
	movq $0x479B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x4793,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1D11,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	jmp L_260995
.p2align 0x4
.long 0x43D8
L_261025:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movl 0x4F0(%rbp),%r15d
	movl %r15d,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261026
L_261028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_261029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261029
.p2align 0x4
.long 0x43D9
L_261029:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_261026:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x148(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x140(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r9d
	incl %r9d
	jo L_257189
L_261027:
	movl %r9d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0x0(%r11),%r8
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r8,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r11,0x8(%r8)
	movq %r9,0x10(%r8)
	movq %r15,0x18(%r8)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r11,0x0(%r10)
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x1D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x2,0x8(%r13)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43C9
L_260932:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x538(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260933
L_260962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_260963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260963
.p2align 0x4
.long 0x43CF
L_260963:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_260933:
	movq 0x1B8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r13b
	movq 0x1C0(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r11b
	movq 0x1C8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r10b
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %rsp,%r9
	jne L_257512
L_260935:
	testl %r8d,%r8d
	jz L_485504
L_260936:
	movq $0x47B3,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0x110(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x4E8(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq $0x1D29,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x10(%rsp)
	movq %r15,0x30(%rsp)
	addq $0x40,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esi
	movzbl %r13b,%r8d
	shll $0x8,%r8d
	orl %r8d,%esi
	movzbl %r11b,%r13d
	shll $0x10,%r13d
	orl %r13d,%esi
	movzbl %r10b,%r13d
	shll $0x18,%r13d
	orl %r13d,%esi
	movl %esi,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq (globalObjptr+0x10768)(%rip),%r13
	movq %r13,0x8(%rsp)
	movq 0x508(%rbp),%r13
	movq %r13,0x18(%rsp)
	movq 0x108(%rbp),%r13
	movq %r13,0x20(%rsp)
	movq %r14,0x28(%rsp)
	cmpq $0x0,%r9
	jna L_257520
L_260938:
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x100(%rbp)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq %rsp,0x8(%r14)
	movl 0x180(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_485499
L_260939:
	movq %rsp,%r15
L_260940:
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xF8(%rbp)
	movq %r14,0x18(%r13)
	addq $0x28,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x510(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x118(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0xF0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x108(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x110(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x4F0(%rbp)
	movl $0x2,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_485499:
L_260946:
	movq 0x190(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_485502
L_260947:
	movq 0x198(%rbp),%r14
	cmpb $0x2,0x0(%r14)
	je L_485500
L_260948:
	movq %rsp,%r15
	jmp L_260940
.p2align 0x4
L_485500:
L_260949:
	movq 0x4F8(%rbp),%r14
	cmpq $0x1,%r14
	je L_485501
L_260950:
	movq 0x0(%r14),%r15
L_260951:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x508(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	addq $0x520,%rbp
	leaq (L_260952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_485501:
L_260959:
	movq $0x1,%r15
	jmp L_260951
.p2align 0x4
L_485502:
L_260960:
	movq %rsp,%r15
	jmp L_260940
.p2align 0x4
L_485504:
L_259985:
	movq (globalObjptr+0x1C18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43AC
L_260626:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260627
L_260636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260637
.p2align 0x4
.long 0x43AD
L_260637:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260627:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x4F0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r11
	je L_260630
L_260628:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_485509
L_260629:
	movq 0x8(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
L_260630:
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x4E8(%rbp),%r11
	cmpq $0x1,%r11
	je L_485508
L_260631:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1334,%r15
	jne L_260619
L_260632:
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq %r13,%r14
	jmp L_260622
.p2align 0x4
L_485508:
L_260633:
	movq %r13,0x4E8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp loop_3022
.p2align 0x4
L_485509:
	movq %r11,%r15
	jmp L_260630
.p2align 0x4
.long 0x41DD
L_260644:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x520,%rbp
	leaq (L_260645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x43BE
rev_364:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	cmpq $0x1,%r15
	je L_485514
L_260761:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x520(%rbp)
	movq %r14,0x528(%rbp)
	movq $0x1,0x530(%rbp)
.p2align 0x4,,0x7
L_260762:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485513
.p2align 0x4,,0x7
L_260763:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x528(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x520(%rbp),%r14
	cmpq $0x1,%r14
	je L_485512
L_260764:
	movq %r15,0x530(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x520(%rbp)
	movq %r15,0x528(%rbp)
	jmp L_260762
.p2align 0x4
L_485512:
L_260766:
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_260767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485513:
L_260797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x540,%rbp
	leaq (L_260798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260798
.p2align 0x4
.long 0x43C3
L_260798:
	addq $0xFFFFFFFFFFFFFAC0,%rbp
	jmp L_260763
.p2align 0x4
L_485514:
L_260799:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_260766
.p2align 0x4
.long 0x43B6
L_260729:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x550(%rbp)
	movl $0x1,0x560(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x560,%rbp
	leaq (L_260730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x43B3
L_260714:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x528(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260715
L_260725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_260726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260726
.p2align 0x4
.long 0x43B4
L_260726:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_260715:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x528(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r11
	je L_260718
L_260716:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_485517
L_260717:
	movq 0x8(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
L_260718:
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x2667,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x540(%rbp),%r14
	movq %r14,0x8(%r15)
L_260719:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_260720
L_260721:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1334,%r11
	jne L_485515
L_260722:
	movq %r15,0x528(%rbp)
	movq %r13,0x538(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x500(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x518(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x50C(%rbp)
	movq %r14,0x530(%rbp)
	jmp L_260701
.p2align 0x4
L_485515:
L_260720:
	movq %r15,0x518(%rbp)
	jmp L_260688
.p2align 0x4
L_485517:
	movq %r11,%r15
	jmp L_260718
.p2align 0x4
.long 0x41DD
toString_367:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq $0x1,0x518(%rbp)
	movq %r15,0x520(%rbp)
	addq $0x518,%rbp
	leaq (rev_365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4388
L_260458:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x510(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x510,%rbp
	leaq (L_260459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x4377
L_260366:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260367
L_260452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260453
.p2align 0x4
.long 0x4387
L_260453:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260367:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x520(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x510(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x510,%rbp
	leaq (L_260368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x41E2
L_260304:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movl 0x528(%rbp),%r15d
	movslq %r15d,%rdx
	movq %rdx,0x520(%rbp)
	movl %r15d,0x184(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_258374
L_260305:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x185B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_260306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260306
.p2align 0x4
.long 0x4371
L_260306:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
	movq %rax,0x528(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3062:
	cmpq 0x520(%rbp),%r15
	jnl L_485521
L_260361:
	movq 0x528(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3062
.p2align 0x4
L_485521:
L_260307:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260308
L_260359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_260360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260360
.p2align 0x4
.long 0x424F
L_260360:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_260308:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x530(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x518(%rbp),%r14
	movq %r14,0x540(%rbp)
	movq %r15,0x548(%rbp)
	movl 0x184(%rbp),%r15d
	movl %r15d,0x550(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x540,%rbp
	leaq (L_260309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3953
.p2align 0x4
.long 0x436F
L_260268:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260269
L_260270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_260271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260271
.p2align 0x4
.long 0x4370
L_260271:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_260269:
	movq $0x40F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movq 0x398(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x3A8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x3B8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x2E8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x3E0(%rbp),%r13
	movq %r13,0x40(%r15)
	movq $0x291B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x4477,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r15,0x0(%r10)
	movq $0x1287,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq $0x0,0x0(%r9)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r10,0x0(%r13)
	movq $0x47AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1D25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4366
L_260251:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	jmp L_260221
.p2align 0x4
.long 0x4366
L_260222:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq %r15,0x4F0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_4
.p2align 0x4
.long 0x433E
L_260115:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260116
L_260117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_260118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260118
.p2align 0x4
.long 0x4350
L_260118:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_260116:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4352
L_260123:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq 0x500(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260124
L_260185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260186
.p2align 0x4
.long 0x4360
L_260186:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260124:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10840)(%rip),%r15
	movq %r15,0x500(%rbp)
	addq $0x500,%rbp
	leaq (L_260125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4335
L_259993:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259994
L_260066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260067
.p2align 0x4
.long 0x4347
L_260067:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259994:
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x508(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_259995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x4318
L_259851:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259852
L_259988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259989
.p2align 0x4
.long 0x429E
L_259989:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259852:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x508(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x184(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x3B01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x520(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x690(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x698(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	addq $0x518,%rbp
	leaq (L_259853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabMatch_0
.p2align 0x4
.long 0x4306
L_259771:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259772
L_259845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_259846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259846
.p2align 0x4
.long 0x4316
L_259846:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_259772:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_485529
L_259773:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0x109E8)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_259774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485529:
L_259805:
	movq 0x140(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq (globalObjptr+0x1AE8)(%rip),%r10
	movl 0x0(%r10),%r9d
	incl %r9d
	jo L_257189
L_259806:
	movl %r9d,0x0(%r10)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq 0x0(%r13),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x0(%r11),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r11)
	movq $0x1D17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x16D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x28(%rbp)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movl 0x180(%rbp),%r15d
	testl %r15d,%r15d
	jz L_259808
L_259809:
	movq 0x4B0(%rbp),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jz L_259808
L_259811:
	movq 0x190(%rbp),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_259808
L_259812:
	movq 0x198(%rbp),%r15
	cmpb $0x2,0x0(%r15)
	jne L_485531
L_259814:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x109F8)(%rip),%r13
	movq %r13,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_485530
L_259815:
	movq 0x0(%r13),%r14
L_259816:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x4F0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x4F0,%rbp
	leaq (L_259817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_485530:
L_259824:
	movq $0x1,%r14
	jmp L_259816
.p2align 0x4
L_485531:
L_259808:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x42DC
L_259589:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq $0x1,0x528(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6A8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	addq $0x528,%rbp
	leaq (L_259590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
.long 0x42BE
L_259466:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259467
L_259585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259586
.p2align 0x4
.long 0x42DB
L_259586:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259467:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x520(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x510(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x510,%rbp
	leaq (L_259468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x429F
L_259343:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259344
L_259462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259463
.p2align 0x4
.long 0x42BD
L_259463:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259344:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x520(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x510(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x510,%rbp
	leaq (L_259345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x4284
L_259239:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	cmpq $0x1,%r15
	je L_485539
L_259240:
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x510(%rbp)
	movq (globalObjptr+0x10988)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x520,%rbp
	leaq (L_259241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485539:
L_259271:
	movq $0x1,0x510(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x688(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x690(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	addq $0x510,%rbp
	leaq (L_259272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
.long 0x417D
L_257150:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485543
L_257151:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x60(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_485542
L_257154:
	cmpl $0x2,%r15d
	je L_485540
L_257155:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485540:
L_257410:
	cmpq $0x0,0x60(%rbp)
	jna L_485541
L_257413:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
L_485541:
L_257412:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485542:
L_257153:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485543:
L_257496:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x419A
L_257405:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_257406:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_485546
L_257408:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xD8A,%r15
	jne L_485545
L_257409:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
L_257163:
	cmpq %r14,0x58(%rbp)
	je L_485544
L_257164:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485544:
L_257165:
	movq %r15,0x38(%rbp)
L_257166:
	movq 0x458(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_485545:
	movq %r13,%r15
L_257407:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485546:
	movq %r13,%r15
	jmp L_257407
.p2align 0x4
.long 0x426F
L_259079:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_485550
L_259080:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_259081:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_259082
L_259227:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_259082
L_259228:
	movq 0x58(%rbp),%r15
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	jne L_485547
L_259230:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_485547:
L_259082:
	movq (globalObjptr+0x10978)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485550:
L_257731:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4253
L_258663:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258664
L_258818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258819
.p2align 0x4
.long 0x425E
L_258819:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258664:
	movq 0x58(%rbp),%r10
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_257731
L_258665:
	movq 0x8(%r15),%r10
	movq 0x0(%r10),%r14
L_258666:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_258667
L_258688:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_485587
L_258689:
	movq 0x8(%r14),%r10
	movq 0x0(%r14),%r9
	movq 0x10(%r9),%r15
	movq 0x2C8(%rbp),%r9
	cmpq 0x10(%r9),%r15
	je L_485586
L_258690:
	movq 0x2D0(%rbp),%r9
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r8
	cmpq %r15,0x10(%r8)
	je L_258700
L_258691:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r11
	jne L_257512
L_258693:
	xorl %ebx,%ebx
	movq %r10,%r14
.p2align 0x4,,0x7
loop_3039:
	cmpl %ecx,%ebx
	je L_485559
L_258694:
	movslq %ebx,%r10
	cmpq %r11,%r10
	jnb L_257520
L_258696:
	imulq $0x18,%r10
	movq 0x0(%r13,%r10,1),%r9
	cmpq 0x10(%r9),%r15
	je L_485552
L_258697:
	incl %ebx
	jo L_257189
L_258698:
	jmp loop_3039
.p2align 0x4
L_485552:
L_258700:
	movq 0x2D8(%rbp),%r13
	cmpq %r15,0x10(%r13)
	je bug_751
L_258701:
	movq 0x2E0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_257512
L_258703:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3040:
	cmpl %ebx,%ecx
	je L_485556
L_258704:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_257520
L_258706:
	movq %r13,%r11
	imulq $0x18,%r11
	imulq $0x18,%r13
	movq 0x2E0(%rbp),%r10
	movq 0x8(%r10,%r13,1),%r9
	movq 0x0(%r10,%r11,1),%r13
	cmpq %r15,0x10(%r13)
	je L_485554
L_258707:
	incl %ebx
	jo L_257189
L_258708:
	jmp loop_3040
.p2align 0x4
L_485554:
L_258709:
	movq %r9,0x4F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_258710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_485556:
L_258716:
	movq (globalObjptr+0x6EE8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
bug_751:
bug_635:
	movq (globalObjptr+0x10958)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485559:
L_258737:
	movq 0x2F0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r13
	jne L_257512
L_258739:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3041:
	cmpl %ebx,%ecx
	je L_485569
L_258740:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_257520
L_258742:
	imulq $0x18,%r11
	movq 0x2F0(%rbp),%r10
	movq 0x8(%r10,%r11,1),%r9
	cmpq %r15,0x10(%r9)
	je L_485561
L_258743:
	incl %ebx
	jo L_257189
L_258744:
	jmp loop_3041
.p2align 0x4
L_485561:
L_258745:
	movq 0x2F8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_257512
L_258747:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3042:
	cmpl %ebx,%ecx
	je L_258716
L_258748:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_257520
L_258750:
	movq %r13,%r11
	imulq $0x18,%r11
	imulq $0x18,%r13
	movq 0x2F8(%rbp),%r9
	movb 0x0(%r9,%r13,1),%r10b
	movb %r10b,0x40(%rbp)
	movq 0x8(%r9,%r11,1),%r13
	cmpq %r15,0x10(%r13)
	je L_485563
L_258751:
	incl %ebx
	jo L_257189
L_258752:
	jmp loop_3042
.p2align 0x4
L_485563:
L_258753:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258754
L_258755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_258756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258756
.p2align 0x4
.long 0x425B
L_258756:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_258754:
	movzbq 0x40(%rbp),%r15
	shlq $0x2,%r15
	orq $0x3,%r15
L_258712:
	movq $0x47A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x328(%rbp),%r15
	movq %r15,0x18(%r14)
	movq $0x1D25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485569:
L_258758:
	movq 0x300(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r13
	jne L_257512
L_258760:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3043:
	cmpl %ebx,%ecx
	je L_485579
L_258761:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_257520
L_258763:
	imulq $0x18,%r11
	movq 0x300(%rbp),%r10
	movq 0x0(%r10,%r11,1),%r9
	cmpq %r15,0x10(%r9)
	je L_485571
L_258764:
	incl %ebx
	jo L_257189
L_258765:
	jmp loop_3043
.p2align 0x4
L_485571:
L_258766:
	movq 0x308(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_257512
L_258768:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3044:
	cmpl %ebx,%ecx
	je L_258716
L_258769:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_257520
L_258771:
	movq %r13,%r11
	imulq $0x18,%r11
	imulq $0x18,%r13
	movq 0x308(%rbp),%r10
	movq 0x8(%r10,%r13,1),%r9
	movq %r9,0x40(%rbp)
	movq 0x0(%r10,%r11,1),%r13
	cmpq 0x10(%r13),%r15
	je L_485573
L_258772:
	incl %ebx
	jo L_257189
L_258773:
	jmp loop_3044
.p2align 0x4
L_485573:
L_258774:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258775
L_258776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_258777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258777
.p2align 0x4
.long 0x425A
L_258777:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_258775:
	movq $0x1C9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_258712
.p2align 0x4
L_485579:
L_258779:
	movq 0x310(%rbp),%r13
	cmpq 0x10(%r13),%r15
	jne bug_635
L_258781:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_257512
L_258783:
	cmpl $0x1,%r13d
	jne bug_635
L_258785:
	cmpq $0x0,%r15
	jna L_257520
L_258787:
	movq 0x0(%r14),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_485586:
L_258817:
	movq $0x1,%r15
	jmp L_258712
.p2align 0x4
L_485587:
L_258667:
	movq (globalObjptr+0x10958)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4263
L_258847:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258848
L_258853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258854
.p2align 0x4
.long 0x4264
L_258854:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258848:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
L_258849:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_258850
L_258851:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485591
L_258852:
	movq 0x0(%r14),%r15
	jmp L_258844
.p2align 0x4
L_485591:
L_258850:
	movq 0x60(%rbp),%r15
	jmp L_258830
.p2align 0x4
.long 0x419A
L_258855:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258856
L_258857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_258858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258858
.p2align 0x4
.long 0x4265
L_258858:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_258856:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4261
L_258837:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_258838
.p2align 0x4
.long 0x4261
toString_361:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x508(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (rev_359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4263
L_259041:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259042
L_259047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259048
.p2align 0x4
.long 0x4264
L_259048:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259042:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
L_259043:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_259044
L_259045:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485595
L_259046:
	movq 0x0(%r14),%r15
	jmp L_259038
.p2align 0x4
L_485595:
L_259044:
	movq 0x60(%rbp),%r15
	jmp L_259026
.p2align 0x4
.long 0x419A
L_259049:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259050
L_259051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259052
.p2align 0x4
.long 0x4265
L_259052:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259050:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4261
toString_365:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x508(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (rev_363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4263
L_258994:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258995
L_259000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259001
.p2align 0x4
.long 0x4264
L_259001:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258995:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
L_258996:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_258997
L_258998:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485599
L_258999:
	movq 0x0(%r14),%r15
	jmp L_258991
.p2align 0x4
L_485599:
L_258997:
	movq 0x60(%rbp),%r15
	jmp L_258979
.p2align 0x4
.long 0x419A
L_259002:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259003
L_259004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259005
.p2align 0x4
.long 0x4265
L_259005:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259003:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4261
toString_364:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x508(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (rev_362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4263
L_258947:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258948
L_258953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258954
.p2align 0x4
.long 0x4264
L_258954:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258948:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
L_258949:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_258950
L_258951:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485603
L_258952:
	movq 0x0(%r14),%r15
	jmp L_258944
.p2align 0x4
L_485603:
L_258950:
	movq 0x60(%rbp),%r15
	jmp L_258932
.p2align 0x4
.long 0x419A
L_258955:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258956
L_258957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_258958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258958
.p2align 0x4
.long 0x4265
L_258958:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_258956:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4261
toString_363:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x508(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (rev_361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4266
L_258876:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x508(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x508,%rbp
	leaq (L_258877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x41DF
L_257966:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_485607
L_257967:
	movq 0x8(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq %r14,0x538(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x540(%rbp)
	addq $0x538,%rbp
	leaq (L_257968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
L_485607:
L_258643:
	movq (globalObjptr+0x10900)(%rip),%r14
	movq %r14,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_258644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x419A
L_258606:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258608
L_258612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_258613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258613
.p2align 0x4
.long 0x424D
L_258613:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_258608:
	movq 0x10(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_258609
L_258610:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xC9A,%r15
	jne L_485648
L_258611:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
L_257986:
	cmpq %r15,0x518(%rbp)
	je L_485608
L_257987:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485608:
L_257988:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x518(%rbp)
L_257989:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x520(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x44D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x158(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x160(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x530(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x170(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x418(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_485647
L_257990:
	movq 0x1F0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x548(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x550(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x560(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x568(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x570(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x578(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x580(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x588(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x590(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x184(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_257512
L_257992:
	cmpl $0x0,%r14d
	jl L_258590
L_257993:
	movl $0x0,0x598(%rbp)
loop_3025:
	movl 0x184(%rbp),%r15d
	cmpl %r15d,0x598(%rbp)
	jl L_485644
L_257994:
	movq 0x578(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x184(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_257512
L_257996:
	cmpl $0x0,%r13d
	jl L_258590
L_257997:
	movl $0x0,0x548(%rbp)
loop_3026:
	movl 0x184(%rbp),%r15d
	cmpl %r15d,0x548(%rbp)
	jl L_485641
L_257998:
	movq 0x580(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x184(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_257512
L_258000:
	cmpl $0x0,%r13d
	jl L_258590
L_258001:
	movl $0x0,0x548(%rbp)
loop_3027:
	movl 0x184(%rbp),%r15d
	cmpl %r15d,0x548(%rbp)
	jl L_485638
L_258002:
	movq 0x420(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x558(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x568(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x570(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x578(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x580(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x588(%rbp)
	movq 0x508(%rbp),%r15
	cmpq $0x1,%r15
	je L_258042
L_258003:
	movq 0x8(%r15),%r14
	movq %r14,0x590(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x184(%rbp)
	movq $0x1,0x598(%rbp)
.p2align 0x4,,0x7
L_258004:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485636
.p2align 0x4,,0x7
L_258005:
	movb 0x184(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_258577
	cmpb $0x4,%r15b
	je L_485633
L_258006:
	movq 0x590(%rbp),%r15
	cmpq $0x1,%r15
	je L_485609
L_258007:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x590(%rbp)
	movb %r14b,0x184(%rbp)
	jmp L_258004
.p2align 0x4
L_485609:
L_258008:
	movq 0x598(%rbp),%r14
	cmpq $0x1,%r14
	je L_258042
L_258009:
	movq 0x8(%r14),%r15
	movq %r15,0x590(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x184(%rbp)
	movq $0x1,0x598(%rbp)
.p2align 0x4,,0x7
L_258010:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485631
.p2align 0x4,,0x7
L_258011:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x184(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x590(%rbp),%r14
	cmpq $0x1,%r14
	je L_485610
L_258012:
	movq %r15,0x598(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x590(%rbp)
	movb %r15b,0x184(%rbp)
	jmp L_258010
.p2align 0x4
L_485610:
L_258013:
	cmpq $0x1,0x598(%rbp)
	jne L_258014
L_258565:
	movb 0x184(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_485626
	cmpb $0x4,%r15b
	je L_485611
L_258014:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10908)(%rip),%r15
	movq %r15,0x598(%rbp)
	addq $0x598,%rbp
	leaq (L_258015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485611:
L_258042:
	movq 0x508(%rbp),%r15
	cmpq $0x1,%r15
	je L_485625
L_258043:
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x184(%rbp)
	movb $0x1,0x185(%rbp)
	movq $0x1,0x590(%rbp)
.p2align 0x4,,0x7
L_258044:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485624
.p2align 0x4,,0x7
L_258045:
	movb 0x184(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_258542
	cmpb $0x2,%r15b
	je L_258542
	cmpb $0x3,%r15b
	je L_485620
L_258046:
	movq 0x550(%rbp),%r15
	cmpq $0x1,%r15
	je L_485612
L_258047:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x550(%rbp)
	movb %r14b,0x184(%rbp)
	jmp L_258044
.p2align 0x4
L_485612:
L_258048:
	movb 0x185(%rbp),%r14b
	movb %r14b,0x184(%rbp)
	movq 0x590(%rbp),%r14
	xchgq %r14,%r15
L_258049:
	cmpq $0x1,%r15
	je L_258493
L_258050:
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x185(%rbp)
	movq $0x1,0x590(%rbp)
.p2align 0x4,,0x7
L_258051:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485618
.p2align 0x4,,0x7
L_258052:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x185(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x590(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x550(%rbp),%r14
	cmpq $0x1,%r14
	je L_485613
L_258053:
	movq %r15,0x590(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x550(%rbp)
	movb %r15b,0x185(%rbp)
	jmp L_258051
.p2align 0x4
L_485613:
L_258054:
	cmpq $0x1,0x590(%rbp)
	jne L_258055
L_258491:
	movb 0x185(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_485616
	cmpb $0x2,%r15b
	je L_485615
	cmpb $0x3,%r15b
	je L_485614
L_258055:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10908)(%rip),%r15
	movq %r15,0x598(%rbp)
	addq $0x598,%rbp
	leaq (L_258056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485614:
L_258495:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10908)(%rip),%r15
	movq %r15,0x598(%rbp)
	addq $0x598,%rbp
	leaq (L_258496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485615:
L_258494:
	movb $0x1,0x185(%rbp)
L_258084:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb 0x185(%rbp),%r15b
	movb %r15b,0x598(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	addq $0x598,%rbp
	leaq (L_258085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scopeCheck_0
.p2align 0x4
L_485616:
L_258493:
	movb $0x0,0x185(%rbp)
	jmp L_258084
.p2align 0x4
L_485618:
L_258538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258539
.p2align 0x4
.long 0x4244
L_258539:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	jmp L_258052
.p2align 0x4
L_485620:
L_258542:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x184(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x590(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x550(%rbp),%r14
	cmpq $0x1,%r14
	je L_485621
L_258543:
	movq %r15,0x590(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x550(%rbp)
	movb %r15b,0x184(%rbp)
	jmp L_258044
.p2align 0x4
L_485621:
L_258544:
	movb 0x185(%rbp),%r13b
	movb %r13b,0x184(%rbp)
	jmp L_258049
.p2align 0x4
L_485624:
L_258547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258548
.p2align 0x4
.long 0x4244
L_258548:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	jmp L_258045
.p2align 0x4
L_485625:
L_258549:
	movb $0x1,0x184(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_258049
.p2align 0x4
L_485626:
L_258566:
	movq 0x550(%rbp),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x3,%r13b
	je L_258568
	cmpb $0x9,%r13b
	je L_485627
	jmp L_258042
.p2align 0x4
L_485627:
L_258568:
	movq 0x508(%rbp),%r15
	cmpq $0x1,%r15
	je L_485628
L_258569:
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x184(%rbp)
	movb $0x0,0x185(%rbp)
	movq $0x1,0x590(%rbp)
	jmp L_258044
.p2align 0x4
L_485628:
L_258570:
	movb $0x0,0x184(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_258049
.p2align 0x4
L_485631:
L_258573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_258574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258574
.p2align 0x4
.long 0x4242
L_258574:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	jmp L_258011
.p2align 0x4
L_485633:
L_258577:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x184(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x590(%rbp),%r14
	cmpq $0x1,%r14
	je L_485634
L_258578:
	movq %r15,0x598(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x590(%rbp)
	movb %r15b,0x184(%rbp)
	jmp L_258004
.p2align 0x4
L_485634:
L_258579:
	movq 0x598(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq $0x1,0x598(%rbp)
	jmp L_258010
.p2align 0x4
L_485636:
L_258581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_258582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258582
.p2align 0x4
.long 0x4242
L_258582:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	jmp L_258005
.p2align 0x4
L_485638:
L_258584:
	movslq 0x548(%rbp),%r15
	movq 0x580(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x590(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x5A0(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x568(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_485641:
L_258591:
	movslq 0x548(%rbp),%r15
	movq 0x578(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x590(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x5A0(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x560(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_485644:
L_258597:
	movslq 0x598(%rbp),%r15
	movq 0x588(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x590(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x5A8(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x570(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	addq $0x5A8,%rbp
	leaq (L_258598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_485647:
L_257761:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485648:
L_258609:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41CA
L_257899:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485651
L_257900:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x38(%rbp)
L_257901:
	movq 0x338(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_485651:
L_257936:
	movq (globalObjptr+0x108F0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x419A
L_257952:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_257953:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_485654
L_257955:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xC9A,%r15
	jne L_485653
L_257956:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
L_257947:
	cmpq %r14,0x50(%rbp)
	je L_485652
L_257948:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485652:
L_257949:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	jmp L_257901
.p2align 0x4
L_485653:
	movq %r13,%r15
L_257954:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485654:
	movq %r13,%r15
	jmp L_257954
.p2align 0x4
.long 0x41C7
L_257894:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r14
	movq %r14,0x118(%rbp)
	movq 0x108(%rbp),%r15
	movq 0x110(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
.long 0x41AC
L_257708:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485655
L_257709:
	movq 0x8(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2033
.p2align 0x4
L_485655:
L_257879:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x419A
L_257778:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_257779:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_485658
L_257781:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xC9A,%r15
	jne L_485657
L_257782:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
L_257723:
	cmpq 0x48(%rbp),%r14
	je L_485656
L_257724:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485656:
L_257725:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
L_257726:
	movq 0x458(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_485657:
	movq %r13,%r15
L_257780:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485658:
	movq %r13,%r15
	jmp L_257780
.p2align 0x4
.long 0x41A3
L_257532:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41A5
L_257537:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257538
L_257539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257540
.p2align 0x4
.long 0x41A6
L_257540:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257538:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43D5
L_261016:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261017
L_261018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_261019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261019
.p2align 0x4
.long 0x43D6
L_261019:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_261017:
	movq $0x1D27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_260995
.p2align 0x4
.long 0x43CA
L_260941:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x4F0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x43CD
L_260952:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movl 0x520(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260953
L_260957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_260958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260958
.p2align 0x4
.long 0x43CE
L_260958:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_260953:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x128(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x110(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_485661
L_260956:
	movq 0x120(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_260955:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_260940
.p2align 0x4
L_485661:
	movq %r14,%r15
	jmp L_260955
.p2align 0x4
.long 0x42DC
L_260645:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x518(%rbp)
	movl $0x1,0x528(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_260646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x43BE
L_260767:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260768
L_260795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_260796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260796
.p2align 0x4
.long 0x43C4
L_260796:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
L_260768:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x520(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10870)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_260769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x43B7
L_260730:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq %r15,0x560(%rbp)
	addq $0x560,%rbp
	leaq (L_260731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x41DD
rev_365:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	cmpq $0x1,%r15
	je L_485666
L_260872:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x510(%rbp)
	movq %r14,0x518(%rbp)
	movq $0x1,0x520(%rbp)
.p2align 0x4,,0x7
L_260873:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485665
.p2align 0x4,,0x7
L_260874:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x520(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x510(%rbp),%r14
	cmpq $0x1,%r14
	je L_485664
L_260875:
	movq %r15,0x520(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x510(%rbp)
	movq %r15,0x518(%rbp)
	jmp L_260873
.p2align 0x4
L_485664:
L_260877:
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_260878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485665:
L_260904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_260905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260905
.p2align 0x4
.long 0x43C6
L_260905:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
	jmp L_260874
.p2align 0x4
L_485666:
L_260906:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_260877
.p2align 0x4
.long 0x4389
L_260459:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260460
L_260604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260605
.p2align 0x4
.long 0x43AB
L_260605:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260460:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_485667
L_260461:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
L_260462:
	movq %r15,0x520(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x510(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x510,%rbp
	leaq (L_260463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
L_485667:
L_260541:
	movq 0x140(%rbp),%r15
	movq 0x10(%r15),%r13
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r13
	movl 0x0(%r13),%r9d
	incl %r9d
	jo L_257189
L_260542:
	movl %r9d,%r8d
	movl %r9d,0x0(%r13)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movl %r8d,0x4(%r9)
	addq $0x10,%r12
	movl $0x1,0x0(%r9)
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq 0x0(%r11),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsp,0x0(%rsi)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r9,0x0(%rsp)
	movq %rsi,0x8(%rsp)
	movq %r8,0x10(%rsp)
	movq %r15,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r14,0x0(%r9)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r15,1)
	movq %r9,0x0(%r10)
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	addq $0x10,%r12
	movl 0x0(%r13),%r9d
	incl %r9d
	jo L_257189
L_260543:
	movl %r9d,0x0(%r13)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x4(%r13)
	addq $0x10,%r12
	movl $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0x0(%r11),%rsp
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rsp,0x0(%r11)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r13,0x0(%rsp)
	movq %r11,0x8(%rsp)
	movq %r9,0x10(%rsp)
	movq %r15,0x18(%rsp)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r10,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r11,0x0(%r10)
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x60(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x510(%rbp)
	movl $0x2,0x518(%rbp)
	addq $0x510,%rbp
	leaq (L_260544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4378
L_260368:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260369
L_260450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260451
.p2align 0x4
.long 0x4386
L_260451:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260369:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_485671
L_260370:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0x10A20)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485671:
L_260416:
	movq 0x1B8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r13b
	movq 0x1C0(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r11b
	movq 0x1C8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r10b
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r9d
	movslq %r9d,%r8
	cmpq %r14,%r8
	jne L_257512
L_260418:
	testl %r9d,%r9d
	jz L_259985
L_260419:
	movq $0x47B3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x18,%r12
	movq 0x110(%rbp),%r8
	movq %r8,0x0(%r9)
	movq 0x4E8(%rbp),%r8
	movq %r8,0x8(%r9)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x10(%r8)
	addq $0x40,%r12
	movb $0x0,%r9b
	movzbl %r9b,%esp
	movzbl %r13b,%r9d
	shll $0x8,%r9d
	orl %r9d,%esp
	movzbl %r11b,%r13d
	shll $0x10,%r13d
	orl %r13d,%esp
	movzbl %r10b,%r13d
	shll $0x18,%r13d
	orl %r13d,%esp
	movl %esp,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq (globalObjptr+0x10A38)(%rip),%r13
	movq %r13,0x8(%r8)
	movq 0x8(%rbp),%r13
	movq %r13,0x18(%r8)
	movq 0x4F8(%rbp),%r13
	movq %r13,0x20(%r8)
	movq %r15,0x28(%r8)
	movq 0x500(%rbp),%r13
	movq %r13,0x30(%r8)
	cmpq $0x0,%r14
	jna L_257520
L_260421:
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4372
L_260309:
	addq $0xFFFFFFFFFFFFFAC0,%rbp
	movq 0x530(%rbp),%r15
	movl 0x184(%rbp),%r14d
	cmpl %r14d,0x0(%r15)
	jl L_485680
L_260310:
	movq 0x520(%rbp),%rdx
	testq %rdx,%rdx
	jz L_485679
L_260311:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_260312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260312
.p2align 0x4
.long 0x4373
L_260312:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	movq %rax,0x518(%rbp)
L_260313:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3063:
	movq 0x520(%rbp),%r14
	cmpq %r14,%r15
	jnl L_485678
L_260352:
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jnb L_257520
L_260354:
	movq 0x528(%rbp),%r14
	movq 0x0(%r14,%r11,8),%r13
	cmpq $0x1,%r13
	je L_257761
L_260355:
	movq 0x518(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3063
.p2align 0x4
L_485678:
L_260314:
	movq 0x518(%rbp),%r15
	movq $0x80F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1,0x528(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6A8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	addq $0x528,%rbp
	leaq (L_260315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_485679:
L_260357:
	movq (globalObjptr+0x1058)(%rip),%r15
	movq %r15,0x518(%rbp)
	jmp L_260313
.p2align 0x4
L_485680:
L_260358:
	movq (globalObjptr+0x1060)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4367
L_260223:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260224
L_260225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_260226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260226
.p2align 0x4
.long 0x4368
L_260226:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_260224:
	movq $0x1D15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x2A0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4353
L_260125:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq 0x500(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260126
L_260183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260184
.p2align 0x4
.long 0x435E
L_260184:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260126:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260127:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_257189
L_260128:
	cmpq $0x1,%r14
	je L_485682
L_260129:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260127
.p2align 0x4
L_485682:
L_260130:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260131
L_260181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260182
.p2align 0x4
.long 0x435F
L_260182:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260131:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485683
L_260132:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_260133:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE288)(%rip),%r15
	movq %r15,0x500(%rbp)
	addq $0x500,%rbp
	leaq (L_260134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485683:
L_260180:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260133
.p2align 0x4
.long 0x4336
L_259995:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_485687
L_259996:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x10A18)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485687:
L_260065:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4319
L_259853:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259854
L_259986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259987
.p2align 0x4
.long 0x4333
L_259987:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259854:
	movq 0x1B8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r13b
	movq 0x1C0(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r11b
	movq 0x1C8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r10b
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x508(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %r9,%rsp
	jne L_257512
L_259856:
	testl %r8d,%r8d
	jz L_259985
L_259857:
	movq $0x47B3,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0x110(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x4E8(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq $0x1D29,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x10(%rsp)
	movq %r15,0x30(%rsp)
	addq $0x40,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r8d
	movzbl %r13b,%r15d
	shll $0x8,%r15d
	orl %r15d,%r8d
	movzbl %r11b,%r15d
	shll $0x10,%r15d
	orl %r15d,%r8d
	movzbl %r10b,%r15d
	shll $0x18,%r15d
	orl %r15d,%r8d
	movl %r8d,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq (globalObjptr+0xDE20)(%rip),%r15
	movq %r15,0x8(%rsp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rsp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rsp)
	movq %r14,0x28(%rsp)
	cmpq $0x0,%r9
	jna L_257520
L_259859:
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r13
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq %r13,0x520(%rbp)
	addq $0x18,%r12
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x518(%rbp)
	movq %r14,0x528(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x518,%rbp
	leaq (L_259860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x4307
L_259774:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259775
L_259842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_259843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259843
.p2align 0x4
.long 0x4315
L_259843:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_259775:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x109F0)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_259776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x430D
L_259817:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movl 0x4F0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259818
L_259822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259823
.p2align 0x4
.long 0x430E
L_259823:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259818:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x38(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_485693
L_259821:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_259820:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485693:
	movq %r14,%r15
	jmp L_259820
.p2align 0x4
.long 0x42DD
L_259590:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259591
L_259766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259767
.p2align 0x4
.long 0x4304
L_259767:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259591:
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x528(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x540(%rbp)
	addq $0x528,%rbp
	leaq (L_259592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x42BF
L_259468:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259469
L_259583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259584
.p2align 0x4
.long 0x42DA
L_259584:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259469:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485696
L_259470:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x4F8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x109A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6E80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485696:
L_259502:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x510,%rbp
	leaq (L_259503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x42A0
L_259345:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259346
L_259460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259461
.p2align 0x4
.long 0x42BC
L_259461:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259346:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485698
L_259347:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x4F8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x109A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6EC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485698:
L_259379:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x510,%rbp
	leaq (L_259380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x4285
L_259241:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259242
L_259336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_259337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259337
.p2align 0x4
.long 0x429D
L_259337:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_259242:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x4F0(%rbp)
	addq $0x18,%r12
	movq 0x508(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10990)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x520,%rbp
	leaq (L_259243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x428A
L_259272:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259273
L_259320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259321
.p2align 0x4
.long 0x4299
L_259321:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259273:
	movq 0x480(%rbp),%r14
	movq 0x10(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x1,%r15b
	je newNoname_7
	cmpb $0x2,%r15b
	je L_485701
L_259274:
	movq 0x490(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x4981,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x488(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x4F8(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x38(%rbp),%r11
	movq %r11,0x18(%r13)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
newNoname_7:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_485701:
L_259319:
	movq 0x490(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x4A7B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x488(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x4F8(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x38(%rbp),%r11
	movq %r11,0x18(%r13)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp newNoname_7
.p2align 0x4
.long 0x417E
L_257156:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x419B
L_257414:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_485704
L_257415:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,0x60(%rbp)
	jna L_257412
L_257417:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
L_485704:
L_257486:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x417E
L_257497:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x4180
L_257167:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_485735
L_257168:
	movb 0x0(%r15),%r14b
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485734
L_257169:
	movb %r14b,0x61(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_257170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485733
.p2align 0x4,,0x7
L_257171:
	cmpb $0x3,0x60(%rbp)
	je L_485731
L_257172:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_485705
L_257173:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movb %r14b,0x60(%rbp)
	jmp L_257170
.p2align 0x4
L_485705:
L_257174:
	movb 0x61(%rbp),%r14b
	movb %r14b,0x58(%rbp)
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
L_257175:
	cmpq $0x1,%r15
	je L_485729
L_257176:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x59(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_257177:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485728
.p2align 0x4,,0x7
L_257178:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x59(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_485706
L_257179:
	movq %r15,0x68(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movb %r15b,0x59(%rbp)
	jmp L_257177
.p2align 0x4
L_485706:
L_257180:
	cmpq $0x1,0x68(%rbp)
	jne L_257181
L_257367:
	cmpb $0x3,0x59(%rbp)
	jne L_485726
L_257368:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485725
L_257369:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x59(%rbp)
	movl $0x1,0x5C(%rbp)
	movb $0x0,0x5A(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_257212:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485724
.p2align 0x4,,0x7
L_257213:
	movb 0x59(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_257345
	cmpb $0x1,%r15b
	je L_257345
	cmpb $0x2,%r15b
	je L_485720
L_257214:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_485707
L_257215:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movb %r14b,0x59(%rbp)
	jmp L_257212
.p2align 0x4
L_485707:
L_257216:
	movb 0x5A(%rbp),%r14b
	movb %r14b,0x59(%rbp)
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
L_257217:
	cmpq $0x1,%r15
	je L_485718
L_257218:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x5A(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_257219:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485717
.p2align 0x4,,0x7
L_257220:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x5A(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_485708
L_257221:
	movq %r15,0x68(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movb %r15b,0x5A(%rbp)
	jmp L_257219
.p2align 0x4
L_485708:
L_257222:
	cmpq $0x1,0x68(%rbp)
	jne L_257223
L_257329:
	movb 0x5A(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_485714
	cmpb $0x1,%r15b
	je L_485712
	cmpb $0x2,%r15b
	je L_485709
L_257223:
	movq (globalObjptr+0x108D8)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485709:
L_257336:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_485710
L_257337:
	movb $0x2,0x48(%rbp)
L_257252:
	movb 0x48(%rbp),%r15b
	movb %r15b,0x4F0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scopeCheck_0
.p2align 0x4
L_485710:
L_257338:
	movb $0x2,0x59(%rbp)
L_257269:
	cmpb $0x2,0x59(%rbp)
	jne L_485711
L_257272:
	movq (globalObjptr+0x108D8)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485711:
L_257271:
	movb 0x59(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	jmp L_257252
.p2align 0x4
L_485712:
L_257333:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_485713
L_257334:
	movb $0x1,0x48(%rbp)
	jmp L_257252
.p2align 0x4
L_485713:
L_257335:
	movb $0x1,0x59(%rbp)
	jmp L_257269
.p2align 0x4
L_485714:
L_257330:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_485715
L_257331:
	movb $0x0,0x48(%rbp)
	jmp L_257252
.p2align 0x4
L_485715:
L_257332:
	movb $0x0,0x59(%rbp)
	jmp L_257269
.p2align 0x4
L_485717:
L_257339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257340
.p2align 0x4
.long 0x4193
L_257340:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_257220
.p2align 0x4
L_485718:
L_257341:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_257269
L_257342:
	movb 0x59(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	jmp L_257252
.p2align 0x4
L_485720:
L_257345:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x59(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_485721
L_257346:
	movq %r15,0x68(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movb %r15b,0x59(%rbp)
	jmp L_257212
.p2align 0x4
L_485721:
L_257347:
	movb 0x5A(%rbp),%r13b
	movb %r13b,0x59(%rbp)
	jmp L_257217
.p2align 0x4
L_485724:
L_257350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257351
.p2align 0x4
.long 0x4193
L_257351:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_257213
.p2align 0x4
L_485725:
L_257370:
	movl $0x1,0x5C(%rbp)
	movb $0x0,0x59(%rbp)
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_257217
.p2align 0x4
L_485726:
L_257181:
	movq (globalObjptr+0x108D8)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485728:
L_257371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257372
.p2align 0x4
.long 0x4193
L_257372:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_257178
.p2align 0x4
L_485729:
L_257210:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485730
L_257211:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x59(%rbp)
	movl $0x0,0x5C(%rbp)
	movb $0x2,0x5A(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_257212
.p2align 0x4
L_485730:
L_257352:
	movl $0x0,0x5C(%rbp)
	movb $0x2,0x59(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_257217
.p2align 0x4
L_485731:
L_257374:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_485732
L_257375:
	movq %r15,0x68(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movb %r15b,0x60(%rbp)
	jmp L_257170
.p2align 0x4
L_485732:
L_257376:
	movb 0x61(%rbp),%r13b
	movb %r13b,0x58(%rbp)
	jmp L_257175
.p2align 0x4
L_485733:
L_257377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257378
.p2align 0x4
.long 0x4196
L_257378:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_257171
.p2align 0x4
L_485734:
L_257379:
	movb %r14b,0x58(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_257175
.p2align 0x4
L_485735:
L_257380:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4272
L_259231:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x58(%rbp)
	je L_257761
L_259232:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_259125
L_259233:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_259089:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485755
.p2align 0x4,,0x7
L_259090:
	cmpb $0x3,0x60(%rbp)
	je L_485753
L_259091:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_485736
L_259092:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movb %r14b,0x60(%rbp)
	jmp L_259089
.p2align 0x4
L_485736:
L_259093:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_485738
L_259094:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_259095:
	cmpq $0x1,%r15
	je L_485737
L_259096:
	movq 0x8(%r15),%r15
	jmp L_259095
.p2align 0x4
L_485737:
L_259097:
	movq (globalObjptr+0x10980)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485738:
L_259125:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485752
L_259126:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_259127:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485751
.p2align 0x4,,0x7
L_259128:
	movb 0x60(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_259197
	cmpb $0x1,%r15b
	je L_259197
	cmpb $0x2,%r15b
	je L_485747
L_259129:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_485739
L_259130:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movb %r14b,0x60(%rbp)
	jmp L_259127
.p2align 0x4
L_485739:
L_259131:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_485746
L_259132:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_259133:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485745
.p2align 0x4,,0x7
L_259134:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_485740
L_259135:
	movq %r15,0x68(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movb %r15b,0x60(%rbp)
	jmp L_259133
.p2align 0x4
L_485740:
L_259136:
	cmpq $0x1,0x68(%rbp)
	jne L_259137
L_259189:
	movb 0x60(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_485743
	cmpb $0x1,%r15b
	je L_485742
	cmpb $0x2,%r15b
	je L_485741
L_259137:
	movq (globalObjptr+0x10980)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485741:
L_259165:
	movb $0x2,0x48(%rbp)
L_259166:
	movb 0x48(%rbp),%r15b
	movb %r15b,0x4F0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F0,%rbp
	leaq (L_259167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scopeCheck_0
.p2align 0x4
L_485742:
L_259191:
	movb $0x1,0x48(%rbp)
	jmp L_259166
.p2align 0x4
L_485743:
L_259190:
	movb $0x0,0x48(%rbp)
	jmp L_259166
.p2align 0x4
L_485745:
L_259193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259194
.p2align 0x4
.long 0x427E
L_259194:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_259134
.p2align 0x4
L_485746:
L_259195:
	movb $0x2,0x48(%rbp)
	jmp L_259166
.p2align 0x4
L_485747:
L_259197:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_485748
L_259198:
	movq %r15,0x68(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movb %r15b,0x60(%rbp)
	jmp L_259127
.p2align 0x4
L_485748:
L_259199:
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_259133
.p2align 0x4
L_485751:
L_259202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259203
.p2align 0x4
.long 0x427E
L_259203:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_259128
.p2align 0x4
L_485752:
L_259204:
	movb $0x2,0x48(%rbp)
	jmp L_259166
.p2align 0x4
L_485753:
L_259220:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_485754
L_259221:
	movq %r15,0x68(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movb %r15b,0x60(%rbp)
	jmp L_259089
.p2align 0x4
L_485754:
L_259222:
	movq 0x68(%rbp),%r15
	jmp L_259095
.p2align 0x4
L_485755:
L_259223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259224
.p2align 0x4
.long 0x427E
L_259224:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_259090
.p2align 0x4
.long 0x4270
L_259083:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_259084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x4259
L_258710:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258711
L_258713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_258714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258714
.p2align 0x4
.long 0x425A
L_258714:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_258711:
	movq $0x1C9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_258712
.p2align 0x4
.long 0x4254
L_258718:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_14
.p2align 0x4
.long 0x425C
L_258788:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_257731
L_258789:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r14
L_258790:
	movq %r14,%r15
	andq $0x3,%r15
	jnz bug_635
L_258791:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne bug_635
L_258792:
	movq 0x0(%r14),%r13
	movq 0x318(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_257512
L_258794:
	xorl %ebx,%ebx
	movq %r13,%r14
.p2align 0x4,,0x7
loop_3045:
	cmpl %ecx,%ebx
	je bug_635
L_258795:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_257520
L_258797:
	imulq $0x18,%r13
	movq 0x10(%r14),%r11
	movq 0x318(%rbp),%r10
	movq 0x8(%r10,%r13,1),%r9
	cmpq %r11,0x10(%r9)
	je L_485760
L_258798:
	incl %ebx
	jo L_257189
L_258799:
	jmp loop_3045
.p2align 0x4
L_485760:
L_258800:
	movq 0x320(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_257512
L_258802:
	xorl %ebx,%ebx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_3046:
	cmpl %ebx,%ecx
	je L_258716
L_258803:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_257520
L_258805:
	movq %r13,%r11
	imulq $0x18,%r11
	imulq $0x18,%r13
	movq 0x320(%rbp),%r9
	movb 0x0(%r9,%r13,1),%r10b
	movb %r10b,0x58(%rbp)
	movq 0x8(%r9,%r11,1),%r13
	cmpq 0x10(%r13),%r15
	je L_485762
L_258806:
	incl %ebx
	jo L_257189
L_258807:
	jmp loop_3046
.p2align 0x4
L_485762:
L_258808:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258809
L_258812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258813
.p2align 0x4
.long 0x425D
L_258813:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258809:
	cmpb $0x2,0x58(%rbp)
	jne bug_635
L_258811:
	movq $0x2,%r15
	jmp L_258712
.p2align 0x4
.long 0x4254
L_258668:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_14
.p2align 0x4
.long 0x4261
rev_359:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485772
L_258831:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_258832:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485771
.p2align 0x4,,0x7
L_258833:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_485770
L_258834:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_258832
.p2align 0x4
L_485770:
L_258836:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485771:
L_258839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258840
.p2align 0x4
.long 0x4262
L_258840:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_258833
.p2align 0x4
L_485772:
L_258841:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_258836
.p2align 0x4
.long 0x4261
rev_363:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485775
L_259027:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_259028:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485774
.p2align 0x4,,0x7
L_259029:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_485773
L_259030:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_259028
.p2align 0x4
L_485773:
L_259032:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485774:
L_259033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259034
.p2align 0x4
.long 0x4262
L_259034:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_259029
.p2align 0x4
L_485775:
L_259035:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_259032
.p2align 0x4
.long 0x4261
rev_362:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485778
L_258980:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_258981:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485777
.p2align 0x4,,0x7
L_258982:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_485776
L_258983:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_258981
.p2align 0x4
L_485776:
L_258985:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485777:
L_258986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258987
.p2align 0x4
.long 0x4262
L_258987:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_258982
.p2align 0x4
L_485778:
L_258988:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_258985
.p2align 0x4
.long 0x4261
rev_361:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485781
L_258933:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_258934:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485780
.p2align 0x4,,0x7
L_258935:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_485779
L_258936:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_258934
.p2align 0x4
L_485779:
L_258938:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485780:
L_258939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258940
.p2align 0x4
.long 0x4262
L_258940:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_258935
.p2align 0x4
L_485781:
L_258941:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_258938
.p2align 0x4
.long 0x4267
L_258877:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258878
L_258925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258926
.p2align 0x4
.long 0x426B
L_258926:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258878:
	movq $0x40E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movq 0x398(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x3A8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x3B8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x2E8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x3E0(%rbp),%r14
	movq %r14,0x40(%r15)
	movq $0x291B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x23B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x3C0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4471,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1287,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x0,0x0(%r10)
	movq $0x20F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_258874
L_258879:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_485797
L_258896:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_485782
	jmp *jumpTable_749(,%rax,8)
.data
.p2align 0x4
jumpTable_749:
.quad L_485796,L_485795,L_485794,L_485793,L_485792,L_485791,L_485790,L_485789,L_485788,L_485787,L_485786,L_485785,L_485784,L_485783
.text
.p2align 0x4
L_485782:
L_258897:
	movq 0x38(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_485783:
L_258923:
	movq 0x38(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_485784:
L_258922:
	movq 0x38(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_485785:
L_258921:
	movq 0x38(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_485786:
L_258920:
	movq 0x38(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_485787:
L_258919:
	movq 0x38(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_485788:
L_258918:
	movq 0x38(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_485789:
L_258917:
	movq 0x38(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_485790:
L_258916:
	movq 0x38(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_485791:
L_258915:
	movq 0x38(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_485792:
L_258914:
	movq 0x38(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_485793:
L_258913:
	movq 0x38(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_485794:
L_258912:
	movq 0x38(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_485795:
L_258911:
	movq 0x38(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x558(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_485796:
L_258910:
	movq 0x38(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	leaq L_258906(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x508,%rbp
	leaq (L_258898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_485797:
L_258880:
	movq 0x0(%r14),%r13
L_258881:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_485799
L_258893:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_485798
L_258894:
	movq 0x0(%r13),%r13
	xchgq %r13,%r15
L_258895:
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_485798:
	xchgq %r13,%r15
L_258883:
	movq %r15,0x508(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (toString_362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_485799:
	xchgq %r13,%r15
	jmp L_258883
.p2align 0x4
.long 0x41E0
L_257968:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	movq 0x538(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_485802
L_257969:
	movq 0x520(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x538,%rbp
	leaq (L_257970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_485802:
L_258628:
	movq (globalObjptr+0x10900)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_258629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41DF
L_258644:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x528,%rbp
	leaq (L_258645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41E4
L_258015:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x508(%rbp),%r15
	cmpq $0x1,%r15
	je L_485807
L_258016:
	movq 0x8(%r15),%r14
	movq %r14,0x590(%rbp)
	movb 0x0(%r15),%dl
	movl $0x0,0x184(%rbp)
	movq $0x1,0x598(%rbp)
L_258017:
	cmpb $0x1,%dl
	je L_485806
	cmpb $0x2,%dl
	je L_485805
	cmpb $0x3,%dl
	je L_485804
	cmpb $0x4,%dl
	je L_485803
L_258018:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_258019:
	movq %r15,0x5A8(%rbp)
	addq $0x5A8,%rbp
	leaq (L_258020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485803:
L_258563:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_258019
.p2align 0x4
L_485804:
L_258562:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_258019
.p2align 0x4
L_485805:
L_258561:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_258019
.p2align 0x4
L_485806:
L_258560:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_258019
.p2align 0x4
L_485807:
L_258564:
	movq $0x1,%r14
	xchgq %r14,%r15
L_258029:
	movq %r15,0x598(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x5A0(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x5A8(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x5B0(%rbp)
	addq $0x598,%rbp
	leaq (L_258030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x41E4
L_258056:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x508(%rbp),%r15
	cmpq $0x1,%r15
	je L_485812
L_258057:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r15,0x508(%rbp)
	movl $0x0,0x590(%rbp)
	movq $0x1,0x598(%rbp)
L_258058:
	cmpb $0x1,%dl
	je L_485811
	cmpb $0x2,%dl
	je L_485810
	cmpb $0x3,%dl
	je L_485809
	cmpb $0x4,%dl
	je L_485808
L_258059:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_258060:
	movq %r15,0x5A8(%rbp)
	addq $0x5A8,%rbp
	leaq (L_258061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485808:
L_258489:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_258060
.p2align 0x4
L_485809:
L_258488:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_258060
.p2align 0x4
L_485810:
L_258487:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_258060
.p2align 0x4
L_485811:
L_258486:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_258060
.p2align 0x4
L_485812:
L_258490:
	movq $0x1,%r14
	xchgq %r14,%r15
L_258070:
	movq %r15,0x598(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x5A0(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x5A8(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x5B0(%rbp)
	addq $0x598,%rbp
	leaq (L_258071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x41E4
L_258496:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x508(%rbp),%r15
	cmpq $0x1,%r15
	je L_485817
L_258497:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r15,0x508(%rbp)
	movl $0x0,0x590(%rbp)
	movq $0x1,0x598(%rbp)
L_258498:
	cmpb $0x1,%dl
	je L_485816
	cmpb $0x2,%dl
	je L_485815
	cmpb $0x3,%dl
	je L_485814
	cmpb $0x4,%dl
	je L_485813
L_258499:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_258500:
	movq %r15,0x5A8(%rbp)
	addq $0x5A8,%rbp
	leaq (L_258501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485813:
L_258536:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_258500
.p2align 0x4
L_485814:
L_258535:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_258500
.p2align 0x4
L_485815:
L_258534:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_258500
.p2align 0x4
L_485816:
L_258533:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_258500
.p2align 0x4
L_485817:
L_258537:
	movq $0x1,%r14
	xchgq %r14,%r15
L_258510:
	movq %r15,0x598(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x5A0(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x5A8(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x5B0(%rbp)
	addq $0x598,%rbp
	leaq (L_258511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x41EA
L_258085:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x560(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x598(%rbp)
	addq $0x598,%rbp
	leaq (L_258086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x4247
L_258585:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258586
L_258587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258588
.p2align 0x4
.long 0x4248
L_258588:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258586:
	incl 0x548(%rbp)
	jmp loop_3027
.p2align 0x4
.long 0x4249
L_258592:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258593
L_258594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258595
.p2align 0x4
.long 0x424A
L_258595:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258593:
	incl 0x548(%rbp)
	jmp loop_3026
.p2align 0x4
.long 0x424B
L_258598:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258599
L_258600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_258601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258601
.p2align 0x4
.long 0x424C
L_258601:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_258599:
	incl 0x598(%rbp)
	jmp loop_3025
.p2align 0x4
.long 0x41CB
L_257902:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_257731
L_257903:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_257904:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_257905
L_257929:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_257905
L_257930:
	movq 0x0(%r13),%r15
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	jne L_485821
L_257932:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_485821:
L_257905:
	movq (globalObjptr+0x108F0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41CA
L_257937:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41AD
L_257710:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485828
L_257711:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x58(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_485827
L_257714:
	cmpl $0x2,%r15d
	je L_485825
L_257715:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485825:
L_257783:
	cmpq $0x0,0x58(%rbp)
	jna L_485826
L_257786:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
L_485826:
L_257785:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485827:
L_257713:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485828:
L_257869:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41AE
L_257880:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41B0
L_257727:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_485829
L_257728:
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
L_257729:
	movq 0x338(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_485829:
L_257762:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41A3
L_257533:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257189
L_257534:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x4F0(%rbp)
	movq 0x4F8(%rbp),%r14
	movq %r14,0x500(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x508(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x510(%rbp)
	movq %r15,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x43CB
L_260942:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260943
L_260944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_260945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260945
.p2align 0x4
.long 0x43CC
L_260945:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_260943:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43AE
L_260646:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_260647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x43BE
L_260769:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_260770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x43B7
L_260731:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260732
L_260750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_260751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260751
.p2align 0x4
.long 0x43BB
L_260751:
	addq $0xFFFFFFFFFFFFFA98,%rbp
L_260732:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x558(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x560(%rbp)
	addq $0x18,%r12
	movq 0x550(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260733:
	addl 0x0(%r15),%ecx
	movl %ecx,0x504(%rbp)
	jo L_257189
L_260734:
	cmpq $0x1,%r14
	je L_485832
L_260735:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260733
.p2align 0x4
L_485832:
L_260736:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260737
L_260748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_260749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260749
.p2align 0x4
.long 0x43BA
L_260749:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_260737:
	movl 0x504(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485834
L_260738:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x560(%rbp),%r14
	movq %r14,0x0(%r15)
L_260739:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260740:
	movl %r13d,0x0(%r15)
	movq %r14,0x558(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x570(%rbp)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x558,%rbp
	leaq (L_260741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485834:
L_260747:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260739
.p2align 0x4
.long 0x41DD
L_260878:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260879
L_260902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_260903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260903
.p2align 0x4
.long 0x4250
L_260903:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_260879:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10870)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_260880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x438A
L_260463:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260464
L_260539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260540
.p2align 0x4
.long 0x439C
L_260540:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260464:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485839
L_260465:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x10A40)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485839:
L_260511:
	movq $0x1D2B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x500(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x439D
L_260544:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x510(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_260545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4379
L_260371:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260372
L_260447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260448
.p2align 0x4
.long 0x4385
L_260448:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260372:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10A28)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4374
L_260315:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x4C8(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x538(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x530(%rbp)
	movq %r14,0x528(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x540(%rbp)
	addq $0x528,%rbp
	leaq (L_260316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3799
.p2align 0x4
.long 0x4354
L_260134:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq 0x500(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260135
L_260178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260179
.p2align 0x4
.long 0x435E
L_260179:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260135:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260136:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_257189
L_260137:
	cmpq $0x1,%r14
	je L_485842
L_260138:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260136
.p2align 0x4
L_485842:
L_260139:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260140
L_260176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260177
.p2align 0x4
.long 0x435D
L_260177:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260140:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485843
L_260141:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_260142:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x500(%rbp)
	addq $0x500,%rbp
	leaq (L_260143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485843:
L_260175:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260142
.p2align 0x4
.long 0x4337
L_259997:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259998
L_260063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260064
.p2align 0x4
.long 0x4346
L_260064:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259998:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107B8)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x431A
L_259860:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_485848
L_259861:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x10A00)(%rip),%r15
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485848:
L_259906:
	movq 0x40(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x518,%rbp
	leaq (L_259907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x4308
L_259776:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259777
L_259840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_259841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259841
.p2align 0x4
.long 0x4314
L_259841:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_259777:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259778:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_257189
L_259779:
	cmpq $0x1,%r14
	je L_485849
L_259780:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259778
.p2align 0x4
L_485849:
L_259781:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259782
L_259838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_259839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259839
.p2align 0x4
.long 0x4313
L_259839:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_259782:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485850
L_259783:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_259784:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_259785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485850:
L_259837:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259784
.p2align 0x4
.long 0x42DE
L_259592:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_485854
L_259593:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x508(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x109B8)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485854:
L_259624:
	movq 0x518(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq %r13,0x530(%rbp)
	movq %r14,0x538(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x540(%rbp)
	addq $0x528,%rbp
	leaq (L_259625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x42C0
L_259471:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x42C5
L_259503:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259504
L_259564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259565
.p2align 0x4
.long 0x42D3
L_259565:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259504:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_485855
L_259505:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x4F8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x109B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6E80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485855:
L_259537:
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259538
.p2align 0x4
.long 0x42CC
L_259538:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq %rax,0x50(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3052:
	cmpq $0x2,%r15
	jnl L_485858
L_259543:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_485857
	cmpl $0x1,%r14d
	je L_485856
L_258351:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485856:
L_259546:
	movq 0x48(%rbp),%r14
	movq 0x270(%rbp),%r13
L_259545:
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x50(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x18,%r11
	movq %r14,0x0(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r10
	movq $0x1,0x8(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r9
	movq %r13,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_3052
.p2align 0x4
L_485857:
L_259544:
	movq 0x40(%rbp),%r14
	movq 0x38(%rbp),%r13
	jmp L_259545
.p2align 0x4
L_485858:
L_259539:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259540
L_259541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259542
.p2align 0x4
.long 0x42AE
L_259542:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259540:
	movq 0x50(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x40,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x10,%r10d
	orl %r10d,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x18,%r10d
	orl %r10d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10998)(%rip),%r13
	movq %r13,0x8(%r14)
	movq $0x3,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq %r15,0x28(%r14)
	movq 0x500(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x42A1
L_259348:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x42A6
L_259380:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259381
L_259441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259442
.p2align 0x4
.long 0x42B5
L_259442:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259381:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_485861
L_259382:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x4F8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x109B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6EC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_485861:
L_259414:
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259415
.p2align 0x4
.long 0x42AD
L_259415:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq %rax,0x50(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3051:
	cmpq $0x2,%r15
	jnl L_485864
L_259420:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_485863
	cmpl $0x1,%r14d
	je L_485862
	jmp L_258351
.p2align 0x4
L_485862:
L_259423:
	movq 0x48(%rbp),%r14
	movq 0x38(%rbp),%r13
L_259422:
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x50(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x18,%r11
	movq %r14,0x0(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r10
	movq $0x1,0x8(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r9
	movq %r13,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_3051
.p2align 0x4
L_485863:
L_259421:
	movq 0x40(%rbp),%r14
	movq 0x4B8(%rbp),%r13
	jmp L_259422
.p2align 0x4
L_485864:
L_259416:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259417
L_259418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259419
.p2align 0x4
.long 0x42AE
L_259419:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259417:
	movq 0x50(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x40,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x10,%r10d
	orl %r10d,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x18,%r10d
	orl %r10d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10998)(%rip),%r13
	movq %r13,0x8(%r14)
	movq $0x3,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq %r15,0x28(%r14)
	movq 0x500(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4286
L_259243:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259244
L_259334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_259335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259335
.p2align 0x4
.long 0x4250
L_259335:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_259244:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x518(%rbp)
	addq $0x18,%r12
	movq 0x508(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x4F0(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259245:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_257189
L_259246:
	cmpq $0x1,%r14
	je L_485867
L_259247:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259245
.p2align 0x4
L_485867:
L_259248:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259249
L_259332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259333
.p2align 0x4
.long 0x429C
L_259333:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259249:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485868
L_259250:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
L_259251:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x4F0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x520,%rbp
	leaq (L_259252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485868:
L_259331:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259251
.p2align 0x4
.long 0x428B
L_259275:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259276
L_259316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259317
.p2align 0x4
.long 0x4298
L_259317:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259276:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x510(%rbp)
	movl $0x2,0x518(%rbp)
	addq $0x510,%rbp
	leaq (L_259277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x417F
L_257157:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_485873
L_257159:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485873:
L_257158:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x419C
L_257418:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_485874
L_257419:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_485874:
L_257476:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x417E
L_257487:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x417F
L_257498:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257158
L_257499:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x4181
L_257224:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485879
L_257225:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movb 0x0(%r15),%dl
	movl $0x0,0x70(%rbp)
	movq $0x1,0x78(%rbp)
L_257226:
	cmpb $0x1,%dl
	je L_485878
	cmpb $0x2,%dl
	je L_485877
	cmpb $0x3,%dl
	je L_485876
L_257227:
	movq (globalObjptr+0xE928)(%rip),%r15
L_257228:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485876:
L_257327:
	movq (globalObjptr+0xD768)(%rip),%r15
	jmp L_257228
.p2align 0x4
L_485877:
L_257326:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_257228
.p2align 0x4
L_485878:
L_257325:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_257228
.p2align 0x4
L_485879:
L_257328:
	movq $0x1,%r14
	xchgq %r14,%r15
L_257238:
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_257239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4185
L_257253:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257254
L_257266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257267
.p2align 0x4
.long 0x418A
L_257267:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257254:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_257256
L_257265:
	movq $0x12CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x58(%rbp),%r14d
	movzbl 0x48(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x468(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1CDF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_257256:
	movzbw 0x58(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movq (globalObjptr+0xF68)(%rip),%r14
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x24BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movzwl %r15w,%r11d
	movzbl 0x48(%rbp),%r15d
	shll $0x10,%r15d
	orl %r15d,%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x4F8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq %r14,0x500(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
.long 0x4181
L_257273:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485885
L_257274:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movl $0x0,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_257275:
	cmpb $0x1,%dl
	je L_485884
	cmpb $0x2,%dl
	je L_485883
	cmpb $0x3,%dl
	je L_485882
L_257276:
	movq (globalObjptr+0xE928)(%rip),%r15
L_257277:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485882:
L_257313:
	movq (globalObjptr+0xD768)(%rip),%r15
	jmp L_257277
.p2align 0x4
L_485883:
L_257312:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_257277
.p2align 0x4
L_485884:
L_257311:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_257277
.p2align 0x4
L_485885:
L_257314:
	movq $0x1,%r14
	xchgq %r14,%r15
L_257287:
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_257288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4181
L_257182:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485889
L_257183:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movb 0x0(%r15),%dl
	movl $0x0,0x5C(%rbp)
	movq $0x1,0x70(%rbp)
L_257184:
	cmpb $0x1,%dl
	je L_485888
	cmpb $0x2,%dl
	je L_485887
	cmpb $0x3,%dl
	je L_485886
L_257185:
	movq (globalObjptr+0xE928)(%rip),%r15
L_257186:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485886:
L_257365:
	movq (globalObjptr+0xD768)(%rip),%r15
	jmp L_257186
.p2align 0x4
L_485887:
L_257364:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_257186
.p2align 0x4
L_485888:
L_257363:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_257186
.p2align 0x4
L_485889:
L_257366:
	movq $0x1,%r14
	xchgq %r14,%r15
L_257197:
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_257198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4180
L_257381:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x4272
L_259098:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485893
L_259099:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movb 0x0(%r15),%dl
	movl $0x0,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_259100:
	cmpb $0x1,%dl
	je L_485892
	cmpb $0x2,%dl
	je L_485891
	cmpb $0x3,%dl
	je L_485890
L_259101:
	movq (globalObjptr+0xE928)(%rip),%r15
L_259102:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485890:
L_259217:
	movq (globalObjptr+0xD768)(%rip),%r15
	jmp L_259102
.p2align 0x4
L_485891:
L_259216:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_259102
.p2align 0x4
L_485892:
L_259215:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_259102
.p2align 0x4
L_485893:
L_259218:
	movq $0x1,%r14
	xchgq %r14,%r15
L_259112:
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_259113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4272
L_259138:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_485897
L_259139:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movl $0x0,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_259140:
	cmpb $0x1,%dl
	je L_485896
	cmpb $0x2,%dl
	je L_485895
	cmpb $0x3,%dl
	je L_485894
L_259141:
	movq (globalObjptr+0xE928)(%rip),%r15
L_259142:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_259143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485894:
L_259187:
	movq (globalObjptr+0xD768)(%rip),%r15
	jmp L_259142
.p2align 0x4
L_485895:
L_259186:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_259142
.p2align 0x4
L_485896:
L_259185:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_259142
.p2align 0x4
L_485897:
L_259188:
	movq $0x1,%r14
	xchgq %r14,%r15
L_259152:
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_259153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4277
L_259167:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259168
L_259173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259174
.p2align 0x4
.long 0x4279
L_259174:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259168:
	movq (globalObjptr+0xF68)(%rip),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x24BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movw $0x0,%r13w
	movzwl %r13w,%r11d
	movzbl 0x48(%rbp),%r13d
	shll $0x10,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x4F8(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x4F0(%rbp)
	movq %r15,0x500(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F0,%rbp
	leaq (L_259169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
.long 0x4271
L_259084:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257189
L_259085:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_259086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x4255
L_258719:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258720
L_258735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258736
.p2align 0x4
.long 0x4258
L_258736:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258720:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_258721:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_257189
L_258722:
	cmpq $0x1,%r14
	je L_485900
L_258723:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_258721
.p2align 0x4
L_485900:
L_258724:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258725
L_258733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258734
.p2align 0x4
.long 0x4257
L_258734:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258725:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485902
L_258726:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_258727:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_258728:
	movl %r13d,0x0(%r15)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x4F0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq %r14,0x4F8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x4F0,%rbp
	leaq (L_258729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485902:
L_258732:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258727
.p2align 0x4
.long 0x4255
L_258669:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258670
L_258686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258687
.p2align 0x4
.long 0x4258
L_258687:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258670:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_258671:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_257189
L_258672:
	cmpq $0x1,%r14
	je L_485906
L_258673:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_258671
.p2align 0x4
L_485906:
L_258674:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258675
L_258684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258685
.p2align 0x4
.long 0x4257
L_258685:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258675:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485908
L_258676:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_258677:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_258678:
	movl %r13d,0x0(%r15)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x4F0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq %r14,0x4F8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x4F0,%rbp
	leaq (L_258679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485908:
L_258683:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258677
.p2align 0x4
.long 0x4268
L_258898:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258899
L_258904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258905
.p2align 0x4
.long 0x4269
L_258905:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258899:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
L_258900:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_258901
L_258902:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_485912
L_258903:
	movq 0x0(%r14),%r15
	jmp L_258895
.p2align 0x4
L_485912:
L_258901:
	movq 0x58(%rbp),%r15
	jmp L_258883
.p2align 0x4
.long 0x419A
L_258906:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258907
L_258908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_258909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258909
.p2align 0x4
.long 0x426A
L_258909:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_258907:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4261
toString_362:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x508(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (rev_360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x41E1
L_257970:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	movq 0x538(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257971
L_258626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_258627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258627
.p2align 0x4
.long 0x424F
L_258627:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_257971:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_485921
L_257973:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_257974:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_257975
L_258618:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_257975
L_258619:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_257975
L_258621:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_485917
L_258623:
	testl %r11d,%r11d
	jnz L_485916
L_258625:
	movq 0x510(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x518(%rbp)
	jmp L_257989
.p2align 0x4
L_485916:
L_257975:
	movq (globalObjptr+0x10900)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_257976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485917:
L_258622:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485921:
L_257972:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1500)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41DF
L_258629:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x528,%rbp
	leaq (L_258630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41E2
L_258645:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_485923
L_258646:
	movl %r13d,0x0(%r14)
	movq %r15,0x528(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x540(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x548(%rbp)
	addq $0x528,%rbp
	leaq (L_258647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485923:
L_257978:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41E5
L_258020:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258021
L_258558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B0,%rbp
	leaq (L_258559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258559
.p2align 0x4
.long 0x4246
L_258559:
	addq $0xFFFFFFFFFFFFFA50,%rbp
L_258021:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x184(%rbp),%r14d
	incl %r14d
	jo L_257189
L_258022:
	movq 0x590(%rbp),%r13
	cmpq $0x1,%r13
	je L_485924
L_258023:
	movl %r14d,0x184(%rbp)
	movq %r15,0x598(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x590(%rbp)
	jmp L_258017
.p2align 0x4
L_485924:
L_258024:
	movq 0x598(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x5A0(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq $0x1,0x5A0(%rbp)
.p2align 0x4,,0x7
L_258025:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485926
.p2align 0x4,,0x7
L_258026:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x598(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x5A0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x590(%rbp),%r14
	cmpq $0x1,%r14
	je L_258029
L_258027:
	movq %r15,0x5A0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x590(%rbp)
	movq %r15,0x598(%rbp)
	jmp L_258025
.p2align 0x4
L_485926:
L_258556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B0,%rbp
	leaq (L_258557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258557
.p2align 0x4
.long 0x4246
L_258557:
	addq $0xFFFFFFFFFFFFFA50,%rbp
	jmp L_258026
.p2align 0x4
.long 0x41E6
L_258030:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x590(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258031
L_258554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258555
.p2align 0x4
.long 0x4244
L_258555:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258031:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x590(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x598(%rbp)
	addq $0x18,%r12
	movq 0x550(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_258032:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_257189
L_258033:
	cmpq $0x1,%r14
	je L_485929
L_258034:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_258032
.p2align 0x4
L_485929:
L_258035:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258036
L_258552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_258553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258553
.p2align 0x4
.long 0x4245
L_258553:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_258036:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485931
L_258037:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x598(%rbp),%r14
	movq %r14,0x0(%r15)
L_258038:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_258039:
	movl %r13d,0x0(%r15)
	movq %r14,0x5A0(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x598(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	addq $0x598,%rbp
	leaq (L_258040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485931:
L_258551:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258038
.p2align 0x4
.long 0x41E7
L_258061:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258062
L_258484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B0,%rbp
	leaq (L_258485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258485
.p2align 0x4
.long 0x4243
L_258485:
	addq $0xFFFFFFFFFFFFFA50,%rbp
L_258062:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x590(%rbp),%r14d
	incl %r14d
	jo L_257189
L_258063:
	movq 0x508(%rbp),%r13
	cmpq $0x1,%r13
	je L_485935
L_258064:
	movl %r14d,0x590(%rbp)
	movq %r15,0x598(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x508(%rbp)
	jmp L_258058
.p2align 0x4
L_485935:
L_258065:
	movq 0x598(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x5A0(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq $0x1,0x598(%rbp)
.p2align 0x4,,0x7
L_258066:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485937
.p2align 0x4,,0x7
L_258067:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x508(%rbp),%r14
	cmpq $0x1,%r14
	je L_258070
L_258068:
	movq %r15,0x598(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x508(%rbp)
	movq %r15,0x590(%rbp)
	jmp L_258066
.p2align 0x4
L_485937:
L_258482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_258483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258483
.p2align 0x4
.long 0x4242
L_258483:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	jmp L_258067
.p2align 0x4
.long 0x41E8
L_258071:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258072
L_258480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_258481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258481
.p2align 0x4
.long 0x4241
L_258481:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_258072:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x508(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x590(%rbp)
	addq $0x18,%r12
	movq 0x550(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_258073:
	addl 0x0(%r15),%ecx
	movl %ecx,0x508(%rbp)
	jo L_257189
L_258074:
	cmpq $0x1,%r14
	je L_485940
L_258075:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_258073
.p2align 0x4
L_485940:
L_258076:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258077
L_258478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258479
.p2align 0x4
.long 0x4240
L_258479:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258077:
	movl 0x508(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485942
L_258078:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
L_258079:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_258080:
	movl %r13d,0x0(%r15)
	movq %r14,0x5A0(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x598(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	addq $0x598,%rbp
	leaq (L_258081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485942:
L_258477:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258079
.p2align 0x4
.long 0x41E7
L_258501:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258502
L_258531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B0,%rbp
	leaq (L_258532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258532
.p2align 0x4
.long 0x4243
L_258532:
	addq $0xFFFFFFFFFFFFFA50,%rbp
L_258502:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x590(%rbp),%r14d
	incl %r14d
	jo L_257189
L_258503:
	movq 0x508(%rbp),%r13
	cmpq $0x1,%r13
	je L_485946
L_258504:
	movl %r14d,0x590(%rbp)
	movq %r15,0x598(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x508(%rbp)
	jmp L_258498
.p2align 0x4
L_485946:
L_258505:
	movq 0x598(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x5A0(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq $0x1,0x598(%rbp)
.p2align 0x4,,0x7
L_258506:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_485948
.p2align 0x4,,0x7
L_258507:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x508(%rbp),%r14
	cmpq $0x1,%r14
	je L_258510
L_258508:
	movq %r15,0x598(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x508(%rbp)
	movq %r15,0x590(%rbp)
	jmp L_258506
.p2align 0x4
L_485948:
L_258529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_258530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258530
.p2align 0x4
.long 0x4242
L_258530:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	jmp L_258507
.p2align 0x4
.long 0x41E8
L_258511:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258512
L_258527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_258528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258528
.p2align 0x4
.long 0x4241
L_258528:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_258512:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x508(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x590(%rbp)
	addq $0x18,%r12
	movq 0x550(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_258513:
	addl 0x0(%r15),%ecx
	movl %ecx,0x508(%rbp)
	jo L_257189
L_258514:
	cmpq $0x1,%r14
	je L_485951
L_258515:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_258513
.p2align 0x4
L_485951:
L_258516:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258517
L_258525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258526
.p2align 0x4
.long 0x4240
L_258526:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258517:
	movl 0x508(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485953
L_258518:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
L_258519:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_258520:
	movl %r13d,0x0(%r15)
	movq %r14,0x5A0(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x598(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	addq $0x598,%rbp
	leaq (L_258521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485953:
L_258524:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258519
.p2align 0x4
.long 0x41EB
L_258086:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq $0x1,%r15
	je L_485957
L_258087:
	movq 0x8(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x590(%rbp)
	movq %r14,0x5A0(%rbp)
	movq 0x508(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2033
.p2align 0x4
L_485957:
L_258430:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10900)(%rip),%r15
	movq %r15,0x598(%rbp)
	addq $0x598,%rbp
	leaq (L_258431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41CE
L_257933:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_257761
newNoname_6:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x41CC
L_257906:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41D7
L_257938:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_485959
L_257940:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485959:
L_257939:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41AE
L_257716:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41BF
L_257787:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r15
	je L_485961
L_257788:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	cmpq $0x1,0x58(%rbp)
	jna L_257785
L_257790:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
L_485961:
L_257859:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41AE
L_257870:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41AF
L_257881:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_485962
L_257882:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485962:
L_257718:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41B1
L_257730:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_257731
L_257732:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_257733:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_257734
L_257754:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_257734
L_257755:
	movq 0x58(%rbp),%r15
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	jne L_485963
L_257757:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x4F8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_485963:
L_257734:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41B0
L_257763:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41A4
L_257535:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_485967
L_257536:
	movq $0x35,%r14
	movq 0x38(%rbp),%r15
	movq 0x48(%rbp),%r13
	movq %r13,0x1B8(%rbp)
	jmp eta_0
.p2align 0x4
L_485967:
L_257301:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43AE
L_260647:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260648
L_260674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_260675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260675
.p2align 0x4
.long 0x424D
L_260675:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_260648:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x520(%rbp)
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260649:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_257189
L_260650:
	cmpq $0x1,%r14
	je L_485968
L_260651:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260649
.p2align 0x4
L_485968:
L_260652:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260653
L_260672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_260673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260673
.p2align 0x4
.long 0x43B1
L_260673:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
L_260653:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485970
L_260654:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x520(%rbp),%r14
	movq %r14,0x0(%r15)
L_260655:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260656:
	movl %r13d,0x0(%r15)
	movq %r14,0x518(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x508(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x530(%rbp)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x518,%rbp
	leaq (L_260657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_485970:
L_260671:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260655
.p2align 0x4
.long 0x43BE
L_260770:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x530(%rbp)
	addq $0x530,%rbp
	leaq (L_260771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x43B8
L_260741:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260742
L_260745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_260746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260746
.p2align 0x4
.long 0x43B9
L_260746:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_260742:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_260712
.p2align 0x4
.long 0x41DD
L_260880:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_260881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x438B
L_260466:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260467
L_260536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260537
.p2align 0x4
.long 0x439B
L_260537:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260467:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x107B8)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x439E
L_260545:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260546
L_260602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260603
.p2align 0x4
.long 0x43A9
L_260603:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260546:
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x510(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x510,%rbp
	leaq (L_260547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x437A
L_260373:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260374
L_260445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260446
.p2align 0x4
.long 0x4383
L_260446:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260374:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260375:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_257189
L_260376:
	cmpq $0x1,%r14
	je L_485978
L_260377:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260375
.p2align 0x4
L_485978:
L_260378:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260379
L_260443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260444
.p2align 0x4
.long 0x4382
L_260444:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260379:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485979
L_260380:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_260381:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10A30)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485979:
L_260442:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260381
.p2align 0x4
.long 0x4375
L_260316:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260317
L_260350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_260351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260351
.p2align 0x4
.long 0x4376
L_260351:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_260317:
	movq $0x1D1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x518(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x158(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_485994
L_260318:
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_260319:
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_258304
L_260320:
	movq 0x8(%r11),%r10
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r10,0x0(%r15)
	cmpq $0x1,%r13
	je L_485983
L_260321:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_260319
.p2align 0x4
L_485983:
	movq %r14,%r15
L_260323:
	movq 0x158(%rbp),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq 0x4F0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x160(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_260329
L_260324:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movq %r10,%r14
.p2align 0x4,,0x7
L_260325:
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_258304
L_260326:
	movq 0x8(%r11),%r10
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r10,0x0(%r13)
	cmpq $0x1,%r14
	je L_485984
L_260327:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	jmp L_260325
.p2align 0x4
L_485984:
L_260329:
	movq 0x160(%rbp),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq 0x4F8(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x168(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_260335
L_260330:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movq %r10,%r14
.p2align 0x4,,0x7
L_260331:
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_258304
L_260332:
	movq 0x8(%r11),%r10
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r10,0x0(%r13)
	cmpq $0x1,%r14
	je L_485985
L_260333:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	jmp L_260331
.p2align 0x4
L_485985:
L_260335:
	movq 0x168(%rbp),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq 0x500(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x170(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_260341
L_260336:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movq %r10,%r14
.p2align 0x4,,0x7
L_260337:
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_485987
L_260338:
	movq 0x8(%r11),%r10
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r10,0x0(%r13)
	cmpq $0x1,%r14
	je L_485986
L_260339:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	jmp L_260337
.p2align 0x4
L_485986:
L_260341:
	movq %r15,0x0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x508(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485987:
L_258304:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_485994:
	movq %r14,%r15
	jmp L_260323
.p2align 0x4
.long 0x4355
L_260143:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq 0x500(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl $0x1,0x500(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x500,%rbp
	leaq (L_260144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4338
L_259999:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260000
L_260061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260062
.p2align 0x4
.long 0x4344
L_260062:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260000:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260001:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_257189
L_260002:
	cmpq $0x1,%r14
	je L_485996
L_260003:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260001
.p2align 0x4
L_485996:
L_260004:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260005
L_260059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260060
.p2align 0x4
.long 0x4345
L_260060:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260005:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_485997
L_260006:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_260007:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF4A8)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_260008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_485997:
L_260058:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260007
.p2align 0x4
.long 0x431B
L_259862:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259863
L_259981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259982
.p2align 0x4
.long 0x4332
L_259982:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259863:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF468)(%rip),%r15
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4322
L_259907:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259908
L_259957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259958
.p2align 0x4
.long 0x432D
L_259958:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259908:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_486002
L_259909:
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10A10)(%rip),%r15
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486002:
L_259939:
	movq $0x12C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x508(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D21,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x500(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4309
L_259785:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x4F0(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F0,%rbp
	leaq (L_259786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x42DF
L_259594:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259595
L_259763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259764
.p2align 0x4
.long 0x4303
L_259764:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259595:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10990)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x42E5
L_259625:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259626
L_259747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259748
.p2align 0x4
.long 0x42FD
L_259748:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259626:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je x_2032
L_259627:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0x109C0)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
x_2032:
x_869:
	movq 0x188(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_486009
L_259673:
	movq 0x18(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x288(%rbp)
L_259674:
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x298(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_259675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259675
.p2align 0x4
.long 0x42EE
L_259675:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq %rax,0x2A0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3053:
	cmpq $0x2,%r15
	jnl L_486007
L_259680:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486006
	cmpl $0x1,%r14d
	je L_486005
	jmp L_258351
.p2align 0x4
L_486005:
L_259683:
	movq 0x298(%rbp),%r14
	movq 0x280(%rbp),%r13
L_259682:
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x2A0(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x18,%r11
	movq %r14,0x0(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r10
	movq $0x1,0x8(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r9
	movq %r13,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_3053
.p2align 0x4
L_486006:
L_259681:
	movq 0x290(%rbp),%r14
	movq 0x288(%rbp),%r13
	jmp L_259682
.p2align 0x4
L_486007:
L_259676:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259677
L_259678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_259679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259679
.p2align 0x4
.long 0x42EF
L_259679:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_259677:
	movq 0x2A0(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x40,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x10,%r10d
	orl %r10d,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x18,%r10d
	orl %r10d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10998)(%rip),%r13
	movq %r13,0x8(%r14)
	movq $0x3,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq %r15,0x28(%r14)
	movq 0x510(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486009:
L_259684:
	movl 0x180(%rbp),%r15d
	testl %r15d,%r15d
	jz L_259686
L_259705:
	movq 0x190(%rbp),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_259686
L_259706:
	movq 0x198(%rbp),%r15
	cmpb $0x2,0x0(%r15)
	jne L_486011
L_259708:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x109E0)(%rip),%r13
	movq %r13,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x500(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_486010
L_259709:
	movq 0x0(%r11),%r11
	movq %r11,%r14
L_259710:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x528,%rbp
	leaq (L_259711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_486010:
L_259718:
	movq $0x1,%r14
	jmp L_259710
.p2align 0x4
L_486011:
L_259686:
	movl 0x180(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_486012
L_259687:
	movq 0x18(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x288(%rbp)
	jmp L_259674
.p2align 0x4
L_486012:
L_259688:
	movq 0x518(%rbp),%r15
	movq %r15,0x20(%rbp)
L_259689:
	movq 0x190(%rbp),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_259692
L_259690:
	movq 0x198(%rbp),%r15
	cmpb $0x2,0x0(%r15)
	jne L_486014
L_259693:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x109D8)(%rip),%r13
	movq %r13,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_486013
L_259694:
	movq 0x0(%r11),%r11
	movq %r11,%r14
L_259695:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x520,%rbp
	leaq (L_259696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_486013:
L_259703:
	movq $0x1,%r14
	jmp L_259695
.p2align 0x4
L_486014:
L_259692:
	movq 0x18(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x288(%rbp)
	jmp L_259674
.p2align 0x4
.long 0x42C0
L_259472:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259473
L_259580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259581
.p2align 0x4
.long 0x42D9
L_259581:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259473:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x109A8)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x42C6
L_259506:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x42A1
L_259349:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259350
L_259457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259458
.p2align 0x4
.long 0x42BB
L_259458:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259350:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x109A8)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x42A7
L_259383:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4286
L_259252:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x508(%rbp)
	movl $0x1,0x520(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x520,%rbp
	leaq (L_259253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x428C
L_259277:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x510(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_259278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x417E
L_257160:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257161
L_257403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257404
.p2align 0x4
.long 0x4199
L_257404:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257161:
	movq (globalObjptr+0x1610)(%rip),%r13
	movq (globalObjptr+0x1608)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_486021
L_257162:
	movq $0x1B15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x448(%rbp),%r15
	movq %r15,0x8(%r13)
	jmp L_257163
.p2align 0x4
L_486021:
L_257402:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1618)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x419D
L_257420:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_486028
L_257422:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_257423:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_257424
L_257434:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_257424
L_257435:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_257424
L_257437:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_257153
L_257439:
	testl %r11d,%r11d
	jnz L_486023
L_257441:
	movq 0x60(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486023:
L_257424:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486028:
L_257421:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1500)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x417E
L_257477:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x417F
L_257488:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257158
L_257489:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x417E
L_257500:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257501
L_257504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257505
.p2align 0x4
.long 0x4199
L_257505:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257501:
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257402
L_257502:
	movq $0x1B15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x448(%rbp),%r15
	movq %r15,0x8(%r13)
	jmp L_257163
.p2align 0x4
.long 0x4184
L_257229:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257230
L_257323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257324
.p2align 0x4
.long 0x4195
L_257324:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257230:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x70(%rbp),%r14d
	incl %r14d
	jo L_257189
L_257231:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_486032
L_257232:
	movl %r14d,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x68(%rbp)
	jmp L_257226
.p2align 0x4
L_486032:
L_257233:
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_257234:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486034
.p2align 0x4,,0x7
L_257235:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_257238
L_257236:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_257234
.p2align 0x4
L_486034:
L_257321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257322
.p2align 0x4
.long 0x4194
L_257322:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_257235
.p2align 0x4
.long 0x4183
L_257239:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257240
L_257319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257320
.p2align 0x4
.long 0x4193
L_257320:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257240:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_257241:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_257189
L_257242:
	cmpq $0x1,%r14
	je L_486037
L_257243:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_257241
.p2align 0x4
L_486037:
L_257244:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257245
L_257317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257318
.p2align 0x4
.long 0x4192
L_257318:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257245:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486039
L_257246:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_257247:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_257248:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486039:
L_257316:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_257247
.p2align 0x4
.long 0x4186
L_257257:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257258
L_257263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257264
.p2align 0x4
.long 0x4189
L_257264:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257258:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x4F0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movb 0x58(%rbp),%r15b
	movb %r15b,0x500(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkSymbol_0
.p2align 0x4
.long 0x418B
L_257278:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257279
L_257309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257310
.p2align 0x4
.long 0x4191
L_257310:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257279:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x68(%rbp),%r14d
	incl %r14d
	jo L_257189
L_257280:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_486044
L_257281:
	movl %r14d,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_257275
.p2align 0x4
L_486044:
L_257282:
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_257283:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486046
.p2align 0x4,,0x7
L_257284:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_257287
L_257285:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_257283
.p2align 0x4
L_486046:
L_257307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257308
.p2align 0x4
.long 0x4190
L_257308:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_257284
.p2align 0x4
.long 0x418C
L_257288:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257289
L_257305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257306
.p2align 0x4
.long 0x418F
L_257306:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257289:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_257290:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_257291:
	cmpq $0x1,%r14
	je L_486049
L_257292:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_257290
.p2align 0x4
L_486049:
L_257293:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257294
L_257303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257304
.p2align 0x4
.long 0x418E
L_257304:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257294:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486051
L_257295:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_257296:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_257297:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486051:
L_257302:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_257296
.p2align 0x4
.long 0x4182
L_257187:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257188
L_257361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257362
.p2align 0x4
.long 0x4194
L_257362:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257188:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x5C(%rbp),%r14d
	incl %r14d
	jo L_257189
L_257190:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_486055
L_257191:
	movl %r14d,0x5C(%rbp)
	movq %r15,0x70(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x68(%rbp)
	jmp L_257184
.p2align 0x4
L_486055:
L_257192:
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_257193:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486057
.p2align 0x4,,0x7
L_257194:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_257197
L_257195:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_257193
.p2align 0x4
L_486057:
L_257359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257360
.p2align 0x4
.long 0x4194
L_257360:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_257194
.p2align 0x4
.long 0x4183
L_257198:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257199
L_257357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257358
.p2align 0x4
.long 0x4193
L_257358:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257199:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_257200:
	addl 0x0(%r15),%ecx
	movl %ecx,0x5C(%rbp)
	jo L_257189
L_257201:
	cmpq $0x1,%r14
	je L_486060
L_257202:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_257200
.p2align 0x4
L_486060:
L_257203:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257204
L_257355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257356
.p2align 0x4
.long 0x4192
L_257356:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257204:
	movl 0x5C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486062
L_257205:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_257206:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_257207:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486062:
L_257354:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_257206
.p2align 0x4
.long 0x4197
L_257382:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257189
L_257383:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x4273
L_259103:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259104
L_259213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259214
.p2align 0x4
.long 0x4282
L_259214:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259104:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x68(%rbp),%r14d
	incl %r14d
	jo L_257189
L_259105:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_486067
L_259106:
	movl %r14d,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	jmp L_259100
.p2align 0x4
L_486067:
L_259107:
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_259108:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486069
.p2align 0x4,,0x7
L_259109:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_259112
L_259110:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_259108
.p2align 0x4
L_486069:
L_259211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259212
.p2align 0x4
.long 0x4281
L_259212:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_259109
.p2align 0x4
.long 0x4271
L_259113:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259114
L_259209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259210
.p2align 0x4
.long 0x4280
L_259210:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259114:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259115:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_257189
L_259116:
	cmpq $0x1,%r14
	je L_486072
L_259117:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259115
.p2align 0x4
L_486072:
L_259118:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259119
L_259207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259208
.p2align 0x4
.long 0x427F
L_259208:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259119:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486074
L_259120:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_259121:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259122:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_259123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486074:
L_259206:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259121
.p2align 0x4
.long 0x4274
L_259143:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259144
L_259183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259184
.p2align 0x4
.long 0x427D
L_259184:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259144:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x60(%rbp),%r14d
	incl %r14d
	jo L_257189
L_259145:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_486078
L_259146:
	movl %r14d,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_259140
.p2align 0x4
L_486078:
L_259147:
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_259148:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486080
.p2align 0x4,,0x7
L_259149:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_259152
L_259150:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_259148
.p2align 0x4
L_486080:
L_259181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259182
.p2align 0x4
.long 0x427C
L_259182:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_259149
.p2align 0x4
.long 0x4275
L_259153:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259154
L_259179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259180
.p2align 0x4
.long 0x427B
L_259180:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259154:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259155:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_259156:
	cmpq $0x1,%r14
	je L_486083
L_259157:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259155
.p2align 0x4
L_486083:
L_259158:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259159
L_259177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_259178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259178
.p2align 0x4
.long 0x427A
L_259178:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_259159:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486085
L_259160:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_259161:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259162:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_259163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486085:
L_259176:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259161
.p2align 0x4
.long 0x4187
L_259169:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259170
L_259171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259172
.p2align 0x4
.long 0x4278
L_259172:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259170:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4272
L_259086:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
L_259087:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_259125
L_259088:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x60(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_259089
.p2align 0x4
.long 0x4256
L_258729:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
L_258681:
	movq (globalObjptr+0x6EF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4256
L_258679:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_258681
.p2align 0x4
.long 0x4261
rev_360:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_486096
L_258884:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_258885:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486095
.p2align 0x4,,0x7
L_258886:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_486094
L_258887:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_258885
.p2align 0x4
L_486094:
L_258889:
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_486095:
L_258890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258891
.p2align 0x4
.long 0x4262
L_258891:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_258886
.p2align 0x4
L_486096:
L_258892:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_258889
.p2align 0x4
.long 0x41DF
L_257976:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x528,%rbp
	leaq (L_257977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41E2
L_258630:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257978
L_258631:
	movl %r13d,0x0(%r14)
	movq %r15,0x528(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x540(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x548(%rbp)
	addq $0x528,%rbp
	leaq (L_258632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41DF
L_258647:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258648
L_258656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_258657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258657
.p2align 0x4
.long 0x424E
L_258657:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_258648:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_486098
L_258649:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x520(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x530(%rbp)
	movl $0x2,0x538(%rbp)
	addq $0x530,%rbp
	leaq (L_258650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486098:
L_258615:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1618)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41E4
L_258040:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_258042
.p2align 0x4
.long 0x41E9
L_258081:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
L_258083:
	movb $0x0,0x185(%rbp)
	jmp L_258084
.p2align 0x4
.long 0x41E9
L_258521:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_258083
.p2align 0x4
.long 0x41EC
L_258088:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258089
L_258473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258474
.p2align 0x4
.long 0x4228
L_258474:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258089:
	movq 0x508(%rbp),%r15
	cmpq $0x1,%r15
	je L_486107
L_258090:
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x558(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x590(%rbp)
	cmpq %r14,%r11
	je L_486103
L_258091:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486103:
L_258092:
	movq 0x590(%rbp),%rdx
	testq %rdx,%rdx
	jz L_486106
L_258093:
	cmpq $0x7FFFFFFF,%rdx
	ja L_486105
L_258094:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258095
.p2align 0x4
.long 0x41ED
L_258095:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq %rax,0x598(%rbp)
L_258096:
	movq $0x0,0x5A0(%rbp)
loop_3028:
	movq 0x590(%rbp),%r15
	cmpq %r15,0x5A0(%rbp)
	jl L_486104
L_258097:
	movq 0x598(%rbp),%r15
	movq $0x9DF,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x508(%rbp)
L_258098:
	movq 0x550(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x560(%rbp),%r15
	movq %r15,0x598(%rbp)
	addq $0x598,%rbp
	leaq (L_258099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_486104:
L_258449:
	movq 0x5A0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x508(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x5A8(%rbp)
	movq 0x550(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x5C0(%rbp)
	leaq L_258459(%rip),%r15
	movq %r15,0x4D8(%rbp)
	movq %rbp,%r15
	addq $0x4E0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x5B8(%rbp)
	addq $0x5B8,%rbp
	leaq (L_258450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_486105:
L_258464:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486106:
L_258465:
	movq (globalObjptr+0x5018)(%rip),%r15
	movq %r15,0x598(%rbp)
	jmp L_258096
.p2align 0x4
L_486107:
L_258466:
	movq 0x550(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x5A8(%rbp)
	movq 0x590(%rbp),%r14
	movq %r14,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
.long 0x4238
L_258431:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x598,%rbp
	leaq (L_258432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41CE
L_257911:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257912
L_257926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257927
.p2align 0x4
.long 0x41D6
L_257927:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257912:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x60(%rbp)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257913
.p2align 0x4
.long 0x41CF
L_257913:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3024:
	cmpq $0x1,%r15
	jnl L_486109
L_257925:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3024
.p2align 0x4
L_486109:
L_257914:
	movq 0x58(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq $0x1,0x4F8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp import_0
.p2align 0x4
.long 0x41CD
L_257907:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257189
L_257908:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41CA
L_257941:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257942
L_257958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257959
.p2align 0x4
.long 0x41DB
L_257959:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257942:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_486112
L_257943:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x508(%rbp)
	movl $0x2,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486112:
L_257957:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1618)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41AF
L_257717:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257718
L_257719:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41C0
L_257791:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_486115
L_257792:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486115:
L_257849:
	movq (globalObjptr+0x108D0)(%rip),%r14
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x41AE
L_257860:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41AF
L_257871:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257718
L_257872:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41AE
L_257883:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257884
L_257887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257888
.p2align 0x4
.long 0x41BE
L_257888:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257884:
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_486117
L_257885:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257723
.p2align 0x4
L_486117:
L_257775:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1618)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41B4
L_257758:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_257761
newNoname_5:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x41B2
L_257735:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41BC
L_257764:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257189
L_257765:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x43AF
L_260657:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260658
L_260669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_260670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260670
.p2align 0x4
.long 0x43B0
L_260670:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_260658:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_257301
L_260659:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x500(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_486124
L_260660:
	movq 0x0(%r13),%r14
	movq 0x508(%rbp),%r11
	cmpq $0x1,%r11
	je L_486123
L_260661:
	movq 0x8(%r11),%r13
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_260662:
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r11
	cmpq $0x1,%r11
	je L_486122
L_260663:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1334,%r15
	jne L_260619
L_260664:
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq %r13,%r14
	jmp L_260622
.p2align 0x4
L_486122:
L_260665:
	movq %r13,0x4E8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp loop_3022
.p2align 0x4
L_486123:
	movq %r13,%r14
	jmp L_260662
.p2align 0x4
L_486124:
L_260667:
	movq 0x508(%rbp),%r14
	jmp L_260662
.p2align 0x4
.long 0x43BF
L_260771:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
	movq 0x530(%rbp),%r15
	movq %r15,0x528(%rbp)
	movl $0x1,0x538(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x548(%rbp)
	addq $0x538,%rbp
	leaq (L_260772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x41DD
L_260881:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x520(%rbp)
	addq $0x520,%rbp
	leaq (L_260882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x438C
L_260468:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260469
L_260534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260535
.p2align 0x4
.long 0x4399
L_260535:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260469:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260470:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_257189
L_260471:
	cmpq $0x1,%r14
	je L_486127
L_260472:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260470
.p2align 0x4
L_486127:
L_260473:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260474
L_260532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260533
.p2align 0x4
.long 0x439A
L_260533:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260474:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486128
L_260475:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_260476:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF4A8)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486128:
L_260531:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260476
.p2align 0x4
.long 0x439F
L_260547:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260548
L_260600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260601
.p2align 0x4
.long 0x43AA
L_260601:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260548:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_486132
L_260549:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0xF450)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486132:
L_260599:
	movq 0x50(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	jmp L_260462
.p2align 0x4
.long 0x437B
L_260382:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260383
L_260440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260441
.p2align 0x4
.long 0x4383
L_260441:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260383:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260384:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_257189
L_260385:
	cmpq $0x1,%r14
	je L_486134
L_260386:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260384
.p2align 0x4
L_486134:
L_260387:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260388
L_260438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260439
.p2align 0x4
.long 0x4384
L_260439:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260388:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486135
L_260389:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_260390:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486135:
L_260437:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260390
.p2align 0x4
.long 0x4356
L_260144:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq 0x500(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x500(%rbp)
	addq $0x500,%rbp
	leaq (L_260145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4339
L_260008:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260009
L_260056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260057
.p2align 0x4
.long 0x4344
L_260057:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260009:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260010:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_257189
L_260011:
	cmpq $0x1,%r14
	je L_486139
L_260012:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260010
.p2align 0x4
L_486139:
L_260013:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260014
L_260054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260055
.p2align 0x4
.long 0x4343
L_260055:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260014:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486140
L_260015:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_260016:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_260017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486140:
L_260053:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260016
.p2align 0x4
.long 0x431C
L_259864:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259865
L_259979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259980
.p2align 0x4
.long 0x4330
L_259980:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259865:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259866:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_257189
L_259867:
	cmpq $0x1,%r14
	je L_486144
L_259868:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259866
.p2align 0x4
L_486144:
L_259869:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259870
L_259977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259978
.p2align 0x4
.long 0x432F
L_259978:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259870:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486145
L_259871:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_259872:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10A08)(%rip),%r15
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486145:
L_259976:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259872
.p2align 0x4
.long 0x4323
L_259910:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259911
L_259954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259955
.p2align 0x4
.long 0x432C
L_259955:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259911:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259912:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_257189
L_259913:
	cmpq $0x1,%r14
	je L_486149
L_259914:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259912
.p2align 0x4
L_486149:
L_259915:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259916
L_259952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259953
.p2align 0x4
.long 0x432B
L_259953:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259916:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486150
L_259917:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_259918:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486150:
L_259951:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259918
.p2align 0x4
.long 0x430A
L_259786:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_259787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x42E0
L_259596:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259597
L_259761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259762
.p2align 0x4
.long 0x4302
L_259762:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259597:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259598:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_257189
L_259599:
	cmpq $0x1,%r14
	je L_486154
L_259600:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259598
.p2align 0x4
L_486154:
L_259601:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259602
L_259759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259760
.p2align 0x4
.long 0x4301
L_259760:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259602:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486155
L_259603:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_259604:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486155:
L_259758:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259604
.p2align 0x4
.long 0x42E6
L_259628:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259629
L_259744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259745
.p2align 0x4
.long 0x42FC
L_259745:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259629:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x109C8)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x42F2
L_259711:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movl 0x528(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259712
L_259716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259717
.p2align 0x4
.long 0x42F3
L_259717:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259712:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x30(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_486160
L_259715:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_259714:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_259689
.p2align 0x4
L_486160:
	movq %r14,%r15
	jmp L_259714
.p2align 0x4
.long 0x42F0
L_259696:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movl 0x520(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259697
L_259701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_259702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259702
.p2align 0x4
.long 0x42F1
L_259702:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_259697:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x30(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_486162
L_259700:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_259699:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x280(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x288(%rbp)
	jmp L_259674
.p2align 0x4
L_486162:
	movq %r14,%r15
	jmp L_259699
.p2align 0x4
.long 0x42C1
L_259474:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259475
L_259578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259579
.p2align 0x4
.long 0x42D8
L_259579:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259475:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259476:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_257189
L_259477:
	cmpq $0x1,%r14
	je L_486164
L_259478:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259476
.p2align 0x4
L_486164:
L_259479:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259480
L_259576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259577
.p2align 0x4
.long 0x42D7
L_259577:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259480:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486165
L_259481:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_259482:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486165:
L_259575:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259482
.p2align 0x4
.long 0x42C6
L_259507:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259508
L_259561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259562
.p2align 0x4
.long 0x42D2
L_259562:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259508:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x109A8)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x42A2
L_259351:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259352
L_259455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259456
.p2align 0x4
.long 0x42BA
L_259456:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259352:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259353:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_257189
L_259354:
	cmpq $0x1,%r14
	je L_486170
L_259355:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259353
.p2align 0x4
L_486170:
L_259356:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259357
L_259453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259454
.p2align 0x4
.long 0x42B9
L_259454:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259357:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486171
L_259358:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_259359:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486171:
L_259452:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259359
.p2align 0x4
.long 0x42A7
L_259384:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259385
L_259438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259439
.p2align 0x4
.long 0x42B4
L_259439:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259385:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x109A8)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4287
L_259253:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	movq %r15,0x520(%rbp)
	addq $0x520,%rbp
	leaq (L_259254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x428D
L_259278:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259279
L_259314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259315
.p2align 0x4
.long 0x4297
L_259315:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259279:
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x498(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x419E
L_257442:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_486182
L_257444:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_257445:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_257446
L_257456:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_257446
L_257457:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_257446
L_257459:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_257153
L_257461:
	testl %r11d,%r11d
	jnz L_486177
L_257463:
	movq 0x68(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x508,%rbp
	leaq (L_257464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp canUnify_0
.p2align 0x4
L_486177:
L_257446:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486182:
L_257443:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1500)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x417E
L_257425:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x417F
L_257478:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257158
L_257479:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x417E
L_257490:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257491
L_257494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257495
.p2align 0x4
.long 0x4199
L_257495:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257491:
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257402
L_257492:
	movq $0x1B15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x448(%rbp),%r15
	movq %r15,0x8(%r13)
	jmp L_257163
.p2align 0x4
.long 0x4181
L_257249:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
L_257250:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_257269
L_257251:
	movb 0x59(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	jmp L_257252
.p2align 0x4
.long 0x4187
L_257259:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257260
L_257261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257262
.p2align 0x4
.long 0x4188
L_257262:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257260:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x418D
L_257298:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_257271
.p2align 0x4
.long 0x4181
L_257208:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_257210
.p2align 0x4
.long 0x4198
L_257384:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
L_257385:
	movq 0x460(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x4272
L_259123:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259125
.p2align 0x4
.long 0x4276
L_259163:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259165
.p2align 0x4
.long 0x41E2
L_257977:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257978
L_257979:
	movl %r13d,0x0(%r14)
	movq %r15,0x528(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x540(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x548(%rbp)
	addq $0x528,%rbp
	leaq (L_257980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41DF
L_258632:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258633
L_258641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_258642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258642
.p2align 0x4
.long 0x424E
L_258642:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_258633:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_258615
L_258634:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x520(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x530(%rbp)
	movl $0x2,0x538(%rbp)
	addq $0x530,%rbp
	leaq (L_258635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x41E3
L_258650:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
	movq 0x530(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_258651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x41EE
L_258099:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258100
L_258447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_258448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258448
.p2align 0x4
.long 0x423C
L_258448:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_258100:
	movq 0x550(%rbp),%r15
	cmpq $0x1,%r15
	je L_486198
L_258101:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x251B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x560(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x510(%rbp)
L_258102:
	movq 0x508(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_257512
L_258104:
	movl %r13d,0x5A0(%rbp)
	movq $0x382B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x598(%rbp)
	addq $0x598,%rbp
	leaq (L_258105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_486198:
L_258425:
	movq 0x560(%rbp),%r14
	movq %r14,0x598(%rbp)
	addq $0x598,%rbp
	leaq (L_258426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x423D
L_258450:
	addq $0xFFFFFFFFFFFFFA48,%rbp
	movq 0x5B8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258451
L_258457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5C0,%rbp
	leaq (L_258458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258458
.p2align 0x4
.long 0x423E
L_258458:
	addq $0xFFFFFFFFFFFFFA40,%rbp
L_258451:
	movq 0x5B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_486200
L_258452:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq 0x598(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x5A0(%rbp),%r11
	movq %r11,%r9
	imulq $0x18,%r9
	movq 0x5A8(%rbp),%r8
	movq %r8,0x8(%r15,%r9,1)
	movq %r15,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,%r10
	imulq $0x18,%r10
	movq %r14,0x10(%r15,%r10,1)
	movq %r11,%r14
	imulq $0x18,%r14
	movb %r13b,0x0(%r15,%r14,1)
	incq %r11
	movq %r11,0x5A0(%rbp)
	jmp loop_3028
.p2align 0x4
L_486200:
L_258453:
	movq $0x1ACB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x558(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r13,%r15
L_258454:
	cmpq %r15,0x558(%rbp)
	je L_258430
L_258455:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x419A
L_258459:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r14
L_258460:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_486204
L_258462:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xD65,%r15
	jne L_486203
L_258463:
	movq %r14,%r13
	movq 0x0(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
	jmp L_258454
.p2align 0x4
L_486203:
	movq %r14,%r15
L_258461:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486204:
	movq %r14,%r15
	jmp L_258461
.p2align 0x4
.long 0x41EC
L_258467:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq $0x1,%r15
	je L_258430
L_258468:
	movq 0x8(%r15),%r14
	movq %r14,0x558(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x186(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258469
.p2align 0x4
.long 0x423F
L_258469:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3038:
	cmpq $0x1,%r15
	jnl L_486205
L_258471:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	imulq $0x18,%r13
	movq 0x590(%rbp),%r9
	movq %r9,0x8(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	imulq $0x18,%r11
	movq 0x558(%rbp),%r13
	movq %r13,0x10(%r14,%r11,1)
	imulq $0x18,%r10
	movb 0x186(%rbp),%r13b
	movb %r13b,0x0(%r14,%r10,1)
	incq %r15
	jmp loop_3038
.p2align 0x4
L_486205:
L_258470:
	movq $0x9DF,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x508(%rbp)
	jmp L_258098
.p2align 0x4
.long 0x4239
L_258432:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257189
L_258433:
	movl %r13d,0x0(%r14)
	movq %r15,0x598(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	addq $0x598,%rbp
	leaq (L_258434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41D0
L_257915:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x4F0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp etaExtraNoWrap_0
.p2align 0x4
.long 0x41CE
L_257909:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp newNoname_6
.p2align 0x4
.long 0x41D8
L_257944:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x508(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x508,%rbp
	leaq (L_257945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x41AE
L_257720:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257721
L_257776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257777
.p2align 0x4
.long 0x41BE
L_257777:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257721:
	movq (globalObjptr+0x1610)(%rip),%r13
	movq (globalObjptr+0x1608)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257775
L_257722:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257723
.p2align 0x4
.long 0x41C1
L_257793:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_486216
L_257795:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_257796:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_257797
L_257807:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_257797
L_257808:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_257797
L_257810:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_257713
L_257812:
	testl %r11d,%r11d
	jnz L_486211
L_257814:
	movq 0x58(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486211:
L_257797:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486216:
L_257794:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1500)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41AE
L_257850:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41AF
L_257861:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257718
L_257862:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41AE
L_257873:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257874
L_257877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257878
.p2align 0x4
.long 0x41BE
L_257878:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257874:
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257775
L_257875:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257723
.p2align 0x4
.long 0x41B5
L_257740:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movl 0x4F0(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257741
L_257751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257752
.p2align 0x4
.long 0x41BB
L_257752:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257741:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x54(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x4F0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movb 0x50(%rbp),%r15b
	movb %r15b,0x500(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkSymbol_0
.p2align 0x4
.long 0x41B3
L_257736:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257189
L_257737:
	movl %r13d,0x0(%r14)
	movq %r15,0x4F0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41B0
L_257766:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
L_257767:
	movq 0x460(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x43C0
L_260772:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	movq 0x538(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq %r15,0x538(%rbp)
	addq $0x538,%rbp
	leaq (L_260773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x42DC
L_260882:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x518(%rbp)
	movl $0x1,0x528(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_260883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x438D
L_260477:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260478
L_260529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260530
.p2align 0x4
.long 0x4399
L_260530:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260478:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260479:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_257189
L_260480:
	cmpq $0x1,%r14
	je L_486223
L_260481:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260479
.p2align 0x4
L_486223:
L_260482:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260483
L_260527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260528
.p2align 0x4
.long 0x4398
L_260528:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260483:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486224
L_260484:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_260485:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486224:
L_260526:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260485
.p2align 0x4
.long 0x43A0
L_260550:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260551
L_260597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260598
.p2align 0x4
.long 0x43A9
L_260598:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260551:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10A48)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x437C
L_260391:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260392
L_260435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260436
.p2align 0x4
.long 0x4381
L_260436:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260392:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486230
L_260393:
	decl %ecx
	jo L_257189
L_260394:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
L_260395:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486230:
L_260434:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260395
.p2align 0x4
.long 0x4356
L_260145:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movq 0x500(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260146
L_260173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260174
.p2align 0x4
.long 0x435C
L_260174:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260146:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260147:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_257189
L_260148:
	cmpq $0x1,%r14
	je L_486232
L_260149:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260147
.p2align 0x4
L_486232:
L_260150:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260151
L_260171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260172
.p2align 0x4
.long 0x435B
L_260172:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260151:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486233
L_260152:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_260153:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x500(%rbp)
	addq $0x500,%rbp
	leaq (L_260154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486233:
L_260170:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260153
.p2align 0x4
.long 0x433A
L_260017:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260018
L_260051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260052
.p2align 0x4
.long 0x4342
L_260052:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260018:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486238
L_260019:
	decl %ecx
	jo L_257189
L_260020:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_260021:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_260022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486238:
L_260050:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260021
.p2align 0x4
.long 0x431D
L_259873:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259874
L_259974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259975
.p2align 0x4
.long 0x4330
L_259975:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259874:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259875:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_259876:
	cmpq $0x1,%r14
	je L_486240
L_259877:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259875
.p2align 0x4
L_486240:
L_259878:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259879
L_259972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259973
.p2align 0x4
.long 0x4331
L_259973:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259879:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486241
L_259880:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_259881:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486241:
L_259971:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259881
.p2align 0x4
.long 0x4323
L_259919:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl $0x1,0x518(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x518,%rbp
	leaq (L_259920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x430A
L_259787:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259788
L_259835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259836
.p2align 0x4
.long 0x4312
L_259836:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259788:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259789:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_257189
L_259790:
	cmpq $0x1,%r14
	je L_486245
L_259791:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259789
.p2align 0x4
L_486245:
L_259792:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259793
L_259833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259834
.p2align 0x4
.long 0x4311
L_259834:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259793:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486246
L_259794:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_259795:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x4F0(%rbp)
	addq $0x4F0,%rbp
	leaq (L_259796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486246:
L_259832:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259795
.p2align 0x4
.long 0x42E1
L_259605:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl $0x1,0x528(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_259606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x42E7
L_259630:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259631
L_259742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259743
.p2align 0x4
.long 0x42FA
L_259743:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259631:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259632:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_259633:
	cmpq $0x1,%r14
	je L_486250
L_259634:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259632
.p2align 0x4
L_486250:
L_259635:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259636
L_259740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259741
.p2align 0x4
.long 0x42FB
L_259741:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259636:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486251
L_259637:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_259638:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x109D0)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486251:
L_259739:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259638
.p2align 0x4
.long 0x42C2
L_259483:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl $0x1,0x510(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_259484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x42C7
L_259509:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259510
L_259559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259560
.p2align 0x4
.long 0x42D1
L_259560:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259510:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259511:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_259512:
	cmpq $0x1,%r14
	je L_486255
L_259513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259511
.p2align 0x4
L_486255:
L_259514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259515
L_259557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259558
.p2align 0x4
.long 0x42D0
L_259558:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259515:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486256
L_259516:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_259517:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486256:
L_259556:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259517
.p2align 0x4
.long 0x42A3
L_259360:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl $0x1,0x510(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_259361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x42A8
L_259386:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259387
L_259436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259437
.p2align 0x4
.long 0x42B3
L_259437:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259387:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259388:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_259389:
	cmpq $0x1,%r14
	je L_486260
L_259390:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259388
.p2align 0x4
L_486260:
L_259391:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259392
L_259434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259435
.p2align 0x4
.long 0x42B2
L_259435:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259392:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486261
L_259393:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_259394:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486261:
L_259433:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259394
.p2align 0x4
.long 0x4287
L_259254:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq 0x520(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259255
L_259329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_259330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259330
.p2align 0x4
.long 0x4250
L_259330:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_259255:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x518(%rbp)
	addq $0x18,%r12
	movq 0x508(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259256:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_257189
L_259257:
	cmpq $0x1,%r14
	je L_486265
L_259258:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259256
.p2align 0x4
L_486265:
L_259259:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259260
L_259327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259328
.p2align 0x4
.long 0x429B
L_259328:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259260:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486266
L_259261:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
L_259262:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x4F0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x520(%rbp)
	addq $0x520,%rbp
	leaq (L_259263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486266:
L_259326:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259262
.p2align 0x4
.long 0x428E
L_259280:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259281
L_259312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259313
.p2align 0x4
.long 0x4296
L_259313:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259281:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x58(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259282
.p2align 0x4
.long 0x428F
L_259282:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3047:
	cmpq $0x2,%r15
	jnl L_486272
L_259308:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486271
	cmpl $0x1,%r14d
	je L_486270
	jmp L_258351
.p2align 0x4
L_486270:
L_259311:
	movq 0x50(%rbp),%r14
L_259310:
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3047
.p2align 0x4
L_486271:
L_259309:
	movq 0x38(%rbp),%r14
	jmp L_259310
.p2align 0x4
L_486272:
L_259283:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259284
L_259306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259307
.p2align 0x4
.long 0x4295
L_259307:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259284:
	movq 0x40(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259285
.p2align 0x4
.long 0x4290
L_259285:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq %rax,0x78(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3048:
	cmpq $0x2,%r15
	jnl L_486275
L_259302:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486274
	cmpl $0x1,%r14d
	je L_486273
	jmp L_258351
.p2align 0x4
L_486273:
L_259305:
	movq 0x70(%rbp),%r14
	movq 0x498(%rbp),%r13
L_259304:
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x78(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x18,%r11
	movq %r14,0x0(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r10
	movq $0x1,0x8(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r9
	movq %r13,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_3048
.p2align 0x4
L_486274:
L_259303:
	movq 0x68(%rbp),%r14
	movq 0x60(%rbp),%r13
	jmp L_259304
.p2align 0x4
L_486275:
L_259286:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259287
L_259300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259301
.p2align 0x4
.long 0x4294
L_259301:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259287:
	movq 0x78(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x40,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x10,%r10d
	orl %r10d,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x18,%r10d
	orl %r10d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10998)(%rip),%r13
	movq %r13,0x8(%r14)
	movq $0x3,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq %r15,0x28(%r14)
	movq 0x500(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x63B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x410(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x60(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D1,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259288
.p2align 0x4
.long 0x4291
L_259288:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3049:
	cmpq $0x1,%r15
	jnl L_486276
L_259299:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x58(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_3049
.p2align 0x4
L_486276:
L_259289:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259290
L_259297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259298
.p2align 0x4
.long 0x4293
L_259298:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259290:
	movq 0x58(%rbp),%r15
	movq $0xB33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x20C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x60(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149B,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259291
.p2align 0x4
.long 0x4292
L_259291:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3050:
	cmpq $0x1,%r15
	jnl L_486277
L_259296:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3050
.p2align 0x4
L_486277:
L_259292:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259293
L_259294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259295
.p2align 0x4
.long 0x4293
L_259295:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259293:
	movq 0x58(%rbp),%r15
	movq $0x80F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D1D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x419F
L_257464:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_486283
L_257465:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486283:
L_257475:
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_257166
.p2align 0x4
.long 0x417E
L_257447:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x417F
L_257426:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257158
L_257427:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x417E
L_257480:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257481
L_257484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257485
.p2align 0x4
.long 0x4199
L_257485:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257481:
	movq (globalObjptr+0x1610)(%rip),%r13
	movq (globalObjptr+0x1608)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257402
L_257482:
	movq $0x1B15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x448(%rbp),%r15
	movq %r15,0x8(%r13)
	jmp L_257163
.p2align 0x4
.long 0x4181
L_257386:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpl $0x8,%r15d
	je L_486293
	cmpl $0x10,%r15d
	je L_486291
	cmpl $0x20,%r15d
	je L_486289
	cmpl $0x40,%r15d
	je L_486287
L_257387:
	movq (globalObjptr+0x18E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486287:
L_257397:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_486288
L_257398:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x60(%rbp)
	movb $0x0,0x61(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_257170
.p2align 0x4
L_486288:
L_257399:
	movb $0x0,0x58(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_257175
.p2align 0x4
L_486289:
L_257394:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_486290
L_257395:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x60(%rbp)
	movb $0x1,0x61(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_257170
.p2align 0x4
L_486290:
L_257396:
	movb $0x1,0x58(%rbp)
	movq $0x1,%r13
	movq %r13,%r15
	jmp L_257175
.p2align 0x4
L_486291:
L_257391:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_486292
L_257392:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x60(%rbp)
	movb $0x2,0x61(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_257170
.p2align 0x4
L_486292:
L_257393:
	movb $0x2,0x58(%rbp)
	movq $0x1,%r13
	movq %r13,%r15
	jmp L_257175
.p2align 0x4
L_486293:
L_257388:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_486294
L_257389:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x60(%rbp)
	movb $0x3,0x61(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_257170
.p2align 0x4
L_486294:
L_257390:
	movb $0x3,0x58(%rbp)
	movq $0x1,%r13
	movq %r13,%r15
	jmp L_257175
.p2align 0x4
.long 0x41DF
L_257980:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257981
L_258616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_258617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258617
.p2align 0x4
.long 0x424E
L_258617:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_257981:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_258615
L_257982:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x520(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x530(%rbp)
	movl $0x2,0x538(%rbp)
	addq $0x530,%rbp
	leaq (L_257983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x41E3
L_258635:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
	movq 0x530(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_258636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x41DF
L_258651:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258652
L_258653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_258654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258654
.p2align 0x4
.long 0x424D
L_258654:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_258652:
	movq $0x1417,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x1935,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	jmp L_257986
.p2align 0x4
.long 0x41EF
L_258105:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258106
L_258423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_258424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258424
.p2align 0x4
.long 0x4236
L_258424:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_258106:
	movq 0x510(%rbp),%r14
	cmpq $0x1,%r14
	je L_486299
L_258107:
	movzbw 0x0(%r14),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
L_258108:
	movq (globalObjptr+0x5040)(%rip),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_257189
L_258109:
	movl %r13d,0x0(%r14)
	movq $0x12CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl %r11d,0x0(%r14)
	movzwl %r15w,%r13d
	movzbl 0x185(%rbp),%r15d
	shll $0x10,%r15d
	orl %r15d,%r13d
	movzbl 0x184(%rbp),%r15d
	movl %r11d,0x184(%rbp)
	shll $0x18,%r15d
	orl %r15d,%r13d
	movl %r13d,0x4(%r14)
	movq 0x500(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x548(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x570(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1CDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x510(%rbp),%r15
	movq %r15,0x500(%rbp)
L_258110:
	movq (globalObjptr+0xD590)(%rip),%r15
	movq %r15,0x598(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x598,%rbp
	leaq (L_258111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_486299:
L_258422:
	xorw %r15w,%r15w
	jmp L_258108
.p2align 0x4
.long 0x4237
L_258426:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258427
L_258445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_258446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258446
.p2align 0x4
.long 0x423B
L_258446:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_258427:
	movq 0x550(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_257731
L_258428:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_258429:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_258430
L_258437:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_258430
L_258438:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_258430
L_258440:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_257512
L_258442:
	testl %r11d,%r11d
	jnz L_258430
L_258444:
	movq $0x1,0x510(%rbp)
	jmp L_258102
.p2align 0x4
.long 0x423A
L_258434:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
L_258435:
	movq (globalObjptr+0x5048)(%rip),%r15
	movq $0x9DF,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1,0x500(%rbp)
	movq %r15,0x508(%rbp)
	movl $0x0,0x184(%rbp)
	jmp L_258110
.p2align 0x4
.long 0x41D1
L_257916:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257917
L_257923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257924
.p2align 0x4
.long 0x41D5
L_257924:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257917:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x2B8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x70(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x4F0(%rbp)
	movl $0x2,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x41D9
L_257945:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257946
L_257950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257951
.p2align 0x4
.long 0x41DA
L_257951:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257946:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257947
.p2align 0x4
.long 0x41C2
L_257815:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_486316
L_257817:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_257818:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_257819
L_257829:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_257819
L_257830:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_257819
L_257832:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_257713
L_257834:
	testl %r11d,%r11d
	jnz L_486311
L_257836:
	movq 0x60(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x508,%rbp
	leaq (L_257837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp canUnify_0
.p2align 0x4
L_486311:
L_257819:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486316:
L_257816:
	movq 0x4E0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1500)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41AE
L_257798:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41AF
L_257851:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257718
L_257852:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41AE
L_257863:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257864
L_257867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257868
.p2align 0x4
.long 0x41BE
L_257868:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257864:
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257775
L_257865:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257723
.p2align 0x4
.long 0x41B6
L_257742:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257743
L_257749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257750
.p2align 0x4
.long 0x41BA
L_257750:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257743:
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x28,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x0(%r13),%r15
	movq 0x2B8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x70(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,0x4F0(%rbp)
	movl $0x2,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x41B4
L_257738:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp newNoname_5
.p2align 0x4
.long 0x41BD
L_257768:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpl $0x8,%r15d
	je L_486325
	cmpl $0x10,%r15d
	je L_486324
	cmpl $0x20,%r15d
	je L_486323
	cmpl $0x40,%r15d
	je L_486322
	jmp L_257387
.p2align 0x4
L_486322:
L_257772:
	movb $0x0,0x50(%rbp)
	jmp L_257729
.p2align 0x4
L_486323:
L_257771:
	movb $0x1,0x50(%rbp)
	jmp L_257729
.p2align 0x4
L_486324:
L_257770:
	movb $0x2,0x50(%rbp)
	jmp L_257729
.p2align 0x4
L_486325:
L_257769:
	movb $0x3,0x50(%rbp)
	jmp L_257729
.p2align 0x4
.long 0x43C0
L_260773:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	movq 0x538(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260774
L_260793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x540,%rbp
	leaq (L_260794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260794
.p2align 0x4
.long 0x43C3
L_260794:
	addq $0xFFFFFFFFFFFFFAC0,%rbp
L_260774:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x530(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x538(%rbp)
	addq $0x18,%r12
	movq 0x528(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260775:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50C(%rbp)
	jo L_257189
L_260776:
	cmpq $0x1,%r14
	je L_486326
L_260777:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260775
.p2align 0x4
L_486326:
L_260778:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260779
L_260791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_260792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260792
.p2align 0x4
.long 0x43C2
L_260792:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_260779:
	movl 0x50C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486328
L_260780:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x538(%rbp),%r14
	movq %r14,0x0(%r15)
L_260781:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260782:
	movl %r13d,0x0(%r15)
	movq 0x520(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq %r14,0x520(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x538(%rbp)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x540(%rbp)
	addq $0x520,%rbp
	leaq (L_260783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486328:
L_260790:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260781
.p2align 0x4
.long 0x41E2
L_260883:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_260884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x438E
L_260486:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260487
L_260524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260525
.p2align 0x4
.long 0x4397
L_260525:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260487:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486333
L_260488:
	decl %ecx
	jo L_257189
L_260489:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_260490:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486333:
L_260523:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260490
.p2align 0x4
.long 0x43A1
L_260552:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260553
L_260595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260596
.p2align 0x4
.long 0x43A8
L_260596:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260553:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260554:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_257189
L_260555:
	cmpq $0x1,%r14
	je L_486335
L_260556:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260554
.p2align 0x4
L_486335:
L_260557:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260558
L_260593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260594
.p2align 0x4
.long 0x43A7
L_260594:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260558:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486336
L_260559:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_260560:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486336:
L_260592:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260560
.p2align 0x4
.long 0x437D
L_260396:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl $0x1,0x510(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_260397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4357
L_260154:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	movl 0x500(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x508(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260155
L_260168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260169
.p2align 0x4
.long 0x435A
L_260169:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260155:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486342
L_260156:
	decl %ecx
	jo L_257189
L_260157:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_260158:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260159:
	movl %r13d,0x0(%r15)
	movq %r14,0x500(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x518(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x500,%rbp
	leaq (L_260160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486342:
L_260167:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260158
.p2align 0x4
.long 0x433B
L_260022:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x508(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x508,%rbp
	leaq (L_260023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x431E
L_259882:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movl 0x518(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259883
L_259969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259970
.p2align 0x4
.long 0x432E
L_259970:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259883:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486345
L_259884:
	decl %ecx
	jo L_257189
L_259885:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
L_259886:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486345:
L_259968:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259886
.p2align 0x4
.long 0x4324
L_259920:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x430B
L_259796:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movl 0x4F0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259797
L_259830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259831
.p2align 0x4
.long 0x4310
L_259831:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259797:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486349
L_259798:
	decl %ecx
	jo L_257189
L_259799:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_259800:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259801:
	movl %r13d,0x0(%r15)
	movq %r14,0x4F0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x4F0,%rbp
	leaq (L_259802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486349:
L_259829:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259800
.p2align 0x4
.long 0x42E2
L_259606:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x42E8
L_259639:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259640
L_259737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259738
.p2align 0x4
.long 0x42FA
L_259738:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259640:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259641:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_257189
L_259642:
	cmpq $0x1,%r14
	je L_486351
L_259643:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259641
.p2align 0x4
L_486351:
L_259644:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259645
L_259735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259736
.p2align 0x4
.long 0x42F9
L_259736:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259645:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486352
L_259646:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_259647:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486352:
L_259734:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259647
.p2align 0x4
.long 0x42C3
L_259484:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x42C8
L_259518:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl $0x1,0x510(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_259519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x42A4
L_259361:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x42A9
L_259395:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl $0x1,0x510(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_259396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4288
L_259263:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movl 0x520(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259264
L_259324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_259325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259325
.p2align 0x4
.long 0x429A
L_259325:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_259264:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486358
L_259265:
	decl %ecx
	jo L_257189
L_259266:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x4E8(%rbp),%r14
	movq %r14,0x8(%r15)
L_259267:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259268:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq %r14,0x510(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_259269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486358:
L_259323:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259267
.p2align 0x4
.long 0x417E
L_257466:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x417F
L_257448:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257158
L_257449:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x417E
L_257428:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257429
L_257432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257433
.p2align 0x4
.long 0x4199
L_257433:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257429:
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257402
L_257430:
	movq $0x1B15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x448(%rbp),%r15
	movq %r15,0x8(%r13)
	jmp L_257163
.p2align 0x4
.long 0x41E3
L_257983:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
	movq 0x530(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_257984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x41DF
L_258636:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258637
L_258638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_258639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258639
.p2align 0x4
.long 0x424D
L_258639:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_258637:
	movq $0x1417,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x1935,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	jmp L_257986
.p2align 0x4
.long 0x41F0
L_258111:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x510(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258112
L_258420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_258421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258421
.p2align 0x4
.long 0x4235
L_258421:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_258112:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x548(%rbp)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10910)(%rip),%r15
	movq %r15,0x598(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x598,%rbp
	leaq (L_258113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
.long 0x41D2
L_257918:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x4F0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x41C3
L_257837:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_486365
L_257838:
	movq (globalObjptr+0x108D0)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_257839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486365:
L_257848:
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_257726
.p2align 0x4
.long 0x41AE
L_257820:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41AF
L_257799:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257718
L_257800:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41AE
L_257853:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257854
L_257857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257858
.p2align 0x4
.long 0x41BE
L_257858:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257854:
	movq (globalObjptr+0x1610)(%rip),%r13
	movq (globalObjptr+0x1608)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257775
L_257855:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257723
.p2align 0x4
.long 0x41B7
L_257744:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x4F0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F0,%rbp
	leaq (L_257745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4286
L_260783:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_260785
.p2align 0x4
.long 0x41E2
L_260884:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260885
L_260900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_260901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260901
.p2align 0x4
.long 0x43C6
L_260901:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
L_260885:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x520(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x528(%rbp)
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260886:
	addl 0x0(%r15),%ecx
	movl %ecx,0x518(%rbp)
	jo L_257189
L_260887:
	cmpq $0x1,%r14
	je L_486370
L_260888:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260886
.p2align 0x4
L_486370:
L_260889:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260890
L_260898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_260899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260899
.p2align 0x4
.long 0x4373
L_260899:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_260890:
	movl 0x518(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486372
L_260891:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x528(%rbp),%r14
	movq %r14,0x0(%r15)
L_260892:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260893:
	movl %r13d,0x0(%r15)
	movq 0x510(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq %r14,0x510(%rbp)
	movq 0x508(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_260894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486372:
L_260897:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260892
.p2align 0x4
.long 0x438F
L_260491:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl $0x1,0x510(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_260492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x43A2
L_260561:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl $0x1,0x510(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x510,%rbp
	leaq (L_260562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x437E
L_260397:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4358
L_260160:
	addq $0xFFFFFFFFFFFFFB00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260161
L_260165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x500,%rbp
	leaq (L_260166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260166
.p2align 0x4
.long 0x4359
L_260166:
	addq $0xFFFFFFFFFFFFFB00,%rbp
L_260161:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_260163
.p2align 0x4
.long 0x433C
L_260023:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_260024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x431F
L_259887:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl $0x1,0x518(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x518,%rbp
	leaq (L_259888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4324
L_259921:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259922
L_259949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259950
.p2align 0x4
.long 0x432A
L_259950:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259922:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259923:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_259924:
	cmpq $0x1,%r14
	je L_486378
L_259925:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259923
.p2align 0x4
L_486378:
L_259926:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259927
L_259947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259948
.p2align 0x4
.long 0x4329
L_259948:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259927:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486379
L_259928:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_259929:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486379:
L_259946:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259929
.p2align 0x4
.long 0x430C
L_259802:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259803
L_259827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_259828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259828
.p2align 0x4
.long 0x430F
L_259828:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_259803:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259805
.p2align 0x4
.long 0x42E2
L_259607:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259608
L_259756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259757
.p2align 0x4
.long 0x4300
L_259757:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259608:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259609:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_259610:
	cmpq $0x1,%r14
	je L_486385
L_259611:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259609
.p2align 0x4
L_486385:
L_259612:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259613
L_259754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259755
.p2align 0x4
.long 0x42FF
L_259755:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259613:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486386
L_259614:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_259615:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486386:
L_259753:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259615
.p2align 0x4
.long 0x42E9
L_259648:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movl 0x528(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259649
L_259732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259733
.p2align 0x4
.long 0x42F8
L_259733:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259649:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486391
L_259650:
	decl %ecx
	jo L_257189
L_259651:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
L_259652:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486391:
L_259731:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259652
.p2align 0x4
.long 0x42C3
L_259485:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259486
L_259573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259574
.p2align 0x4
.long 0x42D6
L_259574:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259486:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259487:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_257189
L_259488:
	cmpq $0x1,%r14
	je L_486393
L_259489:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259487
.p2align 0x4
L_486393:
L_259490:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259491
L_259571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259572
.p2align 0x4
.long 0x42D5
L_259572:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259491:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486394
L_259492:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_259493:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486394:
L_259570:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259493
.p2align 0x4
.long 0x42C9
L_259519:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x42A4
L_259362:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259363
L_259450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259451
.p2align 0x4
.long 0x42B8
L_259451:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259363:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259364:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_257189
L_259365:
	cmpq $0x1,%r14
	je L_486398
L_259366:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259364
.p2align 0x4
L_486398:
L_259367:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259368
L_259448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259449
.p2align 0x4
.long 0x42B7
L_259449:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259368:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486399
L_259369:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_259370:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486399:
L_259447:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259370
.p2align 0x4
.long 0x42AA
L_259396:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4289
L_259269:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259271
.p2align 0x4
.long 0x417F
L_257467:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257158
L_257468:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x417E
L_257450:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257451
L_257454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257455
.p2align 0x4
.long 0x4199
L_257455:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257451:
	movq (globalObjptr+0x1610)(%rip),%r13
	movq (globalObjptr+0x1608)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257402
L_257452:
	movq $0x1B15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x448(%rbp),%r15
	movq %r15,0x8(%r13)
	jmp L_257163
.p2align 0x4
.long 0x41DF
L_257984:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257985
L_258604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_258605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258605
.p2align 0x4
.long 0x424D
L_258605:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_257985:
	movq $0x1417,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x1935,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	jmp L_257986
.p2align 0x4
.long 0x41F1
L_258113:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x510(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258114
L_258418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_258419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258419
.p2align 0x4
.long 0x4234
L_258419:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_258114:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x550(%rbp)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x510(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x548(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x558(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1BE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x560(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq (globalObjptr+0x10918)(%rip),%r15
	movq %r15,0x598(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x598,%rbp
	leaq (L_258115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
.long 0x41D3
L_257919:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257920
L_257921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257922
.p2align 0x4
.long 0x41D4
L_257922:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257920:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x41AE
L_257839:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_257840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x41AF
L_257821:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257718
L_257822:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41AE
L_257801:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257802
L_257805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257806
.p2align 0x4
.long 0x41BE
L_257806:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257802:
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257775
L_257803:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257723
.p2align 0x4
.long 0x41B8
L_257745:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq 0x4F0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257746
L_257747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_257748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257748
.p2align 0x4
.long 0x41B9
L_257748:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_257746:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4318
L_260894:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_260612
.p2align 0x4
.long 0x4390
L_260492:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x439D
L_260562:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x437E
L_260398:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260399
L_260432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260433
.p2align 0x4
.long 0x4383
L_260433:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260399:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260400:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_257189
L_260401:
	cmpq $0x1,%r14
	je L_486415
L_260402:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260400
.p2align 0x4
L_486415:
L_260403:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260404
L_260430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260431
.p2align 0x4
.long 0x4382
L_260431:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260404:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486416
L_260405:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_260406:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486416:
L_260429:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260406
.p2align 0x4
.long 0x433C
L_260024:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260025
L_260048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260049
.p2align 0x4
.long 0x4341
L_260049:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260025:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260026:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_257189
L_260027:
	cmpq $0x1,%r14
	je L_486420
L_260028:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260026
.p2align 0x4
L_486420:
L_260029:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260030
L_260046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260047
.p2align 0x4
.long 0x4340
L_260047:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260030:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486421
L_260031:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_260032:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_260033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486421:
L_260045:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260032
.p2align 0x4
.long 0x4320
L_259888:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4325
L_259930:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movl 0x518(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259931
L_259944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259945
.p2align 0x4
.long 0x4328
L_259945:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259931:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486427
L_259932:
	decl %ecx
	jo L_257189
L_259933:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
L_259934:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259935:
	movl %r13d,0x0(%r15)
	movq %r14,0x518(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x518,%rbp
	leaq (L_259936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486427:
L_259943:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259934
.p2align 0x4
.long 0x42E3
L_259616:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movl 0x528(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259617
L_259751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259752
.p2align 0x4
.long 0x42FE
L_259752:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259617:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486431
L_259618:
	decl %ecx
	jo L_257189
L_259619:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
L_259620:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259621:
	movl %r13d,0x0(%r15)
	movq %r14,0x528(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x540(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x548(%rbp)
	addq $0x528,%rbp
	leaq (L_259622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486431:
L_259750:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259620
.p2align 0x4
.long 0x42EA
L_259653:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl $0x1,0x528(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_259654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x42C4
L_259494:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259495
L_259568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259569
.p2align 0x4
.long 0x42D4
L_259569:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259495:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486435
L_259496:
	decl %ecx
	jo L_257189
L_259497:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
L_259498:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259499:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_259500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486435:
L_259567:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259498
.p2align 0x4
.long 0x42C9
L_259520:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259521
L_259554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259555
.p2align 0x4
.long 0x42CF
L_259555:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259521:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259522:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_257189
L_259523:
	cmpq $0x1,%r14
	je L_486437
L_259524:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259522
.p2align 0x4
L_486437:
L_259525:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259526
L_259552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259553
.p2align 0x4
.long 0x42CE
L_259553:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259526:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486438
L_259527:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_259528:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486438:
L_259551:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259528
.p2align 0x4
.long 0x42A5
L_259371:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259372
L_259445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259446
.p2align 0x4
.long 0x42B6
L_259446:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259372:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486444
L_259373:
	decl %ecx
	jo L_257189
L_259374:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
L_259375:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259376:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_259377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486444:
L_259444:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259375
.p2align 0x4
.long 0x42AA
L_259397:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259398
L_259431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259432
.p2align 0x4
.long 0x42B1
L_259432:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259398:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259399:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_257189
L_259400:
	cmpq $0x1,%r14
	je L_486446
L_259401:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259399
.p2align 0x4
L_486446:
L_259402:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259403
L_259429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259430
.p2align 0x4
.long 0x42B0
L_259430:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259403:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486447
L_259404:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_259405:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_259406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486447:
L_259428:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259405
.p2align 0x4
.long 0x417E
L_257469:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257470
L_257473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257474
.p2align 0x4
.long 0x4199
L_257474:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257470:
	movq (globalObjptr+0x1610)(%rip),%r13
	movq (globalObjptr+0x1608)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257402
L_257471:
	movq $0x1B15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x448(%rbp),%r15
	movq %r15,0x8(%r13)
	jmp L_257163
.p2align 0x4
.long 0x41F2
L_258115:
	addq $0xFFFFFFFFFFFFFA68,%rbp
	movq 0x598(%rbp),%r15
	movq %r15,0x510(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258116
L_258416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_258417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258417
.p2align 0x4
.long 0x4233
L_258417:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_258116:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x510(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movb $0x0,%r15b
	movzbl %r15b,%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x548(%rbp)
	movslq 0x184(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x2523,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1C0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x568(%rbp)
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x550(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1BE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq %r13,0x570(%rbp)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x590(%rbp)
	movq 0x508(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x598(%rbp)
	cmpq %rdx,%r14
	jne L_257512
L_258118:
	testq %rdx,%rdx
	jz L_486462
L_258119:
	cmpq $0x7FFFFFFF,%rdx
	ja L_258374
L_258120:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_258121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258121
.p2align 0x4
.long 0x41F3
L_258121:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq %rax,0x510(%rbp)
L_258122:
	movq $0x0,0x550(%rbp)
loop_3029:
	movq 0x598(%rbp),%r15
	cmpq %r15,0x550(%rbp)
	jl L_486460
L_258123:
	movq 0x510(%rbp),%r15
	movq $0x1855,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x508(%rbp)
	cmpq %rdx,%r14
	jne L_257512
L_258125:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x184(%rbp)
	je L_486458
L_258126:
	cmpq $0x7FFFFFFF,%rdx
	ja L_258374
L_258127:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x157F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258128
.p2align 0x4
.long 0x41F4
L_258128:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq %rax,0x550(%rbp)
L_258129:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3030:
	cmpq 0x508(%rbp),%r15
	jnl L_486453
L_258376:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x510(%rbp),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq 0x550(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3030
.p2align 0x4
L_486453:
L_258130:
	movq 0x550(%rbp),%r15
	movq $0xB2F,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x184(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_486456
L_258131:
	movq 0x508(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_258374
L_258132:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258133
.p2align 0x4
.long 0x41F5
L_258133:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq %rax,0x580(%rbp)
L_258134:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3031:
	cmpq 0x508(%rbp),%r15
	jnl L_486454
L_258372:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x510(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x580(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3031
.p2align 0x4
L_486454:
L_258135:
	movq 0x580(%rbp),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xE910)(%rip),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_486456:
L_258375:
	movq (globalObjptr+0x5060)(%rip),%r15
	movq %r15,0x580(%rbp)
	jmp L_258134
.p2align 0x4
L_486458:
L_258378:
	movq (globalObjptr+0x5058)(%rip),%r15
	movq %r15,0x550(%rbp)
	jmp L_258129
.p2align 0x4
L_486460:
L_258379:
	movq 0x550(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x184(%rbp)
	movslq %r14d,%r15
	imulq $0x18,%r15
	movq 0x508(%rbp),%r13
	movq 0x10(%r13,%r15,1),%r11
	movq %r11,0x5A0(%rbp)
	movl %r14d,0x5B0(%rbp)
	movq 0x580(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	addq $0x5B0,%rbp
	leaq (L_258380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_486462:
L_258415:
	movq (globalObjptr+0x5050)(%rip),%r15
	movq %r15,0x510(%rbp)
	jmp L_258122
.p2align 0x4
.long 0x41AF
L_257840:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_257718
L_257841:
	movl %r13d,0x0(%r14)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_257842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x41AE
L_257823:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257824
L_257827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257828
.p2align 0x4
.long 0x41BE
L_257828:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257824:
	movq (globalObjptr+0x1610)(%rip),%r13
	movq (globalObjptr+0x1608)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257775
L_257825:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257723
.p2align 0x4
.long 0x4390
L_260493:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260494
L_260521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260522
.p2align 0x4
.long 0x4396
L_260522:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260494:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260495:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_257189
L_260496:
	cmpq $0x1,%r14
	je L_486468
L_260497:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260495
.p2align 0x4
L_486468:
L_260498:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260499
L_260519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260520
.p2align 0x4
.long 0x4395
L_260520:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260499:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486469
L_260500:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_260501:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486469:
L_260518:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260501
.p2align 0x4
.long 0x439D
L_260563:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq 0x510(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260564
L_260590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260591
.p2align 0x4
.long 0x43A6
L_260591:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260564:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260565:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_257189
L_260566:
	cmpq $0x1,%r14
	je L_486473
L_260567:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260565
.p2align 0x4
L_486473:
L_260568:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260569
L_260588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260589
.p2align 0x4
.long 0x43A5
L_260589:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260569:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486474
L_260570:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_260571:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	addq $0x510,%rbp
	leaq (L_260572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486474:
L_260587:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260571
.p2align 0x4
.long 0x437C
L_260407:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260408
L_260427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260428
.p2align 0x4
.long 0x4381
L_260428:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260408:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486480
L_260409:
	decl %ecx
	jo L_257189
L_260410:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
L_260411:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260412:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_260413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486480:
L_260426:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260411
.p2align 0x4
.long 0x433D
L_260033:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260034
L_260043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_260044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260044
.p2align 0x4
.long 0x433F
L_260044:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_260034:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486484
L_260035:
	decl %ecx
	jo L_257189
L_260036:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_260037:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260038:
	movl %r13d,0x0(%r15)
	movq %r14,0x4F0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_260039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486484:
L_260042:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260037
.p2align 0x4
.long 0x4320
L_259889:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq 0x518(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259890
L_259966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259967
.p2align 0x4
.long 0x4330
L_259967:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259890:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259891:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_257189
L_259892:
	cmpq $0x1,%r14
	je L_486486
L_259893:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259891
.p2align 0x4
L_486486:
L_259894:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259895
L_259964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259965
.p2align 0x4
.long 0x432F
L_259965:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259895:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486487
L_259896:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_259897:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x518(%rbp)
	addq $0x518,%rbp
	leaq (L_259898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486487:
L_259963:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259897
.p2align 0x4
.long 0x4326
L_259936:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259937
L_259941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259942
.p2align 0x4
.long 0x4327
L_259942:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259937:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259939
.p2align 0x4
.long 0x42E4
L_259622:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259624
.p2align 0x4
.long 0x42EB
L_259654:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x42BF
L_259500:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259502
.p2align 0x4
.long 0x42CA
L_259529:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259530
L_259549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259550
.p2align 0x4
.long 0x42CD
L_259550:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259530:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486497
L_259531:
	decl %ecx
	jo L_257189
L_259532:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_259533:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259534:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_259535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486497:
L_259548:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259533
.p2align 0x4
.long 0x42A0
L_259377:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259379
.p2align 0x4
.long 0x42AB
L_259406:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259407
L_259426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_259427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259427
.p2align 0x4
.long 0x42AF
L_259427:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_259407:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486502
L_259408:
	decl %ecx
	jo L_257189
L_259409:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_259410:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259411:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_259412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486502:
L_259425:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259410
.p2align 0x4
.long 0x41F6
L_258136:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258137
L_258370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258371
.p2align 0x4
.long 0x422A
L_258371:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258137:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x510(%rbp)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x508(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x558(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x598(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x550(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x184(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_257512
L_258139:
	movq $0x39E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x5A8(%rbp)
	movl %r13d,0x5B0(%rbp)
	addq $0x5A8,%rbp
	leaq (L_258140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
.long 0x422B
L_258380:
	addq $0xFFFFFFFFFFFFFA50,%rbp
	movq 0x5B0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258381
L_258412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B8,%rbp
	leaq (L_258413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258413
.p2align 0x4
.long 0x4232
L_258413:
	addq $0xFFFFFFFFFFFFFA48,%rbp
L_258381:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x5A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x5B0(%rbp)
	addq $0x5B0,%rbp
	leaq (L_258382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x41AE
L_257842:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_257843
L_257846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_257847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_257847
.p2align 0x4
.long 0x41BE
L_257847:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_257843:
	movq (globalObjptr+0x1608)(%rip),%r13
	movq (globalObjptr+0x1610)(%rip),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_257775
L_257844:
	movq $0x1417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x470(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1935,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	jmp L_257723
.p2align 0x4
.long 0x4391
L_260502:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260503
L_260516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260517
.p2align 0x4
.long 0x4394
L_260517:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260503:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486511
L_260504:
	decl %ecx
	jo L_257189
L_260505:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_260506:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260507:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_260508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486511:
L_260515:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260506
.p2align 0x4
.long 0x439E
L_260572:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movl 0x510(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260573
L_260585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260586
.p2align 0x4
.long 0x43A4
L_260586:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260573:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486515
L_260574:
	decl %ecx
	jo L_257189
L_260575:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
L_260576:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_260577:
	movl %r13d,0x0(%r15)
	movq %r14,0x510(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x528(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x530(%rbp)
	addq $0x510,%rbp
	leaq (L_260578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486515:
L_260584:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260576
.p2align 0x4
.long 0x437F
L_260413:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260414
L_260424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260425
.p2align 0x4
.long 0x4380
L_260425:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260414:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_260416
.p2align 0x4
.long 0x433E
L_260039:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
L_260040:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x431E
L_259898:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movl 0x518(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259899
L_259961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_259962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259962
.p2align 0x4
.long 0x432E
L_259962:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
L_259899:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486522
L_259900:
	decl %ecx
	jo L_257189
L_259901:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
L_259902:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259903:
	movl %r13d,0x0(%r15)
	movq %r14,0x518(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x530(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x518,%rbp
	leaq (L_259904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486522:
L_259960:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259902
.p2align 0x4
.long 0x42EB
L_259655:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259656
L_259729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259730
.p2align 0x4
.long 0x42F7
L_259730:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259656:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_259657:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_257189
L_259658:
	cmpq $0x1,%r14
	je L_486524
L_259659:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_259657
.p2align 0x4
L_486524:
L_259660:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259661
L_259727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259728
.p2align 0x4
.long 0x42F6
L_259728:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259661:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486525
L_259662:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_259663:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x528(%rbp)
	addq $0x528,%rbp
	leaq (L_259664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486525:
L_259726:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259663
.p2align 0x4
.long 0x42CB
L_259535:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259537
.p2align 0x4
.long 0x42AC
L_259412:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259414
.p2align 0x4
.long 0x41F7
L_258140:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq %r15,0x5A8(%rbp)
	addq $0x5A8,%rbp
	leaq (L_258141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_8
.p2align 0x4
.long 0x422B
L_258382:
	addq $0xFFFFFFFFFFFFFA50,%rbp
	movq 0x5B0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq %r15,0x5B0(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	addq $0x5B0,%rbp
	leaq (L_258383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
.long 0x4392
L_260508:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260509
L_260513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260514
.p2align 0x4
.long 0x4393
L_260514:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260509:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_260511
.p2align 0x4
.long 0x439F
L_260578:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260579
L_260582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x510,%rbp
	leaq (L_260583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260583
.p2align 0x4
.long 0x43A3
L_260583:
	addq $0xFFFFFFFFFFFFFAF0,%rbp
L_260579:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_257301
L_260580:
	movq 0x50(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	jmp L_260462
.p2align 0x4
.long 0x4321
L_259904:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_259906
.p2align 0x4
.long 0x42EC
L_259664:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movl 0x528(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259665
L_259724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259725
.p2align 0x4
.long 0x42F5
L_259725:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259665:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486538
L_259666:
	decl %ecx
	jo L_257189
L_259667:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
L_259668:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_259669:
	movl %r13d,0x0(%r15)
	movq %r14,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x540(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x548(%rbp)
	addq $0x528,%rbp
	leaq (L_259670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486538:
L_259723:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_259668
.p2align 0x4
.long 0x41F7
L_258141:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258142
L_258368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_258369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258369
.p2align 0x4
.long 0x4229
L_258369:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_258142:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x598(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x508(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%r15),%r13
	movq 0x4F8(%rbp),%r15
	cmpq $0x1,%r15
	je L_486541
L_258143:
	movq 0x0(%r15),%r11
	cmpq $0x1,%r13
	je L_486540
L_258144:
	movq 0x8(%r13),%r15
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_258145:
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x508(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x10920)(%rip),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_486540:
L_258366:
	movq 0x4F8(%rbp),%r15
	jmp L_258145
.p2align 0x4
L_486541:
	xchgq %r13,%r15
	jmp L_258145
.p2align 0x4
.long 0x422B
L_258383:
	addq $0xFFFFFFFFFFFFFA50,%rbp
	movq 0x5B0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258384
L_258410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B8,%rbp
	leaq (L_258411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258411
.p2align 0x4
.long 0x4232
L_258411:
	addq $0xFFFFFFFFFFFFFA48,%rbp
L_258384:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x5B0(%rbp)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x5A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10948)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x5C0(%rbp)
	addq $0x5C0,%rbp
	leaq (L_258385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x42ED
L_259670:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259671
L_259721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_259722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259722
.p2align 0x4
.long 0x42F4
L_259722:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_259671:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp x_869
.p2align 0x4
.long 0x41F8
L_258146:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258147
L_258364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258365
.p2align 0x4
.long 0x4228
L_258365:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258147:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x558(%rbp)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x550(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x500(%rbp),%r15
	cmpq $0x1,%r15
	je L_486546
L_258148:
	movq 0x8(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10928)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_486546:
L_258363:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq 0x510(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1C03,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq 0x588(%rbp),%r13
	movq %r13,0x8(%r11)
	movq %r11,0x550(%rbp)
	movq %r14,0x500(%rbp)
L_258158:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258159
L_258355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258356
.p2align 0x4
.long 0x4226
L_258356:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258159:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x500(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x550(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x570(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1857,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258160
.p2align 0x4
.long 0x41FC
L_258160:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq %rax,0x500(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3032:
	cmpq $0x2,%r15
	jnl L_486549
L_258350:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486548
	cmpl $0x1,%r14d
	je L_486547
	jmp L_258351
.p2align 0x4
L_486547:
L_258354:
	movq 0x570(%rbp),%r14
	movq 0x558(%rbp),%r13
L_258353:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x500(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x0(%r9,%r11,1)
	movq %r9,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r10
	movq %r13,0x8(%r9,%r10,1)
	incq %r15
	jmp loop_3032
.p2align 0x4
L_486548:
L_258352:
	movq 0x508(%rbp),%r14
	movq 0x510(%rbp),%r13
	jmp L_258353
.p2align 0x4
L_486549:
L_258161:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258162
L_258348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258349
.p2align 0x4
.long 0x41FD
L_258349:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258162:
	movq 0x500(%rbp),%r15
	movq $0x1859,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x2,%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258163
.p2align 0x4
.long 0x41FD
L_258163:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq %rax,0x508(%rbp)
	movq $0x0,0x510(%rbp)
loop_3033:
	cmpq $0x2,0x510(%rbp)
	jl L_486550
L_258164:
	movq 0x508(%rbp),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x265D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x265D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x580(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_9
.p2align 0x4
L_486550:
L_258338:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258339
L_258346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258347
.p2align 0x4
.long 0x4225
L_258347:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258339:
	movq 0x510(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x500(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x550(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x145,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1BE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r14)
	movq %r14,0x558(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258340
.p2align 0x4
.long 0x4223
L_258340:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq %rax,0x570(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3036:
	cmpq $0x1,%r15
	jnl L_486551
L_258345:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x570(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x558(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x550(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_3036
.p2align 0x4
L_486551:
L_258341:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258342
L_258343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258344
.p2align 0x4
.long 0x4224
L_258344:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258342:
	movq 0x570(%rbp),%r15
	movq $0xB2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0x17E8)(%rip),%r14
	movq $0xB2D,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq (globalObjptr+0xF60)(%rip),%r14
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x508(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x510(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x510(%rbp)
	jmp loop_3033
.p2align 0x4
.long 0x422C
L_258385:
	addq $0xFFFFFFFFFFFFFA40,%rbp
	movq 0x5C0(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq %r15,0x5C0(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	addq $0x5C0,%rbp
	leaq (L_258386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
.long 0x41F9
L_258149:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq %r15,0x5A0(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
.long 0x41FE
L_258165:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq $0x1,0x5A0(%rbp)
	movl $0x0,0x5A8(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
.long 0x422C
L_258386:
	addq $0xFFFFFFFFFFFFFA40,%rbp
	movq 0x5C0(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258387
L_258408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5C0,%rbp
	leaq (L_258409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258409
.p2align 0x4
.long 0x422F
L_258409:
	addq $0xFFFFFFFFFFFFFA40,%rbp
L_258387:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x5A0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movb $0x0,%r15b
	movzbl %r15b,%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x5A8(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x570(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movl 0x184(%rbp),%r15d
	incl %r15d
	jo L_257189
L_258388:
	movslq %r15d,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq $0x2523,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x1C0B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x39DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x5C0(%rbp)
	addq $0x18,%r12
	movl $0x2,0x5C8(%rbp)
	addq $0x5C0,%rbp
	leaq (L_258389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
.long 0x41FA
L_258150:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x500(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258151
L_258361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258362
.p2align 0x4
.long 0x4227
L_258362:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258151:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x500(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movb $0x0,%r15b
	movzbl %r15b,%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x550(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x570(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movl 0x184(%rbp),%r15d
	incl %r15d
	jo L_257189
L_258152:
	movslq %r15d,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq $0x2523,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x1C0B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x143,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq $0x1,0x0(%r11)
	movq 0x510(%rbp),%r10
	movq %r10,0x8(%r11)
	movq $0x145,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x8(%r11)
	addq $0x18,%r12
	movb $0x0,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x13D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq $0x39CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r10,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r14,0x5A0(%rbp)
	addq $0x20,%r12
	movl $0x3,0x5A8(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
.long 0x41FF
L_258166:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq %r15,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_8
.p2align 0x4
.long 0x422D
L_258389:
	addq $0xFFFFFFFFFFFFFA40,%rbp
	movq 0x5C0(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq %r15,0x5C0(%rbp)
	addq $0x5C0,%rbp
	leaq (L_258390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_8
.p2align 0x4
.long 0x41FB
L_258153:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq %r15,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_258154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_8
.p2align 0x4
.long 0x41FF
L_258167:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x508(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258168
L_258336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258337
.p2align 0x4
.long 0x4222
L_258337:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258168:
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x500(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1C0F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x508(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r15,0x0(%r14)
	movq %r14,0x510(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258169
.p2align 0x4
.long 0x4200
L_258169:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq %rax,0x500(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3034:
	cmpq $0x1,%r15
	jnl L_486561
L_258335:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x500(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x510(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x590(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_3034
.p2align 0x4
L_486561:
L_258170:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258171
L_258333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_258334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258334
.p2align 0x4
.long 0x4221
L_258334:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_258171:
	movq 0x500(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_486563
L_258172:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r11
	je L_486562
L_258173:
	movq 0x8(%r11),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_258174:
	movq $0x1C17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x500(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x39DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x568(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x570(%rbp)
	movl $0x2,0x578(%rbp)
	addq $0x570,%rbp
	leaq (L_258175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_486562:
L_258331:
	movq %r13,%r15
	jmp L_258174
.p2align 0x4
L_486563:
L_258332:
	movq %r11,%r15
	jmp L_258174
.p2align 0x4
.long 0x422D
L_258390:
	addq $0xFFFFFFFFFFFFFA40,%rbp
	movq 0x5C0(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258391
L_258406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5C0,%rbp
	leaq (L_258407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258407
.p2align 0x4
.long 0x4231
L_258407:
	addq $0xFFFFFFFFFFFFFA40,%rbp
L_258391:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x5B8(%rbp)
	addq $0x18,%r12
	movq 0x5A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x5A0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq 0x4F8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486570
L_258392:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	je L_486569
L_258393:
	movq 0x8(%r15),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x5A0(%rbp)
	addq $0x18,%r12
L_258394:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258395
L_258402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5C8,%rbp
	leaq (L_258403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258403
.p2align 0x4
.long 0x4230
L_258403:
	addq $0xFFFFFFFFFFFFFA38,%rbp
L_258395:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x5B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x5A8(%rbp)
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x5B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x145,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x4F8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1BE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r14)
	movq %r14,0x5C0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5D0,%rbp
	leaq (L_258396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258396
.p2align 0x4
.long 0x422E
L_258396:
	addq $0xFFFFFFFFFFFFFA30,%rbp
	movq %rax,0x5A0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3037:
	cmpq $0x1,%r15
	jnl L_486566
L_258401:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x5A0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x5C0(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x5A8(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_3037
.p2align 0x4
L_486566:
L_258397:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258398
L_258399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5C0,%rbp
	leaq (L_258400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258400
.p2align 0x4
.long 0x422F
L_258400:
	addq $0xFFFFFFFFFFFFFA40,%rbp
L_258398:
	movq 0x5A0(%rbp),%r15
	movq $0xB2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0x17E8)(%rip),%r14
	movq $0xB2D,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq (globalObjptr+0xF60)(%rip),%r14
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x550(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x5B0(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0x550(%rbp)
	jmp loop_3029
.p2align 0x4
L_486569:
L_258404:
	movq 0x4F8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	jmp L_258394
.p2align 0x4
L_486570:
L_258405:
	movq %r15,0x5A0(%rbp)
	jmp L_258394
.p2align 0x4
.long 0x41FB
L_258154:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x500(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258155
L_258359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_258360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258360
.p2align 0x4
.long 0x4226
L_258360:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_258155:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x500(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r13
	movq 0x4F8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486573
L_258156:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_486572
L_258157:
	movq %r15,0x550(%rbp)
	movq 0x8(%r13),%r15
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x500(%rbp)
	addq $0x18,%r12
	jmp L_258158
.p2align 0x4
L_486572:
L_258357:
	movq %r15,0x550(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x500(%rbp)
	jmp L_258158
.p2align 0x4
L_486573:
L_258358:
	movq %r13,0x500(%rbp)
	movq %r15,0x550(%rbp)
	jmp L_258158
.p2align 0x4
.long 0x4201
L_258175:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_258176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_8
.p2align 0x4
.long 0x4201
L_258176:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x500(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258177
L_258329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_258330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258330
.p2align 0x4
.long 0x4220
L_258330:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_258177:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x508(%rbp)
	addq $0x18,%r12
	movq 0x548(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x500(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq 0x4F8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486581
L_258178:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	je L_486580
L_258179:
	movq 0x8(%r15),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x500(%rbp)
	addq $0x18,%r12
L_258180:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258181
L_258325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_258326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258326
.p2align 0x4
.long 0x421F
L_258326:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_258181:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x500(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x508(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x510(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_258182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258182
.p2align 0x4
.long 0x4202
L_258182:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq %rax,0x500(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3035:
	cmpq $0x1,%r15
	jnl L_486575
L_258324:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x500(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x510(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x560(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_3035
.p2align 0x4
L_486575:
L_258183:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258184
L_258322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_258323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258323
.p2align 0x4
.long 0x421E
L_258323:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_258184:
	movq 0x500(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_486577
L_258185:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r11
	je L_486576
L_258186:
	movq 0x8(%r11),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_258187:
	movq $0x1C17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x500(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x560(%rbp)
	addq $0x18,%r12
	movq $0x1,0x550(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6D0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xA20(%rbp)
	addq $0x550,%rbp
	leaq (L_258188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_486576:
L_258320:
	movq %r13,%r15
	jmp L_258187
.p2align 0x4
L_486577:
L_258321:
	movq %r11,%r15
	jmp L_258187
.p2align 0x4
L_486580:
L_258327:
	movq 0x4F8(%rbp),%r15
	movq %r15,0x500(%rbp)
	jmp L_258180
.p2align 0x4
L_486581:
L_258328:
	movq %r15,0x500(%rbp)
	jmp L_258180
.p2align 0x4
.long 0x4203
L_258188:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258189
L_258318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_258319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258319
.p2align 0x4
.long 0x421D
L_258319:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_258189:
	movq 0x158(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_258196
L_258190:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_258191:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_258304
L_258192:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_486583
L_258193:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_258191
.p2align 0x4
L_486583:
L_258194:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258196
L_258314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_258315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258315
.p2align 0x4
.long 0x421D
L_258315:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_258196:
	movq 0x158(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x528(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_258203
L_258197:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_258198:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_258304
L_258199:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_486584
L_258200:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_258198
.p2align 0x4
L_486584:
L_258201:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258203
L_258310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_258311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258311
.p2align 0x4
.long 0x421C
L_258311:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_258203:
	movq 0x160(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x530(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x168(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_258210
L_258204:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_258205:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_258304
L_258206:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_486585
L_258207:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_258205
.p2align 0x4
L_486585:
L_258208:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258210
L_258306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_258307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258307
.p2align 0x4
.long 0x421B
L_258307:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_258210:
	movq 0x168(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x538(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x170(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_258217
L_258211:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_258212:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_258304
L_258213:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_486586
L_258214:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_258212
.p2align 0x4
L_486586:
L_258215:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258217
L_258301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_258302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258302
.p2align 0x4
.long 0x421A
L_258302:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_258217:
	movq 0x170(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x540(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x520(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x410(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x518(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x508(%rbp)
	movl $0x2,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_258218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4204
L_258218:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x508(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x508,%rbp
	leaq (L_258219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4205
L_258219:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258220
L_258299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258300
.p2align 0x4
.long 0x4219
L_258300:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258220:
	movq $0x3047,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x508(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x520(%rbp)
	addq $0x508,%rbp
	leaq (L_258221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x4206
L_258221:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258222
L_258297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258298
.p2align 0x4
.long 0x4218
L_258298:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258222:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_486601
L_258223:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x10930)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486601:
L_258269:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4207
L_258224:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258225
L_258294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258295
.p2align 0x4
.long 0x4217
L_258295:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258225:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10938)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4208
L_258226:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258227
L_258292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258293
.p2align 0x4
.long 0x4215
L_258293:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258227:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_258228:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_257189
L_258229:
	cmpq $0x1,%r14
	je L_486604
L_258230:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_258228
.p2align 0x4
L_486604:
L_258231:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258232
L_258290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258291
.p2align 0x4
.long 0x4216
L_258291:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258232:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486605
L_258233:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_258234:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10940)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486605:
L_258289:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258234
.p2align 0x4
.long 0x4209
L_258235:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258236
L_258287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258288
.p2align 0x4
.long 0x4215
L_258288:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258236:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_258237:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_257189
L_258238:
	cmpq $0x1,%r14
	je L_486609
L_258239:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_258237
.p2align 0x4
L_486609:
L_258240:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258241
L_258285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258286
.p2align 0x4
.long 0x4214
L_258286:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258241:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486610
L_258242:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_258243:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486610:
L_258284:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258243
.p2align 0x4
.long 0x420A
L_258244:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258245
L_258282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258283
.p2align 0x4
.long 0x4213
L_258283:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258245:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486615
L_258246:
	decl %ecx
	jo L_257189
L_258247:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_258248:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486615:
L_258281:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258248
.p2align 0x4
.long 0x420B
L_258249:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x508(%rbp)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x508,%rbp
	leaq (L_258250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x420C
L_258250:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x420C
L_258251:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258252
L_258279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258280
.p2align 0x4
.long 0x4212
L_258280:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258252:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_258253:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_257189
L_258254:
	cmpq $0x1,%r14
	je L_486617
L_258255:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_258253
.p2align 0x4
L_486617:
L_258256:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258257
L_258277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258278
.p2align 0x4
.long 0x4211
L_258278:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258257:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486618
L_258258:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_258259:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_258260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_486618:
L_258276:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258259
.p2align 0x4
.long 0x420D
L_258260:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258261
L_258274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_258275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258275
.p2align 0x4
.long 0x4210
L_258275:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_258261:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486624
L_258262:
	decl %ecx
	jo L_257189
L_258263:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_258264:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_257189
L_258265:
	movl %r13d,0x0(%r15)
	movq %r14,0x4F0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x508(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F0,%rbp
	leaq (L_258266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486624:
L_258273:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_258264
.p2align 0x4
.long 0x420E
L_258266:
	addq $0xFFFFFFFFFFFFFB10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_258267
L_258271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_258272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_258272
.p2align 0x4
.long 0x420F
L_258272:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_258267:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_257301
	jmp L_258269
