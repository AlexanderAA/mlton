/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:19:33 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl reader_0
.hidden reader_0
reader_0:
L_35324:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35325
L_35499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35500
.p2align 0x4
.long 0x4AF
L_35500:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35325:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F2E,%r14
	je L_387356
	cmpq $0x1F2F,%r14
	je L_387355
	cmpq $0x1F30,%r14
	je L_387354
L_35326:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
.p2align 0x4,,0x7
L_35327:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387353
.p2align 0x4,,0x7
L_35328:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35330
L_35331:
	movl 0x30(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387350
L_35418:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35358
L_35420:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x28(%rbp),%r15
	movl %ecx,0x20(%rbp)
	movl %r14d,%ecx
L_35421:
	movzbq %dl,%r14
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_35358
L_35423:
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jz L_387337
L_35453:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzbl %dl,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1F2E,%r13
	je L_387331
	cmpq $0x1F2F,%r13
	je L_387325
	cmpq $0x1F30,%r13
	je L_387288
L_35454:
	movq %r14,0x28(%rbp)
	movl %ecx,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_35327
.p2align 0x4
L_387288:
L_35481:
	movq %r14,0x28(%rbp)
	movl %ecx,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_35482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387324
.p2align 0x4,,0x7
L_35483:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35330
L_35485:
	movl 0x30(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387290
L_35489:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_387289
L_35491:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x28(%rbp),%r15
	movl %ecx,0x20(%rbp)
	movl %r14d,%ecx
	jmp L_35421
.p2align 0x4
L_387289:
L_35358:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387290:
L_35486:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_387322
L_35487:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl %ecx,0x24(%rbp)
.p2align 0x4,,0x7
L_35334:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387321
.p2align 0x4,,0x7
L_35335:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387291
L_35336:
	movq %r15,0x28(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0x20(%rbp)
	jmp L_35334
.p2align 0x4
L_387291:
L_35337:
	movq %r15,0x10(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
L_35338:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387320
L_35339:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35340:
	incl %ecx
	cmpq $0x1,%r15
	je L_387292
L_35341:
	movq 0x8(%r15),%r15
	jmp L_35340
.p2align 0x4
L_387292:
L_35342:
L_35343:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_387319
L_35344:
	cmpq $0x7FFFFFFF,%rdx
	ja L_387318
L_35345:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35346
.p2align 0x4
.long 0x75D
L_35346:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_35347:
	movq 0x10(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_480:
	cmpq 0x28(%rbp),%r14
	jnl L_387294
L_35407:
	cmpq $0x1,%r13
	je L_387293
L_35408:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_480
.p2align 0x4
L_387293:
L_35410:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387294:
L_35348:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35349
L_35405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35406
.p2align 0x4
.long 0x5E2
L_35406:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_35349:
	movl 0x20(%rbp),%ecx
L_35350:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F2E,%r14
	je L_387313
	cmpq $0x1F2F,%r14
	je L_387309
	cmpq $0x1F30,%r14
	je L_387305
L_35351:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_387304
L_35353:
	cmpl %r13d,%ecx
	jnl L_387303
L_35356:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35358
L_35359:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
L_35360:
	cmpb $0x2B,%dl
	je L_387300
	cmpb $0x2D,%dl
	je L_387298
	cmpb $0x7E,%dl
	je L_387296
L_35361:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2B,%r15
	je L_387295
L_35364:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_35365:
	movl %ecx,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp x_1277
.p2align 0x4
L_387295:
L_35362:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_35363:
	movl %ecx,0x0(%rbp)
	movq $0xA0F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	jmp reader_1
.p2align 0x4
L_387296:
L_35381:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2B,%r15
	je L_387297
L_35383:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
L_35380:
	movl %ecx,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x10,%rbp
	leaq (L_35372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1277
.p2align 0x4
L_387297:
L_35382:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
L_35371:
	movl %ecx,0x10(%rbp)
	movq $0xA0F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	addq $0x10,%rbp
	leaq (L_35372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reader_1
.p2align 0x4
L_387298:
L_35369:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2B,%r15
	je L_387299
L_35379:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
	jmp L_35380
.p2align 0x4
L_387299:
L_35370:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
	jmp L_35371
.p2align 0x4
L_387300:
L_35366:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2B,%r15
	je L_387301
L_35368:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
	jmp L_35365
.p2align 0x4
L_387301:
L_35367:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
	jmp L_35363
.p2align 0x4
L_387303:
L_35355:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387304:
L_35330:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387305:
L_35398:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35330
L_35400:
	cmpl %r13d,%ecx
	jnl L_35355
L_35402:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35358
L_35404:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	jmp L_35360
.p2align 0x4
L_387309:
L_35391:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35330
L_35393:
	cmpl %r13d,%ecx
	jnl L_35355
L_35395:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35358
L_35397:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	jmp L_35360
.p2align 0x4
L_387313:
L_35384:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35330
L_35386:
	cmpl %r13d,%ecx
	jnl L_35355
L_35388:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35358
L_35390:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	jmp L_35360
.p2align 0x4
L_387318:
L_35412:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387319:
L_35413:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_35347
.p2align 0x4
L_387320:
L_35414:
	xorl %ecx,%ecx
	jmp L_35343
.p2align 0x4
L_387321:
L_35415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35416
.p2align 0x4
.long 0x645
L_35416:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_35335
.p2align 0x4
L_387322:
L_35488:
	movq $0x1,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	jmp L_35338
.p2align 0x4
L_387324:
L_35492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35493
.p2align 0x4
.long 0x5F7
L_35493:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_35483
.p2align 0x4
L_387325:
L_35468:
	movq %r14,0x28(%rbp)
	movl %ecx,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_35469:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387330
.p2align 0x4,,0x7
L_35470:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35330
L_35472:
	movl 0x30(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387327
L_35476:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35358
L_35478:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x28(%rbp),%r15
	movl %ecx,0x20(%rbp)
	movl %r14d,%ecx
	jmp L_35421
.p2align 0x4
L_387327:
L_35473:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_387328
L_35474:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl %ecx,0x24(%rbp)
	jmp L_35334
.p2align 0x4
L_387328:
L_35475:
	movq $0x1,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	jmp L_35338
.p2align 0x4
L_387330:
L_35479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35480
.p2align 0x4
.long 0x5F7
L_35480:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_35470
.p2align 0x4
L_387331:
L_35455:
	movq %r14,0x28(%rbp)
	movl %ecx,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_35456:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387336
.p2align 0x4,,0x7
L_35457:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35330
L_35459:
	movl 0x30(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387333
L_35463:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35358
L_35465:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x28(%rbp),%r15
	movl %ecx,0x20(%rbp)
	movl %r14d,%ecx
	jmp L_35421
.p2align 0x4
L_387333:
L_35460:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_387334
L_35461:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl %ecx,0x24(%rbp)
	jmp L_35334
.p2align 0x4
L_387334:
L_35462:
	movq $0x1,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	jmp L_35338
.p2align 0x4
L_387336:
L_35466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35467
.p2align 0x4
.long 0x5F7
L_35467:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_35457
.p2align 0x4
L_387337:
L_35424:
	cmpq $0x1,%r15
	je L_387347
L_35425:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x24(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_35426:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387346
.p2align 0x4,,0x7
L_35427:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387338
L_35428:
	movq %r15,0x28(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0x24(%rbp)
	jmp L_35426
.p2align 0x4
L_387338:
L_35429:
	movq %r15,0x10(%rbp)
L_35430:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387345
L_35431:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35432:
	incl %ecx
	cmpq $0x1,%r15
	je L_387339
L_35433:
	movq 0x8(%r15),%r15
	jmp L_35432
.p2align 0x4
L_387339:
L_35434:
L_35435:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_387344
L_35436:
	cmpq $0x7FFFFFFF,%rdx
	ja L_35412
L_35437:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35438
.p2align 0x4
.long 0x75D
L_35438:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_35439:
	movq 0x10(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_481:
	cmpq 0x28(%rbp),%r14
	jnl L_387341
L_35444:
	cmpq $0x1,%r13
	je L_35410
L_35445:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_481
.p2align 0x4
L_387341:
L_35440:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35441
L_35442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35443
.p2align 0x4
.long 0x5E2
L_35443:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_35441:
	movl 0x20(%rbp),%ecx
	jmp L_35350
.p2align 0x4
L_387344:
L_35448:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_35439
.p2align 0x4
L_387345:
L_35449:
	xorl %ecx,%ecx
	jmp L_35435
.p2align 0x4
L_387346:
L_35450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35451
.p2align 0x4
.long 0x645
L_35451:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_35427
.p2align 0x4
L_387347:
L_35452:
	movq $0x1,0x10(%rbp)
	jmp L_35430
.p2align 0x4
L_387350:
L_35332:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_387351
L_35333:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl %ecx,0x24(%rbp)
	jmp L_35334
.p2align 0x4
L_387351:
L_35417:
	movq $0x1,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	jmp L_35338
.p2align 0x4
L_387353:
L_35494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35495
.p2align 0x4
.long 0x5F7
L_35495:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_35328
.p2align 0x4
L_387354:
L_35498:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	jmp L_35482
.p2align 0x4
L_387355:
L_35497:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	jmp L_35469
.p2align 0x4
L_387356:
L_35496:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	jmp L_35456
.p2align 0x4
.long 0x4B0
L_35372:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_35355
L_35373:
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_35374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1
L_35374:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35375
L_35376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_35377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35377
.p2align 0x4
.long 0x452
L_35377:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_35375:
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl reader_1
.hidden reader_1
reader_1:
L_35501:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35502
L_35544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_35545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35545
.p2align 0x4
.long 0x495
L_35545:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_35502:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movl 0x8(%r14),%r13d
	movl %r13d,0x4(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_35503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1278
.p2align 0x4
.long 0x491
L_35503:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35504
L_35542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35543
.p2align 0x4
.long 0x4E8
L_35543:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35504:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_387364
L_35505:
	movl 0x8(%r15),%r14d
	movq 0x0(%r15),%r13
	movl 0x4(%rbp),%r15d
	decl %r15d
	jo L_387363
L_35507:
	movl %r14d,0x20(%rbp)
	movl %r15d,0x24(%rbp)
	movq %r13,0x28(%rbp)
loop_482:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpl $0x0,0x24(%rbp)
	jng L_387361
L_35534:
	movq %r14,0x48(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_35535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1278
.p2align 0x4
L_387361:
L_35508:
	movl $0x1,%ecx
L_35509:
	movq 0x28(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x18(%rbp)
	movl 0x20(%rbp),%r15d
	movl %ecx,%ebx
	movl %r15d,%ecx
loop_483:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	testl %ebx,%ebx
	jz L_387362
L_35512:
	movl %ecx,0x50(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x58(%rbp)
	movl 0x8(%r14),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_35513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1278
.p2align 0x4
L_387362:
L_35511:
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387363:
L_35506:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387364:
L_35541:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x966
L_35535:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35536
L_35539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_35540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35540
.p2align 0x4
.long 0x5F8
L_35540:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35536:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_387366
L_35537:
	movl 0x8(%r15),%r14d
	movl %r14d,0x20(%rbp)
	decl 0x24(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x28(%rbp),%r13
	imulq %r13,%r14
	addq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	jmp loop_482
.p2align 0x4
L_387366:
L_35538:
	xorl %ecx,%ecx
	jmp L_35509
.p2align 0x4
.long 0x95F
L_35513:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35514
L_35532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_35533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35533
.p2align 0x4
.long 0x965
L_35533:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_35514:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_35511
L_35515:
	movl 0x8(%r15),%r14d
	movq 0x0(%r15),%r13
	movl 0x30(%rbp),%r15d
	decl %r15d
	jo L_35506
L_35516:
	movq %r13,0x48(%rbp)
	movq 0x38(%rbp),%r13
	movq %r13,0x30(%rbp)
	movl %r14d,0x38(%rbp)
	movl %r15d,0x3C(%rbp)
loop_484:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	cmpl $0x0,0x3C(%rbp)
	jng L_387368
L_35527:
	movq %r14,0x68(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_35528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1278
.p2align 0x4
L_387368:
L_35517:
	movl $0x1,0x3C(%rbp)
L_35518:
	movq 0x30(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_35519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x964
L_35528:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_387372
L_35529:
	movl 0x8(%r15),%r14d
	movl %r14d,0x38(%rbp)
	decl 0x3C(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	movq 0x30(%rbp),%r11
	imulq %r11,%r13
	movq %r13,0x30(%rbp)
	movq 0x48(%rbp),%r13
	imulq %r13,%r14
	addq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp loop_484
.p2align 0x4
L_387372:
L_35530:
	movl $0x0,0x3C(%rbp)
	jmp L_35518
.p2align 0x4
.long 0x960
L_35519:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35520
L_35525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_35526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35526
.p2align 0x4
.long 0x963
L_35526:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_35520:
	movq 0x48(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_35521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x961
L_35521:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35522
L_35523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_35524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35524
.p2align 0x4
.long 0x962
L_35524:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35522:
	movl 0x38(%rbp),%ecx
	movl 0x3C(%rbp),%ebx
	jmp loop_483
.text
.p2align 0x4
.globl x_1278
.hidden x_1278
x_1278:
L_35546:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_35631
L_35547:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387419
L_35548:
	movq 0x8(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2E,%r15
	je L_387412
	cmpq $0x1F2F,%r15
	je L_387405
	cmpq $0x1F30,%r15
	je L_387398
L_35549:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_387397
L_35552:
	movl 0x0(%rbp),%ecx
	cmpl %r11d,%ecx
	jnl L_35554
L_35555:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_387395
L_35558:
	movb 0x0(%r15,%r11,1),%dl
	incl %ecx
	cmpb $0x1,%r14b
	je L_387391
	cmpb $0x2,%r14b
	je L_387388
	cmpb $0x3,%r14b
	je L_387384
L_35559:
L_35560:
	cmpb $0x30,%dl
	jb L_35567
L_35561:
	cmpb $0x39,%dl
	ja L_387376
L_35562:
	movzbl %dl,%r14d
	subl $0x30,%r14d
	jo L_387375
L_35564:
	movslq %r14d,%r15
L_35565:
	movq $0x2967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movl %ecx,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0xC(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387375:
L_35563:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387376:
L_35567:
	cmpb $0x61,%dl
	jb L_35572
L_35568:
	cmpb $0x66,%dl
	ja L_387378
L_35569:
	movzbl %dl,%r14d
	subl $0x57,%r14d
	jo L_35563
L_35570:
	movslq %r14d,%r15
	jmp L_35565
.p2align 0x4
L_387378:
L_35572:
	cmpb $0x41,%dl
	jb L_35554
L_35573:
	cmpb $0x46,%dl
	ja L_387380
L_35574:
	movzbl %dl,%r14d
	subl $0x37,%r14d
	jo L_35563
L_35575:
	movslq %r14d,%r15
	jmp L_35565
.p2align 0x4
L_387380:
L_35554:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387384:
L_35591:
L_35592:
	cmpb $0x30,%dl
	jb L_35554
L_35593:
	cmpb $0x39,%dl
	ja L_35554
L_35594:
	movzbl %dl,%r14d
	subl $0x30,%r14d
	jo L_35563
L_35595:
	movslq %r14d,%r15
	jmp L_35565
.p2align 0x4
L_387388:
L_35587:
L_35588:
	cmpb $0x30,%dl
	je L_387390
	cmpb $0x31,%dl
	je L_387389
	jmp L_35554
.p2align 0x4
L_387389:
L_35590:
	movq $0x1,%r15
	jmp L_35565
.p2align 0x4
L_387390:
L_35589:
	xorq %r15,%r15
	jmp L_35565
.p2align 0x4
L_387391:
L_35580:
L_35581:
	cmpb $0x30,%dl
	jb L_35554
L_35582:
	cmpb $0x37,%dl
	ja L_35554
L_35583:
	movzbl %dl,%r14d
	subl $0x30,%r14d
	jo L_35563
L_35584:
	movslq %r14d,%r15
	jmp L_35565
.p2align 0x4
L_387395:
L_35557:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387397:
L_35551:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387398:
L_35620:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_35551
L_35622:
	movl 0x0(%rbp),%ecx
	cmpl %r11d,%ecx
	jnl L_35554
L_35624:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_35557
L_35626:
	movb 0x0(%r15,%r11,1),%dl
	incl %ecx
	cmpb $0x1,%r14b
	je L_35581
	cmpb $0x2,%r14b
	je L_35588
	cmpb $0x3,%r14b
	je L_35592
L_35627:
	jmp L_35560
.p2align 0x4
L_387405:
L_35609:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_35551
L_35611:
	movl 0x0(%rbp),%ecx
	cmpl %r11d,%ecx
	jnl L_35554
L_35613:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_35557
L_35615:
	movb 0x0(%r15,%r11,1),%dl
	incl %ecx
	cmpb $0x1,%r14b
	je L_35581
	cmpb $0x2,%r14b
	je L_35588
	cmpb $0x3,%r14b
	je L_35592
L_35616:
	jmp L_35560
.p2align 0x4
L_387412:
L_35598:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_35551
L_35600:
	movl 0x0(%rbp),%ecx
	cmpl %r11d,%ecx
	jnl L_35554
L_35602:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_35557
L_35604:
	movb 0x0(%r15,%r11,1),%dl
	incl %ecx
	cmpb $0x1,%r14b
	je L_35581
	cmpb $0x2,%r14b
	je L_35588
	cmpb $0x3,%r14b
	je L_35592
L_35605:
	jmp L_35560
.p2align 0x4
L_387419:
L_35631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_35632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35632
.p2align 0x4
.long 0x495
L_35632:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_35548
.text
.p2align 0x4
.globl x_1277
.hidden x_1277
x_1277:
L_35633:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_35711
L_35634:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387454
L_35635:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F2E,%r14
	je L_387450
	cmpq $0x1F2F,%r14
	je L_387446
	cmpq $0x1F30,%r14
	je L_387442
L_35636:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35638
L_35639:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387440
L_35642:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35644
L_35645:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_35646:
	cmpb $0x30,%dl
	jne L_387438
L_35648:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F2E,%r14
	je L_387434
	cmpq $0x1F2F,%r14
	je L_387430
	cmpq $0x1F30,%r14
	je L_387426
L_35649:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_387425
L_35651:
	cmpl %r13d,%ecx
	jnl L_387424
L_35654:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_387423
L_35656:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_35657:
	cmpb $0x78,%dl
	je L_35661
L_35658:
	cmpb $0x58,%dl
	je L_387421
L_35659:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp reader_1
.p2align 0x4
L_387421:
L_35661:
	movl %ecx,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_35662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reader_1
.p2align 0x4
L_387423:
L_35644:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387424:
L_35653:
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387425:
L_35638:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387426:
L_35683:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35638
L_35685:
	cmpl %r13d,%ecx
	jnl L_35653
L_35687:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35644
L_35689:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35657
.p2align 0x4
L_387430:
L_35676:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35638
L_35678:
	cmpl %r13d,%ecx
	jnl L_35653
L_35680:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35644
L_35682:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35657
.p2align 0x4
L_387434:
L_35669:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35638
L_35671:
	cmpl %r13d,%ecx
	jnl L_35653
L_35673:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35644
L_35675:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35657
.p2align 0x4
L_387438:
L_35647:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp reader_1
.p2align 0x4
L_387440:
L_35641:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387442:
L_35704:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35638
L_35706:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_35641
L_35708:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35644
L_35710:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35646
.p2align 0x4
L_387446:
L_35697:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35638
L_35699:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_35641
L_35701:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35644
L_35703:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35646
.p2align 0x4
L_387450:
L_35690:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35638
L_35692:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_35641
L_35694:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35644
L_35696:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35646
.p2align 0x4
L_387454:
L_35711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_35712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35712
.p2align 0x4
.long 0x4E9
L_35712:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_35635
.p2align 0x4
.long 0x1
L_35662:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35663
L_35666:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_35667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35667
.p2align 0x4
.long 0x452
L_35667:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_35663:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_387456
L_35664:
	movq 0x0(%r15),%r14
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387456:
L_35665:
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1205
.hidden x_1205
x_1205:
L_35713:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35714
L_35781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_35782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35782
.p2align 0x4
.long 0x452
L_35782:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_35714:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x10(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	je L_387458
L_35715:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387458:
L_35716:
	cmpl $0x0,0x10(%rbp)
	jng L_35718
L_35719:
	cmpq $0x0,0x8(%rbp)
	jna L_35721
L_35722:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x66,%r15b
	je L_387473
	cmpb $0x74,%r15b
	je L_387459
L_35718:
	movq $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387459:
L_35754:
	movq $0x1,0x18(%rbp)
	movl $0x1,0x14(%rbp)
	movl $0x3,0x20(%rbp)
.p2align 0x4,,0x7
loop_486:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387472
.p2align 0x4,,0x7
L_35755:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_387462
L_35774:
	movl 0x14(%rbp),%r14d
	cmpl 0x10(%rbp),%r14d
	jnl L_35718
L_35776:
	movslq %r14d,%r13
	cmpq 0x8(%rbp),%r13
	jnb L_387460
L_35778:
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r13,1),%r10b
	incl %r14d
	movl %r14d,0x14(%rbp)
	decl %r15d
	movl %r15d,0x20(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_486
.p2align 0x4
L_387460:
L_35721:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387462:
L_35756:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_35763
L_35757:
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_35758:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387470
.p2align 0x4,,0x7
L_35759:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_387463
L_35760:
	movq %r15,0x10(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movb %r15b,0x8(%rbp)
	jmp L_35758
.p2align 0x4
L_387463:
L_35762:
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_35763
L_35764:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
L_35765:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_35763
L_35766:
	movb 0x0(%r13),%r15b
	cmpq $0x1,0x8(%r13)
	jne L_387467
L_35767:
	cmpb $0x72,0x8(%rbp)
	jne L_35718
L_35768:
	cmpb $0x75,%r11b
	jne L_35718
L_35769:
	cmpb $0x65,%r15b
	jne L_35718
L_35770:
	movl $0x1,%ecx
L_35743:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387467:
L_35763:
	movq (globalObjptr+0x730)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387470:
L_35771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_35772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35772
.p2align 0x4
.long 0x65B
L_35772:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_35759
.p2align 0x4
L_387472:
L_35779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35780
.p2align 0x4
.long 0x967
L_35780:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_35755
.p2align 0x4
L_387473:
L_35723:
	movq $0x1,0x18(%rbp)
	movl $0x1,0x14(%rbp)
	movl $0x4,0x20(%rbp)
.p2align 0x4,,0x7
loop_485:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387488
.p2align 0x4,,0x7
L_35724:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_387476
L_35747:
	movl 0x14(%rbp),%r14d
	cmpl 0x10(%rbp),%r14d
	jnl L_35718
L_35749:
	movslq %r14d,%r13
	cmpq 0x8(%rbp),%r13
	jnb L_35721
L_35751:
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r13,1),%r10b
	incl %r14d
	movl %r14d,0x14(%rbp)
	decl %r15d
	movl %r15d,0x20(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_485
.p2align 0x4
L_387476:
L_35725:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_35732
L_35726:
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_35727:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387486
.p2align 0x4,,0x7
L_35728:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_387477
L_35729:
	movq %r15,0x10(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movb %r15b,0x8(%rbp)
	jmp L_35727
.p2align 0x4
L_387477:
L_35731:
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_35732
L_35733:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
L_35734:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_35732
L_35735:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r10b
L_35736:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_35732
L_35737:
	movb 0x0(%r15),%r13b
	cmpq $0x1,0x8(%r15)
	jne L_387482
L_35738:
	cmpb $0x61,0x8(%rbp)
	jne L_35718
L_35739:
	cmpb $0x6C,%r11b
	jne L_35718
L_35740:
	cmpb $0x73,%r10b
	jne L_35718
L_35741:
	cmpb $0x65,%r13b
	jne L_35718
L_35742:
	xorl %ecx,%ecx
	jmp L_35743
.p2align 0x4
L_387482:
L_35732:
	movq (globalObjptr+0x738)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387486:
L_35744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_35745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35745
.p2align 0x4
.long 0x65B
L_35745:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_35728
.p2align 0x4
L_387488:
L_35752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35753
.p2align 0x4
.long 0x967
L_35753:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_35724
.text
.p2align 0x4
.globl openIn_0
.hidden openIn_0
openIn_0:
L_35783:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35784
L_35808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35809
.p2align 0x4
.long 0x45D
L_35809:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35784:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq $0x1,%r15
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35785:
	orl %ebx,%ecx
	movl %ecx,0x8(%rbp)
	cmpq $0x1,%r15
	je L_387492
L_35786:
	movl 0x0(%r15),%ebx
	movq 0x8(%r15),%r15
	jmp L_35785
.p2align 0x4
L_387492:
L_35787:
	movq %r14,0x30(%rbp)
	leaq L_35800(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (fromString_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x968
fromString_2:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35788
L_35806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35807
.p2align 0x4
.long 0x50A
L_35807:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_35788:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_387497
L_35791:
	movb 0x0(%r14,%r15,1),%r13b
	testb %r13b,%r13b
	jz L_387494
L_35792:
	movq (globalObjptr+0x750)(%rip),%r15
L_35790:
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq (globalObjptr+0xE5D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387494:
L_35793:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35794:
	orl %ecx,%ebx
	movl %ebx,0x8(%rbp)
	cmpq $0x1,%r15
	je L_387495
L_35795:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movl %ebx,%ecx
	movl %r14d,%ebx
	jmp L_35794
.p2align 0x4
L_387495:
L_35796:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35797
L_35804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35805
.p2align 0x4
.long 0x50A
L_35805:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_35797:
	movq $0x3E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_35798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_387497:
L_35789:
	movq $0x3,%r15
	jmp L_35790
.p2align 0x4
.long 0x25
L_35800:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35801
L_35802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35803
.p2align 0x4
.long 0x45D
L_35803:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35801:
	movq 0x8(%rbp),%r15
	jmp L_35790
.p2align 0x4
.long 0x968
L_35798:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_35799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp newIn_0
.p2align 0x4
.long 0x492
L_35799:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq 0x48(%rbp),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%rbp),%r9
	movq %r9,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	movq %r11,0x18(%rbp)
	movq %r10,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1279
.hidden x_1279
x_1279:
L_35810:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35811
L_35973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35974
.p2align 0x4
.long 0x493
L_35974:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35811:
	incl (gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_387547
L_35812:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F25,%r14
	je L_387546
	cmpq $0x1F26,%r14
	je L_387545
	cmpq $0x1F27,%r14
	je L_387544
	cmpq $0x1F28,%r14
	je L_387543
	cmpq $0x1F29,%r14
	je L_387541
	cmpq $0x1F2A,%r14
	je L_387500
L_35813:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35952(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387500:
L_35969:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rsi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_execp
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35970
.p2align 0x4
.long 0x493
L_35970:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
x_67:
	cmpl $0xFFFFFFFF,%ecx
	je L_387502
L_35824:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_387501
L_35825:
	movl %ecx,0x0(%rbp)
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387501:
L_35818:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x740)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387502:
L_35827:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35828
.p2align 0x4
.long 0x493
L_35828:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_35818
L_35829:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_387509
L_35830:
	movl %eax,0x20(%rbp)
L_35831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x20(%rbp),%edi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35832
.p2align 0x4
.long 0x48C
L_35832:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35833
L_35848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35849
.p2align 0x4
.long 0x475
L_35849:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_35833:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	testq %r15,%r15
	jz L_387507
L_35834:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_487:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_387503
L_35835:
	incl %ecx
	jmp loop_487
.p2align 0x4
L_387503:
L_35836:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_387506
L_35837:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35838
.p2align 0x4
.long 0x476
L_35838:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_488:
	cmpq 0x28(%rbp),%r15
	jnl L_387504
L_35844:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_488
.p2align 0x4
L_387504:
L_35839:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35840
L_35842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_35843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35843
.p2align 0x4
.long 0x7BB
L_35843:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35840:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_35841:
	movl 0x20(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387506:
L_35846:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387507:
L_35847:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_35841
.p2align 0x4
L_387509:
	movl %eax,%ecx
L_35851:
	cmpl $0x4,%ecx
	je L_387510
L_35852:
	movl %ecx,0x20(%rbp)
	jmp L_35831
.p2align 0x4
L_387510:
L_35853:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_387528
L_35854:
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_387527
L_35855:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F25,%r14
	je L_387526
	cmpq $0x1F26,%r14
	je L_387525
	cmpq $0x1F27,%r14
	je L_387524
	cmpq $0x1F28,%r14
	je L_387523
	cmpq $0x1F29,%r14
	je L_387521
	cmpq $0x1F2A,%r14
	je L_387511
L_35856:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35890(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387511:
L_35907:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rsi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_execp
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35908
.p2align 0x4
.long 0x64A
L_35908:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
x_68:
	cmpl $0xFFFFFFFF,%ecx
	je L_387513
L_35866:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_35818
L_35867:
	movl %ecx,0x0(%rbp)
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387513:
L_35869:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35870
.p2align 0x4
.long 0x64A
L_35870:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%r15d
	movl %r15d,0x20(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_35818
L_35871:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35872
.p2align 0x4
.long 0x48C
L_35872:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35873
L_35887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35888
.p2align 0x4
.long 0x475
L_35888:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_35873:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	testq %r15,%r15
	jz L_387518
L_35874:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_489:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_387514
L_35875:
	incl %ecx
	jmp loop_489
.p2align 0x4
L_387514:
L_35876:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_35846
L_35877:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35878
.p2align 0x4
.long 0x476
L_35878:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_490:
	cmpq 0x28(%rbp),%r15
	jnl L_387515
L_35884:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_490
.p2align 0x4
L_387515:
L_35879:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35880
L_35882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_35883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35883
.p2align 0x4
.long 0x7BB
L_35883:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35880:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_35881:
	movl 0x20(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387518:
L_35886:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_35881
.p2align 0x4
L_387521:
L_35902:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r14d
	jg L_387522
L_35903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35904
.p2align 0x4
.long 0x64A
L_35904:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387522:
L_35905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35906
.p2align 0x4
.long 0x64A
L_35906:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387523:
L_35900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movl 0x0(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35901
.p2align 0x4
.long 0x64A
L_35901:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387524:
L_35895:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35890(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387525:
L_35893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%r15),%edx
	movl 0x4(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35894
.p2align 0x4
.long 0x64A
L_35894:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387526:
L_35891:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_closeDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35892
.p2align 0x4
.long 0x64A
L_35892:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387527:
L_35909:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_close
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35910
.p2align 0x4
.long 0x64A
L_35910:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387528:
L_35911:
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_387539
L_35912:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F25,%r14
	je L_387538
	cmpq $0x1F26,%r14
	je L_387537
	cmpq $0x1F27,%r14
	je L_387536
	cmpq $0x1F28,%r14
	je L_387535
	cmpq $0x1F29,%r14
	je L_387533
	cmpq $0x1F2A,%r14
	je L_387529
L_35913:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35930(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387529:
L_35947:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rsi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_execp
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35948
.p2align 0x4
.long 0x493
L_35948:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
x_69:
	cmpl $0xFFFFFFFF,%ecx
	je L_387531
L_35923:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_35818
L_35924:
	movl %ecx,0x0(%rbp)
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387531:
L_35926:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35927
.p2align 0x4
.long 0x493
L_35927:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_35818
L_35928:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl %eax,%ecx
	jmp L_35851
.p2align 0x4
L_387533:
L_35942:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r14d
	jg L_387534
L_35943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35944
.p2align 0x4
.long 0x493
L_35944:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387534:
L_35945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35946
.p2align 0x4
.long 0x493
L_35946:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387535:
L_35940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movl 0x0(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35941
.p2align 0x4
.long 0x493
L_35941:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387536:
L_35935:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35930(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387537:
L_35933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%r15),%edx
	movl 0x4(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35934
.p2align 0x4
.long 0x493
L_35934:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387538:
L_35931:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_closeDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35932
.p2align 0x4
.long 0x493
L_35932:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387539:
L_35949:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_close
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35950
.p2align 0x4
.long 0x493
L_35950:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387541:
L_35964:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r14d
	jg L_387542
L_35965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35966
.p2align 0x4
.long 0x493
L_35966:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387542:
L_35967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35968
.p2align 0x4
.long 0x493
L_35968:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387543:
L_35962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movl 0x0(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35963
.p2align 0x4
.long 0x493
L_35963:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387544:
L_35957:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35952(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387545:
L_35955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%r15),%edx
	movl 0x4(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35956
.p2align 0x4
.long 0x493
L_35956:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387546:
L_35953:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_closeDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35954
.p2align 0x4
.long 0x493
L_35954:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387547:
L_35971:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_close
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35972
.p2align 0x4
.long 0x493
L_35972:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
.long 0x492
fromString_3:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_387551
L_35819:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_387549
L_35822:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_unlink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35823
.p2align 0x4
.long 0x493
L_35823:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387549:
L_35821:
	movq (globalObjptr+0x750)(%rip),%r15
L_35815:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_35818
L_35816:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387551:
L_35814:
	movq $0x3,%r15
	jmp L_35815
.p2align 0x4
.long 0x25
L_35952:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_35815
.p2align 0x4
.long 0x474
fromString_4:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_387554
L_35861:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_387552
L_35864:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_unlink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35865
.p2align 0x4
.long 0x64A
L_35865:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387552:
L_35863:
	movq (globalObjptr+0x750)(%rip),%r15
L_35858:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_35818
L_35859:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387554:
L_35857:
	movq $0x3,%r15
	jmp L_35858
.p2align 0x4
.long 0x25
L_35890:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_35858
.p2align 0x4
.long 0x474
fromString_5:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_35857
L_35896:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_35863
L_35898:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_chdir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35899
.p2align 0x4
.long 0x64A
L_35899:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
.long 0x492
fromString_6:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_387559
L_35918:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_387557
L_35921:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_unlink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35922
.p2align 0x4
.long 0x493
L_35922:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387557:
L_35920:
	movq (globalObjptr+0x750)(%rip),%r15
L_35915:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_35818
L_35916:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387559:
L_35914:
	movq $0x3,%r15
	jmp L_35915
.p2align 0x4
.long 0x25
L_35930:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_35915
.p2align 0x4
.long 0x492
fromString_7:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_35914
L_35936:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_35920
L_35938:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_chdir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35939
.p2align 0x4
.long 0x493
L_35939:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
.long 0x492
fromString_8:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_35814
L_35958:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_35821
L_35960:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_chdir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35961
.p2align 0x4
.long 0x493
L_35961:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.text
.p2align 0x4
.globl add_2
.hidden add_2
add_2:
L_35975:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35976
L_36052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_36053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36053
.p2align 0x4
.long 0x4AF
L_36053:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35976:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_35978
L_35979:
	movl $0x0,0x38(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_491:
	cmpl %ecx,%ebx
	jnl L_387565
L_36049:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_387564
L_36051:
	movq 0x28(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x38(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r11d,%r14d
	movl %r14d,0x38(%rbp)
	movl %r15d,%ebx
	jmp loop_491
.p2align 0x4
L_387564:
L_35986:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387565:
L_35980:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35981
L_36047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36048
.p2align 0x4
.long 0x96B
L_36048:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35981:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_387594
L_35983:
	movq %r14,0x0(%r13)
	movq 0x10(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x38(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_35998
L_35984:
	movslq %r11d,%r13
	movq %r13,0x40(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_35986
L_35987:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x48(%rbp)
	cmpq $0x1,%r11
	je L_35997
L_35988:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_35989:
	movq (globalObjptr+0xAE8)(%rip),%r11
	movq 0x0(%r11),%r13
	incq %r13
	jo L_387590
L_35991:
	movq %r13,0x0(%r11)
	movq 0x10(%r15),%r11
	cmpq 0x28(%rbp),%r11
	je L_387589
L_35992:
	movq 0x30(%rbp),%r10
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_387586
L_36034:
	xorq %r13,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
vectorEqualLoop_122:
	cmpq 0x30(%rbp),%r13
	je L_387585
L_36035:
	movq 0x28(%rbp),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_387566
L_36042:
	incq %r13
	jmp vectorEqualLoop_122
.p2align 0x4
L_387566:
L_36036:
	cmpq $0x1,%r14
	je L_387567
L_36037:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_35989
.p2align 0x4
L_387567:
L_36038:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35997
L_36040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36041
.p2align 0x4
.long 0x4EF
L_36041:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_35997:
	movq $0xF9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%rdx
	movq %rdx,0x10(%r15)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_35998
L_35999:
	movl %r13d,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x2905,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x40(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_35986
L_36001:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_35978
L_36003:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_35998
L_36004:
	cmpl %r15d,%r10d
	jnl L_387579
L_36006:
	addl %r10d,%r10d
	jo L_35998
L_36007:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_387577
L_36008:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8BF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36009
.p2align 0x4
.long 0x969
L_36009:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_492:
	cmpq 0x28(%rbp),%r15
	jnl L_387568
L_36030:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_492
.p2align 0x4
L_387568:
L_36010:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_387576
L_36012:
	cmpl $0x0,%r13d
	jl L_387575
L_36013:
	movl $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_493:
	movl 0x40(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_387574
L_36015:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_36024
L_36016:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
L_36017:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387572
.p2align 0x4,,0x7
L_36018:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x20(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_387571
L_36019:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_35986
L_36021:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2905,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_387569
L_36022:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_36017
.p2align 0x4
L_387569:
L_36024:
	incl 0x40(%rbp)
	jmp loop_493
.p2align 0x4
L_387571:
L_35998:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387572:
L_36026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_36027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36027
.p2align 0x4
.long 0x96A
L_36027:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_36018
.p2align 0x4
L_387574:
L_36014:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387575:
L_36029:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387576:
L_35978:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387577:
L_36031:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387579:
L_36005:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387585:
L_36043:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387586:
L_35993:
	cmpq $0x1,%r14
	je L_387587
L_35994:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_35989
.p2align 0x4
L_387587:
L_35995:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35997
L_36032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36033
.p2align 0x4
.long 0x4EF
L_36033:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_35997
.p2align 0x4
L_387589:
L_36044:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387590:
L_35990:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387594:
L_35982:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1210
.hidden x_1210
x_1210:
L_36054:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36055
L_36151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36152
.p2align 0x4
.long 0x979
L_36152:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36055:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_36057
L_36058:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_387625
L_36059:
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
loop_494:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387624
.p2align 0x4,,0x7
L_36060:
	movq 0x18(%rbp),%r15
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jnl L_387619
.p2align 0x4,,0x7
x_70:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%ecx
	movl %r14d,0x4C(%rbp)
.p2align 0x4,,0x7
loop_495:
	movl 0x4C(%rbp),%r15d
	cmpl %ecx,%r15d
	jnl L_387610
L_36090:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x50(%rbp)
	movslq %r15d,%r11
	cmpq %r13,%r11
	jnb L_387608
L_36095:
	cmpb $0xA,0x0(%r14,%r11,1)
	je L_387598
L_36096:
	incl %r15d
	movl %r15d,0x4C(%rbp)
	jmp loop_495
.p2align 0x4
L_387598:
L_36097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36098
L_36123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_36124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36124
.p2align 0x4
.long 0x975
L_36124:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_36098:
	movl 0x4C(%rbp),%r15d
	incl %r15d
	movl %r15d,%r14d
	movl %r15d,0x10(%rbp)
	movl 0x48(%rbp),%r15d
	subl %r15d,%r14d
	jo L_387606
L_36099:
	movslq %r15d,%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%rdx
	movq %rdx,0x58(%rbp)
	movq 0x50(%rbp),%r15
	cmpq %r13,%r15
	jb L_36086
L_36100:
	subq %r13,%r15
	cmpq %rdx,%r15
	jb L_387604
L_36101:
	testq %rdx,%rdx
	jz L_387603
L_36102:
	cmpq $0x7FFFFFFF,%rdx
	ja L_387602
L_36103:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_36104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36104
.p2align 0x4
.long 0x971
L_36104:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,%r15
L_36105:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_497:
	cmpq 0x58(%rbp),%r14
	jnl L_387599
L_36118:
	movq %r14,%r13
	addq 0x40(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_497
.p2align 0x4
L_387599:
L_36106:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_36107:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387601
.p2align 0x4,,0x7
L_36108:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387600
L_36109:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_36107
.p2align 0x4
L_387600:
L_36110:
	movq %r15,0x48(%rbp)
	leaq L_36112(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387601:
L_36116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36117
.p2align 0x4
.long 0x974
L_36117:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_36108
.p2align 0x4
L_387602:
L_36083:
	movq $0x5,%r15
L_36069:
	movq 0x8(%rbp),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq (globalObjptr+0xE5D8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387603:
L_36120:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_36105
.p2align 0x4
L_387604:
L_36086:
	movq $0x6,%r15
	jmp L_36069
.p2align 0x4
L_387606:
L_36068:
	movq $0x3,%r15
	jmp L_36069
.p2align 0x4
L_387608:
L_36091:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36086
L_36093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36094
.p2align 0x4
.long 0x970
L_36094:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_36086
.p2align 0x4
L_387610:
L_36066:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387618
.p2align 0x4,,0x7
L_36067:
	movl 0x4C(%rbp),%r15d
	movl 0x48(%rbp),%r14d
	subl %r14d,%r15d
	jo L_36068
L_36070:
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movslq %r14d,%r13
	movq %r13,0x50(%rbp)
	movslq %r15d,%r14
	movq %r14,0x58(%rbp)
	cmpq %r13,%r11
	jb L_36086
L_36071:
	subq %r13,%r11
	cmpq %r14,%r11
	jb L_36086
L_36072:
	testq %r14,%r14
	jnz L_387613
L_36084:
	movq (globalObjptr+0x6F8)(%rip),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_36076:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_496:
	cmpq 0x58(%rbp),%r15
	jnl L_387611
L_36081:
	movq %r15,%r14
	addq 0x50(%rbp),%r14
	movq 0x60(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_496
.p2align 0x4
L_387611:
L_36077:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387612
.p2align 0x4,,0x7
L_36078:
	movq 0x60(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movl 0x4C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	jmp loop_494
.p2align 0x4
L_387612:
L_36079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_36080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36080
.p2align 0x4
.long 0x96E
L_36080:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_36078
.p2align 0x4
L_387613:
L_36073:
	movq 0x58(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_36083
L_36074:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_36075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36075
.p2align 0x4
.long 0x96D
L_36075:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	jmp L_36076
.p2align 0x4
L_387618:
L_36088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36089
.p2align 0x4
.long 0x96F
L_36089:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_36067
.p2align 0x4
L_387619:
L_36061:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x24B5,%r11
	je L_387622
	cmpq $0x24B6,%r11
	je L_387620
L_36062:
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x80(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	leaq L_36112(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %rbp,%r14
	addq $0x38,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq $0x0,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_36063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1217
.p2align 0x4
L_387620:
L_36138:
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_387621
L_36139:
	movq 0x8(%r11),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r11),%r14d
	movl %r13d,%r11d
	movq $0x3E47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r11d,0x0(%r13)
	movl %r14d,0x8(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movl $0x0,0xC(%r13)
	movq %r15,0x10(%r13)
	movq %r13,0x58(%rbp)
	leaq L_36112(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x60(%rbp)
	addq $0x58,%rbp
	leaq (x_72+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_387621:
L_36137:
	movq $0xE,%r15
	jmp L_36069
.p2align 0x4
L_387622:
L_36128:
	movl 0x0(%r14),%r11d
	movq 0x8(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_36137
L_36129:
	movl %r13d,%r14d
	movq $0x3E45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movl %r11d,0x8(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movl $0x0,0xC(%r13)
	movq %r15,0x10(%r13)
	movq %r13,0x58(%rbp)
	leaq L_36112(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x60(%rbp)
	addq $0x58,%rbp
	leaq (x_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_387624:
L_36148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_36149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36149
.p2align 0x4
.long 0x978
L_36149:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_36060
.p2align 0x4
L_387625:
L_36057:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x972
L_36111:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_36112:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36113
L_36114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36115
.p2align 0x4
.long 0x973
L_36115:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36113:
	movq 0x10(%rbp),%r15
	jmp L_36069
.p2align 0x4
.long 0x96C
L_36063:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%ecx
	movl %ecx,0x48(%rbp)
L_36064:
	testl %ecx,%ecx
	jz L_387629
L_36065:
	movq 0x18(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq 0x10(%rbp),%r15
	movl %ecx,0x0(%r15)
	jmp x_70
.p2align 0x4
L_387629:
L_36125:
	movq 0x0(%rbp),%r15
	movq (globalWord64+0x40)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_36057
L_36126:
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_36107
.p2align 0x4
.long 0x976
x_72:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36140
L_36144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_36145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36145
.p2align 0x4
.long 0x977
L_36145:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_36140:
	movq 0x50(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_36068
L_36142:
	movq 0x48(%rbp),%r15
	addq 0x0(%r15),%r14
	jo L_36068
L_36143:
	movq %r14,0x0(%r15)
	jmp L_36064
.p2align 0x4
.long 0x976
x_71:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36130
L_36134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_36135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36135
.p2align 0x4
.long 0x977
L_36135:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_36130:
	movq 0x50(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_36068
L_36132:
	movq 0x48(%rbp),%r15
	addq 0x0(%r15),%r14
	jo L_36068
L_36133:
	movq %r14,0x0(%r15)
	jmp L_36064
.text
.p2align 0x4
.globl tokens_0
.hidden tokens_0
tokens_0:
L_36153:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36154
L_36209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_36210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36210
.p2align 0x4
.long 0x452
L_36210:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_36154:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x0,0x18(%rbp)
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_498:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387656
.p2align 0x4,,0x7
L_36155:
	movq 0x20(%rbp),%r15
	cmpq 0x8(%rbp),%r15
	jnl L_387641
L_36196:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14,%r15,1),%r13b
	cmpb $0xD,%r13b
	ja L_387639
L_36197:
	cmpb $0x9,%r13b
	jb L_387638
L_36199:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	incq %r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r15
	je L_387637
L_36200:
	subq %r13,%r15
	movq $0x225,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r11)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_498
.p2align 0x4
L_387637:
L_36201:
	movq %r14,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp loop_498
.p2align 0x4
L_387638:
L_36203:
	incq 0x20(%rbp)
	jmp loop_498
.p2align 0x4
L_387639:
L_36204:
	cmpb $0x20,%r13b
	je L_36199
	jmp L_36203
.p2align 0x4
L_387641:
L_36156:
	movq 0x18(%rbp),%r14
	cmpq %r14,%r15
	je L_387654
L_36157:
	subq %r14,%r15
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_36158:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387653
.p2align 0x4,,0x7
L_36159:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_387642
L_36160:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_36158
.p2align 0x4
L_387642:
L_36161:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_36162:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387652
.p2align 0x4,,0x7
L_36163:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	testq %r13,%r13
	jnz L_36165
L_36186:
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r15)
	jne L_387646
L_36188:
L_36172:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_387643
L_36173:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_36162
.p2align 0x4
L_387643:
L_36174:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_36175:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387645
.p2align 0x4,,0x7
L_36176:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_387644
L_36177:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_36175
.p2align 0x4
L_387644:
L_36178:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387645:
L_36179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36180
.p2align 0x4
.long 0x45C
L_36180:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_36176
.p2align 0x4
L_387646:
L_36165:
	movq 0x28(%rbp),%r15
	testq %r15,%r15
	jnz L_387649
L_36185:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_36169:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_499:
	cmpq 0x28(%rbp),%r15
	jnl L_387647
L_36183:
	movq %r15,%r14
	addq 0x18(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_499
.p2align 0x4
L_387647:
L_36170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387648
.p2align 0x4,,0x7
L_36171:
	movq 0x8(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_36172
.p2align 0x4
L_387648:
L_36181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36182
.p2align 0x4
.long 0x45C
L_36182:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_36171
.p2align 0x4
L_387649:
L_36166:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_387650
L_36167:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36168
.p2align 0x4
.long 0x97A
L_36168:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x8(%rbp)
	jmp L_36169
.p2align 0x4
L_387650:
L_36184:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387652:
L_36189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36190
.p2align 0x4
.long 0x45C
L_36190:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_36163
.p2align 0x4
L_387653:
L_36191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36192
.p2align 0x4
.long 0x45C
L_36192:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_36159
.p2align 0x4
L_387654:
L_36193:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_387655
L_36194:
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_36158
.p2align 0x4
L_387655:
L_36195:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387656:
L_36207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36208
.p2align 0x4
.long 0x48F
L_36208:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_36155
.text
.p2align 0x4
.globl closeIn_0
.hidden closeIn_0
closeIn_0:
L_36211:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36212
L_36245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36246
.p2align 0x4
.long 0x97E
L_36246:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36212:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_387668
L_36213:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_36214:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387667
.p2align 0x4,,0x7
L_36215:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,0x18(%r14)
	je L_387664
L_36216:
	movq $0x1B5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_387658
L_36217:
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_36214
.p2align 0x4
L_387658:
L_36218:
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_36219:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387663
.p2align 0x4,,0x7
L_36220:
	movq $0x1B5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_387659
L_36221:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_36219
.p2align 0x4
L_387659:
L_36223:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jnz L_387660
L_36224:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387660:
L_36225:
	movq 0x18(%rbp),%r15
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq $0x0,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x24B2,%r15
	je L_387662
L_36227:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_387661
L_36228:
	movl $0x1,0x0(%r15)
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x40(%rbp)
	leaq L_36230(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_36229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_387661:
L_36234:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387662:
L_36226:
	movq 0x0(%r14),%r15
	movl $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387663:
L_36235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36236
.p2align 0x4
.long 0x97D
L_36236:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_36220
.p2align 0x4
L_387664:
L_36237:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_387665
L_36238:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_36214
.p2align 0x4
L_387665:
L_36239:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_387666
L_36240:
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_36219
.p2align 0x4
L_387666:
L_36241:
	movq $0x1,%r11
	xchgq %r11,%r15
	jmp L_36223
.p2align 0x4
L_387667:
L_36242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36243
.p2align 0x4
.long 0x97D
L_36243:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_36215
.p2align 0x4
L_387668:
L_36244:
	movq $0x1,%r15
	jmp L_36223
.p2align 0x4
.long 0x97B
L_36229:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x922
L_36230:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36231
L_36232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36233
.p2align 0x4
.long 0x97C
L_36233:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36231:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xE5E0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_34
.hidden layout_34
layout_34:
L_36247:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36248
L_36501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36502
.p2align 0x4
.long 0x460
L_36502:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_36248:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_387676
	cmpq $0x2,%r15
	je L_387675
L_36249:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDC1,%r14
	je L_387674
	cmpq $0xDC2,%r14
	je L_387673
	cmpq $0xDC3,%r14
	je L_387672
	cmpq $0xDC4,%r14
	je L_387671
L_36250:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE5E8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387671:
L_36359:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_36360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387672:
L_36328:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE600)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387673:
L_36297:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE5F8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387674:
L_36266:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE5F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387675:
L_36500:
	movq (globalObjptr+0xE620)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_387676:
L_36499:
	movq (globalObjptr+0xE618)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E6
L_36251:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_36252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
.long 0x522
L_36360:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl $0xFF,%ecx
.p2align 0x4,,0x7
loop_500:
	cmpl $0x0,%ecx
	jl L_387685
L_36361:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x20(%rbp)
	cmpl $0xFF,%ecx
	ja L_387684
L_36362:
	movb %cl,%r15b
	movb %r15b,0x24(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_36370
	cmpq $0x2,%r13
	je L_387680
L_36363:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x24AB,%r13
	je L_387679
	cmpq $0x24AC,%r13
	je L_387678
L_36364:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movb %r15b,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_387678:
L_36380:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movb %r15b,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cp_0
.p2align 0x4
L_387679:
L_36374:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movb %r15b,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cp_0
.p2align 0x4
L_387680:
L_36383:
	shrq $0x2,%r14
	movb %r14b,%r13b
	cmpb %r13b,%r15b
	je L_387681
.p2align 0x4,,0x7
L_36368:
	movl 0x20(%rbp),%ecx
	jmp loop_500
.p2align 0x4
L_387681:
.p2align 0x4,,0x7
L_36370:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387682
.p2align 0x4,,0x7
L_36371:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x20(%rbp),%ecx
	jmp loop_500
.p2align 0x4
L_387682:
L_36372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36373
.p2align 0x4
.long 0x4E2
L_36373:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_36371
.p2align 0x4
L_387684:
L_36386:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387685:
L_36387:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_387710
L_36388:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36389:
	incl %ecx
	cmpq $0x1,%r15
	je L_387686
L_36390:
	movq 0x8(%r15),%r15
	jmp L_36389
.p2align 0x4
L_387686:
L_36391:
L_36392:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_387709
L_36393:
	cmpq $0x7FFFFFFF,%rdx
	ja L_36456
L_36394:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36395
.p2align 0x4
.long 0x45F
L_36395:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_36396:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_501:
	cmpq 0x20(%rbp),%r15
	jnl L_387688
L_36493:
	cmpq $0x1,%r14
	je L_387687
L_36494:
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_501
.p2align 0x4
L_387687:
L_36454:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387688:
L_36397:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36398
L_36491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36492
.p2align 0x4
.long 0x980
L_36492:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36398:
	movq 0x28(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_387706
L_36400:
	cmpl $0x100,%r13d
	je L_387705
L_36401:
	cmpl $0x2A,%r13d
	jnl L_387691
L_36479:
	cmpl $0x1,%r13d
	jne L_387690
L_36482:
	cmpq $0x0,%r14
	jna L_387689
L_36484:
	movb 0x0(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movq (globalObjptr+0xE610)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (not_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_387689:
L_36472:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387690:
L_36481:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387691:
L_36402:
	movq $0x1,0x18(%rbp)
	xorl %ecx,%ecx
loop_502:
	cmpl $0x55,%ecx
	jnl L_387693
L_36470:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x20(%rbp)
	movslq %ecx,%r15
	cmpq $0x55,%r15
	jnb L_36472
L_36473:
	movq (globalObjptr+0xE2A8)(%rip),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movb %r13b,0x24(%rbp)
	movb %r13b,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (not_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_387693:
L_36403:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_387704
L_36404:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movb %r14b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_36405:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387703
.p2align 0x4,,0x7
L_36406:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_387694
L_36407:
	movq %r15,0x28(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movb %r15b,0x20(%rbp)
	jmp L_36405
.p2align 0x4
L_387694:
L_36408:
	movq %r15,0x18(%rbp)
L_36409:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_387702
L_36410:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36411:
	incl %ecx
	cmpq $0x1,%r15
	je L_387695
L_36412:
	movq 0x8(%r15),%r15
	jmp L_36411
.p2align 0x4
L_387695:
L_36413:
L_36414:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_387701
L_36415:
	cmpq $0x7FFFFFFF,%rdx
	ja L_387700
L_36416:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36417
.p2align 0x4
.long 0x45F
L_36417:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_36418:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_503:
	cmpq 0x20(%rbp),%r15
	jnl L_387697
L_36461:
	cmpq $0x1,%r14
	je L_36454
L_36462:
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_503
.p2align 0x4
L_387697:
L_36419:
	movq 0x28(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_504:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387699
.p2align 0x4,,0x7
L_36420:
	movq 0x20(%rbp),%r15
	cmpq $0x0,%r15
	jl L_387698
L_36421:
	movq %r15,%r14
	decq %r14
	movq 0x28(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r11b
	movq %r14,0x20(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_504
.p2align 0x4
L_387698:
L_36422:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (fromList_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3811
.p2align 0x4
L_387699:
L_36459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36460
.p2align 0x4
.long 0x4F3
L_36460:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_36420
.p2align 0x4
L_387700:
L_36456:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387701:
L_36465:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_36418
.p2align 0x4
L_387702:
L_36466:
	xorl %ecx,%ecx
	jmp L_36414
.p2align 0x4
L_387703:
L_36467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36468
.p2align 0x4
.long 0x4F3
L_36468:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_36406
.p2align 0x4
L_387704:
L_36469:
	movq $0x1,0x18(%rbp)
	jmp L_36409
.p2align 0x4
L_387705:
L_36490:
	movq (globalObjptr+0xA050)(%rip),%r14
	xchgq %r14,%r15
L_36435:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387706:
L_36399:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387709:
L_36497:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_36396
.p2align 0x4
L_387710:
L_36498:
	xorl %ecx,%ecx
	jmp L_36392
.p2align 0x4
.long 0x4E6
L_36329:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387711
L_36330:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl $0x0,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_36331:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_36332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387711:
L_36358:
	movq $0x1,%r15
L_36341:
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_36342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4E6
L_36298:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387712
L_36299:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl $0x0,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_36300:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_36301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387712:
L_36327:
	movq $0x1,%r15
L_36310:
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_36311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4A6
L_36267:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_36268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
.long 0x490
L_36252:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36253
L_36264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36265
.p2align 0x4
.long 0x5E6
L_36265:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36253:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36254:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_387716
L_36256:
	cmpq $0x1,%r14
	je L_387713
L_36257:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36254
.p2align 0x4
L_387713:
L_36258:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36259
L_36262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36263
.p2align 0x4
.long 0x5E5
L_36263:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36259:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387714
L_36260:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387714:
L_36261:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387716:
L_36255:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5ED
L_36365:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%ecx
	movl %ecx,0x28(%rbp)
L_36366:
	testl %ecx,%ecx
	jnz L_36370
	jmp L_36368
.p2align 0x4
.long 0x5ED
L_36381:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%ecx
	movl %ecx,0x28(%rbp)
	jmp L_36366
.p2align 0x4
.long 0x97F
L_36375:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x30(%rbp)
	jnz L_36368
L_36376:
	movb 0x24(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (not_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
.long 0x50C
not_5:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36485
L_36488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36489
.p2align 0x4
.long 0x980
L_36489:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36485:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_36481
L_36486:
	movq 0x28(%rbp),%r15
	jmp L_36435
.p2align 0x4
.long 0x2B
L_36434:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_36435
.p2align 0x4
.long 0x4E3
not_4:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36474
L_36477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36478
.p2align 0x4
.long 0x981
L_36478:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36474:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_387722
L_36475:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x20(%rbp),%ecx
	jmp loop_502
.p2align 0x4
L_387722:
L_36476:
	movl 0x20(%rbp),%ecx
	jmp loop_502
.p2align 0x4
.long 0x2B
fromList_5:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r14
	je L_387730
L_36423:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36424:
	incl %ecx
	cmpq $0x1,%r15
	je L_387724
L_36425:
	movq 0x8(%r15),%r15
	jmp L_36424
.p2align 0x4
L_387724:
L_36426:
L_36427:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_387729
L_36428:
	cmpq $0x7FFFFFFF,%rdx
	ja L_36456
L_36429:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36430
.p2align 0x4
.long 0x45F
L_36430:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_36431:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_505:
	cmpq 0x20(%rbp),%r15
	jnl L_387726
L_36451:
	cmpq $0x1,%r14
	je L_36454
L_36452:
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_505
.p2align 0x4
L_387726:
L_36432:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36433
L_36449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36450
.p2align 0x4
.long 0x980
L_36450:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36433:
	movq 0x28(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x488)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE608)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387729:
L_36457:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_36431
.p2align 0x4
L_387730:
L_36458:
	xorl %ecx,%ecx
	jmp L_36427
.p2align 0x4
.long 0x2B
L_36436:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_36437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x97F
L_36332:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36333
L_36356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36357
.p2align 0x4
.long 0x73C
L_36357:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36333:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x20(%rbp),%r14d
	incl %r14d
	jo L_36255
L_36334:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_387731
L_36335:
	movl %r14d,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_36331
.p2align 0x4
L_387731:
L_36336:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_36337:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387733
.p2align 0x4,,0x7
L_36338:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_36341
L_36339:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_36337
.p2align 0x4
L_387733:
L_36354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36355
.p2align 0x4
.long 0x720
L_36355:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_36338
.p2align 0x4
.long 0x490
L_36342:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36343
L_36352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36353
.p2align 0x4
.long 0x5E6
L_36353:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36343:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36344:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_36255
L_36345:
	cmpq $0x1,%r14
	je L_387736
L_36346:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36344
.p2align 0x4
L_387736:
L_36347:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36348
L_36350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36351
.p2align 0x4
.long 0x5E5
L_36351:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36348:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36261
L_36349:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x97F
L_36301:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36302
L_36325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36326
.p2align 0x4
.long 0x73C
L_36326:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36302:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x20(%rbp),%r14d
	incl %r14d
	jo L_36255
L_36303:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_387741
L_36304:
	movl %r14d,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_36300
.p2align 0x4
L_387741:
L_36305:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_36306:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387743
.p2align 0x4,,0x7
L_36307:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_36310
L_36308:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_36306
.p2align 0x4
L_387743:
L_36323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36324
.p2align 0x4
.long 0x720
L_36324:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_36307
.p2align 0x4
.long 0x490
L_36311:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36312
L_36321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36322
.p2align 0x4
.long 0x5E6
L_36322:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36312:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36313:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_36255
L_36314:
	cmpq $0x1,%r14
	je L_387746
L_36315:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36313
.p2align 0x4
L_387746:
L_36316:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36317
L_36319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36320
.p2align 0x4
.long 0x5E5
L_36320:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36317:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36261
L_36318:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E3
L_36268:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE5F0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
not_3:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_36368
	jmp L_36370
.p2align 0x4
.long 0x491
L_36437:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36438
L_36447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36448
.p2align 0x4
.long 0x4B2
L_36448:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36438:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36439:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_36255
L_36440:
	cmpq $0x1,%r14
	je L_387752
L_36441:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36439
.p2align 0x4
L_387752:
L_36442:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36443
L_36445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36446
.p2align 0x4
.long 0x5E5
L_36446:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36443:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36261
L_36444:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_36269:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_36270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x700
L_36270:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_36271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x700
L_36271:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36272
L_36295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36296
.p2align 0x4
.long 0x5EF
L_36296:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36272:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36273:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_36255
L_36274:
	cmpq $0x1,%r14
	je L_387757
L_36275:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36273
.p2align 0x4
L_387757:
L_36276:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36277
L_36293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_36294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36294
.p2align 0x4
.long 0x79F
L_36294:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_36277:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_387758
L_36278:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_36279:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_36280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_387758:
L_36292:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_36279
.p2align 0x4
.long 0x51B
L_36280:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36281
L_36290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36291
.p2align 0x4
.long 0x489
L_36291:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36281:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36282:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_36255
L_36283:
	cmpq $0x1,%r14
	je L_387762
L_36284:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36282
.p2align 0x4
L_387762:
L_36285:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36286
L_36288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_36289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36289
.p2align 0x4
.long 0x51C
L_36289:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_36286:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36261
L_36287:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl cp_0
.hidden cp_0
cp_0:
L_36503:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36504
L_36594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36595
.p2align 0x4
.long 0x495
L_36595:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_36504:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_36515
L_36505:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_36506:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0xC,%rax
	ja L_387767
	jmp *jumpTable_51(,%rax,8)
.data
.p2align 0x4
jumpTable_51:
.quad L_387812,L_387808,L_387805,L_36507,L_387801,L_387796,L_387789,L_36507,L_387786,L_387783,L_387776,L_36507,L_387771
.text
.p2align 0x4
L_387767:
L_36507:
	movl 0x0(%r15),%r13d
	movzbl 0x0(%rbp),%r11d
	cmpl 0x4(%r15),%r11d
	jl L_36512
L_36508:
	cmpl %r11d,%r13d
	jnl L_387769
L_36512:
	cmpq $0x1,%r14
	je L_387768
L_36513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36506
.p2align 0x4
L_387768:
L_36515:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387769:
L_36510:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387771:
L_36584:
	movb 0x0(%rbp),%r13b
	cmpb $0x61,%r13b
	jb L_387774
L_36585:
	cmpb $0x7A,%r13b
	jna L_36510
L_36587:
	cmpq $0x1,%r14
	je L_36515
L_36588:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36506
.p2align 0x4
L_387774:
L_36590:
	cmpq $0x1,%r14
	je L_36515
L_36591:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36506
.p2align 0x4
L_387776:
L_36571:
	movb 0x0(%rbp),%r15b
	cmpb $0x41,%r15b
	jb L_387780
L_36572:
	cmpb $0x61,%r15b
	jb L_387778
L_36573:
	cmpb $0x66,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387778:
L_36576:
	cmpb $0x46,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387780:
L_36579:
	cmpb $0x30,%r15b
	jb L_36512
L_36580:
	cmpb $0x39,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387783:
L_36566:
	movb 0x0(%rbp),%r15b
	cmpb $0x20,%r15b
	jb L_36512
L_36567:
	cmpb $0x7E,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387786:
L_36561:
	movb 0x0(%rbp),%r15b
	cmpb $0x20,%r15b
	jb L_36510
L_36562:
	cmpb $0x7F,%r15b
	je L_36510
	jmp L_36512
.p2align 0x4
L_387789:
L_36548:
	movb 0x0(%rbp),%r15b
	cmpb $0x41,%r15b
	jb L_387793
L_36549:
	cmpb $0x61,%r15b
	jb L_387791
L_36550:
	cmpb $0x7A,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387791:
L_36553:
	cmpb $0x5A,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387793:
L_36556:
	cmpb $0x30,%r15b
	jb L_36512
L_36557:
	cmpb $0x39,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387796:
L_36539:
	movb 0x0(%rbp),%r15b
	cmpb $0x61,%r15b
	jb L_387798
L_36540:
	cmpb $0x7A,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387798:
L_36543:
	cmpb $0x41,%r15b
	jb L_36512
L_36544:
	cmpb $0x5A,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387801:
L_36534:
	movb 0x0(%rbp),%r15b
	cmpb $0x21,%r15b
	jb L_36512
L_36535:
	cmpb $0x7E,%r15b
	jna L_36510
	jmp L_36512
.p2align 0x4
L_387805:
L_36529:
	movb 0x0(%rbp),%r15b
	cmpb $0x5A,%r15b
	ja L_36512
L_36530:
	cmpb $0x41,%r15b
	jnb L_36510
	jmp L_36512
.p2align 0x4
L_387808:
L_36522:
	movb 0x0(%rbp),%r15b
	cmpb $0xD,%r15b
	ja L_387810
L_36523:
	cmpb $0x9,%r15b
	jnb L_36510
	jmp L_36512
.p2align 0x4
L_387810:
L_36526:
	cmpb $0x20,%r15b
	je L_36510
	jmp L_36512
.p2align 0x4
L_387812:
L_36517:
	movb 0x0(%rbp),%r15b
	cmpb $0x39,%r15b
	ja L_36512
L_36518:
	cmpb $0x30,%r15b
	jnb L_36510
	jmp L_36512
.text
.p2align 0x4
.globl loop_3811
.hidden loop_3811
loop_3811:
L_36596:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36597
L_36601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_36602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36602
.p2align 0x4
.long 0x452
L_36602:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_36597:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_387817
L_36598:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x8(%rbp)
	addq $0x18,%rbp
	leaq (L_36599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3811
.p2align 0x4
L_387817:
L_36600:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_36599:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp loopP_0
.text
.p2align 0x4
.globl loopP_0
.hidden loopP_0
loopP_0:
L_36603:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_36614
L_36604:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387821
L_36605:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_387820
L_36606:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x9(%rbp)
	movb 0x8(%rbp),%r15b
	cmpb %r13b,%r15b
	jb L_387819
L_36607:
	movq %r14,0x18(%rbp)
	movb %r15b,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_36608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopP_0
.p2align 0x4
L_387819:
L_36612:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movzbl 0x9(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387820:
L_36613:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387821:
L_36614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36615
.p2align 0x4
.long 0x458
L_36615:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_36605
.p2align 0x4
.long 0x25
L_36608:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36609
L_36610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36611
.p2align 0x4
.long 0x24
L_36611:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_36609:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x9(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl alignPrefix_0
.hidden alignPrefix_0
alignPrefix_0:
L_36616:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_36663
L_36617:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387826
L_36618:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387825
L_36619:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x10(%rbp)
	cmpq $0x1,%r13
	je L_387824
L_36620:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_36621:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387824:
L_36661:
	movq $0x1,%r15
L_36638:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_387825:
L_36662:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387826:
L_36663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36664
.p2align 0x4
.long 0x460
L_36664:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_36618
.p2align 0x4
.long 0x4DE
L_36622:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36623
L_36659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36660
.p2align 0x4
.long 0x4DF
L_36660:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36623:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36624:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_387834
L_36626:
	cmpq $0x1,%r14
	je L_387828
L_36627:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36624
.p2align 0x4
L_387828:
L_36628:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36629
L_36657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36658
.p2align 0x4
.long 0x983
L_36658:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36629:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_387832
L_36630:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_36631:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_387829
L_36632:
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,%r15
	jmp L_36621
.p2align 0x4
L_387829:
L_36633:
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_36634:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387831
.p2align 0x4,,0x7
L_36635:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_36638
L_36636:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_36634
.p2align 0x4
L_387831:
L_36654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36655
.p2align 0x4
.long 0x520
L_36655:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_36635
.p2align 0x4
L_387832:
L_36656:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_36631
.p2align 0x4
L_387834:
L_36625:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_36639:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36640
L_36652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36653
.p2align 0x4
.long 0x982
L_36653:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36640:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_387837
L_36641:
	decl %ecx
	jo L_36625
L_36642:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_36643:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0xFFFFFFFE,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_36644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_387837:
L_36651:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_36643
.p2align 0x4
.long 0x1
L_36644:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36645
L_36649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36650
.p2align 0x4
.long 0x495
L_36650:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_36645:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387840
L_36646:
	decl %r15d
	jo L_36625
L_36647:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387840:
L_36648:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_13
.hidden layout_13
layout_13:
L_36665:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_36921
L_36666:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387951
L_36667:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r11
	cmpq $0x1,%r11
	je L_387950
L_36668:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE82,%r15
	je L_387948
	cmpq $0xE83,%r15
	je L_387937
	cmpq $0xE84,%r15
	je L_387935
	cmpq $0xE85,%r15
	je L_387934
	cmpq $0xE86,%r15
	je L_387844
	cmpq $0xE87,%r15
	je L_387842
L_36669:
	movq %r13,0x58(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_36670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_387842:
L_36871:
	movq 0x10(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r14),%r10
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_387843
L_36918:
	movq %r10,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_36919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_387843:
L_36872:
	movq %r14,%r15
L_36873:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_36874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387844:
L_36728:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23DB,%r14
	je L_387916
	cmpq $0x23DC,%r14
	je L_387898
	cmpq $0x23DD,%r14
	je L_387880
	cmpq $0x23DE,%r14
	je L_387862
L_36729:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_387861
L_36730:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_387860
L_36733:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_387845
	jmp *jumpTable_52(,%rax,8)
.data
.p2align 0x4
jumpTable_52:
.quad L_387859,L_387858,L_387857,L_387856,L_387855,L_387854,L_387853,L_387852,L_387851,L_387850,L_387849,L_387848,L_387847,L_387846
.text
.p2align 0x4
L_387845:
L_36734:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387846:
L_36756:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387847:
L_36755:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387848:
L_36754:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387849:
L_36753:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387850:
L_36752:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387851:
L_36751:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387852:
L_36750:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387853:
L_36749:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387854:
L_36748:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387855:
L_36747:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387856:
L_36746:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387857:
L_36745:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387858:
L_36744:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387859:
L_36743:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36739(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387860:
L_36731:
	movq 0x0(%r15),%r13
	movq %r13,%r15
L_36732:
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp layout_32
.p2align 0x4
L_387861:
L_36758:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387862:
L_36843:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_36758
L_36844:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_387878
L_36846:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_387863
	jmp *jumpTable_53(,%rax,8)
.data
.p2align 0x4
jumpTable_53:
.quad L_387877,L_387876,L_387875,L_387874,L_387873,L_387872,L_387871,L_387870,L_387869,L_387868,L_387867,L_387866,L_387865,L_387864
.text
.p2align 0x4
L_387863:
L_36847:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387864:
L_36869:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387865:
L_36868:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387866:
L_36867:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387867:
L_36866:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387868:
L_36865:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387869:
L_36864:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387870:
L_36863:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387871:
L_36862:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387872:
L_36861:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387873:
L_36860:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387874:
L_36859:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387875:
L_36858:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387876:
L_36857:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387877:
L_36856:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36852(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387878:
L_36845:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_36732
.p2align 0x4
L_387880:
L_36815:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_36758
L_36816:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_387896
L_36818:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_387881
	jmp *jumpTable_54(,%rax,8)
.data
.p2align 0x4
jumpTable_54:
.quad L_387895,L_387894,L_387893,L_387892,L_387891,L_387890,L_387889,L_387888,L_387887,L_387886,L_387885,L_387884,L_387883,L_387882
.text
.p2align 0x4
L_387881:
L_36819:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387882:
L_36841:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387883:
L_36840:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387884:
L_36839:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387885:
L_36838:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387886:
L_36837:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387887:
L_36836:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387888:
L_36835:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387889:
L_36834:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387890:
L_36833:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387891:
L_36832:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387892:
L_36831:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387893:
L_36830:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387894:
L_36829:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387895:
L_36828:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36824(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387896:
L_36817:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_36732
.p2align 0x4
L_387898:
L_36787:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_36758
L_36788:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_387914
L_36790:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_387899
	jmp *jumpTable_55(,%rax,8)
.data
.p2align 0x4
jumpTable_55:
.quad L_387913,L_387912,L_387911,L_387910,L_387909,L_387908,L_387907,L_387906,L_387905,L_387904,L_387903,L_387902,L_387901,L_387900
.text
.p2align 0x4
L_387899:
L_36791:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387900:
L_36813:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387901:
L_36812:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387902:
L_36811:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387903:
L_36810:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387904:
L_36809:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387905:
L_36808:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387906:
L_36807:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387907:
L_36806:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387908:
L_36805:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387909:
L_36804:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387910:
L_36803:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387911:
L_36802:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387912:
L_36801:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387913:
L_36800:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36796(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387914:
L_36789:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_36732
.p2align 0x4
L_387916:
L_36759:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_36758
L_36760:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_387932
L_36762:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x206F,%rax
	cmpq $0xD,%rax
	ja L_387917
	jmp *jumpTable_56(,%rax,8)
.data
.p2align 0x4
jumpTable_56:
.quad L_387931,L_387930,L_387929,L_387928,L_387927,L_387926,L_387925,L_387924,L_387923,L_387922,L_387921,L_387920,L_387919,L_387918
.text
.p2align 0x4
L_387917:
L_36763:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387918:
L_36785:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387919:
L_36784:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387920:
L_36783:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387921:
L_36782:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387922:
L_36781:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387923:
L_36780:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387924:
L_36779:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387925:
L_36778:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387926:
L_36777:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387927:
L_36776:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387928:
L_36775:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387929:
L_36774:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387930:
L_36773:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387931:
L_36772:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36768(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387932:
L_36761:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_36732
.p2align 0x4
L_387934:
L_36710:
	movq %r13,0x58(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_36711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_387935:
L_36706:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_387936
L_36708:
	movl %r13d,0x30(%rbp)
	movq $0x3BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_36709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387936:
L_36674:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387937:
L_36677:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1261,%r14
	je L_387947
L_36695:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x20(%rbp)
	jne L_36674
L_36697:
	testq %rdx,%rdx
	jz L_387945
L_36698:
	cmpq $0x7FFFFFFF,%rdx
	ja L_387944
L_36699:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36700
.p2align 0x4
.long 0x7B7
L_36700:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,%r15
L_36701:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_507:
	cmpq 0x28(%rbp),%r14
	jnl L_387938
L_36703:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x20(%rbp),%r8
	movq 0x0(%r8,%r9,8),%rsp
	movl %r13d,%r9d
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r10
	movq %r9,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_507
.p2align 0x4
L_387938:
L_36702:
	movq $0xB57,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x20(%rbp)
L_36679:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_36674
L_36681:
	decl %ecx
	jo L_36682
L_36683:
	movq $0x1,0x28(%rbp)
loop_506:
	cmpl $0x0,%ecx
	jl L_387941
L_36684:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x38(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x40(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_387939
L_36685:
	movq 0x10(%r14),%r15
	movq %r15,0x48(%rbp)
L_36686:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_36687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_13
.p2align 0x4
L_387939:
L_36691:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_387940
L_36692:
	movl %r15d,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_36693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387940:
L_36682:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387941:
L_36694:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp record_3
.p2align 0x4
L_387944:
L_36704:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387945:
L_36705:
	movq (globalObjptr+0x1C08)(%rip),%r15
	jmp L_36701
.p2align 0x4
L_387947:
L_36678:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_36679
.p2align 0x4
L_387948:
L_36672:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_36674
L_36675:
	movl %r13d,0x30(%rbp)
	movq $0x3C15,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_36676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387950:
L_36920:
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_387951:
L_36921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_36922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36922
.p2align 0x4
.long 0x45D
L_36922:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_36667
.p2align 0x4
.long 0x6DB
L_36670:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_36671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x49F
L_36919:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_36873
.p2align 0x4
.long 0x7BF
L_36874:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36875
L_36916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36917
.p2align 0x4
.long 0x98A
L_36917:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36875:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz L_36877
L_36904:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_36674
L_36906:
	cmpl $0x0,%r11d
	jng L_387953
L_36908:
	movl %r11d,0x50(%rbp)
	movq $0x3BBD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_36909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387953:
L_36877:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_387954
L_36878:
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
L_36879:
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_36880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387954:
L_36903:
	movq $0x1,%r13
	xorl %ecx,%ecx
	movq (globalObjptr+0x9D0)(%rip),%r14
	xchgq %r13,%r15
L_36889:
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r11)
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_36890:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36682
L_36891:
	cmpq $0x1,%r15
	je L_387955
L_36892:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_36890
.p2align 0x4
L_387955:
L_36893:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36894
L_36896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36897
.p2align 0x4
.long 0x4E7
L_36897:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36894:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387956
L_36895:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387956:
L_36723:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_36735:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36736
L_36737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36738
.p2align 0x4
.long 0x7C1
L_36738:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36736:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36732
.p2align 0x4
.long 0x25
L_36739:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36740
L_36741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36742
.p2align 0x4
.long 0x4FD
L_36742:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36740:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_36848:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36849
L_36850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36851
.p2align 0x4
.long 0x7C1
L_36851:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36849:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36732
.p2align 0x4
.long 0x25
L_36852:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36853
L_36854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36855
.p2align 0x4
.long 0x4FD
L_36855:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36853:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_36820:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36821
L_36822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36823
.p2align 0x4
.long 0x7C1
L_36823:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36821:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36732
.p2align 0x4
.long 0x25
L_36824:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36825
L_36826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36827
.p2align 0x4
.long 0x4FD
L_36827:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36825:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_36792:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36793
L_36794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36795
.p2align 0x4
.long 0x7C1
L_36795:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36793:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36732
.p2align 0x4
.long 0x25
L_36796:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36797
L_36798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36799
.p2align 0x4
.long 0x4FD
L_36799:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36797:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_36764:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36765
L_36766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36767
.p2align 0x4
.long 0x7C1
L_36767:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36765:
	movq $0x2919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36732
.p2align 0x4
.long 0x25
L_36768:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36769
L_36770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36771
.p2align 0x4
.long 0x4FD
L_36771:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36769:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BA
L_36711:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_36712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
L_36709:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x984
L_36687:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36688
L_36689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36690
.p2align 0x4
.long 0x985
L_36690:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_36688:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	movl 0x38(%rbp),%ecx
	jmp loop_506
.p2align 0x4
.long 0x986
L_36693:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_36686
.p2align 0x4
.long 0x474
L_36676:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x6DB
L_36671:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp maybeConstrain_0
.p2align 0x4
.long 0x8F8
L_36909:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_36910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x987
L_36880:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_36881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_13
.p2align 0x4
.long 0x7BA
L_36712:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_36713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeConstrain_0
.p2align 0x4
.long 0x8F8
L_36910:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36911
L_36914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36915
.p2align 0x4
.long 0x989
L_36915:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36911:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_387973
L_36912:
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_36879
.p2align 0x4
L_387973:
L_36913:
	movq $0x1,%r13
	xorl %ecx,%ecx
	movq 0x20(%rbp),%r14
	xchgq %r13,%r15
	jmp L_36889
.p2align 0x4
.long 0x7B5
L_36881:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36882
L_36901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36902
.p2align 0x4
.long 0x5EF
L_36902:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36882:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36883:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_36682
L_36884:
	cmpq $0x1,%r14
	je L_387975
L_36885:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36883
.p2align 0x4
L_387975:
L_36886:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36887
L_36899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_36900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36900
.p2align 0x4
.long 0x988
L_36900:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_36887:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_387976
L_36888:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	jmp L_36889
.p2align 0x4
L_387976:
L_36898:
	movq $0x1,%r15
	xorl %r13d,%r13d
	movq 0x28(%rbp),%r14
	xchgl %r13d,%ecx
	jmp L_36889
.p2align 0x4
.long 0x497
L_36713:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xDF90)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x639
L_36714:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_36715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_13
.p2align 0x4
.long 0x5F2
L_36715:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36716
L_36726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36727
.p2align 0x4
.long 0x4FD
L_36727:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36716:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36717:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_36682
L_36718:
	cmpq $0x1,%r14
	je L_387980
L_36719:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36717
.p2align 0x4
L_387980:
L_36720:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36721
L_36724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36725
.p2align 0x4
.long 0x7BB
L_36725:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36721:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36723
L_36722:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_14
.hidden get_14
get_14:
L_36923:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_37074
L_36924:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388011
L_36925:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_388010
L_36927:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_388009
L_36928:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_36930:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_36931
L_37066:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB4,%r13
	jne L_36931
L_37067:
	movq 0x8(%r14),%r13
	movq (globalObjptr+0x500)(%rip),%r11
	cmpq %r11,0x0(%r14)
	je L_388004
L_36931:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_388003
L_36933:
	cmpq $0x1,%r15
	je L_387985
L_36934:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_36930
.p2align 0x4
L_387985:
L_36935:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36936
L_37064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37065
.p2align 0x4
.long 0x811
L_37065:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36936:
	movl 0x28(%rbp),%ecx
L_36937:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_388001
L_36939:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_36941
L_37063:
	movl %ecx,0x0(%r15)
L_36941:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_387999
	cmpq $0x2,%r15
	je L_387998
	cmpq $0x3,%r15
	je L_387997
	cmpq $0x5,%r15
	je L_387995
L_36942:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_387994
	cmpq $0xEB1,%r15
	je L_387993
	cmpq $0xEB2,%r15
	je L_387990
	cmpq $0xEB3,%r15
	je L_387989
	cmpq $0xEB4,%r15
	je L_387987
	cmpq $0xEB5,%r15
	je L_387986
L_36943:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_36944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_387986:
L_37041:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_37042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_387987:
L_37036:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x18(%r15),%r10
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	jne L_387988
L_37039:
	movq %r10,0x30(%rbp)
	movq %r13,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_37040+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_387988:
L_37037:
L_37038:
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387989:
L_37022:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_37023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_387990:
L_36983:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_387992
L_36985:
	testl %r13d,%r13d
	jz L_387991
L_36986:
	movl %r13d,0x38(%rbp)
	movq $0x3C2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387991:
L_37021:
	movq (globalObjptr+0xCD50)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387992:
L_36984:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387993:
L_36969:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_36970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_387994:
L_36954:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_36955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_387995:
L_37058:
	shrq $0x3,%r14
	movb %r14b,%r13b
	testb %r13b,%r13b
	jnz L_387996
L_37059:
	movq (globalObjptr+0xD860)(%rip),%r15
L_37060:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xBAE8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387996:
L_37062:
	movq (globalObjptr+0xD878)(%rip),%r15
	jmp L_37060
.p2align 0x4
L_387997:
L_37057:
	movq (globalObjptr+0xCD98)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387998:
L_37056:
	movq (globalObjptr+0xBAF8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387999:
L_37055:
	movq (globalObjptr+0xE638)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388001:
L_36938:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388003:
L_36932:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388004:
L_37069:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_36938
L_37070:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_388005
L_37072:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388005:
L_37071:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388009:
L_37073:
	xorl %ecx,%ecx
	jmp L_36937
.p2align 0x4
L_388010:
L_36926:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388011:
L_37074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37075
.p2align 0x4
.long 0x460
L_37075:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_36925
.p2align 0x4
.long 0x45A
L_36944:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36945
L_36952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36953
.p2align 0x4
.long 0x509
L_36953:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36945:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBC0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x45A
L_37042:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE630)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_37040:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_37038
.p2align 0x4
.long 0x45A
L_36947:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36948
L_36950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36951
.p2align 0x4
.long 0x509
L_36951:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36948:
	movq 0x28(%rbp),%r15
L_36949:
	movq $0x1969,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x500)(%rip),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45A
L_37023:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A
L_36987:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36988
L_37019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37020
.p2align 0x4
.long 0x509
L_37020:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36988:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_388015
L_36989:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xE628)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_36990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388015:
L_37018:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_36998:
	testl %ecx,%ecx
	jz L_388016
L_36999:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
paren_11:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388016:
L_37013:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp paren_11
.p2align 0x4
.long 0x45A
L_36970:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE340)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A
L_36955:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE338)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A
L_37061:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A
L_36946:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EE
L_37043:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37044
L_37053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37054
.p2align 0x4
.long 0x4FD
L_37054:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37044:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37045:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36932
L_37046:
	cmpq $0x1,%r14
	je L_388018
L_37047:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37045
.p2align 0x4
L_388018:
L_37048:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37049
L_37051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37052
.p2align 0x4
.long 0x7B6
L_37052:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37049:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388019
L_37050:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36949
.p2align 0x4
L_388019:
L_36964:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_36949
.p2align 0x4
.long 0x5EE
L_37024:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37025
L_37034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37035
.p2align 0x4
.long 0x4FD
L_37035:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37025:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37026:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36932
L_37027:
	cmpq $0x1,%r14
	je L_388023
L_37028:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37026
.p2align 0x4
L_388023:
L_37029:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37030
L_37032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37033
.p2align 0x4
.long 0x7B6
L_37033:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37030:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36964
L_37031:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36949
.p2align 0x4
.long 0x75E
L_36990:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_36991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x5EE
L_37000:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EE
L_36971:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36972
L_36981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36982
.p2align 0x4
.long 0x4FD
L_36982:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36972:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36973:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36932
L_36974:
	cmpq $0x1,%r14
	je L_388028
L_36975:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36973
.p2align 0x4
L_388028:
L_36976:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36977
L_36979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36980
.p2align 0x4
.long 0x7B6
L_36980:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36977:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36964
L_36978:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36949
.p2align 0x4
.long 0x5EE
L_36956:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36957
L_36967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36968
.p2align 0x4
.long 0x4FD
L_36968:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36957:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36958:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36932
L_36959:
	cmpq $0x1,%r14
	je L_388033
L_36960:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36958
.p2align 0x4
L_388033:
L_36961:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36962
L_36965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36966
.p2align 0x4
.long 0x7B6
L_36966:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36962:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36964
L_36963:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36949
.p2align 0x4
.long 0x7CC
L_36991:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36992
L_37016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37017
.p2align 0x4
.long 0x816
L_37017:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36992:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36993:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36932
L_36994:
	cmpq $0x1,%r14
	je L_388038
L_36995:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36993
.p2align 0x4
L_388038:
L_36996:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36997
L_37014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37015
.p2align 0x4
.long 0x601
L_37015:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36997:
	movq 0x30(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_36998
.p2align 0x4
.long 0x700
L_37001:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37002
L_37011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37012
.p2align 0x4
.long 0x5EF
L_37012:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37002:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37003:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36932
L_37004:
	cmpq $0x1,%r14
	je L_388042
L_37005:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37003
.p2align 0x4
L_388042:
L_37006:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37007
L_37009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37010
.p2align 0x4
.long 0x785
L_37010:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37007:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36964
L_37008:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36949
.text
.p2align 0x4
.globl layout_30
.hidden layout_30
layout_30:
L_37076:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_37077
L_37253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37254
.p2align 0x4
.long 0x460
L_37254:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37077:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_388051
L_37080:
	decl %r13d
	jo L_388050
L_37082:
	movl %r13d,0x28(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
loop_508:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388049
.p2align 0x4,,0x7
L_37083:
	movl 0x28(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_388047
L_37084:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2701,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp loop_508
.p2align 0x4
L_388047:
L_37085:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_388048
L_37086:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq (globalObjptr+0x1730)(%rip),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_388048:
L_37250:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388049:
L_37251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37252
.p2align 0x4
.long 0x651
L_37252:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_37083
.p2align 0x4
L_388050:
L_37081:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388051:
L_37079:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E3
L_37087:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E3
L_37088:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x98B
L_37089:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37090
L_37248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37249
.p2align 0x4
.long 0x4B1
L_37249:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37090:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37079
L_37092:
	cmpl $0x0,%r13d
	je L_388055
	cmpl $0x1,%r13d
	je L_388053
L_37093:
	movl %r13d,0x50(%rbp)
	movq $0x3BF1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388053:
L_37232:
	cmpq $0x0,%r14
	jna L_388054
L_37234:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388054:
L_37198:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388055:
L_37104:
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_37105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x790
L_37094:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_37095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x790
L_37235:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A7
L_37105:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x790
L_37095:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A9
L_37236:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37237
L_37246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37247
.p2align 0x4
.long 0x86F
L_37247:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37237:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37238:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37081
L_37239:
	cmpq $0x1,%r14
	je L_388058
L_37240:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37238
.p2align 0x4
L_388058:
L_37241:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37242
L_37244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37245
.p2align 0x4
.long 0x993
L_37245:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37242:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388059
L_37243:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_37104
.p2align 0x4
L_388059:
L_37226:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_37104
.p2align 0x4
.long 0x4A8
L_37106:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A9
L_37096:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37097
L_37229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37230
.p2align 0x4
.long 0x86F
L_37230:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37097:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37098:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37081
L_37099:
	cmpq $0x1,%r14
	je L_388063
L_37100:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37098
.p2align 0x4
L_388063:
L_37101:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37102
L_37227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37228
.p2align 0x4
.long 0x993
L_37228:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37102:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37226
L_37103:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_37104
.p2align 0x4
.long 0x4A9
L_37107:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37108
L_37224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37225
.p2align 0x4
.long 0x86F
L_37225:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37108:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37109:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_37081
L_37110:
	cmpq $0x1,%r14
	je L_388068
L_37111:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37109
.p2align 0x4
L_388068:
L_37112:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37113
L_37222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37223
.p2align 0x4
.long 0x992
L_37223:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37113:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388069
L_37114:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_37115:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388069:
L_37221:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37115
.p2align 0x4
.long 0x4A7
L_37116:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37117
L_37219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37220
.p2align 0x4
.long 0x721
L_37220:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37117:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37118:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_37081
L_37119:
	cmpq $0x1,%r14
	je L_388073
L_37120:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37118
.p2align 0x4
L_388073:
L_37121:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37122
L_37217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37218
.p2align 0x4
.long 0x5F8
L_37218:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37122:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388075
L_37123:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_37124:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_388074
L_37125:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_37126:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388074:
L_37215:
	movq $0x1,%r14
	xchgq %r14,%r15
L_37170:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_37171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388075:
L_37216:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37124
.p2align 0x4
.long 0x4A8
L_37127:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_37171:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37172
L_37176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37177
.p2align 0x4
.long 0x495
L_37177:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37172:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388080
L_37173:
	decl %r15d
	jo L_37081
L_37174:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388080:
L_37175:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x98C
L_37128:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37129
L_37213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37214
.p2align 0x4
.long 0x85A
L_37214:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37129:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37079
L_37131:
	cmpl $0x0,%r13d
	je L_388084
	cmpl $0x1,%r13d
	je L_388082
L_37132:
	movl %r13d,0x60(%rbp)
	movq $0x3BF1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388082:
L_37196:
	cmpq $0x0,%r14
	jna L_37198
L_37199:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388084:
L_37143:
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_37144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x98D
L_37133:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_37134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x98D
L_37200:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A9
L_37144:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_37145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x98D
L_37134:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x98E
L_37201:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37202
L_37211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37212
.p2align 0x4
.long 0x990
L_37212:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37202:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37203:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37081
L_37204:
	cmpq $0x1,%r14
	je L_388087
L_37205:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37203
.p2align 0x4
L_388087:
L_37206:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37207
L_37209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37210
.p2align 0x4
.long 0x991
L_37210:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37207:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388088
L_37208:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_37143
.p2align 0x4
L_388088:
L_37190:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_37143
.p2align 0x4
.long 0x8BB
L_37145:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x98E
L_37135:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37136
L_37193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37194
.p2align 0x4
.long 0x990
L_37194:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37136:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37137:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37081
L_37138:
	cmpq $0x1,%r14
	je L_388092
L_37139:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37137
.p2align 0x4
L_388092:
L_37140:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37141
L_37191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37192
.p2align 0x4
.long 0x991
L_37192:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37141:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37190
L_37142:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_37143
.p2align 0x4
.long 0x98E
L_37146:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37147
L_37188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37189
.p2align 0x4
.long 0x990
L_37189:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37147:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37148:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37081
L_37149:
	cmpq $0x1,%r14
	je L_388097
L_37150:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37148
.p2align 0x4
L_388097:
L_37151:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37152
L_37186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37187
.p2align 0x4
.long 0x8AF
L_37187:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37152:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388098
L_37153:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_37154:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388098:
L_37185:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37154
.p2align 0x4
.long 0x4A9
L_37155:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37156
L_37183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37184
.p2align 0x4
.long 0x86F
L_37184:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37156:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37157:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37081
L_37158:
	cmpq $0x1,%r14
	je L_388102
L_37159:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37157
.p2align 0x4
L_388102:
L_37160:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37161
L_37181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37182
.p2align 0x4
.long 0x98F
L_37182:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37161:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388106
L_37162:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_37163:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_388103
L_37164:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_37126
.p2align 0x4
L_388103:
L_37165:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_37166:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388105
.p2align 0x4,,0x7
L_37167:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_37170
L_37168:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_37166
.p2align 0x4
L_388105:
L_37178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37179
.p2align 0x4
.long 0x5EF
L_37179:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_37167
.p2align 0x4
L_388106:
L_37180:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37163
.text
.p2align 0x4
.globl layout_15
.hidden layout_15
layout_15:
loopS_1:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_37255
L_37451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37452
.p2align 0x4
.long 0x460
L_37452:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37255:
	movq 0x0(%rbp),%r15
.p2align 0x4,,0x7
loop_509:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDEB,%r15
	je L_388120
	cmpq $0xDEC,%r15
	je L_388110
L_37256:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_388110:
L_37354:
	movq 0x8(%r14),%r8
	movq %r8,0x10(%rbp)
	movq 0x0(%r14),%r10
	movq 0x8(%r10),%r8
	movq 0x0(%r8),%r15
	movq 0x8(%r8),%r11
	movq 0x8(%r13),%r8
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%rsp
	cmpq $0x1,%r15
	je L_388119
L_37355:
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq %r14,%r15
	movq %r8,%r14
	movq %rsp,%r13
.p2align 0x4,,0x7
L_37357:
	movq %r15,%r8
	andq $0x3,%r8
	jnz L_388118
L_37397:
	movq 0x8(%r15),%r8
	movq 0x8(%r14),%rsp
	movq 0x0(%r15),%rsi
	movq 0x8(%rsi),%rdi
	movq 0x8(%rdi),%rdx
	cmpq %rdx,0x8(%rsp)
	jne L_388117
L_37399:
	cmpq $0x1,%r9
	je L_388111
L_37400:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	movq %r8,%r15
	jmp L_37357
.p2align 0x4
L_388111:
L_37401:
	movq %r8,%r15
	movq %r13,%r14
	movq %r11,%r13
	movq %r10,%r11
L_37402:
	cmpq $0x1,%r15
	jne L_37358
L_37403:
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r15)
	jne L_388115
L_37405:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_388114
L_37407:
	cmpl $0x2,%r15d
	je L_388112
L_37408:
	movq (globalObjptr+0x1718)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388112:
L_37409:
	cmpq $0x0,0x18(%rbp)
	jna L_388113
L_37411:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_37412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
L_388113:
L_37352:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388114:
L_37262:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388115:
L_37358:
	movq %r11,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_37359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_388117:
	movq %r10,%r11
	jmp L_37358
.p2align 0x4
L_388118:
	movq %r10,%r11
	jmp L_37358
.p2align 0x4
L_388119:
L_37450:
	movq %r14,%r15
	movq %rsp,%r14
	movq %r11,%r13
	movq %r10,%r11
	jmp L_37402
.p2align 0x4
L_388120:
L_37257:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDED,%r14
	je L_388126
L_37291:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r14,0x10(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x18(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_37262
L_37293:
	cmpl $0x0,%r14d
	je L_388124
	cmpl $0x1,%r14d
	je L_388122
L_37294:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37295
L_37347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_37348+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37348
.p2align 0x4
.long 0x49C
L_37348:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_37295:
	movq $0x3BE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_37296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388122:
L_37350:
	cmpq $0x0,%r15
	jna L_37352
L_37353:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp loop_509
.p2align 0x4
L_388124:
L_37349:
	movq (globalObjptr+0xCD50)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_388126:
L_37258:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_37259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F5
L_37412:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE358)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E6
L_37359:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37360
L_37395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37396
.p2align 0x4
.long 0x4E2
L_37396:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37360:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37262
L_37362:
	cmpl $0x0,%r13d
	je L_388130
	cmpl $0x1,%r13d
	je L_388128
L_37363:
	movl %r13d,0x40(%rbp)
	movq $0x3BE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388128:
L_37379:
	cmpq $0x0,%r14
	jna L_37352
L_37381:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_37382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
L_388130:
L_37378:
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_37296:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37297
L_37345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_37346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37346
.p2align 0x4
.long 0x452
L_37346:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_37297:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_388134
L_37298:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	cmpq $0x1,%r13
	je L_388133
L_37299:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_37300:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0xE350)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388133:
L_37343:
	movq 0x0(%rbp),%r15
x_73:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_37316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388134:
L_37344:
	movq $0x1,%r15
	jmp x_73
.p2align 0x4
.long 0x5F0
L_37259:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37260
L_37289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37290
.p2align 0x4
.long 0x4EA
L_37290:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37260:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_37262
L_37263:
	movl %r13d,0x38(%rbp)
	movq $0x3BEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x518
L_37413:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,0x18(%rbp)
	jna L_37352
L_37415:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_37416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x51B
L_37364:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_37365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x51B
L_37382:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A6
L_37301:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37302
L_37341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37342
.p2align 0x4
.long 0x638
L_37342:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_37302:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37303:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_388145
L_37304:
	cmpq $0x1,%r14
	je L_388139
L_37305:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37303
.p2align 0x4
L_388139:
L_37306:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37307
L_37339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37340
.p2align 0x4
.long 0x75C
L_37340:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37307:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388143
L_37308:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_37309:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_388140
L_37310:
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r14,%r15
	jmp L_37300
.p2align 0x4
L_388140:
L_37311:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_37312:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388142
.p2align 0x4,,0x7
L_37313:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_388141
L_37314:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_37312
.p2align 0x4
L_388141:
L_37315:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,%r15
	jmp x_73
.p2align 0x4
L_388142:
L_37336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37337
.p2align 0x4
.long 0x4EA
L_37337:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_37313
.p2align 0x4
L_388143:
L_37338:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37309
.p2align 0x4
L_388145:
L_37269:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_37316:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37317
L_37334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37335
.p2align 0x4
.long 0x495
L_37335:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37317:
	movl 0x0(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388148
L_37318:
	decl %ecx
	jo L_37269
L_37319:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
paren_12:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_37320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388148:
L_37333:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_12
.p2align 0x4
.long 0x45A
L_37264:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_37265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x5EE
L_37416:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37417
L_37448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37449
.p2align 0x4
.long 0x4FD
L_37449:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37417:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37418:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37269
L_37419:
	cmpq $0x1,%r14
	je L_388150
L_37420:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37418
.p2align 0x4
L_388150:
L_37421:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37422
L_37446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37447
.p2align 0x4
.long 0x7B6
L_37447:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37422:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388151
L_37423:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_37424:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_37425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388151:
L_37445:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37424
.p2align 0x4
.long 0x51B
L_37365:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F2
L_37383:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37384
L_37393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37394
.p2align 0x4
.long 0x48A
L_37394:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37384:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37385:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_37269
L_37386:
	cmpq $0x1,%r14
	je L_388155
L_37387:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37385
.p2align 0x4
L_388155:
L_37388:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37389
L_37391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37392
.p2align 0x4
.long 0x5F3
L_37392:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37389:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388156
L_37390:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388156:
L_37281:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_37320:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_37321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A
L_37265:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x1
L_37425:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37426
L_37443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37444
.p2align 0x4
.long 0x495
L_37444:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37426:
	movl 0x0(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388161
L_37427:
	decl %ecx
	jo L_37269
L_37428:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
paren_13:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_37429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388161:
L_37442:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_13
.p2align 0x4
.long 0x5F2
L_37366:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37367
L_37376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37377
.p2align 0x4
.long 0x48A
L_37377:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37367:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37368:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_37269
L_37369:
	cmpq $0x1,%r14
	je L_388163
L_37370:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37368
.p2align 0x4
L_388163:
L_37371:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37372
L_37374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37375
.p2align 0x4
.long 0x5F3
L_37375:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37372:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37281
L_37373:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_37321:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37322
L_37331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_37332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37332
.p2align 0x4
.long 0x45C
L_37332:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_37322:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37323:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_37269
L_37324:
	cmpq $0x1,%r14
	je L_388168
L_37325:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37323
.p2align 0x4
L_388168:
L_37326:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37327
L_37329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37330
.p2align 0x4
.long 0x49D
L_37330:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37327:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37281
L_37328:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45A
L_37266:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37267
L_37287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37288
.p2align 0x4
.long 0x601
L_37288:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37267:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388174
L_37268:
	decl %ecx
	jo L_37269
L_37270:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_37271:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388174:
L_37286:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37271
.p2align 0x4
.long 0x4B0
L_37429:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_37430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EE
L_37272:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_37430:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37431
L_37440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_37441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37441
.p2align 0x4
.long 0x45C
L_37441:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_37431:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37432:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_37269
L_37433:
	cmpq $0x1,%r14
	je L_388176
L_37434:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37432
.p2align 0x4
L_388176:
L_37435:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37436
L_37438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37439
.p2align 0x4
.long 0x49D
L_37439:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37436:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37281
L_37437:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x700
L_37273:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37274
L_37284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37285
.p2align 0x4
.long 0x5EF
L_37285:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37274:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37275:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_37269
L_37276:
	cmpq $0x1,%r14
	je L_388181
L_37277:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37275
.p2align 0x4
L_388181:
L_37278:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37279
L_37282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37283
.p2align 0x4
.long 0x5F3
L_37283:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37279:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37281
L_37280:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1245
.hidden x_1245
x_1245:
L_37453:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_37454
L_37569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_37570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37570
.p2align 0x4
.long 0x45C
L_37570:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_37454:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_37455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F0
L_37455:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37456
L_37567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37568
.p2align 0x4
.long 0x4EA
L_37568:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37456:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1297,%r15
	je L_388187
L_37495:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388187:
L_37457:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_388188
L_37458:
	movq (globalObjptr+0xDF68)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388188:
L_37494:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_37469:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37470:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_37463
L_37471:
	cmpq $0x1,%r15
	je L_388189
L_37472:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_37470
.p2align 0x4
L_388189:
L_37473:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37474
L_37487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_37488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37488
.p2align 0x4
.long 0x49C
L_37488:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_37474:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388194
L_37475:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
L_37476:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37477:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_388193
L_37478:
	cmpq $0x1,%r15
	je L_388190
L_37479:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_37477
.p2align 0x4
L_388190:
L_37480:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37481
L_37484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_37485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37485
.p2align 0x4
.long 0x4A5
L_37485:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_37481:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388191
L_37482:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388191:
L_37483:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388193:
L_37463:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388194:
L_37486:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37476
.p2align 0x4
.long 0x518
L_37496:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37497
L_37565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37566
.p2align 0x4
.long 0x4EA
L_37566:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37497:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	cmpq $0x1,%r13
	je L_388198
L_37498:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
L_37499:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388198:
L_37564:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_37526:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A6
L_37459:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_37460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x4ED
L_37500:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37501
L_37562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37563
.p2align 0x4
.long 0x4EC
L_37563:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37501:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_388200
L_37502:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_37499
.p2align 0x4
L_388200:
L_37503:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_37504:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388202
.p2align 0x4,,0x7
L_37505:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_388201
L_37506:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_37504
.p2align 0x4
L_388201:
L_37507:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388202:
L_37560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37561
.p2align 0x4
.long 0x4EC
L_37561:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_37505
.p2align 0x4
.long 0x4A6
L_37527:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37528
L_37548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37549
.p2align 0x4
.long 0x638
L_37549:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_37528:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37529:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_37463
L_37530:
	cmpq $0x1,%r14
	je L_388204
L_37531:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37529
.p2align 0x4
L_388204:
L_37532:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37533
L_37546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37547
.p2align 0x4
.long 0x995
L_37547:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37533:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388209
L_37534:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_37535:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37536:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_37463
L_37537:
	cmpq $0x1,%r15
	je L_388205
L_37538:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_37536
.p2align 0x4
L_388205:
L_37539:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37540
L_37543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37544
.p2align 0x4
.long 0x63B
L_37544:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37540:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388206
L_37541:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_37469
.p2align 0x4
L_388206:
L_37542:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37469
.p2align 0x4
L_388209:
L_37545:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37535
.p2align 0x4
.long 0x639
L_37460:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37461
L_37492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37493
.p2align 0x4
.long 0x519
L_37493:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_37461:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37462:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_37463
L_37464:
	cmpq $0x1,%r14
	je L_388213
L_37465:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37462
.p2align 0x4
L_388213:
L_37466:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37467
L_37490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37491
.p2align 0x4
.long 0x730
L_37491:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37467:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388214
L_37468:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_37469
.p2align 0x4
L_388214:
L_37489:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37469
.p2align 0x4
.long 0x837
L_37508:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_37509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x994
L_37509:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37510
L_37558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37559
.p2align 0x4
.long 0x4F1
L_37559:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37510:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37511:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_37463
L_37512:
	cmpq $0x1,%r14
	je L_388218
L_37513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37511
.p2align 0x4
L_388218:
L_37514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37515
L_37556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37557
.p2align 0x4
.long 0x510
L_37557:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37515:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388219
L_37516:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_37517:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388219:
L_37555:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37517
.p2align 0x4
.long 0x4E4
L_37518:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37519
L_37553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37554
.p2align 0x4
.long 0x4F1
L_37554:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37519:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37520:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_37463
L_37521:
	cmpq $0x1,%r14
	je L_388223
L_37522:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37520
.p2align 0x4
L_388223:
L_37523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37524
L_37551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37552
.p2align 0x4
.long 0x510
L_37552:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37524:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388224
L_37525:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_37526
.p2align 0x4
L_388224:
L_37550:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37526
.text
.p2align 0x4
.globl layout_29
.hidden layout_29
layout_29:
L_37571:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_37572
L_37787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_37788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37788
.p2align 0x4
.long 0x45C
L_37788:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_37572:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_37574
L_37575:
	decl %r14d
	jo L_388233
L_37577:
	movl %r14d,0x38(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
loop_510:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388232
.p2align 0x4,,0x7
L_37578:
	movl 0x38(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_388228
L_37579:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2705,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_510
.p2align 0x4
L_388228:
L_37580:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_388229
L_37581:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0x13C8)(%rip),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_388229:
L_37784:
	movq $0x1,%r13
	xorl %ecx,%ecx
	movq %r13,%r15
L_37678:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_388231
L_37680:
	testl %r11d,%r11d
	jz L_388230
L_37681:
	movq (globalObjptr+0xE640)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388230:
L_37704:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_37691:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_37692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388231:
L_37574:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388232:
L_37785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37786
.p2align 0x4
.long 0x73E
L_37786:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_37578
.p2align 0x4
L_388233:
L_37576:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_37582:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x700
L_37682:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_37683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_30
.p2align 0x4
.long 0x1
L_37692:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37693
L_37697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37698
.p2align 0x4
.long 0x495
L_37698:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37693:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388237
L_37694:
	decl %r15d
	jo L_37576
L_37695:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388237:
L_37696:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_37583:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x7C0
L_37683:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37684
L_37702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37703
.p2align 0x4
.long 0x9A0
L_37703:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37684:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37685:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37576
L_37686:
	cmpq $0x1,%r14
	je L_388239
L_37687:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37685
.p2align 0x4
L_388239:
L_37688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37689
L_37700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37701
.p2align 0x4
.long 0x99F
L_37701:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37689:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388240
L_37690:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_37691
.p2align 0x4
L_388240:
L_37699:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37691
.p2align 0x4
.long 0x996
L_37584:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37585
L_37782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37783
.p2align 0x4
.long 0x9AA
L_37783:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37585:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37574
L_37587:
	cmpl $0x0,%r13d
	je L_388246
	cmpl $0x1,%r13d
	je L_388244
L_37588:
	movl %r13d,0x68(%rbp)
	movq $0x3BE5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388244:
L_37766:
	cmpq $0x0,%r14
	jna L_388245
L_37768:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388245:
L_37730:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388246:
L_37599:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_37574
L_37601:
	movl %r13d,0x58(%rbp)
	movq $0x3BF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_37602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x997
L_37589:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_37590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x997
L_37769:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AB
L_37602:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_37603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0x997
L_37590:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BD
L_37770:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37771
L_37780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37781
.p2align 0x4
.long 0x8C1
L_37781:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37771:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37772:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37576
L_37773:
	cmpq $0x1,%r14
	je L_388250
L_37774:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37772
.p2align 0x4
L_388250:
L_37775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37776
L_37778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37779
.p2align 0x4
.long 0x9A9
L_37779:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37776:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388251
L_37777:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	jmp L_37599
.p2align 0x4
L_388251:
L_37760:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_37599
.p2align 0x4
.long 0x4AB
L_37603:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37604
L_37758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37759
.p2align 0x4
.long 0x9A8
L_37759:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37604:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_37605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BD
L_37591:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37592
L_37763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37764
.p2align 0x4
.long 0x8C1
L_37764:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37592:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37593:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37576
L_37594:
	cmpq $0x1,%r14
	je L_388256
L_37595:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37593
.p2align 0x4
L_388256:
L_37596:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37597
L_37761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37762
.p2align 0x4
.long 0x9A9
L_37762:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37597:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37760
L_37598:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	jmp L_37599
.p2align 0x4
.long 0x998
L_37605:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_37606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x999
L_37606:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37607
L_37756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37757
.p2align 0x4
.long 0x8C1
L_37757:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37607:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37608:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37576
L_37609:
	cmpq $0x1,%r14
	je L_388261
L_37610:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37608
.p2align 0x4
L_388261:
L_37611:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37612
L_37754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37755
.p2align 0x4
.long 0x9A7
L_37755:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37612:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388262
L_37613:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_37614:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_37615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388262:
L_37753:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37614
.p2align 0x4
.long 0x4AB
L_37615:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37616
L_37751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37752
.p2align 0x4
.long 0x4AE
L_37752:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37616:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37617:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37576
L_37618:
	cmpq $0x1,%r14
	je L_388266
L_37619:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37617
.p2align 0x4
L_388266:
L_37620:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37621
L_37749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37750
.p2align 0x4
.long 0x9A6
L_37750:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37621:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388268
L_37622:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_37623:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_388267
L_37624:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_37625:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388267:
L_37747:
	movq $0x1,%r14
	xchgq %r14,%r15
L_37673:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388268:
L_37748:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37623
.p2align 0x4
.long 0x913
L_37626:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EE
L_37674:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37675
L_37706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37707
.p2align 0x4
.long 0x816
L_37707:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37675:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388273
L_37676:
	decl %ecx
	jo L_37576
L_37677:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_37678
.p2align 0x4
L_388273:
L_37705:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37678
.p2align 0x4
.long 0x99A
L_37627:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37628
L_37745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37746
.p2align 0x4
.long 0x91F
L_37746:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37628:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37574
L_37630:
	cmpl $0x0,%r13d
	je L_388277
	cmpl $0x1,%r13d
	je L_388275
L_37631:
	movl %r13d,0x78(%rbp)
	movq $0x3BE5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388275:
L_37728:
	cmpq $0x0,%r14
	jna L_37730
L_37731:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388277:
L_37642:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_37574
L_37644:
	movl %r13d,0x68(%rbp)
	movq $0x3BF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x99B
L_37632:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_37633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x99B
L_37732:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BD
L_37645:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_37646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0x99B
L_37633:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x99C
L_37733:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37734
L_37743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_37744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37744
.p2align 0x4
.long 0x9A3
L_37744:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_37734:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37735:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_37576
L_37736:
	cmpq $0x1,%r14
	je L_388281
L_37737:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37735
.p2align 0x4
L_388281:
L_37738:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37739
L_37741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_37742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37742
.p2align 0x4
.long 0x9A5
L_37742:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_37739:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388282
L_37740:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	jmp L_37642
.p2align 0x4
L_388282:
L_37722:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_37642
.p2align 0x4
.long 0x8BD
L_37646:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37647
L_37720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37721
.p2align 0x4
.long 0x9A4
L_37721:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37647:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_37648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x99C
L_37634:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37635
L_37725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_37726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37726
.p2align 0x4
.long 0x9A3
L_37726:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_37635:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37636:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_37576
L_37637:
	cmpq $0x1,%r14
	je L_388287
L_37638:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37636
.p2align 0x4
L_388287:
L_37639:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37640
L_37723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_37724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37724
.p2align 0x4
.long 0x9A5
L_37724:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_37640:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37722
L_37641:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	jmp L_37642
.p2align 0x4
.long 0x99D
L_37648:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_37649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x99E
L_37649:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37650
L_37718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_37719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37719
.p2align 0x4
.long 0x9A3
L_37719:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_37650:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37651:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_37576
L_37652:
	cmpq $0x1,%r14
	je L_388292
L_37653:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37651
.p2align 0x4
L_388292:
L_37654:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37655
L_37716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_37717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37717
.p2align 0x4
.long 0x9A2
L_37717:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_37655:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388293
L_37656:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_37657:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388293:
L_37715:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37657
.p2align 0x4
.long 0x8BD
L_37658:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37659
L_37713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37714
.p2align 0x4
.long 0x8C1
L_37714:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37659:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37660:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_37576
L_37661:
	cmpq $0x1,%r14
	je L_388297
L_37662:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37660
.p2align 0x4
L_388297:
L_37663:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37664
L_37711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37712
.p2align 0x4
.long 0x9A1
L_37712:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37664:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388301
L_37665:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_37666:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_388298
L_37667:
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_37625
.p2align 0x4
L_388298:
L_37668:
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_37669:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388300
.p2align 0x4,,0x7
L_37670:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_37673
L_37671:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_37669
.p2align 0x4
L_388300:
L_37708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37709
.p2align 0x4
.long 0x4B6
L_37709:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_37670
.p2align 0x4
L_388301:
L_37710:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37666
