/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:18 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl get_46
.hidden get_46
get_46:
L_57848:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_57914
L_57849:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397314
L_57850:
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_397313
L_57852:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_397312
L_57853:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_57855:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_397311
L_57906:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD82,%r11
	jne L_397310
L_57907:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_397307
L_57856:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_397306
L_57858:
	cmpq $0x1,%r15
	je L_397301
L_57859:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_57855
.p2align 0x4
L_397301:
L_57860:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57861
L_57904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_57905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57905
.p2align 0x4
.long 0x65A
L_57905:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_57861:
	movl 0x8(%rbp),%ecx
L_57862:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_397304
L_57864:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_57866
L_57903:
	movl %ecx,0x0(%r15)
L_57866:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_397302
L_57867:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_57868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397302:
L_57898:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_57899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397304:
L_57863:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397306:
L_57857:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397307:
L_57909:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_57863
L_57910:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_397308
L_57912:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397308:
L_57911:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397310:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_57856
.p2align 0x4
L_397311:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_57856
.p2align 0x4
L_397312:
L_57913:
	xorl %ecx,%ecx
	jmp L_57862
.p2align 0x4
L_397313:
L_57851:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397314:
L_57914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_57915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57915
.p2align 0x4
.long 0x460
L_57915:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_57850
.p2align 0x4
.long 0x1
L_57868:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_57869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_57899:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57900
L_57901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_57902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57902
.p2align 0x4
.long 0x452
L_57902:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_57900:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_57868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_57869:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_57870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_57870:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEDB8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_57871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_57871:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_57872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_57872:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57873
L_57896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_57897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57897
.p2align 0x4
.long 0x4AF
L_57897:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_57873:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_57874:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_57857
L_57875:
	cmpq $0x1,%r14
	je L_397317
L_57876:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57874
.p2align 0x4
L_397317:
L_57877:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57878
L_57894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_57895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57895
.p2align 0x4
.long 0x4E7
L_57895:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_57878:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_397318
L_57879:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_47:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_48+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_397318:
L_57893:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_47
.p2align 0x4
.long 0x1
rev_48:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_397324
L_57880:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_57881:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397323
.p2align 0x4,,0x7
L_57882:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_397322
L_57883:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_57881
.p2align 0x4
L_397322:
L_57885:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_57886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_397323:
L_57890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_57891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57891
.p2align 0x4
.long 0x45C
L_57891:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_57882
.p2align 0x4
L_397324:
L_57892:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_57885
.p2align 0x4
.long 0x1
L_57886:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57887
L_57888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_57889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_57889
.p2align 0x4
.long 0x452
L_57889:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_57887:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl doit_50
.hidden doit_50
doit_50:
L_57916:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_57917
L_58284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_58285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58285
.p2align 0x4
.long 0x658
L_58285:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_57917:
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
loop_680:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_57918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
.long 0x98E
L_57918:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r13
	je L_397327
L_57919:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_57920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNear_0
.p2align 0x4
L_397327:
L_58283:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD08
L_57920:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57921
L_58281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_58282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58282
.p2align 0x4
.long 0xD15
L_58282:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_57921:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_57923
L_58239:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_397384
	cmpl $0x1,%r14d
	je L_397383
L_58240:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_397382
L_58241:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_58242:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397381
.p2align 0x4,,0x7
L_58243:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_58250
L_58244:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_58245:
	movq 0x48(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	je L_397378
L_58246:
	cmpq $0x1,%r14
	je L_397328
L_58247:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_58245
.p2align 0x4
L_397328:
L_58248:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397377
.p2align 0x4,,0x7
L_58250:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_58257
L_58251:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_58252:
	movq 0x8(%r15),%r13
	movq 0x48(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	je L_397373
L_58253:
	cmpq $0x1,%r14
	je L_397329
L_58254:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_58252
.p2align 0x4
L_397329:
L_58255:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397372
.p2align 0x4,,0x7
L_58257:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_397330
L_58258:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_58242
.p2align 0x4
L_397330:
L_58259:
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
L_57924:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_397371
L_57925:
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_58232
L_57926:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
.p2align 0x4,,0x7
L_57927:
	movq 0x48(%rbp),%r10
	cmpq $0x1,%r10
	je L_397369
L_57928:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
.p2align 0x4,,0x7
L_57929:
	movq 0x10(%r14),%r10
	cmpq %r10,0x10(%r13)
	je L_397367
L_57930:
	cmpq $0x1,%r11
	je L_397331
L_57931:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_57929
.p2align 0x4
L_397331:
L_57932:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb default_0
L_58227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_58228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58228
.p2align 0x4
.long 0xA5D
L_58228:
	addq $0xFFFFFFFFFFFFFF88,%rbp
default_0:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_57946
L_57935:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_57936:
	movq 0x8(%r15),%r9
	movq 0x10(%r15),%r13
	movq 0x40(%rbp),%r8
	cmpq $0x1,%r8
	je L_57942
L_57937:
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r11
	movq %r9,%r15
.p2align 0x4,,0x7
L_57938:
	movq 0x10(%r13),%r9
	cmpq %r9,0x10(%r11)
	je L_397362
L_57939:
	cmpq $0x1,%r10
	je L_397332
L_57940:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	jmp L_57938
.p2align 0x4
L_397332:
L_57942:
	cmpq $0x1,%r14
	je L_397333
L_57943:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57936
.p2align 0x4
L_397333:
L_57944:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57946
L_58217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_58218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58218
.p2align 0x4
.long 0xD13
L_58218:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_57946:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_57958
L_57947:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_57948:
	movq 0x0(%r15),%r9
	movq 0x8(%r15),%r13
	movq 0x40(%rbp),%r8
	cmpq $0x1,%r8
	je L_57954
L_57949:
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r11
	movq %r9,%r15
.p2align 0x4,,0x7
L_57950:
	movq 0x10(%r13),%r9
	cmpq %r9,0x10(%r11)
	je L_397356
L_57951:
	cmpq $0x1,%r10
	je L_397334
L_57952:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	jmp L_57950
.p2align 0x4
L_397334:
L_57954:
	cmpq $0x1,%r14
	je L_397335
L_57955:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57948
.p2align 0x4
L_397335:
L_57956:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57958
L_58207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_58208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58208
.p2align 0x4
.long 0xD12
L_58208:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_57958:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_57971
L_57959:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_57960:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397353
.p2align 0x4,,0x7
L_57961:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_57968
L_57962:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_57963:
	movq 0x50(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_397349
L_57964:
	cmpq $0x1,%r14
	je L_397336
L_57965:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57963
.p2align 0x4
L_397336:
L_57966:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397348
.p2align 0x4,,0x7
L_57968:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_397337
L_57969:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_57960
.p2align 0x4
L_397337:
L_57970:
	movq %r15,0x40(%rbp)
L_57971:
	movq $0x25C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x80(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x112F,%r15
	je L_397347
L_57972:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_397338
L_57973:
	movq %r14,0x48(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
L_57974:
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_57975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp uses_defs_kills_0
.p2align 0x4
L_397338:
L_57985:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1135,%r14
	je L_397346
	cmpq $0x1136,%r14
	je L_397345
	cmpq $0x1137,%r14
	je L_397344
	cmpq $0x1138,%r14
	je L_397343
	cmpq $0x1139,%r14
	je L_397341
	cmpq $0x113A,%r14
	je L_397340
	cmpq $0x113B,%r14
	je L_397339
L_57986:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_57987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_397339:
L_58091:
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	jmp loop_680
.p2align 0x4
L_397340:
L_58090:
	movq 0x10(%r15),%r14
	movq 0x40(%rbp),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,%r15
L_58037:
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x58,%rbp
	leaq (L_58038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_50
.p2align 0x4
L_397341:
L_58087:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_397342
L_58088:
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r14
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
L_58031:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x60,%rbp
	leaq (L_58032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_50
.p2align 0x4
L_397342:
L_58089:
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x40(%rbp)
	jmp loop_680
.p2align 0x4
L_397343:
L_58086:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397344:
L_58085:
	movq 0x18(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,%r15
L_58024:
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x50,%rbp
	leaq (L_58025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_50
.p2align 0x4
L_397345:
L_58084:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397346:
L_58083:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397347:
L_58128:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq 0x30(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_58129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_397348:
L_58195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_58196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58196
.p2align 0x4
.long 0xD10
L_58196:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_57968
.p2align 0x4
L_397349:
L_58197:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397351
.p2align 0x4,,0x7
L_58198:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_397350
L_58199:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_57960
.p2align 0x4
L_397350:
L_58200:
	movq 0x60(%rbp),%r14
	movq %r14,0x40(%rbp)
	jmp L_57971
.p2align 0x4
L_397351:
L_58201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_58202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58202
.p2align 0x4
.long 0xD11
L_58202:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_58198
.p2align 0x4
L_397353:
L_58204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_58205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58205
.p2align 0x4
.long 0xD10
L_58205:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_57961
.p2align 0x4
L_397356:
L_58209:
	movl $0x0,0x0(%r15)
	cmpq $0x1,%r14
	je L_397357
L_58210:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57948
.p2align 0x4
L_397357:
L_58211:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57958
L_58213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_58214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58214
.p2align 0x4
.long 0xD12
L_58214:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_57958
.p2align 0x4
L_397362:
L_58219:
	movl $0x0,0x0(%r15)
	cmpq $0x1,%r14
	je L_397363
L_58220:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_57936
.p2align 0x4
L_397363:
L_58221:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_57946
L_58223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_58224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58224
.p2align 0x4
.long 0xD13
L_58224:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_57946
.p2align 0x4
L_397367:
L_58229:
	cmpq $0x1,%r15
	je L_397368
L_58230:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_57927
.p2align 0x4
L_397368:
L_58232:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397369:
L_58233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb default_0
L_58235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_58236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58236
.p2align 0x4
.long 0xA5D
L_58236:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp default_0
.p2align 0x4
L_397371:
L_58238:
	movq $0x1,0x48(%rbp)
	jmp default_0
.p2align 0x4
L_397372:
L_58260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58261
.p2align 0x4
.long 0xD14
L_58261:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58257
.p2align 0x4
L_397373:
L_58262:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397375
.p2align 0x4,,0x7
L_58264:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397374
L_58265:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_58242
.p2align 0x4
L_397374:
L_58266:
	movq %r15,0x40(%rbp)
	jmp L_57924
.p2align 0x4
L_397375:
L_58267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58268
.p2align 0x4
.long 0xC75
L_58268:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58264
.p2align 0x4
L_397377:
L_58270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58271
.p2align 0x4
.long 0xC75
L_58271:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58250
.p2align 0x4
L_397378:
L_58272:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58264
L_58274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58275
.p2align 0x4
.long 0xC75
L_58275:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58264
.p2align 0x4
L_397381:
L_58277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58278
.p2align 0x4
.long 0xC75
L_58278:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58243
.p2align 0x4
L_397382:
L_58279:
	movq $0x1,0x40(%rbp)
	jmp L_57924
.p2align 0x4
L_397383:
L_58280:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_57924
.p2align 0x4
L_397384:
L_57923:
	movq $0x1,0x40(%rbp)
	jmp L_57924
.p2align 0x4
.long 0xD09
L_57975:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_397404
L_57976:
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_57977:
L_57978:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_57979
L_58092:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_397401
L_58093:
	movq 0x0(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_58122
L_58094:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_58095:
	movl 0x0(%r15),%r11d
	movl %r11d,0x60(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x64(%rbp)
	cmpl %r10d,%r11d
	jnl L_397390
L_58119:
	cmpq $0x1,%r13
	je L_397387
L_58120:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_58095
.p2align 0x4
L_397387:
L_58122:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_397388
L_58123:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_57977
.p2align 0x4
L_397388:
L_58124:
	movq 0x50(%rbp),%r15
L_57982:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397389
L_57983:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_57974
.p2align 0x4
L_397389:
L_57984:
	movq %r15,0x40(%rbp)
	jmp L_57985
.p2align 0x4
L_397390:
L_58096:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397399
.p2align 0x4,,0x7
L_58097:
	movl 0x60(%rbp),%r13d
	cmpl %r13d,0x64(%rbp)
	jl L_397397
L_58098:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_58105
L_58099:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_58100:
	movq 0x58(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_397394
L_58101:
	cmpq $0x1,%r14
	je L_397391
L_58102:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_58100
.p2align 0x4
L_397391:
L_58103:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397393
.p2align 0x4,,0x7
L_58105:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_57982
L_58106:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_57977
.p2align 0x4
L_397393:
L_58108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58109
.p2align 0x4
.long 0xD0C
L_58109:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58105
.p2align 0x4
L_397394:
L_58110:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_397395
L_58111:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_57977
.p2align 0x4
L_397395:
L_58112:
	movq 0x50(%rbp),%r15
	jmp L_57982
.p2align 0x4
L_397397:
L_58114:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_397398
L_58115:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_57977
.p2align 0x4
L_397398:
L_58116:
	movq 0x50(%rbp),%r15
	jmp L_57982
.p2align 0x4
L_397399:
L_58117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58118
.p2align 0x4
.long 0xD0C
L_58118:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58097
.p2align 0x4
L_397401:
L_57979:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_397402
L_57980:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_57977
.p2align 0x4
L_397402:
L_57981:
	movq 0x50(%rbp),%r15
	jmp L_57982
.p2align 0x4
L_397404:
L_58126:
	movq 0x48(%rbp),%r15
	jmp L_57982
.p2align 0x4
.long 0xD09
L_57987:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_397441
L_57988:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_57989:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397440
.p2align 0x4,,0x7
L_57990:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_397405
L_57991:
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_57989
.p2align 0x4
L_397405:
L_57992:
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_57993:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397439
.p2align 0x4,,0x7
L_57994:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_397406
L_57995:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_57993
.p2align 0x4
L_397406:
L_57996:
	movq %r15,0x50(%rbp)
L_57997:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_58006
L_57998:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_57999:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397437
.p2align 0x4,,0x7
L_58000:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_397407
L_58001:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_57999
.p2align 0x4
L_397407:
L_58002:
	movq 0x60(%rbp),%r15
.p2align 0x4,,0x7
L_58003:
	cmpq $0x1,%r15
	je L_397408
L_58004:
	movq 0x8(%r15),%r15
	jmp L_58003
.p2align 0x4
L_397408:
L_58006:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_397436
L_58007:
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_58008:
L_58009:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_58010
L_58040:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_397433
L_58041:
	movq 0x0(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_58070
L_58042:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_58043:
	movl 0x0(%r15),%r11d
	movl %r11d,0x58(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x5C(%rbp)
	cmpl %r10d,%r11d
	jnl L_397422
L_58067:
	cmpq $0x1,%r13
	je L_397409
L_58068:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_58043
.p2align 0x4
L_397409:
L_58070:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397410
L_58071:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58008
.p2align 0x4
L_397410:
L_58072:
	movq 0x48(%rbp),%r15
L_58013:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1135,%r13
	je L_397421
	cmpq $0x1136,%r13
	je L_397420
	cmpq $0x1137,%r13
	je L_397419
	cmpq $0x1138,%r13
	je L_397418
	cmpq $0x1139,%r13
	je L_397416
	cmpq $0x113A,%r13
	je L_397415
	cmpq $0x113B,%r13
	je L_397414
L_58014:
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movl 0x14(%r11),%r10d
	testl %r10d,%r10d
	jnz L_397412
L_58015:
	cmpq $0x1,%r13
	je L_397411
L_58016:
	movq %r13,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp loop_680
.p2align 0x4
L_397411:
L_58017:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397412:
L_58018:
	cmpq $0x1,%r13
	je L_397413
L_58019:
	movq %r13,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	jmp loop_680
.p2align 0x4
L_397413:
L_58020:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397414:
L_58039:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp loop_680
.p2align 0x4
L_397415:
L_58036:
	movq %r15,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	jmp L_58037
.p2align 0x4
L_397416:
L_58029:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq $0x1,%r11
	je L_397417
L_58030:
	movq %r15,0x48(%rbp)
	movq %r13,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r11),%r14
	jmp L_58031
.p2align 0x4
L_397417:
L_58035:
	movq %r13,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp loop_680
.p2align 0x4
L_397418:
L_58028:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397419:
L_58023:
	movq 0x18(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	jmp L_58024
.p2align 0x4
L_397420:
L_58022:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397421:
L_58021:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397422:
L_58044:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397431
.p2align 0x4,,0x7
L_58045:
	movl 0x58(%rbp),%r13d
	cmpl %r13d,0x5C(%rbp)
	jl L_397429
L_58046:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_58053
L_58047:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_58048:
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_397426
L_58049:
	cmpq $0x1,%r14
	je L_397423
L_58050:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_58048
.p2align 0x4
L_397423:
L_58051:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397425
.p2align 0x4,,0x7
L_58053:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_58013
L_58054:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58008
.p2align 0x4
L_397425:
L_58056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58057
.p2align 0x4
.long 0xD0A
L_58057:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58053
.p2align 0x4
L_397426:
L_58058:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397427
L_58059:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58008
.p2align 0x4
L_397427:
L_58060:
	movq 0x48(%rbp),%r15
	jmp L_58013
.p2align 0x4
L_397429:
L_58062:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397430
L_58063:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58008
.p2align 0x4
L_397430:
L_58064:
	movq 0x48(%rbp),%r15
	jmp L_58013
.p2align 0x4
L_397431:
L_58065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58066
.p2align 0x4
.long 0xD0A
L_58066:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58045
.p2align 0x4
L_397433:
L_58010:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397434
L_58011:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58008
.p2align 0x4
L_397434:
L_58012:
	movq 0x48(%rbp),%r15
	jmp L_58013
.p2align 0x4
L_397436:
L_58074:
	movq 0x40(%rbp),%r15
	jmp L_58013
.p2align 0x4
L_397437:
L_58075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58076
.p2align 0x4
.long 0xD0B
L_58076:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_58000
.p2align 0x4
L_397439:
L_58078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58079
.p2align 0x4
.long 0xD0B
L_58079:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_57994
.p2align 0x4
L_397440:
L_58080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_58081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58081
.p2align 0x4
.long 0xD0B
L_58081:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_57990
.p2align 0x4
L_397441:
L_58082:
	movq $0x1,0x50(%rbp)
	jmp L_57997
.p2align 0x4
.long 0x98E
L_58038:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp loop_680
.p2align 0x4
.long 0x8BC
L_58032:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_397442
L_58033:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	jmp L_58031
.p2align 0x4
L_397442:
L_58034:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp loop_680
.p2align 0x4
.long 0x8BB
L_58025:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq $0x1,0x40(%rbp)
	je L_397443
L_58026:
	movq $0x1,0x48(%rbp)
	jmp loop_680
.p2align 0x4
L_397443:
L_58027:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD0D
L_58129:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_58138
L_58130:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_58131:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397468
.p2align 0x4,,0x7
L_58132:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_397444
L_58133:
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_58131
.p2align 0x4
L_397444:
L_58134:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
.p2align 0x4,,0x7
L_58135:
	cmpq $0x1,%r15
	je L_397445
L_58136:
	movq 0x8(%r15),%r15
	jmp L_58135
.p2align 0x4
L_397445:
L_58138:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_397467
L_58140:
	decl %r13d
	jo L_397466
L_58142:
	movl %r13d,0x58(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
loop_681:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397465
.p2align 0x4,,0x7
L_58143:
	movl 0x58(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_397446
L_58144:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	jmp loop_681
.p2align 0x4
L_397446:
L_58145:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_397464
L_58146:
	movq 0x40(%rbp),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_58147:
L_58148:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_58149
L_58155:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_397461
L_58156:
	movq 0x0(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_58185
L_58157:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_58158:
	movl 0x0(%r15),%r11d
	movl %r11d,0x58(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x5C(%rbp)
	cmpl %r10d,%r11d
	jnl L_397450
L_58182:
	cmpq $0x1,%r13
	je L_397447
L_58183:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_58158
.p2align 0x4
L_397447:
L_58185:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397448
L_58186:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58147
.p2align 0x4
L_397448:
L_58187:
	movq 0x48(%rbp),%r15
L_58152:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_397449
L_58153:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
	jmp L_57974
.p2align 0x4
L_397449:
L_58154:
	movq %r15,0x40(%rbp)
	jmp L_57985
.p2align 0x4
L_397450:
L_58159:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397459
.p2align 0x4,,0x7
L_58160:
	movl 0x58(%rbp),%r13d
	cmpl %r13d,0x5C(%rbp)
	jl L_397457
L_58161:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_58168
L_58162:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_58163:
	movq 0x50(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_397454
L_58164:
	cmpq $0x1,%r14
	je L_397451
L_58165:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_58163
.p2align 0x4
L_397451:
L_58166:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397453
.p2align 0x4,,0x7
L_58168:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_58152
L_58169:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58147
.p2align 0x4
L_397453:
L_58171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_58172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58172
.p2align 0x4
.long 0xD0E
L_58172:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_58168
.p2align 0x4
L_397454:
L_58173:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397455
L_58174:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58147
.p2align 0x4
L_397455:
L_58175:
	movq 0x48(%rbp),%r15
	jmp L_58152
.p2align 0x4
L_397457:
L_58177:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397458
L_58178:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58147
.p2align 0x4
L_397458:
L_58179:
	movq 0x48(%rbp),%r15
	jmp L_58152
.p2align 0x4
L_397459:
L_58180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_58181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58181
.p2align 0x4
.long 0xD0E
L_58181:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_58160
.p2align 0x4
L_397461:
L_58149:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_397462
L_58150:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_58147
.p2align 0x4
L_397462:
L_58151:
	movq 0x48(%rbp),%r15
	jmp L_58152
.p2align 0x4
L_397464:
L_58189:
	movq 0x40(%rbp),%r13
	movq %r13,%r15
	jmp L_58152
.p2align 0x4
L_397465:
L_58190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_58191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58191
.p2align 0x4
.long 0xD0E
L_58191:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_58143
.p2align 0x4
L_397466:
L_58141:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397467:
L_58139:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397468:
L_58192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_58193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58193
.p2align 0x4
.long 0xD0F
L_58193:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_58132
.text
.p2align 0x4
.globl get_47
.hidden get_47
get_47:
L_58286:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_58352
L_58287:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397483
L_58288:
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_397482
L_58290:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_397481
L_58291:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_58293:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_397480
L_58344:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD79,%r11
	jne L_397479
L_58345:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_397476
L_58294:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_397475
L_58296:
	cmpq $0x1,%r15
	je L_397470
L_58297:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_58293
.p2align 0x4
L_397470:
L_58298:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58299
L_58342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_58343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58343
.p2align 0x4
.long 0x65A
L_58343:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_58299:
	movl 0x8(%rbp),%ecx
L_58300:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_397473
L_58302:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_58304
L_58341:
	movl %ecx,0x0(%r15)
L_58304:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_397471
L_58305:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_58306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397471:
L_58336:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_58337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397473:
L_58301:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397475:
L_58295:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397476:
L_58347:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_58301
L_58348:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_397477
L_58350:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397477:
L_58349:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397479:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_58294
.p2align 0x4
L_397480:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_58294
.p2align 0x4
L_397481:
L_58351:
	xorl %ecx,%ecx
	jmp L_58300
.p2align 0x4
L_397482:
L_58289:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397483:
L_58352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_58353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58353
.p2align 0x4
.long 0x460
L_58353:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_58288
.p2align 0x4
.long 0x1
L_58306:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_58307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_58337:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58338
L_58339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_58340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58340
.p2align 0x4
.long 0x452
L_58340:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_58338:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_58306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_58307:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_58308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_58308:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEDC0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_58309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_58309:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_58310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_58310:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58311
L_58334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_58335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58335
.p2align 0x4
.long 0x4AF
L_58335:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_58311:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_58312:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_58295
L_58313:
	cmpq $0x1,%r14
	je L_397486
L_58314:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_58312
.p2align 0x4
L_397486:
L_58315:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58316
L_58332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_58333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58333
.p2align 0x4
.long 0x4E7
L_58333:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_58316:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_397487
L_58317:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_48:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_49+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_397487:
L_58331:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_48
.p2align 0x4
.long 0x1
rev_49:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_397493
L_58318:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_58319:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397492
.p2align 0x4,,0x7
L_58320:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_397491
L_58321:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_58319
.p2align 0x4
L_397491:
L_58323:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_58324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_397492:
L_58328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58329
.p2align 0x4
.long 0x45C
L_58329:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_58320
.p2align 0x4
L_397493:
L_58330:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_58323
.p2align 0x4
.long 0x1
L_58324:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58325
L_58326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_58327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58327
.p2align 0x4
.long 0x452
L_58327:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_58325:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl getNear_0
.hidden getNear_0
getNear_0:
L_58354:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_58384
L_58355:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397507
L_58356:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_397506
L_58358:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_397505
L_58359:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_58361:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_58362
L_58376:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBA,%r13
	jne L_58362
L_58377:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_397500
L_58362:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_397499
L_58364:
	cmpq $0x1,%r15
	je L_397495
L_58365:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_58361
.p2align 0x4
L_397495:
L_58366:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58367
L_58374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_58375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58375
.p2align 0x4
.long 0x49C
L_58375:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_58367:
	movl 0x18(%rbp),%ecx
L_58368:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_397497
L_58370:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_58372
L_58373:
	movl %ecx,0x0(%r15)
L_58372:
	movq $0x140D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalWord64+0x1080)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1975,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_137:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397497:
L_58369:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397499:
L_58363:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397500:
L_58379:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_58369
L_58380:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_397501
L_58382:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_137
.p2align 0x4
L_397501:
L_58381:
	movq %r13,%r15
	jmp x_137
.p2align 0x4
L_397505:
L_58383:
	xorl %ecx,%ecx
	jmp L_58368
.p2align 0x4
L_397506:
L_58357:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397507:
L_58384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_58385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58385
.p2align 0x4
.long 0x460
L_58385:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_58356
.text
.p2align 0x4
.globl uses_defs_kills_0
.hidden uses_defs_kills_0
uses_defs_kills_0:
L_58386:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_58387
L_58528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_58529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58529
.p2align 0x4
.long 0x460
L_58529:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_58387:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112B,%r14
	je L_397567
	cmpq $0x112C,%r14
	je L_397566
	cmpq $0x112D,%r14
	je L_397510
	cmpq $0x112E,%r14
	je L_397509
L_58388:
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_58389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp uses_defs_kills_1
.p2align 0x4
L_397509:
L_58527:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397510:
L_58392:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_397565
	cmpq $0x2,%r14
	je L_397564
	cmpq $0x3,%r14
	je L_397563
L_58393:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x1118,%rax
	cmpq $0x7,%rax
	ja L_397511
	jmp *jumpTable_132(,%rax,8)
.data
.p2align 0x4
jumpTable_132:
.quad L_397557,L_397556,L_397545,L_397528,L_397524,L_397520,L_397516,L_397512
.text
.p2align 0x4
L_397511:
L_58394:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397512:
L_58515:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_397515
L_58516:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_58517:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397514
.p2align 0x4,,0x7
L_58518:
	movq 0x8(%rbp),%r15
	movw 0xC(%r15),%r14w
	movq 0x10(%r15),%r13
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movzwq %r14w,%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_397513
L_58519:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_58517
.p2align 0x4
L_397513:
L_58520:
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397514:
L_58521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_58522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58522
.p2align 0x4
.long 0x4AF
L_58522:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_58518
.p2align 0x4
L_397515:
L_58523:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397516:
L_58506:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_397519
L_58507:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_58508:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397518
.p2align 0x4,,0x7
L_58509:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_397517
L_58510:
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_58508
.p2align 0x4
L_397517:
L_58511:
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397518:
L_58512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58513
.p2align 0x4
.long 0x45C
L_58513:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_58509
.p2align 0x4
L_397519:
L_58514:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397520:
L_58497:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_397523
L_58498:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_58499:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397522
.p2align 0x4,,0x7
L_58500:
	movq 0x8(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movzwq %r14w,%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_397521
L_58501:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_58499
.p2align 0x4
L_397521:
L_58502:
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397522:
L_58503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_58504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58504
.p2align 0x4
.long 0x4AF
L_58504:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_58500
.p2align 0x4
L_397523:
L_58505:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397524:
L_58488:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_397527
L_58489:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_58490:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397526
.p2align 0x4,,0x7
L_58491:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_397525
L_58492:
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_58490
.p2align 0x4
L_397525:
L_58493:
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397526:
L_58494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58495
.p2align 0x4
.long 0x45C
L_58495:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_58491
.p2align 0x4
L_397527:
L_58496:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397528:
L_58441:
	movq 0x20(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_397544
L_58442:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_58443:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397543
.p2align 0x4,,0x7
L_58444:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_397529
L_58445:
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_58443
.p2align 0x4
L_397529:
L_58446:
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_58447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397542
.p2align 0x4,,0x7
L_58448:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_397530
L_58449:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_58447
.p2align 0x4
L_397530:
L_58450:
	movq %r15,0x8(%rbp)
L_58451:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_397541
L_58452:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_58453:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397540
.p2align 0x4,,0x7
L_58454:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_397531
L_58455:
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_58453
.p2align 0x4
L_397531:
L_58456:
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_58457:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397539
.p2align 0x4,,0x7
L_58458:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_397532
L_58459:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_58457
.p2align 0x4
L_397532:
L_58460:
	movq %r15,0x10(%rbp)
L_58461:
	cmpq $0x1,0x10(%rbp)
	je L_397538
L_58462:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_397537
L_58463:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_58464:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397536
.p2align 0x4,,0x7
L_58465:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_397533
L_58466:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_58464
.p2align 0x4
L_397533:
L_58467:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_58468:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397535
.p2align 0x4,,0x7
L_58469:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_397534
L_58470:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_58468
.p2align 0x4
L_397534:
L_58471:
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397535:
L_58472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58473
.p2align 0x4
.long 0x45C
L_58473:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_58469
.p2align 0x4
L_397536:
L_58474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_58475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58475
.p2align 0x4
.long 0x520
L_58475:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_58465
.p2align 0x4
L_397537:
L_58476:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397538:
L_58477:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397539:
L_58478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_58479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58479
.p2align 0x4
.long 0x4EA
L_58479:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_58458
.p2align 0x4
L_397540:
L_58480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_58481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58481
.p2align 0x4
.long 0x4EA
L_58481:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_58454
.p2align 0x4
L_397541:
L_58482:
	movq $0x1,0x10(%rbp)
	jmp L_58461
.p2align 0x4
L_397542:
L_58483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_58484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58484
.p2align 0x4
.long 0x4AF
L_58484:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_58448
.p2align 0x4
L_397543:
L_58485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_58486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58486
.p2align 0x4
.long 0x4AF
L_58486:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_58444
.p2align 0x4
L_397544:
L_58487:
	movq $0x1,0x8(%rbp)
	jmp L_58451
.p2align 0x4
L_397545:
L_58411:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_397555
L_58412:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_58413:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397554
.p2align 0x4,,0x7
L_58414:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_397546
L_58415:
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_58413
.p2align 0x4
L_397546:
L_58416:
	movq %r14,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_58417:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397553
.p2align 0x4,,0x7
L_58418:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_397547
L_58419:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_58417
.p2align 0x4
L_397547:
L_58420:
	movq %r15,0x8(%rbp)
L_58421:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_397552
L_58422:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_58423:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397551
.p2align 0x4,,0x7
L_58424:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_397548
L_58425:
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_58423
.p2align 0x4
L_397548:
L_58426:
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_58427:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397550
.p2align 0x4,,0x7
L_58428:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_397549
L_58429:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_58427
.p2align 0x4
L_397549:
L_58430:
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397550:
L_58431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_58432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58432
.p2align 0x4
.long 0x4EA
L_58432:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_58428
.p2align 0x4
L_397551:
L_58433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_58434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58434
.p2align 0x4
.long 0x4EA
L_58434:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_58424
.p2align 0x4
L_397552:
L_58435:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397553:
L_58436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_58437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58437
.p2align 0x4
.long 0x4AF
L_58437:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_58418
.p2align 0x4
L_397554:
L_58438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_58439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58439
.p2align 0x4
.long 0x4AF
L_58439:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_58414
.p2align 0x4
L_397555:
L_58440:
	movq $0x1,0x8(%rbp)
	jmp L_58421
.p2align 0x4
L_397556:
L_58410:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397557:
L_58395:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_397562
L_58396:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_58397:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397561
.p2align 0x4,,0x7
L_58398:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_397558
L_58399:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_58397
.p2align 0x4
L_397558:
L_58400:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_58401:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397560
.p2align 0x4,,0x7
L_58402:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_397559
L_58403:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_58401
.p2align 0x4
L_397559:
L_58404:
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397560:
L_58405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58406
.p2align 0x4
.long 0x45C
L_58406:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_58402
.p2align 0x4
L_397561:
L_58407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58408
.p2align 0x4
.long 0x45C
L_58408:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_58398
.p2align 0x4
L_397562:
L_58409:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397563:
L_58526:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397564:
L_58525:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397565:
L_58524:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397566:
L_58391:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397567:
L_58390:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_58389:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl uses_defs_kills_1
.hidden uses_defs_kills_1
uses_defs_kills_1:
L_58530:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_58642
L_58531:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397644
L_58532:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%rbp),%rax
	andq $0xF,%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_397569
	jmp *jumpTable_133(,%rax,8)
.data
.p2align 0x4
jumpTable_133:
.quad L_397643,L_397642,L_397641,L_397640,L_397639,L_397638,L_397637,L_397640,L_397636,L_397632
.text
.p2align 0x4
L_397569:
	movq %r13,%r15
L_58533:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x10ED,%rax
	cmpq $0x27,%rax
	ja L_397570
	jmp *jumpTable_134(,%rax,8)
.data
.p2align 0x4
jumpTable_134:
.quad L_397628,L_397624,L_397623,L_397622,L_397620,L_397619,L_397617,L_397616,L_397615,L_397614,L_397613,L_397612,L_397611,L_397610,L_397609,L_397608,L_397607,L_397606,L_397605,L_397604,L_397603,L_397602,L_397601,L_397600,L_397599,L_397596,L_397595,L_397594,L_397593,L_397592,L_397591,L_397590,L_397589,L_397588,L_397582,L_397581,L_397580,L_397574,L_397573,L_397572
.text
.p2align 0x4
L_397570:
L_58534:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r11
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	testl %r13d,%r13d
	jz L_397571
L_58536:
	movq %r11,0x0(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397571:
L_58535:
	movq %r11,0x0(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397572:
L_58628:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397573:
L_58627:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397574:
L_58616:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb 0x1(%r15),%r11b
	cmpb $0x5,%r11b
	je L_397579
	cmpb $0x6,%r11b
	je L_397578
	cmpb $0x7,%r11b
	je L_397575
L_58617:
	movq (globalObjptr+0x55A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397575:
L_58626:
	movw (globalWord16+0x2A)(%rip),%r15w
	movw (globalWord16+0x62)(%rip),%r11w
	movq %r14,%rax
	movw %r11w,%r14w
	movb %r13b,%dl
	movq %rax,%r13
L_58619:
	cmpb $0x5,%dl
	je L_58623
L_58620:
	cmpb $0x4,%dl
	je L_397576
L_58621:
	movzwq %r14w,%r11
	shlq $0x2,%r11
	orq $0x1,%r11
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x1,%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397576:
L_58623:
	movzwq %r15w,%r11
	shlq $0x2,%r11
	orq $0x1,%r11
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r15,0x8(%r11)
	movq %r11,0x0(%rbp)
	movzwq %r14w,%r13
	shlq $0x2,%r13
	orq $0x1,%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397578:
L_58625:
	movw (globalWord16+0x32)(%rip),%r10w
	movw (globalWord16+0x5A)(%rip),%r9w
	movw %r10w,%r15w
	movq %r14,%rax
	movw %r9w,%r14w
	movb %r13b,%dl
	movq %rax,%r13
	jmp L_58619
.p2align 0x4
L_397579:
L_58618:
	movw (globalWord16+0x3A)(%rip),%r10w
	movw (globalWord16+0x42)(%rip),%r9w
	movw %r10w,%r15w
	movq %r14,%rax
	movw %r9w,%r14w
	movb %r13b,%dl
	movq %rax,%r13
	jmp L_58619
.p2align 0x4
L_397580:
L_58615:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397581:
L_58614:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397582:
L_58605:
	movq 0x0(%rbp),%r15
	movb 0x1(%r15),%r14b
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
L_58606:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_397587
L_58608:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10E8,%r15
	jne L_397586
L_58609:
	cmpb $0x5,%r14b
	je L_397585
	cmpb $0x6,%r14b
	je L_397584
	cmpb $0x7,%r14b
	je L_397583
L_58610:
	movq (globalObjptr+0x5550)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397583:
L_58613:
	movb $0x1,%dl
	movq %r11,%r15
	movq %r13,%r14
register_0:
	movb $0x5,%r13b
	movzbw %r13b,%r11w
	movzbw %dl,%r13w
	shlw $0x8,%r13w
	orw %r13w,%r11w
	movzwq %r11w,%r13
	shlq $0x2,%r13
	orq $0x1,%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x222B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x0(%rbp)
	addq $0x18,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397584:
L_58612:
	movb $0x2,%dl
	movq %r11,%r15
	movq %r13,%r14
	jmp register_0
.p2align 0x4
L_397585:
L_58611:
	movb $0x3,%dl
	movq %r11,%r15
	movq %r13,%r14
	jmp register_0
.p2align 0x4
L_397586:
	movq %r13,%r15
	movq %r11,%r14
L_58607:
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397587:
	movq %r13,%r15
	movq %r11,%r14
	jmp L_58607
.p2align 0x4
L_397588:
L_58604:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397589:
L_58603:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397590:
L_58602:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397591:
L_58601:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397592:
L_58600:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397593:
L_58599:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397594:
L_58598:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397595:
L_58597:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397596:
L_58586:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x8(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x18(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r10,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x222B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x20(%rbp)
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
L_58587:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_58588
L_58590:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_397597
L_58591:
	movq %r15,0x48(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movb $0x3,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_58592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
L_397597:
L_58588:
	movq $0x1,%r15
L_58589:
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397599:
L_58585:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5578)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq (globalObjptr+0x5598)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397600:
L_58584:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397601:
L_58583:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397602:
L_58582:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397603:
L_58581:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397604:
L_58580:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397605:
L_58579:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397606:
L_58578:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397607:
L_58577:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397608:
L_58576:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397609:
L_58575:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397610:
L_58574:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397611:
L_58573:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397612:
L_58572:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397613:
L_58571:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397614:
L_58570:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397615:
L_58563:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x0(%r15)
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_58564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_397616:
L_58562:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397617:
L_58559:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	testl %r14d,%r14d
	jnz L_397618
L_58560:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397618:
L_58561:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397619:
L_58558:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397620:
L_58555:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	testl %r14d,%r14d
	jnz L_397621
L_58556:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397621:
L_58557:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397622:
L_58554:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5558)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397623:
L_58553:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397624:
L_58545:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x4(%r15),%r13d
	movl 0x0(%r15),%r11d
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5558)(%rip),%r10
	movq %r10,0x8(%r15)
	testl %r11d,%r11d
	jz L_397627
L_58550:
	testl %r13d,%r13d
	jz L_397625
L_58552:
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x1048)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397625:
	movl %r11d,%ecx
L_58547:
	testl %ecx,%ecx
	jnz L_397626
L_58548:
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397626:
L_58549:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397627:
	movl %r11d,%ecx
	jmp L_58547
.p2align 0x4
L_397628:
L_58537:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x4(%r15),%r13d
	movl 0x0(%r15),%r11d
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5558)(%rip),%r10
	movq %r10,0x8(%r15)
	testl %r11d,%r11d
	jz L_397631
L_58542:
	testl %r13d,%r13d
	jz L_397629
L_58544:
	movq %r15,0x0(%rbp)
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x1048)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397629:
	movl %r11d,%ecx
L_58539:
	testl %ecx,%ecx
	jnz L_397630
L_58540:
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397630:
L_58541:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397631:
	movl %r11d,%ecx
	jmp L_58539
.p2align 0x4
L_397632:
L_58636:
	movq 0x0(%rbp),%r15
	shrq $0x4,%r15
	movb %r15b,%r14b
	cmpb $0x5,%r14b
	je L_397635
	cmpb $0x6,%r14b
	je L_397634
	cmpb $0x7,%r14b
	je L_397633
L_58637:
	movq (globalObjptr+0x5570)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397633:
L_58641:
	movw (globalWord16+0x2A)(%rip),%r15w
	movw (globalWord16+0x62)(%rip),%r14w
L_58639:
	movzwq %r15w,%r13
	shlq $0x2,%r13
	orq $0x1,%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movzwq %r14w,%r13
	shlq $0x2,%r13
	orq $0x1,%r13
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397634:
L_58640:
	movw (globalWord16+0x32)(%rip),%r15w
	movw (globalWord16+0x5A)(%rip),%r14w
	jmp L_58639
.p2align 0x4
L_397635:
L_58638:
	movw (globalWord16+0x3A)(%rip),%r15w
	movw (globalWord16+0x42)(%rip),%r14w
	jmp L_58639
.p2align 0x4
L_397636:
L_58635:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397637:
L_58634:
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397638:
L_58633:
	movq (globalObjptr+0x5568)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x5560)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397639:
L_58632:
	movq (globalObjptr+0x5568)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397640:
	movq %r13,%r15
	jmp L_58533
.p2align 0x4
L_397641:
L_58631:
	movq (globalObjptr+0x5558)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397642:
L_58630:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397643:
L_58629:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397644:
L_58642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_58643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58643
.p2align 0x4
.long 0x460
L_58643:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_58532
.p2align 0x4
.long 0x4A8
L_58592:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x38(%rbp)
	movb $0x3,0x31(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_58593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x5F0
L_58564:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58565
L_58568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_58569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58569
.p2align 0x4
.long 0x4E2
L_58569:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_58565:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_397646
L_58566:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397646:
L_58567:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_58593:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58594
L_58595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_58596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58596
.p2align 0x4
.long 0x51D
L_58596:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_58594:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_58589
.text
.p2align 0x4
.globl eq_1
.hidden eq_1
eq_1:
L_58644:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_58645
L_58706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_58707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58707
.p2align 0x4
.long 0x460
L_58707:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_58645:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_397679
	cmpq $0x2,%r14
	je L_397676
L_58646:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E9,%r14
	je L_397657
	cmpq $0x10EA,%r14
	je L_397654
	cmpq $0x10EB,%r14
	je L_397651
L_58647:
	movq 0x0(%r15),%r14
L_58648:
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_58649
L_58650:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_397649
L_58651:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397649:
L_58649:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397651:
L_58690:
	movq 0x0(%r15),%r14
L_58691:
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_58649
L_58692:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne L_58649
L_58693:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397654:
L_58686:
	movq 0x0(%r15),%r14
L_58687:
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_58649
L_58688:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10EA,%r13
	jne L_58649
L_58689:
	movq 0x0(%r15),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397657:
L_58652:
	movq 0x0(%r15),%r11
L_58653:
	movq 0x0(%rbp),%r15
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_58649
L_58654:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x10E9,%r10
	jne L_58649
L_58655:
	movw 0x8(%r11),%r13w
	movl 0x0(%r11),%r10d
	movq 0x10(%r11),%r9
	movl 0x4(%r11),%ebx
	movq 0x0(%r15),%r11
	movw 0x8(%r11),%r14w
	movl 0x0(%r11),%r8d
	movq 0x10(%r11),%rsp
	movl 0x4(%r11),%ecx
	cmpq $0x1,%r9
	je L_397672
L_58657:
	movq %rsp,%r15
	andq $0x3,%r15
	jnz L_58649
L_58658:
	movq 0x8(%r9),%r15
	cmpq %r15,0x8(%rsp)
	jne L_58649
	movl %r10d,(localWord32+0x0)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
L_58661:
	cmpl %ebx,%ecx
	je equal_PrimitiveDOptionDt_0
L_58662:
	movl %ebx,%r15d
	andl $0x1,%r15d
	cmpl $0x1,%r15d
	jne L_58649
L_58663:
	shrl $0x1,%ebx
	movw %bx,%r15w
	movl %ecx,%r11d
	andl $0x1,%r11d
	cmpl $0x1,%r11d
	jne L_58649
L_58664:
	shrl $0x1,%ecx
	movw %cx,%r11w
	movw %r15w,%r10w
	shrw $0x8,%r10w
	movb %r10b,%r9b
	movw %r11w,%r10w
	shrw $0x8,%r10w
	movb %r10b,%r8b
	cmpb %r9b,%r8b
	jne L_58649
L_58666:
	movb %r15b,%r10b
	movb %r11b,%r15b
	cmpb %r10b,%r15b
	jne L_58649
	movl (localWord32+0x8)(%rip),%ecx
	movl (localWord32+0x0)(%rip),%ebx
equal_PrimitiveDOptionDt_1:
	cmpl %ebx,%ecx
	je L_58676
L_58669:
	movl %ebx,%r15d
	andl $0x1,%r15d
	cmpl $0x1,%r15d
	jne L_58649
L_58670:
	shrl $0x1,%ebx
	movw %bx,%r15w
	movl %ecx,%r11d
	andl $0x1,%r11d
	cmpl $0x1,%r11d
	jne L_58649
L_58671:
	shrl $0x1,%ecx
	movw %cx,%r11w
	movw %r15w,%r10w
	shrw $0x8,%r10w
	movb %r10b,%r9b
	movw %r11w,%r10w
	shrw $0x8,%r10w
	movb %r10b,%r8b
	cmpb %r9b,%r8b
	jne L_58649
L_58673:
	movb %r15b,%r10b
	movb %r11b,%r15b
	cmpb %r10b,%r15b
	jne L_58649
L_58676:
	cmpw %r13w,%r14w
	je L_397660
L_58677:
	movw %r13w,%r15w
	andw $0x1,%r15w
	cmpw $0x1,%r15w
	jne L_58649
L_58678:
	shrw $0x1,%r13w
	movb %r13b,%r15b
	movw %r14w,%r13w
	andw $0x1,%r13w
	cmpw $0x1,%r13w
	jne L_58649
L_58679:
	shrw $0x1,%r14w
	movb %r14b,%r13b
	cmpb %r13b,%r15b
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397660:
L_58681:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
equal_PrimitiveDOptionDt_0:
	movl (localWord32+0x8)(%rip),%ecx
	movl (localWord32+0x0)(%rip),%ebx
	jmp equal_PrimitiveDOptionDt_1
.p2align 0x4
L_397672:
L_58684:
	cmpq $0x1,%rsp
	jne L_58649
	movl %r10d,(localWord32+0x0)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	jmp L_58661
.p2align 0x4
L_397676:
L_58702:
	shrq $0x2,%r15
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	cmpq $0x2,%r13
	jne L_397677
L_58705:
	shrq $0x2,%r15
	movl %r15d,%r13d
	cmpl %r13d,%r14d
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397677:
L_58703:
	andq $0x3,%r15
	jnz L_58649
L_58704:
	jmp L_58649
.p2align 0x4
L_397679:
L_58694:
	shrq $0x2,%r15
	movw %r15w,%r14w
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	jne L_397682
L_58697:
	shrq $0x2,%r15
	movw %r15w,%r13w
	movw %r14w,%r15w
	shrw $0x8,%r15w
	movb %r15b,%r11b
	movw %r13w,%r15w
	shrw $0x8,%r15w
	movb %r15b,%r10b
	cmpb %r11b,%r10b
	jne L_58649
L_58699:
	movb %r14b,%r15b
	movb %r13b,%r14b
	cmpb %r15b,%r14b
	je L_58681
	jmp L_58649
.p2align 0x4
L_397682:
L_58695:
	andq $0x3,%r15
	jnz L_58649
L_58696:
	jmp L_58649
.text
.p2align 0x4
.globl scaleImmediate_0
.hidden scaleImmediate_0
scaleImmediate_0:
L_58708:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_58709
L_58743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58744
.p2align 0x4
.long 0x4E9
L_58744:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_58709:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10E4,%r15
	jne L_397688
L_58711:
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	movb 0x0(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_397687
	cmpb $0x2,%r15b
	je L_397686
	cmpb $0x3,%r15b
	je L_397685
L_58712:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_58713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_397685:
L_58740:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_58741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_397686:
L_58737:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_58738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_397687:
L_58734:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_58735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_397688:
L_58710:
	movq (globalObjptr+0x5530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4ED
L_58713:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_58714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4ED
L_58741:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_58742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4ED
L_58738:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_58739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4ED
L_58735:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_58736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x994
L_58714:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq $0x11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_58715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x994
L_58742:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq $0x3,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_58715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x994
L_58739:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq $0x5,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_58715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x994
L_58736:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq $0x9,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_58715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x67A
L_58715:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58716
L_58732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_58733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58733
.p2align 0x4
.long 0x638
L_58733:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_58716:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x60(%rbp)
	movq %r13,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_58717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0xD16
L_58717:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	testl %r15d,%r15d
	jnz L_397691
L_58718:
	movq (globalObjptr+0x1968)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_92+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_397691:
L_58722:
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_58723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1
bug_92:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58719
L_58720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_58721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58721
.p2align 0x4
.long 0x452
L_58721:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_58719:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD17
L_58723:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_58724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0xD18
L_58724:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_58725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x7C6
L_58725:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_58726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD19
L_58726:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_58727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD1A
L_58727:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_58728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7C7
L_58728:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58729
L_58730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_58731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58731
.p2align 0x4
.long 0xD1B
L_58731:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_58729:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp construct_0
.text
.p2align 0x4
.globl toIntInfX_0
.hidden toIntInfX_0
toIntInfX_0:
L_58745:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_58746
L_58759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_58760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58760
.p2align 0x4
.long 0x460
L_58760:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_58746:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_58747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4A7
L_58747:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x38(%rbp)
	movq $0x3,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_58748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x71E
L_58748:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x5,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_58749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
.long 0x700
L_58749:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,%r14
	movq 0x28(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_397696
L_58750:
	cmpq %r15,%r13
	jl L_397695
L_58752:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1186
.p2align 0x4
L_397695:
L_58754:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397696:
L_58755:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_58756:
	cmpl $0x0,%eax
	jl L_58754
	jmp L_58752
.text
.p2align 0x4
.globl construct_0
.hidden construct_0
construct_0:
L_58761:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_58857
L_58762:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397730
L_58763:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10E3,%r13
	je L_397699
	cmpq $0x10E4,%r13
	je L_397698
L_58764:
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	imull $0x5555,%r11d
	movl %r11d,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x20(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x30(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_58765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_397698:
L_58850:
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x18(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x28(%rbp)
	movq %r11,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_58851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_397699:
L_58849:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x8(%rbp)
L_58769:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq (globalObjptr+0xAE0)(%rip),%r15
	movq 0x0(%r15),%r11
	incq %r11
	jo L_397729
L_58771:
	movq %r11,0x0(%r15)
	movl 0x0(%r14),%r15d
	andl 0x8(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_58786
L_58772:
	movslq %r15d,%r14
	movq %r14,0x20(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_58774
L_58775:
	movq 0x0(%r13,%r14,8),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_58785
L_58776:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
.p2align 0x4,,0x7
L_58777:
	movq (globalObjptr+0xAE8)(%rip),%r15
	movq 0x0(%r15),%r14
	incq %r14
	jo L_397725
L_58779:
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_397722
	cmpq $0x10E4,%r15
	je L_397720
L_58780:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10E2,%r13
	jne L_58781
L_58823:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_397718
.p2align 0x4,,0x7
L_58781:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_397700
L_58782:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_58777
.p2align 0x4
L_397700:
L_58783:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58785
L_58821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_58822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58822
.p2align 0x4
.long 0xD1D
L_58822:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_58785:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq (globalObjptr+0x5518)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_58786
L_58787:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r11
	movq $0x2253,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq 0x28(%rbp),%rdx
	movq %rdx,0x8(%r10)
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_58774
L_58789:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r14,8)
	movq 0x10(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_58791
L_58792:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_58786
L_58793:
	cmpl %r14d,%r10d
	jnl L_397712
L_58795:
	addl %r10d,%r10d
	jo L_58786
L_58796:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_397710
L_58797:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x4EB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_58798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58798
.p2align 0x4
.long 0x65E
L_58798:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_682:
	cmpq 0x28(%rbp),%r15
	jnl L_397701
L_58819:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_682
.p2align 0x4
L_397701:
L_58799:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_397709
L_58801:
	cmpl $0x0,%r13d
	jl L_397708
L_58802:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_683:
	movl 0x48(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_397707
L_58804:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_58813
L_58805:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_58806:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397705
.p2align 0x4,,0x7
L_58807:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x20(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_397704
L_58808:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_397703
L_58810:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2253,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_397702
L_58811:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_58806
.p2align 0x4
L_397702:
L_58813:
	incl 0x48(%rbp)
	jmp loop_683
.p2align 0x4
L_397703:
L_58774:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397704:
L_58786:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397705:
L_58815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_58816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58816
.p2align 0x4
.long 0xD1C
L_58816:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_58807
.p2align 0x4
L_397707:
L_58803:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x18(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397708:
L_58818:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397709:
L_58791:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397710:
L_58820:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397712:
L_58794:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397718:
L_58825:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_58826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_397720:
L_58837:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10E4,%r13
	jne L_58781
L_58838:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_58839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_397722:
L_58833:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10E3,%r13
	jne L_58781
L_58834:
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_58781
L_58832:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397725:
L_58778:
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397729:
L_58770:
	movq (globalObjptr+0xAF8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397730:
L_58857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_58858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58858
.p2align 0x4
.long 0x460
L_58858:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_58763
.p2align 0x4
.long 0x65D
L_58765:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_58766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x65C
L_58851:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_58852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD1E
L_58826:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	testl %r15d,%r15d
	jz L_58781
L_58828:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_58829:
	testl %eax,%eax
	jnz L_58832
	jmp L_58781
.p2align 0x4
.long 0xD1E
L_58839:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	testl %r15d,%r15d
	jz L_58781
L_58841:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_58842:
	testl %eax,%eax
	jnz L_58832
	jmp L_58781
.p2align 0x4
.long 0x789
L_58766:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_58767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x789
L_58852:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_58853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x789
L_58767:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58768
L_58847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58848
.p2align 0x4
.long 0x65B
L_58848:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_58768:
	movl 0xC(%rbp),%r15d
	xorl 0x8(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	jmp L_58769
.p2align 0x4
.long 0x789
L_58853:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58769
L_58855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_58856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58856
.p2align 0x4
.long 0x65B
L_58856:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_58769
.text
.p2align 0x4
.globl construct_1
.hidden construct_1
construct_1:
L_58859:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_58998
L_58860:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397798
L_58861:
	movq $0x5AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%r12
	movzbl 0x0(%rbp),%r13d
	movzbl 0x1(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0x28(%rbp),%r10
	movq %r10,0x28(%r14)
	cmpq $0x1,%r11
	je L_397794
L_58862:
	cmpq $0x1,%r13
	je L_397792
L_58863:
	movl 0x0(%r11),%ecx
	imull $0x5555,%ecx
	xorl 0x0(%r13),%ecx
	cmpq $0x1,%r15
	je L_397790
L_58864:
L_58865:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_397789
L_58866:
	movl 0x0(%r15),%r13d
	imull $0x5555,%r13d
	xorl 0x0(%r14),%r13d
	movl %ecx,%ebx
	movl %r13d,%ecx
L_58867:
	imull $0x5555,%ebx
	xorl %ebx,%ecx
	movl %ecx,0x4(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_397788
L_58869:
	movq %r14,0x0(%r13)
	movl 0x0(%r11),%r13d
	andl %ecx,%r13d
	cmpl $0x0,%r13d
	jl L_58884
L_58870:
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jnb L_58872
L_58873:
	movq 0x0(%r15,%r11,8),%r13
	movq %r13,0x50(%rbp)
	cmpq $0x1,%r13
	je L_58883
L_58874:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_58875:
	movq (globalObjptr+0xAE8)(%rip),%r13
	movq 0x0(%r13),%r11
	incq %r11
	jo L_397784
L_58877:
	movq %r11,0x0(%r13)
	movq 0x18(%r15),%r13
	movb 0x0(%r13),%cl
	movb 0x1(%r13),%dl
	movq 0x8(%r13),%r9
	movq 0x10(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x20(%r13),%r8
	movq 0x28(%rbp),%rsp
	movq 0x28(%r13),%rsi
	movl 0x0(%rsi),%edi
	cmpl %edi,0x0(%rsp)
	jne L_58879
L_58944:
	cmpq $0x1,%r8
	je L_397781
L_58946:
	movq 0x20(%rbp),%r13
	movq %r13,%rsp
	andq $0x3,%rsp
	jnz L_58879
L_58947:
	movq 0x8(%r13),%rsp
	cmpq %rsp,0x8(%r8)
	jne L_58879
L_58950:
	cmpq $0x1,%r11
	je L_397777
L_58952:
	movq 0x10(%rbp),%r13
	movq %r13,%r8
	andq $0x3,%r8
	jnz L_58879
L_58953:
	movq 0x10(%r13),%r8
	cmpq %r8,0x10(%r11)
	jne L_58879
L_58956:
	cmpq $0x1,%r10
	je L_397773
L_58958:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_58879
L_58959:
	movq 0x8(%r10),%r11
	cmpq %r11,0x8(%r13)
	jne L_58879
L_58962:
	cmpq $0x1,%r9
	je L_397769
L_58964:
	movq 0x8(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_58879
L_58965:
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r9)
	jne L_58879
L_58968:
	cmpb %dl,0x1(%rbp)
	jne L_58879
L_58970:
	cmpb %cl,0x0(%rbp)
	je L_397765
L_58879:
	cmpq $0x1,%r14
	je L_397738
L_58880:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_58875
.p2align 0x4
L_397738:
L_58881:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_58883
L_58942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_58943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58943
.p2align 0x4
.long 0xD23
L_58943:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_58883:
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0xCD0)(%rip),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
	incl %r11d
	jo L_58884
L_58885:
	movl %r11d,0x0(%r13)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_397761
L_58886:
	movq 0x8(%r13),%r15
	movq $0x21CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_397760
L_58887:
L_58888:
	movq 0x8(%r15),%r13
	movq $0x21CD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x8(%rbp)
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_397759
L_58889:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_58890:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397758
.p2align 0x4,,0x7
L_58891:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_397739
L_58892:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_58890
.p2align 0x4
L_397739:
L_58893:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_58894:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397757
.p2align 0x4,,0x7
L_58895:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_397740
L_58896:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_58894
.p2align 0x4
L_397740:
L_58898:
	movq $0x5AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x18(%rbp),%rdx
	movq %rdx,0x10(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r14)
	movq (globalObjptr+0x5528)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_58884
L_58899:
	movl %r13d,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq $0x21CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x48(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_58872
L_58901:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r14,8)
	movq 0x10(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_58903
L_58904:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_58884
L_58905:
	cmpl %r14d,%r10d
	jnl L_397752
L_58907:
	addl %r10d,%r10d
	jo L_58884
L_58908:
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x10(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_397750
L_58909:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x4F7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_58910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58910
.p2align 0x4
.long 0xD1F
L_58910:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_684:
	cmpq 0x18(%rbp),%r15
	jnl L_397741
L_58931:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_684
.p2align 0x4
L_397741:
L_58911:
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_397749
L_58913:
	cmpl $0x0,%r13d
	jl L_397748
L_58914:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_685:
	movl 0x38(%rbp),%r15d
	cmpl 0x14(%rbp),%r15d
	jnl L_397747
L_58916:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_58925
L_58917:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
L_58918:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397745
.p2align 0x4,,0x7
L_58919:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x10(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_397744
L_58920:
	movslq %r14d,%r13
	cmpq 0x18(%rbp),%r13
	jnb L_397743
L_58922:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x21CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_397742
L_58923:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_58918
.p2align 0x4
L_397742:
L_58925:
	incl 0x38(%rbp)
	jmp loop_685
.p2align 0x4
L_397743:
L_58872:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397744:
L_58884:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397745:
L_58927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_58928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58928
.p2align 0x4
.long 0xD20
L_58928:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_58919
.p2align 0x4
L_397747:
L_58915:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x40(%rbp),%r14
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397748:
L_58930:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397749:
L_58903:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397750:
L_58932:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397752:
L_58906:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397757:
L_58933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_58934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58934
.p2align 0x4
.long 0xD21
L_58934:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_58895
.p2align 0x4
L_397758:
L_58935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_58936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58936
.p2align 0x4
.long 0xD22
L_58936:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_58891
.p2align 0x4
L_397759:
L_58937:
	movq 0x8(%rbp),%r15
	jmp L_58898
.p2align 0x4
L_397760:
L_58938:
	xchgq %r14,%r15
	jmp L_58898
.p2align 0x4
L_397761:
L_58939:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_397762
L_58940:
	movq $0x1,%r14
	jmp L_58888
.p2align 0x4
L_397762:
L_58941:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_58898
.p2align 0x4
L_397765:
L_58972:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397769:
L_58973:
	cmpq $0x1,0x8(%rbp)
	jne L_58879
	jmp L_58968
.p2align 0x4
L_397773:
L_58975:
	cmpq $0x1,0x18(%rbp)
	jne L_58879
	jmp L_58962
.p2align 0x4
L_397777:
L_58977:
	cmpq $0x1,0x10(%rbp)
	jne L_58879
	jmp L_58956
.p2align 0x4
L_397781:
L_58979:
	cmpq $0x1,0x20(%rbp)
	jne L_58879
	jmp L_58950
.p2align 0x4
L_397784:
L_58876:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397788:
L_58868:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397789:
L_58983:
	movl 0x0(%r15),%r13d
	movl %ecx,%ebx
	movl %r13d,%ecx
	jmp L_58867
.p2align 0x4
L_397790:
L_58984:
L_58985:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_397791
L_58986:
	movl 0x0(%r15),%r14d
	movl %ecx,%ebx
	movl %r14d,%ecx
	jmp L_58867
.p2align 0x4
L_397791:
L_58987:
	movl $0x55555555,%r14d
	movl %ecx,%ebx
	movl %r14d,%ecx
	jmp L_58867
.p2align 0x4
L_397792:
L_58988:
	movl 0x0(%r11),%ecx
	cmpq $0x1,%r15
	je L_58985
L_58989:
	jmp L_58865
.p2align 0x4
L_397794:
L_58991:
	cmpq $0x1,%r13
	je L_397796
L_58992:
	movl 0x0(%r13),%ecx
	cmpq $0x1,%r15
	je L_58985
L_58993:
	jmp L_58865
.p2align 0x4
L_397796:
L_58995:
	cmpq $0x1,%r15
	je L_397797
L_58996:
	movl $0x55555555,%ecx
	jmp L_58865
.p2align 0x4
L_397797:
L_58997:
	movl $0x55555555,%ecx
	jmp L_58985
.p2align 0x4
L_397798:
L_58998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_58999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_58999
.p2align 0x4
.long 0x4F1
L_58999:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_58861
.text
.p2align 0x4
.globl cReturnTemps_1
.hidden cReturnTemps_1
cReturnTemps_1:
L_59000:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_59120
L_59001:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397801
L_59002:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x1,%r13
	je L_397800
L_59003:
	movzwq (globalWord16+0x2A)(%rip),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq $0x21C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_59004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_397800:
L_59119:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397801:
L_59120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_59121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59121
.p2align 0x4
.long 0x460
L_59121:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_59002
.p2align 0x4
.long 0x912
L_59004:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_59005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD24
L_59005:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x78(%rbp)
	movq $0x3,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_59006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD24
L_59006:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_59007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD24
L_59007:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59008
L_59117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_59118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59118
.p2align 0x4
.long 0xD3E
L_59118:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_59008:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_59009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD24
L_59009:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movb $0x3,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq %r13,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0xD25
L_59010:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x7,0x88(%rbp)
	movb $0x3,0x89(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x88,%rbp
	leaq (L_59011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0xD26
L_59011:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59012
L_59115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_59116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59116
.p2align 0x4
.long 0xD3D
L_59116:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_59012:
	movq $0x1267,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2247,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movzwq (globalWord16+0x32)(%rip),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_59013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD27
L_59013:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_59014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD28
L_59014:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD28
L_59015:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD28
L_59016:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59017
L_59113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_59114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59114
.p2align 0x4
.long 0xD3C
L_59114:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_59017:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_59018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD28
L_59018:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x3,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0xD28
L_59019:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x6,0x88(%rbp)
	movb $0x3,0x89(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x88,%rbp
	leaq (L_59020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0xD27
L_59020:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59021
L_59111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_59112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59112
.p2align 0x4
.long 0xD3B
L_59112:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_59021:
	movq $0x1267,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2247,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movzwq (globalWord16+0x3A)(%rip),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_59022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD29
L_59022:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_59023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD2A
L_59023:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_59024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD2A
L_59024:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_59025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD2A
L_59025:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59026
L_59109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_59110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59110
.p2align 0x4
.long 0xD3A
L_59110:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_59026:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_59027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD2A
L_59027:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movb $0x3,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_59028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0xD2A
L_59028:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movb $0x5,0x90(%rbp)
	movb $0x3,0x91(%rbp)
	movq $0x1,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0x90,%rbp
	leaq (L_59029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0xD29
L_59029:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59030
L_59107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_59108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59108
.p2align 0x4
.long 0xD39
L_59108:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_59030:
	movq $0x1267,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2247,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_59031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD2B
L_59031:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_59032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD2C
L_59032:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD2C
L_59033:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD2C
L_59034:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59035
L_59105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_59106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59106
.p2align 0x4
.long 0xD37
L_59106:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_59035:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_59036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD2C
L_59036:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movb $0x3,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0xD2C
L_59037:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movb $0x5,0x88(%rbp)
	movb $0x3,0x89(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x88,%rbp
	leaq (L_59038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0xD2B
L_59038:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59039
L_59103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_59104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59104
.p2align 0x4
.long 0x8E0
L_59104:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_59039:
	movq $0x1267,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x18,%r12
	movq (globalWord64+0x1020)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_59040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD2D
L_59040:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_59041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD2E
L_59041:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_59042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD2E
L_59042:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq $0x9,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_59043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD2E
L_59043:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59044
L_59101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_59102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59102
.p2align 0x4
.long 0xD38
L_59102:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_59044:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_59045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD2E
L_59045:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movb $0x3,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_59046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0xD2E
L_59046:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movb $0x5,0x90(%rbp)
	movb $0x3,0x91(%rbp)
	movq $0x1,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0x90,%rbp
	leaq (L_59047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0xD2D
L_59047:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59048
L_59099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_59100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59100
.p2align 0x4
.long 0xD37
L_59100:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_59048:
	movq $0x1267,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1038)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2247,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2247,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_59067
	cmpq $0x5,%r15
	je L_59067
	cmpq $0x6,%r15
	je L_397815
L_59049:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_59050
L_59064:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_397813
	cmpq $0xF54,%r15
	je L_397812
L_59050:
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_59051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_397812:
L_59067:
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397813:
L_59065:
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397815:
L_59070:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_397816
L_59071:
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_59072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_397816:
L_59085:
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_59086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD2F
L_59051:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_397823
	cmpl $0x10,%r15d
	je L_397822
	cmpl $0x20,%r15d
	je L_397821
	cmpl $0x40,%r15d
	je L_397820
L_59052:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_397820:
L_59063:
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397821:
L_59062:
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397822:
L_59061:
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397823:
L_59060:
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD30
L_59072:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_59073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD30
L_59086:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_59087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_59053:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59054
L_59058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59059
.p2align 0x4
.long 0x452
L_59059:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59054:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_93+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD31
L_59073:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD31
L_59087:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
bug_93:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59055
L_59056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59057
.p2align 0x4
.long 0x452
L_59057:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59055:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD32
L_59074:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD32
L_59088:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_59089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD33
L_59075:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59076
L_59083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_59084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59084
.p2align 0x4
.long 0xD36
L_59084:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_59076:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_59077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD33
L_59089:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59090
L_59097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_59098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59098
.p2align 0x4
.long 0xD36
L_59098:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_59090:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_59091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xD34
L_59077:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb $0x3,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_59078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0xD34
L_59091:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb $0x3,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_59092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0xD35
L_59078:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb $0x3,0x8(%rbp)
	movb $0x3,0x9(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x8,%rbp
	leaq (L_59079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0xD35
L_59092:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb $0x4,0x8(%rbp)
	movb $0x3,0x9(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x8,%rbp
	leaq (L_59093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x1
L_59079:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59080
L_59081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59082
.p2align 0x4
.long 0x452
L_59082:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59080:
	movq $0x1267,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1048)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2247,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_59093:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59094
L_59095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59096
.p2align 0x4
.long 0x452
L_59096:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59094:
	movq $0x1267,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1048)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2247,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl temp_uses_defs_1
.hidden temp_uses_defs_1
temp_uses_defs_1:
L_59122:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_59123
L_59303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_59304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59304
.p2align 0x4
.long 0x45C
L_59304:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_59123:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_397901
L_59124:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_59125:
L_59126:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_59127
L_59268:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_397898
L_59269:
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_59298
L_59270:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_59271:
	movl 0x0(%r15),%r11d
	movl %r11d,0x30(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x34(%rbp)
	cmpl %r10d,%r11d
	jnl L_397887
L_59295:
	cmpq $0x1,%r13
	je L_397830
L_59296:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_59271
.p2align 0x4
L_397830:
L_59298:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_397831
L_59299:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_59125
.p2align 0x4
L_397831:
L_59300:
	movq 0x20(%rbp),%r15
L_59130:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_59137
L_59131:
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_59132:
L_59133:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_397885
L_59227:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_397883
L_59228:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,%r11
	je L_397882
L_59229:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_59230:
	movq 0x28(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_59262
L_59231:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_59232:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_397871
L_59259:
	cmpq $0x1,%r13
	je L_397832
L_59260:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_59232
.p2align 0x4
L_397832:
L_59262:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_397833
L_59263:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_59230
.p2align 0x4
L_397833:
L_59264:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_59245:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397834
L_59246:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	xchgq %r14,%r15
	jmp L_59132
.p2align 0x4
L_397834:
L_59137:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_397870
L_59138:
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_59139:
L_59140:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_397869
L_59186:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_397867
L_59187:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,%r11
	je L_397866
L_59188:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_59189:
	movq 0x28(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_59221
L_59190:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_59191:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_397855
L_59218:
	cmpq $0x1,%r13
	je L_397835
L_59219:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_59191
.p2align 0x4
L_397835:
L_59221:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_397836
L_59222:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_59189
.p2align 0x4
L_397836:
L_59223:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_59204:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397837
L_59205:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	xchgq %r14,%r15
	jmp L_59139
.p2align 0x4
L_397837:
L_59206:
	movq %r15,0x18(%rbp)
L_59144:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_397854
L_59145:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_59146:
L_59147:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_59148
L_59151:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_397851
L_59152:
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_59181
L_59153:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_59154:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_397840
L_59178:
	cmpq $0x1,%r13
	je L_397838
L_59179:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_59154
.p2align 0x4
L_397838:
L_59181:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397839
L_59182:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_59146
.p2align 0x4
L_397839:
L_59183:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397840:
L_59155:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397849
.p2align 0x4,,0x7
L_59156:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_397847
L_59157:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_59164
L_59158:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_59159:
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_397844
L_59160:
	cmpq $0x1,%r14
	je L_397841
L_59161:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_59159
.p2align 0x4
L_397841:
L_59162:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397843
.p2align 0x4,,0x7
L_59164:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397842
L_59165:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_59146
.p2align 0x4
L_397842:
L_59166:
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397843:
L_59167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59168
.p2align 0x4
.long 0x721
L_59168:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_59164
.p2align 0x4
L_397844:
L_59169:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397845
L_59170:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_59146
.p2align 0x4
L_397845:
L_59171:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397847:
L_59173:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397848
L_59174:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_59146
.p2align 0x4
L_397848:
L_59175:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397849:
L_59176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_59177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59177
.p2align 0x4
.long 0x788
L_59177:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_59156
.p2align 0x4
L_397851:
L_59148:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_397852
L_59149:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_59146
.p2align 0x4
L_397852:
L_59150:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397854:
L_59185:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397855:
L_59192:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397864
.p2align 0x4,,0x7
L_59193:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_397862
L_59194:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_59201
L_59195:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_59196:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_397859
L_59197:
	cmpq $0x1,%r14
	je L_397856
L_59198:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_59196
.p2align 0x4
L_397856:
L_59199:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397858
.p2align 0x4,,0x7
L_59201:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_59204
L_59202:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_59189
.p2align 0x4
L_397858:
L_59207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59208
.p2align 0x4
.long 0x4F1
L_59208:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_59201
.p2align 0x4
L_397859:
L_59209:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_397860
L_59210:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_59189
.p2align 0x4
L_397860:
L_59211:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_59204
.p2align 0x4
L_397862:
L_59213:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_397863
L_59214:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_59189
.p2align 0x4
L_397863:
L_59215:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_59204
.p2align 0x4
L_397864:
L_59216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_59217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59217
.p2align 0x4
.long 0x73E
L_59217:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_59193
.p2align 0x4
L_397866:
L_59225:
	movq %r14,%r15
	jmp L_59204
.p2align 0x4
L_397867:
	movq %r14,(localObjptr+0x8)(%rip)
L_59141:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397868
L_59142:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_59139
.p2align 0x4
L_397868:
L_59143:
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_59144
.p2align 0x4
L_397869:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_59141
.p2align 0x4
L_397870:
L_59226:
	movq %r15,0x18(%rbp)
	jmp L_59144
.p2align 0x4
L_397871:
L_59233:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397880
.p2align 0x4,,0x7
L_59234:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_397878
L_59235:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_59242
L_59236:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_59237:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_397875
L_59238:
	cmpq $0x1,%r14
	je L_397872
L_59239:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_59237
.p2align 0x4
L_397872:
L_59240:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397874
.p2align 0x4,,0x7
L_59242:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_59245
L_59243:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_59230
.p2align 0x4
L_397874:
L_59248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59249
.p2align 0x4
.long 0x4F1
L_59249:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_59242
.p2align 0x4
L_397875:
L_59250:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_397876
L_59251:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_59230
.p2align 0x4
L_397876:
L_59252:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_59245
.p2align 0x4
L_397878:
L_59254:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_397879
L_59255:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_59230
.p2align 0x4
L_397879:
L_59256:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_59245
.p2align 0x4
L_397880:
L_59257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_59258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59258
.p2align 0x4
.long 0x73E
L_59258:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_59234
.p2align 0x4
L_397882:
L_59266:
	movq %r14,%r15
	jmp L_59245
.p2align 0x4
L_397883:
	movq %r14,(localObjptr+0x8)(%rip)
L_59134:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_397884
L_59135:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_59132
.p2align 0x4
L_397884:
L_59136:
	movq (localObjptr+0x8)(%rip),%r15
	jmp L_59137
.p2align 0x4
L_397885:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_59134
.p2align 0x4
L_397887:
L_59272:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397896
.p2align 0x4,,0x7
L_59273:
	movl 0x30(%rbp),%r13d
	cmpl %r13d,0x34(%rbp)
	jl L_397894
L_59274:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_59281
L_59275:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_59276:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_397891
L_59277:
	cmpq $0x1,%r14
	je L_397888
L_59278:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_59276
.p2align 0x4
L_397888:
L_59279:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397890
.p2align 0x4,,0x7
L_59281:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_59130
L_59282:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_59125
.p2align 0x4
L_397890:
L_59284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59285
.p2align 0x4
.long 0x4DF
L_59285:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_59281
.p2align 0x4
L_397891:
L_59286:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_397892
L_59287:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_59125
.p2align 0x4
L_397892:
L_59288:
	movq 0x20(%rbp),%r15
	jmp L_59130
.p2align 0x4
L_397894:
L_59290:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_397895
L_59291:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_59125
.p2align 0x4
L_397895:
L_59292:
	movq 0x20(%rbp),%r15
	jmp L_59130
.p2align 0x4
L_397896:
L_59293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59294
.p2align 0x4
.long 0x5F7
L_59294:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_59273
.p2align 0x4
L_397898:
L_59127:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_397899
L_59128:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_59125
.p2align 0x4
L_397899:
L_59129:
	movq 0x20(%rbp),%r15
	jmp L_59130
.p2align 0x4
L_397901:
L_59302:
	movq $0x1,%r15
	jmp L_59130
.text
.p2align 0x4
.globl get_51
.hidden get_51
get_51:
L_59305:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_59306
L_59360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_59361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59361
.p2align 0x4
.long 0x460
L_59361:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_59306:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_397912
L_59308:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_397911
L_59309:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_59311:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_397910
L_59352:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD75,%r10
	jne L_397909
L_59353:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_397906
L_59312:
	incl %ecx
	jo L_397905
L_59314:
	cmpq $0x1,%r14
	je L_397903
L_59315:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_59311
.p2align 0x4
L_397903:
L_59316:
L_59317:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_397904
L_59319:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_138
L_59351:
	movl %ecx,0x0(%r15)
x_138:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397904:
L_59318:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397905:
L_59313:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397906:
L_59355:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_59318
L_59356:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_397907
L_59358:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397907:
L_59357:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397909:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_59312
.p2align 0x4
L_397910:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_59312
.p2align 0x4
L_397911:
L_59359:
	xorl %ecx,%ecx
	jmp L_59317
.p2align 0x4
L_397912:
L_59307:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_59321:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_59322:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_59323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_59323:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEDC8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_59324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_59324:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_59325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_59325:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59326
L_59349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_59350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59350
.p2align 0x4
.long 0x4AF
L_59350:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_59326:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_59327:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_59313
L_59328:
	cmpq $0x1,%r14
	je L_397914
L_59329:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_59327
.p2align 0x4
L_397914:
L_59330:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59331
L_59347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59348
.p2align 0x4
.long 0x4E7
L_59348:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_59331:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_397915
L_59332:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_49:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_397915:
L_59346:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_49
.p2align 0x4
.long 0x1
rev_50:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_397921
L_59333:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_59334:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397920
.p2align 0x4,,0x7
L_59335:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_397919
L_59336:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_59334
.p2align 0x4
L_397919:
L_59338:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_397920:
L_59343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_59344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59344
.p2align 0x4
.long 0x45C
L_59344:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_59335
.p2align 0x4
L_397921:
L_59345:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_59338
.p2align 0x4
.long 0x1
L_59339:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59340
L_59341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59342
.p2align 0x4
.long 0x452
L_59342:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59340:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1367
.hidden x_1367
x_1367:
L_59362:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_59400
L_59363:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397938
L_59364:
	movq 0x8(%rbp),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_397937
L_59366:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_397936
L_59367:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_59369:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_397935
L_59392:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_397934
L_59393:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_397931
L_59370:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_59371
L_59372:
	cmpq $0x1,%r15
	je L_397923
L_59373:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_59369
.p2align 0x4
L_397923:
L_59374:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59375
L_59390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59391
.p2align 0x4
.long 0xBCB
L_59391:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_59375:
	movl 0x30(%rbp),%ecx
L_59376:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_397928
L_59378:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_59380
L_59389:
	movl %ecx,0x0(%r15)
L_59380:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_59371
L_59381:
	movl %r13d,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	addq $0x10,%r12
	movl $0x0,0x4(%r15)
	movq $0x1963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_139:
	movl 0x0(%r15),%r14d
	cmpl $0x0,%r14d
	jl L_397924
L_59382:
	movl %r14d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1189
.p2align 0x4
L_397924:
L_59383:
	negl %r14d
	jo L_397925
L_59384:
	movl %r14d,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_397925:
L_59371:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397928:
L_59377:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397931:
L_59395:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_59377
L_59396:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_397932
L_59398:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp x_139
.p2align 0x4
L_397932:
L_59397:
	movq %r11,%r15
	jmp x_139
.p2align 0x4
L_397934:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_59370
.p2align 0x4
L_397935:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_59370
.p2align 0x4
L_397936:
L_59399:
	xorl %ecx,%ecx
	jmp L_59376
.p2align 0x4
L_397937:
L_59365:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397938:
L_59400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_59401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59401
.p2align 0x4
.long 0x460
L_59401:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_59364
.p2align 0x4
.long 0x1
L_59385:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59386
L_59387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59388
.p2align 0x4
.long 0x452
L_59388:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59386:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl x_1362
.hidden x_1362
x_1362:
L_59402:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_59403
L_59457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_59458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59458
.p2align 0x4
.long 0x460
L_59458:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_59403:
	movq 0x8(%rbp),%r10
	movq 0x10(%r10),%r9
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_397950
L_59405:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_397949
L_59406:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_59408:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_397948
L_59449:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD92,%r10
	jne L_397947
L_59450:
	movq 0x8(%r14),%r10
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x8)(%rip)
	je L_397944
L_59409:
	incl %ecx
	jo L_397943
L_59411:
	cmpq $0x1,%r15
	je L_397941
L_59412:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_59408
.p2align 0x4
L_397941:
L_59413:
L_59414:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_397942
L_59416:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_140
L_59448:
	movl %ecx,0x0(%r15)
x_140:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397942:
L_59415:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397943:
L_59410:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397944:
L_59452:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_59415
L_59453:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_397945
L_59455:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397945:
L_59454:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397947:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_59409
.p2align 0x4
L_397948:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_59409
.p2align 0x4
L_397949:
L_59456:
	xorl %ecx,%ecx
	jmp L_59414
.p2align 0x4
L_397950:
L_59404:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_59418:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_59419:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_59420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_59420:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEDD0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_59421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_59421:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_59422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_59422:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59423
L_59446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_59447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59447
.p2align 0x4
.long 0x4AF
L_59447:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_59423:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_59424:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_59410
L_59425:
	cmpq $0x1,%r14
	je L_397952
L_59426:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_59424
.p2align 0x4
L_397952:
L_59427:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59428
L_59444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59445
.p2align 0x4
.long 0x4E7
L_59445:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_59428:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_397953
L_59429:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_50:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_397953:
L_59443:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_50
.p2align 0x4
.long 0x1
rev_51:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_397959
L_59430:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_59431:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397958
.p2align 0x4,,0x7
L_59432:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_397957
L_59433:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_59431
.p2align 0x4
L_397957:
L_59435:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_397958:
L_59440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_59441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59441
.p2align 0x4
.long 0x45C
L_59441:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_59432
.p2align 0x4
L_397959:
L_59442:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_59435
.p2align 0x4
.long 0x1
L_59436:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59437
L_59438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59439
.p2align 0x4
.long 0x452
L_59439:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59437:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl use_0
.hidden use_0
use_0:
L_59459:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_59460
L_59501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_59502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59502
.p2align 0x4
.long 0x4AF
L_59502:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_59460:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_59461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0x51F
L_59461:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_59462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x51F
L_59462:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_397962
L_59463:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397962:
L_59464:
	movq 0x18(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
L_59465:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_397968
L_59467:
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x1C(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_397967
L_59470:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_686:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	je L_397966
L_59471:
	movslq %r15d,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_397965
L_59474:
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	cmpl %r15d,0x18(%rbp)
	jne L_397964
.p2align 0x4,,0x7
L_59479:
	movl 0x38(%rbp),%r15d
	incl %r15d
	jo L_397963
L_59481:
	movl %r15d,0x38(%rbp)
	jmp loop_686
.p2align 0x4
L_397963:
L_59480:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397964:
L_59475:
	movq %r11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_59476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_397965:
L_59473:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397966:
L_59500:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397967:
L_59469:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397968:
L_59466:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD3F
L_59476:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF48,%r15
	je L_397970
	cmpq $0xF49,%r15
	je L_397969
L_59477:
	movq 0x10(%r14),%r15
L_59478:
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (Bang_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_397969:
L_59498:
	movq 0x0(%r14),%r15
	jmp L_59478
.p2align 0x4
L_397970:
L_59497:
	movq 0x30(%r14),%r15
	jmp L_59478
.p2align 0x4
.long 0xD3F
Bang_0:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,0x8(%r14)
	jne L_59479
L_59482:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_59469
L_59484:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_687:
	cmpl %ecx,%ebx
	je L_397977
L_59485:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_59473
L_59487:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xF2F,%r14
	jne L_59488
L_59490:
	movq 0x10(%r11),%r14
	movq 0x0(%r11),%r13
L_59491:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_59488
L_59492:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_59488
L_59494:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_397972
L_59488:
	incl %ebx
	jo L_59480
L_59489:
	jmp loop_687
.p2align 0x4
L_397972:
L_59495:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397977:
L_59496:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x2,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1347
.hidden x_1347
x_1347:
L_59503:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_59504
L_59557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_59558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59558
.p2align 0x4
.long 0x460
L_59558:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_59504:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_397989
L_59506:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_397988
L_59507:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_59509:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_397987
L_59549:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD4A,%r10
	jne L_397986
L_59550:
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_397983
L_59510:
	incl %ecx
	jo L_397982
L_59512:
	cmpq $0x1,%r15
	je L_397980
L_59513:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_59509
.p2align 0x4
L_397980:
L_59514:
L_59515:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_397981
L_59517:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_141
L_59548:
	movl %ecx,0x0(%r15)
x_141:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_397981:
L_59516:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397982:
L_59511:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397983:
L_59552:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_59516
L_59553:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_397984
L_59555:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397984:
L_59554:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_397986:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_59510
.p2align 0x4
L_397987:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_59510
.p2align 0x4
L_397988:
L_59556:
	xorl %ecx,%ecx
	jmp L_59515
.p2align 0x4
L_397989:
L_59505:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_59519:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_59520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_59520:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_59521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_59521:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xECE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_59522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_59522:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_59523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_59523:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59524
L_59546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_59547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59547
.p2align 0x4
.long 0x4AF
L_59547:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_59524:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_59525:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_59511
L_59526:
	cmpq $0x1,%r14
	je L_397991
L_59527:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_59525
.p2align 0x4
L_397991:
L_59528:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59529
L_59544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59545
.p2align 0x4
.long 0x4E7
L_59545:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_59529:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_397992
L_59530:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_51:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_397992:
L_59543:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_51
.p2align 0x4
.long 0x1
rev_52:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_397998
L_59531:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_59532:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_397997
.p2align 0x4,,0x7
L_59533:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_397996
L_59534:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_59532
.p2align 0x4
L_397996:
L_59536:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_94+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_397997:
L_59540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_59541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59541
.p2align 0x4
.long 0x45C
L_59541:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_59533
.p2align 0x4
L_397998:
L_59542:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_59536
.p2align 0x4
.long 0x1
bug_94:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59537
L_59538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59539
.p2align 0x4
.long 0x452
L_59539:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59537:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl value_0
.hidden value_0
value_0:
L_59559:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_59653
L_59560:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398001
L_59561:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF45,%r14
	je L_398000
L_59652:
	movq 0x0(%r15),%r14
	movq $0x1E93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398000:
L_59562:
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_59563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
L_398001:
L_59653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59654
.p2align 0x4
.long 0x452
L_59654:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_59561
.p2align 0x4
.long 0x4B0
L_59563:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59564
L_59650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_59651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59651
.p2align 0x4
.long 0x460
L_59651:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_59564:
	movq 0x8(%rbp),%rsp
	movq 0x0(%rsp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rsp
	movq %rsp,%r14
	shrq $0x1,%r14
	cmpq $0x144C,%r14
	jne L_398028
L_59566:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x143B,%r15
	je L_398004
L_59647:
	movq 0x0(%r14),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0xF4A,%r15
	je L_398003
L_59649:
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r10
	movq 0x10(%rsp),%r11
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r14
	movq 0x30(%rsp),%rsp
	movq %rsp,%r15
L_59584:
	movq $0x1E91,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r14,0x0(%rsp)
	movq %r13,0x8(%rsp)
	movq %r11,0x10(%rsp)
	movq %r10,0x18(%rsp)
	movq %r9,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %r15,0x30(%rsp)
	movq %rsp,0x0(%rbp)
	addq $0x40,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398003:
L_59648:
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r14
	movq 0x10(%rsp),%rsp
	movq %rsp,%r15
L_59582:
	movq $0x1E8F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x0(%rbp)
	addq $0x20,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398004:
L_59567:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x208A,%r14
	je L_398026
L_59594:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x8(%rbp)
	jne L_59596
L_59597:
	testq %rdx,%rdx
	jz L_398024
L_59598:
	cmpq $0x7FFFFFFF,%rdx
	ja L_398023
L_59599:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1561,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_59600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59600
.p2align 0x4
.long 0x4E0
L_59600:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_59601:
	movq $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_688:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398022
.p2align 0x4,,0x7
L_59602:
	movq 0x30(%rbp),%r14
	cmpq 0x20(%rbp),%r14
	jnl L_398007
L_59637:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movl 0x0(%r13,%r14,1),%ecx
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_398005
L_59642:
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_59640:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x28(%rbp),%r11
	movl %ecx,0x0(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq %r15,0x8(%r11,%r13,1)
	incq %r14
	movq %r14,0x30(%rbp)
	jmp loop_688
.p2align 0x4
L_398005:
L_59638:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D8,%r14
	je L_398006
L_59641:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_59640
.p2align 0x4
L_398006:
L_59639:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_59640
.p2align 0x4
L_398007:
L_59603:
	movq 0x28(%rbp),%r13
	movq $0xC4F,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_59596
L_59605:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_689:
	cmpl %ecx,%ebx
	je L_398019
L_59606:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_398018
L_59608:
	movq %r14,%r13
	salq $0x4,%r13
	salq $0x4,%r14
	movq 0x28(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	movl 0x0(%r11,%r13,1),%r14d
	testl %r14d,%r14d
	jz L_59610
L_59613:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xF46,%r14
	jne L_59614
L_59623:
	movq 0x0(%r10),%r14
	movq 0x8(%r14),%r13
L_59624:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_59614
L_59625:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF25,%r14
	jne L_59614
L_59626:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x2,%r14
	jne L_59614
L_59628:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r14
	jne L_398012
L_59630:
	testl %r13d,%r13d
	jnz L_398009
L_59610:
	incl %ebx
	jo L_398008
L_59612:
	jmp loop_689
.p2align 0x4
L_398008:
L_59611:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398009:
L_59614:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59615
L_59621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59622
.p2align 0x4
.long 0xD1D
L_59622:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_59615:
	cmpq $0x1,0x10(%rbp)
	je L_398010
L_59616:
L_59617:
	movq $0x1,%r15
L_59618:
	movq $0xD33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xD2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xD2F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xD31,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x1E97,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x10(%r10)
	movq %r13,0x18(%r10)
	movq %r11,0x20(%r10)
	movq %r14,0x28(%r10)
	addq $0x40,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r10)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%r10)
	movq %r10,0x8(%rbp)
L_59576:
	movq $0x2879,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_59577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_10
.p2align 0x4
L_398010:
L_59620:
	movq $0x2,%r15
	jmp L_59618
.p2align 0x4
L_398012:
L_59596:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398018:
L_59607:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398019:
L_59633:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59620
L_59635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59636
.p2align 0x4
.long 0xD1D
L_59636:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_59620
.p2align 0x4
L_398022:
L_59643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59644
.p2align 0x4
.long 0xD40
L_59644:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_59602
.p2align 0x4
L_398023:
L_59645:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398024:
L_59646:
	movq (globalObjptr+0x2320)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_59601
.p2align 0x4
L_398026:
L_59568:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_398027
L_59593:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
weakC_0:
	movq $0xD31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_59570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_398027:
L_59569:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	jmp weakC_0
.p2align 0x4
L_398028:
L_59565:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_59577:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59578
L_59585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_59586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59586
.p2align 0x4
.long 0x4E8
L_59586:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_59578:
	movq 0x18(%rbp),%rsp
	movq 0x0(%rsp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144C,%r14
	jne L_398031
L_59580:
	movl 0x0(%r15),%esi
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %esi,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%rsi
	movq %rsi,0x8(%r15)
	movq %rsp,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%rsi
	movb $0x1,0x0(%rsi,%r14,1)
	movq %r15,0x0(%rsp)
	movq 0x8(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0xF4A,%r15
	je L_398030
L_59583:
	movq 0x30(%rsp),%r15
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r10
	movq 0x10(%rsp),%r11
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r14
	jmp L_59584
.p2align 0x4
L_398030:
L_59581:
	movq 0x10(%rsp),%r15
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r14
	jmp L_59582
.p2align 0x4
L_398031:
L_59579:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65C
L_59570:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59571
L_59591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_59592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59592
.p2align 0x4
.long 0x63D
L_59592:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_59571:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF48,%r15
	je L_398034
	cmpq $0xF49,%r15
	je L_398033
L_59572:
	movq 0x10(%r14),%r15
L_59573:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movl 0x0(%r14),%r13d
	xorl 0x0(%r15),%r13d
	movl %r13d,0x30(%rbp)
	movq $0x1E49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	addq $0x28,%rbp
	leaq (L_59574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_398033:
L_59590:
	movq 0x0(%r14),%r15
	jmp L_59573
.p2align 0x4
L_398034:
L_59589:
	movq 0x30(%r14),%r15
	jmp L_59573
.p2align 0x4
.long 0x4DD
L_59574:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59575
L_59587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_59588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59588
.p2align 0x4
.long 0x4AF
L_59588:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_59575:
	movq $0x1E95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x8(%rbp)
	jmp L_59576
.text
.p2align 0x4
.globl lookup_2
.hidden lookup_2
lookup_2:
L_59655:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_59794
L_59656:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398104
L_59657:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq (globalObjptr+0xAE0)(%rip),%r15
	movq 0x0(%r15),%r11
	incq %r11
	jo L_398103
L_59659:
	movq %r11,0x0(%r15)
	movl 0x0(%r14),%r15d
	andl 0x8(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_59676
L_59660:
	movslq %r15d,%r14
	movq %r14,0x20(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_59662
L_59663:
	movq 0x0(%r13,%r14,8),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_59675
L_59664:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
.p2align 0x4,,0x7
L_59665:
	movq (globalObjptr+0xAE8)(%rip),%r15
	movq 0x0(%r15),%r14
	incq %r14
	jo L_398099
L_59667:
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x1,%r13
	je L_398094
	cmpq $0x2,%r13
	je L_398089
	cmpq $0x3,%r13
	je L_398086
	cmpq $0x5,%r13
	je L_398082
L_59668:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF24,%r13
	je L_398078
	cmpq $0xF25,%r13
	je L_398061
	cmpq $0xF26,%r13
	je L_398057
L_59669:
	movq 0x0(%r15),%r13
L_59670:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_59671
L_59713:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF23,%r15
	je L_398055
.p2align 0x4,,0x7
L_59671:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_398037
L_59672:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_59665
.p2align 0x4
L_398037:
L_59673:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59675
L_59711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59712
.p2align 0x4
.long 0xD1D
L_59712:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_59675:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x36B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq (globalObjptr+0x15D0)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_59676
L_59677:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq $0x28F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq 0x28(%rbp),%rdx
	movq %rdx,0x8(%r10)
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_59662
L_59679:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r14,8)
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_59681
L_59682:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_59676
L_59683:
	cmpl %r14d,%r10d
	jnl L_398049
L_59685:
	addl %r10d,%r10d
	jo L_59676
L_59686:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_398047
L_59687:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x365,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59688
.p2align 0x4
.long 0x65E
L_59688:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_690:
	cmpq 0x28(%rbp),%r15
	jnl L_398038
L_59709:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_690
.p2align 0x4
L_398038:
L_59689:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_398046
L_59691:
	cmpl $0x0,%r13d
	jl L_398045
L_59692:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_691:
	movl 0x48(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_398044
L_59694:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_59703
L_59695:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_59696:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398042
.p2align 0x4,,0x7
L_59697:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x20(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_398041
L_59698:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_398040
L_59700:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_398039
L_59701:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_59696
.p2align 0x4
L_398039:
L_59703:
	incl 0x48(%rbp)
	jmp loop_691
.p2align 0x4
L_398040:
L_59662:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398041:
L_59676:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398042:
L_59705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_59706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59706
.p2align 0x4
.long 0xD1C
L_59706:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_59697
.p2align 0x4
L_398044:
L_59693:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398045:
L_59708:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398046:
L_59681:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398047:
L_59710:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398049:
L_59684:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398055:
L_59714:
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_59715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_398057:
L_59756:
	movq 0x0(%r15),%r13
L_59757:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_59671
L_59758:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF26,%r15
	jne L_59671
L_59759:
	movq 0x0(%r14),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_59671
L_59718:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398061:
L_59725:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_59726:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_59671
L_59727:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_59671
L_59728:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpq $0x1,%r13
	je L_398074
	cmpq $0x2,%r13
	je L_398072
L_59730:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_59671
L_59731:
	movq 0x10(%r13),%r9
	cmpq %r9,0x10(%r15)
	jne L_59671
	movq %r10,%r14
	movq %r11,%r13
L_59734:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r15
	jne L_59681
L_59736:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r10,%r11
	jne L_59681
L_59738:
	cmpl %ebx,%ecx
	jne L_59671
L_59740:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_692:
	cmpl %ecx,%ebx
	je L_59718
L_59741:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_59662
L_59743:
	movq %r11,%r10
	movq %r11,%r9
	movq %r11,%r8
	salq $0x4,%r10
	salq $0x4,%r9
	movq 0x8(%r13,%r9,1),%rsp
	salq $0x4,%r8
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r9
	movl 0x0(%r14,%r8,1),%r11d
	cmpl %r11d,0x0(%r13,%r10,1)
	jne L_59671
L_59745:
	movq 0x10(%rsp),%r11
	cmpq %r11,0x10(%r9)
	jne L_59671
L_59747:
	incl %ebx
	jo L_59676
L_59748:
	jmp loop_692
.p2align 0x4
L_398072:
L_59753:
	cmpq $0x2,%r15
	je L_398073
L_59754:
	jmp L_59671
.p2align 0x4
L_398073:
	movq %r10,%r14
	movq %r11,%r13
	jmp L_59734
.p2align 0x4
L_398074:
L_59750:
	cmpq $0x1,%r15
	je L_398075
L_59751:
	jmp L_59671
.p2align 0x4
L_398075:
	movq %r10,%r14
	movq %r11,%r13
	jmp L_59734
.p2align 0x4
L_398078:
L_59719:
	movq 0x0(%r15),%r13
L_59720:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_59671
L_59721:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	jne L_59671
L_59722:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_59718
	jmp L_59671
.p2align 0x4
L_398082:
L_59786:
	shrq $0x3,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x5,%r15
	jne L_398084
L_59789:
	shrq $0x3,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_59718
	jmp L_59671
.p2align 0x4
L_398084:
L_59787:
	andq $0x3,%r14
	jnz L_59671
L_59788:
	jmp L_59671
.p2align 0x4
L_398086:
L_59782:
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x3,%r13
	je L_59718
L_59783:
	andq $0x3,%r14
	jnz L_59671
L_59784:
	jmp L_59671
.p2align 0x4
L_398089:
L_59772:
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_59718
L_59773:
	andq $0x3,%r14
	jnz L_59774
L_59780:
L_59774:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_398090
L_59775:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_59665
.p2align 0x4
L_398090:
L_59776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59675
L_59778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59779
.p2align 0x4
.long 0xD1D
L_59779:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_59675
.p2align 0x4
L_398094:
L_59762:
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x1,%r13
	je L_59718
L_59763:
	andq $0x3,%r14
	jnz L_59764
L_59770:
L_59764:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_398095
L_59765:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_59665
.p2align 0x4
L_398095:
L_59766:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59675
L_59768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59769
.p2align 0x4
.long 0xD1D
L_59769:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_59675
.p2align 0x4
L_398099:
L_59666:
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398103:
L_59658:
	movq (globalObjptr+0xAF8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398104:
L_59794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_59795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59795
.p2align 0x4
.long 0x65B
L_59795:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_59657
.p2align 0x4
.long 0xD41
L_59715:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	testl %r15d,%r15d
	jnz L_59718
	jmp L_59671
.text
.p2align 0x4
.globl get_52
.hidden get_52
get_52:
L_59796:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_59920
L_59797:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398151
L_59798:
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_59799
L_59800:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_398149
L_59801:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_59803:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_398148
L_59912:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA5,%r11
	jne L_398147
L_59913:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_398144
L_59804:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_59805
L_59806:
	cmpq $0x1,%r15
	je L_398107
L_59807:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_59803
.p2align 0x4
L_398107:
L_59808:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59809
L_59910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59911
.p2align 0x4
.long 0x811
L_59911:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_59809:
	movl 0x28(%rbp),%ecx
L_59810:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_59811
L_59812:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_59814
L_59909:
	movl %ecx,0x0(%r15)
L_59814:
	movq $0x2741,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x74B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_59817
	cmpq $0x2,%r15
	je L_398137
	cmpq $0x3,%r15
	je L_398135
	cmpq $0x5,%r15
	je L_59817
L_59815:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	je L_398128
	cmpq $0xF26,%r15
	je L_398108
L_59817:
	movq $0x194B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398108:
L_59858:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r9
	movq %r9,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_398127
L_59859:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_398126
L_59860:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x40(%rbp)
	movq %r11,%r15
	movq %r10,%r14
.p2align 0x4,,0x7
L_59862:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_398125
L_59890:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA5,%r11
	jne L_398124
L_59891:
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_398120
L_59863:
	movl 0x40(%rbp),%r11d
	incl %r11d
	movl %r11d,0x44(%rbp)
	jo L_398119
L_59864:
	cmpq $0x1,%r15
	je L_398109
L_59865:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x40(%rbp)
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_59862
.p2align 0x4
L_398109:
L_59866:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59867
L_59888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_59889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59889
.p2align 0x4
.long 0xBC7
L_59889:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_59867:
	movl 0x44(%rbp),%ecx
L_59868:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_398117
L_59869:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_59871
L_59887:
	movl %ecx,0x0(%r15)
L_59871:
	movq $0x2741,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x74B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x194B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_59872:
	movq 0x28(%rbp),%r13
	cmpq %r15,%r13
	je L_59817
L_59873:
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	cmpq $0x1,%r14
	je L_398112
L_59874:
	cmpq $0x1,%r15
	je L_59817
L_59875:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_398110
L_59876:
L_59877:
	movq $0x41BF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_59878:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_59817
.p2align 0x4
L_398110:
L_59879:
	movq $0x41BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp L_59878
.p2align 0x4
L_398112:
L_59881:
	cmpq $0x1,%r15
	je L_59817
L_59882:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_59817
L_59883:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_59853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_398117:
L_59811:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398119:
L_59805:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398120:
L_59893:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59894
L_59898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_59899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59899
.p2align 0x4
.long 0xD43
L_59899:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_59894:
	movl 0x40(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_59811
L_59895:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_398121
L_59896:
	movq 0x48(%rbp),%r15
	jmp L_59872
.p2align 0x4
L_398121:
L_59897:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_59872
.p2align 0x4
L_398124:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_59863
.p2align 0x4
L_398125:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_59863
.p2align 0x4
L_398126:
L_59900:
	xorl %ecx,%ecx
	jmp L_59868
.p2align 0x4
L_398127:
L_59799:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398128:
L_59819:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r15
	je L_398132
L_59820:
L_59821:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x30(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	je L_398129
L_59822:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398129:
L_59823:
	cmpl $0x0,0x30(%rbp)
	jl L_398131
L_59824:
	movl $0x0,0x34(%rbp)
loop_693:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_59817
L_59826:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_59827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_398131:
L_59850:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398132:
L_59851:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_59817
L_59852:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq $0x1,0x8(%r15)
	movl $0x0,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movb $0x13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_59853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_398135:
L_59905:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_59817
L_59906:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r15)
	movl $0x0,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movb $0x13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_59853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_398137:
L_59902:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_59817
L_59903:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r15)
	movl $0x0,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movb $0x13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_59853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
L_398144:
L_59915:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_59811
L_59916:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_398145
L_59918:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398145:
L_59917:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398147:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_59804
.p2align 0x4
L_398148:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_59804
.p2align 0x4
L_398149:
L_59919:
	xorl %ecx,%ecx
	jmp L_59810
.p2align 0x4
L_398151:
L_59920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_59921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59921
.p2align 0x4
.long 0x460
L_59921:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_59798
.p2align 0x4
.long 0x71E
L_59853:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59817
L_59855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_59856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59856
.p2align 0x4
.long 0x51D
L_59856:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_59817
.p2align 0x4
.long 0xD42
L_59827:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59828
L_59848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_59849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59849
.p2align 0x4
.long 0xA2C
L_59849:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_59828:
	movq 0x38(%rbp),%r15
	movq 0x28(%rbp),%r13
	cmpq %r13,%r15
	je L_59835
L_59829:
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	cmpq $0x1,%r14
	je L_398156
L_59830:
	cmpq $0x1,%r15
	je L_59835
L_59831:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_398154
L_59832:
L_59833:
	movq $0x41BF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_59834:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
L_59835:
	incl 0x34(%rbp)
	jmp loop_693
.p2align 0x4
L_398154:
L_59836:
	movq $0x41BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp L_59834
.p2align 0x4
L_398156:
L_59838:
	cmpq $0x1,%r15
	je L_59835
L_59839:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_59835
L_59840:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movb $0x13,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_59841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0xD42
L_59841:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59835
L_59843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59844
.p2align 0x4
.long 0xBC1
L_59844:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_59835
.text
.p2align 0x4
.globl x_1346
.hidden x_1346
x_1346:
L_59922:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_59952
L_59923:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398174
L_59924:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_398173
L_59926:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_398172
L_59927:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_59929:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_59930
L_59944:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4D,%r13
	jne L_59930
L_59945:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_398167
L_59930:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_398166
L_59932:
	cmpq $0x1,%r15
	je L_398162
L_59933:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_59929
.p2align 0x4
L_398162:
L_59934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59935
L_59942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_59943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59943
.p2align 0x4
.long 0x45F
L_59943:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_59935:
	movl 0x20(%rbp),%ecx
L_59936:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_398164
L_59938:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_59940
L_59941:
	movl %ecx,0x0(%r15)
L_59940:
	movq $0x1365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A9B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398164:
L_59937:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398166:
L_59931:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398167:
L_59947:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_59937
L_59948:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_398168
L_59950:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398168:
L_59949:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398172:
L_59951:
	xorl %ecx,%ecx
	jmp L_59936
.p2align 0x4
L_398173:
L_59925:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398174:
L_59952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_59953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59953
.p2align 0x4
.long 0x460
L_59953:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_59924
.text
.p2align 0x4
.globl x_1354
.hidden x_1354
x_1354:
loopS_4:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_61396
L_59954:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398224
L_59955:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EAC,%r15
	je L_398222
	cmpq $0x1EAD,%r15
	je L_398195
	cmpq $0x1EAE,%r15
	je L_398194
	cmpq $0x1EAF,%r15
	je L_398179
	cmpq $0x1EB0,%r15
	je L_398177
	cmpq $0x1EB1,%r15
	je L_398176
L_59956:
	movq 0x28(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_59957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_21
.p2align 0x4
L_398176:
L_60288:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r14),%r14
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq %r14,%r15
L_60289:
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_60290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
L_398177:
L_60239:
	movq 0x10(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_398178
L_60281:
	movq 0x58(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x50(%r13),%r11
	movq 0x48(%r13),%r10
	movq 0x40(%r13),%r9
	movq 0x38(%r13),%r8
	movq 0x30(%r13),%rsp
	movq 0x28(%r13),%rsi
	movq 0x20(%r13),%rdi
	movq 0x18(%r13),%rdx
	movq 0x10(%r13),%rcx
	movq 0x8(%r13),%rbx
	movq $0x8C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r8,0x28(%r13)
	movq %rsp,0x30(%r13)
	movq %rsi,0x38(%r13)
	movq %rdi,0x40(%r13)
	movq %rdx,0x48(%r13)
	movq %rcx,0x50(%r13)
	movq %rbx,0x58(%r13)
	addq $0x68,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_60282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_398178:
L_60240:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_60241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_398179:
L_60193:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_398193
L_60194:
	movq %r15,0x0(%r10)
	movq 0x0(%r9),%r10
	cmpq $0x1,%r10
	je L_398192
L_60195:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_60197:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_398191
L_60231:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_398190
L_60232:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_398187
L_60198:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_398186
L_60199:
	cmpq $0x1,%r15
	je L_398180
L_60200:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_60197
.p2align 0x4
L_398180:
L_60201:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60202
L_60229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_60230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60230
.p2align 0x4
.long 0x4E0
L_60230:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_60202:
	movl 0x20(%rbp),%ecx
L_60203:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_398184
L_60204:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_60206
L_60228:
	movl %ecx,0x0(%r15)
L_60206:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_60207:
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_398182
	cmpb $0x2,%r14b
	je L_398181
L_60208:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_60209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_398181:
L_60227:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398182:
L_60226:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398184:
L_60008:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398186:
L_60002:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398187:
L_60234:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_60008
L_60235:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_398188
L_60237:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_60207
.p2align 0x4
L_398188:
L_60236:
	movq %r11,%r15
	jmp L_60207
.p2align 0x4
L_398190:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_60198
.p2align 0x4
L_398191:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_60198
.p2align 0x4
L_398192:
L_60238:
	xorl %ecx,%ecx
	jmp L_60203
.p2align 0x4
L_398193:
L_59996:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398194:
L_60191:
	movq 0x30(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x20(%r14),%r11
	movq 0x18(%r14),%r10
	movq 0x10(%r14),%r9
	movq 0x8(%r14),%r8
	movq 0x0(%r14),%rsp
	movq $0x92F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r8,0x28(%r14)
	movq %rsp,0x30(%r14)
	movq %r14,0x10(%rbp)
	addq $0x40,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_60192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
L_398195:
L_60135:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_59996
L_60136:
	movq %r15,0x0(%r10)
	movq 0x0(%r9),%r10
	cmpq $0x1,%r10
	je L_398220
L_60137:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x20(%rbp)
	movq %r10,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_60139:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_398219
L_60180:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_398218
L_60181:
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_398214
L_60140:
	movl 0x20(%rbp),%r11d
	incl %r11d
	movl %r11d,0x24(%rbp)
	jo L_60002
L_60141:
	cmpq $0x1,%r15
	je L_398196
L_60142:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x20(%rbp)
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_60139
.p2align 0x4
L_398196:
L_60143:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60144
L_60178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_60179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60179
.p2align 0x4
.long 0x4E2
L_60179:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_60144:
	movl 0x24(%rbp),%ecx
L_60145:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_60008
L_60146:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_60148
L_60177:
	movl %ecx,0x0(%r15)
L_60148:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_60149:
	cmpb $0x2,0x0(%r15)
	je L_398209
L_60150:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_59996
L_60151:
	movq %r15,0x0(%r11)
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_398207
L_60152:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_60154:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_398206
L_60167:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_398205
L_60168:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_398202
L_60155:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_60002
L_60156:
	cmpq $0x1,%r15
	je L_398197
L_60157:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_60154
.p2align 0x4
L_398197:
L_60158:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60159
L_60165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_60166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60166
.p2align 0x4
.long 0x45F
L_60166:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_60159:
	movl 0x20(%rbp),%ecx
L_60160:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_60008
L_60161:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_60163
L_60164:
	movl %ecx,0x0(%r15)
L_60163:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398202:
L_60170:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_60008
L_60171:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_398203
L_60174:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_60173:
	movb $0x3,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398203:
L_60172:
	movq %r11,%r15
	jmp L_60173
.p2align 0x4
L_398205:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_60155
.p2align 0x4
L_398206:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_60155
.p2align 0x4
L_398207:
L_60175:
	xorl %ecx,%ecx
	jmp L_60160
.p2align 0x4
L_398209:
L_60176:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398214:
L_60183:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60184
L_60188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_60189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60189
.p2align 0x4
.long 0xBCD
L_60189:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_60184:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_60008
L_60185:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_398215
L_60186:
	movq 0x28(%rbp),%r15
	jmp L_60149
.p2align 0x4
L_398215:
L_60187:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_60149
.p2align 0x4
L_398218:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_60140
.p2align 0x4
L_398219:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_60140
.p2align 0x4
L_398220:
L_60190:
	xorl %ecx,%ecx
	jmp L_60145
.p2align 0x4
L_398222:
L_59989:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_398223
L_60128:
	movq 0x58(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x50(%r13),%r11
	movq 0x48(%r13),%r10
	movq 0x40(%r13),%r9
	movq 0x38(%r13),%r8
	movq 0x30(%r13),%rsp
	movq 0x28(%r13),%rsi
	movq 0x20(%r13),%rdi
	movq 0x18(%r13),%rdx
	movq 0x10(%r13),%rcx
	movq 0x8(%r13),%rbx
	movq $0x8C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r8,0x28(%r13)
	movq %rsp,0x30(%r13)
	movq %rsi,0x38(%r13)
	movq %rdi,0x40(%r13)
	movq %rdx,0x48(%r13)
	movq %rcx,0x50(%r13)
	movq %rbx,0x58(%r13)
	addq $0x68,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_60129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1362
.p2align 0x4
L_398223:
L_59990:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_59991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_398224:
L_61396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_61397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61397
.p2align 0x4
.long 0x460
L_61397:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_59955
.p2align 0x4
.long 0x73A
L_59957:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59958
L_59987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_59988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59988
.p2align 0x4
.long 0x647
L_59988:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_59958:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x10(%r15),%r11
	movq $0x264B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x10(%r15)
	movw 0x0(%r13),%r15w
	movw %r15w,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_59959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_0
.p2align 0x4
.long 0x65C
L_60290:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60291
L_61394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_61395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61395
.p2align 0x4
.long 0x63D
L_61395:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_60291:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_398282
L_60292:
	movq 0x10(%rbp),%r13
	movq 0x98(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x90(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x88(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x80(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x78(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x70(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x68(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x60(%r13),%r11
	movq %r11,0x58(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq 0x58(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x50(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x48(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq 0x20(%r15),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x90(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x98(%rbp)
	movq 0x20(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x28(%r10),%r9
	movq %r9,0xA8(%rbp)
	movq 0x30(%r10),%r8
	movq %r8,0xB0(%rbp)
	movl $0x1,0x0(%r14)
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jnz L_398227
L_61375:
	movq %r9,0xC0(%rbp)
	movq %r11,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_61376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_398227:
L_60293:
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je x_142
	cmpq $0x2,%r15
	je x_142
L_60294:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF68,%r14
	je L_398231
	cmpq $0xF69,%r14
	je L_398229
L_60295:
	movq 0x78(%rbp),%r14
	movq 0x48(%r14),%r13
	movslq 0x0(%r15),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_398228
L_60297:
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_60298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_398228:
L_60020:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398229:
L_61342:
	movq 0x78(%rbp),%r14
	movq 0x48(%r14),%r13
	movslq 0x0(%r15),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_60020
L_61344:
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_398231:
L_61222:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jz L_398233
L_61304:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movq 0x78(%rbp),%r14
	movq 0x48(%r14),%r13
	movslq %r15d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_60020
L_61306:
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_398233:
L_61224:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je x_1371
L_61225:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF65,%r14
	je L_398235
	cmpq $0xF66,%r14
	je L_398234
L_61226:
	movq 0x0(%r15),%r14
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
L_61227:
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
L_398234:
L_61302:
	movq 0x0(%r15),%r14
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_61227
.p2align 0x4
L_398235:
L_61301:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	jmp L_61227
.p2align 0x4
x_1371:
x_142:
	movq (globalObjptr+0x808)(%rip),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz length_56
L_60312:
	movq (globalObjptr+0xEDF8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
length_56:
length_3:
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_60025
L_60336:
	cmpl $0x0,%r13d
	jl L_398280
L_60337:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_698:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_398238
L_60997:
	movslq %r15d,%r14
	movq 0x98(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_398236
.p2align 0x4,,0x7
L_61019:
	incl 0x24(%rbp)
	jmp loop_698
.p2align 0x4
L_398236:
L_60998:
L_60999:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398237
L_61193:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398237:
L_61000:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398238:
L_60338:
	movq 0x10(%rbp),%r14
	movq 0xD8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xD0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0xC8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_398278
	cmpq $0x2,%r14
	je L_398276
L_60339:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF6B,%r13
	je L_398275
	cmpq $0xF6C,%r13
	je L_398274
	cmpq $0xF6D,%r13
	je L_398257
	cmpq $0xF6E,%r13
	je L_398251
L_60340:
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r10d
	movslq %r10d,%r9
	movq %r9,0x38(%rbp)
	cmpq %r14,%r9
	jne L_398250
L_60342:
	cmpl $0x2,%r10d
	jne L_60344
L_60446:
	cmpq $0x1,%r13
	jne L_60344
L_60448:
	cmpq $0x0,%r14
	jna L_60020
L_60450:
	movq 0x0(%r11),%r13
	movq 0x0(%r13),%r10
	movq 0x8(%r13),%r9
	cmpq $0x1,%r14
	jna L_60020
L_60452:
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r9),%r8
	movq 0x8(%r14),%r9
	movq 0x0(%r9),%rsp
	cmpq $0x1,%r8
	jne L_398245
L_60499:
	cmpq $0x3,%rsp
	jne L_398239
L_60501:
	movq %r10,0x28(%rbp)
	movq %r13,0x30(%rbp)
bool_0:
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_398239:
	movq %r8,%r15
	movq %r10,%r14
	movq %r13,%r11
	movq %rsp,%r13
L_60454:
	cmpq $0x3,%r15
	jne L_60344
L_60456:
	cmpq $0x1,%r13
	jne L_398240
L_60458:
	movq %r11,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp bool_0
.p2align 0x4
L_398240:
L_60344:
	movq 0x38(%rbp),%rdx
	testq %rdx,%rdx
	jz L_398243
L_60345:
	cmpq $0x7FFFFFFF,%rdx
	ja L_398242
L_60346:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1605,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60347
.p2align 0x4
.long 0xD4F
L_60347:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x18(%rbp)
L_60348:
	movq $0x0,0x40(%rbp)
loop_699:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_398241
L_60349:
	movq 0x18(%rbp),%r15
	movq $0x1755,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_398241:
L_60424:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_398242:
L_60074:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398243:
L_60445:
	movq (globalObjptr+0x5498)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_60348
.p2align 0x4
L_398245:
	movq %r8,%r15
	movq %r10,%r14
	movq %r13,%r11
	movq %rsp,%r13
	jmp L_60454
.p2align 0x4
L_398250:
L_60025:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398251:
L_60866:
	movq 0x20(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x40(%rbp)
L_60867:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_60868
L_60869:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10A9,%r14
	je L_398255
	cmpq $0x10B3,%r14
	je L_398254
	cmpq $0x10B5,%r14
	je L_398253
	cmpq $0x10BD,%r14
	je L_398252
L_60868:
	movq (globalObjptr+0x54B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398252:
L_60955:
	movq %r13,0x98(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_398253:
L_60954:
	movq %r13,0x98(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_398254:
L_60953:
	movq %r13,0x98(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_398255:
L_60870:
	movq %r13,0x98(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_398257:
L_60558:
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq %r10,0x30(%rbp)
	movl 0x8(%r13),%r14d
	movl %r14d,0x40(%rbp)
	movq 0x28(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r13),%r14
	movq %r14,0x60(%rbp)
	movl 0xC(%r13),%r14d
	movl %r14d,0x44(%rbp)
	movl 0x10(%r13),%r14d
	movl %r14d,0x68(%rbp)
	movl 0x14(%r13),%r14d
	movl %r14d,0x6C(%rbp)
	movq %r11,%r14
	andq $0x1,%r14
	jz L_398265
L_60777:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movq 0x78(%rbp),%r13
	movq 0x48(%r13),%r11
	movslq %r14d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_60020
L_60779:
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r14
	movq %r14,0x90(%rbp)
	movl %r14d,%r13d
	movl %r13d,0xA0(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_60025
L_60781:
	movl $0x0,0xA4(%rbp)
loop_704:
	movl 0xA4(%rbp),%r15d
	cmpl 0xA0(%rbp),%r15d
	je L_398259
L_60782:
	movslq %r15d,%r14
	cmpq 0x90(%rbp),%r14
	jnb L_60020
L_60784:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_60785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp usesStack_0
.p2align 0x4
L_398259:
L_60856:
	movl 0xA0(%rbp),%ecx
	decl %ecx
	jo L_60002
L_60857:
	movq $0x1,0x58(%rbp)
loop_706:
	cmpl $0x0,%ecx
	jl L_398260
L_60858:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x70(%rbp)
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fetchOperand_0
.p2align 0x4
L_398260:
L_60863:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_398261
L_60864:
	movq $0x1,0x28(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x30(%rbp)
L_60846:
	movq %r15,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_60847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp push_0
.p2align 0x4
L_398261:
L_60114:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398265:
L_60559:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_60025
L_60561:
	decl %ecx
	jo L_60002
L_60562:
	movq $0x1,0x38(%rbp)
loop_702:
	cmpl $0x0,%ecx
	jl L_398266
L_60563:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x58(%rbp)
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fetchOperand_0
.p2align 0x4
L_398266:
L_60568:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_398270
L_60569:
	movq $0x2,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
L_60570:
	movl 0x44(%rbp),%r15d
	testl %r15d,%r15d
	jz L_398268
L_60768:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398267
L_60771:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398267:
L_60769:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398268:
L_60572:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398269
L_60767:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398269:
L_60573:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398270:
L_60772:
	movq $0x2,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
L_60773:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398271
L_60776:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEEB0)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398271:
L_60774:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEEB0)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398274:
L_60503:
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r13,0xB8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_60504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
L_398275:
L_60502:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r13,%r15
	jmp L_60289
.p2align 0x4
L_398276:
L_60985:
	movq 0x80(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1EB4,%r11
	je L_398277
L_60996:
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq (globalObjptr+0xEEE0)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398277:
L_60986:
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq (globalObjptr+0xEEE0)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398278:
L_60973:
	movq 0x80(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1EB4,%r11
	je L_398279
L_60984:
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq (globalObjptr+0xEED8)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398279:
L_60974:
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq (globalObjptr+0xEED8)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398280:
L_60391:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398282:
L_61386:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_61387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x51F
L_60282:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60283
L_60286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_60287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60287
.p2align 0x4
.long 0x4AF
L_60287:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_60283:
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_398284
L_60284:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398284:
L_60245:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_59996
L_60246:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_398298
L_60247:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_60249:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_60250
L_60268:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD70,%r13
	jne L_60250
L_60269:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_398292
L_60250:
	movl 0x20(%rbp),%r13d
	incl %r13d
	movl %r13d,0x24(%rbp)
	jo L_60002
L_60251:
	cmpq $0x1,%r15
	je L_398285
L_60252:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x20(%rbp)
	jmp L_60249
.p2align 0x4
L_398285:
L_60253:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60254
L_60266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_60267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60267
.p2align 0x4
.long 0x4E2
L_60267:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_60254:
	movl 0x24(%rbp),%ecx
L_60255:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_60008
L_60256:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_60258
L_60265:
	movl %ecx,0x0(%r15)
L_60258:
	movq $0x1347,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xA47,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1349,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1AE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_60259:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_398287
L_60260:
	movq 0x8(%rbp),%r13
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	cmpq %r10,0x0(%r13)
	jne L_398286
L_60263:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398286:
	movq %r14,%r15
L_60262:
	movq 0x0(%r15),%r14
	movq $0x2637,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398287:
	movq %r14,%r15
	jmp L_60262
.p2align 0x4
L_398292:
L_60271:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60272
L_60276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_60277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60277
.p2align 0x4
.long 0xA2F
L_60277:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_60272:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_60008
L_60273:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_398293
L_60274:
	movq 0x28(%rbp),%r15
	jmp L_60259
.p2align 0x4
L_398293:
L_60275:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_60259
.p2align 0x4
L_398298:
L_60278:
	xorl %ecx,%ecx
	jmp L_60255
.p2align 0x4
.long 0x51F
L_60241:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60242
L_60279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_60280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60280
.p2align 0x4
.long 0x4AF
L_60280:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_60242:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10DC,%r13
	je L_60245
L_60243:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_60209:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_60192:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_60129:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60130
L_60133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_60134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60134
.p2align 0x4
.long 0x45C
L_60134:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_60130:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_398303
L_60131:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398303:
L_59995:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_59996
L_59997:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_398358
L_59998:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_60000:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_60001
L_60118:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD70,%r13
	jne L_60001
L_60119:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_398353
L_60001:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_60002
L_60003:
	cmpq $0x1,%r15
	je L_398304
L_60004:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_60000
.p2align 0x4
L_398304:
L_60005:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60006
L_60116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_60117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60117
.p2align 0x4
.long 0x814
L_60117:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_60006:
	movl 0x18(%rbp),%ecx
L_60007:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_60008
L_60009:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_60011
L_60115:
	movl %ecx,0x0(%r15)
L_60011:
	movq $0x1347,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xA47,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1349,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1AE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_60012:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	cmpq $0x1,%r11
	je L_60114
L_60013:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_398347
L_60014:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_60015:
	movq 0x20(%rbp),%r14
	movq 0x18(%r14),%r15
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq %r11,0x0(%r14)
	je L_60105
L_60016:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jz L_60023
L_60017:
	movq 0x0(%r13),%r14
	decl %r11d
	jo L_60002
L_60018:
	movslq %r11d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_60020
L_60021:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x10(%rbp),%r10
	cmpq %r10,0x10(%r11)
	je L_398340
L_60023:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x48(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_60025
L_60026:
	movq 0x30(%rbp),%r15
	subl 0x0(%r15),%r11d
	jo L_60002
L_60027:
	cmpl $0x1,%r11d
	jl L_398330
.p2align 0x4,,0x7
L_60029:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398329
.p2align 0x4,,0x7
L_60030:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movslq 0x0(%r15),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_60020
L_60032:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_60002
L_60033:
	movl %r14d,0x0(%r15)
	movq $0x2637,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_398305
L_60034:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_60015
.p2align 0x4
L_398305:
L_60035:
	movq 0x28(%rbp),%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
.p2align 0x4,,0x7
L_60036:
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je loop_695
L_60037:
	movq %r14,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_60038:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%rbp),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x0(%r13)
	je L_60077
L_60039:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movl 0x0(%r15),%r11d
	testl %r11d,%r11d
	jz L_398325
L_60040:
	movq 0x0(%r13),%r15
	decl %r11d
	jo L_60002
L_60041:
	movslq %r11d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_60020
L_60043:
	movq 0x0(%r15,%r13,8),%r11
	movq 0x10(%rbp),%r10
	cmpq %r10,0x10(%r11)
	jne L_398308
L_60077:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_398306
L_60078:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_60038
.p2align 0x4
L_398306:
L_60079:
	movq 0x28(%rbp),%r14
loop_695:
	cmpq $0x1,%r14
	je L_398307
L_60080:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_60036
.p2align 0x4
L_398307:
L_60082:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398308:
	movq %r14,%r15
L_60045:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x48(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_60025
L_60047:
	movq 0x30(%rbp),%r15
	subl 0x0(%r15),%r11d
	jo L_60002
L_60048:
	cmpl $0x1,%r11d
	jl L_398313
.p2align 0x4,,0x7
L_60050:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398312
.p2align 0x4,,0x7
L_60051:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movslq 0x0(%r15),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_60020
L_60053:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_60002
L_60054:
	movl %r14d,0x0(%r15)
	movq $0x2637,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_398309
L_60055:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_60038
.p2align 0x4
L_398309:
L_60056:
	movq 0x28(%rbp),%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_60036
.p2align 0x4
L_398312:
L_60057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_60058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60058
.p2align 0x4
.long 0x658
L_60058:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_60051
.p2align 0x4
L_398313:
L_60059:
	movl 0x48(%rbp),%r15d
	addl %r15d,%r15d
	jo L_60002
L_60060:
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%ecx
	incl %ecx
	jo L_60002
L_60061:
	cmpl %ecx,%r15d
	jnl L_398318
L_60075:
L_60063:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_60074
L_60064:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x97B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_60065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60065
.p2align 0x4
.long 0xD48
L_60065:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_694:
	cmpq 0x58(%rbp),%r15
	jnl L_398316
L_60067:
	movl %r15d,%r11d
	cmpl 0x48(%rbp),%r11d
	jnl L_398315
L_60070:
	movslq %r11d,%r13
	movq 0x50(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_60020
L_60072:
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,%r13
L_60069:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_694
.p2align 0x4
L_398315:
L_60068:
	movq 0x40(%rbp),%r13
	jmp L_60069
.p2align 0x4
L_398316:
L_60066:
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_60050
.p2align 0x4
L_398318:
	movl %r15d,%ecx
	jmp L_60063
.p2align 0x4
L_398325:
	movq %r14,%r15
	jmp L_60045
.p2align 0x4
L_398329:
L_60086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_60087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60087
.p2align 0x4
.long 0x658
L_60087:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_60030
.p2align 0x4
L_398330:
L_60088:
	movl 0x48(%rbp),%r15d
	addl %r15d,%r15d
	jo L_60002
L_60089:
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%ecx
	incl %ecx
	jo L_60002
L_60090:
	cmpl %ecx,%r15d
	jnl L_398335
L_60103:
L_60092:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_60074
L_60093:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x97B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_60094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60094
.p2align 0x4
.long 0xD48
L_60094:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_696:
	cmpq 0x58(%rbp),%r15
	jnl L_398333
L_60096:
	movl %r15d,%r11d
	cmpl 0x48(%rbp),%r11d
	jnl L_398332
L_60099:
	movslq %r11d,%r13
	movq 0x50(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_60020
L_60101:
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,%r13
L_60098:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_696
.p2align 0x4
L_398332:
L_60097:
	movq 0x40(%rbp),%r13
	jmp L_60098
.p2align 0x4
L_398333:
L_60095:
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_60029
.p2align 0x4
L_398335:
	movl %r15d,%ecx
	jmp L_60092
.p2align 0x4
L_398340:
L_60105:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_398341
L_60106:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_60015
.p2align 0x4
L_398341:
L_60107:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_60082
L_60108:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	xchgq %r11,%r15
	jmp L_60036
.p2align 0x4
L_398347:
L_60112:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398353:
L_60121:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_60008
L_60122:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_398354
L_60124:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_60012
.p2align 0x4
L_398354:
L_60123:
	movq %r13,%r15
	jmp L_60012
.p2align 0x4
L_398358:
L_60125:
	xorl %ecx,%ecx
	jmp L_60007
.p2align 0x4
.long 0x5B0
L_59991:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59992
L_60126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_60127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60127
.p2align 0x4
.long 0x45C
L_60127:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_59992:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10DC,%r13
	je L_59995
L_59993:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD44
L_59959:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59960
L_59985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_59986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59986
.p2align 0x4
.long 0xD47
L_59986:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_59960:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_398363
L_59974:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x264B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x10(%r15)
	movw 0x0(%r14),%r15w
	movw %r15w,0x50(%rbp)
	movq %r13,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_59975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_0
.p2align 0x4
L_398363:
L_59962:
	xorl %ecx,%ecx
L_59963:
	movq 0x10(%rbp),%r15
	movq 0x58(%r15),%r14
	movq 0x50(%r15),%r13
	movq 0x48(%r15),%r11
	movq 0x40(%r15),%r10
	movq 0x38(%r15),%r9
	movq 0x30(%r15),%r8
	movq 0x28(%r15),%rsp
	movq 0x20(%r15),%rsi
	movq 0x18(%r15),%rdi
	movq 0x10(%r15),%rdx
	movq 0x8(%r15),%rbx
	movq 0x0(%r15),%rax
	testl %ecx,%ecx
	jnz L_398364
L_59964:
	movq %rax,0x18(%rbp)
	movq $0x30FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	movq %rsi,0x38(%r15)
	movq %rdi,0x40(%r15)
	movq %rdx,0x48(%r15)
	movq %rbx,0x50(%r15)
	movq %r15,0x8(%rbp)
	addq $0x60,%r12
	movb $0x3,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_59965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_398364:
L_59972:
	movq 0x8(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_59973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_21
.p2align 0x4
.long 0xDB7
L_61376:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398366
L_61385:
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_61378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398366:
L_61377:
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_61378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD49
L_60298:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xD49
L_61345:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xDB5
L_61307:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xD4B
L_61228:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
.long 0xD4A
L_60313:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60314
L_61205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61206
.p2align 0x4
.long 0xDAF
L_61206:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_60314:
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_60025
L_60316:
	movl %r13d,0xC0(%rbp)
	movq $0x3B25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xD9B
L_61001:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61003
L_61191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61192
.p2align 0x4
.long 0xD9C
L_61192:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61003:
	movq 0x38(%rbp),%r15
	andq $0x3,%r15
	jz L_398369
L_61004:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_398369:
L_61005:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF62,%r14
	je L_398371
	cmpq $0xF63,%r14
	je L_398370
L_61006:
	movl 0x0(%r15),%r14d
	movl %r14d,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_398370:
L_61150:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq %r13,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_398371:
L_61027:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r14
	je L_398372
L_61028:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_398372:
L_61118:
L_61119:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61120
L_61148:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C1,%r14
	jne L_398373
L_61149:
	movq 0x8(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x50D8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEEF0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xAFD8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEEF8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398373:
L_61120:
	movq 0x60(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
.long 0xD56
L_60459:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
.long 0xD50
L_60350:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	movq %r14,0x30(%rbp)
	jne L_60025
L_60352:
	cmpl $0x0,%r15d
	je L_398390
	cmpl $0x1,%r15d
	je L_398386
L_60353:
	cmpq $0x1,0x28(%rbp)
	jne L_398384
L_60397:
	decl %r15d
	jo L_60002
L_60398:
	movslq %r15d,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_398382
L_60399:
	cmpq $0x7FFFFFFF,%rdx
	ja L_60074
L_60400:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1605,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60401
.p2align 0x4
.long 0xD58
L_60401:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,%r15
L_60402:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_701:
	cmpq 0x28(%rbp),%r14
	jnl L_398378
L_60408:
	movl %r14d,%r13d
	incl %r13d
	jo L_60002
L_60409:
	movslq %r13d,%r11
	cmpq 0x30(%rbp),%r11
	jnb L_60020
L_60411:
	movq %r11,%r13
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x18(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_701
.p2align 0x4
L_398378:
L_60403:
	movq $0x1755,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x0,0x30(%rbp)
	jna L_60020
L_60405:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1EB4,%r11
	je L_398379
L_60407:
	movq %r13,0x18(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
L_60395:
	movq %r15,0xA0(%rbp)
	movq (globalObjptr+0xEE08)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398379:
L_60406:
	movq %r13,0x18(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
L_60356:
	movq %r15,0xA0(%rbp)
	movq (globalObjptr+0xEE08)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398382:
L_60413:
	movq (globalObjptr+0x54A0)(%rip),%r15
	jmp L_60402
.p2align 0x4
L_398384:
L_60354:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EB4,%r15
	je L_398385
L_60394:
	movq 0x0(%r14),%r15
	movq 0x28(%rbp),%r14
	movq 0x18(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_60395
.p2align 0x4
L_398385:
L_60355:
	movq 0x0(%r14),%r15
	movq 0x28(%rbp),%r14
	movq 0x18(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_60356
.p2align 0x4
L_398386:
L_60417:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_398388
L_60418:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398387
L_60420:
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x18(%rbp)
	movq %r13,%r15
	jmp L_60395
.p2align 0x4
L_398387:
L_60419:
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x18(%rbp)
	movq %r13,%r15
	jmp L_60356
.p2align 0x4
L_398388:
L_60421:
	cmpq $0x0,0x30(%rbp)
	jna L_60020
L_60423:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_60289
.p2align 0x4
L_398390:
L_60414:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_398391
L_60415:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r15
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_60289
.p2align 0x4
L_398391:
L_60416:
	movq (globalObjptr+0x54A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD59
L_60425:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpl $0x8,%r15d
	je L_398396
	cmpl $0x10,%r15d
	je L_398395
	cmpl $0x20,%r15d
	je L_398394
	cmpl $0x40,%r15d
	je L_398393
L_60426:
	movq (globalObjptr+0x1710)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398393:
L_60439:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_398394:
L_60434:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_398395:
L_60433:
	movq (globalObjptr+0xEE40)(%rip),%r14
	movq %r14,0x60(%rbp)
simple_13:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_398396:
L_60427:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq %r14,0x60(%rbp)
	jmp simple_13
.p2align 0x4
.long 0xD8C
L_60956:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60957
L_60971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60972
.p2align 0x4
.long 0xD9A
L_60972:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60957:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	cmpq $0x0,%r13
	jna L_60020
L_60959:
	movq 0x0(%r14),%r15
L_60960:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_398401
L_60969:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF58,%r14
	jne L_398397
L_60970:
	movq (globalObjptr+0xEED0)(%rip),%r15
L_60966:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398397:
	movq %r13,%r15
L_60961:
	cmpq $0x1,%r15
	jna L_60020
L_60963:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
L_60964:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_60965
L_60967:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF58,%r14
	jne L_398398
L_60968:
	movq (globalObjptr+0xEEC8)(%rip),%r15
	jmp L_60966
.p2align 0x4
L_398398:
L_60965:
	movq (globalObjptr+0xA058)(%rip),%r15
	jmp L_60966
.p2align 0x4
L_398401:
	movq %r13,%r15
	jmp L_60961
.p2align 0x4
.long 0xD8C
L_60882:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
.long 0xD8C
L_60871:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60872
L_60951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60952
.p2align 0x4
.long 0xD9A
L_60952:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60872:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	cmpq $0x0,%r13
	jna L_60020
L_60874:
	movq 0x0(%r14),%r15
L_60875:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_398408
L_60949:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF58,%r14
	jne L_398404
L_60950:
	movq (globalObjptr+0xEED0)(%rip),%r15
L_60881:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398404:
	movq %r13,%r15
L_60876:
	cmpq $0x1,%r15
	jna L_60020
L_60878:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
L_60879:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_60880
L_60947:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF58,%r14
	jne L_398405
L_60948:
	movq (globalObjptr+0xEEC8)(%rip),%r15
	jmp L_60881
.p2align 0x4
L_398405:
L_60880:
	movq (globalObjptr+0xA058)(%rip),%r15
	jmp L_60881
.p2align 0x4
L_398408:
	movq %r13,%r15
	jmp L_60876
.p2align 0x4
.long 0xD80
L_60785:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	testl %r15d,%r15d
	jnz L_398412
L_60786:
	movl 0xA4(%rbp),%r15d
	incl %r15d
	jo L_60002
L_60787:
	movl %r15d,0xA4(%rbp)
	jmp loop_704
.p2align 0x4
L_398412:
L_60788:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398413
L_60855:
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq (globalObjptr+0xEEB8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_60790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398413:
L_60789:
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq (globalObjptr+0xEEB8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_60790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD8A
L_60859:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60860
L_60861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_60862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60862
.p2align 0x4
.long 0xD8B
L_60862:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_60860:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movl 0x70(%rbp),%ecx
	jmp loop_706
.p2align 0x4
.long 0xD73
L_60847:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq $0x1,0x28(%rbp)
	je L_398416
L_60848:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_60773
	jmp L_60570
.p2align 0x4
L_398416:
L_60851:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_398417
L_60852:
	movq $0x1,0x28(%rbp)
	jmp L_60570
.p2align 0x4
L_398417:
L_60853:
	movq $0x1,0x28(%rbp)
	jmp L_60773
.p2align 0x4
.long 0xD71
L_60564:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60565
L_60566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60567
.p2align 0x4
.long 0xD72
L_60567:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60565:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movl 0x58(%rbp),%ecx
	jmp loop_702
.p2align 0x4
.long 0xD73
L_60770:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60572
.p2align 0x4
.long 0xD73
L_60574:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60575
L_60765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60766
.p2align 0x4
.long 0xD7F
L_60766:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60575:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_398426
L_60576:
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_60759
	cmpq $0x5,%r15
	je L_398424
	cmpq $0x6,%r15
	je L_398422
L_60577:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_60578
L_60755:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_398420
	cmpq $0xF54,%r15
	je L_398419
L_60578:
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_398419:
L_60757:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_60590:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEE60)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398420:
L_60756:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_60590
.p2align 0x4
L_398422:
L_60761:
	shrq $0x3,%r14
	movb %r14b,%r13b
	testb %r13b,%r13b
	jnz L_398423
L_60762:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_60590
.p2align 0x4
L_398423:
L_60763:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_60590
.p2align 0x4
L_398424:
L_60759:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_60590
.p2align 0x4
L_398426:
L_60597:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_398428
L_60598:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398427
L_60652:
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398427:
L_60599:
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398428:
L_60654:
	movq 0x30(%rbp),%r14
	andq $0x3,%r14
	jz L_398429
L_60655:
	movq (globalObjptr+0x5490)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398429:
L_60656:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x50D8)(%rip),%r13
	movq %r13,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r14
	movb 0x21(%r14),%r13b
	movq 0x38(%r14),%r11
	movw 0x0(%r11),%r10w
	movw %r10w,0x44(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	cmpb $0x1,%r13b
	je L_398431
L_60657:
	testb %r13b,%r13b
	jnz L_398430
L_60658:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_60659:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE90)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEE88)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398430:
L_60741:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_60659
.p2align 0x4
L_398431:
L_60742:
	movw 0x44(%rbp),%r15w
	andw $0x1,%r15w
	jnz L_398449
L_60743:
	movq (globalObjptr+0xEE90)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x30(%rbp)
L_60662:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_60025
L_60664:
	decl %r13d
	jo L_60002
L_60665:
	movl %r13d,0x44(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
loop_703:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398446
.p2align 0x4,,0x7
L_60666:
	movl 0x44(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_398444
L_60667:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movq 0x50(%rbp),%r15
	movzbq 0x0(%r15,%r13,1),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_398432
	jmp *jumpTable_135(,%rax,8)
.data
.p2align 0x4
jumpTable_135:
.quad L_398443,L_398442,L_398441,L_398440,L_398439,L_398438,L_398437,L_398436,L_398435,L_398434,L_398433
.text
.p2align 0x4
L_398432:
L_60668:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movl %r14d,%ecx
L_60669:
	movl %ecx,0x44(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	jmp loop_703
.p2align 0x4
L_398433:
L_60680:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398434:
L_60679:
	movq (globalObjptr+0xDFD0)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398435:
L_60678:
	movq (globalObjptr+0xDFC8)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398436:
L_60677:
	movq (globalObjptr+0xDFC0)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398437:
L_60676:
	movq (globalObjptr+0xDFB8)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398438:
L_60675:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398439:
L_60674:
	movq (globalObjptr+0xD080)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398440:
L_60673:
	movq (globalObjptr+0xD088)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398441:
L_60672:
	movq (globalObjptr+0xCE30)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398442:
L_60671:
	movq (globalObjptr+0xDFB0)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398443:
L_60670:
	movq (globalObjptr+0xD0F0)(%rip),%r15
	movl %r14d,%ecx
	jmp L_60669
.p2align 0x4
L_398444:
L_60681:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_398445
L_60682:
	movq 0x8(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_398445:
L_60725:
	movq $0x1,%r13
	movq %r13,%r15
L_60685:
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398446:
L_60726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60727
.p2align 0x4
.long 0xD7C
L_60727:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60666
.p2align 0x4
L_398449:
L_60744:
	movw 0x44(%rbp),%r14w
	shrw $0x1,%r14w
	movb %r14b,%dl
	movq (globalObjptr+0xA188)(%rip),%r15
toString_54:
	movzbq %dl,%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_398450
	jmp *jumpTable_136(,%rax,8)
.data
.p2align 0x4
jumpTable_136:
.quad L_398461,L_398460,L_398459,L_398458,L_398457,L_398456,L_398455,L_398454,L_398453,L_398452,L_398451
.text
.p2align 0x4
L_398450:
L_60729:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398451:
L_60740:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398452:
L_60739:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFD0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398453:
L_60738:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFC8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398454:
L_60737:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFC0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398455:
L_60736:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFB8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398456:
L_60735:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398457:
L_60734:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398458:
L_60733:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398459:
L_60732:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xCE30)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398460:
L_60731:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFB0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398461:
L_60730:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xD0F0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
.long 0xD73
L_60775:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60570
.p2align 0x4
.long 0xD64
L_60504:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_398463
L_60505:
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp push_0
.p2align 0x4
L_398463:
L_60507:
	movq 0xA8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
.long 0xD53
L_60987:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398464
L_60995:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398464:
L_60988:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD53
L_60975:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398465
L_60983:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398465:
L_60976:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x522
L_61387:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61388
L_61392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_61393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61393
.p2align 0x4
.long 0x4E9
L_61393:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_61388:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEF00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_61389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
toString_52:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0xD45
L_59975:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59976
L_59983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_59984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59984
.p2align 0x4
.long 0xD46
L_59984:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_59976:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_59962
L_59978:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r15
	movq $0x2649,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_59979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_1
.p2align 0x4
.long 0x1
L_59965:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59966
L_59970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_59971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59971
.p2align 0x4
.long 0x0
L_59971:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_59966:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xEDD8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEDE0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_95+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x522
L_59973:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp visitInfo_0
.p2align 0x4
.long 0xDB7
L_61378:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398470
L_61384:
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq (globalObjptr+0xEE28)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_61380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398470:
L_61379:
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq (globalObjptr+0xEE28)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_61380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD49
L_60299:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x0,%r15d
	jl L_398471
L_60300:
	movl %r15d,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_60301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_398471:
L_61216:
	negl %r15d
	jo L_60002
L_61217:
	movl %r15d,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0xD49
L_61346:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x0,%r15d
	jl L_398473
L_61347:
	movl %r15d,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_398473:
L_61367:
	negl %r15d
	jo L_60002
L_61368:
	movl %r15d,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0xDB5
L_61308:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	cmpl $0x0,%r15d
	jl L_398475
L_61309:
	movl %r15d,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_398475:
L_61336:
	negl %r15d
	jo L_60002
L_61337:
	movl %r15d,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0xDB0
L_61229:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61231
L_61299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61300
.p2align 0x4
.long 0xDB4
L_61300:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61231:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61232
L_61273:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_398499
	cmpq $0xF5B,%r14
	je L_398498
	cmpq $0xF5E,%r14
	je L_398497
	cmpq $0xF5F,%r14
	je L_398486
	cmpq $0xF60,%r14
	je L_398485
L_61232:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61233
L_61271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61272
.p2align 0x4
.long 0xDA8
L_61272:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61233:
	movl $0x0,0x20(%rbp)
L_61234:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_61266
	cmpq $0x5,%r15
	je L_398482
	cmpq $0x6,%r15
	je L_398480
L_61235:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_61236
L_61262:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_398478
	cmpq $0xF54,%r15
	je L_398477
L_61236:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_398477:
L_61264:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_61248:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEE60)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398478:
L_61263:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_61248
.p2align 0x4
L_398480:
L_61268:
	shrq $0x3,%r14
	movb %r14b,%r13b
	testb %r13b,%r13b
	jnz L_398481
L_61269:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_61248
.p2align 0x4
L_398481:
L_61270:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_61248
.p2align 0x4
L_398482:
L_61266:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_61248
.p2align 0x4
L_398485:
L_61298:
	movl $0x1,0x20(%rbp)
	jmp L_61234
.p2align 0x4
L_398486:
L_61277:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_61279:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61232
L_61280:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_398494
	cmpq $0xF5B,%r14
	je L_398492
	cmpq $0xF5E,%r14
	je L_398490
	cmpq $0xF5F,%r14
	je L_398489
	cmpq $0xF60,%r14
	je L_398487
	jmp L_61232
.p2align 0x4
L_398487:
L_61294:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61295
L_61296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61297
.p2align 0x4
.long 0xDA8
L_61297:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61295:
	movl $0x1,0x20(%rbp)
	jmp L_61234
.p2align 0x4
L_398489:
L_61293:
	movq 0x0(%r15),%r15
	jmp L_61279
.p2align 0x4
L_398490:
L_61289:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61290
L_61291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61292
.p2align 0x4
.long 0xDA8
L_61292:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61290:
	movl $0x1,0x20(%rbp)
	jmp L_61234
.p2align 0x4
L_398492:
L_61285:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61286
L_61287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61288
.p2align 0x4
.long 0xDA8
L_61288:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61286:
	movl $0x1,0x20(%rbp)
	jmp L_61234
.p2align 0x4
L_398494:
L_61281:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61282
L_61283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61284
.p2align 0x4
.long 0xDA8
L_61284:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61282:
	movl $0x1,0x20(%rbp)
	jmp L_61234
.p2align 0x4
L_398497:
L_61276:
	movl $0x1,0x20(%rbp)
	jmp L_61234
.p2align 0x4
L_398498:
L_61275:
	movl $0x1,0x20(%rbp)
	jmp L_61234
.p2align 0x4
L_398499:
L_61274:
	movl $0x1,0x20(%rbp)
	jmp L_61234
.p2align 0x4
.long 0xD4C
L_60317:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (L_60318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xD4E
L_61007:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61008
L_61025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61026
.p2align 0x4
.long 0xD9C
L_61026:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61008:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xDAC
L_61151:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
L_61152:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61153
L_61177:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_398513
	cmpq $0xF5B,%r14
	je L_398512
	cmpq $0xF5E,%r14
	je L_398511
	cmpq $0xF5F,%r14
	je L_398504
	cmpq $0xF60,%r14
	je L_398503
L_61153:
	movl $0x0,0x70(%rbp)
L_61154:
	movq 0x60(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_398503:
L_61190:
	movl $0x1,0x70(%rbp)
	jmp L_61154
.p2align 0x4
L_398504:
L_61181:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_61183:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61153
L_61184:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_398509
	cmpq $0xF5B,%r14
	je L_398508
	cmpq $0xF5E,%r14
	je L_398507
	cmpq $0xF5F,%r14
	je L_398506
	cmpq $0xF60,%r14
	je L_398505
	jmp L_61153
.p2align 0x4
L_398505:
L_61189:
	movl $0x1,0x70(%rbp)
	jmp L_61154
.p2align 0x4
L_398506:
L_61188:
	movq 0x0(%r15),%r15
	jmp L_61183
.p2align 0x4
L_398507:
L_61187:
	movl $0x1,0x70(%rbp)
	jmp L_61154
.p2align 0x4
L_398508:
L_61186:
	movl $0x1,0x70(%rbp)
	jmp L_61154
.p2align 0x4
L_398509:
L_61185:
	movl $0x1,0x70(%rbp)
	jmp L_61154
.p2align 0x4
L_398511:
L_61180:
	movl $0x1,0x70(%rbp)
	jmp L_61154
.p2align 0x4
L_398512:
L_61179:
	movl $0x1,0x70(%rbp)
	jmp L_61154
.p2align 0x4
L_398513:
L_61178:
	movl $0x1,0x70(%rbp)
	jmp L_61154
.p2align 0x4
.long 0xD9D
L_61029:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61031
L_61116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61117
.p2align 0x4
.long 0xDA5
L_61117:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61031:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61032
L_61070:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_61072
	cmpq $0xF5B,%r14
	je L_61078
	cmpq $0xF5E,%r14
	je L_61084
	cmpq $0xF5F,%r14
	je L_398521
	cmpq $0xF60,%r14
	je L_398518
L_61032:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61033
L_61068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61069
.p2align 0x4
.long 0xDA5
L_61069:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61033:
L_61034:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_61035
L_61064:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C1,%r15
	jne L_398515
L_61065:
	movq 0x8(%r14),%r15
	movl $0x0,0x60(%rbp)
L_61066:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x50D8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEEF0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEEF8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398515:
L_61035:
	movl $0x0,0xA0(%rbp)
L_61036:
	movq 0x60(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_398518:
L_61108:
L_61109:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_61110
L_61111:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C1,%r15
	jne L_398519
L_61112:
	movq 0x8(%r14),%r15
	movl $0x1,0x60(%rbp)
	jmp L_61066
.p2align 0x4
L_398519:
L_61110:
	movl $0x1,0xA0(%rbp)
	jmp L_61036
.p2align 0x4
L_398521:
L_61089:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_61091:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61032
L_61092:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_398533
	cmpq $0xF5B,%r14
	je L_398529
	cmpq $0xF5E,%r14
	je L_398525
	cmpq $0xF5F,%r14
	je L_398524
	cmpq $0xF60,%r14
	je L_398522
	jmp L_61032
.p2align 0x4
L_398522:
L_61106:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61108
L_61113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61114
.p2align 0x4
.long 0xDA5
L_61114:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_61108
.p2align 0x4
L_398524:
L_61105:
	movq 0x0(%r15),%r15
	jmp L_61091
.p2align 0x4
L_398525:
L_61101:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61084
L_61103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61104
.p2align 0x4
.long 0xDA5
L_61104:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61084:
L_61085:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_61086
L_61087:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C1,%r15
	jne L_398526
L_61088:
	movq 0x8(%r14),%r15
	movl $0x1,0x60(%rbp)
	jmp L_61066
.p2align 0x4
L_398526:
L_61086:
	movl $0x1,0xA0(%rbp)
	jmp L_61036
.p2align 0x4
L_398529:
L_61097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61078
L_61099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61100
.p2align 0x4
.long 0xDA5
L_61100:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61078:
L_61079:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_61080
L_61081:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C1,%r15
	jne L_398530
L_61082:
	movq 0x8(%r14),%r15
	movl $0x1,0x60(%rbp)
	jmp L_61066
.p2align 0x4
L_398530:
L_61080:
	movl $0x1,0xA0(%rbp)
	jmp L_61036
.p2align 0x4
L_398533:
L_61093:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61072
L_61095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61096
.p2align 0x4
.long 0xDA5
L_61096:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61072:
L_61073:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_61074
L_61075:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C1,%r15
	jne L_398534
L_61076:
	movq 0x8(%r14),%r15
	movl $0x1,0x60(%rbp)
	jmp L_61066
.p2align 0x4
L_398534:
L_61074:
	movl $0x1,0xA0(%rbp)
	jmp L_61036
.p2align 0x4
.long 0xD4E
L_61137:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398543
L_61142:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398543:
L_61138:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xDA7
L_61121:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_60025
L_61123:
	decl %ecx
	jo L_60002
L_61124:
	movq $0x1,0x60(%rbp)
loop_710:
	cmpl $0x0,%ecx
	jl L_398544
L_61125:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x70(%rbp)
	movslq %ecx,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fetchOperand_0
.p2align 0x4
L_398544:
L_61130:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_398545
L_61131:
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_398545:
L_61147:
	movq $0x1,%r14
	xchgq %r14,%r15
L_61134:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD5E
L_60460:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movb $0x0,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xD51
L_60396:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60358:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398548
L_60393:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398548:
L_60359:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD51
L_60357:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60358
.p2align 0x4
.long 0xD5B
L_60440:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60441
L_60442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60443
.p2align 0x4
.long 0xD5D
L_60443:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60441:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5338)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD5B
L_60435:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60436
L_60437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60438
.p2align 0x4
.long 0xD5D
L_60438:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60436:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD5A
L_60428:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60429
L_60431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60432
.p2align 0x4
.long 0xD5C
L_60432:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60429:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEE30)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEE38)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD8D
L_60883:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movb $0x0,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398552
L_60946:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398552:
L_60884:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD80
L_60790:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xA0(%rbp),%ecx
	decl %ecx
	jo L_60002
L_60791:
	movl $0x0,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
loop_705:
	cmpl $0x0,%ecx
	jl L_398553
L_60792:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x94(%rbp)
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq %r13,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp usesStack_0
.p2align 0x4
L_398553:
L_60844:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_60114
L_60845:
	movq 0x80(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_60846
.p2align 0x4
.long 0xD74
L_60579:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60580
L_60753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60754
.p2align 0x4
.long 0xD7B
L_60754:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60580:
	movl 0x44(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_398559
	cmpl $0x10,%r15d
	je L_398558
	cmpl $0x20,%r15d
	je L_398557
	cmpl $0x40,%r15d
	je L_398556
L_60581:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_60582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_398556:
L_60752:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_60590
.p2align 0x4
L_398557:
L_60751:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_60590
.p2align 0x4
L_398558:
L_60750:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_60590
.p2align 0x4
L_398559:
L_60589:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_60590
.p2align 0x4
.long 0xD75
L_60591:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60592
L_60748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60749
.p2align 0x4
.long 0xD7E
L_60749:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60592:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD56
L_60600:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398562
L_60651:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398562:
L_60601:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD76
L_60660:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movw 0x44(%rbp),%r14w
	andw $0x1,%r14w
	jnz L_398563
L_60661:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xEE90)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_60662
.p2align 0x4
L_398563:
L_60728:
	movw 0x44(%rbp),%r14w
	shrw $0x1,%r14w
	movb %r14b,%dl
	jmp toString_54
.p2align 0x4
.long 0xD74
L_60683:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60684
L_60723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60724
.p2align 0x4
.long 0xD7C
L_60724:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60684:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_60685
.p2align 0x4
.long 0xD77
L_60686:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60687
L_60721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60722
.p2align 0x4
.long 0xD7B
L_60722:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60687:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x50D8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEE98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD65
L_60506:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_60507
.p2align 0x4
.long 0xD66
L_60508:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq 0x48(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_398566
L_60509:
	movq %r13,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_60510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1367
.p2align 0x4
L_398566:
L_60556:
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_60289
.p2align 0x4
.long 0xD53
L_60989:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398567
L_60994:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398567:
L_60990:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD53
L_60977:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398568
L_60982:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398568:
L_60978:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x522
L_61389:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398569
L_61391:
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
L_398569:
L_61390:
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
rev_53:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_398572
L_60210:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_60211:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398571
.p2align 0x4,,0x7
L_60212:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_398570
L_60213:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_60211
.p2align 0x4
L_398570:
L_60215:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_60216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398571:
L_60223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_60224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60224
.p2align 0x4
.long 0x45C
L_60224:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_60212
.p2align 0x4
L_398572:
L_60225:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_60215
.p2align 0x4
.long 0x51F
L_59979:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59980
L_59981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_59982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59982
.p2align 0x4
.long 0x814
L_59982:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_59980:
	movl 0x18(%rbp),%ecx
	jmp L_59963
.p2align 0x4
.long 0x1
bug_95:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_59967
L_59968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_59969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_59969
.p2align 0x4
.long 0x452
L_59969:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_59967:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDB7
L_61380:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60293
L_61382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_61383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61383
.p2align 0x4
.long 0xDB8
L_61383:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_60293
.p2align 0x4
.long 0xD4A
L_60301:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398576
L_61215:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEDF0)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398576:
L_60302:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEDF0)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
L_61218:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61219
L_61220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61221
.p2align 0x4
.long 0xDAF
L_61221:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61219:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD4A
L_61348:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398578
L_61366:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEDF0)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398578:
L_61349:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEDF0)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
L_61369:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61370
L_61371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61372
.p2align 0x4
.long 0xDAF
L_61372:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61370:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD4B
L_61310:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398580
L_61335:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEDF0)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398580:
L_61311:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEDF0)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4B
L_61338:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61339
L_61340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61341
.p2align 0x4
.long 0xDB6
L_61341:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61339:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xDB1
L_61237:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61238
L_61260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61261
.p2align 0x4
.long 0xDB3
L_61261:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61238:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_398585
	cmpl $0x10,%r15d
	je L_398584
	cmpl $0x20,%r15d
	je L_398583
	cmpl $0x40,%r15d
	je L_398582
L_61239:
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_61240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_398582:
L_61259:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_61248
.p2align 0x4
L_398583:
L_61258:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_61248
.p2align 0x4
L_398584:
L_61257:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_61248
.p2align 0x4
L_398585:
L_61247:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_61248
.p2align 0x4
.long 0xDB2
L_61249:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movl $0x0,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp move_4
.p2align 0x4
.long 0xD4C
L_60318:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xEE00)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD4E
L_61009:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398587
L_61024:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEEE8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398587:
L_61010:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEEE8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD9D
L_61155:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
L_61156:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61157
L_61163:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_398598
	cmpq $0xF5B,%r14
	je L_398597
	cmpq $0xF5E,%r14
	je L_398596
	cmpq $0xF5F,%r14
	je L_398589
	cmpq $0xF60,%r14
	je L_398588
L_61157:
	movl $0x0,0x60(%rbp)
L_61158:
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
L_398588:
L_61176:
	movl $0x1,0x60(%rbp)
	jmp L_61158
.p2align 0x4
L_398589:
L_61167:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_61169:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_61157
L_61170:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_398594
	cmpq $0xF5B,%r14
	je L_398593
	cmpq $0xF5E,%r14
	je L_398592
	cmpq $0xF5F,%r14
	je L_398591
	cmpq $0xF60,%r14
	je L_398590
	jmp L_61157
.p2align 0x4
L_398590:
L_61175:
	movl $0x1,0x60(%rbp)
	jmp L_61158
.p2align 0x4
L_398591:
L_61174:
	movq 0x0(%r15),%r15
	jmp L_61169
.p2align 0x4
L_398592:
L_61173:
	movl $0x1,0x60(%rbp)
	jmp L_61158
.p2align 0x4
L_398593:
L_61172:
	movl $0x1,0x60(%rbp)
	jmp L_61158
.p2align 0x4
L_398594:
L_61171:
	movl $0x1,0x60(%rbp)
	jmp L_61158
.p2align 0x4
L_398596:
L_61166:
	movl $0x1,0x60(%rbp)
	jmp L_61158
.p2align 0x4
L_398597:
L_61165:
	movl $0x1,0x60(%rbp)
	jmp L_61158
.p2align 0x4
L_398598:
L_61164:
	movl $0x1,0x60(%rbp)
	jmp L_61158
.p2align 0x4
.long 0xDA3
L_61067:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	movq %r15,0x68(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq %r14,0x60(%rbp)
L_61054:
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0xD9E
L_61037:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_60025
L_61039:
	decl %ecx
	jo L_60002
L_61040:
	movq $0x1,0xB0(%rbp)
loop_709:
	cmpl $0x0,%ecx
	jl L_398600
L_61041:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0xA4(%rbp)
	movslq %ecx,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_61042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fetchOperand_0
.p2align 0x4
L_398600:
L_61046:
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_398601
L_61047:
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_398601:
L_61063:
	movq $0x1,%r14
	xchgq %r14,%r15
L_61050:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD4E
L_61139:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398604
L_61141:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398604:
L_61140:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD9D
L_61126:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61127
L_61128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61129
.p2align 0x4
.long 0xDA8
L_61129:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61127:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%ecx
	jmp loop_710
.p2align 0x4
.long 0xDA9
L_61132:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61133
L_61145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61146
.p2align 0x4
.long 0xDAB
L_61146:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61133:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_61134
.p2align 0x4
.long 0xD9B
L_61135:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61136
L_61143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61144
.p2align 0x4
.long 0xDAA
L_61144:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61136:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD5E
L_60461:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398608
L_60498:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE48)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398608:
L_60462:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE48)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD50
L_60360:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398609
L_60392:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398609:
L_60361:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD5B
L_60430:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq 0x48(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_699
.p2align 0x4
.long 0xD8D
L_60885:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
.long 0xD81
L_60793:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0xB0(%rbp)
	jnz L_398610
L_60794:
	movq 0xA8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_60795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fetchOperand_0
.p2align 0x4
L_398610:
L_60800:
	movq 0xA8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_60801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0x1
L_60582:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60583
L_60587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_60588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60588
.p2align 0x4
.long 0x452
L_60588:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_60583:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_97+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD75
L_60593:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398612
L_60747:
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398612:
L_60594:
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD56
L_60602:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_398614
L_60603:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398613
L_60649:
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398613:
L_60604:
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398614:
L_60614:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398615
L_60645:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398615:
L_60615:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD78
L_60688:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60689
L_60719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60720
.p2align 0x4
.long 0xD7A
L_60720:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60689:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD67
L_60510:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0xD53
L_60991:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398617
L_60993:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
L_398617:
L_60992:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD53
L_60979:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398618
L_60981:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
L_398618:
L_60980:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_60216:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60217
L_60221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_60222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60222
.p2align 0x4
.long 0x452
L_60222:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_60217:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEDE8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_96+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD4B
L_60303:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398620
L_61214:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398620:
L_60304:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4B
L_61350:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398621
L_61365:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398621:
L_61351:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xDB5
L_61312:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398622
L_61334:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398622:
L_61313:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_61240:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61241
L_61245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_61246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61246
.p2align 0x4
.long 0x452
L_61246:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_61241:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_99+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD4A
L_61250:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61251
L_61255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61256
.p2align 0x4
.long 0xDAF
L_61256:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61251:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD4D
L_60319:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60320
L_61203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61204
.p2align 0x4
.long 0xDAD
L_61204:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_60320:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_60321:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_60002
L_60322:
	cmpq $0x1,%r14
	je L_398625
L_60323:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_60321
.p2align 0x4
L_398625:
L_60324:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60325
L_61201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61202
.p2align 0x4
.long 0xDAE
L_61202:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_60325:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_398626
L_60326:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
toString_53:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xC0(%rbp)
	movq $0x1,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (rev_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_398626:
L_61200:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_53
.p2align 0x4
.long 0xD9B
L_61011:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398630
L_61023:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398630:
L_61012:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
L_61159:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xB8(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp move_4
.p2align 0x4
.long 0xDA4
L_61055:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB8(%rbp)
	movl $0x0,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xB8,%rbp
	leaq (L_61056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp move_4
.p2align 0x4
.long 0xD9F
L_61042:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61043
L_61044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_61045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61045
.p2align 0x4
.long 0xDA0
L_61045:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_61043:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movl 0xA4(%rbp),%ecx
	jmp loop_709
.p2align 0x4
.long 0xDA1
L_61048:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61049
L_61061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_61062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61062
.p2align 0x4
.long 0xDA6
L_61062:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_61049:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_61050
.p2align 0x4
.long 0xDA2
L_61051:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61052
L_61059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61060
.p2align 0x4
.long 0xDA5
L_61060:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61052:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD4E
L_61018:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_61019
.p2align 0x4
.long 0xD5F
L_60463:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398634
L_60497:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398634:
L_60464:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD50
L_60362:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_60025
L_60364:
	cmpl $0x0,%r13d
	jl L_60391
L_60365:
	movl $0x0,0x24(%rbp)
loop_700:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_398636
L_60366:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398635
L_60375:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE18)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398635:
L_60367:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE18)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398636:
L_60376:
	movslq 0x24(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x38(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398637
L_60389:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xE388)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398637:
L_60377:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xE388)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD8E
L_60886:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_60025
L_60888:
	decl %ecx
	jo L_60002
L_60889:
	movq $0x1,0x38(%rbp)
loop_707:
	cmpl $0x0,%ecx
	jl L_398640
L_60890:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %ecx,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_398640:
L_60895:
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xD82
L_60795:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60796
L_60798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_60799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60799
.p2align 0x4
.long 0xD83
L_60799:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_60796:
	movl 0x90(%rbp),%ecx
	movq 0xA8(%rbp),%r15
L_60797:
	movl %ecx,0x90(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	movl 0x94(%rbp),%ecx
	jmp loop_705
.p2align 0x4
.long 0xD81
L_60801:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movl 0x90(%rbp),%r15d
	movl %r15d,%r14d
	incl %r14d
	movl %r14d,0xB8(%rbp)
	jo L_60002
L_60802:
	movl %r15d,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_60803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
bug_97:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60584
L_60585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_60586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60586
.p2align 0x4
.long 0x452
L_60586:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_60584:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD75
L_60595:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60597
L_60745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60746
.p2align 0x4
.long 0xD7D
L_60746:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60597
.p2align 0x4
.long 0xD51
L_60605:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_60614
L_60606:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
L_60607:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398647
L_60647:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398647:
L_60608:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD50
L_60616:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398649
L_60644:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398649:
L_60617:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD79
L_60690:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398650
L_60718:
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398650:
L_60691:
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD68
L_60511:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpl $0x0,%r15d
	jl L_398651
L_60512:
	movl %r15d,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_60513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_398651:
L_60550:
	negl %r15d
	jo L_60002
L_60551:
	movl %r15d,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_60552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
bug_96:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60218
L_60219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_60220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60220
.p2align 0x4
.long 0x452
L_60220:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_60218:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD4B
L_60305:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398654
L_61213:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (loop_697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398654:
L_60306:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (loop_697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4B
L_61352:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398655
L_61364:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (loop_712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398655:
L_61353:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (loop_712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xDB5
L_61314:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398656
L_61333:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (loop_711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398656:
L_61315:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (loop_711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
bug_99:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61242
L_61243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_61244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61244
.p2align 0x4
.long 0x452
L_61244:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_61242:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD4A
L_61252:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398658
L_61254:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (x_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398658:
L_61253:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (x_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4E
rev_54:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_398661
L_60327:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_60328:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398660
.p2align 0x4,,0x7
L_60329:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_398659
L_60330:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_60328
.p2align 0x4
L_398659:
L_60332:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_398660:
L_61197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61198
.p2align 0x4
.long 0xDAD
L_61198:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_60329
.p2align 0x4
L_398661:
L_61199:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_60332
.p2align 0x4
.long 0xD9B
L_61013:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398662
L_61022:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (loop_708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398662:
L_61014:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (loop_708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4E
L_61160:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398663
L_61162:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398663:
L_61161:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4E
L_61056:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398664
L_61058:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398664:
L_61057:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xDA3
L_61053:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	jmp L_61054
.p2align 0x4
.long 0xD5F
L_60465:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398665
L_60496:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398665:
L_60466:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD52
L_60368:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60369
L_60373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60374
.p2align 0x4
.long 0xD54
L_60374:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60369:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x3D63,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0xC9F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r13,0x98(%rbp)
	addq $0x30,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
.long 0xD55
L_60378:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398667
L_60388:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398667:
L_60379:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD8F
L_60891:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60892
L_60893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60894
.p2align 0x4
.long 0xD90
L_60894:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60892:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movl 0x48(%rbp),%ecx
	jmp loop_707
.p2align 0x4
.long 0xD91
L_60896:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60897
L_60944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60945
.p2align 0x4
.long 0xD99
L_60945:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60897:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_398674
L_60898:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_60899:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398673
.p2align 0x4,,0x7
L_60900:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_398669
L_60901:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_60899
.p2align 0x4
L_398669:
L_60902:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_60903:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_398672
.p2align 0x4,,0x7
L_60904:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_398670
L_60905:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_60903
.p2align 0x4
L_398670:
L_60906:
	movq %r15,0x38(%rbp)
L_60907:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398671
L_60938:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398671:
L_60908:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398672:
L_60939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60940
.p2align 0x4
.long 0xD97
L_60940:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60904
.p2align 0x4
L_398673:
L_60941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60942
.p2align 0x4
.long 0xD98
L_60942:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60900
.p2align 0x4
L_398674:
L_60943:
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_60907
.p2align 0x4
.long 0xD84
L_60803:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60804
L_60842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_60843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60843
.p2align 0x4
.long 0xD89
L_60843:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_60804:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEEC0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_60805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD5F
L_60609:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398677
L_60646:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398677:
L_60610:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD50
L_60618:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_60622
	cmpq $0x2,%r15
	je L_398679
L_60619:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398678
L_60641:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE68)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398678:
L_60620:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE68)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398679:
L_60622:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jz L_398681
L_60637:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398680
L_60640:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE80)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398680:
L_60638:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE80)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398681:
L_60624:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_398683
L_60633:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398682
L_60636:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE78)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398682:
L_60634:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE78)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398683:
L_60626:
	movl 0x6C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_398685
L_60627:
	cmpq $0x1,0x18(%rbp)
	je L_398684
L_60628:
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp L_60289
.p2align 0x4
L_398684:
L_60489:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_398685:
L_60630:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398686
L_60632:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEE70)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
L_398686:
L_60631:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEE70)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD79
L_60692:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398688
L_60717:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398688:
L_60693:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD69
L_60513:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x808)(%rip),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_398689
L_60514:
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_60515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_398689:
L_60518:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398690
L_60546:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xEE58)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398690:
L_60519:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xEE58)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD69
L_60552:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60553
L_60554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_60555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60555
.p2align 0x4
.long 0xD70
L_60555:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_60553:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD4A
loop_697:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398692
L_61212:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398692:
L_60307:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
loop_712:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398693
L_61363:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398693:
L_61354:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4B
loop_711:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398694
L_61332:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398694:
L_61316:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
x_143:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp x_142
.p2align 0x4
.long 0xD4E
L_60333:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398695
L_61196:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (length_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398695:
L_60334:
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (length_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4E
loop_708:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398696
L_61021:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398696:
L_61015:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD56
L_60467:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EB4,%r15
	je L_398697
L_60495:
	movq 0x0(%r14),%r15
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x18(%rbp)
L_60477:
	movq %r15,0xA0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398697:
L_60468:
	movq 0x0(%r14),%r15
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x18(%rbp)
L_60469:
	movq %r15,0xA0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD53
L_60370:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398698
L_60372:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEE20)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
L_398698:
L_60371:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEE20)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD56
L_60380:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398699
L_60387:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398699:
L_60381:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xEE28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD92
L_60909:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398700
L_60937:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398700:
L_60910:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD84
L_60805:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_60837
	cmpq $0x5,%r15
	je L_398706
	cmpq $0x6,%r15
	je L_398704
L_60806:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_60807
L_60833:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_398702
	cmpq $0xF54,%r15
	je L_398701
L_60807:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_60808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_398701:
L_60835:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0xB0(%rbp)
L_60818:
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_60819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fetchOperand_0
.p2align 0x4
L_398702:
L_60834:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_60818
.p2align 0x4
L_398704:
L_60839:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_398705
L_60840:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_60818
.p2align 0x4
L_398705:
L_60841:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_60818
.p2align 0x4
L_398706:
L_60837:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_60818
.p2align 0x4
.long 0xD51
L_60611:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_60614
L_60612:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_60607
.p2align 0x4
.long 0xD52
L_60621:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60622
.p2align 0x4
.long 0xD52
L_60639:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60624
.p2align 0x4
.long 0xD52
L_60635:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_60626
.p2align 0x4
.long 0xD79
L_60694:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_398710
L_60695:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398709
L_60715:
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398709:
L_60696:
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398710:
L_60706:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398711
L_60711:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398711:
L_60707:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD6A
L_60515:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60516
L_60547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_60548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60548
.p2align 0x4
.long 0xD6F
L_60548:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_60516:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5480)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEE50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD6A
L_60520:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398713
L_60545:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398713:
L_60521:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
L_60308:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398714
L_61211:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398714:
L_60309:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_60310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
L_61355:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398715
L_61362:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398715:
L_61356:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4B
L_61317:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398716
L_61331:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398716:
L_61318:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4E
length_2:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp length_3
.p2align 0x4
.long 0xD4E
L_61016:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398717
L_61020:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398717:
L_61017:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD5F
L_60478:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x20(%rbp),%r15
L_60471:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398718
L_60494:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398718:
L_60472:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD5F
L_60470:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x20(%rbp),%r15
	jmp L_60471
.p2align 0x4
.long 0xD56
L_60382:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60383
L_60385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60386
.p2align 0x4
.long 0xD57
L_60386:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60383:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x3D63,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0xC9F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r13,0xA0(%rbp)
	addq $0x30,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
.long 0xD92
L_60911:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398720
L_60936:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398720:
L_60912:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD85
L_60808:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpl $0x8,%r15d
	je L_398724
	cmpl $0x10,%r15d
	je L_398723
	cmpl $0x20,%r15d
	je L_398722
	cmpl $0x40,%r15d
	je L_398721
L_60809:
	movq 0xC8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_60810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_398721:
L_60832:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_60818
.p2align 0x4
L_398722:
L_60831:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0xB0(%rbp)
	jmp L_60818
.p2align 0x4
L_398723:
L_60830:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0xB0(%rbp)
	jmp L_60818
.p2align 0x4
L_398724:
L_60817:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0xB0(%rbp)
	jmp L_60818
.p2align 0x4
.long 0xD86
L_60819:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60820
L_60828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_60829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60829
.p2align 0x4
.long 0xD89
L_60829:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_60820:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_60821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD51
L_60697:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_60706
L_60698:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
L_60699:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398726
L_60713:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398726:
L_60700:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD50
L_60708:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398728
L_60710:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398728:
L_60709:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD6B
L_60517:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_60518
.p2align 0x4
.long 0xD6A
L_60522:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398729
L_60544:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398729:
L_60523:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
L_60310:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz x_142
L_61208:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398730
L_61210:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (x_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398730:
L_61209:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (x_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4A
L_61357:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz x_142
L_61359:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398731
L_61361:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (x_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398731:
L_61360:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (x_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4B
L_61319:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61320
L_61329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61330
.p2align 0x4
.long 0xDAF
L_61330:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_61320:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_61224
L_61322:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398732
L_61328:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398732:
L_61323:
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_61324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD56
L_60473:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_398736
L_60474:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1EB4,%r11
	je L_398735
L_60476:
	movq %r15,0x18(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp L_60477
.p2align 0x4
L_398735:
L_60475:
	movq %r15,0x18(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp L_60469
.p2align 0x4
L_398736:
L_60479:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398737
L_60493:
	movq 0x0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398737:
L_60480:
	movq 0x0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD50
L_60384:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	incl 0x24(%rbp)
	jmp loop_700
.p2align 0x4
.long 0xD93
L_60913:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_398739
L_60914:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
L_60915:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398738
L_60934:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398738:
L_60916:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398739:
L_60922:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398740
L_60932:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398740:
L_60923:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_60810:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60811
L_60815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_60816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60816
.p2align 0x4
.long 0x452
L_60816:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_60811:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_98+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD87
L_60821:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398742
L_60827:
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_60823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398742:
L_60822:
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_60823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD5F
L_60701:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398743
L_60712:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398743:
L_60702:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD6C
L_60524:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EB4,%r15
	je L_398744
L_60543:
	movq 0x0(%r14),%r15
	movq $0x1,0x88(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x90(%rbp)
L_60534:
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_60535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398744:
L_60525:
	movq 0x0(%r14),%r15
	movq $0x1,0x88(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x90(%rbp)
L_60526:
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_60527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD4B
L_61324:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_61224
L_61326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_61327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_61327
.p2align 0x4
.long 0xDAF
L_61327:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_61224
.p2align 0x4
.long 0xD60
L_60481:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398746
L_60492:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398746:
L_60482:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD5F
L_60917:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398747
L_60933:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398747:
L_60918:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD94
L_60924:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398748
L_60931:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398748:
L_60925:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
bug_98:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60812
L_60813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_60814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60814
.p2align 0x4
.long 0x452
L_60814:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_60812:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD87
L_60823:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60824
L_60825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_60826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60826
.p2align 0x4
.long 0xD88
L_60826:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_60824:
	movl 0xB8(%rbp),%ecx
	movq 0xC0(%rbp),%r15
	jmp L_60797
.p2align 0x4
.long 0xD51
L_60703:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_60706
L_60704:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_60699
.p2align 0x4
.long 0xD6D
L_60535:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x90(%rbp),%r15
L_60528:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398752
L_60542:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398752:
L_60529:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD6D
L_60527:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x90(%rbp),%r15
	jmp L_60528
.p2align 0x4
.long 0xD60
L_60483:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60484
L_60490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60491
.p2align 0x4
.long 0xD63
L_60491:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60484:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x3D63,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0xC9F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r13,0xA0(%rbp)
	addq $0x30,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
.long 0xD51
L_60919:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_60922
L_60920:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_60915
.p2align 0x4
.long 0xD94
L_60926:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_60927
L_60929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_60930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_60930
.p2align 0x4
.long 0xD96
L_60930:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_60927:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x3D63,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0xC9F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r13,0xA0(%rbp)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_60928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1354
.p2align 0x4
.long 0xD6E
L_60530:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_398757
L_60531:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1EB4,%r11
	je L_398756
L_60533:
	movq %r15,0x88(%rbp)
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r15
	jmp L_60534
.p2align 0x4
L_398756:
L_60532:
	movq %r15,0x88(%rbp)
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r15
	jmp L_60526
.p2align 0x4
L_398757:
L_60536:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_398758
L_60541:
	movq 0x0(%r15),%r13
	movq %r13,0x98(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_398758:
L_60537:
	movq 0x0(%r15),%r13
	movq %r13,0x98(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_60538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD61
L_60485:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
maybePrintLabel_0:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_60486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
.long 0xD95
L_60928:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp maybePrintLabel_0
.p2align 0x4
.long 0xD53
L_60538:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_398759
L_60540:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
L_398759:
L_60539:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD62
L_60486:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_60489
L_60487:
	movq 0x20(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp L_60289
