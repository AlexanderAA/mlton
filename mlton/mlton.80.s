/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:18:11 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl checkSyntaxBasdec_0
.hidden checkSyntaxBasdec_0
checkSyntaxBasdec_0:
loopS_27:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_235779
L_236014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236015
.p2align 0x4
.long 0x460
L_236015:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_235779:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_2691:
	movq 0x8(%rbp),%r14
	movq 0x40(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_476352
L_235780:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE37,%r14
	je L_476351
	cmpq $0xE38,%r14
	je L_476350
	cmpq $0xE39,%r14
	je L_476349
	cmpq $0xE3A,%r14
	je L_476348
	cmpq $0xE3B,%r14
	je L_476345
	cmpq $0xE3C,%r14
	je L_476337
	cmpq $0xE3D,%r14
	je L_476336
L_235781:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_476335
L_235782:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
L_235783:
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_235784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxBasdec_0
.p2align 0x4
L_476335:
L_235787:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476336:
L_236012:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp loop_2691
.p2align 0x4
L_476337:
L_235962:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x28(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x30(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_476344
L_235964:
	cmpl $0x0,%r14d
	jl L_476343
L_235965:
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_2698:
	movl 0x34(%rbp),%r14d
	cmpl 0x30(%rbp),%r14d
	jnl L_476342
L_235967:
	movslq %r14d,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_2699:
	cmpl 0x34(%rbp),%ecx
	je L_476341
L_235968:
	movslq %ecx,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_476340
L_235970:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_476339
L_235971:
	incl %ecx
	jo L_476338
L_235972:
	jmp loop_2699
.p2align 0x4
L_476338:
L_235808:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476339:
L_235973:
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1878)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_235974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476340:
L_235805:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476341:
.p2align 0x4,,0x7
L_235998:
	incl 0x34(%rbp)
	jmp loop_2698
.p2align 0x4
L_476342:
L_235966:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476343:
L_235853:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476344:
L_235798:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476345:
L_235794:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x127B,%r15
	je L_476347
	cmpq $0x127C,%r15
	je L_476346
L_235795:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x1890)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_235796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476346:
L_235908:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x1898)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_235909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476347:
L_235854:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x1888)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_235855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476348:
L_235792:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_235793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxBasdec_0
.p2align 0x4
L_476349:
L_235791:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476350:
L_235790:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476351:
L_235789:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476352:
L_236013:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_235784:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_235787
L_235785:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_235783
.p2align 0x4
.long 0x3AEB
L_235974:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_235975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x71E
L_235796:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x40(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_235798
L_235799:
	cmpl $0x0,%r15d
	jl L_235853
L_235800:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_2692:
	movl 0x44(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_476360
L_235802:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_2693:
	cmpl %ecx,0x44(%rbp)
	je L_476359
L_235803:
	movslq %ecx,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_235805
L_235806:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r11)
	je L_476356
L_235807:
	incl %ecx
	jo L_235808
L_235809:
	jmp loop_2693
.p2align 0x4
L_476356:
L_235810:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235811
L_235849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_235850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235850
.p2align 0x4
.long 0x3208
L_235850:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_235811:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476359:
.p2align 0x4,,0x7
L_235836:
	incl 0x44(%rbp)
	jmp loop_2692
.p2align 0x4
L_476360:
L_235801:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_235909:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x40(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_235798
L_235911:
	cmpl $0x0,%r15d
	jl L_235853
L_235912:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_2696:
	movl 0x44(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_476368
L_235914:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_2697:
	cmpl 0x44(%rbp),%ecx
	je L_476367
L_235915:
	movslq %ecx,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_235805
L_235917:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r11)
	je L_476364
L_235918:
	incl %ecx
	jo L_235808
L_235919:
	jmp loop_2697
.p2align 0x4
L_476364:
L_235920:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235921
L_235958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_235959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235959
.p2align 0x4
.long 0x3208
L_235959:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_235921:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476367:
.p2align 0x4,,0x7
L_235946:
	incl 0x44(%rbp)
	jmp loop_2696
.p2align 0x4
L_476368:
L_235913:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_235855:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x40(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_235798
L_235857:
	cmpl $0x0,%r15d
	jl L_235853
L_235858:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_2694:
	movl 0x44(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_476376
L_235860:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_2695:
	cmpl 0x44(%rbp),%ecx
	je L_476375
L_235861:
	movslq %ecx,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_235805
L_235863:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r11)
	je L_476372
L_235864:
	incl %ecx
	jo L_235808
L_235865:
	jmp loop_2695
.p2align 0x4
L_476372:
L_235866:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235867
L_235904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_235905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235905
.p2align 0x4
.long 0x3208
L_235905:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_235867:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476375:
.p2align 0x4,,0x7
L_235892:
	incl 0x44(%rbp)
	jmp loop_2694
.p2align 0x4
L_476376:
L_235859:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_235793:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_2691
.p2align 0x4
.long 0x3AEB
L_235975:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_235976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3AE4
L_235812:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3AE4
L_235922:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3AE4
L_235868:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1853
L_235976:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235977
L_236008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236009
.p2align 0x4
.long 0x3AF0
L_236009:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_235977:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_235978:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_235808
L_235979:
	cmpq $0x1,%r14
	je L_476379
L_235980:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_235978
.p2align 0x4
L_476379:
L_235981:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235982
L_236006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236007
.p2align 0x4
.long 0x3AEF
L_236007:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_235982:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476380
L_235983:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_235984:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_235985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476380:
L_236005:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_235984
.p2align 0x4
.long 0x3AE4
L_235813:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3AE4
L_235923:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3AE4
L_235869:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3AEB
L_235985:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_235986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasdec_0
.p2align 0x4
.long 0x3AE5
L_235814:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235815
L_235847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_235848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235848
.p2align 0x4
.long 0x3AEA
L_235848:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_235815:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_235816:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_235808
L_235817:
	cmpq $0x1,%r14
	je L_476384
L_235818:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_235816
.p2align 0x4
L_476384:
L_235819:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235820
L_235845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_235846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235846
.p2align 0x4
.long 0x9A7
L_235846:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_235820:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476385
L_235821:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_235822:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476385:
L_235844:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_235822
.p2align 0x4
.long 0x3AE5
L_235924:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235925
L_235956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_235957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235957
.p2align 0x4
.long 0x3AEA
L_235957:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_235925:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_235926:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_235808
L_235927:
	cmpq $0x1,%r14
	je L_476389
L_235928:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_235926
.p2align 0x4
L_476389:
L_235929:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235930
L_235954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_235955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235955
.p2align 0x4
.long 0x9A7
L_235955:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_235930:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476390
L_235931:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_235932:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476390:
L_235953:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_235932
.p2align 0x4
.long 0x3AE5
L_235870:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235871
L_235902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_235903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235903
.p2align 0x4
.long 0x3AEA
L_235903:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_235871:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_235872:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_235808
L_235873:
	cmpq $0x1,%r14
	je L_476394
L_235874:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_235872
.p2align 0x4
L_476394:
L_235875:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235876
L_235900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_235901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235901
.p2align 0x4
.long 0x9A7
L_235901:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_235876:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476395
L_235877:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_235878:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476395:
L_235899:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_235878
.p2align 0x4
.long 0x1852
L_235986:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235987
L_236003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236004
.p2align 0x4
.long 0x3AEE
L_236004:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_235987:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_235988:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_235808
L_235989:
	cmpq $0x1,%r14
	je L_476399
L_235990:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_235988
.p2align 0x4
L_476399:
L_235991:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235992
L_236001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_236002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236002
.p2align 0x4
.long 0x3AED
L_236002:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_235992:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476401
L_235993:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_235994:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_235808
L_235995:
	movl %r13d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_235996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_476401:
L_236000:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_235994
.p2align 0x4
.long 0x3AE5
L_235823:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_55
.p2align 0x4
.long 0x3AE5
L_235933:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_55
.p2align 0x4
.long 0x3AE5
L_235879:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_235880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_55
.p2align 0x4
.long 0x3AEC
L_235996:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_235998
L_235838:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3AE6
L_235824:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235825
L_235842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_235843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235843
.p2align 0x4
.long 0x3AE9
L_235843:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_235825:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_235826:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_235808
L_235827:
	cmpq $0x1,%r14
	je L_476406
L_235828:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_235826
.p2align 0x4
L_476406:
L_235829:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235830
L_235840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_235841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235841
.p2align 0x4
.long 0x3AE8
L_235841:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_235830:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476408
L_235831:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_235832:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_235808
L_235833:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_235834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_476408:
L_235839:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_235832
.p2align 0x4
.long 0x3AE6
L_235934:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235935
L_235951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_235952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235952
.p2align 0x4
.long 0x3AE9
L_235952:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_235935:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_235936:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_235808
L_235937:
	cmpq $0x1,%r14
	je L_476412
L_235938:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_235936
.p2align 0x4
L_476412:
L_235939:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235940
L_235949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_235950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235950
.p2align 0x4
.long 0x3AE8
L_235950:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_235940:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476414
L_235941:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_235942:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_235808
L_235943:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_235944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_476414:
L_235948:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_235942
.p2align 0x4
.long 0x3AE6
L_235880:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235881
L_235897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_235898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235898
.p2align 0x4
.long 0x3AE9
L_235898:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_235881:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_235882:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_235808
L_235883:
	cmpq $0x1,%r14
	je L_476418
L_235884:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_235882
.p2align 0x4
L_476418:
L_235885:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_235886
L_235895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_235896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_235896
.p2align 0x4
.long 0x3AE8
L_235896:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_235886:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476420
L_235887:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_235888:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_235808
L_235889:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_235890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_476420:
L_235894:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_235888
.p2align 0x4
.long 0x3AE7
L_235834:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_235838
	jmp L_235836
.p2align 0x4
.long 0x3AE7
L_235944:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_235838
	jmp L_235946
.p2align 0x4
.long 0x3AE7
L_235890:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_235838
	jmp L_235892
.text
.p2align 0x4
.globl layout_55
.hidden layout_55
layout_55:
L_236016:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_236017
L_236303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_236304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236304
.p2align 0x4
.long 0x452
L_236304:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_236017:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127B,%r14
	je L_476438
	cmpq $0x127C,%r14
	je L_476432
L_236018:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_476431
L_236021:
	decl %r13d
	jo L_476430
L_236023:
	movl %r13d,0x18(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
loop_2700:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476429
.p2align 0x4,,0x7
L_236024:
	movl 0x18(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_476427
L_236025:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_2700
.p2align 0x4
L_476427:
L_236026:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_476428
L_236027:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1798)(%rip),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_236028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476428:
L_236086:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476429:
L_236113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_236114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236114
.p2align 0x4
.long 0x49C
L_236114:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_236024
.p2align 0x4
L_476430:
L_236022:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476431:
L_236020:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476432:
L_236209:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_236020
L_236211:
	decl %r13d
	jo L_236022
L_236212:
	movl %r13d,0x18(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
loop_2702:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476435
.p2align 0x4,,0x7
L_236213:
	movl 0x18(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_476433
L_236214:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_2702
.p2align 0x4
L_476433:
L_236215:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_236086
L_236216:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x17A0)(%rip),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_236217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476435:
L_236301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_236302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236302
.p2align 0x4
.long 0x49C
L_236302:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_236213
.p2align 0x4
L_476438:
L_236115:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_236020
L_236117:
	decl %r13d
	jo L_236022
L_236118:
	movl %r13d,0x18(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
loop_2701:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476441
.p2align 0x4,,0x7
L_236119:
	movl 0x18(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_476439
L_236120:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_2701
.p2align 0x4
L_476439:
L_236121:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_236086
L_236122:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1790)(%rip),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_236123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476441:
L_236207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_236208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236208
.p2align 0x4
.long 0x49C
L_236208:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_236119
.p2align 0x4
.long 0x51A
L_236028:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_236029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_236217:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_236218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_236123:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_236124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_236029:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_236218:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_236124:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x900
L_236030:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x900
L_236219:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x900
L_236125:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x71E
L_236031:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x71E
L_236220:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x71E
L_236126:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x511
L_236032:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x511
L_236221:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x511
L_236127:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F1
L_236033:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236034
L_236110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_236111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236111
.p2align 0x4
.long 0x5EC
L_236111:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_236034:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_236035:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_236022
L_236036:
	cmpq $0x1,%r14
	je L_476445
L_236037:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236035
.p2align 0x4
L_476445:
L_236038:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236039
L_236108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236109
.p2align 0x4
.long 0x3AF1
L_236109:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_236039:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476446
L_236040:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_236041:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476446:
L_236107:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236041
.p2align 0x4
.long 0x5F1
L_236222:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236223
L_236298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_236299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236299
.p2align 0x4
.long 0x5EC
L_236299:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_236223:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_236224:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_236022
L_236225:
	cmpq $0x1,%r14
	je L_476450
L_236226:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236224
.p2align 0x4
L_476450:
L_236227:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236228
L_236296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236297
.p2align 0x4
.long 0x3AF1
L_236297:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_236228:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476451
L_236229:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_236230:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476451:
L_236295:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236230
.p2align 0x4
.long 0x5F1
L_236128:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236129
L_236204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_236205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236205
.p2align 0x4
.long 0x5EC
L_236205:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_236129:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_236130:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_236022
L_236131:
	cmpq $0x1,%r14
	je L_476455
L_236132:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236130
.p2align 0x4
L_476455:
L_236133:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236134
L_236202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236203
.p2align 0x4
.long 0x3AF1
L_236203:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_236134:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476456
L_236135:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_236136:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476456:
L_236201:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236136
.p2align 0x4
.long 0x71E
L_236042:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236043
L_236105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236106
.p2align 0x4
.long 0x720
L_236106:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236043:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236044:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_236022
L_236045:
	cmpq $0x1,%r14
	je L_476460
L_236046:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236044
.p2align 0x4
L_476460:
L_236047:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236048
L_236103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236104
.p2align 0x4
.long 0xBAA
L_236104:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236048:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476462
L_236049:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_236050:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_476461
L_236051:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_236052:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476461:
L_236101:
	movq $0x1,%r14
	xchgq %r14,%r15
L_236081:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_476462:
L_236102:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236050
.p2align 0x4
.long 0x71E
L_236231:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236232
L_236293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236294
.p2align 0x4
.long 0x720
L_236294:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236232:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236233:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_236022
L_236234:
	cmpq $0x1,%r14
	je L_476466
L_236235:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236233
.p2align 0x4
L_476466:
L_236236:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236237
L_236291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236292
.p2align 0x4
.long 0xBAA
L_236292:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236237:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476468
L_236238:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_236239:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_476467
L_236240:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_236241:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476467:
L_236289:
	movq $0x1,%r14
	xchgq %r14,%r15
L_236270:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_476468:
L_236290:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236239
.p2align 0x4
.long 0x71E
L_236137:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236138
L_236199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236200
.p2align 0x4
.long 0x720
L_236200:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236138:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236139:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_236022
L_236140:
	cmpq $0x1,%r14
	je L_476472
L_236141:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236139
.p2align 0x4
L_476472:
L_236142:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236143
L_236197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236198
.p2align 0x4
.long 0xBAA
L_236198:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236143:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476474
L_236144:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_236145:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_476473
L_236146:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_236147:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476473:
L_236195:
	movq $0x1,%r14
	xchgq %r14,%r15
L_236176:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_476474:
L_236196:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236145
.p2align 0x4
.long 0x4B3
L_236053:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_236082:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236083
L_236087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236088
.p2align 0x4
.long 0x495
L_236088:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236083:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236086
L_236084:
	decl %r15d
	jo L_236022
L_236085:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B3
L_236242:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_236271:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236272
L_236275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236276
.p2align 0x4
.long 0x495
L_236276:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236272:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236086
L_236273:
	decl %r15d
	jo L_236022
L_236274:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B3
L_236148:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_236177:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236178
L_236181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236182
.p2align 0x4
.long 0x495
L_236182:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236178:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236086
L_236179:
	decl %r15d
	jo L_236022
L_236180:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x81D
L_236054:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_236055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x81D
L_236243:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_236244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x81D
L_236149:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_236150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B5
L_236055:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B5
L_236244:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B5
L_236150:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x768
L_236056:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_236057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x768
L_236245:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_236246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x768
L_236151:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_236152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B4
L_236057:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236058
L_236099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_236100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236100
.p2align 0x4
.long 0x4B7
L_236100:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_236058:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_236059:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_236022
L_236060:
	cmpq $0x1,%r14
	je L_476487
L_236061:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236059
.p2align 0x4
L_476487:
L_236062:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236063
L_236097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_236098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236098
.p2align 0x4
.long 0x7A3
L_236098:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_236063:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476488
L_236064:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_236065:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_236066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476488:
L_236096:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236065
.p2align 0x4
.long 0x4B4
L_236246:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236247
L_236287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_236288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236288
.p2align 0x4
.long 0x4B7
L_236288:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_236247:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_236248:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_236022
L_236249:
	cmpq $0x1,%r14
	je L_476492
L_236250:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236248
.p2align 0x4
L_476492:
L_236251:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236252
L_236285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_236286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236286
.p2align 0x4
.long 0x7A3
L_236286:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_236252:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476493
L_236253:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_236254:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_236255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476493:
L_236284:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236254
.p2align 0x4
.long 0x4B4
L_236152:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236153
L_236193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_236194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236194
.p2align 0x4
.long 0x4B7
L_236194:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_236153:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_236154:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_236022
L_236155:
	cmpq $0x1,%r14
	je L_476497
L_236156:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236154
.p2align 0x4
L_476497:
L_236157:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236158
L_236191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_236192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236192
.p2align 0x4
.long 0x7A3
L_236192:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_236158:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476498
L_236159:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_236160:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_236161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476498:
L_236190:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236160
.p2align 0x4
.long 0x4B5
L_236066:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236067
L_236094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236095
.p2align 0x4
.long 0x4B6
L_236095:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_236067:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236068:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_236022
L_236069:
	cmpq $0x1,%r14
	je L_476502
L_236070:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236068
.p2align 0x4
L_476502:
L_236071:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236072
L_236092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236093
.p2align 0x4
.long 0x516
L_236093:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236072:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476506
L_236073:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_236074:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_476503
L_236075:
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_236052
.p2align 0x4
L_476503:
L_236076:
	movq %r14,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_236077:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476505
.p2align 0x4,,0x7
L_236078:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_236081
L_236079:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_236077
.p2align 0x4
L_476505:
L_236089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236090
.p2align 0x4
.long 0x5EF
L_236090:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_236078
.p2align 0x4
L_476506:
L_236091:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236074
.p2align 0x4
.long 0x4B5
L_236255:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236256
L_236282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236283
.p2align 0x4
.long 0x4B6
L_236283:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_236256:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236257:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_236022
L_236258:
	cmpq $0x1,%r14
	je L_476510
L_236259:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236257
.p2align 0x4
L_476510:
L_236260:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236261
L_236280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236281
.p2align 0x4
.long 0x516
L_236281:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236261:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476514
L_236262:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_236263:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_476511
L_236264:
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_236241
.p2align 0x4
L_476511:
L_236265:
	movq %r14,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_236266:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476513
.p2align 0x4,,0x7
L_236267:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_236270
L_236268:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_236266
.p2align 0x4
L_476513:
L_236277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236278
.p2align 0x4
.long 0x5EF
L_236278:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_236267
.p2align 0x4
L_476514:
L_236279:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236263
.p2align 0x4
.long 0x4B5
L_236161:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236162
L_236188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236189
.p2align 0x4
.long 0x4B6
L_236189:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_236162:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236163:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_236022
L_236164:
	cmpq $0x1,%r14
	je L_476518
L_236165:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236163
.p2align 0x4
L_476518:
L_236166:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236167
L_236186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236187
.p2align 0x4
.long 0x516
L_236187:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236167:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476522
L_236168:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_236169:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_476519
L_236170:
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_236147
.p2align 0x4
L_476519:
L_236171:
	movq %r14,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_236172:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476521
.p2align 0x4,,0x7
L_236173:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_236176
L_236174:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_236172
.p2align 0x4
L_476521:
L_236183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236184
.p2align 0x4
.long 0x5EF
L_236184:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_236173
.p2align 0x4
L_476522:
L_236185:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236169
.text
.p2align 0x4
.globl layoutBasdec_0
.hidden layoutBasdec_0
layoutBasdec_0:
L_236305:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_236306
L_236560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_236561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236561
.p2align 0x4
.long 0x452
L_236561:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_236306:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_476539
L_236307:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE37,%r14
	je L_476538
	cmpq $0xE38,%r14
	je L_476537
	cmpq $0xE39,%r14
	je L_476536
	cmpq $0xE3A,%r14
	je L_476535
	cmpq $0xE3B,%r14
	je L_476534
	cmpq $0xE3C,%r14
	je L_476528
	cmpq $0xE3D,%r14
	je L_476527
L_236308:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_476526
L_236309:
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x8(%rbp)
L_236310:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_236311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasdec_0
.p2align 0x4
L_476526:
L_236332:
	movq $0x1,%r15
L_236319:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_476527:
L_236526:
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0x104F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_236527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476528:
L_236408:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_476533
L_236410:
	decl %r13d
	jo L_476532
L_236411:
	movl %r13d,0x10(%rbp)
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
loop_2703:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476531
.p2align 0x4,,0x7
L_236412:
	movl 0x10(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_476529
L_236413:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp loop_2703
.p2align 0x4
L_476529:
L_236414:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_476530
L_236415:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq (globalObjptr+0x1868)(%rip),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476530:
L_236325:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476531:
L_236524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_236525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236525
.p2align 0x4
.long 0x45E
L_236525:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_236412
.p2align 0x4
L_476532:
L_236323:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476533:
L_236338:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476534:
L_236407:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp layout_55
.p2align 0x4
L_476535:
L_236373:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_236374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasdec_0
.p2align 0x4
L_476536:
L_236372:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_476537:
L_236334:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq (globalObjptr+0xE2D0)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_236335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476538:
L_236333:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_476539:
L_236559:
	movq (globalObjptr+0xB870)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_236311:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236312
L_236330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_236331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236331
.p2align 0x4
.long 0x45C
L_236331:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_236312:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_476541
L_236313:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_236310
.p2align 0x4
L_476541:
L_236314:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_236315:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476543
.p2align 0x4,,0x7
L_236316:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_236319
L_236317:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_236315
.p2align 0x4
L_476543:
L_236328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_236329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236329
.p2align 0x4
.long 0x45C
L_236329:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_236316
.p2align 0x4
.long 0x1
L_236320:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236321
L_236326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236327
.p2align 0x4
.long 0x495
L_236327:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236321:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236325
L_236322:
	decl %r15d
	jo L_236323
L_236324:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_236527:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA2E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_236528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x491
L_236416:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_236374:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_236375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasdec_0
.p2align 0x4
.long 0x4B0
L_236335:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236336
L_236370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236371
.p2align 0x4
.long 0x460
L_236371:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236336:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_236338
L_236339:
	movl %r13d,0x20(%rbp)
	movq $0x3BCB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_236340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x51F
L_236528:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x491
L_236417:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x12A4,%r11
	je L_476550
L_236418:
	movb $0x0,0x18(%rbp)
L_236419:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476550:
L_236522:
	movb $0x1,0x18(%rbp)
	jmp L_236419
.p2align 0x4
.long 0x522
L_236375:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236376
L_236405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_236406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236406
.p2align 0x4
.long 0x4E9
L_236406:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_236376:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE2D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x522
L_236340:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236341
L_236368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_236369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236369
.p2align 0x4
.long 0x4E9
L_236369:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_236341:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_476552
L_236342:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_236343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476552:
L_236367:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_236351:
	testl %ecx,%ecx
	jz L_476557
L_236352:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_236353:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236354:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_236323
L_236355:
	cmpq $0x1,%r15
	je L_476553
L_236356:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_236354
.p2align 0x4
L_476553:
L_236357:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236358
L_236360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_236361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236361
.p2align 0x4
.long 0x4A5
L_236361:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_236358:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236325
L_236359:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476557:
L_236362:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_236353
.p2align 0x4
.long 0x4DD
L_236529:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA2E0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x797
L_236420:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasexp_0
.p2align 0x4
.long 0x491
L_236377:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236378
L_236403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_236404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236404
.p2align 0x4
.long 0x4B2
L_236404:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_236378:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236379:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_236323
L_236380:
	cmpq $0x1,%r14
	je L_476559
L_236381:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236379
.p2align 0x4
L_476559:
L_236382:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236383
L_236401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_236402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236402
.p2align 0x4
.long 0x980
L_236402:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_236383:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476560
L_236384:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_236385:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE2E0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476560:
L_236400:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236385
.p2align 0x4
.long 0x600
L_236343:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_236344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x65C
L_236530:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236531
L_236557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_236558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236558
.p2align 0x4
.long 0x63D
L_236558:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_236531:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236532:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_236323
L_236533:
	cmpq $0x1,%r14
	je L_476564
L_236534:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236532
.p2align 0x4
L_476564:
L_236535:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236536
L_236555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_236556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236556
.p2align 0x4
.long 0x1012
L_236556:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_236536:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476565
L_236537:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_236538:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x3,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE2E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_236539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476565:
L_236554:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236538
.p2align 0x4
.long 0xAA1
L_236421:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x491
L_236386:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236387
L_236398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_236399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236399
.p2align 0x4
.long 0x4B2
L_236399:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_236387:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x3,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xDED8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x497
L_236344:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236345
L_236365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_236366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236366
.p2align 0x4
.long 0x63B
L_236366:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_236345:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236346:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_236323
L_236347:
	cmpq $0x1,%r14
	je L_476570
L_236348:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236346
.p2align 0x4
L_476570:
L_236349:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236350
L_236363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_236364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236364
.p2align 0x4
.long 0x523
L_236364:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_236350:
	movq 0x18(%rbp),%r15
	movl 0x10(%rbp),%ecx
	jmp L_236351
.p2align 0x4
.long 0x51F
L_236539:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasdec_0
.p2align 0x4
.long 0xBA1
L_236422:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x71E
L_236388:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236389
L_236396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236397
.p2align 0x4
.long 0x720
L_236397:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236389:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x5F0
L_236540:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236541
L_236552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_236553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236553
.p2align 0x4
.long 0x4EA
L_236553:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_236541:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x3,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xDED8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x114F
L_236423:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236424
L_236520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_236521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236521
.p2align 0x4
.long 0x3AF5
L_236521:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_236424:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_236425:
	addl 0x0(%r15),%ecx
	movl %ecx,0x1C(%rbp)
	jo L_236323
L_236426:
	cmpq $0x1,%r14
	je L_476576
L_236427:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236425
.p2align 0x4
L_476576:
L_236428:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236429
L_236518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236519
.p2align 0x4
.long 0x3AF4
L_236519:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_236429:
	movl 0x1C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476578
L_236430:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_236431:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movb 0x18(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_476577
L_236432:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r13d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl $0x3,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,0x8(%r11)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_236433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_476577:
L_236503:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_236504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476578:
L_236517:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236431
.p2align 0x4
.long 0x1
L_236390:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236391
L_236394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236395
.p2align 0x4
.long 0x495
L_236395:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236391:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236325
L_236392:
	decl %r15d
	jo L_236323
L_236393:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x97F
L_236542:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236543
L_236550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_236551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236551
.p2align 0x4
.long 0x638
L_236551:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_236543:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x2B
L_236433:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236434
L_236501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_236502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236502
.p2align 0x4
.long 0x982
L_236502:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_236434:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476588
L_236435:
	decl %ecx
	jo L_236323
L_236436:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_236437:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_476586
L_236438:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_236439:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476586:
L_236499:
	movq $0x1,%r14
	xchgq %r14,%r15
L_236467:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_476588:
L_236500:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236437
.p2align 0x4
.long 0x8AA
L_236504:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236505
L_236515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_236516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236516
.p2align 0x4
.long 0x520
L_236516:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_236505:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236506:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_236323
L_236507:
	cmpq $0x1,%r14
	je L_476590
L_236508:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236506
.p2align 0x4
L_476590:
L_236509:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236510
L_236513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236514
.p2align 0x4
.long 0xA31
L_236514:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236510:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476591
L_236511:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_236437
.p2align 0x4
L_476591:
L_236512:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236437
.p2align 0x4
.long 0x1
L_236544:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236545
L_236548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236549
.p2align 0x4
.long 0x495
L_236549:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236545:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236325
L_236546:
	decl %r15d
	jo L_236323
L_236547:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_236440:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x12A4,%r11
	je L_476598
L_236441:
	movb $0x0,0x28(%rbp)
L_236442:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_236443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476598:
L_236498:
	movb $0x1,0x28(%rbp)
	jmp L_236442
.p2align 0x4
.long 0x1
L_236468:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236469
L_236472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236473
.p2align 0x4
.long 0x495
L_236473:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236469:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236325
L_236470:
	decl %r15d
	jo L_236323
L_236471:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x113D
L_236443:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasexp_0
.p2align 0x4
.long 0x1859
L_236444:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x113E
L_236445:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_236446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x214C
L_236446:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236447
L_236496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_236497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236497
.p2align 0x4
.long 0x3AF3
L_236497:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_236447:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_236448:
	addl 0x0(%r15),%ecx
	movl %ecx,0x2C(%rbp)
	jo L_236323
L_236449:
	cmpq $0x1,%r14
	je L_476602
L_236450:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236448
.p2align 0x4
L_476602:
L_236451:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236452
L_236494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_236495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236495
.p2align 0x4
.long 0x3AF2
L_236495:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_236452:
	movl 0x2C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476604
L_236453:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_236454:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movb 0x28(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_476603
L_236455:
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r13d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl $0x3,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,0x8(%r11)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_236456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_476603:
L_236479:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476604:
L_236493:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236454
.p2align 0x4
.long 0x80D
L_236456:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236457
L_236477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236478
.p2align 0x4
.long 0x8AC
L_236478:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236457:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476612
L_236458:
	decl %ecx
	jo L_236323
L_236459:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_236460:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_476608
L_236461:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_236439
.p2align 0x4
L_476608:
L_236462:
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_236463:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476610
.p2align 0x4,,0x7
L_236464:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_236467
L_236465:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_236463
.p2align 0x4
L_476610:
L_236474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236475
.p2align 0x4
.long 0x720
L_236475:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_236464
.p2align 0x4
L_476612:
L_236476:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236460
.p2align 0x4
.long 0x5F1
L_236480:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236481
L_236491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_236492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236492
.p2align 0x4
.long 0x5EC
L_236492:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_236481:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236482:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_236323
L_236483:
	cmpq $0x1,%r14
	je L_476614
L_236484:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236482
.p2align 0x4
L_476614:
L_236485:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236486
L_236489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236490
.p2align 0x4
.long 0xA46
L_236490:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_236486:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476615
L_236487:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_236460
.p2align 0x4
L_476615:
L_236488:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236460
.text
.p2align 0x4
.globl layoutBasexp_0
.hidden layoutBasexp_0
layoutBasexp_0:
L_236562:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_236618
L_236563:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476621
L_236564:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12A5,%r15
	je L_476620
	cmpq $0x12A6,%r15
	je L_476619
L_236565:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_476619:
L_236602:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x403,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10500)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_236603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476620:
L_236566:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_236567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasdec_0
.p2align 0x4
L_476621:
L_236618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_236619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236619
.p2align 0x4
.long 0x452
L_236619:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_236564
.p2align 0x4
.long 0x4B0
L_236603:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_236604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasdec_0
.p2align 0x4
.long 0x4B0
L_236567:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_236568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutBasexp_0
.p2align 0x4
.long 0x522
L_236604:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236605
L_236616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_236617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236617
.p2align 0x4
.long 0x4E9
L_236617:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_236605:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x3,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xDED8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x522
L_236568:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236569
L_236600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_236601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236601
.p2align 0x4
.long 0x4E9
L_236601:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_236569:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE370)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E1
L_236606:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236607
L_236614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_236615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236615
.p2align 0x4
.long 0x4E8
L_236615:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_236607:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x491
L_236570:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236571
L_236598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_236599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236599
.p2align 0x4
.long 0x4B2
L_236599:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_236571:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236572:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_476629
L_236574:
	cmpq $0x1,%r14
	je L_476626
L_236575:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236572
.p2align 0x4
L_476626:
L_236576:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236577
L_236596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_236597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236597
.p2align 0x4
.long 0x980
L_236597:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_236577:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476627
L_236578:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_236579:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE2E0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_236580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476627:
L_236595:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_236579
.p2align 0x4
L_476629:
L_236573:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_236608:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236609
L_236612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236613
.p2align 0x4
.long 0x495
L_236613:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236609:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_476632
L_236610:
	decl %r15d
	jo L_236573
L_236611:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476632:
L_236588:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_236580:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236581
L_236593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_236594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236594
.p2align 0x4
.long 0x4B2
L_236594:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_236581:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x3,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xDED8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_236582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x71E
L_236582:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236583
L_236591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236592
.p2align 0x4
.long 0x720
L_236592:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236583:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_236584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x1
L_236584:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236585
L_236589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_236590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236590
.p2align 0x4
.long 0x495
L_236590:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_236585:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_236588
L_236586:
	decl %r15d
	jo L_236573
L_236587:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1974
.hidden x_1974
x_1974:
L_236620:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_236925
L_236621:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476657
L_236622:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_476656
L_236623:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2249,%r15
	je L_476655
L_236630:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_476654
L_236631:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x224C,%rax
	cmpq $0x7,%rax
	ja L_476639
	jmp *jumpTable_703(,%rax,8)
.data
.p2align 0x4
jumpTable_703:
.quad L_476651,L_476650,L_476649,L_476647,L_476645,L_476644,L_476642,L_476641
.text
.p2align 0x4
L_476639:
L_236632:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2260,%r14
	je L_476640
L_236661:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_236634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1976
.p2align 0x4
L_476640:
L_236633:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_236634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1977
.p2align 0x4
L_476641:
L_236900:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_236901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1978
.p2align 0x4
L_476642:
L_236899:
	movq 0x18(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
lexAndParseProgOrMLB_0:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_476643
L_236732:
	movq 0x28(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	leaq err_3(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_236733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandPathVars_0
.p2align 0x4
L_476643:
L_236839:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476644:
L_236890:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_236891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1974
.p2align 0x4
L_476645:
L_236865:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2257,%r14
	je L_476646
L_236889:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_236867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1979
.p2align 0x4
L_476646:
L_236866:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_236867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1980
.p2align 0x4
L_476647:
L_236840:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2262,%r14
	je L_476648
L_236864:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_236842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1981
.p2align 0x4
L_476648:
L_236841:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_236842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1982
.p2align 0x4
L_476649:
L_236731:
	movq 0x18(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
	jmp lexAndParseProgOrMLB_0
.p2align 0x4
L_476650:
L_236695:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_236696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1983
.p2align 0x4
L_476651:
L_236662:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2254,%r14
	je L_476653
L_236686:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x48(%rbp)
	cmpq $0x1,%r14
	je L_476652
L_236687:
	movq %r13,%r15
L_236688:
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	leaq L_236693(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_236689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476652:
L_236694:
	movq (globalObjptr+0xCA28)(%rip),%r14
	movq %r13,%r15
	jmp L_236688
.p2align 0x4
L_476653:
L_236663:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_236664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1984
.p2align 0x4
L_476654:
L_236923:
	movq $0x1,%r15
L_236648:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x403,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_236649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1974
.p2align 0x4
L_476655:
L_236624:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x30(%rbp)
	addq $0x20,%r12
	addq $0x30,%rbp
	leaq (L_236625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1974
.p2align 0x4
L_476656:
L_236924:
	movq (globalObjptr+0xAB0)(%rip),%r15
L_236627:
	movq %r15,0x8(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476657:
L_236925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_236926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236926
.p2align 0x4
.long 0x453
L_236926:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_236622
.p2align 0x4
.long 0x5F1
L_236634:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_476666
L_236635:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236636:
	incl %ecx
	jo L_476665
L_236638:
	cmpq $0x1,%r15
	je L_476659
L_236639:
	movq 0x8(%r15),%r15
	jmp L_236636
.p2align 0x4
L_476659:
L_236640:
L_236641:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_476664
L_236642:
	cmpq $0x7FFFFFFF,%rdx
	ja L_476663
L_236643:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1593,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236644
.p2align 0x4
.long 0xC49
L_236644:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_236645:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2704:
	cmpq 0x48(%rbp),%r15
	jnl L_476661
L_236655:
	cmpq $0x1,%r14
	je L_476660
L_236656:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2704
.p2align 0x4
L_476660:
L_236657:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476661:
L_236646:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236647
L_236653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236654
.p2align 0x4
.long 0x1988
L_236654:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236647:
	movq 0x50(%rbp),%r14
	movq $0x11C1,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x24F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x1C77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_236648
.p2align 0x4
L_476663:
L_236658:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476664:
L_236659:
	movq (globalObjptr+0x3E98)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_236645
.p2align 0x4
L_476665:
L_236637:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476666:
L_236660:
	xorl %ecx,%ecx
	jmp L_236641
.p2align 0x4
.long 0x5F1
L_236901:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_476674
L_236902:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236903:
	incl %ecx
	jo L_476673
L_236905:
	cmpq $0x1,%r15
	je L_476667
L_236906:
	movq 0x8(%r15),%r15
	jmp L_236903
.p2align 0x4
L_476667:
L_236907:
L_236908:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_476672
L_236909:
	cmpq $0x7FFFFFFF,%rdx
	ja L_476671
L_236910:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1595,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236911
.p2align 0x4
.long 0xC49
L_236911:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_236912:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2708:
	cmpq 0x48(%rbp),%r15
	jnl L_476669
L_236917:
	cmpq $0x1,%r14
	je L_476668
L_236918:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2708
.p2align 0x4
L_476668:
L_236919:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476669:
L_236913:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236914
L_236915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236916
.p2align 0x4
.long 0x1988
L_236916:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236914:
	movq 0x50(%rbp),%r14
	movq $0x12D5,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_236648
.p2align 0x4
L_476671:
L_236920:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476672:
L_236921:
	movq (globalObjptr+0x3ED0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_236912
.p2align 0x4
L_476673:
L_236904:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476674:
L_236922:
	xorl %ecx,%ecx
	jmp L_236908
.p2align 0x4
.long 0x2810
L_236733:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	leaq L_236825(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_236734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x72F
err_3:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb err_1
L_236837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236838
.p2align 0x4
.long 0x9AA
L_236838:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
err_1:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x10508)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10510)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	leaq L_236748(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x60,%rbp
	leaq (L_236737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4AB
L_236891:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236892
L_236897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236898
.p2align 0x4
.long 0x9AA
L_236898:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236892:
	movq $0x403,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_236893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1974
.p2align 0x4
.long 0x5F1
L_236867:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_476683
L_236868:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236869:
	incl %ecx
	jo L_476682
L_236871:
	cmpq $0x1,%r15
	je L_476676
L_236872:
	movq 0x8(%r15),%r15
	jmp L_236869
.p2align 0x4
L_476676:
L_236873:
L_236874:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_476681
L_236875:
	cmpq $0x7FFFFFFF,%rdx
	ja L_476680
L_236876:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1593,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236877
.p2align 0x4
.long 0xC49
L_236877:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_236878:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2707:
	cmpq 0x48(%rbp),%r15
	jnl L_476678
L_236883:
	cmpq $0x1,%r14
	je L_476677
L_236884:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2707
.p2align 0x4
L_476677:
L_236885:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476678:
L_236879:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236880
L_236881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236882
.p2align 0x4
.long 0x1988
L_236882:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236880:
	movq 0x50(%rbp),%r14
	movq $0x11C1,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x24F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x1C77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_236648
.p2align 0x4
L_476680:
L_236886:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476681:
L_236887:
	movq (globalObjptr+0x3EB0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_236878
.p2align 0x4
L_476682:
L_236870:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476683:
L_236888:
	xorl %ecx,%ecx
	jmp L_236874
.p2align 0x4
.long 0x5F1
L_236842:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_476691
L_236843:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_236844:
	incl %ecx
	jo L_476690
L_236846:
	cmpq $0x1,%r15
	je L_476684
L_236847:
	movq 0x8(%r15),%r15
	jmp L_236844
.p2align 0x4
L_476684:
L_236848:
L_236849:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_476689
L_236850:
	cmpq $0x7FFFFFFF,%rdx
	ja L_476688
L_236851:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1593,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236852
.p2align 0x4
.long 0xC49
L_236852:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_236853:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2706:
	cmpq 0x48(%rbp),%r15
	jnl L_476686
L_236858:
	cmpq $0x1,%r14
	je L_476685
L_236859:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2706
.p2align 0x4
L_476685:
L_236860:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476686:
L_236854:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236855
L_236856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236857
.p2align 0x4
.long 0x1988
L_236857:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236855:
	movq 0x50(%rbp),%r14
	movq $0x11C1,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x24F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x1C77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_236648
.p2align 0x4
L_476688:
L_236861:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476689:
L_236862:
	movq (globalObjptr+0x3EA8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_236853
.p2align 0x4
L_476690:
L_236845:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476691:
L_236863:
	xorl %ecx,%ecx
	jmp L_236849
.p2align 0x4
.long 0x4AB
L_236696:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_236697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1974
.p2align 0x4
.long 0x913
L_236689:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236690
L_236691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236692
.p2align 0x4
.long 0x9AA
L_236692:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236690:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x26AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1,%r13
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r13,%r15
.p2align 0x4,,0x7
L_236666:
	incl %ecx
	jo L_476698
L_236668:
	cmpq $0x1,%r15
	je L_476692
L_236669:
	movq 0x8(%r15),%r15
	jmp L_236666
.p2align 0x4
L_476692:
L_236670:
	movq %r14,0x40(%rbp)
L_236671:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_476697
L_236672:
	cmpq $0x7FFFFFFF,%rdx
	ja L_476696
L_236673:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x157F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_236674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236674
.p2align 0x4
.long 0xC49
L_236674:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_236675:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2705:
	cmpq 0x48(%rbp),%r15
	jnl L_476694
L_236680:
	cmpq $0x1,%r14
	je L_476693
L_236681:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2705
.p2align 0x4
L_476693:
L_236682:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476694:
L_236676:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236677
L_236678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236679
.p2align 0x4
.long 0x1988
L_236679:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236677:
	movq 0x50(%rbp),%r14
	movq $0xB2F,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_236648
.p2align 0x4
L_476696:
L_236683:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476697:
L_236684:
	movq (globalObjptr+0x3EA0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_236675
.p2align 0x4
L_476698:
L_236667:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_236693:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_236664:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_476700
L_236665:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_236666
.p2align 0x4
L_476700:
L_236685:
	xorl %ecx,%ecx
	jmp L_236671
.p2align 0x4
.long 0x843
L_236649:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236650
L_236651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_236652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236652
.p2align 0x4
.long 0x846
L_236652:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_236650:
	movq $0x403,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1C7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1C6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_236627
.p2align 0x4
.long 0x51A
L_236625:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236626
L_236628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236629
.p2align 0x4
.long 0x720
L_236629:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236626:
	movq $0x403,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1C6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_236627
.p2align 0x4
.long 0x3AF6
L_236734:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236735
L_236834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_236835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236835
.p2align 0x4
.long 0x3AFB
L_236835:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_236735:
	movl 0xA8(%rbp),%r15d
	testl %r15d,%r15d
	jz err_1
L_236749:
	movq 0x98(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_236750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x72F
L_236825:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb err_1
L_236827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236828
.p2align 0x4
.long 0x9AA
L_236828:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp err_1
.p2align 0x4
.long 0x997
L_236737:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_236738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x72F
L_236748:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3AFC
L_236893:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236894
L_236895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_236896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236896
.p2align 0x4
.long 0x2150
L_236896:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_236894:
	movq $0x403,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_236648
.p2align 0x4
.long 0xA7F
L_236697:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236698
L_236729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236730
.p2align 0x4
.long 0x9AA
L_236730:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236698:
	movq $0x403,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	cmpq $0x1,%r14
	je L_476715
L_236699:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_476714
L_236700:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_236701:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476713
.p2align 0x4,,0x7
L_236702:
	movq $0x26DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_476705
L_236703:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_236701
.p2align 0x4
L_476705:
L_236704:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_476712
L_236705:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_236706:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476711
.p2align 0x4,,0x7
L_236707:
	movq $0x26DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_476706
L_236708:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_236706
.p2align 0x4
L_476706:
L_236710:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x1C7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r14)
	cmpq $0x1,%r15
	je L_476710
L_236711:
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
.p2align 0x4,,0x7
L_236712:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476709
.p2align 0x4,,0x7
L_236713:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_476708
L_236714:
	movq 0x0(%r15),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r13,%r14
L_236715:
	movq $0x403,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r11
	movq $0x1C7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_476707
L_236716:
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_236712
.p2align 0x4
L_476707:
L_236717:
	xchgq %r14,%r15
	jmp L_236648
.p2align 0x4
L_476708:
L_236718:
	movq $0x1,%r14
	jmp L_236715
.p2align 0x4
L_476709:
L_236719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_236720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236720
.p2align 0x4
.long 0x8C1
L_236720:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_236713
.p2align 0x4
L_476710:
L_236721:
	movq %r14,%r15
	jmp L_236648
.p2align 0x4
L_476711:
L_236722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_236723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236723
.p2align 0x4
.long 0x9A3
L_236723:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_236707
.p2align 0x4
L_476712:
L_236724:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_236710
.p2align 0x4
L_476713:
L_236725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_236726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236726
.p2align 0x4
.long 0x91F
L_236726:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_236702
.p2align 0x4
L_476714:
L_236727:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476715:
L_236728:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3AF6
L_236750:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movl 0xB0(%rbp),%r15d
	movq 0xB8(%rbp),%r14
	movq %r14,0xB0(%rbp)
	testl %r15d,%r15d
	movl %r15d,0xA8(%rbp)
	jnz L_476717
L_236751:
	movq 0x98(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_236752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_1
.p2align 0x4
L_476717:
L_236833:
	movq 0x98(%rbp),%r15
L_236754:
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_236755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x997
L_236738:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_476718
L_236740:
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_476718:
L_236739:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3AF7
L_236752:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_236753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x3AF7
L_236755:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_476719
L_236756:
	addq $0x98,%rbp
	leaq (L_236757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_476719:
L_236831:
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0x90(%rbp)
L_236761:
	leaq L_236748(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_236762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp splitBaseExt_0
.p2align 0x4
.long 0x5F1
L_236741:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236742
L_236746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236747
.p2align 0x4
.long 0x5E8
L_236747:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236742:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_476720
L_236745:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476720:
L_236744:
	movq (globalObjptr+0xAB0)(%rip),%r15
	jmp L_236648
.p2align 0x4
.long 0x3AF7
L_236753:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_236754
.p2align 0x4
.long 0x3AF8
L_236757:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0xA0(%rbp),%r15d
	movq 0xA8(%rbp),%r14
	movq %r14,0xA0(%rbp)
	testl %r15d,%r15d
	movl %r15d,0x98(%rbp)
	jnz L_236831
L_236758:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_476722
L_236759:
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_236760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkRelative_0
.p2align 0x4
L_476722:
L_236829:
	movq %r15,0x90(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_236761
.p2align 0x4
.long 0x2810
L_236762:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236763
L_236823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_236824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236824
.p2align 0x4
.long 0x215E
L_236824:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_236763:
	cmpq $0x1,0x98(%rbp)
	je err_2
L_236764:
	movq $0x1,%r14
	movq (globalObjptr+0xD420)(%rip),%r15
.p2align 0x4,,0x7
L_236765:
	movq 0x98(%rbp),%r10
	cmpq %r15,%r10
	je L_476738
L_236766:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r15)
	jne L_476736
L_236807:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_189:
	cmpq %r11,%r13
	je L_476734
L_236808:
	movq 0x98(%rbp),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_476724
L_236812:
	incq %r11
	jmp vectorEqualLoop_189
.p2align 0x4
L_476724:
L_236809:
	cmpq $0x1,%r14
	je L_476725
L_236810:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236765
.p2align 0x4
L_476725:
L_236770:
	movq (globalObjptr+0x3EC8)(%rip),%r14
	movq (globalObjptr+0x10518)(%rip),%r15
.p2align 0x4,,0x7
L_236771:
	movq 0x98(%rbp),%r10
	cmpq %r15,%r10
	je L_476732
L_236772:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r15)
	jne L_476730
L_236789:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_188:
	cmpq %r13,%r11
	je L_476728
L_236790:
	movq 0x98(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_476726
L_236797:
	incq %r11
	jmp vectorEqualLoop_188
.p2align 0x4
L_476726:
L_236791:
	cmpq $0x1,%r14
	je L_476727
L_236792:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236771
.p2align 0x4
L_476727:
L_236793:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb err_2
L_236795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236796
.p2align 0x4
.long 0x9AA
L_236796:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
err_2:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x10520)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10510)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_236777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476728:
L_236798:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236800
L_236801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_236802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236802
.p2align 0x4
.long 0x3AF9
L_236802:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_236800:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x294B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x40,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x48(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x60(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x68(%rbp),%r11
	movq %r11,0x20(%r13)
	movq %r14,0x28(%r13)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r13)
	movq $0x12D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x1C6F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_236648
.p2align 0x4
L_476730:
L_236773:
	cmpq $0x1,%r14
	je L_476731
L_236774:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236771
.p2align 0x4
L_476731:
L_236775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb err_2
L_236787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236788
.p2align 0x4
.long 0x9AA
L_236788:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp err_2
.p2align 0x4
L_476732:
L_236803:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236800
L_236805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_236806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236806
.p2align 0x4
.long 0x3AF9
L_236806:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_236800
.p2align 0x4
L_476734:
L_236813:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236815
L_236816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_236817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236817
.p2align 0x4
.long 0x3AFA
L_236817:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_236815:
	movq $0x8C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq (globalObjptr+0xAB8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq 0x58(%rbp),%r13
	movq 0xB0(%r13),%r11
	movq 0xA8(%r13),%r10
	movq 0xA0(%r13),%r9
	movq 0x98(%r13),%r8
	movq 0x90(%r13),%rsp
	movq 0x88(%r13),%rsi
	movq 0x80(%r13),%rdi
	movq 0x10(%r13),%rdx
	movq $0xDE5,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	addq $0x18,%r12
	movq 0x80(%rbp),%rbx
	movq %rbx,0x0(%rcx)
	movq 0x88(%rbp),%rax
	movq %rax,0x8(%rcx)
	movq $0x40B7,0x0(%r12)
	movq %rcx,(localObjptr+0x48)(%rip)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %r15,0x0(%rcx)
	movq %r11,0x10(%rcx)
	movq %r10,0x20(%rcx)
	movq %r9,0x30(%rcx)
	movq %r8,0x38(%rcx)
	movq %rdx,0x40(%rcx)
	movq %rsp,0x48(%rcx)
	movq %rdi,0x68(%rcx)
	movq %rsi,0x78(%rcx)
	addq $0x88,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rcx)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rcx)
	movq %r13,0x28(%rcx)
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rcx)
	movq %r14,0x58(%rcx)
	movq %rax,0x60(%rcx)
	movq %rbx,0x70(%rcx)
	movq $0x294F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rcx,0x0(%r15)
	addq $0x10,%r12
	movq $0xFB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1C73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x48)(%rip),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	jmp L_236648
.p2align 0x4
L_476736:
L_236767:
	cmpq $0x1,%r14
	je L_236770
L_236768:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_236765
.p2align 0x4
L_476738:
L_236818:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236815
L_236820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_236821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236821
.p2align 0x4
.long 0x3AFA
L_236821:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_236815
.p2align 0x4
.long 0x3AF8
L_236760:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq 0x80(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_236761
.p2align 0x4
.long 0x997
L_236777:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_236778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x997
L_236778:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_476741
L_236780:
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_476741:
L_236779:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_236781:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236782
L_236785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236786
.p2align 0x4
.long 0x5E8
L_236786:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236782:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_236744
L_236784:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1977
.hidden x_1977
x_1977:
L_236927:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_236928
L_236952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_236953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236953
.p2align 0x4
.long 0x45D
L_236953:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_236928:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_476744
L_236951:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_236930:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	leaq L_236950(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_236931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476744:
	movq %r11,%r15
	jmp L_236930
.p2align 0x4
.long 0x639
L_236931:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236932
L_236948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236949
.p2align 0x4
.long 0xE3F
L_236949:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236932:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_476746
L_236933:
L_236934:
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	leaq L_236946(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x60,%rbp
	leaq (L_236935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476746:
L_236947:
	movq (globalObjptr+0xCA28)(%rip),%r14
	jmp L_236934
.p2align 0x4
.long 0x25
L_236950:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1498
L_236935:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236936
L_236944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_236945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236945
.p2align 0x4
.long 0x3AFD
L_236945:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_236936:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_476748
L_236937:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1985
.p2align 0x4
L_476748:
L_236943:
	movq $0x1,%r14
	xchgq %r14,%r15
L_236940:
	movq $0x10F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x26D9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_236946:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79C
L_236938:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236939
L_236941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236942
.p2align 0x4
.long 0x816
L_236942:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236939:
	movq 0x20(%rbp),%r15
	jmp L_236940
.text
.p2align 0x4
.globl x_1985
.hidden x_1985
x_1985:
L_236954:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_236955
L_236958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_236959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236959
.p2align 0x4
.long 0x452
L_236959:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_236955:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2260,%r14
	je L_476751
L_236957:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp x_1976
.p2align 0x4
L_476751:
L_236956:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp x_1977
.text
.p2align 0x4
.globl x_1976
.hidden x_1976
x_1976:
L_236960:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_236961
L_236977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_236978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236978
.p2align 0x4
.long 0x45D
L_236978:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_236961:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_476753
L_236976:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_236963:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	leaq L_236975(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_236964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476753:
	movq %r11,%r15
	jmp L_236963
.p2align 0x4
.long 0x639
L_236964:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236965
L_236973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_236974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236974
.p2align 0x4
.long 0xE3F
L_236974:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236965:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_476755
L_236966:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_236967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1985
.p2align 0x4
L_476755:
L_236972:
	movq $0x1,%r14
	xchgq %r14,%r15
L_236969:
	movq $0x10F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq $0x26D9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_236975:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_236967:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236968
L_236970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236971
.p2align 0x4
.long 0x7B6
L_236971:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236968:
	movq 0x20(%rbp),%r15
	jmp L_236969
.text
.p2align 0x4
.globl x_1984
.hidden x_1984
x_1984:
L_236979:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_236980
L_237004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_237005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237005
.p2align 0x4
.long 0x45D
L_237005:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_236980:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_476758
L_237003:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_236982:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	leaq L_237002(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_236983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476758:
	movq %r11,%r15
	jmp L_236982
.p2align 0x4
.long 0x639
L_236983:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236984
L_237000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_237001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237001
.p2align 0x4
.long 0xE3F
L_237001:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_236984:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2254,%r15
	je L_476761
L_236991:
	movq 0x18(%r13),%r11
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x28(%rbp)
	cmpq $0x1,%r11
	jne L_476760
L_236999:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_236993:
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	leaq L_236998(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x48,%rbp
	leaq (L_236994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476760:
	movq %r11,%r15
	jmp L_236993
.p2align 0x4
L_476761:
L_236985:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_236986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1984
.p2align 0x4
.long 0x25
L_237002:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_236994:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236995
L_236996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236997
.p2align 0x4
.long 0x5EF
L_236997:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236995:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x26AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
L_236988:
	movq $0x26AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_236998:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_236986:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_236987
L_236989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_236990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_236990
.p2align 0x4
.long 0x7B6
L_236990:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_236987:
	movq 0x20(%rbp),%r15
	jmp L_236988
.text
.p2align 0x4
.globl x_1983
.hidden x_1983
x_1983:
L_237006:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_237016
L_237007:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476766
L_237008:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x10EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_476765
L_237009:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x43B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x18(%rbp)
	addq $0x18,%r12
	addq $0x18,%rbp
	leaq (L_237010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1983
.p2align 0x4
L_476765:
L_237015:
	movq $0x1,%r15
L_237012:
	movq $0x26DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476766:
L_237016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_237017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237017
.p2align 0x4
.long 0x452
L_237017:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_237008
.p2align 0x4
.long 0x522
L_237010:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237011
L_237013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_237014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237014
.p2align 0x4
.long 0x4E9
L_237014:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_237011:
	movq 0x10(%rbp),%r15
	jmp L_237012
.text
.p2align 0x4
.globl expandPathVars_0
.hidden expandPathVars_0
expandPathVars_0:
L_237018:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237019
L_237228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_237229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237229
.p2align 0x4
.long 0x75D
L_237229:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_237019:
	movq 0x18(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
loop_2709:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476792
.p2align 0x4,,0x7
L_237020:
	movq 0x48(%rbp),%r15
	cmpq $0x0,%r15
	jl L_476769
L_237021:
	movq %r15,%r14
	decq %r14
	movq 0x10(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r11b
	movq %r14,0x48(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp loop_2709
.p2align 0x4
L_476769:
L_237022:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_476791
L_237023:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_237024:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476790
.p2align 0x4,,0x7
L_237025:
	cmpb $0x24,0x40(%rbp)
	jne x_823
L_237063:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_823
L_237064:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	cmpb $0x28,0x0(%r15)
	je L_476780
x_823:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_476770
L_237026:
	movq %r15,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0x40(%rbp)
	jmp L_237024
.p2align 0x4
L_476770:
L_237027:
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
L_237028:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_476779
L_237029:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_237030:
	incl %ecx
	cmpq $0x1,%r15
	je L_476771
L_237031:
	movq 0x8(%r15),%r15
	jmp L_237030
.p2align 0x4
L_476771:
L_237032:
L_237033:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_476778
L_237034:
	cmpq $0x7FFFFFFF,%rdx
	ja L_476777
L_237035:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_237036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237036
.p2align 0x4
.long 0x793
L_237036:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_237037:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2710:
	cmpq 0x40(%rbp),%r15
	jnl L_476773
L_237056:
	cmpq $0x1,%r14
	je L_476772
L_237057:
	movq 0x8(%r14),%r13
	movq 0x48(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_2710
.p2align 0x4
L_476772:
L_237058:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476773:
L_237038:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237039
L_237054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_237055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237055
.p2align 0x4
.long 0xBC6
L_237055:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_237039:
	movq 0x48(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_476775
L_237041:
	movl %r13d,%r14d
	decl %r14d
	jo L_476774
L_237043:
	movq $0x3F75,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movq %r15,0x8(%r11)
	movq %r11,0x40(%rbp)
	movl %r13d,0x48(%rbp)
	leaq L_237053(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_237044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_476774:
L_237042:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476775:
L_237040:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476777:
L_237059:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476778:
L_237060:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_237037
.p2align 0x4
L_476779:
L_237061:
	xorl %ecx,%ecx
	jmp L_237033
.p2align 0x4
L_476780:
L_237065:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476789
L_237066:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_237067:
	incl %ecx
	cmpq $0x1,%r15
	je L_476781
L_237068:
	movq 0x8(%r15),%r15
	jmp L_237067
.p2align 0x4
L_476781:
L_237069:
L_237070:
	movslq %ecx,%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_476788
L_237071:
	cmpq $0x7FFFFFFF,%rdx
	ja L_476787
L_237072:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_237073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237073
.p2align 0x4
.long 0x3AFE
L_237073:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x40(%rbp)
L_237074:
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2711:
	cmpq 0x10(%rbp),%r15
	jnl L_476783
L_237217:
	cmpq $0x1,%r14
	je L_476782
L_237218:
	movq 0x8(%r14),%r13
	movq 0x40(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_2711
.p2align 0x4
L_476782:
L_237219:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476783:
L_237075:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237076
L_237215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_237216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237216
.p2align 0x4
.long 0x3B09
L_237216:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_237076:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_476785
L_237078:
	movl %r13d,%r14d
	decl %r14d
	jo L_476784
L_237080:
	movl %r13d,0x70(%rbp)
	movq $0x3F75,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x68(%rbp)
	leaq L_237214(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x68,%rbp
	leaq (L_237081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_476784:
L_237079:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476785:
L_237077:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476787:
L_237220:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476788:
L_237221:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_237074
.p2align 0x4
L_476789:
L_237222:
	xorl %ecx,%ecx
	jmp L_237070
.p2align 0x4
L_476790:
L_237223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237224
.p2align 0x4
.long 0x3B0A
L_237224:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_237025
.p2align 0x4
L_476791:
L_237225:
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_237028
.p2align 0x4
L_476792:
L_237226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_237227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237227
.p2align 0x4
.long 0x3B0B
L_237227:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_237020
.p2align 0x4
.long 0x69C
L_237044:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_237045:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476795
.p2align 0x4,,0x7
L_237046:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_476794
L_237047:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_237045
.p2align 0x4
L_476794:
L_237048:
	movq %r15,0x38(%rbp)
	leaq L_237050(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x38,%rbp
	leaq (L_237049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476795:
L_237051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_237052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237052
.p2align 0x4
.long 0x86B
L_237052:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_237046
.p2align 0x4
.long 0x474
L_237053:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3AFF
L_237081:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237082
L_237212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_237213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237213
.p2align 0x4
.long 0x3B08
L_237213:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_237082:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_237089
L_237083:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_237084:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476807
.p2align 0x4,,0x7
L_237085:
	movb 0x48(%rbp),%r15b
	cmpb $0x29,%r15b
	je L_476797
L_237086:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_476796
L_237087:
	movq %r14,0x50(%rbp)
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movb %r14b,0x48(%rbp)
	jmp L_237084
.p2align 0x4
L_476796:
L_237089:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476797:
L_237090:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476806
L_237091:
	movq 0x8(%r14),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_237092:
	incl %ecx
	cmpq $0x1,%r15
	je L_476798
L_237093:
	movq 0x8(%r15),%r15
	jmp L_237092
.p2align 0x4
L_476798:
L_237094:
L_237095:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_476805
L_237096:
	cmpq $0x7FFFFFFF,%rdx
	ja L_476804
L_237097:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237098
.p2align 0x4
.long 0x3B00
L_237098:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_237099:
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2712:
	cmpq 0x48(%rbp),%r15
	jnl L_476800
L_237203:
	cmpq $0x1,%r14
	je L_476799
L_237204:
	movq 0x8(%r14),%r13
	movq 0x58(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_2712
.p2align 0x4
L_476799:
L_237205:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476800:
L_237100:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237101
L_237201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_237202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237202
.p2align 0x4
.long 0x3B03
L_237202:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_237101:
	movq 0x58(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_476802
L_237103:
	movl %r13d,%r14d
	decl %r14d
	jo L_476801
L_237105:
	movq $0x3F75,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movq %r15,0x8(%r11)
	movq %r11,0x50(%rbp)
	movl %r13d,0x58(%rbp)
	leaq L_237200(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x50,%rbp
	leaq (L_237106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_476801:
L_237104:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476802:
L_237102:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476804:
L_237206:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476805:
L_237207:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_237099
.p2align 0x4
L_476806:
L_237208:
	xorl %ecx,%ecx
	jmp L_237095
.p2align 0x4
L_476807:
L_237209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237210
.p2align 0x4
.long 0x3B00
L_237210:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_237085
.p2align 0x4
.long 0x474
L_237214:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_237049:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
L_237050:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1126
L_237106:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_237113
L_237107:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_237108:
	movq 0x48(%rbp),%r10
	cmpq %r15,%r10
	je L_237173
L_237109:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r10)
	jne L_476822
L_237166:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_191:
	cmpq %r13,%r11
	je L_476821
L_237167:
	movq 0x48(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_476810
L_237171:
	incq %r11
	jmp vectorEqualLoop_191
.p2align 0x4
L_476810:
L_237168:
	cmpq $0x1,%r14
	je L_476811
L_237169:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_237108
.p2align 0x4
L_476811:
L_237113:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_237120
L_237114:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
.p2align 0x4,,0x7
L_237115:
	movq 0x50(%rbp),%r10
	movq 0x0(%r10),%r14
	movq 0x48(%rbp),%r10
	cmpq %r14,%r10
	je L_476818
L_237116:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r10)
	jne L_476816
L_237144:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_190:
	cmpq %r13,%r11
	je L_476814
L_237145:
	movq 0x48(%rbp),%r10
	movb 0x0(%r14,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_476812
L_237149:
	incq %r11
	jmp vectorEqualLoop_190
.p2align 0x4
L_476812:
L_237146:
	cmpq $0x1,%r15
	je L_476813
L_237147:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x50(%rbp)
	jmp L_237115
.p2align 0x4
L_476813:
L_237120:
	leaq L_237050(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x10528)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_237121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476814:
L_237150:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237152
L_237159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237160
.p2align 0x4
.long 0x3B04
L_237160:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_237152:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_237153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandPathVars_0
.p2align 0x4
L_476816:
L_237117:
	cmpq $0x1,%r15
	je L_237120
L_237118:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x50(%rbp)
	jmp L_237115
.p2align 0x4
L_476818:
L_237161:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237152
L_237163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237164
.p2align 0x4
.long 0x3B04
L_237164:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_237152
.p2align 0x4
L_476821:
L_237173:
	leaq L_237050(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x10530)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_237174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_476822:
L_237110:
	cmpq $0x1,%r14
	je L_237113
L_237111:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_237108
.p2align 0x4
.long 0x474
L_237200:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B01
L_237121:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_237122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1126
L_237153:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237154
L_237157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_237158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237158
.p2align 0x4
.long 0x3AB6
L_237158:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_237154:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_476826
L_237155:
	movq %r15,0x48(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0x40(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_237024
.p2align 0x4
L_476826:
L_237156:
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_237028
.p2align 0x4
.long 0x3B01
L_237174:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movl $0x0,0x58(%rbp)
	movq $0x1,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x48(%rbp)
L_237175:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_237176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3B02
L_237122:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237123
L_237142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237143
.p2align 0x4
.long 0x3B04
L_237143:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_237123:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_237124:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_476832
L_237126:
	cmpq $0x1,%r14
	je L_476828
L_237127:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_237124
.p2align 0x4
L_476828:
L_237128:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237129
L_237140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_237141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237141
.p2align 0x4
.long 0x3B03
L_237141:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_237129:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_476830
L_237130:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_237131:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_476829
L_237133:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_237134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_476829:
L_237132:
	movq 0x28(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_476830:
L_237139:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_237131
.p2align 0x4
L_476832:
L_237125:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B05
L_237176:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237177
L_237196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_237197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237197
.p2align 0x4
.long 0x3B07
L_237197:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_237177:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x58(%rbp),%r14d
	incl %r14d
	jo L_476837
L_237179:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_476834
L_237180:
	movl %r14d,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_237175
.p2align 0x4
L_476834:
L_237181:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_237182:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476836
.p2align 0x4,,0x7
L_237183:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_476835
L_237184:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_237182
.p2align 0x4
L_476835:
L_237185:
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_237186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_476836:
L_237194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_237195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237195
.p2align 0x4
.long 0x3B06
L_237195:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_237183
.p2align 0x4
L_476837:
L_237178:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1126
L_237134:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_476840
L_237135:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_476839
L_237136:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movb %r14b,0x40(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_237024
.p2align 0x4
L_476839:
L_237137:
	movq 0x40(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_237028
.p2align 0x4
L_476840:
L_237138:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B02
L_237186:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_476841
L_237188:
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x68(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_237189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_476841:
L_237187:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1126
L_237189:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_476843
L_237190:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_476842
L_237191:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movb %r14b,0x40(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_237024
.p2align 0x4
L_476842:
L_237192:
	movq 0x40(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_237028
.p2align 0x4
L_476843:
L_237193:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1982
.hidden x_1982
x_1982:
L_237230:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237231
L_237247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_237248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237248
.p2align 0x4
.long 0x45D
L_237248:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_237231:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_476844
L_237246:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_237233:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	leaq L_237245(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_237234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476844:
	movq %r11,%r15
	jmp L_237233
.p2align 0x4
.long 0x639
L_237234:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237235
L_237243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_237244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237244
.p2align 0x4
.long 0xE3F
L_237244:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_237235:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_476846
L_237236:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_237237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1988
.p2align 0x4
L_476846:
L_237242:
	movq $0x1,%r14
	xchgq %r14,%r15
L_237239:
	movq $0x10F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq $0x26D7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_237245:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_237237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237238
L_237240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_237241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237241
.p2align 0x4
.long 0x7B6
L_237241:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_237238:
	movq 0x20(%rbp),%r15
	jmp L_237239
.text
.p2align 0x4
.globl x_1988
.hidden x_1988
x_1988:
L_237249:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237250
L_237253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_237254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237254
.p2align 0x4
.long 0x452
L_237254:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_237250:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2262,%r14
	je L_476849
L_237252:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp x_1981
.p2align 0x4
L_476849:
L_237251:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp x_1982
.text
.p2align 0x4
.globl x_1981
.hidden x_1981
x_1981:
L_237255:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237256
L_237280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_237281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237281
.p2align 0x4
.long 0x45D
L_237281:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_237256:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_476851
L_237279:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_237258:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	leaq L_237278(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_237259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476851:
	movq %r11,%r15
	jmp L_237258
.p2align 0x4
.long 0x639
L_237259:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237260
L_237276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_237277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237277
.p2align 0x4
.long 0xE3F
L_237277:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_237260:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_476853
L_237261:
L_237262:
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	leaq L_237274(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x60,%rbp
	leaq (L_237263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476853:
L_237275:
	movq (globalObjptr+0xCA28)(%rip),%r14
	jmp L_237262
.p2align 0x4
.long 0x25
L_237278:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1498
L_237263:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237264
L_237272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237273
.p2align 0x4
.long 0x3AFD
L_237273:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_237264:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_476855
L_237265:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_237266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1988
.p2align 0x4
L_476855:
L_237271:
	movq $0x1,%r14
	xchgq %r14,%r15
L_237268:
	movq $0x10F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x26D7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_237274:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79C
L_237266:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237267
L_237269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_237270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237270
.p2align 0x4
.long 0x816
L_237270:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_237267:
	movq 0x20(%rbp),%r15
	jmp L_237268
.text
.p2align 0x4
.globl x_1980
.hidden x_1980
x_1980:
L_237282:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237283
L_237299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_237300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237300
.p2align 0x4
.long 0x45D
L_237300:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_237283:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_476858
L_237298:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_237285:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	leaq L_237297(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_237286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476858:
	movq %r11,%r15
	jmp L_237285
.p2align 0x4
.long 0x639
L_237286:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237287
L_237295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_237296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237296
.p2align 0x4
.long 0xE3F
L_237296:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_237287:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_476860
L_237288:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_237289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1989
.p2align 0x4
L_476860:
L_237294:
	movq $0x1,%r14
	xchgq %r14,%r15
L_237291:
	movq $0x10F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq $0x26D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_237297:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_237289:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237290
L_237292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_237293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237293
.p2align 0x4
.long 0x7B6
L_237293:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_237290:
	movq 0x20(%rbp),%r15
	jmp L_237291
.text
.p2align 0x4
.globl x_1989
.hidden x_1989
x_1989:
L_237301:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237302
L_237305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_237306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237306
.p2align 0x4
.long 0x452
L_237306:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_237302:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2257,%r14
	je L_476863
L_237304:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp x_1979
.p2align 0x4
L_476863:
L_237303:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp x_1980
.text
.p2align 0x4
.globl x_1979
.hidden x_1979
x_1979:
L_237307:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237308
L_237332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_237333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237333
.p2align 0x4
.long 0x45D
L_237333:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_237308:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_476865
L_237331:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_237310:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	leaq L_237330(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_237311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476865:
	movq %r11,%r15
	jmp L_237310
.p2align 0x4
.long 0x639
L_237311:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237312
L_237328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_237329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237329
.p2align 0x4
.long 0xE3F
L_237329:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_237312:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_476867
L_237313:
L_237314:
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	leaq L_237326(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x60,%rbp
	leaq (L_237315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476867:
L_237327:
	movq (globalObjptr+0xCA28)(%rip),%r14
	jmp L_237314
.p2align 0x4
.long 0x25
L_237330:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1498
L_237315:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237316
L_237324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237325
.p2align 0x4
.long 0x3AFD
L_237325:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_237316:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_476869
L_237317:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_237318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1989
.p2align 0x4
L_476869:
L_237323:
	movq $0x1,%r14
	xchgq %r14,%r15
L_237320:
	movq $0x10F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x26D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_237326:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79C
L_237318:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237319
L_237321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_237322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237322
.p2align 0x4
.long 0x816
L_237322:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_237319:
	movq 0x20(%rbp),%r15
	jmp L_237320
.text
.p2align 0x4
.globl x_1978
.hidden x_1978
x_1978:
L_237334:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237335
L_237355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_237356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237356
.p2align 0x4
.long 0x45D
L_237356:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_237335:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_476872
L_237354:
	movq (globalObjptr+0xCA28)(%rip),%r11
	movq %r11,%r15
L_237337:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	leaq L_237353(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_237338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476872:
	movq %r11,%r15
	jmp L_237337
.p2align 0x4
.long 0x639
L_237338:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237339
L_237351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_237352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237352
.p2align 0x4
.long 0xE3F
L_237352:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_237339:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_237340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1990
.p2align 0x4
.long 0x25
L_237353:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78E
L_237340:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237341
L_237349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_237350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237350
.p2align 0x4
.long 0x7A0
L_237350:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_237341:
	movq $0x10ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_476875
L_237342:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_237343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1978
.p2align 0x4
L_476875:
L_237348:
	movq $0x1,%r14
	xchgq %r14,%r15
L_237345:
	movq $0x10EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x26DB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C0
L_237343:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237344
L_237346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_237347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237347
.p2align 0x4
.long 0x7C1
L_237347:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_237344:
	movq 0x20(%rbp),%r15
	jmp L_237345
.text
.p2align 0x4
.globl x_1990
.hidden x_1990
x_1990:
L_237357:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_237384
L_237358:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476881
L_237359:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x225D,%r14
	je L_476880
	cmpq $0x225E,%r14
	je L_476879
L_237360:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r14
	je L_476878
L_237361:
	movq %r13,%r15
L_237362:
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	leaq L_237368(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_237363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_476878:
L_237369:
	movq (globalObjptr+0xCA28)(%rip),%r14
	movq %r13,%r15
	jmp L_237362
.p2align 0x4
L_476879:
L_237375:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_237376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1974
.p2align 0x4
L_476880:
L_237370:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x3EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x30(%rbp)
	addq $0x20,%r12
	addq $0x30,%rbp
	leaq (L_237371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1974
.p2align 0x4
L_476881:
L_237384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_237385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237385
.p2align 0x4
.long 0x453
L_237385:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_237359
.p2align 0x4
.long 0x511
L_237363:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237364
L_237366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_237367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237367
.p2align 0x4
.long 0x5E8
L_237367:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_237364:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2549,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
L_237365:
	movq %r15,0x8(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72F
L_237368:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_237376:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237377
L_237382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_237383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237383
.p2align 0x4
.long 0x5E8
L_237383:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_237377:
	movq $0x403,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_237378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1990
.p2align 0x4
.long 0x51A
L_237371:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237372
L_237373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_237374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237374
.p2align 0x4
.long 0x720
L_237374:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_237372:
	movq $0x254D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_237365
.p2align 0x4
.long 0x843
L_237378:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237379
L_237380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_237381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237381
.p2align 0x4
.long 0x846
L_237381:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_237379:
	movq $0x10ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x254B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_237365
.text
.p2align 0x4
.globl x_1973
.hidden x_1973
x_1973:
L_237386:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_237387
L_238246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_238247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238247
.p2align 0x4
.long 0x75D
L_238247:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_237387:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_237388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_10
.p2align 0x4
.long 0x3B0C
L_237388:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_477111
L_237389:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_237390:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477110
.p2align 0x4,,0x7
L_237391:
	movq $0x285B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476888
L_237392:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_237390
.p2align 0x4
L_476888:
L_237393:
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
L_237394:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477109
.p2align 0x4,,0x7
L_237395:
	movl 0x34(%rbp),%r15d
	movl %r15d,%r14d
	incl %r14d
	jo L_477108
L_237397:
	movq $0x1021,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x2865,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_476889
L_237398:
	movq %r15,0x60(%rbp)
	movl %r14d,0x34(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_237394
.p2align 0x4
L_476889:
L_237399:
	movq %r15,0x50(%rbp)
L_237400:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_477107
L_237401:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_237402:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477106
.p2align 0x4,,0x7
L_237403:
	movq $0x2865,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_476890
L_237404:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_237402
.p2align 0x4
L_476890:
L_237405:
	movq 0x68(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_237406:
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq (globalObjptr+0x4A70)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x4A48)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0x88(%rbp)
L_237407:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477105
.p2align 0x4,,0x7
L_237408:
	movq $0x1EE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_476891
L_237409:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_237407
.p2align 0x4
L_476891:
L_237410:
	movq 0x88(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x80(%rbp)
L_237411:
	movq 0x0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_477104
L_237412:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_237413:
	cmpl $0x3,%ecx
	je L_476893
L_237414:
	cmpq $0x1,%r14
	je L_476892
L_237415:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	jmp L_237413
.p2align 0x4
L_476892:
L_237417:
	movq %r15,0xA0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_237418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp do_delete_0
.p2align 0x4
L_476893:
.p2align 0x4,,0x7
L_238233:
	cmpq $0x1,0x80(%rbp)
	jne L_477102
L_238234:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_238223:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_476894
L_238224:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_237411
.p2align 0x4
L_476894:
L_237446:
	cmpq $0x1,0x60(%rbp)
	je L_477100
L_237447:
	cmpq $0x1,%r15
	je L_477099
L_237448:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
L_237449:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477098
.p2align 0x4,,0x7
L_237450:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_476895
L_237451:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_237449
.p2align 0x4
L_476895:
L_237452:
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
L_237453:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477097
.p2align 0x4,,0x7
L_237454:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_476896
L_237455:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_237453
.p2align 0x4
L_476896:
L_237457:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_476897
L_237458:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_237406
.p2align 0x4
L_476897:
L_237459:
	movq %r15,0x58(%rbp)
L_237460:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_476903
L_237461:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_237462:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476902
.p2align 0x4,,0x7
L_237463:
	movq $0x2865,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_476898
L_237464:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_237462
.p2align 0x4
L_476898:
L_237465:
	movq 0x70(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq $0x1,0x68(%rbp)
L_237466:
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x80(%rbp)
	movq (globalObjptr+0x4A30)(%rip),%r15
	movq %r15,0x88(%rbp)
	movl $0x1,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_237467:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_476901
.p2align 0x4,,0x7
L_237468:
	movq $0x1EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_476899
L_237469:
	movq %r15,0x98(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movl %r15d,0x90(%rbp)
	jmp L_237467
.p2align 0x4
L_476899:
L_237470:
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x90(%rbp),%ecx
	movq $0x1,0x90(%rbp)
L_237471:
	testl %ecx,%ecx
	jz L_476900
L_237472:
	movq $0x1,%r15
L_237473:
	movq $0x1015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1017,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x2867,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0xC0(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movl 0x34(%rbp),%r14d
	movl %r14d,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xA0,%rbp
	leaq (L_237474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_0
.p2align 0x4
L_476900:
L_238202:
	movq (globalObjptr+0x4A80)(%rip),%r15
	jmp L_237473
.p2align 0x4
L_476901:
L_238203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_238204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238204
.p2align 0x4
.long 0x3B33
L_238204:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_237468
.p2align 0x4
L_476902:
L_238205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_238206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238206
.p2align 0x4
.long 0x3B24
L_238206:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_237463
.p2align 0x4
L_476903:
L_238207:
	movq $0x1,0x60(%rbp)
L_237503:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_477096
L_237504:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_237505:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477095
.p2align 0x4,,0x7
L_237506:
	movq $0x2865,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_476904
L_237507:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_237505
.p2align 0x4
L_476904:
L_237508:
	movq 0x78(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_237509:
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x98(%rbp)
	cmpl $0x3,0x0(%r11)
	jne L_477092
L_238178:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_477090
L_238179:
.p2align 0x4,,0x7
L_237545:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_476905
L_237546:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_237509
.p2align 0x4
L_476905:
L_237547:
	movq %r15,0x68(%rbp)
L_237548:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_477089
L_237549:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_237550:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477088
.p2align 0x4,,0x7
L_237551:
	movq $0x2865,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_476906
L_237552:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_237550
.p2align 0x4
L_476906:
L_237553:
	movq 0x80(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_237554:
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x98(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x88(%rbp)
	movq $0x1,0xA0(%rbp)
	movl $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
loop_2713:
	movl 0xA8(%rbp),%r14d
	testl %r14d,%r14d
	jz L_477084
L_237555:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xB8(%rbp)
	cmpl $0x3,0x0(%r13)
	jne L_477081
L_237563:
	cmpq $0x1,0x78(%rbp)
	jne L_477079
L_238122:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_238123:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_476907
L_238124:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_237554
.p2align 0x4
L_476907:
L_238125:
	movq %r15,0x70(%rbp)
L_237568:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_477078
L_237569:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_237570:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477077
.p2align 0x4,,0x7
L_237571:
	movq $0x2865,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_476908
L_237572:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_237570
.p2align 0x4
L_476908:
L_237573:
	movq 0x88(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_237574:
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x90(%rbp)
	movq $0x1,0xA8(%rbp)
	movl $0x2,0xB0(%rbp)
.p2align 0x4,,0x7
loop_2714:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_477073
L_237575:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xC0(%rbp)
	cmpl $0x3,0x0(%r13)
	jne L_477070
L_237583:
	cmpq $0x1,0x80(%rbp)
	jne L_477068
L_238088:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_238089:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_476909
L_238090:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_237574
.p2align 0x4
L_476909:
L_238091:
	movq %r15,0x78(%rbp)
L_237588:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_477067
L_237589:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_237590:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477066
.p2align 0x4,,0x7
L_237591:
	movq $0x2865,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476910
L_237592:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_237590
.p2align 0x4
L_476910:
L_237593:
	movq 0x88(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_237594:
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x90(%rbp)
	movq $0x1,0xA8(%rbp)
	movl $0x3,0xB0(%rbp)
.p2align 0x4,,0x7
loop_2715:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_477062
L_237595:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xC0(%rbp)
	cmpl $0x3,0x0(%r13)
	jne L_477059
L_237603:
	cmpq $0x1,0x80(%rbp)
	jne L_477057
L_238054:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_238055:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476911
L_238056:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_237594
.p2align 0x4
L_476911:
L_238057:
	movq %r15,0x50(%rbp)
L_237608:
	cmpq $0x1,0x50(%rbp)
	je L_477055
L_237609:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_477054
L_237610:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_237611:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477053
.p2align 0x4,,0x7
L_237612:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_476912
L_237613:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_237611
.p2align 0x4
L_476912:
L_237614:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_237615:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477052
.p2align 0x4,,0x7
L_237616:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476913
L_237617:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_237615
.p2align 0x4
L_476913:
L_237619:
	cmpq $0x1,%r15
	je L_477050
L_237620:
	movq %r15,0x50(%rbp)
L_237621:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_477049
L_237622:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_237623:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477048
.p2align 0x4,,0x7
L_237624:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_476914
L_237625:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_237623
.p2align 0x4
L_476914:
L_237626:
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_237627:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477047
.p2align 0x4,,0x7
L_237628:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476915
L_237629:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_237627
.p2align 0x4
L_476915:
L_237631:
	cmpq $0x1,%r15
	je L_477045
L_237632:
	movq %r15,0x50(%rbp)
L_237633:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_477044
L_237634:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_237635:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477043
.p2align 0x4,,0x7
L_237636:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_476916
L_237637:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_237635
.p2align 0x4
L_476916:
L_237638:
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_237639:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477042
.p2align 0x4,,0x7
L_237640:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476917
L_237641:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_237639
.p2align 0x4
L_476917:
L_237643:
	cmpq $0x1,%r15
	je L_477040
L_237644:
	movq %r15,0x50(%rbp)
L_237645:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_477039
L_237646:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_237647:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477038
.p2align 0x4,,0x7
L_237648:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_476918
L_237649:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_237647
.p2align 0x4
L_476918:
L_237650:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_237651:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477037
.p2align 0x4,,0x7
L_237652:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476919
L_237653:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_237651
.p2align 0x4
L_476919:
L_237655:
	cmpq $0x1,%r15
	je L_477035
L_237656:
	movq %r15,0x50(%rbp)
L_237657:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_477034
L_237658:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_237659:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477033
.p2align 0x4,,0x7
L_237660:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_476920
L_237661:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_237659
.p2align 0x4
L_476920:
L_237662:
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_237663:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477032
.p2align 0x4,,0x7
L_237664:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476921
L_237665:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_237663
.p2align 0x4
L_476921:
L_237667:
	cmpq $0x1,%r15
	je L_477031
L_237668:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_237669:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477030
.p2align 0x4,,0x7
L_237670:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476922
L_237671:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_237669
.p2align 0x4
L_476922:
L_237672:
	movq 0x60(%rbp),%r13
	xchgq %r13,%r14
L_237673:
	cmpq $0x1,%r15
	je L_477029
L_237674:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_237675:
	movl 0x4(%r13),%r11d
	cmpl %ecx,%r11d
	jl L_477027
L_237676:
	cmpq $0x1,%r15
	je L_476923
L_237677:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,%ecx
	jmp L_237675
.p2align 0x4
L_476923:
L_237678:
	movl %r11d,0x34(%rbp)
L_237679:
	cmpq $0x1,%r14
	je L_237944
L_237680:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_237681:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477025
.p2align 0x4,,0x7
L_237682:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476924
L_237683:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_237681
.p2align 0x4
L_476924:
L_237684:
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_237685:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477024
.p2align 0x4,,0x7
L_237686:
	movq 0x58(%rbp),%r14
	movl 0x4(%r14),%r13d
	cmpl %r13d,0x34(%rbp)
	je L_477018
L_237687:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_477016
L_237688:
L_237689:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_476925
L_237690:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_237685
.p2align 0x4
L_476925:
L_237692:
	cmpq $0x1,%r15
	je L_476994
L_237693:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r14
	je L_237698
L_237694:
	movq 0x8(%r14),%r15
.p2align 0x4,,0x7
L_237695:
	cmpq $0x1,%r15
	je L_476926
L_237696:
	movq 0x8(%r15),%r15
	jmp L_237695
.p2align 0x4
L_476926:
L_237698:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x20(%r15),%r10
	movq %r10,0x58(%rbp)
	cmpq $0x1,%r13
	je L_476970
L_237699:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	cmpq $0x1,%r11
	je L_476948
L_237700:
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_237701:
	movl 0x0(%r14),%eax
	cmpq $0x13,%rax
	ja L_476927
	jmp *jumpTable_704(,%rax,8)
.data
.p2align 0x4
jumpTable_704:
.quad L_476947,L_476946,L_476945,L_476944,L_476943,L_476942,L_476941,L_476940,L_476939,L_476938,L_476937,L_476936,L_476935,L_476934,L_476933,L_476932,L_476931,L_476930,L_476929,L_476928
.text
.p2align 0x4
L_476927:
L_237702:
	movq (globalObjptr+0x10538)(%rip),%r15
L_237703:
	movq %r15,0x78(%rbp)
	leaq L_237839(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_237704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_476928:
L_237859:
	movq (globalObjptr+0x105F0)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476929:
L_237858:
	movq (globalObjptr+0x105E8)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476930:
L_237857:
	movq (globalObjptr+0x105E0)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476931:
L_237856:
	movq (globalObjptr+0x105D8)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476932:
L_237855:
	movq (globalObjptr+0x105D0)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476933:
L_237854:
	movq (globalObjptr+0x105C8)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476934:
L_237853:
	movq (globalObjptr+0x105C0)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476935:
L_237852:
	movq (globalObjptr+0x105B8)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476936:
L_237851:
	movq (globalObjptr+0x105B0)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476937:
L_237850:
	movq (globalObjptr+0x105A8)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476938:
L_237849:
	movq (globalObjptr+0x105A0)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476939:
L_237848:
	movq (globalObjptr+0x10598)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476940:
L_237847:
	movq (globalObjptr+0x10590)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476941:
L_237846:
	movq (globalObjptr+0x10588)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476942:
L_237845:
	movq (globalObjptr+0x10580)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476943:
L_237844:
	movq (globalObjptr+0x10578)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476944:
L_237843:
	movq (globalObjptr+0x10570)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476945:
L_237842:
	movq (globalObjptr+0x10568)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476946:
L_237841:
	movq (globalObjptr+0x10560)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476947:
L_237840:
	movq (globalObjptr+0x10558)(%rip),%r15
	jmp L_237703
.p2align 0x4
L_476948:
L_237860:
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_237861:
	movl 0x0(%r14),%eax
	cmpq $0x13,%rax
	ja L_476949
	jmp *jumpTable_705(,%rax,8)
.data
.p2align 0x4
jumpTable_705:
.quad L_476969,L_476968,L_476967,L_476966,L_476965,L_476964,L_476963,L_476962,L_476961,L_476960,L_476959,L_476958,L_476957,L_476956,L_476955,L_476954,L_476953,L_476952,L_476951,L_476950
.text
.p2align 0x4
L_476949:
L_237862:
	movq (globalObjptr+0x10538)(%rip),%r15
L_237863:
	movq %r15,0x78(%rbp)
	leaq L_237879(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_237864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_476950:
L_237899:
	movq (globalObjptr+0x105F0)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476951:
L_237898:
	movq (globalObjptr+0x105E8)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476952:
L_237897:
	movq (globalObjptr+0x105E0)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476953:
L_237896:
	movq (globalObjptr+0x105D8)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476954:
L_237895:
	movq (globalObjptr+0x105D0)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476955:
L_237894:
	movq (globalObjptr+0x105C8)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476956:
L_237893:
	movq (globalObjptr+0x105C0)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476957:
L_237892:
	movq (globalObjptr+0x105B8)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476958:
L_237891:
	movq (globalObjptr+0x105B0)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476959:
L_237890:
	movq (globalObjptr+0x105A8)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476960:
L_237889:
	movq (globalObjptr+0x105A0)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476961:
L_237888:
	movq (globalObjptr+0x10598)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476962:
L_237887:
	movq (globalObjptr+0x10590)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476963:
L_237886:
	movq (globalObjptr+0x10588)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476964:
L_237885:
	movq (globalObjptr+0x10580)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476965:
L_237884:
	movq (globalObjptr+0x10578)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476966:
L_237883:
	movq (globalObjptr+0x10570)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476967:
L_237882:
	movq (globalObjptr+0x10568)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476968:
L_237881:
	movq (globalObjptr+0x10560)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476969:
L_237880:
	movq (globalObjptr+0x10558)(%rip),%r15
	jmp L_237863
.p2align 0x4
L_476970:
L_237901:
	andq $0x3,%r11
	jz L_476971
L_237902:
	movq $0x1,%r15
L_237712:
	movq %r15,0x68(%rbp)
	leaq L_237834(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x68,%rbp
	leaq (L_237713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_476971:
L_237903:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x68(%rbp)
L_237904:
	movl 0x0(%r15),%eax
	cmpq $0x13,%rax
	ja L_476972
	jmp *jumpTable_706(,%rax,8)
.data
.p2align 0x4
jumpTable_706:
.quad L_476992,L_476991,L_476990,L_476989,L_476988,L_476987,L_476986,L_476985,L_476984,L_476983,L_476982,L_476981,L_476980,L_476979,L_476978,L_476977,L_476976,L_476975,L_476974,L_476973
.text
.p2align 0x4
L_476972:
L_237905:
	movq (globalObjptr+0x10538)(%rip),%r15
L_237906:
	movq %r15,0x78(%rbp)
	leaq L_237921(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_237907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_476973:
L_237941:
	movq (globalObjptr+0x105F0)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476974:
L_237940:
	movq (globalObjptr+0x105E8)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476975:
L_237939:
	movq (globalObjptr+0x105E0)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476976:
L_237938:
	movq (globalObjptr+0x105D8)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476977:
L_237937:
	movq (globalObjptr+0x105D0)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476978:
L_237936:
	movq (globalObjptr+0x105C8)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476979:
L_237935:
	movq (globalObjptr+0x105C0)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476980:
L_237934:
	movq (globalObjptr+0x105B8)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476981:
L_237933:
	movq (globalObjptr+0x105B0)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476982:
L_237932:
	movq (globalObjptr+0x105A8)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476983:
L_237931:
	movq (globalObjptr+0x105A0)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476984:
L_237930:
	movq (globalObjptr+0x10598)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476985:
L_237929:
	movq (globalObjptr+0x10590)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476986:
L_237928:
	movq (globalObjptr+0x10588)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476987:
L_237927:
	movq (globalObjptr+0x10580)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476988:
L_237926:
	movq (globalObjptr+0x10578)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476989:
L_237925:
	movq (globalObjptr+0x10570)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476990:
L_237924:
	movq (globalObjptr+0x10568)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476991:
L_237923:
	movq (globalObjptr+0x10560)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476992:
L_237922:
	movq (globalObjptr+0x10558)(%rip),%r15
	jmp L_237906
.p2align 0x4
L_476994:
L_237944:
	movl 0x30(%rbp),%eax
	cmpq $0x13,%rax
	ja L_476995
	jmp *jumpTable_707(,%rax,8)
.data
.p2align 0x4
jumpTable_707:
.quad L_477015,L_477014,L_477013,L_477012,L_477011,L_477010,L_477009,L_477008,L_477007,L_477006,L_477005,L_477004,L_477003,L_477002,L_477001,L_477000,L_476999,L_476998,L_476997,L_476996
.text
.p2align 0x4
L_476995:
L_237945:
	movq (globalObjptr+0x10538)(%rip),%r15
L_237946:
	movq %r15,0x50(%rbp)
	leaq L_237958(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10608)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_237947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_476996:
L_237978:
	movq (globalObjptr+0x105F0)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_476997:
L_237977:
	movq (globalObjptr+0x105E8)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_476998:
L_237976:
	movq (globalObjptr+0x105E0)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_476999:
L_237975:
	movq (globalObjptr+0x105D8)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477000:
L_237974:
	movq (globalObjptr+0x105D0)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477001:
L_237973:
	movq (globalObjptr+0x105C8)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477002:
L_237972:
	movq (globalObjptr+0x105C0)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477003:
L_237971:
	movq (globalObjptr+0x105B8)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477004:
L_237970:
	movq (globalObjptr+0x105B0)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477005:
L_237969:
	movq (globalObjptr+0x105A8)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477006:
L_237968:
	movq (globalObjptr+0x105A0)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477007:
L_237967:
	movq (globalObjptr+0x10598)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477008:
L_237966:
	movq (globalObjptr+0x10590)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477009:
L_237965:
	movq (globalObjptr+0x10588)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477010:
L_237964:
	movq (globalObjptr+0x10580)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477011:
L_237963:
	movq (globalObjptr+0x10578)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477012:
L_237962:
	movq (globalObjptr+0x10570)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477013:
L_237961:
	movq (globalObjptr+0x10568)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477014:
L_237960:
	movq (globalObjptr+0x10560)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477015:
L_237959:
	movq (globalObjptr+0x10558)(%rip),%r15
	jmp L_237946
.p2align 0x4
L_477016:
L_237979:
	movq $0x1,%r14
	xchgq %r14,%r15
L_237980:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_237692
L_237981:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_237685
.p2align 0x4
L_477018:
L_237983:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	cmpq $0x1,0x60(%rbp)
	je L_237980
L_237984:
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	movq $0x1,0x58(%rbp)
L_237985:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477022
.p2align 0x4,,0x7
L_237986:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_477019
L_237987:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_237985
.p2align 0x4
L_477019:
L_237988:
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
L_237989:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477021
.p2align 0x4,,0x7
L_237990:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_237689
L_237991:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_237989
.p2align 0x4
L_477021:
L_237993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_237994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237994
.p2align 0x4
.long 0x3B23
L_237994:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_237990
.p2align 0x4
L_477022:
L_237995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_237996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237996
.p2align 0x4
.long 0x3B24
L_237996:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_237986
.p2align 0x4
L_477024:
L_237998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_237999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237999
.p2align 0x4
.long 0x3B25
L_237999:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_237686
.p2align 0x4
L_477025:
L_238000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_238001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238001
.p2align 0x4
.long 0x3B25
L_238001:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_237682
.p2align 0x4
L_477027:
L_238003:
	cmpq $0x1,%r15
	je L_477028
L_238004:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_237675
.p2align 0x4
L_477028:
L_238005:
	movl %ecx,0x34(%rbp)
	jmp L_237679
.p2align 0x4
L_477029:
L_238006:
	movl $0x0,0x34(%rbp)
	jmp L_237679
.p2align 0x4
L_477030:
L_238007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_238008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238008
.p2align 0x4
.long 0x3B23
L_238008:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_237670
.p2align 0x4
L_477031:
L_238009:
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_237673
.p2align 0x4
L_477032:
L_238010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_238011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238011
.p2align 0x4
.long 0x3B25
L_238011:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_237664
.p2align 0x4
L_477033:
L_238012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_238013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238013
.p2align 0x4
.long 0x3B23
L_238013:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_237660
.p2align 0x4
L_477034:
L_238014:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_237667
.p2align 0x4
L_477035:
L_238016:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_477036
L_238017:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_237669
.p2align 0x4
L_477036:
L_238018:
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_237673
.p2align 0x4
L_477037:
L_238019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_238020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238020
.p2align 0x4
.long 0x3B23
L_238020:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_237652
.p2align 0x4
L_477038:
L_238021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_238022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238022
.p2align 0x4
.long 0x3B24
L_238022:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_237648
.p2align 0x4
L_477039:
L_238023:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_237655
.p2align 0x4
L_477040:
L_238025:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_238016
L_238026:
	movq %r15,0x50(%rbp)
	jmp L_237657
.p2align 0x4
L_477042:
L_238028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_238029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238029
.p2align 0x4
.long 0x3B24
L_238029:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_237640
.p2align 0x4
L_477043:
L_238030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_238031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238031
.p2align 0x4
.long 0x3B26
L_238031:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_237636
.p2align 0x4
L_477044:
L_238032:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_237643
.p2align 0x4
L_477045:
L_238034:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_238025
L_238035:
	movq %r15,0x50(%rbp)
	jmp L_237645
.p2align 0x4
L_477047:
L_238037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_238038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238038
.p2align 0x4
.long 0x3B26
L_238038:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_237628
.p2align 0x4
L_477048:
L_238039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_238040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238040
.p2align 0x4
.long 0x3B27
L_238040:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_237624
.p2align 0x4
L_477049:
L_238041:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_237631
.p2align 0x4
L_477050:
L_238043:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_238034
L_238044:
	movq %r15,0x50(%rbp)
	jmp L_237633
.p2align 0x4
L_477052:
L_238046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_238047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238047
.p2align 0x4
.long 0x3B27
L_238047:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_237616
.p2align 0x4
L_477053:
L_238048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_238049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238049
.p2align 0x4
.long 0x3B28
L_238049:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_237612
.p2align 0x4
L_477054:
L_238050:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_237619
.p2align 0x4
L_477055:
L_238051:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_238043
L_238052:
	movq %r15,0x50(%rbp)
	jmp L_237621
.p2align 0x4
L_477057:
.p2align 0x4,,0x7
L_237604:
	movq 0x80(%rbp),%r15
.p2align 0x4,,0x7
L_237605:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_477058
L_237606:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_237594
.p2align 0x4
L_477058:
L_237607:
	movq %r15,0x50(%rbp)
	jmp L_237608
.p2align 0x4
L_477059:
L_237596:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237597
L_237601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_237602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237602
.p2align 0x4
.long 0x3B14
L_237602:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_237597:
	movl 0xB0(%rbp),%r15d
	decl %r15d
	movl %r15d,0x98(%rbp)
	jo L_477060
L_237599:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_237600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_122
.p2align 0x4
L_477060:
L_237598:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_477062:
L_238058:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_477065
L_238059:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_238060:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477064
.p2align 0x4,,0x7
L_238061:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_477063
L_238062:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_238060
.p2align 0x4
L_477063:
L_238064:
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_238065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_0
.p2align 0x4
L_477064:
L_238082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_238083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238083
.p2align 0x4
.long 0x3B2B
L_238083:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_238061
.p2align 0x4
L_477065:
L_238084:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_238064
.p2align 0x4
L_477066:
L_238085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_238086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238086
.p2align 0x4
.long 0x3B28
L_238086:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_237591
.p2align 0x4
L_477067:
L_238087:
	movq $0x1,0x50(%rbp)
	jmp L_237608
.p2align 0x4
L_477068:
.p2align 0x4,,0x7
L_237584:
	movq 0x80(%rbp),%r15
.p2align 0x4,,0x7
L_237585:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_477069
L_237586:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_237574
.p2align 0x4
L_477069:
L_237587:
	movq %r15,0x78(%rbp)
	jmp L_237588
.p2align 0x4
L_477070:
L_237576:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237577
L_237581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_237582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237582
.p2align 0x4
.long 0x3B14
L_237582:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_237577:
	movl 0xB0(%rbp),%r15d
	decl %r15d
	movl %r15d,0x98(%rbp)
	jo L_477071
L_237579:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_237580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_122
.p2align 0x4
L_477071:
L_237578:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_477073:
L_238092:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_477076
L_238093:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_238094:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477075
.p2align 0x4,,0x7
L_238095:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_477074
L_238096:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_238094
.p2align 0x4
L_477074:
L_238098:
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_238099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_0
.p2align 0x4
L_477075:
L_238116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_238117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238117
.p2align 0x4
.long 0x3B2B
L_238117:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_238095
.p2align 0x4
L_477076:
L_238118:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_238098
.p2align 0x4
L_477077:
L_238119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_238120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238120
.p2align 0x4
.long 0x3B28
L_238120:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_237571
.p2align 0x4
L_477078:
L_238121:
	movq $0x1,0x78(%rbp)
	jmp L_237588
.p2align 0x4
L_477079:
.p2align 0x4,,0x7
L_237564:
	movq 0x78(%rbp),%r15
.p2align 0x4,,0x7
L_237565:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_477080
L_237566:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_237554
.p2align 0x4
L_477080:
L_237567:
	movq %r15,0x70(%rbp)
	jmp L_237568
.p2align 0x4
L_477081:
L_237556:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237557
L_237561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_237562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237562
.p2align 0x4
.long 0x3B12
L_237562:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_237557:
	movl 0xA8(%rbp),%r15d
	decl %r15d
	movl %r15d,0x90(%rbp)
	jo L_477082
L_237559:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_237560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_122
.p2align 0x4
L_477082:
L_237558:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_477084:
L_238126:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_477087
L_238127:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_238128:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477086
.p2align 0x4,,0x7
L_238129:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_477085
L_238130:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_238128
.p2align 0x4
L_477085:
L_238132:
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_238133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_0
.p2align 0x4
L_477086:
L_238150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_238151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238151
.p2align 0x4
.long 0x3B2D
L_238151:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_238129
.p2align 0x4
L_477087:
L_238152:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_238132
.p2align 0x4
L_477088:
L_238153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_238154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238154
.p2align 0x4
.long 0x3B27
L_238154:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_237551
.p2align 0x4
L_477089:
L_238155:
	movq $0x1,0x70(%rbp)
	jmp L_237568
.p2align 0x4
L_477090:
L_238180:
	movq $0x1,%r14
	xchgq %r14,%r15
.p2align 0x4,,0x7
L_238162:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_477091
L_238163:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_237509
.p2align 0x4
L_477091:
L_238164:
	movq %r15,0x68(%rbp)
	jmp L_237548
.p2align 0x4
L_477092:
L_237510:
	movq (globalObjptr+0x4A30)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movl $0x1,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_237511:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477094
.p2align 0x4,,0x7
L_237512:
	movq $0x1EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xA8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_477093
L_237513:
	movq %r15,0xB0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movl %r15d,0xA8(%rbp)
	jmp L_237511
.p2align 0x4
L_477093:
L_237514:
	movq 0xB0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xB0(%rbp)
L_237515:
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_237516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_122
.p2align 0x4
L_477094:
L_238176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_238177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238177
.p2align 0x4
.long 0x3B30
L_238177:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_237512
.p2align 0x4
L_477095:
L_238181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_238182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238182
.p2align 0x4
.long 0x3B26
L_238182:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_237506
.p2align 0x4
L_477096:
L_238183:
	movq $0x1,0x68(%rbp)
	jmp L_237548
.p2align 0x4
L_477097:
L_238208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_238209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238209
.p2align 0x4
.long 0x3B24
L_238209:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_237454
.p2align 0x4
L_477098:
L_238210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_238211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238211
.p2align 0x4
.long 0x3B26
L_238211:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_237450
.p2align 0x4
L_477099:
L_238212:
	movq 0x60(%rbp),%r15
	jmp L_237457
.p2align 0x4
L_477100:
L_238213:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_477101
L_238214:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_237406
.p2align 0x4
L_477101:
L_238215:
	movq %r15,0x58(%rbp)
	jmp L_237460
.p2align 0x4
L_477102:
.p2align 0x4,,0x7
L_238221:
	movq 0x80(%rbp),%r15
.p2align 0x4,,0x7
L_237443:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_237446
L_237444:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_237411
.p2align 0x4
L_477104:
	movq %r13,%r15
	jmp L_237417
.p2align 0x4
L_477105:
L_238236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_238237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238237
.p2align 0x4
.long 0x3B28
L_238237:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_237408
.p2align 0x4
L_477106:
L_238238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_238239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238239
.p2align 0x4
.long 0x3B23
L_238239:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_237403
.p2align 0x4
L_477107:
L_238240:
	movq $0x1,0x58(%rbp)
	jmp L_237460
.p2align 0x4
L_477108:
L_237396:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_477109:
L_238241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_238242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238242
.p2align 0x4
.long 0x3B25
L_238242:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_237395
.p2align 0x4
L_477110:
L_238243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_238244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238244
.p2align 0x4
.long 0x3B25
L_238244:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_237391
.p2align 0x4
L_477111:
L_238245:
	movq $0x1,0x50(%rbp)
	jmp L_237400
.p2align 0x4
.long 0x3B0D
L_237418:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq $0x1,%r15
	je L_238233
L_237419:
	movq 0x18(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_477117
L_237420:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movl %r14d,0x90(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_237421:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477116
.p2align 0x4,,0x7
L_237422:
	movl 0x90(%rbp),%r14d
	testl %r14d,%r14d
	jz L_477115
L_237423:
	movq $0x1,%r15
L_237424:
	movq $0x1015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1017,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2867,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_477112
L_237425:
	movq %r14,0xB8(%rbp)
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r13
	movq %r13,0x88(%rbp)
	movl %r14d,0x90(%rbp)
	jmp L_237421
.p2align 0x4
L_477112:
L_237426:
	movq %r15,0x90(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_237427:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477114
.p2align 0x4,,0x7
L_237428:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_477113
L_237429:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_237427
.p2align 0x4
L_477113:
L_237431:
	movq 0x70(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_237432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_0
.p2align 0x4
L_477114:
L_238226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_238227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238227
.p2align 0x4
.long 0x3B2B
L_238227:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_237428
.p2align 0x4
L_477115:
L_238228:
	movq (globalObjptr+0x4A80)(%rip),%r15
	jmp L_237424
.p2align 0x4
L_477116:
L_238229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_238230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238230
.p2align 0x4
.long 0x3B34
L_238230:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_237422
.p2align 0x4
L_477117:
L_238231:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_237431
.p2align 0x4
.long 0x3B0F
L_237474:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237475
L_238200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_238201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238201
.p2align 0x4
.long 0x3B2A
L_238201:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_237475:
	cmpq $0x1,0x90(%rbp)
	je L_477133
L_237476:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_477132
L_237477:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_237478:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477131
.p2align 0x4,,0x7
L_237479:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_477119
L_237480:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_237478
.p2align 0x4
L_477119:
L_237481:
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
.p2align 0x4,,0x7
L_237482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477130
.p2align 0x4,,0x7
L_237483:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_477120
L_237484:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_237482
.p2align 0x4
L_477120:
L_237486:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_477121
L_237487:
	movq %r15,0x90(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_237471
.p2align 0x4
L_477121:
L_237489:
	cmpq $0x1,0x68(%rbp)
	je L_477128
L_237490:
	cmpq $0x1,%r15
	je L_477127
L_237491:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_237492:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477126
.p2align 0x4,,0x7
L_237493:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_477122
L_237494:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_237492
.p2align 0x4
L_477122:
L_237495:
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
.p2align 0x4,,0x7
L_237496:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477125
.p2align 0x4,,0x7
L_237497:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_477123
L_237498:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_237496
.p2align 0x4
L_477123:
L_237500:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_477124
L_237501:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_237466
.p2align 0x4
L_477124:
L_237502:
	movq %r15,0x60(%rbp)
	jmp L_237503
.p2align 0x4
L_477125:
L_238184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_238185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238185
.p2align 0x4
.long 0x3B26
L_238185:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_237497
.p2align 0x4
L_477126:
L_238186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_238187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238187
.p2align 0x4
.long 0x3B27
L_238187:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_237493
.p2align 0x4
L_477127:
L_238188:
	movq 0x68(%rbp),%r15
	jmp L_237500
.p2align 0x4
L_477128:
L_238189:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_477129
L_238190:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_237466
.p2align 0x4
L_477129:
L_238191:
	movq %r15,0x60(%rbp)
	jmp L_237503
.p2align 0x4
L_477130:
L_238192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_238193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238193
.p2align 0x4
.long 0x3B31
L_238193:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_237483
.p2align 0x4
L_477131:
L_238194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_238195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238195
.p2align 0x4
.long 0x3B32
L_238195:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_237479
.p2align 0x4
L_477132:
L_238196:
	movq 0x90(%rbp),%r14
	xchgq %r14,%r15
	jmp L_237486
.p2align 0x4
L_477133:
L_238197:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_477134
L_238198:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	jmp L_237471
.p2align 0x4
L_477134:
L_238199:
	movq 0x98(%rbp),%r14
	xchgq %r14,%r15
	jmp L_237489
.p2align 0x4
.long 0x3B15
L_237704:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237705
L_237837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_237838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237838
.p2align 0x4
.long 0x3B21
L_237838:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_237705:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_477136
L_237706:
	movq %r15,0x68(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	jmp L_237701
.p2align 0x4
L_477136:
L_237707:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_237708:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477138
.p2align 0x4,,0x7
L_237709:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_237712
L_237710:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_237708
.p2align 0x4
L_477138:
L_237835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_237836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237836
.p2align 0x4
.long 0x3B21
L_237836:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_237709
.p2align 0x4
.long 0x474
L_237839:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B15
L_237864:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237865
L_237877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_237878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237878
.p2align 0x4
.long 0x3B21
L_237878:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_237865:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_477140
L_237866:
	movq %r15,0x68(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	jmp L_237861
.p2align 0x4
L_477140:
L_237867:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_237868:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477142
.p2align 0x4,,0x7
L_237869:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_477141
L_237870:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_237868
.p2align 0x4
L_477141:
L_237871:
	movq %r15,0x68(%rbp)
	leaq L_237874(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x68,%rbp
	leaq (L_237872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_477142:
L_237875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_237876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237876
.p2align 0x4
.long 0x3B21
L_237876:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_237869
.p2align 0x4
.long 0x474
L_237879:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B16
L_237713:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_237806(%rip),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x10540)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_237714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_237834:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B15
L_237907:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237908
L_237919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_237920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237920
.p2align 0x4
.long 0x3B21
L_237920:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_237908:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_477144
L_237909:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_237904
.p2align 0x4
L_477144:
L_237910:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_237911:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477146
.p2align 0x4,,0x7
L_237912:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_477145
L_237913:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_237911
.p2align 0x4
L_477145:
L_237914:
	movq %r15,0x68(%rbp)
	leaq L_237916(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x68,%rbp
	leaq (L_237915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_477146:
L_237917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_237918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237918
.p2align 0x4
.long 0x3B21
L_237918:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_237912
.p2align 0x4
.long 0x474
L_237921:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x19AC
L_237947:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237948
L_237956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_237957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237957
.p2align 0x4
.long 0x3B22
L_237957:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_237948:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	leaq L_237955(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_237949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x474
L_237958:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B13
L_237600:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movl 0x98(%rbp),%r14d
	movl %r14d,0xB0(%rbp)
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	jmp loop_2715
.p2align 0x4
.long 0x3B0E
L_238065:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,0x80(%rbp)
	je L_238055
L_238066:
	cmpq $0x1,%r15
	je L_237604
L_238067:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_238068:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477152
.p2align 0x4,,0x7
L_238069:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_477149
L_238070:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_238068
.p2align 0x4
L_477149:
L_238071:
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_238072:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477151
.p2align 0x4,,0x7
L_238073:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_237605
L_238074:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_238072
.p2align 0x4
L_477151:
L_238076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_238077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238077
.p2align 0x4
.long 0x3B29
L_238077:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_238073
.p2align 0x4
L_477152:
L_238078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_238079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238079
.p2align 0x4
.long 0x3B2A
L_238079:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_238069
.p2align 0x4
.long 0x3B13
L_237580:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movl 0x98(%rbp),%r14d
	movl %r14d,0xB0(%rbp)
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	jmp loop_2714
.p2align 0x4
.long 0x3B0E
L_238099:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,0x80(%rbp)
	je L_238089
L_238100:
	cmpq $0x1,%r15
	je L_237584
L_238101:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_238102:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477158
.p2align 0x4,,0x7
L_238103:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_477155
L_238104:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_238102
.p2align 0x4
L_477155:
L_238105:
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_238106:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477157
.p2align 0x4,,0x7
L_238107:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_237585
L_238108:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_238106
.p2align 0x4
L_477157:
L_238110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_238111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238111
.p2align 0x4
.long 0x3B29
L_238111:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_238107
.p2align 0x4
L_477158:
L_238112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_238113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238113
.p2align 0x4
.long 0x3B2A
L_238113:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_238103
.p2align 0x4
.long 0x3B11
L_237560:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq 0xA8(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movl 0x90(%rbp),%r14d
	movl %r14d,0xA8(%rbp)
	movq %r15,0x90(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp loop_2713
.p2align 0x4
.long 0x3B2C
L_238133:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq $0x1,0x78(%rbp)
	je L_238123
L_238134:
	cmpq $0x1,%r15
	je L_237564
L_238135:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_238136:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477164
.p2align 0x4,,0x7
L_238137:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_477161
L_238138:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_238136
.p2align 0x4
L_477161:
L_238139:
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
.p2align 0x4,,0x7
L_238140:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477163
.p2align 0x4,,0x7
L_238141:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_237565
L_238142:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_238140
.p2align 0x4
L_477163:
L_238144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_238145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238145
.p2align 0x4
.long 0x3B28
L_238145:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_238141
.p2align 0x4
L_477164:
L_238146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_238147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238147
.p2align 0x4
.long 0x3B29
L_238147:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_238137
.p2align 0x4
.long 0x3B10
L_237516:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237517
L_238174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_238175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238175
.p2align 0x4
.long 0x3B2F
L_238175:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_237517:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movl 0xA8(%rbp),%r13d
	testl %r13d,%r13d
	jz L_477167
L_237518:
	movq $0x1,%r14
L_237519:
	movq %r15,0xD8(%rbp)
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1017,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0xE0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xC0,%rbp
	leaq (L_237520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_0
.p2align 0x4
L_477167:
L_238173:
	movq (globalObjptr+0x4A80)(%rip),%r14
	jmp L_237519
.p2align 0x4
.long 0x3B0E
L_237432:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,0x80(%rbp)
	je L_238223
L_237433:
	cmpq $0x1,%r15
	je L_238221
L_237434:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_237435:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477172
.p2align 0x4,,0x7
L_237436:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_477169
L_237437:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_237435
.p2align 0x4
L_477169:
L_237438:
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_237439:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477171
.p2align 0x4,,0x7
L_237440:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_237443
L_237441:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_237439
.p2align 0x4
L_477171:
L_238216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_238217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238217
.p2align 0x4
.long 0x3B29
L_238217:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_237440
.p2align 0x4
L_477172:
L_238218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_238219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238219
.p2align 0x4
.long 0x3B2A
L_238219:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_237436
.p2align 0x4
.long 0x3B16
L_237872:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_237805(%rip),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x105F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_237873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_237874:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B16
L_237714:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x10548)(%rip),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_237715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_237806:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B16
L_237915:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_237805(%rip),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x10600)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_237873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_237916:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2207
L_237949:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_477175
L_237951:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x38,%rbp
	leaq (L_237952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_477175:
L_237950:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
L_237955:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B10
L_237520:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq $0x1,0xB0(%rbp)
	je L_477188
L_237521:
	cmpq $0x1,%r15
	je L_477187
L_237522:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_237523:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477186
.p2align 0x4,,0x7
L_237524:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_477176
L_237525:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_237523
.p2align 0x4
L_477176:
L_237526:
	movq 0xC0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0xB8(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
.p2align 0x4,,0x7
L_237527:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477185
.p2align 0x4,,0x7
L_237528:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_477177
L_237529:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_237527
.p2align 0x4
L_477177:
L_237531:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_477178
L_237532:
	movq %r15,0xB0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movl %r15d,0xA8(%rbp)
	jmp L_237515
.p2align 0x4
L_477178:
L_237534:
	cmpq $0x1,0x70(%rbp)
	je L_238162
L_237535:
	cmpq $0x1,%r15
	je L_477183
L_237536:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_237537:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477182
.p2align 0x4,,0x7
L_237538:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_477179
L_237539:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_237537
.p2align 0x4
L_477179:
L_237540:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_237541:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477181
.p2align 0x4,,0x7
L_237542:
	movq $0x2869,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_237545
L_237543:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_237541
.p2align 0x4
L_477181:
L_238156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_238157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238157
.p2align 0x4
.long 0x3B27
L_238157:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_237542
.p2align 0x4
L_477182:
L_238158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_238159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238159
.p2align 0x4
.long 0x3B28
L_238159:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_237538
.p2align 0x4
L_477183:
L_238160:
	movq 0x70(%rbp),%r15
	jmp L_237545
.p2align 0x4
L_477185:
L_238165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_238166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238166
.p2align 0x4
.long 0x3B2B
L_238166:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_237528
.p2align 0x4
L_477186:
L_238167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_238168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_238168
.p2align 0x4
.long 0x3B2E
L_238168:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_237524
.p2align 0x4
L_477187:
L_238169:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_237531
.p2align 0x4
L_477188:
L_238170:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_237534
L_238171:
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xB0(%rbp)
	movl %r13d,0xA8(%rbp)
	jmp L_237515
.p2align 0x4
.long 0x3B16
L_237873:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
L_237731:
	movq %r15,0x68(%rbp)
	leaq L_237805(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x10550)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_237732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_237805:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B16
L_237715:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_477211
L_237716:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x70(%rbp)
L_237717:
	movl 0x0(%r15),%eax
	cmpq $0x13,%rax
	ja L_477190
	jmp *jumpTable_708(,%rax,8)
.data
.p2align 0x4
jumpTable_708:
.quad L_477210,L_477209,L_477208,L_477207,L_477206,L_477205,L_477204,L_477203,L_477202,L_477201,L_477200,L_477199,L_477198,L_477197,L_477196,L_477195,L_477194,L_477193,L_477192,L_477191
.text
.p2align 0x4
L_477190:
L_237718:
	movq (globalObjptr+0x10538)(%rip),%r15
L_237719:
	movq %r15,0x80(%rbp)
	leaq L_237812(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_237720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_477191:
L_237832:
	movq (globalObjptr+0x105F0)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477192:
L_237831:
	movq (globalObjptr+0x105E8)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477193:
L_237830:
	movq (globalObjptr+0x105E0)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477194:
L_237829:
	movq (globalObjptr+0x105D8)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477195:
L_237828:
	movq (globalObjptr+0x105D0)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477196:
L_237827:
	movq (globalObjptr+0x105C8)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477197:
L_237826:
	movq (globalObjptr+0x105C0)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477198:
L_237825:
	movq (globalObjptr+0x105B8)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477199:
L_237824:
	movq (globalObjptr+0x105B0)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477200:
L_237823:
	movq (globalObjptr+0x105A8)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477201:
L_237822:
	movq (globalObjptr+0x105A0)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477202:
L_237821:
	movq (globalObjptr+0x10598)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477203:
L_237820:
	movq (globalObjptr+0x10590)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477204:
L_237819:
	movq (globalObjptr+0x10588)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477205:
L_237818:
	movq (globalObjptr+0x10580)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477206:
L_237817:
	movq (globalObjptr+0x10578)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477207:
L_237816:
	movq (globalObjptr+0x10570)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477208:
L_237815:
	movq (globalObjptr+0x10568)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477209:
L_237814:
	movq (globalObjptr+0x10560)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477210:
L_237813:
	movq (globalObjptr+0x10558)(%rip),%r15
	jmp L_237719
.p2align 0x4
L_477211:
L_237833:
	movq $0x1,%r15
L_237728:
	movq %r15,0x70(%rbp)
	leaq L_237807(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x70,%rbp
	leaq (L_237729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x652
L_237952:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_477212
L_237953:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_477212:
L_237954:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B16
L_237732:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237733
L_237803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_237804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237804
.p2align 0x4
.long 0x3B1F
L_237804:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_237733:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	leaq L_237802(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_237734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3B17
L_237720:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237721
L_237810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_237811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237811
.p2align 0x4
.long 0x3B20
L_237811:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_237721:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_477214
L_237722:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_237717
.p2align 0x4
L_477214:
L_237723:
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_237724:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477216
.p2align 0x4,,0x7
L_237725:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_237728
L_237726:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_237724
.p2align 0x4
L_477216:
L_237808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_237809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237809
.p2align 0x4
.long 0x3B20
L_237809:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_237725
.p2align 0x4
.long 0x474
L_237812:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B18
L_237729:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	leaq L_237806(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_237730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_237807:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B19
L_237734:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_477218
L_237736:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_237737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_477218:
L_237735:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
L_237802:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B16
L_237730:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_237731
.p2align 0x4
.long 0x3B1A
L_237737:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_477238
L_237738:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_477237
L_237739:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_237740:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477236
.p2align 0x4,,0x7
L_237741:
	movq $0x285B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_477219
L_237742:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_237740
.p2align 0x4
L_477219:
L_237743:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x18(%rbp),%ecx
.p2align 0x4,,0x7
L_237744:
	testl %ecx,%ecx
	jz L_477222
L_237745:
	decl %ecx
	jo L_477221
L_237747:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_477220
L_237748:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_237744
.p2align 0x4
L_477220:
L_237749:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_477221:
L_237746:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_477222:
L_237750:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237751
L_237796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237797
.p2align 0x4
.long 0x3B1E
L_237797:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_237751:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_477234
L_237752:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_237753:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477233
.p2align 0x4,,0x7
L_237754:
	movq $0x285B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_477223
L_237755:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_237753
.p2align 0x4
L_477223:
L_237756:
	movq %r15,0x30(%rbp)
L_237757:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_477224
L_237758:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
L_237759:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_237760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_122
.p2align 0x4
L_477224:
L_237792:
	movq %r15,0x38(%rbp)
L_237764:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_237774
L_237765:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_237766:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477231
.p2align 0x4,,0x7
L_237767:
	movq $0x2867,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_477225
L_237768:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_237766
.p2align 0x4
L_477225:
L_237769:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_237770:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477230
.p2align 0x4,,0x7
L_237771:
	movq $0x26CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1019,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x101B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_477226
L_237772:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_237770
.p2align 0x4
L_477226:
L_237773:
	movq %r15,0x38(%rbp)
L_237774:
	movq $0x101F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_477229
L_237775:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_237776:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_477228
.p2align 0x4,,0x7
L_237777:
	movq $0x285B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_477227
L_237778:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_237776
.p2align 0x4
L_477227:
L_237780:
	movq $0x285B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1597,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_237781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parseStep_4
.p2align 0x4
L_477228:
L_237782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_237783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237783
.p2align 0x4
.long 0x3B1C
L_237783:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_237777
.p2align 0x4
L_477229:
L_237784:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_237780
.p2align 0x4
L_477230:
L_237785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237786
.p2align 0x4
.long 0x3B1D
L_237786:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_237771
.p2align 0x4
L_477231:
L_237787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_237788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237788
.p2align 0x4
.long 0x3B1C
L_237788:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_237767
.p2align 0x4
L_477233:
L_237793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_237794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237794
.p2align 0x4
.long 0x3B1C
L_237794:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_237754
.p2align 0x4
L_477234:
L_237795:
	movq $0x1,0x30(%rbp)
	jmp L_237757
.p2align 0x4
L_477236:
L_237798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237799
.p2align 0x4
.long 0x3B1D
L_237799:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_237741
.p2align 0x4
L_477237:
L_237800:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_477238:
L_237801:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3B1B
L_237760:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_237761
L_237790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_237791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_237791
.p2align 0x4
.long 0x3B1D
L_237791:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_237761:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_477239
L_237762:
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_237759
.p2align 0x4
L_477239:
L_237763:
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_237764
.p2align 0x4
.long 0x652
L_237781:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
