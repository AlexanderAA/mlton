/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:55 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl fromC_0
.hidden fromC_0
fromC_0:
L_130714:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_130715
L_130787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_130788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130788
.p2align 0x4
.long 0x460
L_130788:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_130715:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_427887
L_130718:
	movl $0x0,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1401:
	cmpl %ecx,%ebx
	jnl L_427877
L_130784:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_427876
L_130786:
	movq 0x0(%rbp),%r11
	movzbl 0x0(%r11,%r13,1),%r10d
	movl 0x8(%rbp),%r13d
	imull $0x1F,%r13d
	addl %r13d,%r10d
	movl %r10d,0x8(%rbp)
	movl %r14d,%ebx
	jmp loop_1401
.p2align 0x4
L_427876:
L_130725:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427877:
L_130719:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130720
L_130782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_130783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130783
.p2align 0x4
.long 0x65A
L_130783:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_130720:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_427885
L_130722:
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x8(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_427884
L_130723:
	movslq %r11d,%r13
	movq %r13,0x28(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_130725
L_130726:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r11
	je L_130735
L_130727:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_130728:
	movq (globalObjptr+0xAE8)(%rip),%r13
	movq 0x0(%r13),%r11
	incq %r11
	jo L_427881
L_130730:
	movq %r11,0x0(%r13)
	movl 0x8(%rbp),%r13d
	cmpl %r13d,0x0(%r15)
	je L_427880
L_130731:
	cmpq $0x1,%r14
	je L_427878
L_130732:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,%r15
	jmp L_130728
.p2align 0x4
L_427878:
L_130733:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130735
L_130777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_130778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130778
.p2align 0x4
.long 0x1CFD
L_130778:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_130735:
	movq $0x1C83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x58,%rbp
	leaq (L_130736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_427880:
L_130779:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427881:
L_130729:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427884:
L_130740:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427885:
L_130721:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427887:
L_130717:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CFA
L_130736:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130737
L_130775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_130776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130776
.p2align 0x4
.long 0x1CFC
L_130776:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_130737:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x40(%rbp),%r15
	cmpb $0x4,0x0(%r15)
	jne L_130739
L_130774:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_130739:
	movq $0xFA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x18B0)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_130740
L_130741:
	movl %r13d,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x2901,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x30(%rbp),%rdx
	movq %rdx,0x8(%r10)
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_130725
L_130743:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_130717
L_130745:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_130740
L_130746:
	cmpl %r15d,%r10d
	jnl L_427900
L_130748:
	addl %r10d,%r10d
	jo L_130740
L_130749:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_427898
L_130750:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x787,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_130751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130751
.p2align 0x4
.long 0x8BA
L_130751:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1402:
	cmpq 0x30(%rbp),%r15
	jnl L_427889
L_130772:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1402
.p2align 0x4
L_427889:
L_130752:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_130717
L_130754:
	cmpl $0x0,%r13d
	jl L_427896
L_130755:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_1403:
	movl 0x48(%rbp),%r15d
	cmpl 0x2C(%rbp),%r15d
	jnl L_427895
L_130757:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_130766
L_130758:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_130759:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427893
.p2align 0x4,,0x7
L_130760:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x28(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_130740
L_130761:
	movslq %r14d,%r13
	cmpq 0x30(%rbp),%r13
	jnb L_130725
L_130763:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2901,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_427890
L_130764:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_130759
.p2align 0x4
L_427890:
L_130766:
	incl 0x48(%rbp)
	jmp loop_1403
.p2align 0x4
L_427893:
L_130768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130769
.p2align 0x4
.long 0x1CFB
L_130769:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_130760
.p2align 0x4
L_427895:
L_130756:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427896:
L_130771:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427898:
L_130773:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427900:
L_130747:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1605
.hidden x_1605
x_1605:
L_130789:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_130915
L_130790:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427911
L_130791:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x48(%r10),%r15
	movq 0x38(%r10),%r14
	movq 0x30(%r10),%r9
	movq 0x28(%r10),%r8
	movq %r8,0x28(%rbp)
	movq 0x20(%r10),%r8
	movq %r8,0x30(%rbp)
	movq 0x18(%r10),%r8
	movq %r8,0x38(%rbp)
	movq 0x10(%r10),%r8
	movq %r8,0x40(%rbp)
	movq 0x8(%r10),%r8
	movq %r8,0x48(%rbp)
	movq 0x0(%r10),%r8
	movq %r8,0x50(%rbp)
	movq $0x2953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x1759,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	cmpq %r10,%r11
	je L_427910
L_130792:
	movq 0x8(%rbp),%r11
	cmpq $0x1,%r11
	je L_427909
L_130793:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r9,%r15
.p2align 0x4,,0x7
L_130794:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x10A3,%r11
	je L_427908
L_130795:
	cmpq $0x1,%r13
	je L_427907
L_130796:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r11,%r14
	jmp L_130794
.p2align 0x4
L_427907:
L_130798:
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_130799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_427908:
L_130846:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_130847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_427909:
	movq %r9,%r15
	jmp L_130798
.p2align 0x4
L_427910:
L_130914:
	movq $0x2145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2149,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427911:
L_130915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_130916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130916
.p2align 0x4
.long 0x6FF
L_130916:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_130791
.p2align 0x4
.long 0x1CFE
L_130799:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130800
L_130844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130845
.p2align 0x4
.long 0x1D04
L_130845:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_130800:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427913
L_130801:
	movq $0x2145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2149,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427913:
L_130802:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_130826
L_130803:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14A8,%r13
	je L_427922
L_130827:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r13),%rsp
	movq 0x8(%r11),%rsi
	movq 0x0(%r13),%rdi
	cmpq 0x8(%rdi),%rsi
	je L_427921
L_130828:
	cmpq 0x8(%r8),%rsi
	je L_427920
L_130829:
	cmpq 0x8(%r10),%rsi
	je L_427914
L_130830:
	movq %r15,0x70(%rbp)
	leaq L_130836(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_130831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
L_427914:
L_130840:
	movq %r14,%r15
L_130833:
	movq $0x2951,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
L_130805:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2143,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
yes_3:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427919
L_130806:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14A8,%r13
	je L_427918
L_130809:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r13),%rsp
	movq 0x8(%r11),%rsi
	movq 0x0(%r13),%rdi
	cmpq 0x8(%rdi),%rsi
	je L_427917
L_130810:
	cmpq 0x8(%r8),%rsi
	je L_427916
L_130811:
	cmpq %rsi,0x8(%r10)
	je L_427915
L_130812:
	movq %r15,0x70(%rbp)
	leaq L_130818(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_130813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
L_427915:
L_130822:
	movq %r14,%r15
L_130815:
	movq $0x2951,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
L_130808:
	movq $0x2147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427916:
L_130823:
	movq %r9,%r15
	jmp L_130815
.p2align 0x4
L_427917:
L_130824:
	movq %rsp,%r15
	jmp L_130815
.p2align 0x4
L_427918:
L_130807:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
	jmp L_130808
.p2align 0x4
L_427919:
L_130826:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427920:
L_130841:
	movq %r9,%r15
	jmp L_130833
.p2align 0x4
L_427921:
L_130842:
	movq %rsp,%r15
	jmp L_130833
.p2align 0x4
L_427922:
L_130804:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
	jmp L_130805
.p2align 0x4
.long 0x661
L_130847:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130848
L_130911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_130912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130912
.p2align 0x4
.long 0x1D0E
L_130912:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_130848:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz no_7
L_130850:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	cmpq %r14,0x68(%rbp)
	je L_427925
L_130851:
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_130852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_427925:
L_130857:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_130826
L_130858:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14A8,%r13
	je L_427933
L_130881:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r13),%rsp
	movq 0x8(%r11),%rsi
	movq 0x0(%r13),%rdi
	cmpq 0x8(%rdi),%rsi
	je L_427932
L_130882:
	cmpq 0x8(%r8),%rsi
	je L_427931
L_130883:
	cmpq %rsi,0x8(%r10)
	je L_427926
L_130884:
	movq %r15,0x70(%rbp)
	leaq L_130890(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_130885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
L_427926:
L_130894:
	movq %r14,%r15
L_130887:
	movq $0x2951,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_130860:
	movq 0x50(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r14
	movq 0x10(%rbp),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x30(%rbp)
	movq 0x28(%rbp),%r9
	movq 0x10(%r9),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x10(%r10),%r9
	cmpq 0x8(%r9),%rsi
	je yes_3
L_130861:
	cmpq 0x8(%r15),%rsi
	je yes_3
L_130862:
	cmpq %rsi,0x8(%r14)
	je yes_3
L_130863:
	movq 0x0(%r8),%r11
	cmpq $0x1,%r11
	je L_130870
L_130864:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movq %rsi,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_130865:
	movq 0x10(%r13),%r11
	cmpq %r15,0x8(%r11)
	je L_427929
L_130866:
	cmpq $0x1,%r14
	je L_427927
L_130867:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	jmp L_130865
.p2align 0x4
L_427927:
L_130868:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130870
L_130871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130872
.p2align 0x4
.long 0x1D06
L_130872:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_130870:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp yes_3
.p2align 0x4
L_427929:
L_130873:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb yes_3
L_130875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130876
.p2align 0x4
.long 0x1D07
L_130876:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp yes_3
.p2align 0x4
L_427931:
L_130895:
	movq %r9,%r15
	jmp L_130887
.p2align 0x4
L_427932:
L_130896:
	movq %rsp,%r15
	jmp L_130887
.p2align 0x4
L_427933:
L_130859:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	jmp L_130860
.p2align 0x4
no_7:
no_2:
	movq $0x2145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2149,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D02
L_130831:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130832
L_130834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130835
.p2align 0x4
.long 0x1D03
L_130835:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_130832:
	movq 0x38(%rbp),%r15
	jmp L_130833
.p2align 0x4
.long 0x48B
L_130836:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130837
L_130838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130839
.p2align 0x4
.long 0x1D01
L_130839:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_130837:
	movq $0x2953,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CFF
L_130813:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130814
L_130816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130817
.p2align 0x4
.long 0x1D00
L_130817:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_130814:
	movq 0x30(%rbp),%r15
	jmp L_130815
.p2align 0x4
.long 0x48B
L_130818:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130819
L_130820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130821
.p2align 0x4
.long 0x1D01
L_130821:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_130819:
	movq $0x2953,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D05
L_130852:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130853
L_130908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_130909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130909
.p2align 0x4
.long 0x1D0D
L_130909:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_130853:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz no_2
L_130855:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq %r14,0x60(%rbp)
	je no_2
L_130856:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE41,%r13
	jne L_130857
L_130898:
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_130899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
.long 0x1D08
L_130885:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130886
L_130888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130889
.p2align 0x4
.long 0x1D09
L_130889:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_130886:
	movq 0x38(%rbp),%r15
	jmp L_130887
.p2align 0x4
.long 0x48B
L_130890:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130891
L_130892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_130893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130893
.p2align 0x4
.long 0x1D0A
L_130893:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_130891:
	movq $0x2953,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D0B
L_130899:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130900
L_130905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_130906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130906
.p2align 0x4
.long 0x1D0C
L_130906:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_130900:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz no_2
L_130902:
	movq 0x48(%rbp),%r15
	movq 0x70(%rbp),%r14
	cmpq %r14,0x8(%r15)
	je no_2
	jmp L_130857
.text
.p2align 0x4
.globl x_1607
.hidden x_1607
x_1607:
loopS_16:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_130917
L_130978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_130979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130979
.p2align 0x4
.long 0x460
L_130979:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_130917:
	movq 0x8(%rbp),%r15
.p2align 0x4,,0x7
loop_1404:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1E9F,%r15
	je L_427946
	cmpq $0x1EA0,%r15
	je L_427945
L_130918:
	movq 0x8(%r14),%r15
	cmpb $0x4,0x0(%r14)
	je loop_1404
L_130920:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427945:
L_130952:
	movq 0x10(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_130953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_427946:
L_130922:
	movq 0x10(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE40,%r14
	jne L_427948
L_130923:
	movq 0x8(%r11),%r14
	cmpq $0x1,%r14
	je L_130920
L_130924:
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_130925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_427948:
L_130943:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_427951
L_130944:
	movq 0x8(%r14),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_130945:
	incl %ecx
	jo L_427950
L_130947:
	cmpq $0x1,%r15
	je L_427949
L_130948:
	movq 0x8(%r15),%r15
	jmp L_130945
.p2align 0x4
L_427949:
L_130949:
L_130950:
	cmpl $0x0,%ecx
	setg %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427950:
L_130946:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427951:
L_130951:
	xorl %ecx,%ecx
	jmp L_130950
.p2align 0x4
.long 0x51F
L_130953:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x18(%rbp)
	jz L_130955
L_130956:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE40,%r15
	jne L_130955
L_130957:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_427953
L_130958:
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_130959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_427953:
L_130955:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x522
L_130925:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427958
L_130926:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_130927:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427957
.p2align 0x4,,0x7
L_130928:
	movq $0x1BB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_427956
L_130929:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_130927
.p2align 0x4
L_427956:
L_130930:
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movl $0x1,0x20(%rbp)
L_130931:
	movl 0x0(%r15),%r14d
	movl %r14d,0x24(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_130932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_427957:
L_130939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_130940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130940
.p2align 0x4
.long 0x520
L_130940:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_130928
.p2align 0x4
L_427958:
L_130941:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x522
L_130959:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427961
L_130960:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_130961:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427960
.p2align 0x4,,0x7
L_130962:
	movq $0x1BA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_427959
L_130963:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_130961
.p2align 0x4
L_427959:
L_130964:
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movl $0x0,0x20(%rbp)
L_130965:
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_130966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_427960:
L_130973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_130974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130974
.p2align 0x4
.long 0x520
L_130974:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_130962
.p2align 0x4
L_427961:
L_130975:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60A
L_130932:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	testl %r14d,%r14d
	jnz L_427963
L_130933:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_427962
L_130934:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_130931
.p2align 0x4
L_427962:
L_130935:
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427963:
L_130936:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_427964
L_130937:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl 0x24(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	jmp L_130931
.p2align 0x4
L_427964:
L_130938:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60A
L_130966:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x24(%rbp)
	testl %r14d,%r14d
	jnz L_427966
L_130967:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_427965
L_130968:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_130965
.p2align 0x4
L_427965:
L_130969:
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427966:
L_130970:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_427967
L_130971:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl $0x1,0x20(%rbp)
	jmp L_130965
.p2align 0x4
L_427967:
L_130972:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1608
.hidden x_1608
x_1608:
L_130980:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_130981
L_131141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_131142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131142
.p2align 0x4
.long 0x460
L_131142:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_130981:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x40(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r11d
	movl %r11d,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x58(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x54(%rbp)
	movslq %r15d,%r11
	cmpq %r14,%r11
	jne L_130983
L_130984:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_130983
L_130986:
	cmpl $0x0,%r14d
	jl L_131046
L_130987:
	movl $0x0,0xC(%rbp)
.p2align 0x4,,0x7
loop_1405:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428033
.p2align 0x4,,0x7
L_130988:
	movl 0xC(%rbp),%r15d
	cmpl 0x8(%rbp),%r15d
	jnl L_427971
L_131130:
	movslq %r15d,%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_427970
L_131132:
	testl %r11d,%r11d
	jz L_427969
L_131133:
	movq $0x12F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,%r15
L_131134:
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_427968
L_131136:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	incl 0xC(%rbp)
	jmp loop_1405
.p2align 0x4
L_427968:
L_130992:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427969:
L_131137:
	movq $0x1,%r15
	jmp L_131134
.p2align 0x4
L_427970:
L_130983:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427971:
L_130989:
	movq $0x1,0x8(%rbp)
	movl 0x50(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_1406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428032
.p2align 0x4,,0x7
L_130990:
	movslq 0x48(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_130992
L_130993:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_131003
L_130994:
	movl 0x4(%r13),%r14d
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	testl %r10d,%r10d
	jz L_428029
L_131124:
	movl 0x54(%rbp),%r13d
	cmpl %r13d,0x4C(%rbp)
	jnl L_428025
L_131126:
	movq $0x1,0x8(%rbp)
L_131003:
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_130992
L_131005:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_131048
L_131006:
	movl 0x4C(%rbp),%r14d
	cmpl %r14d,0x54(%rbp)
	je L_427989
L_131007:
	movslq %r14d,%r13
	cmpq 0x58(%rbp),%r13
	jnb L_130992
L_131009:
	movq 0x0(%rbp),%r14
	movzbq 0x0(%r14,%r13,1),%r11
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	jnb L_130992
L_131011:
	movslq 0x0(%r14,%r11,4),%r13
	movq 0x28(%rbp),%r14
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r15
	jnb L_130992
L_131013:
	cmpq %r10,%r13
	jnb L_130992
L_131015:
	imulq %r15,%r10
	addq %r10,%r13
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq %r14,0x60(%rbp)
	salq $0x4,%r13
	movl 0x0(%r11,%r13,1),%r15d
	movl %r15d,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_130983
L_131017:
	cmpl $0x0,%r13d
	jl L_427983
L_131018:
	movl $0x0,0x68(%rbp)
loop_1407:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427982
.p2align 0x4,,0x7
L_131019:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x68(%rbp)
	jl L_427973
L_131020:
	movl 0x4C(%rbp),%r15d
	incl %r15d
	jo L_427972
L_131022:
	movl %r15d,0x4C(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp loop_1406
.p2align 0x4
L_427972:
L_131021:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427973:
L_131023:
	movslq 0x68(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDC8,%r15
	je L_427978
L_131033:
	movl 0x4(%r13),%ecx
	movq 0x8(%r13),%r15
	movslq 0x0(%r13),%r14
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_130992
L_131035:
	movq 0x0(%r13,%r14,8),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_130983
L_131037:
	testl %r13d,%r13d
	jz L_427975
L_131038:
	movq $0x12F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
L_131039:
	movslq %ecx,%r14
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_130992
L_131041:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
L_131031:
	incl 0x68(%rbp)
	jmp loop_1407
.p2align 0x4
L_427975:
	movq %r11,%r15
	jmp L_131039
.p2align 0x4
L_427978:
L_131024:
	movl 0x0(%r13),%ebx
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_130983
L_131026:
	testl %r13d,%r13d
	jz L_427980
L_131027:
	movq $0x12F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
L_131028:
	movslq %ebx,%r14
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_130992
L_131030:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	jmp L_131031
.p2align 0x4
L_427980:
L_131032:
	movq $0x1,%r15
	jmp L_131028
.p2align 0x4
L_427982:
L_131043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_131044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131044
.p2align 0x4
.long 0x1D0F
L_131044:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_131019
.p2align 0x4
L_427983:
L_131046:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427989:
L_131048:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_131081
L_131049:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	cmpq %r15,%r14
	jne L_130983
L_131051:
	cmpl $0x0,%ecx
	jl L_131046
L_131052:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1408:
	cmpl %ecx,%ebx
	jnl L_427990
L_131119:
	movslq %ebx,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movl %ebx,0x0(%r13)
	incl %ebx
	jmp loop_1408
.p2align 0x4
L_427990:
L_131053:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_131090
L_131054:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_131055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131055
.p2align 0x4
.long 0x1D10
L_131055:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1409:
	cmpq 0x30(%rbp),%r15
	jnl L_427991
L_131117:
	movq 0x20(%rbp),%r14
	movl $0xFFFFFFFF,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1409
.p2align 0x4
L_427991:
L_131056:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x175B,%rcx
	movq 0x30(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_131057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131057
.p2align 0x4
.long 0x1D11
L_131057:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1410:
	cmpq 0x30(%rbp),%r15
	jnl L_427992
L_131116:
	movq 0x38(%rbp),%r14
	movb $0x1,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1410
.p2align 0x4
L_427992:
L_131058:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_131071
L_131059:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_131060:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428017
.p2align 0x4,,0x7
L_131061:
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_427993
L_131062:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_131060
.p2align 0x4
L_427993:
L_131063:
	movq 0x60(%rbp),%r13
	movq 0x48(%rbp),%r15
	xchgq %r13,%r14
.p2align 0x4,,0x7
L_131064:
	movq 0x8(%r15),%r13
	movl 0x0(%r15),%r11d
	movl %r11d,(localWord32+0x0)(%rip)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	cmpq %r11,%r15
	jne L_130983
L_131066:
	cmpl $0x0,%ecx
	jl L_131046
L_131067:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_1411:
	cmpl %ecx,%ebx
	jnl L_428000
L_131099:
	movslq %ebx,%r13
	movq 0x0(%r15,%r13,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xDC5,%r13
	je L_427998
L_131104:
	movq 0x0(%r11),%r13
	movslq 0x0(%r13),%r10
	cmpq 0x30(%rbp),%r10
	jnb L_130992
L_131106:
	movq 0x20(%rbp),%r13
	movl 0x0(%r13,%r10,4),%r11d
	movl (localWord32+0x0)(%rip),%r13d
	subl %r11d,%r13d
	jo L_131021
L_131107:
	movslq %r11d,%r9
	movslq %r13d,%r11
	movq 0x58(%rbp),%r13
	cmpq %r9,%r13
	jb L_130992
L_131108:
	subq %r9,%r13
	cmpq %r11,%r13
	jb L_130992
L_131109:
	movq 0x38(%rbp),%r13
	movb $0x0,0x0(%r13,%r10,1)
	movq %r14,(localObjptr+0x0)(%rip)
L_131103:
	incl %ebx
	movq (localObjptr+0x0)(%rip),%r14
	jmp loop_1411
.p2align 0x4
L_427998:
L_131100:
	movq 0x0(%r11),%r13
	movslq 0x0(%r13),%r10
	cmpq 0x30(%rbp),%r10
	jnb L_130992
L_131102:
	movq 0x20(%rbp),%r13
	movl (localWord32+0x0)(%rip),%r11d
	movl %r11d,0x0(%r13,%r10,4)
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_131103
.p2align 0x4
L_428000:
L_131068:
	cmpq $0x1,%r14
	je L_428001
L_131069:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_131064
.p2align 0x4
L_428001:
L_131071:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r15,%rdx
	jne L_130983
L_131073:
	cmpq $0x7FFFFFFF,%rdx
	ja L_131090
L_131074:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x175D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_131075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131075
.p2align 0x4
.long 0x1D12
L_131075:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	xorl %ecx,%ecx
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1412:
	cmpq 0x20(%rbp),%r15
	jnl L_428005
L_131091:
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq 0x38(%rbp),%r10
	movb 0x0(%r10,%r11,1),%r13b
	testb %r13b,%r13b
	jnz L_428004
L_131092:
	cmpq 0x28(%rbp),%r11
	jnb L_130992
L_131094:
	incl %ecx
	jo L_131021
L_131095:
	movl %ecx,(localWord32+0x0)(%rip)
	xorb %dl,%dl
L_131096:
	movb %dl,0x0(%r14,%r15,1)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1412
.p2align 0x4
L_428004:
L_131097:
	movb $0x1,%dl
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_131096
.p2align 0x4
L_428005:
L_131076:
	movslq %ecx,%r15
	cmpq $0x7FFFFFFF,%r15
	ja L_428012
L_131077:
	xorl %ecx,%ecx
	xorq %r13,%r13
.p2align 0x4,,0x7
loop_1413:
	cmpq %r15,%r13
	jnl L_428009
.p2align 0x4,,0x7
loop_1414:
	movslq %ecx,%r11
	movb 0x0(%r14,%r11,1),%r10b
	testb %r10b,%r10b
	jz L_428007
L_131087:
	incl %ecx
	jo L_131021
L_131088:
	jmp loop_1414
.p2align 0x4
L_428007:
L_131085:
	incl %ecx
	jo L_131021
L_131086:
	incq %r13
	jmp loop_1413
.p2align 0x4
L_428009:
L_131078:
	movl 0x18(%rbp),%r15d
	movslq %r15d,%r14
	cmpq %r14,0x58(%rbp)
	jb L_130992
L_131079:
	cmpl %r15d,0x54(%rbp)
	jne L_428010
L_131082:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428010:
L_131081:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428012:
L_131090:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428017:
L_131113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_131114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131114
.p2align 0x4
.long 0x1D13
L_131114:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_131061
.p2align 0x4
L_428025:
	movl %r14d,%ecx
	movq %r11,%r14
L_130996:
	movslq %ecx,%r13
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_130992
L_130998:
	movq 0x0(%r11,%r13,8),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r9
	cmpq %r13,%r9
	jne L_130983
L_131000:
	testl %r11d,%r11d
	jz L_428026
L_131001:
	movq $0x12F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r13
L_131002:
	movq $0x1B95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x8(%rbp)
	jmp L_131003
.p2align 0x4
L_428026:
	movq %r10,%r13
	jmp L_131002
.p2align 0x4
L_428029:
	movl %r14d,%ecx
	movq %r11,%r14
	jmp L_130996
.p2align 0x4
L_428032:
L_131128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_131129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131129
.p2align 0x4
.long 0x8A3
L_131129:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_130990
.p2align 0x4
L_428033:
L_131138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_131139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131139
.p2align 0x4
.long 0x1D14
L_131139:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_130988
.text
.p2align 0x4
.globl sourceInfoNode_0
.hidden sourceInfoNode_0
sourceInfoNode_0:
L_131143:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_131144
L_131198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_131199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131199
.p2align 0x4
.long 0x460
L_131199:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_131144:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_131145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
.long 0x1541
L_131145:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131146
L_131196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_131197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131197
.p2align 0x4
.long 0x1864
L_131197:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_131146:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jnz L_428043
L_131147:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE40,%r15
	je L_428039
L_131194:
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE2A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_131167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428039:
L_131148:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_428042
L_131149:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_131150:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428041
.p2align 0x4,,0x7
L_131151:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_428040
L_131152:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_131150
.p2align 0x4
L_428040:
L_131153:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_131154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_428041:
L_131191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_131192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131192
.p2align 0x4
.long 0x805
L_131192:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_131151
.p2align 0x4
L_428042:
L_131193:
	movq $0x1,%r15
L_131156:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_131157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428043:
L_131195:
	movq 0x8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
L_131171:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_428044
L_131172:
	movl %r14d,0x0(%r15)
	movq $0xCD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xCDD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movl %ecx,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2143,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428044:
L_131169:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D18
L_131167:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131168
L_131173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_131174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131174
.p2align 0x4
.long 0x5A3
L_131174:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_131168:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%ecx
	movl %ecx,%r14d
	incl %ecx
	jo L_131169
L_131170:
	movl %ecx,0x0(%r15)
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r9,0x0(%r13)
	movl %r14d,%ecx
	jmp L_131171
.p2align 0x4
.long 0x1D15
L_131154:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131155
L_131189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_131190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131190
.p2align 0x4
.long 0x80A
L_131190:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_131155:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_131156
.p2align 0x4
.long 0x7F0
L_131157:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131158
L_131187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_131188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131188
.p2align 0x4
.long 0x61E
L_131188:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_131158:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_428050
L_131159:
	cmpb $0x5,0x0(%r14)
	je L_428049
L_131160:
	movq %r11,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_131161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_428049:
L_131179:
	movq 0x8(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x5C(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_131180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_428050:
L_131186:
	movq (globalObjptr+0xE448)(%rip),%r14
	xchgq %r14,%r15
L_131166:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_131167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D16
L_131161:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_131162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1D1A
L_131180:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_131181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x60E
L_131162:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131163
L_131177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_131178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131178
.p2align 0x4
.long 0x61E
L_131178:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_131163:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_131164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D1B
L_131181:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_131182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1D17
L_131164:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131165
L_131175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_131176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131176
.p2align 0x4
.long 0x1D19
L_131176:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_131165:
	movq 0x8(%rbp),%r15
	jmp L_131166
.p2align 0x4
.long 0x1D1C
L_131182:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131183
L_131184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_131185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131185
.p2align 0x4
.long 0x1D1D
L_131185:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_131183:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_131164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl sourceSeqIndex_0
.hidden sourceSeqIndex_0
sourceSeqIndex_0:
L_131200:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_131299
L_131201:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428059
L_131202:
	movq 0x8(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq $0xC71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_428058
L_131203:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_131204:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_428057
L_131206:
	cmpq $0x1,%r15
	je L_428055
L_131207:
	movq 0x8(%r15),%r15
	jmp L_131204
.p2align 0x4
L_428055:
L_131208:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131209
L_131296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_131297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131297
.p2align 0x4
.long 0x517
L_131297:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_131209:
	movl 0x40(%rbp),%ecx
L_131210:
	movl %ecx,0x48(%rbp)
	movq $0x3769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_131211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_428057:
L_131205:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428058:
L_131298:
	xorl %ecx,%ecx
	jmp L_131210
.p2align 0x4
L_428059:
L_131299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_131300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131300
.p2align 0x4
.long 0x460
L_131300:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_131202
.p2align 0x4
.long 0x4A8
L_131211:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131212
L_131294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_131295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131295
.p2align 0x4
.long 0x4B1
L_131295:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_131212:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_428062
L_131215:
	movl %r13d,%r14d
	decl %r14d
	jo L_131205
L_131216:
	movl %r13d,0x48(%rbp)
	movq $0x376B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_131217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_428062:
L_131214:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A8
L_131217:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_131214
L_131219:
	cmpl $0x0,%ecx
	jl L_131271
L_131220:
	movl $0x0,0x48(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1415:
	cmpl %ecx,%ebx
	jnl L_428064
L_131292:
	movslq %ebx,%r15
	movl 0x48(%rbp),%r14d
	imull $0x1F,%r14d
	movq 0x38(%rbp),%r13
	addl 0x0(%r13,%r15,4),%r14d
	movl %r14d,0x48(%rbp)
	incl %ebx
	jmp loop_1415
.p2align 0x4
L_428064:
L_131221:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131222
L_131290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_131291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131291
.p2align 0x4
.long 0x1D20
L_131291:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_131222:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_428094
L_131224:
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x48(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_131205
L_131225:
	movslq %r11d,%r13
	movq %r13,0x50(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_131227
L_131228:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x58(%rbp)
	cmpq $0x1,%r11
	je L_131238
L_131229:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_131230:
	movq (globalObjptr+0xAE8)(%rip),%r10
	movq 0x0(%r10),%r13
	incq %r13
	jo L_428090
L_131232:
	movq %r13,0x0(%r10)
	movq 0x8(%r15),%r13
	cmpq 0x38(%rbp),%r13
	je L_131286
L_131233:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	cmpq %r10,0x40(%rbp)
	jne L_428086
L_131276:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_132:
	cmpq %r11,0x40(%rbp)
	je L_428085
L_131277:
	movq 0x38(%rbp),%r10
	movl 0x0(%r13,%r11,4),%r9d
	cmpl %r9d,0x0(%r10,%r11,4)
	jne L_428065
L_131284:
	incq %r11
	jmp vectorEqualLoop_132
.p2align 0x4
L_428065:
L_131278:
	cmpq $0x1,%r14
	je L_428066
L_131279:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_131230
.p2align 0x4
L_428066:
L_131280:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131238
L_131282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_131283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131283
.p2align 0x4
.long 0x1D1F
L_131283:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_131238:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2623,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%rdx
	movl 0x0(%rdx),%r15d
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	incl %r15d
	jo L_131205
L_131239:
	movl %r15d,0x0(%rdx)
	movq $0xFA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r13d,0x0(%r15)
	movl 0x48(%rbp),%r13d
	movl %r13d,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_131205
L_131240:
	movl %r13d,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28FF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r9)
	movq 0x50(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_131227
L_131242:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r10,%r8,1)
	movq %r9,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_131214
L_131244:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_131205
L_131245:
	cmpl %r15d,%r10d
	jnl L_428078
L_131247:
	addl %r10d,%r10d
	jo L_131205
L_131248:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_428076
L_131249:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xCCF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_131250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131250
.p2align 0x4
.long 0x1D1E
L_131250:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1416:
	cmpq 0x28(%rbp),%r15
	jnl L_428067
L_131272:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1416
.p2align 0x4
L_428067:
L_131251:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_131214
L_131253:
	cmpl $0x0,%r13d
	jl L_428074
L_131254:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_1417:
	movl 0x44(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_428073
L_131256:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_131265
L_131257:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
L_131258:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428071
.p2align 0x4,,0x7
L_131259:
	movq 0x50(%rbp),%r15
	movl 0x4(%r15),%r14d
	andl 0x20(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_131205
L_131260:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_428069
L_131262:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28FF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_428068
L_131263:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_131258
.p2align 0x4
L_428068:
L_131265:
	incl 0x44(%rbp)
	jmp loop_1417
.p2align 0x4
L_428069:
L_131227:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428071:
L_131267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_131268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131268
.p2align 0x4
.long 0x96A
L_131268:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_131259
.p2align 0x4
L_428073:
L_131255:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428074:
L_131271:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428076:
L_131273:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428078:
L_131246:
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428085:
L_131286:
	movl 0x0(%r15),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428086:
L_131234:
	cmpq $0x1,%r14
	je L_428087
L_131235:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_131230
.p2align 0x4
L_428087:
L_131236:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131238
L_131274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_131275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131275
.p2align 0x4
.long 0x1D1F
L_131275:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_131238
.p2align 0x4
L_428090:
L_131231:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428094:
L_131223:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl maybeSplit_0
.hidden maybeSplit_0
maybeSplit_0:
L_131301:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_131302
L_131408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131409
.p2align 0x4
.long 0x1CA0
L_131409:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_131302:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428098
L_131303:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428098:
L_131304:
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_131305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D21
L_131305:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131306
L_131406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131407
.p2align 0x4
.long 0x1D37
L_131407:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_131306:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_428106
L_131307:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_131308:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428105
.p2align 0x4,,0x7
L_131309:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428100
L_131310:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_131308
.p2align 0x4
L_428100:
L_131311:
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_131312:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428104
.p2align 0x4,,0x7
L_131313:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_428102
L_131398:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428101
L_131399:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_131312
.p2align 0x4
L_428101:
L_131400:
L_131317:
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_131318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_428102:
L_131314:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428103
L_131315:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x78(%rbp)
	jmp L_131312
.p2align 0x4
L_428103:
L_131316:
	movq 0x98(%rbp),%r13
	xchgq %r13,%r15
	jmp L_131317
.p2align 0x4
L_428104:
L_131401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_131402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131402
.p2align 0x4
.long 0x1D36
L_131402:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_131313
.p2align 0x4
L_428105:
L_131403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_131404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131404
.p2align 0x4
.long 0x1D36
L_131404:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_131309
.p2align 0x4
L_428106:
L_131405:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_131317
.p2align 0x4
.long 0x1D22
L_131318:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131319
L_131396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_131397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131397
.p2align 0x4
.long 0x1D35
L_131397:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_131319:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428108
L_131320:
	movq %r14,0x98(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_131321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428108:
L_131391:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_131392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D23
L_131321:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131322
L_131389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131390
.p2align 0x4
.long 0x1D34
L_131390:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_131322:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428110
L_131323:
	movq %r14,0x98(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (word_46+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428110:
L_131384:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_131385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_131392:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D24
word_46:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131324
L_131382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131383
.p2align 0x4
.long 0x1D33
L_131383:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_131324:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	movl $0x2,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_131325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1
L_131385:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_418:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131393
L_131394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131395
.p2align 0x4
.long 0x452
L_131395:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131393:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D25
L_131325:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_131326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x1
bug_417:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131386
L_131387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131388
.p2align 0x4
.long 0x452
L_131388:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131386:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D26
L_131326:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x59(%rbp)
	movzbq %r15b,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x90(%rbp)
	movl $0x2,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_131327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x1D26
L_131327:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131328
L_131380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131381
.p2align 0x4
.long 0x1D32
L_131381:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_131328:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xF398)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%r14)
	movb 0x58(%rbp),%r15b
	cmpb $0x4,%r15b
	je L_428116
	cmpb $0x6,%r15b
	je L_428115
L_131329:
	movq (globalObjptr+0x7488)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428115:
L_131378:
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_131379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428116:
L_131330:
	movl $0x1,%ecx
L_131331:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428117
L_131332:
	movq %r14,0x98(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_131333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428117:
L_131373:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_131374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D31
L_131379:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%ecx
	movl %ecx,0x30(%rbp)
	jmp L_131331
.p2align 0x4
.long 0x1D27
L_131333:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_131334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_131374:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D28
L_131334:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_131335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
bug_416:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131375
L_131376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131377
.p2align 0x4
.long 0x452
L_131377:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131375:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D29
L_131335:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_131336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D2A
L_131336:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131337
L_131371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131372
.p2align 0x4
.long 0x1D30
L_131372:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_131337:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131338
.p2align 0x4
.long 0x1D2B
L_131338:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1418:
	cmpq $0x2,%r15
	jnl L_428122
L_131366:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_428121
	cmpl $0x1,%r14d
	je L_428120
L_131367:
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428120:
L_131370:
	movq 0x48(%rbp),%r14
L_131369:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1418
.p2align 0x4
L_428121:
L_131368:
	movq $0x2,%r14
	jmp L_131369
.p2align 0x4
L_428122:
L_131339:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131340
L_131364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131365
.p2align 0x4
.long 0x1D2F
L_131365:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_131340:
	movq 0x30(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_428129
L_131341:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_131342:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428128
.p2align 0x4,,0x7
L_131343:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_428123
L_131344:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_131342
.p2align 0x4
L_428123:
L_131345:
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_131346:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428127
.p2align 0x4,,0x7
L_131347:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_428125
L_131356:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_428124
L_131357:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_131346
.p2align 0x4
L_428124:
L_131358:
L_131351:
	movq %r15,0xA0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0x90,%rbp
	leaq (L_131352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1606
.p2align 0x4
L_428125:
L_131348:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_428126
L_131349:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_131346
.p2align 0x4
L_428126:
L_131350:
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_131351
.p2align 0x4
L_428127:
L_131359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131360
.p2align 0x4
.long 0x1D2E
L_131360:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_131347
.p2align 0x4
L_428128:
L_131361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131362
.p2align 0x4
.long 0x1D2E
L_131362:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_131343
.p2align 0x4
L_428129:
L_131363:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_131351
.p2align 0x4
.long 0x1D2C
L_131352:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131353
L_131354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131355
.p2align 0x4
.long 0x1D2D
L_131355:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_131353:
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x212F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x1,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x30(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x38(%r14)
	movq (globalObjptr+0xF398)(%rip),%r13
	movq %r13,0x40(%r14)
	movq %r14,0x18(%rbp)
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1606
.hidden x_1606
x_1606:
L_131410:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_131411
L_131576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_131577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131577
.p2align 0x4
.long 0x658
L_131577:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_131411:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x4(%r14),%r13d
	movl %r13d,0x40(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x44(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_428162
L_131412:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x10(%rbp)
	movl $0x1,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_131413:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428161
.p2align 0x4,,0x7
L_131415:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_131416
L_131526:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1092,%r14
	je L_428149
	cmpq $0x1094,%r14
	je L_428147
L_131416:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428133
L_131417:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movl $0x1,0x78(%rbp)
	jmp L_131413
.p2align 0x4
L_428133:
L_131418:
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,%ecx
L_131419:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_131421
L_131505:
	testl %ecx,%ecx
	jz L_428134
L_131507:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_131508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_428134:
L_131421:
	movl 0x44(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_428143
L_131422:
	movq 0x8(%rbp),%r15
L_131423:
	cmpq $0x1,%r15
	je L_428142
L_131424:
	movq %r15,%r13
	movq 0x8(%r15),%r15
	movq 0x20(%rbp),%r14
	movq 0x28(%rbp),%r10
	movq 0x30(%rbp),%r11
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_131425:
	incl %ecx
	jo L_428141
L_131427:
	cmpq $0x1,%r15
	je L_428135
L_131428:
	movq 0x8(%r15),%r15
	jmp L_131425
.p2align 0x4
L_428135:
L_131429:
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movq %r10,0x18(%rbp)
	movq %r11,0x20(%rbp)
L_131430:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_428140
L_131431:
	cmpq $0x7FFFFFFF,%rdx
	ja L_428139
L_131432:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_131433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131433
.p2align 0x4
.long 0x1D38
L_131433:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x30(%rbp)
L_131434:
	movq 0x8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1419:
	cmpq 0x28(%rbp),%r15
	jnl L_428137
L_131439:
	cmpq $0x1,%r14
	je L_428136
L_131440:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1419
.p2align 0x4
L_428136:
L_131441:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428137:
L_131435:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131436
L_131437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_131438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131438
.p2align 0x4
.long 0x1D39
L_131438:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_131436:
	movq 0x30(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428139:
L_131442:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428140:
L_131443:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_131434
.p2align 0x4
L_428141:
L_131426:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428142:
L_131444:
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	xorl %ecx,%ecx
	jmp L_131430
.p2align 0x4
L_428143:
L_131446:
	movq 0x28(%rbp),%r15
	cmpq $0x2,%r15
	je gcState_0
L_131447:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_131448
L_131449:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1098,%r14
	je gcState_1
L_131448:
	movq 0x8(%rbp),%r15
	jmp L_131423
.p2align 0x4
gcState_1:
gcState_0:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428144
L_131451:
	movq %r14,0x88(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_131452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428144:
L_131499:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_131500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_428147:
L_131570:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428148
L_131571:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movl $0x1,0x78(%rbp)
	jmp L_131413
.p2align 0x4
L_428148:
L_131572:
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,%ecx
	jmp L_131419
.p2align 0x4
L_428149:
L_131527:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movl 0x40(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_428156
L_131528:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	je L_428152
L_131538:
	movq 0x18(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_131539:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_428151
L_131540:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428150
L_131541:
	movq %r15,0x18(%rbp)
	movq %r13,0x38(%rbp)
	movl %ecx,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_131413
.p2align 0x4
L_428150:
L_131542:
	movq %r15,0x8(%rbp)
	movq %r13,0x10(%rbp)
	jmp L_131419
.p2align 0x4
L_428151:
L_131543:
	movq (globalObjptr+0x7480)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428152:
L_131529:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x0,0x18(%rbp)
.p2align 0x4,,0x7
L_131530:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428155
.p2align 0x4,,0x7
L_131531:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_428154
L_131532:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_428153
L_131533:
	movq %r15,0x38(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movl 0x18(%rbp),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_131413
.p2align 0x4
L_428153:
L_131534:
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movl 0x18(%rbp),%ecx
	jmp L_131419
.p2align 0x4
L_428154:
L_131535:
	movq (globalObjptr+0x7478)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428155:
L_131536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131537
.p2align 0x4
.long 0x1D50
L_131537:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_131531
.p2align 0x4
L_428156:
L_131544:
	movl 0x78(%rbp),%r15d
	testl %r15d,%r15d
	jz L_131546
L_131549:
	cmpq $0x1,0x38(%rbp)
	jne L_428158
L_131546:
	movq 0x88(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	je L_428157
L_131548:
	movq 0x18(%rbp),%r15
	movl $0x1,%ecx
	jmp L_131539
.p2align 0x4
L_428157:
L_131547:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,0x18(%rbp)
	jmp L_131530
.p2align 0x4
L_428158:
L_131550:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_131551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_428161:
L_131573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_131574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131574
.p2align 0x4
.long 0x1D57
L_131574:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_131415
.p2align 0x4
L_428162:
L_131575:
	movq $0x1,0x8(%rbp)
	movl $0x1,%ecx
	jmp L_131419
.p2align 0x4
.long 0x1D4A
L_131508:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131509
L_131524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_131525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131525
.p2align 0x4
.long 0x1D4F
L_131525:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_131509:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x4(%r15),%r13b
	movq 0x10(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jnz L_428165
L_131510:
	cmpb $0x1,%r13b
	jne L_428164
L_131512:
	movslq 0x38(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x88(%rbp)
	movq %r11,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_131513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428164:
L_131476:
	movq (globalObjptr+0x7470)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428165:
L_131522:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq (globalObjptr+0x18A8)(%rip),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,%r9d
	incl %r10d
	jo L_131426
L_131523:
	movl %r10d,0x0(%r13)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xF8D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r8,0x0(%r14)
	movq $0x2123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
L_131517:
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movl 0x44(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428166
L_131518:
	movq %r14,%r15
	jmp L_131423
.p2align 0x4
L_428166:
L_131519:
	movq %r14,0x8(%rbp)
	jmp L_131446
.p2align 0x4
.long 0x1D3A
L_131452:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131453
L_131497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_131498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131498
.p2align 0x4
.long 0x1D49
L_131498:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_131453:
	movq $0x3985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x5,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_131454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1
L_131500:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D51
L_131551:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131552
L_131567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_131568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131568
.p2align 0x4
.long 0x1D56
L_131568:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_131552:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x4(%r15),%r13b
	movq 0x10(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jnz L_428171
L_131553:
	cmpb $0x1,%r13b
	jne L_131476
L_131555:
	movslq 0x78(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x98(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0xA0(%rbp)
	movq %r11,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_131556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428171:
L_131565:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq (globalObjptr+0x18A8)(%rip),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,%r9d
	incl %r10d
	jo L_131426
L_131566:
	movl %r10d,0x0(%r13)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xF8D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r8,0x0(%r14)
	movq $0x2123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
L_131560:
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	je L_428172
L_131562:
	xorl %ecx,%ecx
	movq %r14,%r15
	jmp L_131539
.p2align 0x4
L_428172:
L_131561:
	movq %r14,0x10(%rbp)
	movl $0x0,0x18(%rbp)
	jmp L_131530
.p2align 0x4
.long 0x1D4B
L_131513:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_131514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D3A
L_131454:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0x80(%rbp)
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_131455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x1
bug_419:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131501
L_131502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131503
.p2align 0x4
.long 0x452
L_131503:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131501:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D52
L_131556:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_131557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D4C
L_131514:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_131515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D3B
L_131455:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131456
L_131495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_131496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131496
.p2align 0x4
.long 0x1D48
L_131496:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_131456:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xF3A0)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_131457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D53
L_131557:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_131558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D4D
L_131515:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131516
L_131520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131521
.p2align 0x4
.long 0x1D4E
L_131521:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_131516:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x12A8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_131517
.p2align 0x4
.long 0x1D3C
L_131457:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131458
L_131493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131494
.p2align 0x4
.long 0x1D47
L_131494:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_131458:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_131459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
.long 0x1D54
L_131558:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131559
L_131563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_131564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131564
.p2align 0x4
.long 0x1D55
L_131564:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_131559:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x12A8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_131560
.p2align 0x4
.long 0x1D3D
L_131459:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131460
L_131491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131492
.p2align 0x4
.long 0x1D46
L_131492:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_131460:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428183
L_131461:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_131462:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131463
.p2align 0x4
.long 0x1D3E
L_131463:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1420:
	cmpq $0x1,%r15
	jnl L_428180
L_131470:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1420
.p2align 0x4
L_428180:
L_131464:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131465
L_131468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131469
.p2align 0x4
.long 0x1D3F
L_131469:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_131465:
	movq 0x38(%rbp),%r10
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r10)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq 0x78(%rbp),%r10
	movq %r10,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x30,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x8(%r13)
	movq 0x20(%rbp),%r10
	movq %r10,0x10(%r13)
	movq 0x28(%rbp),%r10
	movq %r10,0x18(%r13)
	movq 0x30(%rbp),%r10
	movq %r10,0x20(%r13)
	movq 0x70(%rbp),%r10
	movq 0x0(%r10),%r15
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r11,0x0(%r10)
	movq (globalObjptr+0xF58)(%rip),%r11
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x212F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x50,%r12
	movq $0x0,0x0(%r10)
	movl $0x0,0x8(%r10)
	movl $0x0,0xC(%r10)
	movl $0x0,0x10(%r10)
	movl $0x0,0x14(%r10)
	movl $0x1,0x18(%r10)
	movl $0x0,0x1C(%r10)
	movb $0x1,%r9b
	movzbl %r9b,%ecx
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	shll $0x8,%r8d
	orl %r8d,%ecx
	movl %ecx,0x20(%r10)
	movl $0x0,0x24(%r10)
	movq 0x18(%rbp),%r9
	movq %r9,0x28(%r10)
	movq 0x50(%rbp),%r9
	movq %r9,0x30(%r10)
	movq (globalObjptr+0xBB8)(%rip),%r9
	movq %r9,0x38(%r10)
	movq (globalObjptr+0xF3A0)(%rip),%r9
	movq %r9,0x40(%r10)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_428181
L_131466:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
	jmp L_131425
.p2align 0x4
L_428181:
L_131467:
	movq %r10,0x18(%rbp)
	movq %r14,0x10(%rbp)
	movq %r11,0x20(%rbp)
	xorl %ecx,%ecx
	jmp L_131430
.p2align 0x4
L_428183:
L_131471:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_131472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
.long 0x1D40
L_131472:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131473
L_131489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131490
.p2align 0x4
.long 0x1D45
L_131490:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_131473:
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x4(%r15),%r13b
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jnz L_428186
L_131474:
	cmpb $0x1,%r13b
	jne L_131476
L_131477:
	movslq 0x10(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x60(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_131478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428186:
L_131487:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq (globalObjptr+0x18A8)(%rip),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,%r9d
	incl %r10d
	jo L_131426
L_131488:
	movl %r10d,0x0(%r13)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xF8D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r8,0x0(%r14)
	movq $0x2123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
new1_22:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131482
.p2align 0x4
.long 0x1D3E
L_131482:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1421:
	cmpq $0x1,%r15
	jnl L_428187
L_131484:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1421
.p2align 0x4
L_428187:
L_131483:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_131462
.p2align 0x4
.long 0x1D41
L_131478:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_131479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D42
L_131479:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_131480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D43
L_131480:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131481
L_131485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_131486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131486
.p2align 0x4
.long 0x1D44
L_131486:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_131481:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x12A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	jmp new1_22
.text
.p2align 0x4
.globl x_1200
.hidden x_1200
x_1200:
L_131578:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_131579
L_131592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131593
.p2align 0x4
.long 0x4E9
L_131593:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_131579:
	movq 0x10(%rbp),%r15
loop_1422:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_428195
	cmpq $0x2,%r14
	je L_428191
L_131580:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movb 0x0(%rbp),%r15b
	movb %r15b,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_131581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1200
.p2align 0x4
L_428191:
L_131586:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movw 0x0(%r13),%r15w
	movw %r15w,%r11w
	andw $0x1,%r11w
	jnz L_428194
L_131587:
	movzbw 0x0(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movw %r15w,0x0(%r13)
	movw 0x0(%r14),%r15w
	movw %r15w,%r14w
	andw $0x3,%r14w
	cmpw $0x1,%r14w
	je L_428193
	cmpw $0x2,%r14w
	je L_428192
L_131588:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428192:
L_131590:
	shrw $0x2,%r15w
	movb %r15b,%r14b
	cmpb 0x0(%rbp),%r14b
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428193:
L_131583:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428194:
L_131591:
	shrw $0x1,%r15w
	movb %r15b,%r14b
	cmpb %r14b,0x0(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428195:
L_131585:
	movzbw 0x0(%rbp),%r15w
	shlw $0x2,%r15w
	orw $0x2,%r15w
	movw %r15w,0x0(%rbp)
	jmp up_0
.p2align 0x4
.long 0x4E6
L_131581:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r14d
	movl %r14d,0x4(%rbp)
	testl %r14d,%r14d
	jz L_131583
L_131584:
	movq 0x10(%rbp),%r15
	jmp loop_1422
.text
.p2align 0x4
.globl x_1377
.hidden x_1377
x_1377:
L_131594:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_131595
L_131608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131609
.p2align 0x4
.long 0x45C
L_131609:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_131595:
	movq 0x10(%rbp),%r15
loop_1423:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je up_1
	cmpq $0x2,%r14
	je L_428198
L_131596:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_131597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1377
.p2align 0x4
L_428198:
L_131602:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_428201
L_131604:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_428200
	cmpq $0x2,%r15
	je L_428199
L_131605:
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428199:
L_131607:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428200:
L_131599:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428201:
L_131603:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51F
L_131597:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r14d
	movl %r14d,0x18(%rbp)
	testl %r14d,%r14d
	jz L_131599
L_131600:
	movq 0x10(%rbp),%r15
	jmp loop_1423
.text
.p2align 0x4
.globl up_1
.hidden up_1
up_1:
L_131610:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_131611
L_131639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_131640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131640
.p2align 0x4
.long 0x460
L_131640:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_131611:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_131625
	cmpq $0x2,%r15
	je L_428209
L_131612:
	movq 0x0(%rbp),%r10
	cmpq $0x1,%r10
	je setTop_4
	cmpq $0x2,%r10
	je L_131625
L_131613:
	movq 0x10(%r15),%r9
	cmpq %r9,0x10(%r10)
	je L_131625
setTop_4:
	cmpq $0x1,0x0(%r14)
	jne L_428206
L_131617:
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x0(%rbp)
	movq %r11,%r13
continue_4:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_428205
L_131618:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_131619:
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_131620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_1
.p2align 0x4
L_428205:
L_131625:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428206:
L_131616:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428209:
L_131631:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je setTop_4
	cmpq $0x2,%r15
	je L_131625
L_131632:
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je continue_10
L_131633:
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	jne L_131616
	movq %r11,%r13
	jmp continue_4
.p2align 0x4
continue_10:
	movq %r11,%r13
	jmp continue_4
.p2align 0x4
.long 0x5B0
L_131620:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r14d
	movl %r14d,0x10(%rbp)
	testl %r14d,%r14d
	jz L_131616
L_131622:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_131625
L_131623:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_131619
.text
.p2align 0x4
.globl toString_546
.hidden toString_546
toString_546:
L_131641:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_132050
L_131642:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428273
L_131643:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428272
	cmpq $0x2,%r15
	je L_428271
	cmpq $0x3,%r15
	je L_428270
	cmpq $0x5,%r15
	je L_428269
L_131644:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_428216
	jmp *jumpTable_273(,%rax,8)
.data
.p2align 0x4
jumpTable_273:
.quad L_428261,L_428252,L_428244,L_428243,L_428234,L_428233,L_428225,L_428217
.text
.p2align 0x4
L_428216:
L_131645:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_131646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428217:
L_131984:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_132041
	cmpq $0x5,%r13
	je L_428223
	cmpq $0x6,%r13
	je L_428221
L_131985:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_131986
L_132037:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_428219
	cmpq $0xF54,%r13
	je L_428218
L_131986:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_131987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428218:
L_132039:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_131997:
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_131998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_428219:
L_132038:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131997
.p2align 0x4
L_428221:
L_132043:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_428222
L_132044:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131997
.p2align 0x4
L_428222:
L_132045:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131997
.p2align 0x4
L_428223:
L_132041:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131997
.p2align 0x4
L_428225:
L_131954:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_131979
	cmpq $0x5,%r13
	je L_428231
	cmpq $0x6,%r13
	je L_428229
L_131955:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_131956
L_131975:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_428227
	cmpq $0xF54,%r13
	je L_428226
L_131956:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_131957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428226:
L_131977:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_131967:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_131968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_428227:
L_131976:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131967
.p2align 0x4
L_428229:
L_131981:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_428230
L_131982:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131967
.p2align 0x4
L_428230:
L_131983:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131967
.p2align 0x4
L_428231:
L_131979:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131967
.p2align 0x4
L_428233:
L_131907:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x5,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_131908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_428234:
L_131840:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_428235
L_131841:
	movl 0x4(%r14),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_131842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428235:
L_131860:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_131902
	cmpq $0x5,%r13
	je L_428241
	cmpq $0x6,%r13
	je L_428239
L_131861:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_428238
L_131898:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_428237
	cmpq $0xF54,%r13
	je L_428236
	movq %r15,%r14
L_131862:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_131863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428236:
L_131900:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_131873:
	movq 0x8(%rbp),%r15
	movl 0x4(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_131874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428237:
L_131899:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131873
.p2align 0x4
L_428238:
	movq %r15,%r14
	jmp L_131862
.p2align 0x4
L_428239:
L_131904:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_428240
L_131905:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131873
.p2align 0x4
L_428240:
L_131906:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131873
.p2align 0x4
L_428241:
L_131902:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131873
.p2align 0x4
L_428243:
L_131824:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_131825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_428244:
L_131768:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_131819
	cmpq $0x5,%r13
	je L_428250
	cmpq $0x6,%r13
	je L_428248
L_131769:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_131770
L_131815:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_428246
	cmpq $0xF54,%r13
	je L_428245
L_131770:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_131771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428245:
L_131817:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_131781:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_131782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_428246:
L_131816:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131781
.p2align 0x4
L_428248:
L_131821:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_428249
L_131822:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131781
.p2align 0x4
L_428249:
L_131823:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131781
.p2align 0x4
L_428250:
L_131819:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131781
.p2align 0x4
L_428252:
L_131720:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0x11F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_131763
	cmpq $0x5,%r13
	je L_428259
	cmpq $0x6,%r13
	je L_428257
L_131721:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_131722
L_131759:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_428255
	cmpq $0xF54,%r13
	je L_428253
L_131722:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_131723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428253:
L_131761:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	movq %r15,0x18(%rbp)
L_131733:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_428254
L_131751:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_131752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428254:
L_131734:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_428255:
L_131760:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_131733
.p2align 0x4
L_428257:
L_131765:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_428258
L_131766:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_131733
.p2align 0x4
L_428258:
L_131767:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_131733
.p2align 0x4
L_428259:
L_131763:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_131733
.p2align 0x4
L_428261:
L_131664:
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_131715
	cmpq $0x5,%r13
	je L_428267
	cmpq $0x6,%r13
	je L_428265
L_131665:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_131666
L_131711:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_428263
	cmpq $0xF54,%r13
	je L_428262
L_131666:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_131667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428262:
L_131713:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x20(%rbp)
L_131677:
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_131678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428263:
L_131712:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_131677
.p2align 0x4
L_428265:
L_131717:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_428266
L_131718:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_131677
.p2align 0x4
L_428266:
L_131719:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_131677
.p2align 0x4
L_428267:
L_131715:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_131677
.p2align 0x4
L_428269:
L_132049:
	movq (globalObjptr+0xEA08)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428270:
L_132048:
	movq (globalObjptr+0xD168)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428271:
L_132047:
	movq (globalObjptr+0xE450)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428272:
L_132046:
	movq (globalObjptr+0xE9E0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428273:
L_132050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_132051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132051
.p2align 0x4
.long 0x460
L_132051:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_131643
.p2align 0x4
.long 0x4A1
L_131646:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_428278
	cmpl $0x10,%r15d
	je L_428277
	cmpl $0x20,%r15d
	je L_428276
	cmpl $0x40,%r15d
	je L_428275
L_131647:
	movq (globalObjptr+0x1710)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428275:
L_131659:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_131660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428276:
L_131654:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_131655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428277:
L_131653:
	movq (globalObjptr+0xEE40)(%rip),%r14
	movq %r14,0x10(%rbp)
simple_16:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_131649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428278:
L_131648:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp simple_16
.p2align 0x4
.long 0xAA2
L_131987:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_428282
	cmpl $0x10,%r15d
	je L_428281
	cmpl $0x20,%r15d
	je L_428280
	cmpl $0x40,%r15d
	je L_428279
L_131988:
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428279:
L_132036:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131997
.p2align 0x4
L_428280:
L_132035:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131997
.p2align 0x4
L_428281:
L_132034:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131997
.p2align 0x4
L_428282:
L_131996:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131997
.p2align 0x4
.long 0x5F6
L_131998:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_131999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
.long 0x4A6
L_131957:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je L_428286
	cmpl $0x10,%r15d
	je L_428285
	cmpl $0x20,%r15d
	je L_428284
	cmpl $0x40,%r15d
	je L_428283
L_131958:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428283:
L_131974:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131967
.p2align 0x4
L_428284:
L_131973:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131967
.p2align 0x4
L_428285:
L_131972:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131967
.p2align 0x4
L_428286:
L_131966:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131967
.p2align 0x4
.long 0x2B
L_131968:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131969
L_131970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_131971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131971
.p2align 0x4
.long 0x2C
L_131971:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_131969:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x491
L_131908:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131909
L_131952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_131953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131953
.p2align 0x4
.long 0x4B2
L_131953:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_131909:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_131947
	cmpq $0x5,%r15
	je L_428293
	cmpq $0x6,%r15
	je L_428291
L_131910:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_131911
L_131943:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_428289
	cmpq $0xF54,%r15
	je L_428288
L_131911:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_131912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428288:
L_131945:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x30(%rbp)
L_131922:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_131923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_428289:
L_131944:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_131922
.p2align 0x4
L_428291:
L_131949:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_428292
L_131950:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_131922
.p2align 0x4
L_428292:
L_131951:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_131922
.p2align 0x4
L_428293:
L_131947:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_131922
.p2align 0x4
.long 0x1
L_131842:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_131843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x743
L_131863:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_428299
	cmpl $0x10,%r15d
	je L_428298
	cmpl $0x20,%r15d
	je L_428297
	cmpl $0x40,%r15d
	je L_428296
L_131864:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428296:
L_131897:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131873
.p2align 0x4
L_428297:
L_131896:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131873
.p2align 0x4
L_428298:
L_131895:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131873
.p2align 0x4
L_428299:
L_131872:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131873
.p2align 0x4
.long 0x2B
L_131874:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131875
L_131893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_131894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131894
.p2align 0x4
.long 0x2C
L_131894:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_131875:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_131876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x5F0
L_131825:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x0,%r15d
	jl L_428301
L_131826:
	movl %r15d,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_131827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428301:
L_131834:
	negl %r15d
	jo L_428302
L_131835:
	movl %r15d,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_131836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428302:
L_131702:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4ED
L_131771:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpl $0x8,%r15d
	je L_428306
	cmpl $0x10,%r15d
	je L_428305
	cmpl $0x20,%r15d
	je L_428304
	cmpl $0x40,%r15d
	je L_428303
L_131772:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428303:
L_131814:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_131781
.p2align 0x4
L_428304:
L_131813:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131781
.p2align 0x4
L_428305:
L_131812:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131781
.p2align 0x4
L_428306:
L_131780:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_131781
.p2align 0x4
.long 0x8AA
L_131782:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_131783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x4ED
L_131723:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpl $0x8,%r15d
	je L_428310
	cmpl $0x10,%r15d
	je L_428309
	cmpl $0x20,%r15d
	je L_428308
	cmpl $0x40,%r15d
	je L_428307
L_131724:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_131725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428307:
L_131758:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_131733
.p2align 0x4
L_428308:
L_131757:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_131733
.p2align 0x4
L_428309:
L_131756:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_131733
.p2align 0x4
L_428310:
L_131732:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_131733
.p2align 0x4
.long 0x490
L_131752:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131753
L_131754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_131755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131755
.p2align 0x4
.long 0x5E6
L_131755:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_131753:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
toString_228:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4A6
L_131667:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je L_428315
	cmpl $0x10,%r15d
	je L_428314
	cmpl $0x20,%r15d
	je L_428313
	cmpl $0x40,%r15d
	je L_428312
L_131668:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428312:
L_131710:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_131677
.p2align 0x4
L_428313:
L_131709:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_131677
.p2align 0x4
L_428314:
L_131708:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_131677
.p2align 0x4
L_428315:
L_131676:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_131677
.p2align 0x4
.long 0x2
L_131678:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpl $0x0,%r15d
	jl L_428316
L_131679:
	movl %r15d,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_131680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428316:
L_131701:
	negl %r15d
	jo L_131702
L_131703:
	movl %r15d,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_131704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
L_131660:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131661
L_131662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131663
.p2align 0x4
.long 0x452
L_131663:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131661:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5338)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_131655:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131656
L_131657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131658
.p2align 0x4
.long 0x452
L_131658:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131656:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_131649:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131650
L_131651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_131652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131652
.p2align 0x4
.long 0x2C
L_131652:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_131650:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEE30)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEE38)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_131989:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131990
L_131994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131995
.p2align 0x4
.long 0x452
L_131995:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131990:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xA47
L_131999:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb 0x20(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_428324
	cmpb $0x2,%r15b
	je L_428323
	cmpb $0x3,%r15b
	je L_428322
L_132000:
	movq (globalObjptr+0xD660)(%rip),%r15
	movq %r15,0x20(%rbp)
L_132001:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_132002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428322:
L_132033:
	movq (globalObjptr+0xD7F0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_132001
.p2align 0x4
L_428323:
L_132032:
	movq (globalObjptr+0xD800)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_132001
.p2align 0x4
L_428324:
L_132031:
	movq (globalObjptr+0xD668)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_132001
.p2align 0x4
.long 0x1
L_131959:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131960
L_131964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131965
.p2align 0x4
.long 0x452
L_131965:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131960:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x797
L_131912:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpl $0x8,%r15d
	je L_428329
	cmpl $0x10,%r15d
	je L_428328
	cmpl $0x20,%r15d
	je L_428327
	cmpl $0x40,%r15d
	je L_428326
L_131913:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428326:
L_131942:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_131922
.p2align 0x4
L_428327:
L_131941:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_131922
.p2align 0x4
L_428328:
L_131940:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_131922
.p2align 0x4
L_428329:
L_131921:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_131922
.p2align 0x4
.long 0x69C
L_131923:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_131924:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428333
.p2align 0x4,,0x7
L_131925:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428330
L_131926:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131924
.p2align 0x4
L_428330:
L_131927:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_131928:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428332
.p2align 0x4,,0x7
L_131929:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428331
L_131930:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131928
.p2align 0x4
L_428331:
L_131931:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428332:
L_131936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131937
.p2align 0x4
.long 0x45C
L_131937:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131929
.p2align 0x4
L_428333:
L_131938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131939
.p2align 0x4
.long 0x45C
L_131939:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131925
.p2align 0x4
.long 0x4B0
L_131843:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq $0x1,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
.p2align 0x4,,0x7
L_131844:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428337
.p2align 0x4,,0x7
L_131845:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428334
L_131846:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131844
.p2align 0x4
L_428334:
L_131847:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_131848:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428336
.p2align 0x4,,0x7
L_131849:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428335
L_131850:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131848
.p2align 0x4
L_428335:
L_131851:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428336:
L_131856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131857
.p2align 0x4
.long 0x45C
L_131857:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131849
.p2align 0x4
L_428337:
L_131858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131859
.p2align 0x4
.long 0x45C
L_131859:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131845
.p2align 0x4
.long 0x1
L_131865:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131866
L_131870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131871
.p2align 0x4
.long 0x452
L_131871:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131866:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_131876:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_131877:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428342
.p2align 0x4,,0x7
L_131878:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428339
L_131879:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131877
.p2align 0x4
L_428339:
L_131880:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_131881:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428341
.p2align 0x4,,0x7
L_131882:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428340
L_131883:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131881
.p2align 0x4
L_428340:
L_131884:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428341:
L_131889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131890
.p2align 0x4
.long 0x45C
L_131890:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131882
.p2align 0x4
L_428342:
L_131891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131892
.p2align 0x4
.long 0x45C
L_131892:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131878
.p2align 0x4
.long 0x4E1
L_131827:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x808)(%rip),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_428343
L_131828:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_131829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_428343:
L_131833:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E1
L_131836:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131837
L_131838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_131839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131839
.p2align 0x4
.long 0x4E8
L_131839:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_131837:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_131827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_131773:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131774
L_131778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131779
.p2align 0x4
.long 0x452
L_131779:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131774:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E3
L_131783:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x0,%r15d
	jl L_428346
L_131784:
	movl %r15d,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_131785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428346:
L_131806:
	negl %r15d
	jo L_131702
L_131807:
	movl %r15d,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_131808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
L_131725:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131726
L_131730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131731
.p2align 0x4
.long 0x452
L_131731:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131726:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
rev_226:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_428351
L_131735:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_131736:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428350
.p2align 0x4,,0x7
L_131737:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428349
L_131738:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131736
.p2align 0x4
L_428349:
L_131740:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428350:
L_131748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131749
.p2align 0x4
.long 0x45C
L_131749:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131737
.p2align 0x4
L_428351:
L_131750:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_131740
.p2align 0x4
.long 0x1
L_131669:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131670
L_131674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131675
.p2align 0x4
.long 0x452
L_131675:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131670:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x45A
L_131680:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131681
L_131699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_131700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131700
.p2align 0x4
.long 0x509
L_131700:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_131681:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_131682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x45A
L_131704:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131705
L_131706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_131707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131707
.p2align 0x4
.long 0x509
L_131707:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_131705:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_131680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_427:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131991
L_131992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131993
.p2align 0x4
.long 0x452
L_131993:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131991:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x98B
L_132002:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x0,%r15d
	jl L_428356
L_132003:
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_132004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428356:
L_132025:
	negl %r15d
	jo L_131702
L_132026:
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_132027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
bug_426:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131961
L_131962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131963
.p2align 0x4
.long 0x452
L_131963:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131961:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_131914:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131915
L_131919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131920
.p2align 0x4
.long 0x452
L_131920:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131915:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_131932:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131933
L_131934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131935
.p2align 0x4
.long 0x452
L_131935:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131933:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE3A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_131852:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131853
L_131854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131855
.p2align 0x4
.long 0x452
L_131855:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131853:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_424:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131867
L_131868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131869
.p2align 0x4
.long 0x452
L_131869:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131867:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_131885:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131886
L_131887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131888
.p2align 0x4
.long 0x452
L_131888:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131886:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_131829:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131830
L_131831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_131832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131832
.p2align 0x4
.long 0x2C
L_131832:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_131830:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5480)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEE50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_423:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131775
L_131776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131777
.p2align 0x4
.long 0x452
L_131777:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131775:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x50C
L_131785:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131786
L_131804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_131805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131805
.p2align 0x4
.long 0x4F3
L_131805:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_131786:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_131787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x50C
L_131808:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131809
L_131810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_131811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131811
.p2align 0x4
.long 0x4F3
L_131811:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_131809:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_131785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_421:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131727
L_131728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131729
.p2align 0x4
.long 0x452
L_131729:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131727:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_131741:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131742
L_131746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131747
.p2align 0x4
.long 0x452
L_131747:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131742:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_420:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131671
L_131672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131673
.p2align 0x4
.long 0x452
L_131673:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131671:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45A
L_131682:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_131683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428374
.p2align 0x4,,0x7
L_131684:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428371
L_131685:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131683
.p2align 0x4
L_428371:
L_131686:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_131687:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428373
.p2align 0x4,,0x7
L_131688:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428372
L_131689:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131687
.p2align 0x4
L_428372:
L_131690:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428373:
L_131695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131696
.p2align 0x4
.long 0x45C
L_131696:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131688
.p2align 0x4
L_428374:
L_131697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131698
.p2align 0x4
.long 0x45C
L_131698:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131684
.p2align 0x4
.long 0xA92
L_132004:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132005
L_132023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132024
.p2align 0x4
.long 0xA93
L_132024:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132005:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_132006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0xA92
L_132027:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132028
L_132029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132030
.p2align 0x4
.long 0xA93
L_132030:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132028:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_132004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_425:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131916
L_131917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131918
.p2align 0x4
.long 0x452
L_131918:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131916:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_131787:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_131788:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428381
.p2align 0x4,,0x7
L_131789:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428378
L_131790:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131788
.p2align 0x4
L_428378:
L_131791:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_131792:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428380
.p2align 0x4,,0x7
L_131793:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428379
L_131794:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_131792
.p2align 0x4
L_428379:
L_131795:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_131796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428380:
L_131800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131801
.p2align 0x4
.long 0x45C
L_131801:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131793
.p2align 0x4
L_428381:
L_131802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_131803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131803
.p2align 0x4
.long 0x45C
L_131803:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_131789
.p2align 0x4
.long 0x1
bug_422:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131743
L_131744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131745
.p2align 0x4
.long 0x452
L_131745:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131743:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_131691:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131692
L_131693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131694
.p2align 0x4
.long 0x452
L_131694:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131692:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE890)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_132006:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_132007:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428387
.p2align 0x4,,0x7
L_132008:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428384
L_132009:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_132007
.p2align 0x4
L_428384:
L_132010:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_132011:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428386
.p2align 0x4,,0x7
L_132012:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428385
L_132013:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_132011
.p2align 0x4
L_428385:
L_132014:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_132015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428386:
L_132019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132020
.p2align 0x4
.long 0x45C
L_132020:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132012
.p2align 0x4
L_428387:
L_132021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132022
.p2align 0x4
.long 0x45C
L_132022:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132008
.p2align 0x4
.long 0x1
L_131796:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131797
L_131798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_131799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131799
.p2align 0x4
.long 0x452
L_131799:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_131797:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE9B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_132015:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132016
L_132017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132018
.p2align 0x4
.long 0x452
L_132018:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132016:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE9C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl push_0
.hidden push_0
push_0:
L_132052:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132053
L_132145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132146
.p2align 0x4
.long 0x45C
L_132146:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_132053:
	movq 0x10(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EB4,%r15
	je L_428390
L_132144:
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_428390:
L_132054:
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x111A
L_132055:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1586
.p2align 0x4
.long 0x110E
L_132056:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_132057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1D58
L_132057:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_428392
L_132058:
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_132059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428392:
L_132139:
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_132140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D59
L_132059:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_132060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_132140:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D5A
L_132060:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x0,%r15d
	jl L_428393
L_132061:
	movl %r15d,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_132062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428393:
L_132133:
	negl %r15d
	jo L_428394
L_132134:
	movl %r15d,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_132135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428394:
L_132107:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_429:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132141
L_132142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132143
.p2align 0x4
.long 0x452
L_132143:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132141:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D5B
L_132062:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132063
L_132131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_132132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132132
.p2align 0x4
.long 0x1D65
L_132132:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_132063:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_132064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x1D5B
L_132135:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132136
L_132137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_132138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132138
.p2align 0x4
.long 0x1D65
L_132138:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_132136:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_132062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D5B
L_132064:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_132065:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428401
.p2align 0x4,,0x7
L_132066:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_428398
L_132067:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_132065
.p2align 0x4
L_428398:
L_132068:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_132069:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428400
.p2align 0x4,,0x7
L_132070:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_428399
L_132071:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_132069
.p2align 0x4
L_428399:
L_132072:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_132073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428400:
L_132127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_132128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132128
.p2align 0x4
.long 0x1D1D
L_132128:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_132070
.p2align 0x4
L_428401:
L_132129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_132130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132130
.p2align 0x4
.long 0x1D1D
L_132130:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_132066
.p2align 0x4
.long 0x1D5B
L_132073:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132074
L_132125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_132126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132126
.p2align 0x4
.long 0x1D65
L_132126:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_132074:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE890)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_132075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D5B
L_132075:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132076
L_132123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_132124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132124
.p2align 0x4
.long 0x1D65
L_132124:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_132076:
	movq $0x1EB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_132077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
.long 0x1D5C
L_132077:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132078
L_132121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_132122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132122
.p2align 0x4
.long 0x1D64
L_132122:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_132078:
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_428404
L_132079:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_132080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428404:
L_132116:
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_132117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D5D
L_132080:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132081
L_132114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_132115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132115
.p2align 0x4
.long 0x1D63
L_132115:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_132081:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl $0x1,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x68,%rbp
	leaq (L_132082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp move_4
.p2align 0x4
.long 0x1
L_132117:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D5E
L_132082:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_428407
L_132113:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_428407:
L_132083:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
bug_428:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132118
L_132119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132120
.p2align 0x4
.long 0x452
L_132120:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132118:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D5E
L_132084:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1D5F
L_132085:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x0,%r15d
	jl L_428409
L_132086:
	movl %r15d,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_132087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_428409:
L_132106:
	negl %r15d
	jo L_132107
L_132108:
	movl %r15d,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_132109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1D60
L_132087:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_428411
L_132105:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xEDF0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_428411:
L_132088:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xEDF0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D60
L_132109:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132110
L_132111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_132112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132112
.p2align 0x4
.long 0x1D62
L_132112:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_132110:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D61
L_132089:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_428413
L_132104:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_428413:
L_132090:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xED88)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D61
L_132091:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_428414
L_132103:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (loop_1424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_428414:
L_132092:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (loop_1424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D60
loop_1424:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_428415
L_132102:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_428415:
L_132093:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D60
L_132094:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_428416
L_132101:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_428416:
L_132095:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_132096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D60
L_132096:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428417
L_132097:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428417:
L_132098:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB4,%r14
	je L_428418
L_132100:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
L_428418:
L_132099:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEEA8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl move_4
.hidden move_4
move_4:
L_132147:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_132280
L_132148:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428420
L_132149:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jz L_428419
L_132152:
	movq %r13,0x60(%rbp)
	movb $0x0,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x6,%r14
	movq %r14,0x28(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x11,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_132153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_428419:
L_132151:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_428420:
L_132280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132281
.p2align 0x4
.long 0x1D6C
L_132281:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_132149
.p2align 0x4
.long 0x1D66
L_132153:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132154
L_132278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_132279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132279
.p2align 0x4
.long 0x1D6B
L_132279:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_132154:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_132155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x1D66
L_132155:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132156
L_132276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132277
.p2align 0x4
.long 0x1D6A
L_132277:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132156:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428423
L_132157:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_132158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_428423:
L_132162:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428432
L_132163:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428424
L_132164:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_428424:
L_132165:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_132197
	cmpq $0x5,%r15
	je L_428430
	cmpq $0x6,%r15
	je L_428428
L_132166:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_132167
L_132193:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_428426
	cmpq $0xF54,%r15
	je L_428425
L_132167:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_132168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428425:
L_132195:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
L_132179:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_132180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428426:
L_132194:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132179
.p2align 0x4
L_428428:
L_132199:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_428429
L_132200:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132179
.p2align 0x4
L_428429:
L_132201:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132179
.p2align 0x4
L_428430:
L_132197:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132179
.p2align 0x4
L_428432:
L_132202:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428440
L_132203:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_132231
	cmpq $0x5,%r15
	je L_428438
	cmpq $0x6,%r15
	je L_428436
L_132204:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_132205
L_132227:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_428434
	cmpq $0xF54,%r15
	je L_428433
L_132205:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_132206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428433:
L_132229:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
L_132217:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428434:
L_132228:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132217
.p2align 0x4
L_428436:
L_132233:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_428437
L_132234:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132217
.p2align 0x4
L_428437:
L_132235:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132217
.p2align 0x4
L_428438:
L_132231:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132217
.p2align 0x4
L_428440:
L_132236:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_132268
	cmpq $0x5,%r15
	je L_428446
	cmpq $0x6,%r15
	je L_428444
L_132237:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_132238
L_132264:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_428442
	cmpq $0xF54,%r15
	je L_428441
L_132238:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_132239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428441:
L_132266:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
L_132250:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428442:
L_132265:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132250
.p2align 0x4
L_428444:
L_132270:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_428445
L_132271:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132250
.p2align 0x4
L_428445:
L_132272:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132250
.p2align 0x4
L_428446:
L_132268:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132250
.p2align 0x4
.long 0x1D67
L_132158:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132159
L_132273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132274
.p2align 0x4
.long 0x1D69
L_132274:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132159:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_132162
	jmp L_132151
.p2align 0x4
.long 0xA85
L_132168:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132169
L_132191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132192
.p2align 0x4
.long 0xA2E
L_132192:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_132169:
	movl 0x18(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_428454
	cmpl $0x10,%r15d
	je L_428453
	cmpl $0x20,%r15d
	je L_428452
	cmpl $0x40,%r15d
	je L_428451
L_132170:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_132171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428451:
L_132190:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132179
.p2align 0x4
L_428452:
L_132189:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132179
.p2align 0x4
L_428453:
L_132188:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132179
.p2align 0x4
L_428454:
L_132178:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132179
.p2align 0x4
.long 0x51A
L_132180:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132181
L_132186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132187
.p2align 0x4
.long 0x51D
L_132187:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132181:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_132182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D68
L_132206:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132207
L_132225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132226
.p2align 0x4
.long 0xBA2
L_132226:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132207:
	movl 0x18(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_428460
	cmpl $0x10,%r15d
	je L_428459
	cmpl $0x20,%r15d
	je L_428458
	cmpl $0x40,%r15d
	je L_428457
L_132208:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_132209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428457:
L_132224:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132217
.p2align 0x4
L_428458:
L_132223:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132217
.p2align 0x4
L_428459:
L_132222:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132217
.p2align 0x4
L_428460:
L_132216:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132217
.p2align 0x4
.long 0x491
L_132218:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132219
L_132220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132221
.p2align 0x4
.long 0x4B2
L_132221:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_132219:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1AC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D68
L_132239:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132240
L_132262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132263
.p2align 0x4
.long 0xBA2
L_132263:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132240:
	movl 0x18(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_428466
	cmpl $0x10,%r15d
	je L_428465
	cmpl $0x20,%r15d
	je L_428464
	cmpl $0x40,%r15d
	je L_428463
L_132241:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_132242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428463:
L_132261:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132250
.p2align 0x4
L_428464:
L_132260:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132250
.p2align 0x4
L_428465:
L_132259:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132250
.p2align 0x4
L_428466:
L_132249:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_132250
.p2align 0x4
.long 0x491
L_132251:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132252
L_132257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132258
.p2align 0x4
.long 0x4B2
L_132258:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_132252:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_132253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_132171:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132172
L_132176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132177
.p2align 0x4
.long 0x452
L_132177:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132172:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x45A
L_132182:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132183
L_132184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132185
.p2align 0x4
.long 0x509
L_132185:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132183:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_132209:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132210
L_132214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132215
.p2align 0x4
.long 0x452
L_132215:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132210:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_132242:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132243
L_132247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132248
.p2align 0x4
.long 0x452
L_132248:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132243:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x51A
L_132253:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132254
L_132255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132256
.p2align 0x4
.long 0x51D
L_132256:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132254:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1AC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_430:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132173
L_132174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132175
.p2align 0x4
.long 0x452
L_132175:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132173:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_431:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132211
L_132212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132213
.p2align 0x4
.long 0x452
L_132213:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132211:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_432:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132244
L_132245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132246
.p2align 0x4
.long 0x452
L_132246:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132244:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fetchOperand_0
.hidden fetchOperand_0
fetchOperand_0:
L_132282:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132283
L_132361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_132362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132362
.p2align 0x4
.long 0x460
L_132362:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_132283:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_132284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0x655
L_132284:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jz L_428478
L_132287:
	movq %r14,0x50(%rbp)
	movb $0x0,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x6,%r14
	movq %r14,0x18(%rbp)
	movq $0x11,0x40(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_132288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_428478:
L_132286:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp toString_546
.p2align 0x4
.long 0xE43
L_132288:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132289
L_132359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132360
.p2align 0x4
.long 0xF2B
L_132360:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132289:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_132290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0xE43
L_132290:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132291
L_132357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132358
.p2align 0x4
.long 0x1010
L_132358:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_132291:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428480
L_132292:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_132293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_428480:
L_132350:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132286
L_132351:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_132299
	cmpq $0xF5B,%r14
	je L_132299
	cmpq $0xF5E,%r14
	je L_132299
	cmpq $0xF5F,%r14
	je L_428482
	cmpq $0xF60,%r14
	je L_428481
	jmp L_132286
.p2align 0x4
L_428481:
L_132299:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_132300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_428482:
L_132355:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_132341:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132286
L_132342:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_132299
	cmpq $0xF5B,%r14
	je L_132299
	cmpq $0xF5E,%r14
	je L_132299
	cmpq $0xF5F,%r14
	je L_428484
	cmpq $0xF60,%r14
	je L_132299
	jmp L_132286
.p2align 0x4
L_428484:
L_132346:
	movq 0x0(%r15),%r15
	jmp L_132341
.p2align 0x4
.long 0x100B
L_132293:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	testl %r15d,%r15d
	jz L_132286
L_132296:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132286
L_132297:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_132299
	cmpq $0xF5B,%r14
	je L_132299
	cmpq $0xF5E,%r14
	je L_132299
	cmpq $0xF5F,%r14
	je L_428495
	cmpq $0xF60,%r14
	je L_132299
	jmp L_132286
.p2align 0x4
L_428495:
L_132339:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_132341
.p2align 0x4
.long 0x18BA
L_132300:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_132301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0x463
L_132301:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132302
L_132335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132336
.p2align 0x4
.long 0x464
L_132336:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132302:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_132330
	cmpq $0x5,%r15
	je L_428506
	cmpq $0x6,%r15
	je L_428504
L_132303:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_132304
L_132326:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_428502
	cmpq $0xF54,%r15
	je L_428501
L_132304:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_132305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428501:
L_132328:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_132316:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_132317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428502:
L_132327:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_132316
.p2align 0x4
L_428504:
L_132332:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_428505
L_132333:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_132316
.p2align 0x4
L_428505:
L_132334:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_132316
.p2align 0x4
L_428506:
L_132330:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_132316
.p2align 0x4
.long 0x5E3
L_132305:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132306
L_132324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132325
.p2align 0x4
.long 0xBCD
L_132325:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132306:
	movl 0x10(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_428512
	cmpl $0x10,%r15d
	je L_428511
	cmpl $0x20,%r15d
	je L_428510
	cmpl $0x40,%r15d
	je L_428509
L_132307:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_132308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428509:
L_132323:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_132316
.p2align 0x4
L_428510:
L_132322:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_132316
.p2align 0x4
L_428511:
L_132321:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_132316
.p2align 0x4
L_428512:
L_132315:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_132316
.p2align 0x4
.long 0x2B
L_132317:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132318
L_132319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132320
.p2align 0x4
.long 0x2C
L_132320:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_132318:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_132308:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132309
L_132313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132314
.p2align 0x4
.long 0x452
L_132314:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132309:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_433:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132310
L_132311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132312
.p2align 0x4
.long 0x452
L_132312:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132310:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl usesStack_0
.hidden usesStack_0
usesStack_0:
loopS_17:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132364
L_132400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132401
.p2align 0x4
.long 0x452
L_132401:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132364:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132365
L_132366:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_132368
	cmpq $0xF5B,%r14
	je L_428529
	cmpq $0xF5F,%r14
	je L_428518
	cmpq $0xF60,%r14
	je L_428517
L_132365:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428517:
L_132399:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r14
	movq %r14,0x0(%rbp)
L_132385:
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_132386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp usesStack_0
.p2align 0x4
L_428518:
L_132398:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_132378:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132365
L_132379:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_132368
	cmpq $0xF5B,%r14
	je L_428521
	cmpq $0xF5F,%r14
	je L_428520
	cmpq $0xF60,%r14
	je L_428519
	jmp L_132365
.p2align 0x4
L_428519:
L_132384:
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x8(%r15),%r15
	jmp L_132385
.p2align 0x4
L_428520:
L_132383:
	movq 0x0(%r15),%r15
	jmp L_132378
.p2align 0x4
L_428521:
L_132381:
	movq 0x0(%r15),%r15
.p2align 0x4,,0x7
L_132371:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132365
L_132372:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_428525
	cmpq $0xF5B,%r14
	je L_428524
	cmpq $0xF5F,%r14
	je L_428523
	cmpq $0xF60,%r14
	je L_428522
	jmp L_132365
.p2align 0x4
L_428522:
L_132396:
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x8(%r15),%r15
	jmp L_132385
.p2align 0x4
L_428523:
L_132376:
	movq 0x0(%r15),%r15
	jmp L_132378
.p2align 0x4
L_428524:
L_132374:
	movq 0x0(%r15),%r15
	jmp L_132371
.p2align 0x4
L_428525:
L_132368:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428529:
L_132369:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_132371
.p2align 0x4
.long 0x4B0
L_132386:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl 0x10(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	testl %r15d,%r15d
	jnz L_132368
L_132388:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132365
L_132389:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_132368
	cmpq $0xF5B,%r14
	je L_428535
	cmpq $0xF5F,%r14
	je L_428534
	cmpq $0xF60,%r14
	je L_428533
	jmp L_132365
.p2align 0x4
L_428533:
L_132394:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_132385
.p2align 0x4
L_428534:
L_132393:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_132378
.p2align 0x4
L_428535:
L_132391:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_132371
.text
.p2align 0x4
.globl force_0
.hidden force_0
force_0:
L_132402:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_132452
L_132403:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428542
L_132404:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_428541
L_132405:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149E,%r13
	je L_428540
L_132407:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	cmpq $0x1,%r13
	je L_428539
L_132408:
	movl 0x4(%r13),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x24(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x36B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x50(%rbp)
	leaq L_132431(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,0x48(%rbp)
	movq $0x11,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_132409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_428539:
L_132450:
	leaq L_132431(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_132427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_428540:
L_132406:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428541:
L_132451:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428542:
L_132452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132453
.p2align 0x4
.long 0x453
L_132453:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132404
.p2align 0x4
.long 0x1D6D
L_132409:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132410
L_132448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132449
.p2align 0x4
.long 0x1D73
L_132449:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132410:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x40(%rbp)
	movslq %r11d,%r15
	cmpq %r15,%r13
	je L_428544
L_132411:
	movq (globalObjptr+0x518)(%rip),%r15
L_132412:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428544:
L_132413:
	cmpl $0x0,0x40(%rbp)
	jl L_428551
L_132414:
	movl $0x0,0x44(%rbp)
loop_1425:
	movl 0x40(%rbp),%r14d
	cmpl %r14d,0x44(%rbp)
	jl L_428550
L_132415:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_428549
L_132416:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_132417:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_428547
L_132422:
	cmpq $0x1,%r15
	je L_428545
L_132423:
	movq 0x8(%r15),%r15
	jmp L_132417
.p2align 0x4
L_428545:
L_132424:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132425
L_132435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132436
.p2align 0x4
.long 0x1D6F
L_132436:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132425:
	movl 0x28(%rbp),%ecx
L_132426:
	movl %ecx,0x30(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_428547:
L_132418:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132419
L_132420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132421
.p2align 0x4
.long 0x1D6E
L_132421:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_132419:
	movq $0x3,%r15
	jmp L_132412
.p2align 0x4
L_428549:
L_132437:
	xorl %ecx,%ecx
	jmp L_132426
.p2align 0x4
L_428550:
L_132438:
	movslq 0x44(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (x_444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_50
.p2align 0x4
L_428551:
L_132447:
	movq (globalObjptr+0x520)(%rip),%r15
	jmp L_132412
.p2align 0x4
.long 0x72F
L_132431:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132432
L_132433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132434
.p2align 0x4
.long 0xB2B
L_132434:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_132432:
	movq 0x20(%rbp),%r15
	jmp L_132412
.p2align 0x4
.long 0xB29
L_132427:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132428
L_132429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132430
.p2align 0x4
.long 0xB2A
L_132430:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_132428:
	movq $0x293D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D70
x_444:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp force_0
.p2align 0x4
.long 0x1D70
L_132439:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132440
L_132445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_132446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132446
.p2align 0x4
.long 0x1D72
L_132446:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_132440:
	movq $0x3515,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x20(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_132441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x1D70
L_132441:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132442
L_132443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132444
.p2align 0x4
.long 0x1D71
L_132444:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132442:
	incl 0x44(%rbp)
	jmp loop_1425
.text
.p2align 0x4
.globl x_1352
.hidden x_1352
x_1352:
L_132454:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_132505
L_132455:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428570
L_132456:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_428569
L_132458:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_428568
L_132459:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_132461:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_428567
L_132497:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD3A,%r11
	jne L_428566
L_132498:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_428563
L_132462:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_428562
L_132464:
	cmpq $0x1,%r15
	je L_428557
L_132465:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_132461
.p2align 0x4
L_428557:
L_132466:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132467
L_132495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132496
.p2align 0x4
.long 0x65A
L_132496:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_132467:
	movl 0x8(%rbp),%ecx
L_132468:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_428560
L_132470:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132472
L_132494:
	movl %ecx,0x0(%r15)
L_132472:
	movq $0x137F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_132473:
	movq 0x0(%r15),%r14
L_132474:
	andq $0x3,%r14
	jz L_428558
L_132475:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_132476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_428558:
L_132493:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428560:
L_132469:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428562:
L_132463:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428563:
L_132500:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132469
L_132501:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_428564
L_132503:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_132473
.p2align 0x4
L_428564:
L_132502:
	movq %r11,%r15
	jmp L_132473
.p2align 0x4
L_428566:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_132462
.p2align 0x4
L_428567:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_132462
.p2align 0x4
L_428568:
L_132504:
	xorl %ecx,%ecx
	jmp L_132468
.p2align 0x4
L_428569:
L_132457:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428570:
L_132505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_132506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132506
.p2align 0x4
.long 0x460
L_132506:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_132456
.p2align 0x4
.long 0x1
L_132476:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
toString_229:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_227:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_428574
L_132477:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_132478:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428573
.p2align 0x4,,0x7
L_132479:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428572
L_132480:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_132478
.p2align 0x4
L_428572:
L_132482:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_132483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428573:
L_132490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132491
.p2align 0x4
.long 0x45C
L_132491:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132479
.p2align 0x4
L_428574:
L_132492:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_132482
.p2align 0x4
.long 0x1
L_132483:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132484
L_132488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132489
.p2align 0x4
.long 0x452
L_132489:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132484:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_434:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132485
L_132486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132487
.p2align 0x4
.long 0x452
L_132487:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132485:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl temp_uses_defs_0
.hidden temp_uses_defs_0
temp_uses_defs_0:
L_132507:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132508
L_132688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132689
.p2align 0x4
.long 0x45C
L_132689:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_132508:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428648
L_132509:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_132510:
L_132511:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132512
L_132653:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	jne L_428645
L_132654:
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_132683
L_132655:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_132656:
	movl 0x0(%r15),%r11d
	movl %r11d,0x30(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x34(%rbp)
	cmpl %r10d,%r11d
	jnl L_428634
L_132680:
	cmpq $0x1,%r13
	je L_428577
L_132681:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_132656
.p2align 0x4
L_428577:
L_132683:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_428578
L_132684:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_132510
.p2align 0x4
L_428578:
L_132685:
	movq 0x20(%rbp),%r15
L_132515:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_132522
L_132516:
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_132517:
L_132518:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_428632
L_132612:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x115E,%r13
	jne L_428630
L_132613:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,%r11
	je L_428629
L_132614:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_132615:
	movq 0x28(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_132647
L_132616:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_132617:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_428618
L_132644:
	cmpq $0x1,%r13
	je L_428579
L_132645:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_132617
.p2align 0x4
L_428579:
L_132647:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_428580
L_132648:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_132615
.p2align 0x4
L_428580:
L_132649:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_132630:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_428581
L_132631:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	xchgq %r14,%r15
	jmp L_132517
.p2align 0x4
L_428581:
L_132522:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_428617
L_132523:
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_132524:
L_132525:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_428616
L_132571:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x115E,%r13
	jne L_428614
L_132572:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,%r11
	je L_428613
L_132573:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_132574:
	movq 0x28(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_132606
L_132575:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_132576:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_428602
L_132603:
	cmpq $0x1,%r13
	je L_428582
L_132604:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_132576
.p2align 0x4
L_428582:
L_132606:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_428583
L_132607:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_132574
.p2align 0x4
L_428583:
L_132608:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_132589:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_428584
L_132590:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	xchgq %r14,%r15
	jmp L_132524
.p2align 0x4
L_428584:
L_132591:
	movq %r15,0x18(%rbp)
L_132529:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428601
L_132530:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_132531:
L_132532:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132533
L_132536:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	jne L_428598
L_132537:
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_132566
L_132538:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_132539:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_428587
L_132563:
	cmpq $0x1,%r13
	je L_428585
L_132564:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_132539
.p2align 0x4
L_428585:
L_132566:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_428586
L_132567:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_132531
.p2align 0x4
L_428586:
L_132568:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428587:
L_132540:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428596
.p2align 0x4,,0x7
L_132541:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_428594
L_132542:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_132549
L_132543:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_132544:
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_428591
L_132545:
	cmpq $0x1,%r14
	je L_428588
L_132546:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_132544
.p2align 0x4
L_428588:
L_132547:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428590
.p2align 0x4,,0x7
L_132549:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_428589
L_132550:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_132531
.p2align 0x4
L_428589:
L_132551:
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428590:
L_132552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132553
.p2align 0x4
.long 0x721
L_132553:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_132549
.p2align 0x4
L_428591:
L_132554:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_428592
L_132555:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_132531
.p2align 0x4
L_428592:
L_132556:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428594:
L_132558:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_428595
L_132559:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_132531
.p2align 0x4
L_428595:
L_132560:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428596:
L_132561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132562
.p2align 0x4
.long 0x788
L_132562:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132541
.p2align 0x4
L_428598:
L_132533:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_428599
L_132534:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_132531
.p2align 0x4
L_428599:
L_132535:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428601:
L_132570:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428602:
L_132577:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428611
.p2align 0x4,,0x7
L_132578:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_428609
L_132579:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_132586
L_132580:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_132581:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_428606
L_132582:
	cmpq $0x1,%r14
	je L_428603
L_132583:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_132581
.p2align 0x4
L_428603:
L_132584:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428605
.p2align 0x4,,0x7
L_132586:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_132589
L_132587:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_132574
.p2align 0x4
L_428605:
L_132592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132593
.p2align 0x4
.long 0x4F1
L_132593:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_132586
.p2align 0x4
L_428606:
L_132594:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_428607
L_132595:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_132574
.p2align 0x4
L_428607:
L_132596:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_132589
.p2align 0x4
L_428609:
L_132598:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_428610
L_132599:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_132574
.p2align 0x4
L_428610:
L_132600:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_132589
.p2align 0x4
L_428611:
L_132601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132602
.p2align 0x4
.long 0x73E
L_132602:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132578
.p2align 0x4
L_428613:
L_132610:
	movq %r14,%r15
	jmp L_132589
.p2align 0x4
L_428614:
	movq %r14,(localObjptr+0x8)(%rip)
L_132526:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_428615
L_132527:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_132524
.p2align 0x4
L_428615:
L_132528:
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_132529
.p2align 0x4
L_428616:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_132526
.p2align 0x4
L_428617:
L_132611:
	movq %r15,0x18(%rbp)
	jmp L_132529
.p2align 0x4
L_428618:
L_132618:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428627
.p2align 0x4,,0x7
L_132619:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_428625
L_132620:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_132627
L_132621:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_132622:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_428622
L_132623:
	cmpq $0x1,%r14
	je L_428619
L_132624:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_132622
.p2align 0x4
L_428619:
L_132625:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428621
.p2align 0x4,,0x7
L_132627:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_132630
L_132628:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_132615
.p2align 0x4
L_428621:
L_132633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132634
.p2align 0x4
.long 0x4F1
L_132634:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_132627
.p2align 0x4
L_428622:
L_132635:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_428623
L_132636:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_132615
.p2align 0x4
L_428623:
L_132637:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_132630
.p2align 0x4
L_428625:
L_132639:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_428626
L_132640:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_132615
.p2align 0x4
L_428626:
L_132641:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_132630
.p2align 0x4
L_428627:
L_132642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132643
.p2align 0x4
.long 0x73E
L_132643:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132619
.p2align 0x4
L_428629:
L_132651:
	movq %r14,%r15
	jmp L_132630
.p2align 0x4
L_428630:
	movq %r14,(localObjptr+0x8)(%rip)
L_132519:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_428631
L_132520:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_132517
.p2align 0x4
L_428631:
L_132521:
	movq (localObjptr+0x8)(%rip),%r15
	jmp L_132522
.p2align 0x4
L_428632:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_132519
.p2align 0x4
L_428634:
L_132657:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428643
.p2align 0x4,,0x7
L_132658:
	movl 0x30(%rbp),%r13d
	cmpl %r13d,0x34(%rbp)
	jl L_428641
L_132659:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_132666
L_132660:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_132661:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_428638
L_132662:
	cmpq $0x1,%r14
	je L_428635
L_132663:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_132661
.p2align 0x4
L_428635:
L_132664:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428637
.p2align 0x4,,0x7
L_132666:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_132515
L_132667:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_132510
.p2align 0x4
L_428637:
L_132669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132670
.p2align 0x4
.long 0x4DF
L_132670:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_132666
.p2align 0x4
L_428638:
L_132671:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_428639
L_132672:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_132510
.p2align 0x4
L_428639:
L_132673:
	movq 0x20(%rbp),%r15
	jmp L_132515
.p2align 0x4
L_428641:
L_132675:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_428642
L_132676:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_132510
.p2align 0x4
L_428642:
L_132677:
	movq 0x20(%rbp),%r15
	jmp L_132515
.p2align 0x4
L_428643:
L_132678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132679
.p2align 0x4
.long 0x5F7
L_132679:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_132658
.p2align 0x4
L_428645:
L_132512:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_428646
L_132513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_132510
.p2align 0x4
L_428646:
L_132514:
	movq 0x20(%rbp),%r15
	jmp L_132515
.p2align 0x4
L_428648:
L_132687:
	movq $0x1,%r15
	jmp L_132515
.text
.p2align 0x4
.globl x_1366
.hidden x_1366
x_1366:
L_132690:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132691
L_132831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132832
.p2align 0x4
.long 0x452
L_132832:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132691:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1194,%r14
	je L_428708
	cmpq $0x1195,%r14
	je L_428707
	cmpq $0x1196,%r14
	je L_428651
	cmpq $0x1197,%r14
	je L_428650
L_132692:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp x_1609
.p2align 0x4
L_428650:
L_132830:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428651:
L_132695:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_428706
	cmpq $0x2,%r14
	je L_428705
L_132696:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x117F,%rax
	cmpq $0x8,%rax
	ja L_428652
	jmp *jumpTable_274(,%rax,8)
.data
.p2align 0x4
jumpTable_274:
.quad L_428699,L_428698,L_428697,L_428686,L_428669,L_428665,L_428661,L_428657,L_428653
.text
.p2align 0x4
L_428652:
L_132697:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428653:
L_132819:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_428656
L_132820:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_132821:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428655
.p2align 0x4,,0x7
L_132822:
	movq 0x8(%rbp),%r15
	movw 0xC(%r15),%r14w
	movq 0x10(%r15),%r13
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movzwq %r14w,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428654
L_132823:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_132821
.p2align 0x4
L_428654:
L_132824:
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428655:
L_132825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132826
.p2align 0x4
.long 0x4AF
L_132826:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132822
.p2align 0x4
L_428656:
L_132827:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428657:
L_132810:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_428660
L_132811:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_132812:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428659
.p2align 0x4,,0x7
L_132813:
	movq 0x8(%rbp),%r15
	movw 0xC(%r15),%r14w
	movq 0x10(%r15),%r13
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movzwq %r14w,%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428658
L_132814:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_132812
.p2align 0x4
L_428658:
L_132815:
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428659:
L_132816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132817
.p2align 0x4
.long 0x4AF
L_132817:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132813
.p2align 0x4
L_428660:
L_132818:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428661:
L_132801:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_428664
L_132802:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_132803:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428663
.p2align 0x4,,0x7
L_132804:
	movq 0x8(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movzwq %r14w,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428662
L_132805:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_132803
.p2align 0x4
L_428662:
L_132806:
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428663:
L_132807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132808
.p2align 0x4
.long 0x4AF
L_132808:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132804
.p2align 0x4
L_428664:
L_132809:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428665:
L_132792:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_428668
L_132793:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_132794:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428667
.p2align 0x4,,0x7
L_132795:
	movq 0x8(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movzwq %r14w,%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428666
L_132796:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_132794
.p2align 0x4
L_428666:
L_132797:
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428667:
L_132798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132799
.p2align 0x4
.long 0x4AF
L_132799:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132795
.p2align 0x4
L_428668:
L_132800:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428669:
L_132745:
	movq 0x20(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_428685
L_132746:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_132747:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428684
.p2align 0x4,,0x7
L_132748:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_428670
L_132749:
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_132747
.p2align 0x4
L_428670:
L_132750:
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_132751:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428683
.p2align 0x4,,0x7
L_132752:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428671
L_132753:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_132751
.p2align 0x4
L_428671:
L_132754:
	movq %r15,0x8(%rbp)
L_132755:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428682
L_132756:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_132757:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428681
.p2align 0x4,,0x7
L_132758:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_428672
L_132759:
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_132757
.p2align 0x4
L_428672:
L_132760:
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_132761:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428680
.p2align 0x4,,0x7
L_132762:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_428673
L_132763:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_132761
.p2align 0x4
L_428673:
L_132764:
	movq %r15,0x10(%rbp)
L_132765:
	cmpq $0x1,0x10(%rbp)
	je L_428679
L_132766:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_428678
L_132767:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_132768:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428677
.p2align 0x4,,0x7
L_132769:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_428674
L_132770:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_132768
.p2align 0x4
L_428674:
L_132771:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_132772:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428676
.p2align 0x4,,0x7
L_132773:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428675
L_132774:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_132772
.p2align 0x4
L_428675:
L_132775:
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428676:
L_132776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132777
.p2align 0x4
.long 0x45C
L_132777:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132773
.p2align 0x4
L_428677:
L_132778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132779
.p2align 0x4
.long 0x520
L_132779:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_132769
.p2align 0x4
L_428678:
L_132780:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428679:
L_132781:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428680:
L_132782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132783
.p2align 0x4
.long 0x4EA
L_132783:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_132762
.p2align 0x4
L_428681:
L_132784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132785
.p2align 0x4
.long 0x4EA
L_132785:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_132758
.p2align 0x4
L_428682:
L_132786:
	movq $0x1,0x10(%rbp)
	jmp L_132765
.p2align 0x4
L_428683:
L_132787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132788
.p2align 0x4
.long 0x4AF
L_132788:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132752
.p2align 0x4
L_428684:
L_132789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132790
.p2align 0x4
.long 0x4AF
L_132790:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132748
.p2align 0x4
L_428685:
L_132791:
	movq $0x1,0x8(%rbp)
	jmp L_132755
.p2align 0x4
L_428686:
L_132715:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_428696
L_132716:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_132717:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428695
.p2align 0x4,,0x7
L_132718:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_428687
L_132719:
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_132717
.p2align 0x4
L_428687:
L_132720:
	movq %r14,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_132721:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428694
.p2align 0x4,,0x7
L_132722:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428688
L_132723:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_132721
.p2align 0x4
L_428688:
L_132724:
	movq %r15,0x8(%rbp)
L_132725:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428693
L_132726:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_132727:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428692
.p2align 0x4,,0x7
L_132728:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_428689
L_132729:
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_132727
.p2align 0x4
L_428689:
L_132730:
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_132731:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428691
.p2align 0x4,,0x7
L_132732:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_428690
L_132733:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_132731
.p2align 0x4
L_428690:
L_132734:
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428691:
L_132735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132736
.p2align 0x4
.long 0x4EA
L_132736:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_132732
.p2align 0x4
L_428692:
L_132737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132738
.p2align 0x4
.long 0x4EA
L_132738:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_132728
.p2align 0x4
L_428693:
L_132739:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428694:
L_132740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132741
.p2align 0x4
.long 0x4AF
L_132741:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132722
.p2align 0x4
L_428695:
L_132742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132743
.p2align 0x4
.long 0x4AF
L_132743:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132718
.p2align 0x4
L_428696:
L_132744:
	movq $0x1,0x8(%rbp)
	jmp L_132725
.p2align 0x4
L_428697:
L_132714:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428698:
L_132713:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428699:
L_132698:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_428704
L_132699:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_132700:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428703
.p2align 0x4,,0x7
L_132701:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_428700
L_132702:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_132700
.p2align 0x4
L_428700:
L_132703:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_132704:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428702
.p2align 0x4,,0x7
L_132705:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_428701
L_132706:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_132704
.p2align 0x4
L_428701:
L_132707:
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428702:
L_132708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132709
.p2align 0x4
.long 0x45C
L_132709:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132705
.p2align 0x4
L_428703:
L_132710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132711
.p2align 0x4
.long 0x45C
L_132711:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132701
.p2align 0x4
L_428704:
L_132712:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428705:
L_132829:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428706:
L_132828:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428707:
L_132694:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428708:
L_132693:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1609
.hidden x_1609
x_1609:
L_132833:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_132891
L_132834:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428754
L_132835:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_428753
	cmpq $0x2,%r14
	je L_428748
L_132836:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1163,%rax
	cmpq $0x18,%rax
	ja L_428710
	jmp *jumpTable_275(,%rax,8)
.data
.p2align 0x4
jumpTable_275:
.quad L_428747,L_428746,L_428745,L_428744,L_428743,L_428742,L_428741,L_428740,L_428739,L_428738,L_428737,L_428736,L_428735,L_428734,L_428733,L_428732,L_428731,L_428730,L_428729,L_428722,L_428721,L_428720,L_428713,L_428712,L_428711
.text
.p2align 0x4
L_428710:
L_132837:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428711:
L_132882:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428712:
L_132881:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428713:
L_132869:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb 0x1(%r15),%r11b
	cmpb $0x2,%r11b
	je L_428719
	cmpb $0x3,%r11b
	je L_428718
	cmpb $0x4,%r11b
	je L_428717
	cmpb $0x5,%r11b
	je L_428714
L_132870:
	movq (globalObjptr+0x6270)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428714:
L_132880:
	movw (globalWord16+0xC2)(%rip),%r15w
	movw (globalWord16+0x12A)(%rip),%r11w
	movq %r14,%rax
	movw %r11w,%r14w
	movb %r13b,%dl
	movq %rax,%r13
L_132872:
	cmpb $0x5,%dl
	je L_132876
L_132873:
	cmpb $0x4,%dl
	je L_428715
L_132874:
	movzwq %r14w,%r11
	shlq $0x2,%r11
	orq $0x2,%r11
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428715:
L_132876:
	movzwq %r15w,%r11
	shlq $0x2,%r11
	orq $0x2,%r11
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r15,0x8(%r11)
	movq %r11,0x0(%rbp)
	movzwq %r14w,%r13
	shlq $0x2,%r13
	orq $0x2,%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428717:
L_132879:
	movw (globalWord16+0xCA)(%rip),%r10w
	movw (globalWord16+0x112)(%rip),%r9w
	movw %r10w,%r15w
	movq %r14,%rax
	movw %r9w,%r14w
	movb %r13b,%dl
	movq %rax,%r13
	jmp L_132872
.p2align 0x4
L_428718:
L_132878:
	movw (globalWord16+0xD2)(%rip),%r10w
	movw (globalWord16+0x122)(%rip),%r9w
	movw %r10w,%r15w
	movq %r14,%rax
	movw %r9w,%r14w
	movb %r13b,%dl
	movq %rax,%r13
	jmp L_132872
.p2align 0x4
L_428719:
L_132871:
	movw (globalWord16+0xDA)(%rip),%r10w
	movw (globalWord16+0x11A)(%rip),%r9w
	movw %r10w,%r15w
	movq %r14,%rax
	movw %r9w,%r14w
	movb %r13b,%dl
	movq %rax,%r13
	jmp L_132872
.p2align 0x4
L_428720:
L_132868:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428721:
L_132867:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428722:
L_132857:
	movq 0x0(%rbp),%r15
	movb 0x1(%r15),%r14b
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
L_132858:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_428728
L_132860:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x115E,%r15
	jne L_428727
L_132861:
	cmpb $0x2,%r14b
	je L_428726
	cmpb $0x3,%r14b
	je L_428725
	cmpb $0x4,%r14b
	je L_428724
	cmpb $0x5,%r14b
	je L_428723
L_132862:
	movq (globalObjptr+0x6260)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428723:
L_132866:
	xorb %dl,%dl
	movq %r11,%r15
	movq %r13,%r14
register_1:
	movb $0xE,%r13b
	movzbw %r13b,%r11w
	movzbw %dl,%r13w
	shlw $0x8,%r13w
	orw %r13w,%r11w
	movzwq %r11w,%r13
	shlq $0x2,%r13
	orq $0x2,%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x0(%rbp)
	addq $0x18,%r12
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428724:
L_132865:
	movb $0x1,%dl
	movq %r11,%r15
	movq %r13,%r14
	jmp register_1
.p2align 0x4
L_428725:
L_132864:
	movb $0x2,%dl
	movq %r11,%r15
	movq %r13,%r14
	jmp register_1
.p2align 0x4
L_428726:
L_132863:
	movb $0x3,%dl
	movq %r11,%r15
	movq %r13,%r14
	jmp register_1
.p2align 0x4
L_428727:
	movq %r13,%r15
	movq %r11,%r14
L_132859:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428728:
	movq %r13,%r15
	movq %r11,%r14
	jmp L_132859
.p2align 0x4
L_428729:
L_132856:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428730:
L_132855:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428731:
L_132854:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428732:
L_132853:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428733:
L_132852:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428734:
L_132851:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428735:
L_132850:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428736:
L_132849:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428737:
L_132848:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428738:
L_132847:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428739:
L_132846:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428740:
L_132845:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428741:
L_132844:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428742:
L_132843:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428743:
L_132842:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428744:
L_132841:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428745:
L_132840:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428746:
L_132839:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428747:
L_132838:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428748:
L_132884:
	shrq $0x2,%r15
	movb %r15b,%r14b
	cmpb $0x2,%r14b
	je L_428752
	cmpb $0x3,%r14b
	je L_428751
	cmpb $0x4,%r14b
	je L_428750
	cmpb $0x5,%r14b
	je L_428749
L_132885:
	movq (globalObjptr+0x6268)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428749:
L_132890:
	movw (globalWord16+0xC2)(%rip),%r15w
	movw (globalWord16+0x12A)(%rip),%r14w
L_132887:
	movzwq %r15w,%r13
	shlq $0x2,%r13
	orq $0x2,%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movzwq %r14w,%r13
	shlq $0x2,%r13
	orq $0x2,%r13
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428750:
L_132889:
	movw (globalWord16+0xCA)(%rip),%r15w
	movw (globalWord16+0x112)(%rip),%r14w
	jmp L_132887
.p2align 0x4
L_428751:
L_132888:
	movw (globalWord16+0xD2)(%rip),%r15w
	movw (globalWord16+0x122)(%rip),%r14w
	jmp L_132887
.p2align 0x4
L_428752:
L_132886:
	movw (globalWord16+0xDA)(%rip),%r15w
	movw (globalWord16+0x11A)(%rip),%r14w
	jmp L_132887
.p2align 0x4
L_428753:
L_132883:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428754:
L_132891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132892
.p2align 0x4
.long 0x452
L_132892:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_132835
.text
.p2align 0x4
.globl cReturnTemps_0
.hidden cReturnTemps_0
cReturnTemps_0:
L_132893:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_133000
L_132894:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428757
L_132895:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x1,%r13
	je L_428756
L_132896:
	movzwq (globalWord16+0xC2)(%rip),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_132897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_428756:
L_132999:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428757:
L_133000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133001
.p2align 0x4
.long 0x460
L_133001:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_132895
.p2align 0x4
.long 0x912
L_132897:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_132898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD24
L_132898:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x78(%rbp)
	movq $0x3,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_132899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD24
L_132899:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_132900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD24
L_132900:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132901
L_132997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_132998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132998
.p2align 0x4
.long 0xD3E
L_132998:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_132901:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_132902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0xD24
L_132902:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movb $0x3,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq %r13,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_132903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0xD25
L_132903:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x5,0x88(%rbp)
	movb $0x3,0x89(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x88,%rbp
	leaq (L_132904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0xD26
L_132904:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132905
L_132995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_132996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132996
.p2align 0x4
.long 0xD3D
L_132996:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_132905:
	movq $0x1245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movzwq (globalWord16+0xCA)(%rip),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_132906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0xD27
L_132906:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_132907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD28
L_132907:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_132908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD28
L_132908:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_132909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD28
L_132909:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132910
L_132993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_132994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132994
.p2align 0x4
.long 0xD3C
L_132994:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_132910:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_132911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0xD28
L_132911:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x3,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_132912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0xD28
L_132912:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x4,0x88(%rbp)
	movb $0x3,0x89(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x88,%rbp
	leaq (L_132913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0xD27
L_132913:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132914
L_132991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_132992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132992
.p2align 0x4
.long 0xD3B
L_132992:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_132914:
	movq $0x1245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movzwq (globalWord16+0xD2)(%rip),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_132915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0xD29
L_132915:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_132916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xD2A
L_132916:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_132917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD2A
L_132917:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_132918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD2A
L_132918:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132919
L_132989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_132990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132990
.p2align 0x4
.long 0xD3A
L_132990:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_132919:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_132920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0xD2A
L_132920:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movb $0x3,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_132921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0xD2A
L_132921:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movb $0x3,0x90(%rbp)
	movb $0x3,0x91(%rbp)
	movq $0x1,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0x90,%rbp
	leaq (L_132922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0xD29
L_132922:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132923
L_132987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_132988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132988
.p2align 0x4
.long 0xD39
L_132988:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_132923:
	movq $0x1245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movzwq (globalWord16+0xDA)(%rip),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_132924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x1D74
L_132924:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_132925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1D75
L_132925:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_132926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D75
L_132926:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_132927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D75
L_132927:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132928
L_132985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_132986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132986
.p2align 0x4
.long 0x1D85
L_132986:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_132928:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_132929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x1D75
L_132929:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movb $0x3,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_132930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x1D75
L_132930:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movb $0x2,0x98(%rbp)
	movb $0x3,0x99(%rbp)
	movq $0x1,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0x98,%rbp
	leaq (L_132931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x1D74
L_132931:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132932
L_132983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_132984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132984
.p2align 0x4
.long 0x1D84
L_132984:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_132932:
	movq $0x1245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movzwq (globalWord16+0xE2)(%rip),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_132933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x1D76
L_132933:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_132934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1D77
L_132934:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0xA0(%rbp)
	movq $0x3,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_132935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D77
L_132935:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_132936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D77
L_132936:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132937
L_132981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_132982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132982
.p2align 0x4
.long 0x1D83
L_132982:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_132937:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_132938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x1D77
L_132938:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movb $0x3,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_132939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x1D77
L_132939:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movb $0x1,0xA0(%rbp)
	movb $0x3,0xA1(%rbp)
	movq $0x1,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xA0,%rbp
	leaq (L_132940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x1D76
L_132940:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132941
L_132979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_132980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132980
.p2align 0x4
.long 0x1D82
L_132980:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_132941:
	movq $0x1245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movzwq (globalWord16+0xEA)(%rip),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_132942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x1D78
L_132942:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_132943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1D79
L_132943:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_132944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D7A
L_132944:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_132945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D7B
L_132945:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132946
L_132977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_132978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132978
.p2align 0x4
.long 0x1D81
L_132978:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_132946:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_132947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x1D7C
L_132947:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movb $0x3,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_132948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x1D7D
L_132948:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movb $0x0,0xA8(%rbp)
	movb $0x3,0xA9(%rbp)
	movq $0x1,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xA8,%rbp
	leaq (L_132949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x1D7E
L_132949:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132950
L_132975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_132976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132976
.p2align 0x4
.long 0x1D80
L_132976:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_132950:
	movq $0x1245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_132969
	cmpq $0x5,%r15
	je L_132969
	cmpq $0x6,%r15
	je L_428773
L_132951:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_132952
L_132966:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_428771
	cmpq $0xF54,%r15
	je L_428770
L_132952:
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_132953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428770:
L_132969:
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428771:
L_132967:
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428773:
L_132972:
	shrq $0x3,%r13
	movb %r13b,%r15b
	testb %r15b,%r15b
	jnz L_428774
L_132973:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428774:
L_132974:
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D7F
L_132953:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_428781
	cmpl $0x10,%r15d
	je L_428780
	cmpl $0x20,%r15d
	je L_428779
	cmpl $0x40,%r15d
	je L_428778
L_132954:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_132955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428778:
L_132965:
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428779:
L_132964:
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428780:
L_132963:
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428781:
L_132962:
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_132955:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132956
L_132960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132961
.p2align 0x4
.long 0x452
L_132961:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132956:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_435:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132957
L_132958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132959
.p2align 0x4
.long 0x452
L_132959:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132957:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl construct_2
.hidden construct_2
construct_2:
L_133002:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_133098
L_133003:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428816
L_133004:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1159,%r13
	je L_428785
	cmpq $0x115A,%r13
	je L_428784
L_133005:
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	imull $0x5555,%r11d
	movl %r11d,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x20(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x30(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_133006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_428784:
L_133091:
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x18(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x28(%rbp)
	movq %r11,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_133092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_428785:
L_133090:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x8(%rbp)
L_133010:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq (globalObjptr+0xAE0)(%rip),%r15
	movq 0x0(%r15),%r11
	incq %r11
	jo L_428815
L_133012:
	movq %r11,0x0(%r15)
	movl 0x0(%r14),%r15d
	andl 0x8(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_133027
L_133013:
	movslq %r15d,%r14
	movq %r14,0x20(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_133015
L_133016:
	movq 0x0(%r13,%r14,8),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_133026
L_133017:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
.p2align 0x4,,0x7
L_133018:
	movq (globalObjptr+0xAE8)(%rip),%r15
	movq 0x0(%r15),%r14
	incq %r14
	jo L_428811
L_133020:
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1159,%r15
	je L_428808
	cmpq $0x115A,%r15
	je L_428806
L_133021:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1158,%r13
	jne L_133022
L_133064:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_428804
.p2align 0x4,,0x7
L_133022:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_428786
L_133023:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_133018
.p2align 0x4
L_428786:
L_133024:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133026
L_133062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_133063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133063
.p2align 0x4
.long 0xD1D
L_133063:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_133026:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x513,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq (globalObjptr+0x6218)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_133027
L_133028:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r11
	movq $0x2325,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq 0x28(%rbp),%rdx
	movq %rdx,0x8(%r10)
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_133015
L_133030:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r14,8)
	movq 0x10(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_133032
L_133033:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_133027
L_133034:
	cmpl %r14d,%r10d
	jnl L_428798
L_133036:
	addl %r10d,%r10d
	jo L_133027
L_133037:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_428796
L_133038:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x515,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_133039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133039
.p2align 0x4
.long 0x65E
L_133039:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1426:
	cmpq 0x28(%rbp),%r15
	jnl L_428787
L_133060:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1426
.p2align 0x4
L_428787:
L_133040:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_428795
L_133042:
	cmpl $0x0,%r13d
	jl L_428794
L_133043:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_1427:
	movl 0x48(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_428793
L_133045:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_133054
L_133046:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_133047:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428791
.p2align 0x4,,0x7
L_133048:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x20(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_428790
L_133049:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_428789
L_133051:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2325,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_428788
L_133052:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_133047
.p2align 0x4
L_428788:
L_133054:
	incl 0x48(%rbp)
	jmp loop_1427
.p2align 0x4
L_428789:
L_133015:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428790:
L_133027:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428791:
L_133056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_133057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133057
.p2align 0x4
.long 0xD1C
L_133057:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_133048
.p2align 0x4
L_428793:
L_133044:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x18(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428794:
L_133059:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428795:
L_133032:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428796:
L_133061:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428798:
L_133035:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428804:
L_133066:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_133067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_428806:
L_133078:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x115A,%r13
	jne L_133022
L_133079:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_133080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_428808:
L_133074:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1159,%r13
	jne L_133022
L_133075:
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_133022
L_133073:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428811:
L_133019:
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428815:
L_133011:
	movq (globalObjptr+0xAF8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428816:
L_133098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133099
.p2align 0x4
.long 0x460
L_133099:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_133004
.p2align 0x4
.long 0x65D
L_133006:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x65C
L_133092:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_133093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD1E
L_133067:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	testl %r15d,%r15d
	jz L_133022
L_133069:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_133070:
	testl %eax,%eax
	jnz L_133073
	jmp L_133022
.p2align 0x4
.long 0xD1E
L_133080:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	testl %r15d,%r15d
	jz L_133022
L_133082:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_133083:
	testl %eax,%eax
	jnz L_133073
	jmp L_133022
.p2align 0x4
.long 0x789
L_133007:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x789
L_133093:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x789
L_133008:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133009
L_133088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133089
.p2align 0x4
.long 0x65B
L_133089:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_133009:
	movl 0xC(%rbp),%r15d
	xorl %r15d,0x8(%rbp)
	jmp L_133010
.p2align 0x4
.long 0x789
L_133094:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133010
L_133096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133097
.p2align 0x4
.long 0x65B
L_133097:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133010
