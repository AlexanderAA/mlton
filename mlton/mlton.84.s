/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:31 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl qsort_29
.hidden qsort_29
qsort_29:
L_249066:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2855
L_249116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_249117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249117
.p2align 0x4
.long 0x4E9
L_249117:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2855:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_249068
L_249069:
	cmpl $0x14,%r15d
	jng L_482072
L_249071:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_482071
L_249072:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_249073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_482071:
L_249068:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482072:
L_249070:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_249073:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_249074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_249074:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_249068
L_249075:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_249077
L_249078:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_249077
L_249080:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_249077
L_249082:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_249077
L_249084:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_249077
L_249086:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_249068
L_249087:
	movl %r15d,0x50(%rbp)
loop_2857:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_249068
L_249088:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_482074
L_249090:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_249091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482074:
L_249077:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F6
L_249091:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_482083
L_249092:
	movl 0x54(%rbp),%ecx
	jmp loop_2857
.p2align 0x4
L_482083:
L_249093:
	movl 0x50(%rbp),%ecx
loop_2858:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_249068
L_249094:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_249077
L_249096:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_249097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F7
L_249097:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_482086
L_249098:
	movl 0x50(%rbp),%ecx
	jmp loop_2858
.p2align 0x4
L_482086:
L_249099:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_482091
L_249100:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_249077
L_249102:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_249077
L_249104:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_249077
L_249106:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_249077
L_249108:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2857
.p2align 0x4
L_482091:
L_249109:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_249077
L_249111:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_249077
L_249113:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_249068
L_249114:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_249115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_29
.p2align 0x4
.long 0x4F8
L_249115:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2855
.text
.p2align 0x4
.globl qsort_30
.hidden qsort_30
qsort_30:
L_249118:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2859
L_249168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_249169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249169
.p2align 0x4
.long 0x4E9
L_249169:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2859:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_249120
L_249121:
	cmpl $0x14,%r15d
	jng L_482096
L_249123:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_482095
L_249124:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_249125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_482095:
L_249120:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482096:
L_249122:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_249125:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_249126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_249126:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_249120
L_249127:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_249129
L_249130:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_249129
L_249132:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_249129
L_249134:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_249129
L_249136:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_249129
L_249138:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_249120
L_249139:
	movl %r15d,0x50(%rbp)
loop_2861:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_249120
L_249140:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_482098
L_249142:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_249143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482098:
L_249129:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F6
L_249143:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_482107
L_249144:
	movl 0x54(%rbp),%ecx
	jmp loop_2861
.p2align 0x4
L_482107:
L_249145:
	movl 0x50(%rbp),%ecx
loop_2862:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_249120
L_249146:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_249129
L_249148:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_249149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F7
L_249149:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_482110
L_249150:
	movl 0x50(%rbp),%ecx
	jmp loop_2862
.p2align 0x4
L_482110:
L_249151:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_482115
L_249152:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_249129
L_249154:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_249129
L_249156:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_249129
L_249158:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_249129
L_249160:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2861
.p2align 0x4
L_482115:
L_249161:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_249129
L_249163:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_249129
L_249165:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_249120
L_249166:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_249167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_30
.p2align 0x4
.long 0x4F8
L_249167:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2859
.text
.p2align 0x4
.globl qsort_31
.hidden qsort_31
qsort_31:
L_249170:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2863
L_249220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_249221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249221
.p2align 0x4
.long 0x4E9
L_249221:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2863:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_249172
L_249173:
	cmpl $0x14,%r15d
	jng L_482120
L_249175:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_482119
L_249176:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_249177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_482119:
L_249172:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482120:
L_249174:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_249177:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_249178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_249178:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_249172
L_249179:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_249181
L_249182:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_249181
L_249184:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_249181
L_249186:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_249181
L_249188:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_249181
L_249190:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_249172
L_249191:
	movl %r15d,0x50(%rbp)
loop_2865:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_249172
L_249192:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_482122
L_249194:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_249195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482122:
L_249181:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F6
L_249195:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_482131
L_249196:
	movl 0x54(%rbp),%ecx
	jmp loop_2865
.p2align 0x4
L_482131:
L_249197:
	movl 0x50(%rbp),%ecx
loop_2866:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_249172
L_249198:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_249181
L_249200:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_249201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F7
L_249201:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_482134
L_249202:
	movl 0x50(%rbp),%ecx
	jmp loop_2866
.p2align 0x4
L_482134:
L_249203:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_482139
L_249204:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_249181
L_249206:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_249181
L_249208:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_249181
L_249210:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_249181
L_249212:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2865
.p2align 0x4
L_482139:
L_249213:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_249181
L_249215:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_249181
L_249217:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_249172
L_249218:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_249219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_31
.p2align 0x4
.long 0x4F8
L_249219:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2863
.text
.p2align 0x4
.globl x_2005
.hidden x_2005
x_2005:
L_249222:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_249323
L_249223:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482145
L_249224:
	movq 0x28(%rbp),%rsp
	movq 0x10(%rsp),%rax
	movq 0x158(%rax),%r13
	movq 0x150(%rax),%r14
	movq 0x148(%rax),%r15
	movq 0x140(%rax),%rdx
	movq 0x138(%rax),%r10
	movq 0x130(%rax),%r11
	movq %r11,0x30(%rbp)
	movq 0x128(%rax),%r11
	movq %r11,0x38(%rbp)
	movq 0x120(%rax),%rdi
	movq 0x118(%rax),%r11
	movq 0x110(%rax),%rcx
	movq 0x108(%rax),%r9
	movq 0x100(%rax),%r8
	movq 0xF8(%rax),%rbx
	movq 0xD8(%rax),%rsi
	movq %rsi,0x40(%rbp)
	movq 0xD0(%rax),%rsi
	movq %r13,(localObjptr+0x10)(%rip)
	movq 0xC8(%rax),%r13
	movq %r14,(localObjptr+0x18)(%rip)
	movq 0xC0(%rax),%r14
	movq %r15,(localObjptr+0x20)(%rip)
	movq 0xB8(%rax),%r15
	movq %rdx,(localObjptr+0x28)(%rip)
	movq 0xB0(%rax),%rdx
	movq %r10,(localObjptr+0x30)(%rip)
	movq 0xA8(%rax),%r10
	movq %rdi,(localObjptr+0x38)(%rip)
	movq 0x90(%rax),%rdi
	movq %rdi,0x48(%rbp)
	movq 0x88(%rax),%rdi
	movq %rdi,0x50(%rbp)
	movq 0x80(%rax),%rdi
	movq %rdi,0x58(%rbp)
	movq 0x78(%rax),%rdi
	movq %rdi,0x60(%rbp)
	movq 0x70(%rax),%rdi
	movq %rdi,0x68(%rbp)
	movq 0x68(%rax),%rdi
	movq %rdi,0x70(%rbp)
	movq 0x58(%rax),%rdi
	movq %rdi,0x78(%rbp)
	movq 0x50(%rax),%rdi
	movq %rdi,0x80(%rbp)
	movq 0x48(%rax),%rdi
	movq %rdi,0x88(%rbp)
	movq 0x40(%rax),%rdi
	movq %rdi,0x90(%rbp)
	movq 0x38(%rax),%rdi
	movq %rdi,0x98(%rbp)
	movq 0x30(%rax),%rdi
	movq %rdi,0xA0(%rbp)
	movq 0x28(%rax),%rdi
	movq %r11,(localObjptr+0x40)(%rip)
	movq 0x20(%rax),%r11
	movq %r11,0xA8(%rbp)
	movq 0x18(%rax),%r11
	movq %r11,0xB0(%rbp)
	movq 0x8(%rbp),%r11
	movq %rcx,(localObjptr+0x48)(%rip)
	movq 0x8(%r11),%rcx
	movq %rcx,0xB8(%rbp)
	movl 0x0(%r11),%ecx
	movl %ecx,0xC0(%rbp)
	movl 0x4(%r11),%ecx
	movq 0x160(%rax),%r11
	movq %r9,(localObjptr+0x50)(%rip)
	movq 0x10(%r11),%r9
	movq 0x0(%r9),%rsp
	movl 0x0(%rsp),%eax
	incl %eax
	jo L_482144
L_249226:
	movq $0x1F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %eax,0x0(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movq $0x2,0x8(%r11)
	movq %r9,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rax
	xchgq %rsp,%r12
	movb $0x1,0x0(%rax,%r12,1)
	movq %r11,0x0(%r9)
	testl %ecx,%ecx
	jnz L_482143
L_249227:
	movq (globalObjptr+0xA458)(%rip),%rax
	movq %rax,0x8(%rbp)
	movq %rsp,%r12
	movq %r15,%r11
	movq %r14,%r9
	xchgq %r13,%r8
	movq (localObjptr+0x20)(%rip),%r15
	movq (localObjptr+0x18)(%rip),%r14
	movq (localObjptr+0x10)(%rip),%rsp
	xchgq %rsp,%r13
	movq (localObjptr+0x30)(%rip),%rax
	xchgq %rax,%r10
	movq (localObjptr+0x38)(%rip),%rcx
	xchgq %rcx,%rdi
	movq %rdx,(localObjptr+0x88)(%rip)
	movq (localObjptr+0x28)(%rip),%rdx
	movq %rcx,(localObjptr+0x98)(%rip)
	movq (localObjptr+0x48)(%rip),%rcx
	movq %rsp,(localObjptr+0x58)(%rip)
	movq %rax,(localObjptr+0x90)(%rip)
L_249228:
	movq $0x40D9,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r13,0x0(%rsp)
	movq %r14,0x8(%rsp)
	addq $0x28,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rsp)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rsp)
	movq $0x1EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %rsp,0x0(%r14)
	addq $0x10,%r12
	movq $0x1811,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xF13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x20(%r13)
	addq $0x40,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r13)
	movq 0x8(%rbp),%rsp
	movq %rsp,0x8(%r13)
	movq 0x30(%rbp),%rax
	movq %rax,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %rdx,0x28(%r13)
	movq %r15,0x30(%r13)
	movq 0x8(%rdi),%rax
	movq $0x1813,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0xD0(%rbp)
	movq %r11,0x0(%rdi)
	movq %r9,0x18(%rdi)
	movq %r8,0x20(%rdi)
	movq %rsi,0x28(%rdi)
	movq %rcx,0x60(%rdi)
	addq $0x78,%r12
	movq %r10,0x8(%rdi)
	movq 0x0(%rbp),%r11
	movq %r11,0x10(%rdi)
	movq 0x40(%rbp),%r9
	movq %r9,0x30(%rdi)
	movq %rsp,0x38(%rdi)
	movq %r14,0x40(%rdi)
	movq %rbx,0x48(%rdi)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0x50(%rdi)
	movq (localObjptr+0x50)(%rip),%r9
	movq %r9,0x58(%rdi)
	movq (localObjptr+0x40)(%rip),%r8
	movq %r8,0x68(%rdi)
	movq $0x1815,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0xD8(%rbp)
	movq %r8,0x8(%rsp)
	movq %rbx,0x18(%rsp)
	movq %r14,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %r13,0x30(%rsp)
	movq %rax,0x38(%rsp)
	movq (localObjptr+0x90)(%rip),%r14
	movq %r14,0x48(%rsp)
	movq %r15,0x50(%rsp)
	movq %rdx,0x58(%rsp)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x60(%rsp)
	addq $0x70,%r12
	movq %rdi,0x0(%rsp)
	movq %r10,0x10(%rsp)
	movq %r11,0x40(%rsp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (localObjptr+0x98)(%rip),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x118(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq $0x1731,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_249229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3814
.p2align 0x4
L_482143:
L_249322:
	movq (globalObjptr+0x106C0)(%rip),%rax
	movq %rax,0x8(%rbp)
	movq %rsp,%r12
	movq %r15,%r11
	movq %r14,%r9
	xchgq %r13,%r8
	movq (localObjptr+0x20)(%rip),%r15
	movq (localObjptr+0x18)(%rip),%r14
	movq (localObjptr+0x10)(%rip),%rsp
	xchgq %rsp,%r13
	movq (localObjptr+0x30)(%rip),%rax
	xchgq %rax,%r10
	movq (localObjptr+0x38)(%rip),%rcx
	xchgq %rcx,%rdi
	movq %rdx,(localObjptr+0x88)(%rip)
	movq (localObjptr+0x28)(%rip),%rdx
	movq %rcx,(localObjptr+0x98)(%rip)
	movq (localObjptr+0x48)(%rip),%rcx
	movq %rsp,(localObjptr+0x58)(%rip)
	movq %rax,(localObjptr+0x90)(%rip)
	jmp L_249228
.p2align 0x4
L_482144:
L_249225:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482145:
L_249323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_249324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249324
.p2align 0x4
.long 0x4DF
L_249324:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_249224
.p2align 0x4
.long 0x3D66
L_249229:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0xF8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_249234
L_249230:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_249231:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_482147
L_249232:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249231
.p2align 0x4
L_482147:
L_249234:
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_249239
L_249235:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_249236:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_482148
L_249237:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249236
.p2align 0x4
L_482148:
L_249239:
	movq 0xF0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_249240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3D67
L_249240:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249241
L_249318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_249319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249319
.p2align 0x4
.long 0x3D78
L_249319:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_249241:
	movq 0xF0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144A,%r14
	jne L_482152
L_249243:
	movq 0x8(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_482151
L_249244:
L_249245:
	movq %r15,0x108(%rbp)
	movq $0x1,0xF8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_249246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3947
.p2align 0x4
L_482151:
L_249292:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x110(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movl $0x0,0x120(%rbp)
	movq 0x20(%rbp),%r10
	movq %r10,0x128(%rbp)
	movq %r15,0x130(%rbp)
	movq %r14,0x138(%rbp)
	movq %r11,0x140(%rbp)
	movq %r13,0x148(%rbp)
	addq $0x120,%rbp
	leaq (L_249293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3813
.p2align 0x4
L_482152:
L_249242:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D68
L_249246:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq $0x1,0xF8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0xF8,%rbp
	leaq (L_249247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cut_0
.p2align 0x4
.long 0x3D71
L_249293:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249294
L_249316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_249317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249317
.p2align 0x4
.long 0x3D77
L_249317:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_249294:
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482154
L_249295:
	movq 0x8(%r14),%r15
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x128(%rbp)
L_249296:
	movq 0x128(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq $0x3DEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_249297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482154:
L_249301:
	movq 0xF8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x108(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482155
L_249302:
	movq 0x8(%r14),%r15
	movq %r15,0xF8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x100(%rbp)
L_249303:
	movq 0x100(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq $0x3DB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_249304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482155:
L_249308:
	movq 0x108(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x118(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_249309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp collapse_0
.p2align 0x4
.long 0x3D69
L_249247:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249248
L_249290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_249291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249291
.p2align 0x4
.long 0x3D70
L_249291:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_249248:
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482157
L_249249:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_249250:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq $0x3DED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_249251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482157:
L_249255:
	movq 0xE0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482160
L_249256:
	movq $0x20CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0xC0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_482158
L_249257:
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482158:
L_249258:
	movq %r15,0x20(%rbp)
L_249259:
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_482159
L_249260:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482159:
L_249261:
	movq 0xB8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_249262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1221
.p2align 0x4
L_482160:
L_249284:
	movl 0xC0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_482161
L_249285:
	movq $0x1,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482161:
L_249286:
	movq $0x1,0x20(%rbp)
	jmp L_249259
.p2align 0x4
.long 0x3D72
L_249297:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249298
L_249313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_249314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249314
.p2align 0x4
.long 0x3D76
L_249314:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_249298:
	movq 0x128(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r15
	cmpq $0x1,%r15
	je L_249301
L_249299:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x120(%rbp)
	movq %r14,0x128(%rbp)
	jmp L_249296
.p2align 0x4
.long 0x3D73
L_249304:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249305
L_249310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_249311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249311
.p2align 0x4
.long 0x3D75
L_249311:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249305:
	movq 0x100(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r15
	cmpq $0x1,%r15
	je L_249308
L_249306:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	jmp L_249303
.p2align 0x4
.long 0x3D74
L_249309:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_249245
.p2align 0x4
.long 0x3D6A
L_249251:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249252
L_249287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_249288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249288
.p2align 0x4
.long 0x3D6F
L_249288:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_249252:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_249255
L_249253:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_249250
.p2align 0x4
.long 0x3D6B
L_249262:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249263
L_249282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_249283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249283
.p2align 0x4
.long 0x3D6E
L_249283:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_249263:
	movq $0x2A6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_249264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3938
.p2align 0x4
.long 0x3D6C
L_249264:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249265
L_249280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_249281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249281
.p2align 0x4
.long 0x3D6D
L_249281:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_249265:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0xB0(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_249266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replace_4
.p2align 0x4
.long 0x512
L_249266:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249267
L_249278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_249279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249279
.p2align 0x4
.long 0x5EF
L_249279:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_249267:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482171
L_249268:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_249269:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x3D8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_249270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482171:
L_249274:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x768
L_249270:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249271
L_249275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_249276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249276
.p2align 0x4
.long 0x7AD
L_249276:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_249271:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_249274
L_249272:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_249269
.text
.p2align 0x4
.globl loop_3947
.hidden loop_3947
loop_3947:
L_249325:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_249326
L_249398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_249399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249399
.p2align 0x4
.long 0x4AF
L_249399:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_249326:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_249328
L_249329:
	cmpl $0x0,%r13d
	jl L_249379
L_249330:
	movl $0x0,0x8(%rbp)
	movl $0x0,0xC(%rbp)
loop_2867:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_482184
L_249331:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_249328
L_249333:
	cmpl $0x0,%r13d
	jl L_482182
L_249334:
	xorl %ecx,%ecx
	movl $0x0,0xC(%rbp)
loop_2868:
	movl 0xC(%rbp),%r15d
	cmpl 0x8(%rbp),%r15d
	jnl L_482181
L_249336:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x10(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x28(%rbp)
	movl %ecx,%ebx
.p2align 0x4,,0x7
loop_2869:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482180
L_249338:
	cmpl %ebx,%r13d
	je L_482179
L_249339:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_482178
L_249342:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r11
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x18(%r14),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_482176
L_249343:
	incl %ebx
	jo L_482175
L_249345:
	jmp loop_2869
.p2align 0x4
L_482175:
L_249344:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482176:
L_249346:
	incl %ebx
	jo L_249344
L_249347:
	movq %r11,0x38(%rbp)
	movl %ebx,0x40(%rbp)
L_249348:
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_249349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_482178:
L_249341:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482179:
L_249377:
	movl %ecx,0x40(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_249348
.p2align 0x4
L_482180:
L_249328:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482181:
L_249335:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482182:
L_249379:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482184:
L_249380:
	movslq 0xC(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x10(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x48(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x44(%rbp)
.p2align 0x4,,0x7
loop_2870:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_249328
L_249382:
	movl 0x44(%rbp),%r11d
	cmpl %r13d,%r11d
	je L_482190
L_249383:
	movslq %r11d,%r13
	cmpq %r14,%r13
	jnb L_249341
L_249385:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0x48(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x18(%r14),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_482186
L_249386:
	incl %r11d
	jo L_249344
L_249387:
	movl %r11d,0x44(%rbp)
	jmp loop_2870
.p2align 0x4
L_482186:
L_249388:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249389
L_249393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_249394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249394
.p2align 0x4
.long 0x9D5
L_249394:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_249389:
	movl 0x44(%rbp),%r15d
	incl %r15d
	movl %r15d,0x8(%rbp)
	jo L_249344
L_249390:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_249391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3947
.p2align 0x4
L_482190:
L_249395:
	movq 0x10(%rbp),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_249396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allNone_1
.p2align 0x4
.long 0x3D79
L_249349:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1458,%r14
	jne L_482199
L_249351:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movl 0xC(%r14),%ecx
	movq 0x30(%r14),%r11
	movb 0x0(%r11),%dl
	cmpq $0x1,0x38(%rbp)
	je L_482198
L_249352:
	testl %ecx,%ecx
	jnz L_482195
L_249353:
	xorl %ecx,%ecx
	movq %r13,%r15
L_249354:
	movl %ecx,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movb %dl,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_249355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isPlausible_0
.p2align 0x4
L_482195:
L_249372:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_482197
	cmpq $0x1052,%r15
	je L_482196
L_249373:
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_249354
.p2align 0x4
L_482196:
L_249375:
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_249354
.p2align 0x4
L_482197:
L_249374:
	movl $0x1,%ecx
	movq %r13,%r15
	jmp L_249354
.p2align 0x4
L_482198:
L_249357:
	movq $0x1,0x28(%rbp)
L_249358:
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_249359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_482199:
L_249350:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9D4
L_249391:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x8(%rbp),%ecx
L_249392:
	movl %ecx,0x8(%rbp)
	incl 0xC(%rbp)
	jmp loop_2867
.p2align 0x4
.long 0x9D4
L_249396:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x8(%rbp),%ecx
	jmp L_249392
.p2align 0x4
.long 0x3D7A
L_249355:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x28(%rbp)
	jz L_249357
L_249371:
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_249358
.p2align 0x4
.long 0x3D7B
L_249359:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249360
L_249369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_249370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249370
.p2align 0x4
.long 0x3D7C
L_249370:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_249360:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1458,%r15
	jne L_249350
L_249361:
	movq 0x8(%r14),%r15
	movq 0x20(%r15),%r13
	movq 0x0(%r13),%r15
L_249362:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_249363
L_249364:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD5C,%r14
	jne L_482202
L_249365:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_482201
L_249368:
	movq $0x20BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1AB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	incl 0xC(%rbp)
	movl 0x40(%rbp),%ecx
	jmp loop_2868
.p2align 0x4
L_482201:
L_249366:
L_249367:
	movq (globalObjptr+0x4D68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482202:
L_249363:
	movq (globalObjptr+0x4D38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl isPlausible_0
.hidden isPlausible_0
isPlausible_0:
L_249400:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_249926
L_249401:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482208
L_249402:
	movq 0x30(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x68(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_482207
	cmpq $0x1052,%r15
	je L_482206
L_249403:
	movq %r13,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482206:
L_249921:
	movq %r13,0xA8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482207:
L_249875:
	movq 0x0(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x10(%r11),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq $0x3ED1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	addq $0xA0,%rbp
	leaq (L_249876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_482208:
L_249926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_249927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249927
.p2align 0x4
.long 0xB27
L_249927:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_249402
.p2align 0x4
.long 0x3D7D
L_249404:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_249407
	cmpb $0x2,%r15b
	je L_482220
L_249406:
	cmpb $0x1,%dl
	je L_482215
L_249407:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	andq $0x1,%r14
	jnz L_482212
L_249408:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jz L_482210
L_249409:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482210:
L_249473:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_482211
L_249474:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482211:
L_249475:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482212:
L_249526:
	movq 0x10(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq 0x8(%rbp),%r15
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_249409
L_249527:
	shrq $0x1,%r15
	movl %r15d,%r13d
	cmpl %r13d,%r14d
	je L_249473
	jmp L_249409
.p2align 0x4
L_482215:
L_249531:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	cmpq $0x1,%r14
	je L_482219
	cmpq $0x2,%r14
	je L_482218
L_249532:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x206C,%r15
	je L_482217
	cmpq $0x206D,%r15
	je L_482216
L_249533:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	leaq L_249866(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xA0,%rbp
	leaq (L_249534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_482216:
L_249868:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	leaq L_249866(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xA0,%rbp
	leaq (L_249534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_482217:
L_249867:
	movq 0x18(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
	leaq L_249866(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xA0,%rbp
	leaq (L_249534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1230
.p2align 0x4
L_482218:
L_249870:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482219:
L_249535:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482220:
L_249873:
	cmpb $0x2,%dl
	je L_249407
	jmp L_249531
.p2align 0x4
.long 0x3D7D
L_249922:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_249407
	cmpb $0x2,%r15b
	je L_249873
	jmp L_249406
.p2align 0x4
.long 0x3D7D
L_249876:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x3D7E
L_249410:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D8B
L_249476:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D95
L_249534:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_249535
.p2align 0x4
.long 0xA20
L_249866:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D96
L_249536:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D7D
L_249877:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_482236
L_249878:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_249892
	cmpq $0x2,%r13
	je L_249887
L_249879:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482228
L_249896:
	movq 0x0(%r13),%r15
L_249897:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E2,%r14
	je L_482227
	cmpq $0x23E3,%r14
	je L_482226
	cmpq $0x23E4,%r14
	je L_482225
L_249898:
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0xA0,%rbp
	leaq (L_249899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482225:
L_249918:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (loop_2875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_482226:
L_249917:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (loop_2875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_482227:
L_249911:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (loop_2875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_482228:
L_249880:
	movq 0x0(%r13),%r15
x_853:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482232
L_249885:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_482230
L_249887:
	cmpb $0x1,0x10(%rbp)
	je L_249407
	jmp L_249531
.p2align 0x4
L_482230:
L_249892:
	cmpb $0x2,0x10(%rbp)
	je L_249531
	jmp L_249407
.p2align 0x4
L_482232:
L_249881:
	cmpb $0x2,0x10(%rbp)
	je L_249531
	jmp L_249407
.p2align 0x4
L_482236:
L_249705:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D7F
L_249411:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249412
L_249470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249471
.p2align 0x4
.long 0x3D89
L_249471:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_249412:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_482237
L_249413:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
L_249414:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482237:
L_249469:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x18(%rbp)
L_249419:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D8C
L_249477:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249478
L_249524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249525
.p2align 0x4
.long 0x3D94
L_249525:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249478:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_482239
L_249479:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
L_249480:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482239:
L_249523:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x30(%rbp)
L_249485:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D97
L_249537:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249538
L_249864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249865
.p2align 0x4
.long 0x3DD4
L_249865:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249538:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_482241
L_249539:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
L_249540:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482241:
L_249863:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x30(%rbp)
L_249545:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DD5
L_249899:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_482247
	cmpb $0x2,%r13b
	je L_482246
L_249900:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_249892
	cmpq $0x2,%r14
	je L_249887
L_249901:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482243
L_249903:
	movq 0x0(%r14),%r15
	jmp L_249897
.p2align 0x4
L_482243:
L_249902:
	movq 0x0(%r14),%r15
	jmp x_853
.p2align 0x4
L_482246:
L_249824:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482247:
L_249906:
	cmpb $0x1,0x10(%rbp)
	je L_249407
	jmp L_249531
.p2align 0x4
.long 0x3D7D
loop_2875:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_249892
	cmpq $0x2,%r14
	je L_249887
L_249912:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482249
L_249914:
	movq 0x0(%r14),%r15
	jmp L_249897
.p2align 0x4
L_482249:
L_249913:
	movq 0x0(%r14),%r15
	jmp x_853
.p2align 0x4
.long 0x3D80
L_249415:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249416
L_249467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249468
.p2align 0x4
.long 0x3D8A
L_249468:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_249416:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_482252
L_249417:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_249414
.p2align 0x4
L_482252:
L_249418:
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_249419
.p2align 0x4
.long 0x3D80
L_249420:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_249421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3D8D
L_249481:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249482
L_249521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249522
.p2align 0x4
.long 0x3D91
L_249522:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249482:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_482254
L_249483:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_249480
.p2align 0x4
L_482254:
L_249484:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_249485
.p2align 0x4
.long 0x3D8D
L_249486:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_249487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3D98
L_249541:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249542
L_249861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249862
.p2align 0x4
.long 0x3DD1
L_249862:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249542:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_482256
L_249543:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_249540
.p2align 0x4
L_482256:
L_249544:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_249545
.p2align 0x4
.long 0x3D98
L_249546:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_249547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3D7F
L_249421:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249422
L_249465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249466
.p2align 0x4
.long 0x3D89
L_249466:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_249422:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249423:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_482261
L_249425:
	cmpq $0x1,%r14
	je L_482258
L_249426:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249423
.p2align 0x4
L_482258:
L_249427:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249428
L_249463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249464
.p2align 0x4
.long 0x3D88
L_249464:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_249428:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482259
L_249429:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_249430:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10640)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482259:
L_249462:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249430
.p2align 0x4
L_482261:
L_249424:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D8E
L_249487:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249488
L_249519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249520
.p2align 0x4
.long 0x3D93
L_249520:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249488:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249489:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_249424
L_249490:
	cmpq $0x1,%r14
	je L_482263
L_249491:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249489
.p2align 0x4
L_482263:
L_249492:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249493
L_249517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249518
.p2align 0x4
.long 0x3D92
L_249518:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249493:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482264
L_249494:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_249495:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x106D0)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482264:
L_249516:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249495
.p2align 0x4
.long 0x3D99
L_249547:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249548
L_249859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249860
.p2align 0x4
.long 0x3DD3
L_249860:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249548:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249549:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_249424
L_249550:
	cmpq $0x1,%r14
	je L_482268
L_249551:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249549
.p2align 0x4
L_482268:
L_249552:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249553
L_249857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249858
.p2align 0x4
.long 0x3DD2
L_249858:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249553:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482269
L_249554:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_249555:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x106D8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482269:
L_249856:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249555
.p2align 0x4
.long 0x3D81
L_249431:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	andq $0x1,%r15
	jnz L_482273
L_249432:
	movq (globalObjptr+0x10648)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482273:
L_249460:
	movq 0x10(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_249461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3D8F
L_249496:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D9A
L_249556:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D80
L_249433:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x106C8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D80
L_249461:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D90
L_249497:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xAC30)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D9B
L_249557:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xAC30)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D82
L_249434:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jnz L_482274
L_249435:
	movq (globalObjptr+0x10648)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482274:
L_249458:
	movq 0x8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x90(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_249459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3D8D
L_249498:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249499
L_249514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249515
.p2align 0x4
.long 0x3D91
L_249515:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249499:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249500:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_249424
L_249501:
	cmpq $0x1,%r14
	je L_482275
L_249502:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249500
.p2align 0x4
L_482275:
L_249503:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249504
L_249512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249513
.p2align 0x4
.long 0x3D86
L_249513:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249504:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482277
L_249505:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_249506:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249424
L_249507:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_249508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482277:
L_249511:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249506
.p2align 0x4
.long 0x3D98
L_249558:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249559
L_249854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249855
.p2align 0x4
.long 0x3DD1
L_249855:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249559:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249560:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_249424
L_249561:
	cmpq $0x1,%r14
	je L_482281
L_249562:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249560
.p2align 0x4
L_482281:
L_249563:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249564
L_249852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_249853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249853
.p2align 0x4
.long 0x3DD0
L_249853:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_249564:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482282
L_249565:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_249566:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x106E0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_249567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482282:
L_249851:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249566
.p2align 0x4
.long 0x3D83
L_249436:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xF308)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D83
L_249459:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x298D
L_249508:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_482286
L_249450:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482286:
L_249452:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D9C
L_249567:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249568
L_249849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249850
.p2align 0x4
.long 0x3DCF
L_249850:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249568:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_482294
	cmpq $0x1052,%r14
	je L_482288
L_249569:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x18(%r14),%r10
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	jne L_482287
L_249591:
	movq %r10,0x90(%rbp)
	movq %r13,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_249592+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_482287:
L_249570:
L_249571:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482288:
L_249676:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x88(%rbp)
	cmpq %r15,%r11
	movq %r14,0x70(%rbp)
	jne L_482293
L_249678:
	testq %r11,%r11
	jz L_482292
L_249679:
	cmpq $0x7FFFFFFF,%r11
	ja L_482291
L_249680:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249681
L_249845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249846
.p2align 0x4
.long 0x3DB1
L_249846:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_249681:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15A7,%rcx
	movq 0x88(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249682
.p2align 0x4
.long 0x3DB1
L_249682:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
L_249683:
	movl $0x0,0x98(%rbp)
	movq $0x0,0xA0(%rbp)
loop_2872:
	movq 0x88(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_482289
L_249684:
	movq 0x90(%rbp),%r15
	movq $0xC1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC1D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x38FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	addq $0x18,%r12
	addq $0x90,%rbp
	leaq (toList_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_482289:
L_249698:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x70(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0xC0(%rbp)
	salq $0x5,%r15
	movq 0x10(%r13,%r15,1),%r14
	movq %r14,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq $0x3ED5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	addq $0xB8,%rbp
	leaq (L_249699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_482291:
L_249847:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482292:
L_249848:
	movq (globalObjptr+0x4DC0)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_249683
.p2align 0x4
L_482293:
L_249601:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482294:
L_249593:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_482295
L_249675:
	movq 0x18(%r14),%r15
	movq %r15,0x58(%rbp)
explainDoesNotAdmitEquality_0:
	movq 0x68(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_249595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482295:
L_249594:
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	jmp explainDoesNotAdmitEquality_0
.p2align 0x4
.long 0x3D84
L_249437:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DA0
L_249592:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_249571
.p2align 0x4
.long 0x3D9D
L_249572:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249573
L_249589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249590
.p2align 0x4
.long 0x3D9F
L_249590:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249573:
	movq 0x58(%rbp),%r15
L_249574:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_249575:
	addl 0x0(%r14),%ecx
	movl %ecx,0x50(%rbp)
	jo L_249424
L_249576:
	cmpq $0x1,%r15
	je L_482297
L_249577:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249575
.p2align 0x4
L_482297:
L_249578:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249579
L_249587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249588
.p2align 0x4
.long 0x3D9E
L_249588:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249579:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482299
L_249580:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_249581:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249424
L_249582:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_249583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482299:
L_249586:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249581
.p2align 0x4
.long 0x3D9D
toList_17:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249685
L_249696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249697
.p2align 0x4
.long 0x3D9F
L_249697:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249685:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_249601
L_249687:
	movl %r13d,0x98(%rbp)
	movq $0x3BEB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3DB3
L_249699:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_249700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x3DA1
L_249595:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249596
L_249673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_249674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249674
.p2align 0x4
.long 0x3DB0
L_249674:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_249596:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1817,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD8(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x1819,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE0(%rbp)
	addq $0x28,%r12
	movq 0x90(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	movq (globalObjptr+0xF18)(%rip),%r14
	movq $0xC4D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r15,0xF0(%rbp)
	movq %r11,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_249597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
.long 0x3D85
L_249438:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249439
L_249456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249457
.p2align 0x4
.long 0x3D87
L_249457:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249439:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_249440:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_249424
L_249441:
	cmpq $0x1,%r14
	je L_482306
L_249442:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249440
.p2align 0x4
L_482306:
L_249443:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249444
L_249454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249455
.p2align 0x4
.long 0x3D86
L_249455:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249444:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482308
L_249445:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_249446:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249424
L_249447:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_249448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482308:
L_249453:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249446
.p2align 0x4
.long 0x298D
L_249583:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_249452
	jmp L_249450
.p2align 0x4
.long 0x3D9D
L_249688:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3DB3
L_249700:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249701
L_249843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_249844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249844
.p2align 0x4
.long 0x3DCE
L_249844:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_249701:
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_482313
L_249702:
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_249703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_482313:
L_249810:
	movl 0x98(%rbp),%ecx
	movq $0x1,%r15
L_249710:
	movl %ecx,0x98(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_2872
.p2align 0x4
.long 0x3DA2
L_249597:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249598
L_249671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_249672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249672
.p2align 0x4
.long 0x3DAF
L_249672:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_249598:
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_482323
	cmpb $0x2,%r14b
	je L_249647
L_249599:
	movq (globalObjptr+0xF18)(%rip),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x60(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_249601
L_249602:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2871:
	cmpl %ecx,0x60(%rbp)
	je L_482319
L_249603:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_482318
L_249606:
	movq (globalObjptr+0xF18)(%rip),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482316
L_249643:
	incl %ecx
	jo L_249424
L_249644:
	jmp loop_2871
.p2align 0x4
L_482316:
L_249607:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249608
L_249641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_249642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249642
.p2align 0x4
.long 0x3DA9
L_249642:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_249608:
	movq $0x3825,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF18)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xF0(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_249609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482318:
L_249605:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482319:
L_249645:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249647
L_249648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_249649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249649
.p2align 0x4
.long 0x3DAA
L_249649:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_249647:
	movq $0x1,%r15
L_249612:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x4123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0xE,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x607,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq %r11,0xF0(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x98(%rbp),%r11
	movq %r11,0xD0(%rbp)
	movq 0xD8(%rbp),%r11
	movq %r11,0xE8(%rbp)
	movq %r15,0xD8(%rbp)
	movq %r14,0xF8(%rbp)
	movq %r13,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0xA0(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0x98,%rbp
	leaq (L_249613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_125
.p2align 0x4
L_482323:
L_249650:
	movq (globalObjptr+0xF18)(%rip),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_249601
L_249652:
	movl %r9d,0xF8(%rbp)
	movq $0x3825,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0xD0(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r10,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_249653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x298D
L_249448:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_249452
	jmp L_249450
.p2align 0x4
.long 0x3D9D
L_249689:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249690
L_249694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249695
.p2align 0x4
.long 0x3DB2
L_249695:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249690:
	movl 0x58(%rbp),%r14d
	testl %r14d,%r14d
	jz L_482328
L_249691:
	decl %r14d
	jo L_249424
L_249692:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_249574
.p2align 0x4
L_482328:
L_249693:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_249574
.p2align 0x4
.long 0x3DB4
L_249703:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249704
L_249840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_249841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249841
.p2align 0x4
.long 0x3DBF
L_249841:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_249704:
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_249705
L_249706:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_249810
	cmpq $0x2,%r13
	je x_852
L_249707:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482333
L_249811:
	movq 0x0(%r13),%r15
L_249812:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E2,%r14
	je L_482332
	cmpq $0x23E3,%r14
	je L_482331
	cmpq $0x23E4,%r14
	je L_482330
L_249813:
	movq 0x10(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0xC8,%rbp
	leaq (L_249814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482330:
L_249837:
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (loop_2874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_482331:
L_249836:
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (loop_2874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_482332:
L_249827:
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (loop_2874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_482333:
L_249708:
	movq 0x0(%r13),%r15
x_851:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482335
L_249711:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_249810
x_852:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_249713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482335:
L_249709:
	movl 0x98(%rbp),%ecx
	movq $0x1,%r15
	jmp L_249710
.p2align 0x4
.long 0x3DA3
L_249609:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xF0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_249610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3DA5
L_249613:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249614
L_249637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249638
.p2align 0x4
.long 0x25A5
L_249638:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_249614:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482339
L_249615:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
L_249616:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_249617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482339:
L_249621:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482340
L_249622:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
L_249623:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x3D93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482340:
L_249628:
	movq 0x70(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_482341
L_249629:
	movq 0x8(%r14),%r15
	jmp L_249574
.p2align 0x4
L_482341:
L_249630:
	movq (globalObjptr+0xDD48)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DA3
L_249653:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xF0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_249654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3DCC
L_249814:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249815
L_249825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_249826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249826
.p2align 0x4
.long 0x3DCD
L_249826:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_249815:
	movq 0xC0(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je x_852
	cmpb $0x2,%r14b
	je L_249824
L_249816:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_249810
	cmpq $0x2,%r14
	je x_852
L_249817:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482343
L_249819:
	movq 0x0(%r14),%r15
	jmp L_249812
.p2align 0x4
L_482343:
L_249818:
	movq 0x0(%r14),%r15
	jmp x_851
.p2align 0x4
.long 0x3DB4
loop_2874:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249828
L_249834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_249835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249835
.p2align 0x4
.long 0x3DBF
L_249835:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_249828:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_249810
	cmpq $0x2,%r14
	je x_852
L_249829:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482347
L_249831:
	movq 0x0(%r14),%r15
	jmp L_249812
.p2align 0x4
L_482347:
L_249830:
	movq 0x0(%r14),%r15
	jmp x_851
.p2align 0x4
.long 0x3DB5
L_249713:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0xDF68)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_249714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DA4
L_249610:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249611
L_249639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_249640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249640
.p2align 0x4
.long 0x3DA8
L_249640:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_249611:
	movq 0x60(%rbp),%r15
	jmp L_249612
.p2align 0x4
.long 0x7E2
L_249617:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249618
L_249634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_249635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249635
.p2align 0x4
.long 0x3DA7
L_249635:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_249618:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_249621
L_249619:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_249616
.p2align 0x4
.long 0x36A6
L_249624:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249625
L_249631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249632
.p2align 0x4
.long 0x3DA6
L_249632:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249625:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_249628
L_249626:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_249623
.p2align 0x4
.long 0x3DA4
L_249654:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_249655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DB4
L_249714:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x110(%rbp)
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_249715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DAB
L_249655:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_249656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DB6
L_249715:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249716
L_249807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_249808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249808
.p2align 0x4
.long 0x3DCB
L_249808:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_249716:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1817,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x128(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC0(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x1819,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	addq $0x28,%r12
	movq 0xD8(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	movq (globalObjptr+0xF18)(%rip),%r14
	movq $0xC4D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r15,0x140(%rbp)
	movq %r11,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_249717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
.long 0x3DAC
L_249656:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249657
L_249668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_249669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249669
.p2align 0x4
.long 0x3DAE
L_249669:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_249657:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249658:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_249424
L_249659:
	cmpq $0x1,%r14
	je L_482356
L_249660:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249658
.p2align 0x4
L_482356:
L_249661:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249662
L_249666:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_249667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249667
.p2align 0x4
.long 0x3DAD
L_249667:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_249662:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482357
L_249663:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_249664:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_249612
.p2align 0x4
L_482357:
L_249665:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249664
.p2align 0x4
.long 0x3DB7
L_249717:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249718
L_249805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_249806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249806
.p2align 0x4
.long 0x3DCA
L_249806:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_249718:
	movq 0xC0(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_482369
	cmpb $0x2,%r14b
	je L_249781
L_249719:
	movq (globalObjptr+0xF18)(%rip),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x9C(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_249601
L_249721:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2873:
	cmpl %ecx,0x9C(%rbp)
	je L_482365
L_249722:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_249605
L_249724:
	movq (globalObjptr+0xF18)(%rip),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482362
L_249777:
	incl %ecx
	jo L_249424
L_249778:
	jmp loop_2873
.p2align 0x4
L_482362:
L_249725:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249726
L_249775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_249776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249776
.p2align 0x4
.long 0x3DC4
L_249776:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_249726:
	movq $0x3825,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF18)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x140(%rbp)
	movl 0x9C(%rbp),%r15d
	movl %r15d,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_249727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482365:
L_249779:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249781
L_249782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_249783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249783
.p2align 0x4
.long 0x3DC5
L_249783:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_249781:
	movq $0x1,%r15
L_249730:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x4123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0xE,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x607,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq %r11,0x140(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xE8(%rbp),%r11
	movq %r11,0x118(%rbp)
	movq 0xE0(%rbp),%r11
	movq %r11,0x120(%rbp)
	movq 0x128(%rbp),%r11
	movq %r11,0x138(%rbp)
	movq %r15,0x128(%rbp)
	movq %r14,0x148(%rbp)
	movq %r13,0x150(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x110(%rbp),%r15
	movq 0xF0(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0xF0(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x108(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x108(%rbp)
	addq $0xE8,%rbp
	leaq (L_249731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_125
.p2align 0x4
L_482369:
L_249784:
	movq (globalObjptr+0xF18)(%rip),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_249601
L_249786:
	movl %r9d,0x148(%rbp)
	movq $0x3825,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x120(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r10,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_249787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x3DB8
L_249727:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x140(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_249728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3DBA
L_249731:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249732
L_249771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_249772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249772
.p2align 0x4
.long 0x3DC2
L_249772:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_249732:
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482372
L_249733:
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE8(%rbp)
L_249734:
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_249735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482372:
L_249739:
	movq 0xC0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482373
L_249740:
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
L_249741:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x3D93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_249742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482373:
L_249746:
	movq 0xD0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_482379
L_249747:
	movq 0x8(%r14),%r15
L_249748:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249749:
	addl 0x0(%r14),%ecx
	movl %ecx,0x9C(%rbp)
	jo L_249424
L_249750:
	cmpq $0x1,%r15
	je L_482374
L_249751:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249749
.p2align 0x4
L_482374:
L_249752:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249753
L_249758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_249759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249759
.p2align 0x4
.long 0x3DBD
L_249759:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_249753:
	movl 0x9C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482376
L_249754:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
L_249755:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movl 0x98(%rbp),%ecx
	incl %ecx
	jo L_249424
L_249756:
	movq %r14,%r15
	jmp L_249710
.p2align 0x4
L_482376:
L_249757:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249755
.p2align 0x4
L_482379:
L_249760:
	movq (globalObjptr+0xDD48)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_249761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DB8
L_249787:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x140(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_249788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3DB9
L_249728:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249729
L_249773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_249774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249774
.p2align 0x4
.long 0x3DC3
L_249774:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_249729:
	movq 0xC0(%rbp),%r15
	jmp L_249730
.p2align 0x4
.long 0x3DBB
L_249735:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249736
L_249768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_249769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249769
.p2align 0x4
.long 0x3DC1
L_249769:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_249736:
	movq 0xE8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r15
	cmpq $0x1,%r15
	je L_249739
L_249737:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xE0(%rbp)
	movq %r14,0xE8(%rbp)
	jmp L_249734
.p2align 0x4
.long 0x3DBC
L_249742:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249743
L_249765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_249766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249766
.p2align 0x4
.long 0x3DC0
L_249766:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_249743:
	movq 0xC8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_249746
L_249744:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	jmp L_249741
.p2align 0x4
.long 0x3DBE
L_249761:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249762
L_249763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_249764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249764
.p2align 0x4
.long 0x3DBF
L_249764:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_249762:
	movq 0xB8(%rbp),%r15
	jmp L_249748
.p2align 0x4
.long 0x3DB9
L_249788:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_249789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DC6
L_249789:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_249790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DC7
L_249790:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249791
L_249802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_249803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249803
.p2align 0x4
.long 0x3DC9
L_249803:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_249791:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD8(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249792:
	addl 0x0(%r15),%ecx
	movl %ecx,0x9C(%rbp)
	jo L_249424
L_249793:
	cmpq $0x1,%r14
	je L_482387
L_249794:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249792
.p2align 0x4
L_482387:
L_249795:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249796
L_249800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_249801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249801
.p2align 0x4
.long 0x3DC8
L_249801:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_249796:
	movl 0x9C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482388
L_249797:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
L_249798:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_249730
.p2align 0x4
L_482388:
L_249799:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249798
.text
.p2align 0x4
.globl get_125
.hidden get_125
get_125:
L_249928:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_249929
L_250450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250451
.p2align 0x4
.long 0x678
L_250451:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_249929:
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_249930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x660
L_249930:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r13,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_482403
L_249932:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_482402
L_249934:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482401
L_249935:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_249937:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_249938
L_250442:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD5B,%r13
	jne L_249938
L_250443:
	movq 0x8(%r14),%r13
	movq 0x68(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_482396
L_249938:
	incl %ecx
	jo L_482395
L_249940:
	cmpq $0x1,%r15
	je L_482393
L_249941:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249937
.p2align 0x4
L_482393:
L_249942:
L_249943:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482394
L_249945:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_854
L_250441:
	movl %ecx,0x0(%r15)
x_854:
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_249947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_482394:
L_249944:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482395:
L_249939:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482396:
L_250445:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_249944
L_250446:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_482397
L_250448:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482397:
L_250447:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482401:
L_250449:
	xorl %ecx,%ecx
	jmp L_249943
.p2align 0x4
L_482402:
L_249933:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482403:
L_249931:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8C3
L_249947:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249948
L_250439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_250440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250440
.p2align 0x4
.long 0x8E0
L_250440:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_249948:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_249931
L_249949:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_249950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x8C3
L_249950:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_482407
	cmpb $0x2,%r14b
	je L_482406
L_249951:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_482406:
L_250438:
	movq (globalObjptr+0x1BC0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482407:
L_250437:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD2C
L_249952:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249953
L_250435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_250436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250436
.p2align 0x4
.long 0xD37
L_250436:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249953:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_249931
L_249954:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_482482
L_249955:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_482481
	cmpq $0xE78,%r15
	je L_482417
	cmpq $0xE79,%r15
	je L_482415
	cmpq $0xE7A,%r15
	je L_482413
	cmpq $0xE7B,%r15
	je L_482408
L_249956:
	movq $0x1,%r15
L_249957:
	movq 0x78(%rbp),%r14
	movb $0x1,0x0(%r14)
	movq $0x1AB7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482408:
L_250287:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x80(%rbp)
	jne L_482412
L_250289:
	testq %rdx,%rdx
	jz L_482411
L_250290:
	cmpq $0x7FFFFFFF,%rdx
	ja L_482410
L_250291:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_250292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250292
.p2align 0x4
.long 0x1232
L_250292:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
L_250293:
	movq $0x0,0xA0(%rbp)
loop_2890:
	movq 0x90(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_482409
L_250294:
	movq 0x98(%rbp),%r15
	movq $0xC4D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_250295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482409:
L_250341:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0xB0,%rbp
	leaq (L_250342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_125
.p2align 0x4
L_482410:
L_250091:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482411:
L_250344:
	movq (globalObjptr+0x4D10)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_250293
.p2align 0x4
L_482412:
L_249962:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482413:
L_250237:
	movq 0x8(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_482414
L_250238:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x90(%rbp)
	movq %r14,%r15
L_250239:
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xA8,%rbp
	leaq (L_250240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_125
.p2align 0x4
L_482414:
L_250286:
	movq $0x1,0x50(%rbp)
L_250244:
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_250245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_482415:
L_250155:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	cmpq $0x1,%r14
	je L_482416
L_250156:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x90(%rbp)
	movq %r14,%r15
L_250157:
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xA8,%rbp
	leaq (L_250158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_125
.p2align 0x4
L_482416:
L_250236:
	movq $0x1,0x50(%rbp)
L_250162:
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_482417:
L_249959:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_482476
L_250130:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x80(%rbp)
	jne L_249962
L_250132:
	testq %rdx,%rdx
	jz L_482474
L_250133:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250091
L_250134:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_250135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250135
.p2align 0x4
.long 0x1239
L_250135:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
L_250136:
	movq $0x0,0x98(%rbp)
loop_2885:
	movq 0x88(%rbp),%r15
	cmpq %r15,0x98(%rbp)
	jl L_482472
L_250137:
	movq 0x90(%rbp),%r15
	movq $0xC4D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %r14,%rdx
	jne L_249962
L_250139:
	testq %rdx,%rdx
	jz L_482470
L_250140:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250091
L_250141:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_250142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250142
.p2align 0x4
.long 0x3DE5
L_250142:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x58(%rbp)
L_250143:
	movq $0x0,0x60(%rbp)
.p2align 0x4,,0x7
loop_2886:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482468
.p2align 0x4,,0x7
L_250144:
	movq 0x60(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnl L_482418
L_250146:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x90(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movl %r14d,%r13d
	shlq $0x1,%r13
	orq $0x1,%r13
	movq $0x103F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x60(%rbp)
	jmp loop_2886
.p2align 0x4
L_482418:
L_250145:
	movq 0x58(%rbp),%r14
	movq $0xAF5,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x80(%rbp)
	movq 0x48(%rbp),%r14
	xchgq %r14,%r15
x_855:
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %r14,%rdx
	movq %r14,0xA8(%rbp)
	jne L_249962
L_249970:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250091
L_249971:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_249972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249972
.p2align 0x4
.long 0x3DD6
L_249972:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xB8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2877:
	cmpq 0xB0(%rbp),%r15
	jnl L_482420
L_250119:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0xA8(%rbp),%r13
	jnb L_482419
L_250121:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2877
.p2align 0x4
L_482419:
L_249979:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482420:
L_249973:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249974
L_250117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_250118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250118
.p2align 0x4
.long 0x3DD8
L_250118:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_249974:
	movq 0xB0(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x80(%rbp)
	movslq %r14d,%r13
	movq %r13,0xA8(%rbp)
	cmpq %r15,%r13
	jne L_249962
L_249976:
	testl %r14d,%r14d
	jz L_482431
L_249977:
	movq $0x181B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_249979
L_249980:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_482429
L_249981:
	movq %r15,0xC8(%rbp)
	movl $0x0,0x84(%rbp)
	movl $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
loop_2878:
	movl 0xD0(%rbp),%ecx
	cmpl 0x80(%rbp),%ecx
	jnl L_482425
L_250100:
	movslq %ecx,%r15
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xD8(%rbp)
	movq 0x8(%r13),%r14
	movq 0xC8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_482422
L_250101:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482421
L_250108:
	movq %r13,%r15
.p2align 0x4,,0x7
L_250106:
	movq %r15,0xC8(%rbp)
	movl %ecx,0x84(%rbp)
	incl 0xD0(%rbp)
	jmp loop_2878
.p2align 0x4
L_482421:
L_250102:
	movq %r10,0xE8(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_250103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482422:
L_250109:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482424
L_250111:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_482423
L_250112:
	movq 0xC8(%rbp),%r15
	movl 0x84(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_250106
.p2align 0x4
L_482423:
.p2align 0x4,,0x7
L_250105:
	movq 0xD8(%rbp),%r15
	movl 0xD0(%rbp),%ecx
	jmp L_250106
.p2align 0x4
L_482424:
L_250110:
	movq 0xC8(%rbp),%r15
	movl 0x84(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_250106
.p2align 0x4
L_482425:
L_249982:
	movl 0x80(%rbp),%r15d
	decl %r15d
	movslq 0x84(%rbp),%r14
	movq 0xB0(%rbp),%r13
	cmpq %r13,%r14
	jnb L_249979
L_249984:
	movq 0xB8(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_249979
L_249986:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_249939
L_249987:
	movl %r15d,0xC8(%rbp)
	movl $0x0,0xCC(%rbp)
	movb $0x1,0xD0(%rbp)
	movq %r11,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_249988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_32
.p2align 0x4
L_482429:
L_250115:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482431:
L_249991:
	movq 0xA8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_482463
L_249992:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250091
L_249993:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_249994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249994
.p2align 0x4
.long 0x3DD8
L_249994:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x80(%rbp)
L_249995:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2879:
	cmpq 0xA8(%rbp),%r15
	jnl L_482433
L_250093:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0xB0(%rbp),%r13
	jnb L_249979
L_250095:
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2879
.p2align 0x4
L_482433:
L_249996:
	movq 0x80(%rbp),%r14
	movq $0xAF5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	movq %r14,0xA8(%rbp)
	cmpq %r15,%r14
	jne L_249962
L_249998:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2880:
	cmpl %ecx,%ebx
	je L_482449
L_249999:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_249979
L_250001:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_250002
L_250057:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r14d,%ebx
	jne L_482435
L_250059:
	incl %ebx
	jo L_249939
L_250060:
	jmp loop_2880
.p2align 0x4
L_482435:
L_250002:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_249962
L_250004:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2881:
	cmpl %ecx,%ebx
	je L_482444
L_250005:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_249979
L_250007:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,0x0(%r11)
	jne L_482437
L_250050:
	incl %ebx
	jo L_249939
L_250051:
	jmp loop_2881
.p2align 0x4
L_482437:
L_250008:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_249962
L_250010:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2882:
	cmpl %ebx,%ecx
	je L_482441
L_250011:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_249979
L_250013:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,0x0(%r11)
	je L_482439
L_250014:
	incl %ebx
	jo L_249939
L_250015:
	jmp loop_2882
.p2align 0x4
L_482439:
L_250016:
	movq (globalObjptr+0xDD68)(%rip),%r15
	movq %r15,0x88(%rbp)
L_250017:
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_250018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482441:
L_250049:
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_250017
.p2align 0x4
L_482444:
L_250052:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250054
L_250055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_250056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250056
.p2align 0x4
.long 0xE5B
L_250056:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_250054:
	movq $0x1,%r15
	jmp L_249957
.p2align 0x4
L_482449:
L_250061:
	movq 0xA8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_482460
L_250062:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250091
L_250063:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_250064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250064
.p2align 0x4
.long 0x3DDF
L_250064:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xA0(%rbp)
L_250065:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2883:
	cmpq 0xA8(%rbp),%r15
	jnl L_482450
L_250089:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2883
.p2align 0x4
L_482450:
L_250066:
	movq 0xA0(%rbp),%r14
	movq $0xC4D,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_249962
L_250068:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2884:
	cmpl %ecx,%ebx
	je L_482456
L_250069:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_249979
L_250071:
	movq 0xA0(%rbp),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482452
L_250083:
	incl %ebx
	jo L_249939
L_250084:
	jmp loop_2884
.p2align 0x4
L_482452:
L_250072:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250073
L_250081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_250082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250082
.p2align 0x4
.long 0x3DE1
L_250082:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_250073:
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_249962
L_250075:
	movl %r13d,0xA8(%rbp)
	movq $0x380F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_250076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482456:
L_250085:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250054
L_250087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_250088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250088
.p2align 0x4
.long 0xE5B
L_250088:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_250054
.p2align 0x4
L_482460:
L_250092:
	movq (globalObjptr+0x4D08)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_250065
.p2align 0x4
L_482463:
L_250097:
	movq (globalObjptr+0x1018)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_249995
.p2align 0x4
L_482468:
L_250147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_250148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250148
.p2align 0x4
.long 0x3DE6
L_250148:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_250144
.p2align 0x4
L_482470:
L_250150:
	movq (globalObjptr+0x16D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_250143
.p2align 0x4
L_482472:
L_250151:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xA8,%rbp
	leaq (L_250152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_125
.p2align 0x4
L_482474:
L_250154:
	movq (globalObjptr+0x4D00)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_250136
.p2align 0x4
L_482476:
L_249960:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x80(%rbp)
	jne L_249962
L_249963:
	testq %rdx,%rdx
	jz L_482479
L_249964:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250091
L_249965:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249966
.p2align 0x4
.long 0x1239
L_249966:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
L_249967:
	movq $0x0,0x98(%rbp)
loop_2876:
	movq 0x88(%rbp),%r14
	cmpq %r14,0x98(%rbp)
	jl L_482477
L_249968:
	movq 0x90(%rbp),%r14
	movq $0xAF5,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x80(%rbp)
	movq 0x48(%rbp),%r15
	jmp x_855
.p2align 0x4
L_482477:
L_250123:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0xB0,%rbp
	leaq (L_250124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_125
.p2align 0x4
L_482479:
L_250129:
	movq (globalObjptr+0x4CF8)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_249967
.p2align 0x4
L_482481:
L_249958:
	movq 0x40(%rbp),%r15
	jmp L_249957
.p2align 0x4
L_482482:
L_250345:
	shrq $0x1,%r13
	movb %r13b,%r15b
	movb %r15b,0x40(%rbp)
	cmpb $0x1,%r15b
	je L_482489
	cmpb $0x2,%r15b
	je L_482488
	cmpb $0x3,%r15b
	je L_482483
L_250346:
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultWord_0
.p2align 0x4
L_482483:
L_250423:
	movq 0x38(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	cmpq (globalObjptr+0xCA68)(%rip),%r15
	je L_482487
L_250424:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq $0x5,%r13
	jne L_250426
L_250427:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_198:
	cmpq %r13,%r11
	je L_482485
L_250428:
	movq (globalObjptr+0xCA68)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_482484
L_250430:
	incq %r11
	jmp vectorEqualLoop_198
.p2align 0x4
L_482484:
L_250426:
	movq (globalObjptr+0x18C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482485:
	movq %r14,%r15
L_250432:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_250433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482487:
	movq %r14,%r15
	jmp L_250432
.p2align 0x4
L_482488:
L_250420:
	movq 0x18(%rbp),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultInt_0
.p2align 0x4
L_482489:
L_250398:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq (globalObjptr+0xCA98)(%rip),%r8
	je L_482495
L_250399:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq $0x6,%r13
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_247
L_250413:
	xorq %r11,%r11
	movq %r8,%r15
.p2align 0x4,,0x7
vectorEqualLoop_197:
	cmpq %r11,%r13
	je L_482494
L_250414:
	movq (globalObjptr+0xCA98)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne vectorEqual_246
L_250416:
	incq %r11
	jmp vectorEqualLoop_197
.p2align 0x4
vectorEqual_246:
vectorEqual_75:
	cmpq (globalObjptr+0xD6E8)(%rip),%r15
	je L_250409
L_250401:
	testl %ecx,%ecx
	jz L_250403
L_250404:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_196:
	cmpq %r11,%r13
	je L_482491
L_250405:
	movq (globalObjptr+0xD6E8)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_482490
L_250407:
	incq %r11
	jmp vectorEqualLoop_196
.p2align 0x4
L_482490:
L_250403:
	movq (globalObjptr+0x1AD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482491:
L_250409:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_250410:
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_250411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482494:
	movq %r14,%r15
L_250418:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_250410
.p2align 0x4
vectorEqual_247:
	movq %r8,%r15
	jmp vectorEqual_75
.p2align 0x4
L_482495:
	movq %r14,%r15
	jmp L_250418
.p2align 0x4
.long 0x3DF0
L_250295:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250296
L_250339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_250340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250340
.p2align 0x4
.long 0x36AB
L_250340:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_250296:
	movq 0x80(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_482506
	cmpb $0x2,%r14b
	je L_250054
L_250297:
	movq 0x98(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x80(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_249962
L_250299:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2891:
	cmpl 0x80(%rbp),%ecx
	je L_482502
L_250300:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_249979
L_250302:
	movq 0x98(%rbp),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482499
L_250312:
	incl %ecx
	jo L_249939
L_250313:
	jmp loop_2891
.p2align 0x4
L_482499:
L_250303:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250304
L_250310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_250311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250311
.p2align 0x4
.long 0x3DF2
L_250311:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_250304:
	movq $0x3825,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_250305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482502:
L_250314:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250054
L_250316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_250317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250317
.p2align 0x4
.long 0xE5B
L_250317:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_250054
.p2align 0x4
L_482506:
L_250318:
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_249962
L_250320:
	movl %r9d,0xA0(%rbp)
	movq $0x3825,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x60(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r10,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_250321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x3DF5
L_250342:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_2890
.p2align 0x4
.long 0x11F2
L_250240:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250241
L_250284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_250285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250285
.p2align 0x4
.long 0x2291
L_250285:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_250241:
	movq $0x103F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_482509
L_250242:
	movq %r14,0x90(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x88(%rbp)
	jmp L_250239
.p2align 0x4
L_482509:
L_250243:
	movq %r14,0x50(%rbp)
	jmp L_250244
.p2align 0x4
.long 0x3DEE
L_250245:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_249931
L_250246:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_482511
L_250247:
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_482511:
L_250283:
	movq (globalObjptr+0x1BC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x11F2
L_250158:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250159
L_250234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_250235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250235
.p2align 0x4
.long 0x2291
L_250235:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_250159:
	movq $0x103F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_482513
L_250160:
	movq %r14,0x90(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x88(%rbp)
	jmp L_250157
.p2align 0x4
L_482513:
L_250161:
	movq %r14,0x50(%rbp)
	jmp L_250162
.p2align 0x4
.long 0x3DE8
L_250163:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_482540
L_250164:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_250165:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482539
.p2align 0x4,,0x7
L_250166:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x103F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq $0x283B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_482515
L_250167:
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_250165
.p2align 0x4
L_482515:
L_250168:
	xchgq %r14,%r15
L_250169:
	cmpq $0x1,%r15
	je L_482538
L_250170:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250171:
	incl %ecx
	jo L_249939
L_250172:
	cmpq $0x1,%r15
	je L_482516
L_250173:
	movq 0x8(%r15),%r15
	jmp L_250171
.p2align 0x4
L_482516:
L_250174:
	movq %r14,0x50(%rbp)
L_250175:
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_250091
L_250176:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_250177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250177
.p2align 0x4
.long 0x3DE9
L_250177:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x60(%rbp)
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2887:
	cmpq 0x58(%rbp),%r15
	jnl L_482518
L_250226:
	cmpq $0x1,%r14
	je L_482517
L_250227:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2887
.p2align 0x4
L_482517:
L_250228:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482518:
L_250178:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250179
L_250224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_250225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250225
.p2align 0x4
.long 0x3DED
L_250225:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_250179:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x50(%rbp)
	movslq %r14d,%r13
	movq %r13,0x80(%rbp)
	cmpq %r13,%r15
	jne L_249962
L_250181:
	testl %r14d,%r14d
	jz L_482529
L_250182:
	movq $0x181B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_249979
L_250184:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_250115
L_250185:
	movq %r15,0x90(%rbp)
	movl $0x0,0x54(%rbp)
	movl $0x0,0x98(%rbp)
.p2align 0x4,,0x7
loop_2888:
	movl 0x98(%rbp),%ecx
	cmpl 0x50(%rbp),%ecx
	jnl L_482523
L_250208:
	movslq %ecx,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x90(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_482520
L_250209:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482519
L_250216:
	movq %r13,%r15
.p2align 0x4,,0x7
L_250214:
	movq %r15,0x90(%rbp)
	movl %ecx,0x54(%rbp)
	incl 0x98(%rbp)
	jmp loop_2888
.p2align 0x4
L_482519:
L_250210:
	movq %r10,0xB0(%rbp)
	movq %r14,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_250211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482520:
L_250217:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482522
L_250219:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_482521
L_250220:
	movq 0x90(%rbp),%r15
	movl 0x54(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_250214
.p2align 0x4
L_482521:
.p2align 0x4,,0x7
L_250213:
	movq 0xA0(%rbp),%r15
	movl 0x98(%rbp),%ecx
	jmp L_250214
.p2align 0x4
L_482522:
L_250218:
	movq 0x90(%rbp),%r15
	movl 0x54(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_250214
.p2align 0x4
L_482523:
L_250186:
	movl 0x50(%rbp),%r15d
	decl %r15d
	movslq 0x54(%rbp),%r14
	movq 0x58(%rbp),%r13
	cmpq %r13,%r14
	jnb L_249979
L_250188:
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_249979
L_250190:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_249939
L_250191:
	movl %r15d,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movb $0x0,0x98(%rbp)
	movq %r11,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x90,%rbp
	leaq (L_250192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_32
.p2align 0x4
L_482529:
L_250195:
	movq 0x80(%rbp),%rdx
	testq %rdx,%rdx
	jz L_482533
L_250196:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250091
L_250197:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_250198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250198
.p2align 0x4
.long 0x3DEB
L_250198:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,%r15
L_250199:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2889:
	cmpq 0x80(%rbp),%r14
	jnl L_482531
L_250201:
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq 0x58(%rbp),%r11
	jnb L_249979
L_250203:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13,%r11,8),%r10
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2889
.p2align 0x4
L_482531:
L_250200:
	movq $0xAF5,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	jmp x_855
.p2align 0x4
L_482533:
L_250205:
	movq (globalObjptr+0x1018)(%rip),%r15
	jmp L_250199
.p2align 0x4
L_482538:
L_250230:
	movq %r15,0x50(%rbp)
	xorl %ecx,%ecx
	jmp L_250175
.p2align 0x4
L_482539:
L_250231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_250232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250232
.p2align 0x4
.long 0x259E
L_250232:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_250166
.p2align 0x4
L_482540:
L_250233:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_250169
.p2align 0x4
.long 0x3DE2
L_250103:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r14d
	movl %r14d,0xD4(%rbp)
	testl %r14d,%r14d
	jz L_250105
L_250107:
	movq 0xC8(%rbp),%r15
	movl 0x84(%rbp),%ecx
	jmp L_250106
.p2align 0x4
.long 0x3DD7
L_249988:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249989
L_250098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_250099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250099
.p2align 0x4
.long 0x3DD8
L_250099:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_249989:
	movq $0x3D0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0xC8(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movl $0x1,0xD4(%rbp)
	addq $0xC8,%rbp
	leaq (L_249990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3DD9
L_250018:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250019
L_250047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_250048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250048
.p2align 0x4
.long 0x3DDE
L_250048:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_250019:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_249962
L_250021:
	movl %r13d,0xA8(%rbp)
	movq $0x3C8D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_250022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3DDA
L_250076:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3DE7
L_250152:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x98(%rbp)
	jmp loop_2885
.p2align 0x4
.long 0x3DE3
L_250124:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250125
L_250126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_250127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250127
.p2align 0x4
.long 0x3DE4
L_250127:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_250125:
	movq $0x103F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x98(%rbp)
	jmp loop_2876
.p2align 0x4
.long 0x3DF6
L_250347:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_250348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3DF7
L_250433:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_250349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3DF6
L_250421:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_250422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3DF7
L_250411:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_250349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3DF1
L_250305:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3DF1
L_250321:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3DEF
L_250248:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_249931
L_250249:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_482558
L_250250:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_250251:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482557
.p2align 0x4,,0x7
L_250252:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_250261
L_250253:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_250254:
	movq 0x8(%r15),%r13
	movq 0x60(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_482553
L_250255:
L_250256:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_250257
L_250269:
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r15)
	je L_482550
L_250257:
	cmpq $0x1,%r14
	je L_482546
L_250258:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250254
.p2align 0x4
L_482546:
L_250259:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482549
.p2align 0x4,,0x7
L_250261:
	movq $0x103F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_482547
L_250262:
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_250251
.p2align 0x4
L_482547:
L_250263:
	xchgq %r14,%r15
L_250264:
	cmpq $0x1,%r15
	je L_482548
L_250265:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_250171
.p2align 0x4
L_482548:
L_250266:
	movq %r15,0x50(%rbp)
	xorl %ecx,%ecx
	jmp L_250175
.p2align 0x4
L_482549:
L_250267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_250268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250268
.p2align 0x4
.long 0xB9B
L_250268:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_250261
.p2align 0x4
L_482550:
L_250272:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_482551
L_250273:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_250251
.p2align 0x4
L_482551:
L_250274:
	movq 0x80(%rbp),%r14
	xchgq %r14,%r15
	jmp L_250264
.p2align 0x4
L_482553:
L_250275:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_250257
L_250276:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r11d,%r15d
	je L_250272
	jmp L_250257
.p2align 0x4
L_482557:
L_250280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_250281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250281
.p2align 0x4
.long 0xB9B
L_250281:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_250252
.p2align 0x4
L_482558:
L_250282:
	movq 0x50(%rbp),%r15
	jmp L_250264
.p2align 0x4
.long 0x3DEC
L_250211:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x9C(%rbp)
	testl %r14d,%r14d
	jz L_250213
L_250215:
	movq 0x90(%rbp),%r15
	movl 0x54(%rbp),%ecx
	jmp L_250214
.p2align 0x4
.long 0x3DEA
L_250192:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250193
L_250206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_250207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250207
.p2align 0x4
.long 0x3DEB
L_250207:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_250193:
	movq $0x3D0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x90(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movl $0x1,0x9C(%rbp)
	addq $0x90,%rbp
	leaq (L_250194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3DD7
L_249990:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_249991
.p2align 0x4
.long 0x3DDA
L_250022:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_250023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x11D1
L_250077:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250078
L_250079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_250080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250080
.p2align 0x4
.long 0x3DE0
L_250080:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_250078:
	movq 0x80(%rbp),%r15
	jmp L_249957
.p2align 0x4
.long 0x3DF7
L_250348:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_250349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3DF8
L_250349:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0xA,0x88(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_250350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3DF7
L_250422:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_250349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x11D1
L_250306:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250307
L_250308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_250309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250309
.p2align 0x4
.long 0x3DE0
L_250309:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_250307:
	movq 0x80(%rbp),%r15
	jmp L_249957
.p2align 0x4
.long 0x11D1
L_250322:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_250323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DEA
L_250194:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_250195
.p2align 0x4
.long 0x3DDA
L_250023:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_250024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3DF9
L_250350:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x40(%rbp),%r15b
	movb %r15b,0x88(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_250351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x3DF3
L_250323:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_250324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DDA
L_250024:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250025
L_250045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_250046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250046
.p2align 0x4
.long 0x3DDD
L_250046:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_250025:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482565
L_250026:
	decl %ecx
	jo L_249939
L_250027:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
L_250028:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_250029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482565:
L_250044:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250028
.p2align 0x4
.long 0x3DFA
L_250351:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xF18)(%rip),%r14
	movq $0xC4D,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_250352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
.long 0x3DF4
L_250324:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250325
L_250336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_250337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250337
.p2align 0x4
.long 0x159A
L_250337:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_250325:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250326:
	addl 0x0(%r15),%ecx
	movl %ecx,0x80(%rbp)
	jo L_249939
L_250327:
	cmpq $0x1,%r14
	je L_482567
L_250328:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250326
.p2align 0x4
L_482567:
L_250329:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250330
L_250334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_250335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250335
.p2align 0x4
.long 0x3DDC
L_250335:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_250330:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482568
L_250331:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_250332:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_249957
.p2align 0x4
L_482568:
L_250333:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250332
.p2align 0x4
.long 0x3DDB
L_250029:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250030
L_250042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_250043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250043
.p2align 0x4
.long 0x159A
L_250043:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_250030:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250031:
	addl 0x0(%r15),%ecx
	movl %ecx,0x80(%rbp)
	jo L_249939
L_250032:
	cmpq $0x1,%r14
	je L_482572
L_250033:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250031
.p2align 0x4
L_482572:
L_250034:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250035
L_250040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_250041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250041
.p2align 0x4
.long 0x3DDC
L_250041:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_250035:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482573
L_250036:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_250037:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_249957
.p2align 0x4
L_482573:
L_250039:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250037
.p2align 0x4
.long 0x3DFB
L_250352:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250353
L_250396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_250397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250397
.p2align 0x4
.long 0x3DFE
L_250397:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_250353:
	movq 0x88(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_482585
	cmpb $0x2,%r14b
	je L_250054
L_250354:
	movq (globalObjptr+0xF18)(%rip),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x88(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_249962
L_250356:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2892:
	cmpl 0x88(%rbp),%ecx
	je L_482581
L_250357:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_249979
L_250359:
	movq (globalObjptr+0xF18)(%rip),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482578
L_250369:
	incl %ecx
	jo L_249939
L_250370:
	jmp loop_2892
.p2align 0x4
L_482578:
L_250360:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250361
L_250367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_250368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250368
.p2align 0x4
.long 0x3DFD
L_250368:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_250361:
	movq $0x3825,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF18)(%rip),%r14
	movq %r14,0x10(%r15)
	movl 0x88(%rbp),%r14d
	movl %r14d,0x90(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482581:
L_250371:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250054
L_250373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_250374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250374
.p2align 0x4
.long 0xE5B
L_250374:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_250054
.p2align 0x4
L_482585:
L_250375:
	movq (globalObjptr+0xF18)(%rip),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_249962
L_250377:
	movl %r9d,0x90(%rbp)
	movq $0x3825,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x80(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r10,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_250378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x3DFC
L_250362:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_250363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3DFC
L_250378:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_250379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x11D1
L_250363:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250364
L_250365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_250366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250366
.p2align 0x4
.long 0x3DE0
L_250366:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_250364:
	movq 0x80(%rbp),%r15
	jmp L_249957
.p2align 0x4
.long 0x11D1
L_250379:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_250380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DF3
L_250380:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_250381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DF4
L_250381:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250382
L_250393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_250394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250394
.p2align 0x4
.long 0x159A
L_250394:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_250382:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250383:
	addl 0x0(%r15),%ecx
	movl %ecx,0x80(%rbp)
	jo L_249939
L_250384:
	cmpq $0x1,%r14
	je L_482589
L_250385:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250383
.p2align 0x4
L_482589:
L_250386:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250387
L_250391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_250392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250392
.p2align 0x4
.long 0x3DDC
L_250392:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_250387:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482590
L_250388:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_250389:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_249957
.p2align 0x4
L_482590:
L_250390:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250389
.text
.p2align 0x4
.globl qsort_32
.hidden qsort_32
qsort_32:
L_250452:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2893
L_250542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_250543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250543
.p2align 0x4
.long 0x2C
L_250543:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_2893:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_250454
L_250455:
	cmpl $0x14,%r15d
	jng L_482595
L_250457:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_482594
L_250458:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_250459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_482594:
L_250454:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482595:
L_250456:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60A
L_250459:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_250460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x491
L_250460:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_250454
L_250461:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_250463
L_250464:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_250463
L_250466:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_250463
L_250468:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_250463
L_250470:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_250463
L_250472:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_250454
L_250473:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_2895:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_250454
L_250474:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_250463
L_250476:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_482620
L_250477:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_482598
L_250478:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_482597
L_250527:
	jmp loop_2895
.p2align 0x4
L_482597:
L_250479:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_250480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482598:
L_250528:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_482619
L_250530:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl L_482618
.p2align 0x4,,0x7
L_250484:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_2896:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_250454
L_250485:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_250463
L_250487:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_482611
L_250488:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_482600
L_250489:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_482599
L_250512:
	jmp loop_2896
.p2align 0x4
L_482599:
L_250490:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_250491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482600:
L_250513:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_250495
L_250515:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_482609
.p2align 0x4,,0x7
L_250495:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_482605
L_250496:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_250463
L_250498:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_250463
L_250500:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_250463
L_250502:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_482601
L_250504:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2895
.p2align 0x4
L_482601:
L_250463:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482605:
L_250505:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_250463
L_250507:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_250463
L_250509:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_250454
L_250510:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_250511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_32
.p2align 0x4
L_482609:
.p2align 0x4,,0x7
L_250493:
	movl 0xC(%rbp),%ecx
	jmp loop_2896
.p2align 0x4
L_482611:
L_250518:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_482613
L_250519:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_482612
L_250521:
	jmp loop_2896
.p2align 0x4
L_482612:
L_250520:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_250491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482613:
L_250522:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_250495
L_250524:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jnl L_250495
L_250526:
	jmp loop_2896
.p2align 0x4
L_482618:
.p2align 0x4,,0x7
L_250482:
	movl 0x58(%rbp),%ecx
	jmp loop_2895
.p2align 0x4
L_482619:
L_250529:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_2896
.p2align 0x4
L_482620:
L_250533:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_482622
L_250534:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_482621
L_250536:
	jmp loop_2895
.p2align 0x4
L_482621:
L_250535:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_250480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482622:
L_250537:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_482624
L_250539:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl loop_2895
L_250540:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_2896
.p2align 0x4
L_482624:
L_250538:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_2896
.p2align 0x4
.long 0x60B
L_250480:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_250484
	jmp L_250482
.p2align 0x4
.long 0x60C
L_250491:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_250495
	jmp L_250493
.p2align 0x4
.long 0x60D
L_250511:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2893
.text
.p2align 0x4
.globl allNone_1
.hidden allNone_1
allNone_1:
L_250544:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_250545
L_250576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_250577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250577
.p2align 0x4
.long 0x452
L_250577:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_250545:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_250547
L_250548:
	cmpl $0x0,%r13d
	jl L_250572
L_250549:
	movl $0x0,0x1C(%rbp)
loop_2897:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_482639
L_250550:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482638
L_250552:
	cmpl $0x0,%r13d
	jl L_482637
L_250553:
	movl $0x0,0x14(%rbp)
loop_2898:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_482636
L_250554:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482636:
L_250555:
	movslq 0x14(%rbp),%r15
	salq $0x4,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x18(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_250556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_482637:
L_250572:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482638:
L_250547:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482639:
L_250573:
	movslq 0x1C(%rbp),%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_250574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allNone_1
.p2align 0x4
.long 0x4E1
L_250556:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	movq %r15,0x20(%rbp)
	shrq $0x1,%r13
	cmpq $0x1458,%r13
	jne L_482643
L_250558:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_250559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_482643:
L_250557:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_250574:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_2897
.p2align 0x4
.long 0xB28
L_250559:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250560
L_250569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_250570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250570
.p2align 0x4
.long 0x523
L_250570:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_250560:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1458,%r15
	jne L_250557
L_250561:
	movq 0x8(%r14),%r15
	movq 0x20(%r15),%r13
	movq 0x0(%r13),%r15
L_250562:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_250563
L_250564:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD5C,%r14
	jne L_482645
L_250565:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_482644
L_250568:
	movq $0x20BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1AB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	incl 0x14(%rbp)
	jmp loop_2898
.p2align 0x4
L_482644:
L_250566:
L_250567:
	movq (globalObjptr+0x4D68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482645:
L_250563:
	movq (globalObjptr+0x4D38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl cut_0
.hidden cut_0
cut_0:
L_250578:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0xD0(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_251645
L_250579:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482662
L_250580:
	movq 0x10(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_482661
L_250582:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482660
L_250583:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_250585:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_250586
L_251637:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD62,%r13
	jne L_250586
L_251638:
	movq 0x8(%r14),%r13
	movq 0xC0(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_482655
L_250586:
	incl %ecx
	movl %ecx,0xE0(%rbp)
	jo L_482654
L_250588:
	cmpq $0x1,%r15
	je L_482649
L_250589:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_250585
.p2align 0x4
L_482649:
L_250590:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250591
L_251635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_251636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251636
.p2align 0x4
.long 0x3EA6
L_251636:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_250591:
	movl 0xE0(%rbp),%ecx
L_250592:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482652
L_250594:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_250596
L_251634:
	movl %ecx,0x0(%r15)
L_250596:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1359,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1AC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xC0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r14)
	movq %r15,0xD8(%rbp)
L_250597:
	movq 0xD8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482650
L_250598:
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE8(%rbp)
L_250599:
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_250600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_482650:
L_250605:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xE0(%rbp)
	cmpq $0x1,%r14
	je really_1
L_250606:
	movq 0x8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_250607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
really_1:
really_0:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_250611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_482652:
L_250593:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482654:
L_250587:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482655:
L_251640:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_250593
L_251641:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_482656
L_251643:
	movl %ecx,0x0(%r15)
	movq %r13,0xD8(%rbp)
	jmp L_250597
.p2align 0x4
L_482656:
L_251642:
	movq %r13,0xD8(%rbp)
	jmp L_250597
.p2align 0x4
L_482660:
L_251644:
	xorl %ecx,%ecx
	jmp L_250592
.p2align 0x4
L_482661:
L_250581:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482662:
L_251645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_251646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251646
.p2align 0x4
.long 0x3EA7
L_251646:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_250580
.p2align 0x4
.long 0x3DFF
L_250600:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_250601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3E01
L_250607:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_250608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3E03
L_250611:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_482694
L_250613:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r11
	movl %r15d,0x110(%rbp)
	cmpq %r14,%r11
	movq %r14,0x108(%rbp)
	jne L_250615
L_250616:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x118(%rbp)
	cmpq %rdx,%r15
	jne L_250615
L_250618:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251156
L_250619:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x29,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_250620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250620
.p2align 0x4
.long 0x3E04
L_250620:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x120(%rbp)
	movl $0x0,0x114(%rbp)
	movq $0x0,0x128(%rbp)
loop_2899:
	movq 0x118(%rbp),%r15
	cmpq %r15,0x128(%rbp)
	jl L_482684
L_250621:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	movl %r15d,0xB8(%rbp)
	cmpq %r13,%r14
	movq %r14,0x98(%rbp)
	jne L_250615
L_250623:
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xC0(%rbp)
	cmpq %rdx,%r14
	jne L_250615
L_250625:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251156
L_250626:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250627
.p2align 0x4
.long 0x3E05
L_250627:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq %rax,0xF0(%rbp)
	movl $0x0,0xBC(%rbp)
	movq $0x0,0x100(%rbp)
loop_2900:
	movq 0xC0(%rbp),%r15
	cmpq %r15,0x100(%rbp)
	jl L_482675
L_250628:
	movq 0xE0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	movl %r15d,0x88(%rbp)
	cmpq %r13,%r14
	movq %r14,0x80(%rbp)
	jne L_250615
L_250630:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r14,%r11
	jne L_482673
L_250632:
	cmpq $0x7FFFFFFF,%r11
	ja L_482672
L_250633:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250634
L_251153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251154
.p2align 0x4
.long 0x3E06
L_251154:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_250634:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CF,%rcx
	movq 0x98(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250635
.p2align 0x4
.long 0x3E06
L_250635:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq %rax,0xB8(%rbp)
	movl $0x0,0x8C(%rbp)
	movq $0x0,0xC0(%rbp)
loop_2901:
	movq 0x98(%rbp),%r14
	cmpq %r14,0xC0(%rbp)
	jl L_482664
L_250636:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x30,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xF0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x120(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x20(%r14)
	movq %r14,%r15
L_250637:
	movq $0x1125,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xD8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x268D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482664:
L_250638:
	movq 0xC0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0xE8(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0xF8(%rbp)
	movl 0x8C(%rbp),%r15d
	movl %r15d,0x100(%rbp)
.p2align 0x4,,0x7
loop_2902:
	movl 0x100(%rbp),%r15d
	cmpl 0x88(%rbp),%r15d
	je L_482670
L_250639:
	movslq %r15d,%r14
	cmpq 0x80(%rbp),%r14
	jnb L_482669
L_250642:
	movq 0xE0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x108(%rbp)
	movl 0x0(%r11),%r10d
	movl %r10d,0x104(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x110(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x118(%rbp)
	movq 0xF8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x8(%r10),%r14
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r14)
	je L_482666
L_250643:
	incl %r15d
	jo L_250587
L_250644:
	movl %r15d,0x100(%rbp)
	jmp loop_2902
.p2align 0x4
L_482666:
L_250645:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250646
L_251056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_251057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251057
.p2align 0x4
.long 0x3E40
L_251057:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_250646:
	movl 0x100(%rbp),%r15d
	incl %r15d
	movl %r15d,0x8C(%rbp)
	jo L_250587
L_250647:
	movq 0x110(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0xE8(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x100(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x160(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x150(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x9D3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r14,0x10(%r9)
	addq $0x30,%r12
	movq %r10,0x18(%r9)
	movq %r15,0x20(%r9)
	movq %r9,0x168(%rbp)
	leaq L_251040(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x160,%rbp
	leaq (L_250648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3798
.p2align 0x4
L_482669:
L_250641:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482670:
L_251058:
	movq 0xD0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4DE8)(%rip),%r14
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482672:
L_251156:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482673:
L_250615:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482675:
L_251157:
	movq 0x100(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xF8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x108(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x110(%rbp)
	movl 0xBC(%rbp),%ecx
.p2align 0x4,,0x7
loop_2905:
	cmpl %ecx,0xB8(%rbp)
	je L_482680
L_251158:
	movslq %ecx,%r15
	cmpq 0x98(%rbp),%r15
	jnb L_250641
L_251160:
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x118(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x128(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x130(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x138(%rbp)
	movq 0x8(%r11),%r15
	movq 0x110(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r10
	cmpq %r10,0x8(%r15)
	je L_482677
L_251161:
	incl %ecx
	jo L_250587
L_251162:
	jmp loop_2905
.p2align 0x4
L_482677:
L_251163:
	incl %ecx
	movl %ecx,0xBC(%rbp)
	jo L_250587
L_251164:
	movq 0x80(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_251165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeStrToEnv_0
.p2align 0x4
L_482680:
L_251492:
	movq (globalObjptr+0x1730)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482684:
L_251555:
	movq 0x128(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x100(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x130(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x138(%rbp)
	movl 0x114(%rbp),%r15d
	movl %r15d,0x140(%rbp)
.p2align 0x4,,0x7
loop_2916:
	movl 0x140(%rbp),%r15d
	cmpl 0x110(%rbp),%r15d
	je L_482690
L_251556:
	movslq %r15d,%r14
	cmpq 0x108(%rbp),%r14
	jnb L_250641
L_251558:
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x148(%rbp)
	movl 0x0(%r11),%r10d
	movl %r10d,0x144(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x150(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x158(%rbp)
	movq 0x8(%r10),%r14
	movq 0x138(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r9
	cmpq %r9,0x8(%r14)
	je L_482686
L_251559:
	incl %r15d
	jo L_250587
L_251560:
	movl %r15d,0x140(%rbp)
	jmp loop_2916
.p2align 0x4
L_482686:
L_251561:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251562
L_251569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251570
.p2align 0x4
.long 0x3E97
L_251570:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_251562:
	movl 0x140(%rbp),%r15d
	incl %r15d
	movl %r15d,0x114(%rbp)
	jo L_250587
L_251563:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x208(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x218(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x168,%rbp
	leaq (L_251564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cut_0
.p2align 0x4
L_482690:
L_251571:
	movq (globalObjptr+0x1798)(%rip),%r14
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_251572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482694:
L_250612:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E00
L_250601:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq 0xF8(%rbp),%r15
	je L_482696
L_250602:
	movq 0xE0(%rbp),%r15
	cmpq $0x1,%r15
	je L_250605
L_250603:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xE0(%rbp)
	movq %r14,0xE8(%rbp)
	jmp L_250599
.p2align 0x4
L_482696:
L_251632:
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E02
L_250608:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250609
L_251629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_251630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251630
.p2align 0x4
.long 0x3EA5
L_251630:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_250609:
	movq 0xE8(%rbp),%r14
	cmpq %r14,0xE0(%rbp)
	jne really_0
L_251628:
	movq 0x10(%rbp),%r15
	jmp L_250637
.p2align 0x4
.long 0x3E07
L_250648:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250649
L_251038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_251039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251039
.p2align 0x4
.long 0x3E3E
L_251039:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_250649:
	movq 0x140(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482718
L_250651:
	testl %r13d,%r13d
	jz L_482717
L_250652:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0xE8(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
L_250654:
	movq 0x130(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_482716
L_250658:
	movq %r15,0x110(%rbp)
	movq %r14,0xE8(%rbp)
L_250660:
	movq 0x110(%rbp),%r15
	andq $0x3,%r15
	jz L_482698
L_250661:
	movq $0x1,%r15
	movq 0x138(%rbp),%r14
L_250656:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl 0x8C(%rbp),%ecx
	movq 0x108(%rbp),%r15
	movl 0x104(%rbp),%ebx
	movq 0x118(%rbp),%r11
	movq %r13,%r14
	movq %r11,%r13
L_250657:
	movl %ecx,0x8C(%rbp)
	movq $0x1111,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ebx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xC0(%rbp),%r14
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xC0(%rbp)
	jmp loop_2901
.p2align 0x4
L_482698:
L_250662:
	movq 0x110(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_482715
L_251030:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23DF,%r15
	je L_482714
L_251036:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_251033:
	movq 0x110(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_482713
L_251035:
	movq %r15,0x140(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x130(%rbp)
L_250664:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x140(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x150(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_250615
L_250666:
	cmpl $0x0,%r13d
	jl L_482711
L_250667:
	movl $0x0,0x154(%rbp)
.p2align 0x4,,0x7
loop_2903:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482710
.p2align 0x4,,0x7
L_250668:
	movl 0x154(%rbp),%r13d
	cmpl 0x150(%rbp),%r13d
	jnl L_482709
L_251004:
	movslq %r13d,%r15
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x158(%rbp)
	movq 0x140(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x160(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_250581
L_251005:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_482707
L_251006:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_251008:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_251009
L_251021:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCF,%r13
	je L_482703
L_251009:
	incl %ecx
	movl %ecx,0x168(%rbp)
	jo L_250587
L_251010:
	cmpq $0x1,%r15
	je L_482699
L_251011:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_251008
.p2align 0x4
L_482699:
L_251012:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482701
.p2align 0x4,,0x7
L_251013:
	movl 0x168(%rbp),%ecx
L_251014:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_250593
L_251015:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl now_3
L_251018:
	movl %ecx,0x0(%r15)
now_3:
	movq 0x158(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x199F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_251017:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x154(%rbp)
	jmp loop_2903
.p2align 0x4
L_482701:
L_251019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251020
.p2align 0x4
.long 0x3E3C
L_251020:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	jmp L_251013
.p2align 0x4
L_482703:
L_251022:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_250593
L_251023:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_251017
L_251025:
	movl %ecx,0x0(%r14)
	jmp L_251017
.p2align 0x4
L_482707:
L_251026:
	xorl %ecx,%ecx
	jmp L_251014
.p2align 0x4
L_482709:
L_250669:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x170(%rbp)
	movq $0x3ED5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x160(%rbp)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_250670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_482710:
L_251027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_251028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251028
.p2align 0x4
.long 0x3E3D
L_251028:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_250668
.p2align 0x4
L_482711:
L_251029:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482713:
L_251034:
	movq %r15,0x140(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x130(%rbp)
	jmp L_250664
.p2align 0x4
L_482714:
L_251031:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x148,%rbp
	leaq (L_251032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_482715:
L_250663:
	movq 0x0(%r14),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x140(%rbp)
	jmp L_250664
.p2align 0x4
L_482716:
L_250655:
	movq $0x1,%r15
	movq 0x138(%rbp),%r14
	jmp L_250656
.p2align 0x4
L_482717:
L_251037:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_250654
.p2align 0x4
L_482718:
L_250650:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E33
L_251040:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251042
L_251054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_251055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251055
.p2align 0x4
.long 0x3E3F
L_251055:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_251042:
	movq 0xE8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_251043
L_251044:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD5E,%r14
	je L_482724
	cmpq $0xD5F,%r14
	je L_482720
L_251043:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482720:
L_251051:
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq %r14,0x150(%rbp)
	je L_482721
L_251052:
	movq 0xD0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482721:
L_251053:
	movq $0x1ABD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r11
	xchgq %r14,%r15
	xchgq %r13,%r14
	xchgq %r11,%r13
L_251046:
	cmpq %r15,0x148(%rbp)
	je L_482722
L_251047:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482722:
L_251049:
	movq 0x130(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_250655
L_251050:
	movq %r13,0x110(%rbp)
	movq %r15,0xE8(%rbp)
	jmp L_250660
.p2align 0x4
L_482724:
L_251045:
	movq 0xE8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	jmp L_251046
.p2align 0x4
.long 0x3E41
L_251059:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E4F
L_251165:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251166
L_251490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_251491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251491
.p2align 0x4
.long 0x3E89
L_251491:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_251166:
	movq 0x108(%rbp),%r14
	cmpq $0x1,%r14
	je L_482732
L_251167:
	movq $0xF11,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x150(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x148(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x140(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x130(%rbp),%r13
	movq %r13,0x18(%r15)
	movq $0xF15,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x58,%r12
	movq 0x180(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x178(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x170(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x168(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x160(%rbp),%r10
	movq %r10,0x20(%r11)
	movq 0x158(%rbp),%r10
	movq %r10,0x28(%r11)
	movq 0x110(%rbp),%r10
	movq %r10,0x30(%r11)
	movq 0x0(%rbp),%r10
	movq %r10,0x38(%r11)
	movq %r15,0x40(%r11)
	movq %r13,0x48(%r11)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x1051,%r10
	je L_482731
	cmpq $0x1052,%r10
	je L_482729
L_251168:
	movq 0x0(%r13),%r10
	movq $0x2A5D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq %r14,0x0(%r9)
	movq %r9,0x140(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r13,%r15
L_251169:
	movq 0x190(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_482728
	cmpq $0x1052,%r14
	je L_482727
L_251170:
	movq %r13,0x1B0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_251171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482727:
L_251483:
	movq %r13,0x1B0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_251484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482728:
L_251449:
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x10(%r11),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x1B8(%rbp)
	movq $0x3ED1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x1A8(%rbp)
	addq $0x10,%r12
	addq $0x1A8,%rbp
	leaq (L_251450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_482729:
L_251486:
	movq 0x0(%r13),%r15
	movq 0x130(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1052,%r9
	jne L_482730
L_251488:
	movq 0x0(%r10),%r9
	movq $0x2A5B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x30(%r10)
	movq %r9,0x38(%r10)
	addq $0x48,%r12
	movq %r11,0x0(%r10)
	movq 0x188(%rbp),%r11
	movq %r11,0x8(%r10)
	movq 0x110(%rbp),%r11
	movq %r11,0x10(%r10)
	movq 0x168(%rbp),%r11
	movq %r11,0x18(%r10)
	movq 0x158(%rbp),%r11
	movq %r11,0x20(%r10)
	movq 0x0(%rbp),%r11
	movq %r11,0x28(%r10)
	movq %r10,0x140(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r13,%r15
	jmp L_251169
.p2align 0x4
L_482730:
L_251487:
	movq $0x2A59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movl $0x1,0x12C(%rbp)
	movq %r13,%r15
	jmp L_251169
.p2align 0x4
L_482731:
L_251485:
	movq 0x0(%r13),%r15
	movq $0x2A57,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq %r14,0x0(%r10)
	movq %r10,0x140(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r13,%r15
	jmp L_251169
.p2align 0x4
L_482732:
L_251489:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x130(%rbp),%r13
	movq 0x138(%rbp),%r11
	xchgq %r11,%r14
L_251176:
	movl %ecx,0xBC(%rbp)
	movq $0x111B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ebx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq 0xF0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x100(%rbp),%r14
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x100(%rbp)
	jmp loop_2900
.p2align 0x4
.long 0x3E8A
L_251493:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E95
L_251564:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251565
L_251567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251568
.p2align 0x4
.long 0x3E96
L_251568:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_251565:
	movl 0x114(%rbp),%ecx
	movq 0x148(%rbp),%r13
	movl 0x144(%rbp),%ebx
	movq 0x130(%rbp),%r14
	movq 0x158(%rbp),%r15
L_251566:
	movl %ecx,0x114(%rbp)
	movq $0x1115,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ebx,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq 0x120(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x128(%rbp),%r14
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x128(%rbp)
	jmp loop_2899
.p2align 0x4
.long 0x3E98
L_251572:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_251573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E08
L_250670:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250671
L_251002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251003
.p2align 0x4
.long 0x3E3B
L_251003:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250671:
	movq $0x3049,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x168(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x168,%rbp
	leaq (L_250672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3E1F
L_251032:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	jmp L_251033
.p2align 0x4
.long 0x3E41
L_251060:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E50
L_251171:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
L_251172:
	movb %dl,0x160(%rbp)
	movq 0x108(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movl 0x12C(%rbp),%r15d
	movl %r15d,0x150(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x150,%rbp
	leaq (L_251173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isPlausible_0
.p2align 0x4
.long 0x3E50
L_251484:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
	jmp L_251172
.p2align 0x4
.long 0x3E50
L_251450:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x150(%rbp)
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_251451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x3E8A
L_251494:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x110(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E98
L_251573:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_251574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E09
L_250672:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250673
L_251000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251001
.p2align 0x4
.long 0x3E3B
L_251001:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250673:
	movq 0x130(%rbp),%r15
	cmpq $0x1,%r15
	je L_482736
L_250674:
	movq 0x8(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x168(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x106E8)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482736:
L_250737:
	movq $0x321F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_250738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMapi_0
.p2align 0x4
.long 0x3E42
L_251061:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251062
L_251151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251152
.p2align 0x4
.long 0x3E49
L_251152:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251062:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_482738
L_251063:
	movq %r15,0x110(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0x0(%r14),%r15
L_251064:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482738:
L_251150:
	movq 0x108(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x108(%rbp)
L_251069:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E51
L_251173:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251174
L_251447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_251448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251448
.p2align 0x4
.long 0x3E87
L_251448:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_251174:
	movl 0x110(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_482740
L_251175:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x108(%rbp),%r13
	movq 0x138(%rbp),%r14
	jmp L_251176
.p2align 0x4
L_482740:
L_251177:
	movq 0x140(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x152C,%r14
	je L_482786
	cmpq $0x152D,%r14
	je L_482748
	cmpq $0x152E,%r14
	je L_482741
L_251178:
	movq 0x10(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	addq $0x148,%rbp
	leaq (L_251179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkScheme_0
.p2align 0x4
L_482741:
L_251411:
	movq 0x10(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482747
L_251413:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movslq %r15d,%r14
	movq %r14,0x140(%rbp)
	testq %r14,%r14
	jz L_482746
L_251414:
	cmpq $0x7FFFFFFF,%r14
	ja L_251156
L_251415:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251416
L_251443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251444
.p2align 0x4
.long 0x3E7C
L_251444:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_251416:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq 0x140(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251417
.p2align 0x4
.long 0x3E7C
L_251417:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0x160(%rbp)
L_251418:
	movq $0x0,0x168(%rbp)
loop_2914:
	movq 0x140(%rbp),%r15
	cmpq %r15,0x168(%rbp)
	jl L_482743
L_251419:
	movq 0x160(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x12C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_250615
L_251421:
	movq $0x3EC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x150(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x170(%rbp)
	movl %r13d,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_251422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482743:
L_251434:
	movq 0x148(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xD330)(%rip),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xD338)(%rip),%r15
	movq %r15,0x190(%rbp)
	addq $0x188,%rbp
	leaq (L_251435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_482746:
L_251446:
	movq (globalObjptr+0x4DD0)(%rip),%r15
	movq %r15,0x160(%rbp)
	jmp L_251418
.p2align 0x4
L_482747:
L_251412:
	movq (globalObjptr+0x4DC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482748:
L_251184:
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x158(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x160(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x168(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r14,0x108(%rbp)
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x178(%rbp)
	movl %r14d,0x12C(%rbp)
	cmpq %r15,%rdx
	movq %r15,0x170(%rbp)
	jne L_250615
L_251186:
	testq %rdx,%rdx
	jz L_482784
L_251187:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251156
L_251188:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_251189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251189
.p2align 0x4
.long 0x3E54
L_251189:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq %rax,0x140(%rbp)
L_251190:
	movl $0x0,0x180(%rbp)
	movq $0x0,0x188(%rbp)
.p2align 0x4,,0x7
loop_2906:
	movq 0x188(%rbp),%r14
	cmpq 0x178(%rbp),%r14
	jnl L_482756
L_251393:
	movl %r14d,%ebx
	movslq %ebx,%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x108(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x190(%rbp)
	salq $0x5,%r15
	movq 0x10(%r13,%r15,1),%r14
	movq %r14,0x198(%rbp)
	movq 0x110(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_250615
L_251395:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2913:
	cmpl %ecx,%ebx
	je L_482753
L_251396:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_250641
L_251398:
	movq %r14,%r13
	salq $0x5,%r13
	movq 0x110(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq %r10,0x1A0(%rbp)
	salq $0x5,%r14
	movq 0x198(%rbp),%r13
	movq 0x8(%r13),%r10
	movq 0x10(%r11,%r14,1),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r10)
	je L_482750
L_251399:
	incl %ebx
	jo L_250587
L_251400:
	jmp loop_2913
.p2align 0x4
L_482750:
L_251401:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251402
L_251405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_251406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251406
.p2align 0x4
.long 0x3E7B
L_251406:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_251402:
	movq $0x2A5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x198(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq (globalObjptr+0x10728)(%rip),%r14
	movq %r14,0x1A8(%rbp)
	movq (globalObjptr+0xA450)(%rip),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x1A0(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x198,%rbp
	leaq (L_251403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equalSchemes_0
.p2align 0x4
L_482753:
L_251407:
	movl 0x180(%rbp),%ecx
	incl %ecx
	jo L_250587
L_251408:
	movq 0x198(%rbp),%r15
.p2align 0x4,,0x7
L_251404:
	movl %ecx,0x180(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x188(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x188(%rbp)
	jmp loop_2906
.p2align 0x4
L_482756:
L_251191:
	movq 0x140(%rbp),%r15
	movq $0x181D,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x180(%rbp),%rdx
	movq %rdx,0x150(%rbp)
	testq %rdx,%rdx
	jz L_482782
L_251192:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251156
L_251193:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_251194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251194
.p2align 0x4
.long 0x3E55
L_251194:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq %rax,0x178(%rbp)
L_251195:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2907:
	cmpq 0x150(%rbp),%r15
	jnl L_482760
.p2align 0x4,,0x7
loop_2912:
	movslq %ecx,%r14
	movq 0x140(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_482758
L_251389:
	incl %ecx
	jo L_250587
L_251390:
	jmp loop_2912
.p2align 0x4
L_482758:
L_251387:
	incl %ecx
	jo L_250587
L_251388:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x178(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2907
.p2align 0x4
L_482760:
L_251196:
	movq 0x178(%rbp),%r15
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x140(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_250615
L_251198:
	testl %r13d,%r13d
	jz L_482761
L_251199:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x188(%rbp)
	addq $0x188,%rbp
	leaq (L_251200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482761:
L_251247:
	movq 0x110(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x140(%rbp)
	cmpq %r14,%rdx
	jne L_250615
L_251249:
	testq %rdx,%rdx
	jz L_482778
L_251250:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251156
L_251251:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_251252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251252
.p2align 0x4
.long 0x3E5F
L_251252:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq %rax,0x150(%rbp)
L_251253:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2908:
	cmpq 0x140(%rbp),%r15
	jnl L_482767
L_251349:
	movl %r15d,%r13d
	movslq %r13d,%r14
	salq $0x5,%r14
	movq 0x110(%rbp),%r13
	movq 0x10(%r13,%r14,1),%r11
	xorl %r13d,%r13d
	movq %r11,%r14
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
loop_2911:
	cmpl 0x12C(%rbp),%ecx
	je L_482765
L_251350:
	movslq %ecx,%r13
	cmpq 0x170(%rbp),%r13
	jnb L_250641
L_251352:
	salq $0x5,%r13
	movq 0x108(%rbp),%r11
	movq 0x10(%r11,%r13,1),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r14),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	je L_482763
L_251353:
	incl %ecx
	jo L_250587
L_251354:
	jmp loop_2911
.p2align 0x4
L_482763:
L_251355:
	movq $0x1,%r14
L_251356:
	movq 0x150(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2908
.p2align 0x4
L_482765:
L_251357:
	movl (localWord32+0x0)(%rip),%r13d
	incl %r13d
	jo L_250587
L_251358:
	movl %r13d,(localWord32+0x0)(%rip)
	jmp L_251356
.p2align 0x4
L_482767:
L_251254:
	movq 0x150(%rbp),%r15
	movq $0x181D,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x108(%rbp)
	testq %rdx,%rdx
	jz L_482776
L_251255:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251156
L_251256:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251257
.p2align 0x4
.long 0x3E60
L_251257:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq %rax,0x110(%rbp)
L_251258:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2909:
	cmpq 0x108(%rbp),%r15
	jnl L_482771
.p2align 0x4,,0x7
loop_2910:
	movslq %ecx,%r14
	movq 0x150(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_482769
L_251345:
	incl %ecx
	jo L_250587
L_251346:
	jmp loop_2910
.p2align 0x4
L_482769:
L_251343:
	incl %ecx
	jo L_250587
L_251344:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x110(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2909
.p2align 0x4
L_482771:
L_251259:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251260
L_251340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251341
.p2align 0x4
.long 0x3E73
L_251341:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251260:
	movq 0x110(%rbp),%r15
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x108(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_250615
L_251262:
	testl %r13d,%r13d
	jz L_482772
L_251263:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_251264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482772:
L_251312:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x168(%rbp),%r13
	movq 0x138(%rbp),%r14
	jmp L_251176
.p2align 0x4
L_482776:
L_251348:
	movq (globalObjptr+0x4E10)(%rip),%r15
	movq %r15,0x110(%rbp)
	jmp L_251258
.p2align 0x4
L_482778:
L_251360:
	movq (globalObjptr+0x4E08)(%rip),%r15
	movq %r15,0x150(%rbp)
	jmp L_251253
.p2align 0x4
L_482782:
L_251392:
	movq (globalObjptr+0x4E00)(%rip),%r15
	movq %r15,0x178(%rbp)
	jmp L_251195
.p2align 0x4
L_482784:
L_251410:
	movq (globalObjptr+0x4DF8)(%rip),%r15
	movq %r15,0x140(%rbp)
	jmp L_251190
.p2align 0x4
L_482786:
L_251183:
	movq 0x0(%r15),%r13
	movl 0xBC(%rbp),%ecx
	movl 0x128(%rbp),%ebx
	movq 0x138(%rbp),%r14
	movq 0x118(%rbp),%r15
	jmp L_251176
.p2align 0x4
.long 0x3E50
L_251451:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r14
	movq %r14,0x148(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_250612
L_251452:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_251460
	cmpq $0x2,%r13
	je L_251458
L_251453:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482791
L_251461:
	movq 0x0(%r13),%r15
L_251462:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E2,%r14
	je L_482790
	cmpq $0x23E3,%r14
	je L_482789
	cmpq $0x23E4,%r14
	je L_482788
L_251463:
	movq 0x10(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	addq $0x1A8,%rbp
	leaq (L_251464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482788:
L_251480:
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (loop_2915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_482789:
L_251479:
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (loop_2915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_482790:
L_251473:
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (loop_2915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_482791:
L_251454:
	movq 0x0(%r13),%r15
x_856:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482793
L_251456:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_482792
L_251458:
	movb $0x1,%dl
	jmp L_251172
.p2align 0x4
L_482792:
L_251460:
	xorb %dl,%dl
	jmp L_251172
.p2align 0x4
L_482793:
L_251455:
	xorb %dl,%dl
	jmp L_251172
.p2align 0x4
.long 0x3E8B
L_251495:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251496
L_251552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_251553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251553
.p2align 0x4
.long 0x3E90
L_251553:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_251496:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_482797
L_251497:
	movq %r15,0x130(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x0(%r14),%r15
L_251498:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_251499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482797:
L_251551:
	movq 0x128(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq $0x1,0x128(%rbp)
L_251503:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_251504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E99
L_251574:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251575
L_251625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_251626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251626
.p2align 0x4
.long 0x3EA4
L_251626:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_251575:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_482799
L_251576:
	movq %r15,0x150(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x0(%r14),%r15
L_251577:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_251578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482799:
L_251624:
	movq 0x148(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq $0x1,0x148(%rbp)
L_251582:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_251583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E0A
L_250675:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250676
L_250997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250998
.p2align 0x4
.long 0x3E38
L_250998:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250676:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250677:
	addl 0x0(%r15),%ecx
	movl %ecx,0x130(%rbp)
	jo L_250587
L_250678:
	cmpq $0x1,%r14
	je L_482801
L_250679:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250677
.p2align 0x4
L_482801:
L_250680:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250681
L_250995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250996
.p2align 0x4
.long 0x3E3A
L_250996:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_250681:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482802
L_250682:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
L_250683:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x168(%rbp)
	addq $0x18,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x106F0)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482802:
L_250994:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250683
.p2align 0x4
.long 0x3E10
L_250738:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x148(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_250615
L_250740:
	testl %r13d,%r13d
	jz L_482810
L_250741:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	cmpq $0x1,%r14
	je L_482809
	cmpq $0x2,%r14
	je L_482808
L_250742:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x206C,%r15
	je L_482807
	cmpq $0x206D,%r15
	je L_482806
L_250743:
	movq 0x8(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x170(%rbp)
	leaq L_250956(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x170,%rbp
	leaq (L_250744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_482806:
L_250958:
	movq 0x8(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x170(%rbp)
	leaq L_250956(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x170,%rbp
	leaq (L_250744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_482807:
L_250957:
	movq 0x18(%r14),%r15
	movq %r15,0x170(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x180(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x188(%rbp)
	leaq L_250956(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x170,%rbp
	leaq (L_250744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1230
.p2align 0x4
L_482808:
L_250960:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482809:
L_250745:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10708)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_250746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482810:
L_250822:
	movq 0x158(%rbp),%r15
	cmpq $0x1,%r15
	je L_482811
L_250823:
	movq 0x20(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x180(%rbp)
	addq $0x160,%rbp
	leaq (L_250824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp args_0
.p2align 0x4
L_482811:
L_250912:
	movq $0x1,0x160(%rbp)
	movl $0x0,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_250824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3E43
L_251065:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251066
L_251148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251149
.p2align 0x4
.long 0x3E4E
L_251149:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251066:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	cmpq $0x1,%r14
	je L_482813
L_251067:
	movq %r15,0x110(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x108(%rbp)
	jmp L_251064
.p2align 0x4
L_482813:
L_251068:
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	jmp L_251069
.p2align 0x4
.long 0x3E43
L_251070:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x108(%rbp),%r14
	movq %r14,0x130(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_251071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E52
L_251179:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251180
L_251181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_251182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251182
.p2align 0x4
.long 0x3E53
L_251182:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_251180:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x108(%rbp),%r13
	movq 0x138(%rbp),%r14
	jmp L_251176
.p2align 0x4
.long 0x3E7D
L_251422:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq %r15,0x170(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_251423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3E82
L_251435:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq (globalObjptr+0x528)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_250587
L_251436:
	movl %r14d,0x0(%r15)
	movl %r13d,0x190(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_251437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3E7A
L_251403:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movl 0x180(%rbp),%ecx
	movq $0x1,%r15
	jmp L_251404
.p2align 0x4
.long 0x3E56
L_251200:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x158(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x188(%rbp)
	addq $0x188,%rbp
	leaq (L_251201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E61
L_251264:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x158(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_251265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E88
L_251464:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r14
	movq %r14,0x150(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_251458
	cmpb $0x2,%r13b
	je L_482820
L_251465:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_251460
	cmpq $0x2,%r14
	je L_251458
L_251466:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482817
L_251468:
	movq 0x0(%r14),%r15
	jmp L_251462
.p2align 0x4
L_482817:
L_251467:
	movq 0x0(%r14),%r15
	jmp x_856
.p2align 0x4
L_482820:
L_251472:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E50
loop_2915:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r14
	movq %r14,0x148(%rbp)
	cmpq $0x1,%r14
	je L_251460
	cmpq $0x2,%r14
	je L_251458
L_251474:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482822
L_251476:
	movq 0x0(%r14),%r15
	jmp L_251462
.p2align 0x4
L_482822:
L_251475:
	movq 0x0(%r14),%r15
	jmp x_856
.p2align 0x4
.long 0x3E8C
L_251499:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251500
L_251549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_251550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251550
.p2align 0x4
.long 0x3E94
L_251550:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_251500:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	cmpq $0x1,%r14
	je L_482825
L_251501:
	movq %r15,0x130(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x128(%rbp)
	jmp L_251498
.p2align 0x4
L_482825:
L_251502:
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	jmp L_251503
.p2align 0x4
.long 0x3E8C
L_251504:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x140(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_251505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E9A
L_251578:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251579
L_251622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251623
.p2align 0x4
.long 0x3EA3
L_251623:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_251579:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_482827
L_251580:
	movq %r15,0x150(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x148(%rbp)
	jmp L_251577
.p2align 0x4
L_482827:
L_251581:
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	jmp L_251582
.p2align 0x4
.long 0x3E9A
L_251583:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x148(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_251584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E0B
L_250684:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250685
L_250992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250993
.p2align 0x4
.long 0x3E38
L_250993:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250685:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x160(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250686:
	addl 0x0(%r15),%ecx
	movl %ecx,0x154(%rbp)
	jo L_250587
L_250687:
	cmpq $0x1,%r14
	je L_482829
L_250688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250686
.p2align 0x4
L_482829:
L_250689:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250690
L_250990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250991
.p2align 0x4
.long 0x3E39
L_250991:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_250690:
	movl 0x154(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482830
L_250691:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
L_250692:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_250693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_482830:
L_250989:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250692
.p2align 0x4
.long 0x3E11
L_250744:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_250745
.p2align 0x4
.long 0x3E33
L_250956:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E12
L_250746:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250747
L_250954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250955
.p2align 0x4
.long 0x3E32
L_250955:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250747:
	movq $0x3B3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x170(%rbp)
	movl 0x148(%rbp),%r15d
	movl %r15d,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_250748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3E18
L_250824:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250825
L_250910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_250911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250911
.p2align 0x4
.long 0x3E28
L_250911:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_250825:
	movq 0x138(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x104D,%r14
	je L_482846
	cmpq $0x104E,%r14
	je L_482843
	cmpq $0x104F,%r14
	je L_482840
L_250826:
	movq 0x0(%r15),%r14
	movb 0x100(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_482839
	cmpb $0x2,%r13b
	je L_482838
L_250827:
	cmpl $0x0,0x150(%rbp)
	jg L_482837
L_250828:
	movq 0xF8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_250615
L_250830:
	cmpl $0x0,%r10d
	jg L_482835
L_250831:
L_250832:
	movq 0x110(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_250656
.p2align 0x4
L_482835:
	xchgq %r14,%r15
L_250834:
	movq 0x18(%r15),%r14
	movq %r14,0x128(%rbp)
	movq $0x4797,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x4791,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xF8(%rbp)
	addq $0x18,%r12
addDec_0:
	movq 0x30(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_250835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482837:
	xchgq %r14,%r15
	jmp L_250834
.p2align 0x4
L_482838:
L_250897:
	movq (globalObjptr+0xA450)(%rip),%r13
	movq (globalObjptr+0xAC28)(%rip),%r14
	xchgq %r13,%r15
L_250847:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xB0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq (globalObjptr+0xA18)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0xF308)(%rip),%r13
	movq %r13,0x0(%r11)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10710)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	addq $0x148,%rbp
	leaq (L_250848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482839:
L_250846:
	movq (globalObjptr+0xA490)(%rip),%r11
	movq (globalObjptr+0xAC28)(%rip),%r14
	xchgq %r11,%r15
	jmp L_250847
.p2align 0x4
L_482840:
L_250906:
	movq 0x0(%r15),%r14
	movb 0x100(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_482842
	cmpb $0x2,%r13b
	je L_482841
	movq %r14,%r15
con_0:
	movq 0x18(%r15),%r14
	movq %r14,0x128(%rbp)
	movq $0x1D27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xF8(%rbp)
	jmp addDec_0
.p2align 0x4
L_482841:
L_250909:
	movq 0x138(%rbp),%r15
	jmp L_250832
.p2align 0x4
L_482842:
L_250908:
	movq (globalObjptr+0xA490)(%rip),%r15
	movq (globalObjptr+0xA450)(%rip),%r14
	jmp L_250847
.p2align 0x4
L_482843:
L_250902:
	movq 0x0(%r15),%r14
	movb 0x100(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_482845
	cmpb $0x2,%r13b
	je L_482844
	movq %r14,%r15
	jmp con_0
.p2align 0x4
L_482844:
L_250905:
	movq (globalObjptr+0xA450)(%rip),%r15
	movq (globalObjptr+0xA490)(%rip),%r14
	jmp L_250847
.p2align 0x4
L_482845:
L_250904:
	movq 0x138(%rbp),%r15
	jmp L_250832
.p2align 0x4
L_482846:
L_250898:
	movb 0x100(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_482848
	cmpb $0x2,%r13b
	je L_482847
L_250899:
	movq (globalObjptr+0xAC28)(%rip),%r13
	movq (globalObjptr+0x10718)(%rip),%r14
	xchgq %r13,%r15
	jmp L_250847
.p2align 0x4
L_482847:
L_250901:
	movq (globalObjptr+0xA450)(%rip),%r13
	movq (globalObjptr+0x10718)(%rip),%r14
	xchgq %r13,%r15
	jmp L_250847
.p2align 0x4
L_482848:
L_250900:
	movq (globalObjptr+0xA490)(%rip),%r11
	movq (globalObjptr+0x10718)(%rip),%r14
	xchgq %r11,%r15
	jmp L_250847
.p2align 0x4
.long 0x3E44
L_251071:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251072
L_251146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251147
.p2align 0x4
.long 0x3E4C
L_251147:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251072:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x118(%rbp)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251073:
	addl 0x0(%r15),%ecx
	movl %ecx,0x108(%rbp)
	jo L_250587
L_251074:
	cmpq $0x1,%r14
	je L_482850
L_251075:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251073
.p2align 0x4
L_482850:
L_251076:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251077
L_251144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251145
.p2align 0x4
.long 0x3E4D
L_251145:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251077:
	movl 0x108(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482851
L_251078:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
L_251079:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DF0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482851:
L_251143:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251079
.p2align 0x4
.long 0x3E7E
L_251423:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251424
L_251432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_251433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251433
.p2align 0x4
.long 0x3E81
L_251433:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_251424:
	movl 0x12C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_482855
L_251425:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x108(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
L_251426:
	movq %r15,0x148(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_251427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkScheme_0
.p2align 0x4
L_482855:
L_251431:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_251426
.p2align 0x4
.long 0x3E83
L_251437:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq %r15,0x188(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x188,%rbp
	leaq (L_251438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3E57
L_251201:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x180(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251202
L_251383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_251384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251384
.p2align 0x4
.long 0x3E79
L_251384:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_251202:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x180(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x130(%rbp),%r14
	cmpq $0x1,%r14
	je L_482857
L_251203:
	movq %r15,0x188(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x0(%r14),%r15
L_251204:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_251205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482857:
L_251382:
	movq 0x180(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq $0x1,0x180(%rbp)
L_251209:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_251210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E62
L_251265:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251266
L_251337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251338
.p2align 0x4
.long 0x3E72
L_251338:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251266:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x130(%rbp),%r14
	cmpq $0x1,%r14
	je L_482859
L_251267:
	movq %r15,0x158(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x0(%r14),%r15
L_251268:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_251269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482859:
L_251336:
	movq 0x150(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq $0x1,0x150(%rbp)
L_251273:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_251274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E8D
L_251505:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251506
L_251547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_251548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251548
.p2align 0x4
.long 0x3E92
L_251548:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_251506:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251507:
	addl 0x0(%r15),%ecx
	movl %ecx,0x128(%rbp)
	jo L_250587
L_251508:
	cmpq $0x1,%r14
	je L_482861
L_251509:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251507
.p2align 0x4
L_482861:
L_251510:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251511
L_251545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_251546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251546
.p2align 0x4
.long 0x3E93
L_251546:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_251511:
	movl 0x128(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482862
L_251512:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
L_251513:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x128(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DF0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_251514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482862:
L_251544:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251513
.p2align 0x4
.long 0x3E9B
L_251584:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251585
L_251620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_251621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251621
.p2align 0x4
.long 0x3EA1
L_251621:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_251585:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x158(%rbp)
	addq $0x18,%r12
	movq 0x150(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251586:
	addl 0x0(%r15),%ecx
	movl %ecx,0x148(%rbp)
	jo L_250587
L_251587:
	cmpq $0x1,%r14
	je L_482866
L_251588:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251586
.p2align 0x4
L_482866:
L_251589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251590
L_251618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251619
.p2align 0x4
.long 0x3EA2
L_251619:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_251590:
	movl 0x148(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482867
L_251591:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
L_251592:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x148(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DF0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_251593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482867:
L_251617:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251592
.p2align 0x4
.long 0x3E09
L_250693:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250694
L_250987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250988
.p2align 0x4
.long 0x3E30
L_250988:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250694:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482872
L_250695:
	decl %ecx
	jo L_250587
L_250696:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
error_8:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x106F8)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_250697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482872:
L_250986:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp error_8
.p2align 0x4
.long 0x3E13
L_250748:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_250749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E19
L_250835:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250836
L_250843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_250844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250844
.p2align 0x4
.long 0x3E1C
L_250844:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_250836:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x100(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x128(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r15b
	movb %r15b,0x148(%rbp)
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r15b
	movb %r15b,0x149(%rbp)
	movq (globalObjptr+0x4DE0)(%rip),%r15
	movq $0xB33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x130(%rbp)
	movq $0x605,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r14,0x0(%r13)
	movq %r13,0x150(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x163D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_250837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250837
.p2align 0x4
.long 0x3E1A
L_250837:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0xE8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2904:
	cmpq $0x1,%r15
	jnl L_482874
L_250842:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0xE8(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x28,%r14
	movq 0xA8(%rbp),%rsp
	movq %rsp,0x0(%r8,%r14,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x28,%r13
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r8,%r13,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x28,%r11
	movq $0x1,0x10(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x28,%r10
	movq $0x1,0x18(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x28,%r9
	movq 0x138(%rbp),%r14
	movq %r14,0x20(%r8,%r9,1)
	incq %r15
	jmp loop_2904
.p2align 0x4
L_482874:
L_250838:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250839
L_250840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_250841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250841
.p2align 0x4
.long 0x3E1B
L_250841:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_250839:
	movq 0xE8(%rbp),%r15
	movq $0xB0B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x448B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x140(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x20C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movzbl 0x148(%rbp),%r14d
	movzbl 0x149(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0x4DE0)(%rip),%r14
	movq %r14,0x8(%r13)
	movq %r15,0x18(%r13)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2379,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x2099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_250832
.p2align 0x4
.long 0x3E1D
L_250848:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_250849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E45
L_251080:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E7F
L_251427:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251428
L_251429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_251430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251430
.p2align 0x4
.long 0x3E80
L_251430:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_251428:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x130(%rbp),%r13
	movq 0x138(%rbp),%r14
	jmp L_251176
.p2align 0x4
.long 0x3E84
L_251438:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_251439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3E58
L_251205:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x190(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251206
L_251380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_251381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251381
.p2align 0x4
.long 0x3E78
L_251381:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_251206:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x190(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x188(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x180(%rbp),%r14
	cmpq $0x1,%r14
	je L_482878
L_251207:
	movq %r15,0x188(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x180(%rbp)
	jmp L_251204
.p2align 0x4
L_482878:
L_251208:
	movq 0x188(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x188(%rbp)
	jmp L_251209
.p2align 0x4
.long 0x3E58
L_251210:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x180(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq %r15,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_251211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E63
L_251269:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251270
L_251334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_251335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251335
.p2align 0x4
.long 0x3E71
L_251335:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_251270:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x150(%rbp),%r14
	cmpq $0x1,%r14
	je L_482880
L_251271:
	movq %r15,0x158(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x150(%rbp)
	jmp L_251268
.p2align 0x4
L_482880:
L_251272:
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x158(%rbp)
	jmp L_251273
.p2align 0x4
.long 0x3E63
L_251274:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x150(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_251275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E8E
L_251514:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_251515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E9C
L_251593:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_251594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E0C
L_250697:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_250698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E11
L_250749:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250750
L_250952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250953
.p2align 0x4
.long 0x3E2B
L_250953:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250750:
	movq 0x130(%rbp),%r15
	cmpq $0x1,%r15
	je L_482882
L_250751:
	movq 0x8(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_250752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3949
.p2align 0x4
L_482882:
L_250951:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_250759:
	testl %ecx,%ecx
	jz L_482887
L_250760:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_250761:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x130(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250762:
	addl 0x0(%r14),%ecx
	movl %ecx,0x148(%rbp)
	jo L_250587
L_250763:
	cmpq $0x1,%r15
	je L_482883
L_250764:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_250762
.p2align 0x4
L_482883:
L_250765:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250766
L_250944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250945
.p2align 0x4
.long 0x3E2F
L_250945:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250766:
	movl 0x148(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482884
L_250767:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
L_250768:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x106F0)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_250769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482884:
L_250943:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250768
.p2align 0x4
L_482887:
L_250946:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_250761
.p2align 0x4
.long 0x3E1D
L_250849:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x128(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_250850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E45
L_251081:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251082
L_251141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251142
.p2align 0x4
.long 0x3E4C
L_251142:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251082:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x118(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251083:
	addl 0x0(%r15),%ecx
	movl %ecx,0x100(%rbp)
	jo L_250587
L_251084:
	cmpq $0x1,%r14
	je L_482889
L_251085:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251083
.p2align 0x4
L_482889:
L_251086:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251087
L_251139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251140
.p2align 0x4
.long 0x3E4B
L_251140:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251087:
	movl 0x100(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482891
L_251088:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
L_251089:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250587
L_251090:
	movl %r13d,0x0(%r15)
	movq %r14,0x138(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x130,%rbp
	leaq (L_251091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482891:
L_251138:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251089
.p2align 0x4
.long 0x3E85
L_251439:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x12C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251440
L_251441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_251442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251442
.p2align 0x4
.long 0x3E86
L_251442:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_251440:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x12C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x170(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x168(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x168(%rbp)
	jmp loop_2914
.p2align 0x4
.long 0x3E59
L_251211:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x180(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251212
L_251378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_251379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251379
.p2align 0x4
.long 0x3E74
L_251379:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_251212:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x190(%rbp)
	addq $0x18,%r12
	movq 0x188(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251213:
	addl 0x0(%r15),%ecx
	movl %ecx,0x144(%rbp)
	jo L_250587
L_251214:
	cmpq $0x1,%r14
	je L_482896
L_251215:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251213
.p2align 0x4
L_482896:
L_251216:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251217
L_251376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_251377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251377
.p2align 0x4
.long 0x3E77
L_251377:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_251217:
	movl 0x144(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482897
L_251218:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x190(%rbp),%r14
	movq %r14,0x0(%r15)
L_251219:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x180(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA460)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DD8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10720)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_251220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482897:
L_251375:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251219
.p2align 0x4
.long 0x3E64
L_251275:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251276
L_251332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251333
.p2align 0x4
.long 0x3E6F
L_251333:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251276:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x158(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251277:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10C(%rbp)
	jo L_250587
L_251278:
	cmpq $0x1,%r14
	je L_482901
L_251279:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251277
.p2align 0x4
L_482901:
L_251280:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251281
L_251330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_251331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251331
.p2align 0x4
.long 0x3E70
L_251331:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_251281:
	movl 0x10C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482902
L_251282:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
L_251283:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x150(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA458)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DD8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10720)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_251284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482902:
L_251329:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251283
.p2align 0x4
.long 0x3E8E
L_251515:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251516
L_251542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_251543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251543
.p2align 0x4
.long 0x3E92
L_251543:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_251516:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251517:
	addl 0x0(%r15),%ecx
	movl %ecx,0x118(%rbp)
	jo L_250587
L_251518:
	cmpq $0x1,%r14
	je L_482906
L_251519:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251517
.p2align 0x4
L_482906:
L_251520:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251521
L_251540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_251541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251541
.p2align 0x4
.long 0x3E91
L_251541:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_251521:
	movl 0x118(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482908
L_251522:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
L_251523:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250587
L_251524:
	movl %r13d,0x0(%r15)
	movq %r14,0x138(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x130,%rbp
	leaq (L_251525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482908:
L_251539:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251523
.p2align 0x4
.long 0x3E9C
L_251594:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251595
L_251615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_251616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251616
.p2align 0x4
.long 0x3EA1
L_251616:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_251595:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x148(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x158(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x140(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251596:
	addl 0x0(%r15),%ecx
	movl %ecx,0x140(%rbp)
	jo L_250587
L_251597:
	cmpq $0x1,%r14
	je L_482912
L_251598:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251596
.p2align 0x4
L_482912:
L_251599:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251600
L_251613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_251614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251614
.p2align 0x4
.long 0x3EA0
L_251614:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_251600:
	movl 0x140(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482914
L_251601:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
L_251602:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250587
L_251603:
	movl %r13d,0x0(%r15)
	movq %r14,0x150(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x160(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x148,%rbp
	leaq (L_251604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482914:
L_251612:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251602
.p2align 0x4
.long 0x3E0D
L_250698:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250699
L_250984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250985
.p2align 0x4
.long 0x3E38
L_250985:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250699:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x168(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x160(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250700:
	addl 0x0(%r15),%ecx
	movl %ecx,0x154(%rbp)
	jo L_250587
L_250701:
	cmpq $0x1,%r14
	je L_482918
L_250702:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250700
.p2align 0x4
L_482918:
L_250703:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250704
L_250982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250983
.p2align 0x4
.long 0x3E39
L_250983:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_250704:
	movl 0x154(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482919
L_250705:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
L_250706:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x168(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10700)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482919:
L_250981:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250706
.p2align 0x4
.long 0x3E14
L_250752:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250753
L_250949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250950
.p2align 0x4
.long 0x3E31
L_250950:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250753:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	movq 0x168(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250754:
	addl 0x0(%r15),%ecx
	movl %ecx,0x130(%rbp)
	jo L_250587
L_250755:
	cmpq $0x1,%r14
	je L_482923
L_250756:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250754
.p2align 0x4
L_482923:
L_250757:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250758
L_250947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250948
.p2align 0x4
.long 0x3E30
L_250948:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250758:
	movq 0x148(%rbp),%r15
	movl 0x130(%rbp),%ecx
	jmp L_250759
.p2align 0x4
.long 0x3E12
L_250769:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_250770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_1
.p2align 0x4
.long 0x3E1E
L_250850:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250851
L_250895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250896
.p2align 0x4
.long 0x3E27
L_250896:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250851:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_482927
L_250852:
	movq %r15,0x128(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x0(%r14),%r15
L_250853:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_250854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482927:
L_250894:
	movq 0xF8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq $0x1,0xF8(%rbp)
L_250858:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_250859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E41
L_251091:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_482931
L_251092:
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_482930
	cmpb $0x2,%r14b
	je L_482929
L_251093:
	movq 0x70(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482929:
L_251132:
	movq 0x78(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482930:
L_251127:
	movq 0x78(%rbp),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482931:
L_250881:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E5A
L_251220:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq %r15,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_251221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E65
L_251284:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_251285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E8A
L_251525:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_250881
L_251526:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeStrToEnv_0
.p2align 0x4
.long 0x3E98
L_251604:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_250881
L_251605:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_251606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1221
.p2align 0x4
.long 0x3E0A
L_250707:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250708
L_250979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250980
.p2align 0x4
.long 0x3E38
L_250980:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250708:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_482939
L_250709:
	movq 0x8(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq $0x1,0x180(%rbp)
.p2align 0x4,,0x7
L_250710:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482938
.p2align 0x4,,0x7
L_250711:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x170(%rbp),%r14
	cmpq $0x1,%r14
	je L_482934
L_250712:
	movq %r15,0x180(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	jmp L_250710
.p2align 0x4
L_482934:
L_250714:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_482937
L_250715:
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r15
	cmpq $0x1,%r10
	je L_482936
L_250716:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r15
	je L_482935
L_250717:
	movq 0x8(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r10,%r14
L_250718:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	addq $0x178,%rbp
	leaq (L_250719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
L_482935:
L_250973:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_250718
.p2align 0x4
L_482936:
L_250974:
	xchgq %r14,%r15
	jmp L_250718
.p2align 0x4
L_482937:
L_250975:
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_250718
.p2align 0x4
L_482938:
L_250976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_250977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250977
.p2align 0x4
.long 0x3E37
L_250977:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	jmp L_250711
.p2align 0x4
L_482939:
L_250978:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_250714
.p2align 0x4
.long 0x3E0C
L_250770:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250771
L_250941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250942
.p2align 0x4
.long 0x3E2B
L_250942:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250771:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x160(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250772:
	addl 0x0(%r15),%ecx
	movl %ecx,0x148(%rbp)
	jo L_250587
L_250773:
	cmpq $0x1,%r14
	je L_482941
L_250774:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250772
.p2align 0x4
L_482941:
L_250775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250776
L_250939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250940
.p2align 0x4
.long 0x3E2D
L_250940:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250776:
	movl 0x148(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482942
L_250777:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
L_250778:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_250779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_482942:
L_250938:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250778
.p2align 0x4
.long 0x3E1F
L_250854:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250855
L_250892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250893
.p2align 0x4
.long 0x3E26
L_250893:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250855:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_482946
L_250856:
	movq %r15,0x128(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	jmp L_250853
.p2align 0x4
L_482946:
L_250857:
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_250858
.p2align 0x4
.long 0x3E1F
L_250859:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xF8(%rbp),%r14
	movq %r14,0x148(%rbp)
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_250860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E46
L_251094:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251095
L_251125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251126
.p2align 0x4
.long 0x3E48
L_251126:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251095:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x2099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
L_251096:
	movq 0x100(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x130(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x110(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x118(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x9D3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r14,0x10(%r9)
	addq $0x30,%r12
	movq %r10,0x18(%r9)
	movq %r15,0x20(%r9)
	movq %r9,0x138(%rbp)
	leaq L_251111(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x130,%rbp
	leaq (L_251097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3798
.p2align 0x4
.long 0x3E46
L_251133:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251134
L_251135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251136
.p2align 0x4
.long 0x3E48
L_251136:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251134:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xE3A0)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x209F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	jmp L_251096
.p2align 0x4
.long 0x3E46
L_251128:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251129
L_251130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251131
.p2align 0x4
.long 0x3E48
L_251131:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251129:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xE3A0)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x209D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	jmp L_251096
.p2align 0x4
.long 0x3E5A
L_251221:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x188(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251222
L_251373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_251374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251374
.p2align 0x4
.long 0x3E74
L_251374:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_251222:
	movq $0x3C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x198(%rbp)
	movl 0x140(%rbp),%r15d
	movl %r15d,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_251223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3E65
L_251285:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251286
L_251327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251328
.p2align 0x4
.long 0x3E6F
L_251328:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251286:
	movq $0x3C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x178(%rbp)
	movl 0x108(%rbp),%r15d
	movl %r15d,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_251287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3E8B
L_251527:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251528
L_251536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_251537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251537
.p2align 0x4
.long 0x3E90
L_251537:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_251528:
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_482953
L_251529:
	movq %r15,0x108(%rbp)
L_251530:
	movq 0x90(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482953:
L_251535:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x20A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x118(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r11,0x108(%rbp)
	addq $0x18,%r12
	jmp L_251530
.p2align 0x4
.long 0x3E9D
L_251606:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_251607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3E0E
L_250719:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x154(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250720
L_250971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250972
.p2align 0x4
.long 0x3E36
L_250972:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_250720:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x154(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x170(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x178(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250721:
	addl 0x0(%r15),%ecx
	movl %ecx,0x130(%rbp)
	jo L_250587
L_250722:
	cmpq $0x1,%r14
	je L_482955
L_250723:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250721
.p2align 0x4
L_482955:
L_250724:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250725
L_250969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_250970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250970
.p2align 0x4
.long 0x3E35
L_250970:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_250725:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482956
L_250726:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
L_250727:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_250728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_482956:
L_250968:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250727
.p2align 0x4
.long 0x3E10
L_250779:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250780
L_250936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250937
.p2align 0x4
.long 0x3E2E
L_250937:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250780:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482961
L_250781:
	decl %ecx
	jo L_250587
L_250782:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
error_9:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x106F8)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_250783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482961:
L_250935:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp error_9
.p2align 0x4
.long 0x3E20
L_250860:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250861
L_250890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250891
.p2align 0x4
.long 0x3E25
L_250891:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250861:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x130(%rbp)
	addq $0x18,%r12
	movq 0x128(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250862:
	addl 0x0(%r15),%ecx
	movl %ecx,0xF8(%rbp)
	jo L_250587
L_250863:
	cmpq $0x1,%r14
	je L_482963
L_250864:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250862
.p2align 0x4
L_482963:
L_250865:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250866
L_250888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250889
.p2align 0x4
.long 0x3E24
L_250889:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250866:
	movl 0xF8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482969
L_250867:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
L_250868:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xF8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250869:
	addl 0x0(%r14),%ecx
	movl %ecx,0xE8(%rbp)
	jo L_250587
L_250870:
	cmpq $0x1,%r15
	je L_482964
L_250871:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_250869
.p2align 0x4
L_482964:
L_250872:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250873
L_250885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250886
.p2align 0x4
.long 0x3E23
L_250886:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250873:
	movl 0xE8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482966
L_250874:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
L_250875:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250587
L_250876:
	movl %r13d,0x0(%r15)
	movq %r14,0x150(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x160(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x148,%rbp
	leaq (L_250877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482966:
L_250884:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250875
.p2align 0x4
L_482969:
L_250887:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250868
.p2align 0x4
.long 0x3E47
L_251097:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251098
L_251109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251110
.p2align 0x4
.long 0x3E49
L_251110:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251098:
	movq 0x108(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482974
L_251100:
	testl %r13d,%r13d
	jz L_482973
L_251101:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x100(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
L_251103:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x90(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_251104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482973:
L_251108:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_251103
.p2align 0x4
L_482974:
L_251099:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E33
L_251111:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251113
L_251123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251124
.p2align 0x4
.long 0x3E4A
L_251124:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251113:
	movq 0x100(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_251114
L_251115:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD5E,%r14
	je L_482979
	cmpq $0xD5F,%r14
	je L_482976
L_251114:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x100(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482976:
L_251120:
	movq 0x100(%rbp),%r15
	movq 0x118(%rbp),%r14
	cmpq %r14,0x0(%r15)
	je L_482977
L_251121:
	movq 0xD0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482977:
L_251122:
	movq $0x1ABD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r11
	xchgq %r14,%r15
	xchgq %r13,%r14
	xchgq %r11,%r13
L_251117:
	cmpq 0x110(%rbp),%r15
	je L_482978
L_251118:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482978:
	movq %r13,%r15
	jmp L_251103
.p2align 0x4
L_482979:
L_251116:
	movq 0x100(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	jmp L_251117
.p2align 0x4
.long 0x3E5B
L_251223:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_251224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E66
L_251287:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_251288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E8A
L_251531:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251532
L_251533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251534
.p2align 0x4
.long 0x3E8F
L_251534:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251532:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movl 0xBC(%rbp),%ecx
	movl 0x118(%rbp),%ebx
	movq 0x108(%rbp),%r13
	movq 0x110(%rbp),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_251176
.p2align 0x4
.long 0x3E9E
L_251607:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251608
L_251609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_251610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251610
.p2align 0x4
.long 0x3E9F
L_251610:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_251608:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movl 0x114(%rbp),%ecx
	movl 0x130(%rbp),%ebx
	movq 0x140(%rbp),%r14
	movq 0x138(%rbp),%r15
	jmp L_251566
.p2align 0x4
.long 0x3E0F
L_250728:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250729
L_250966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250967
.p2align 0x4
.long 0x3E34
L_250967:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250729:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482986
L_250730:
	decl %ecx
	jo L_250587
L_250731:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
L_250732:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250587
L_250733:
	movl %r13d,0x0(%r15)
	movq %r14,0x168(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x168,%rbp
	leaq (L_250734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482986:
L_250965:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250732
.p2align 0x4
.long 0x3E12
L_250783:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_250784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E21
L_250877:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250878
L_250882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250883
.p2align 0x4
.long 0x3E22
L_250883:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250878:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_250881
L_250879:
	movq 0x138(%rbp),%r15
	jmp L_250832
.p2align 0x4
.long 0x3E46
L_251104:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251105
L_251106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_251107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251107
.p2align 0x4
.long 0x3E48
L_251107:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_251105:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x5CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl 0x8C(%rbp),%ecx
	movl 0xE8(%rbp),%ebx
	movq 0x100(%rbp),%r14
	movq 0xF8(%rbp),%r11
	movq %r13,%r15
	movq %r11,%r13
	jmp L_250657
.p2align 0x4
.long 0x3E5C
L_251224:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251225
L_251371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_251372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251372
.p2align 0x4
.long 0x3E76
L_251372:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_251225:
	movq 0x140(%rbp),%r15
	cmpq $0x1,%r15
	je L_482991
L_251226:
	movq 0x8(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_251227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3949
.p2align 0x4
L_482991:
L_251370:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_251234:
	testl %ecx,%ecx
	jz L_482997
L_251235:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_251236:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x188(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x180(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x140(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251237:
	addl 0x0(%r14),%ecx
	movl %ecx,0x150(%rbp)
	jo L_250587
L_251238:
	cmpq $0x1,%r15
	je L_482992
L_251239:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_251237
.p2align 0x4
L_482992:
L_251240:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251241
L_251363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_251364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251364
.p2align 0x4
.long 0x3E55
L_251364:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_251241:
	movl 0x150(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482994
L_251242:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
L_251243:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250587
L_251244:
	movl %r13d,0x0(%r15)
	movq %r14,0x188(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x198(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x180,%rbp
	leaq (L_251245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482994:
L_251362:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251243
.p2align 0x4
L_482997:
L_251365:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_251236
.p2align 0x4
.long 0x3E67
L_251288:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251289
L_251325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251326
.p2align 0x4
.long 0x3E6E
L_251326:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251289:
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_482999
L_251290:
	movq 0x8(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_251291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3949
.p2align 0x4
L_482999:
L_251324:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_251298:
	testl %ecx,%ecx
	jz L_483005
L_251299:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_251300:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x158(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x150(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251301:
	addl 0x0(%r14),%ecx
	movl %ecx,0x110(%rbp)
	jo L_250587
L_251302:
	cmpq $0x1,%r15
	je L_483000
L_251303:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_251301
.p2align 0x4
L_483000:
L_251304:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251305
L_251317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251318
.p2align 0x4
.long 0x3E6B
L_251318:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251305:
	movl 0x110(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483002
L_251306:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
L_251307:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250587
L_251308:
	movl %r13d,0x0(%r15)
	movq %r14,0x180(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x178(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x190(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x178,%rbp
	leaq (L_251309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483002:
L_251316:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251307
.p2align 0x4
L_483005:
L_251319:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_251300
.p2align 0x4
.long 0x3E09
L_250734:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250735
L_250963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250964
.p2align 0x4
.long 0x3E2E
L_250964:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250735:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_250881
	jmp L_250737
.p2align 0x4
.long 0x3E0C
L_250784:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250785
L_250933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250934
.p2align 0x4
.long 0x3E2B
L_250934:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250785:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x160(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250786:
	addl 0x0(%r15),%ecx
	movl %ecx,0x148(%rbp)
	jo L_250587
L_250787:
	cmpq $0x1,%r14
	je L_483009
L_250788:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250786
.p2align 0x4
L_483009:
L_250789:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250790
L_250931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250932
.p2align 0x4
.long 0x3E2D
L_250932:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250790:
	movl 0x148(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483010
L_250791:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
L_250792:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x148(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x160(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10700)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_250793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483010:
L_250930:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250792
.p2align 0x4
.long 0x3E5D
L_251227:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251228
L_251368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_251369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251369
.p2align 0x4
.long 0x3E75
L_251369:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_251228:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	movq 0x190(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251229:
	addl 0x0(%r15),%ecx
	movl %ecx,0x140(%rbp)
	jo L_250587
L_251230:
	cmpq $0x1,%r14
	je L_483014
L_251231:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251229
.p2align 0x4
L_483014:
L_251232:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251233
L_251366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_251367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251367
.p2align 0x4
.long 0x3E74
L_251367:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_251233:
	movq 0x178(%rbp),%r15
	movl 0x140(%rbp),%ecx
	jmp L_251234
.p2align 0x4
.long 0x3E5E
L_251245:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_250881
	jmp L_251247
.p2align 0x4
.long 0x3E68
L_251291:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251292
L_251322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251323
.p2align 0x4
.long 0x3E6D
L_251323:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251292:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x110(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251293:
	addl 0x0(%r15),%ecx
	movl %ecx,0x108(%rbp)
	jo L_250587
L_251294:
	cmpq $0x1,%r14
	je L_483019
L_251295:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251293
.p2align 0x4
L_483019:
L_251296:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251297
L_251320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251321
.p2align 0x4
.long 0x3E6C
L_251321:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251297:
	movq 0x110(%rbp),%r15
	movl 0x108(%rbp),%ecx
	jmp L_251298
.p2align 0x4
.long 0x3E69
L_251309:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251310
L_251314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_251315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251315
.p2align 0x4
.long 0x3E6A
L_251315:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_251310:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_250881
	jmp L_251312
.p2align 0x4
.long 0x3E0F
L_250793:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250794
L_250928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250929
.p2align 0x4
.long 0x3E2B
L_250929:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250794:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_483030
L_250795:
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq $0x1,0x178(%rbp)
.p2align 0x4,,0x7
L_250796:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483029
.p2align 0x4,,0x7
L_250797:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x168(%rbp),%r14
	cmpq $0x1,%r14
	je L_483025
L_250798:
	movq %r15,0x178(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x168(%rbp)
	movq %r15,0x170(%rbp)
	jmp L_250796
.p2align 0x4
L_483025:
L_250800:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_483028
L_250801:
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r15
	cmpq $0x1,%r10
	je L_483027
L_250802:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r15
	je L_483026
L_250803:
	movq 0x8(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r10,%r14
L_250804:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	addq $0x170,%rbp
	leaq (L_250805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
L_483026:
L_250922:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_250804
.p2align 0x4
L_483027:
L_250923:
	xchgq %r14,%r15
	jmp L_250804
.p2align 0x4
L_483028:
L_250924:
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_250804
.p2align 0x4
L_483029:
L_250925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_250926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250926
.p2align 0x4
.long 0x3E2C
L_250926:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	jmp L_250797
.p2align 0x4
L_483030:
L_250927:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_250800
.p2align 0x4
.long 0x3E15
L_250805:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl 0x178(%rbp),%r15d
	movl %r15d,0x154(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250806
L_250920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250921
.p2align 0x4
.long 0x3E2B
L_250921:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250806:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x154(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250807:
	addl 0x0(%r15),%ecx
	movl %ecx,0xF8(%rbp)
	jo L_250587
L_250808:
	cmpq $0x1,%r14
	je L_483032
L_250809:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250807
.p2align 0x4
L_483032:
L_250810:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250811
L_250918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250919
.p2align 0x4
.long 0x3E2A
L_250919:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250811:
	movl 0xF8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483033
L_250812:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
L_250813:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_250814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_483033:
L_250917:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250813
.p2align 0x4
.long 0x3E16
L_250814:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250815
L_250915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250916
.p2align 0x4
.long 0x3E29
L_250916:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250815:
	movl 0xF8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483039
L_250816:
	decl %ecx
	jo L_250587
L_250817:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
L_250818:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250587
L_250819:
	movl %r13d,0x0(%r15)
	movq %r14,0x168(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x168,%rbp
	leaq (L_250820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483039:
L_250914:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250818
.p2align 0x4
.long 0x3E17
L_250820:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_250881
	jmp L_250822
