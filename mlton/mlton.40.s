/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:54 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl get_105
.hidden get_105
get_105:
L_128112:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128113
L_128167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128168
.p2align 0x4
.long 0x460
L_128168:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128113:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_426843
L_128115:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_426842
L_128116:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_128118:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_426841
L_128159:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD73,%r10
	jne L_426840
L_128160:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_426837
L_128119:
	incl %ecx
	jo L_426836
L_128121:
	cmpq $0x1,%r14
	je L_426834
L_128122:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_128118
.p2align 0x4
L_426834:
L_128123:
L_128124:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_426835
L_128126:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_437
L_128158:
	movl %ecx,0x0(%r15)
x_437:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_426835:
L_128125:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426836:
L_128120:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426837:
L_128162:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128125
L_128163:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_426838
L_128165:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426838:
L_128164:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426840:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_128119
.p2align 0x4
L_426841:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_128119
.p2align 0x4
L_426842:
L_128166:
	xorl %ecx,%ecx
	jmp L_128124
.p2align 0x4
L_426843:
L_128114:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_128128:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_128129:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_128130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_128130:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF368)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_128131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_128131:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_128132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_128132:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128133
L_128156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128157
.p2align 0x4
.long 0x4AF
L_128157:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_128133:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_128134:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_128120
L_128135:
	cmpq $0x1,%r14
	je L_426845
L_128136:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_128134
.p2align 0x4
L_426845:
L_128137:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128138
L_128154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128155
.p2align 0x4
.long 0x4E7
L_128155:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128138:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426846
L_128139:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_213:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_426846:
L_128153:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_213
.p2align 0x4
.long 0x1
rev_211:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_426852
L_128140:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_128141:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426851
.p2align 0x4,,0x7
L_128142:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_426850
L_128143:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_128141
.p2align 0x4
L_426850:
L_128145:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_426851:
L_128150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128151
.p2align 0x4
.long 0x45C
L_128151:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_128142
.p2align 0x4
L_426852:
L_128152:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_128145
.p2align 0x4
.long 0x1
L_128146:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128147
L_128148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128149
.p2align 0x4
.long 0x452
L_128149:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128147:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl returnTo_0
.hidden returnTo_0
returnTo_0:
L_128169:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_128221
L_128170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426872
L_128171:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_426871
L_128173:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_426870
L_128174:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x8(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_128176:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_426869
L_128210:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA1,%r11
	jne L_426868
L_128211:
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_426864
L_128177:
	movl 0x8(%rbp),%r11d
	incl %r11d
	movl %r11d,0xC(%rbp)
	jo L_426863
L_128179:
	cmpq $0x1,%r15
	je L_426854
L_128180:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x8(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_128176
.p2align 0x4
L_426854:
L_128181:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128182
L_128208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128209
.p2align 0x4
.long 0x65A
L_128209:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128182:
	movl 0xC(%rbp),%ecx
L_128183:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_426861
L_128185:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128187
L_128207:
	movl %ecx,0x0(%r15)
L_128187:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x11F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_128188:
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_128195
L_128189:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_128190:
	movq 0x0(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_426858
L_128191:
	cmpq $0x1,%r14
	je L_426855
L_128192:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_128190
.p2align 0x4
L_426855:
L_128193:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128195
L_128203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128204
.p2align 0x4
.long 0x4AF
L_128204:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_128195:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_426856
L_128196:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_128197:
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_128198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp returnTo_0
.p2align 0x4
L_426856:
L_128201:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426858:
L_128205:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426861:
L_128184:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426863:
L_128178:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426864:
L_128213:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128214
L_128218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128219
.p2align 0x4
.long 0x1012
L_128219:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128214:
	movl 0x8(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_128184
L_128215:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_426865
L_128216:
	movq 0x28(%rbp),%r15
	jmp L_128188
.p2align 0x4
L_426865:
L_128217:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_128188
.p2align 0x4
L_426868:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_128177
.p2align 0x4
L_426869:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_128177
.p2align 0x4
L_426870:
L_128220:
	xorl %ecx,%ecx
	jmp L_128183
.p2align 0x4
L_426871:
L_128172:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426872:
L_128221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128222
.p2align 0x4
.long 0x45C
L_128222:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_128171
.p2align 0x4
.long 0x51F
L_128198:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_128201
L_128199:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_128197
.text
.p2align 0x4
.globl get_104
.hidden get_104
get_104:
L_128223:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128224
L_128268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128269
.p2align 0x4
.long 0x460
L_128269:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128224:
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_426885
L_128226:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_426884
L_128227:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_128229:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_128230
L_128260:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD71,%r11
	jne L_128230
L_128261:
	movq 0x8(%r13),%r11
	movq 0x10(%rbp),%r10
	cmpq %r10,0x0(%r13)
	je L_426879
L_128230:
	incl %ecx
	jo L_426878
L_128232:
	cmpq $0x1,%r15
	je L_426875
L_128233:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_128229
.p2align 0x4
L_426875:
L_128234:
L_128235:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_426877
L_128237:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128239
L_128259:
	movl %ecx,0x0(%r15)
L_128239:
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_128240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_426877:
L_128236:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426878:
L_128231:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426879:
L_128263:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128236
L_128264:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_426880
L_128266:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426880:
L_128265:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426884:
L_128267:
	xorl %ecx,%ecx
	jmp L_128235
.p2align 0x4
L_426885:
L_128225:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8AA
L_128240:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128241
L_128257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128258
.p2align 0x4
.long 0x520
L_128258:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128241:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3DF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_128242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0xA92
L_128242:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128243
L_128255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128256
.p2align 0x4
.long 0xA93
L_128256:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128243:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jnz L_426888
L_128244:
	movl $0x1,0x18(%rbp)
L_128245:
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,0x50(%rbp)
	movq $0x3F8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	addq $0x48,%rbp
	leaq (L_128246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_426888:
L_128254:
	movl $0x0,0x18(%rbp)
	jmp L_128245
.p2align 0x4
.long 0x792
L_128246:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128247
L_128252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128253
.p2align 0x4
.long 0x1C7D
L_128253:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128247:
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,0x48(%rbp)
	movq $0x3F8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_128248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0xBA1
L_128248:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128249
L_128250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128251
.p2align 0x4
.long 0x1C7D
L_128251:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128249:
	movq $0x1345,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1AE3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_55
.hidden get_55
get_55:
L_128270:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128271
L_128325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128326
.p2align 0x4
.long 0x45C
L_128326:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_128271:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_426901
L_128273:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_426900
L_128274:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_128276:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_128277
L_128317:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD69,%r13
	jne L_128277
L_128318:
	movq 0x8(%r15),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r15)
	je L_426895
L_128277:
	incl %ecx
	jo L_426894
L_128279:
	cmpq $0x1,%r14
	je L_426892
L_128280:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_128276
.p2align 0x4
L_426892:
L_128281:
L_128282:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_426893
L_128284:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_438
L_128316:
	movl %ecx,0x0(%r15)
x_438:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_426893:
L_128283:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426894:
L_128278:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426895:
L_128320:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128283
L_128321:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_426896
L_128323:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426896:
L_128322:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426900:
L_128324:
	xorl %ecx,%ecx
	jmp L_128282
.p2align 0x4
L_426901:
L_128272:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_128286:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_128287:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_128288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_128288:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_128289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_128289:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_128290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_128290:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128291
L_128314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128315
.p2align 0x4
.long 0x4AF
L_128315:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_128291:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_128292:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_128278
L_128293:
	cmpq $0x1,%r14
	je L_426903
L_128294:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_128292
.p2align 0x4
L_426903:
L_128295:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128296
L_128312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128313
.p2align 0x4
.long 0x4E7
L_128313:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128296:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426904
L_128297:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_214:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_426904:
L_128311:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_214
.p2align 0x4
.long 0x1
rev_212:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_426910
L_128298:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_128299:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426909
.p2align 0x4,,0x7
L_128300:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_426908
L_128301:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_128299
.p2align 0x4
L_426908:
L_128303:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_426909:
L_128308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128309
.p2align 0x4
.long 0x45C
L_128309:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_128300
.p2align 0x4
L_426910:
L_128310:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_128303
.p2align 0x4
.long 0x1
L_128304:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128305
L_128306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128307
.p2align 0x4
.long 0x452
L_128307:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128305:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_54
.hidden get_54
get_54:
L_128327:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_128357
L_128328:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426924
L_128329:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_426923
L_128331:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_426922
L_128332:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_128334:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_128335
L_128349:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD74,%r13
	jne L_128335
L_128350:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_426917
L_128335:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_426916
L_128337:
	cmpq $0x1,%r15
	je L_426912
L_128338:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_128334
.p2align 0x4
L_426912:
L_128339:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128340
L_128347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128348
.p2align 0x4
.long 0x49C
L_128348:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_128340:
	movl 0x18(%rbp),%ecx
L_128341:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_426914
L_128343:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128345
L_128346:
	movl %ecx,0x0(%r15)
L_128345:
	movq $0x7AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x7AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movw $0x0,%r13w
	movzwl %r13w,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x7AF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq $0x1,0x10(%r13)
	movq $0xCF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xCF7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x2,0x0(%r11)
	movq $0xCF9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r15,0x10(%r10)
	addq $0x20,%r12
	movq $0xCFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1AE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426914:
L_128342:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426916:
L_128336:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426917:
L_128352:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128342
L_128353:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_426918
L_128355:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426918:
L_128354:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426922:
L_128356:
	xorl %ecx,%ecx
	jmp L_128341
.p2align 0x4
L_426923:
L_128330:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426924:
L_128357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128358
.p2align 0x4
.long 0x460
L_128358:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_128329
.text
.p2align 0x4
.globl up_2
.hidden up_2
up_2:
L_128359:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128360
L_128388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128389
.p2align 0x4
.long 0x495
L_128389:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128360:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movw 0x0(%r14),%r15w
	movw %r15w,%r11w
	andw $0x3,%r11w
	cmpw $0x1,%r11w
	je L_128363
	cmpw $0x2,%r11w
	je L_426931
L_128361:
	movw 0x0(%rbp),%r15w
	andw $0x3,%r15w
	cmpw $0x1,%r15w
	je setTop_9
	cmpw $0x2,%r15w
	je L_426926
L_128363:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426926:
L_128376:
	movw 0x0(%rbp),%r15w
	shrw $0x2,%r15w
	movb %r15b,%r11b
	movzbw %r11b,%r15w
	shlw $0x2,%r15w
	orw $0x2,%r15w
	movw %r15w,0x0(%r14)
	movw 0x0(%r13),%r14w
	movw %r14w,%r13w
	andw $0x1,%r13w
	jz L_426929
L_128378:
	shrw $0x1,%r14w
	movb %r14b,%r13b
	cmpb %r13b,%r11b
	jne L_426928
L_128380:
	movw %r15w,0x10(%rbp)
continue_2:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq $0x1,%r13
	je L_128363
L_128366:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_128367:
	movq %r15,0x30(%rbp)
	movw 0x10(%rbp),%r15w
	movw %r15w,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_128368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_2
.p2align 0x4
L_426928:
L_128370:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426929:
L_128377:
	movw %r15w,0x10(%rbp)
	jmp continue_2
.p2align 0x4
setTop_9:
	movq %r13,%r15
setTop_2:
	movw 0x0(%r15),%r13w
	andw $0x1,%r13w
	jnz L_128370
L_128365:
	movw $0x1,0x0(%r14)
	movw $0x1,0x10(%rbp)
	jmp continue_2
.p2align 0x4
L_426931:
L_128382:
	shrw $0x2,%r15w
	movb %r15b,%r11b
	movw 0x0(%rbp),%r15w
	andw $0x3,%r15w
	cmpw $0x1,%r15w
	je setTop_10
	cmpw $0x2,%r15w
	je L_426932
	jmp L_128363
.p2align 0x4
L_426932:
L_128385:
	movw 0x0(%rbp),%r10w
	shrw $0x2,%r10w
	movb %r10b,%r9b
	cmpb %r9b,%r11b
	je L_128363
	movq %r13,%r15
	jmp setTop_2
.p2align 0x4
setTop_10:
	movq %r13,%r15
	jmp setTop_2
.p2align 0x4
.long 0x490
L_128368:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r14d
	movl %r14d,0x14(%rbp)
	testl %r14d,%r14d
	jz L_128370
L_128371:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_128363
L_128372:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_128367
.text
.p2align 0x4
.globl x_1596
.hidden x_1596
x_1596:
L_128390:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128391
L_128404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128405
.p2align 0x4
.long 0x45C
L_128405:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_128391:
	movq 0x10(%rbp),%r15
loop_1365:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je up_3
	cmpq $0x2,%r14
	je L_426938
L_128392:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_128393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1596
.p2align 0x4
L_426938:
L_128398:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_426941
L_128400:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_426940
	cmpq $0x2,%r15
	je L_426939
L_128401:
	movq 0x10(%r11),%r14
	cmpq %r14,0x10(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426939:
L_128403:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426940:
L_128395:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426941:
L_128399:
	movq 0x0(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51F
L_128393:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r14d
	movl %r14d,0x18(%rbp)
	testl %r14d,%r14d
	jz L_128395
L_128396:
	movq 0x10(%rbp),%r15
	jmp loop_1365
.text
.p2align 0x4
.globl up_3
.hidden up_3
up_3:
L_128406:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128407
L_128435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128436
.p2align 0x4
.long 0x460
L_128436:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128407:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_128421
	cmpq $0x2,%r15
	je L_426949
L_128408:
	movq 0x0(%rbp),%r10
	cmpq $0x1,%r10
	je setTop_3
	cmpq $0x2,%r10
	je L_128421
L_128409:
	movq 0x10(%r15),%r9
	cmpq %r9,0x10(%r10)
	je L_128421
setTop_3:
	cmpq $0x1,0x0(%r14)
	jne L_426946
L_128413:
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x0(%rbp)
	movq %r11,%r13
continue_3:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_426945
L_128414:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_128415:
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_128416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_3
.p2align 0x4
L_426945:
L_128421:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426946:
L_128412:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426949:
L_128427:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je setTop_3
	cmpq $0x2,%r15
	je L_128421
L_128428:
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je continue_9
L_128429:
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	jne L_128412
	movq %r11,%r13
	jmp continue_3
.p2align 0x4
continue_9:
	movq %r11,%r13
	jmp continue_3
.p2align 0x4
.long 0x5B0
L_128416:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r14d
	movl %r14d,0x10(%rbp)
	testl %r14d,%r14d
	jz L_128412
L_128418:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_128421
L_128419:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_128415
.text
.p2align 0x4
.globl insert_0
.hidden insert_0
insert_0:
L_128437:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128438
L_128518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128519
.p2align 0x4
.long 0x460
L_128519:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128438:
	movq 0x8(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x58(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_128439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1C7E
L_128439:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128440
L_128516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_128517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128517
.p2align 0x4
.long 0x1CA1
L_128517:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_128440:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x28,%r12
	movl 0x8(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_128441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1C7F
L_128441:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128442
L_128514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_128515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128515
.p2align 0x4
.long 0x1CA0
L_128515:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_128442:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_128443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1C80
L_128443:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128444
L_128512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_128513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128513
.p2align 0x4
.long 0x1C9F
L_128513:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_128444:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x28,%r12
	movl 0xC(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x18(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_426960
	cmpb $0x2,%r15b
	je L_426959
L_128445:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_426959:
L_128505:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_426960:
L_128468:
	movq 0x20(%rbp),%r13
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1C81
L_128446:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C9B
L_128506:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C89
L_128469:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128470
L_128503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128504
.p2align 0x4
.long 0x1C9A
L_128504:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128470:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1C82
L_128447:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C9C
L_128507:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C8A
L_128471:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128472
L_128501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128502
.p2align 0x4
.long 0x1C99
L_128502:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128472:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%r12
	movl 0x8(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C83
L_128448:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128449
L_128466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128467
.p2align 0x4
.long 0x1C88
L_128467:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128449:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq (globalObjptr+0xF08)(%rip),%r13
	movq %r13,0x10(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x78(%rbp),%r13
	movl 0x8(%rbp),%ecx
	movq %r15,0x8(%rbp)
	movq %r13,%r15
L_128450:
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movl %ecx,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x28,%r12
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movl 0x58(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_128451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gc_0
.p2align 0x4
.long 0x1C9D
L_128508:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128509
L_128510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128511
.p2align 0x4
.long 0x1C9E
L_128511:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128509:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq (globalObjptr+0xF08)(%rip),%r13
	movq %r13,0x10(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x98(%rbp),%r13
	movl 0xC(%rbp),%ecx
	movq %r15,0x8(%rbp)
	movq %r13,%r15
	jmp L_128450
.p2align 0x4
.long 0x1C8B
L_128473:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C84
L_128451:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb 0xC0(%rbp),%r15b
	movb %r15b,0x24(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movb 0xDC(%rbp),%r15b
	movb %r15b,0x25(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128452
L_128464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128465
.p2align 0x4
.long 0x1C87
L_128465:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128452:
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x20(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl %r14d,0xC(%r15)
	movl %r14d,0x10(%r15)
	movl 0x48(%rbp),%r13d
	movl %r13d,0x14(%r15)
	movl %r14d,0x18(%r15)
	movl %r14d,0x1C(%r15)
	movzbl 0x24(%rbp),%r14d
	movzbl 0x25(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128453
.p2align 0x4
.long 0x1C85
L_128453:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x78(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1366:
	cmpq $0x3,%r15
	jnl L_426969
L_128458:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_426968
	cmpl $0x1,%r14d
	je L_426967
	cmpl $0x2,%r14d
	je L_426966
L_128459:
	movq (globalObjptr+0x4D0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426966:
L_128463:
	movq 0x8(%rbp),%r14
L_128461:
	movq 0x78(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1366
.p2align 0x4
L_426967:
L_128462:
	movq 0x0(%rbp),%r14
	jmp L_128461
.p2align 0x4
L_426968:
L_128460:
	movq $0x2,%r14
	jmp L_128461
.p2align 0x4
L_426969:
L_128454:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128455
L_128456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128457
.p2align 0x4
.long 0x1C86
L_128457:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128455:
	movq 0x78(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0xF08)(%rip),%r14
	movq %r14,0x8(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq (globalObjptr+0xF58)(%rip),%r11
	movq %r11,0x20(%r13)
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x212F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x50,%r12
	movq 0x50(%rbp),%r9
	movq %r9,0x0(%r10)
	movl 0x20(%rbp),%r9d
	movl %r9d,0x8(%r10)
	movl %r9d,0xC(%r10)
	movl 0x48(%rbp),%r8d
	movl %r8d,0x10(%r10)
	movl %r9d,0x14(%r10)
	movl %r9d,0x18(%r10)
	movl %r9d,0x1C(%r10)
	movzbl 0x25(%rbp),%r9d
	movzbl 0x24(%rbp),%r8d
	shll $0x8,%r8d
	orl %r8d,%r9d
	movl %r9d,0x20(%r10)
	movl $0x0,0x24(%r10)
	movq 0x58(%rbp),%r9
	movq %r9,0x28(%r10)
	movq 0x38(%rbp),%r9
	movq %r9,0x30(%r10)
	movq 0x30(%rbp),%r9
	movq %r9,0x38(%r10)
	movq 0x28(%rbp),%r9
	movq %r9,0x40(%r10)
	movq (globalObjptr+0xEF8)(%rip),%r9
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r9)
	movq $0x2139,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq %r9,0x0(%r8)
	movq 0xA0(%rbp),%r9
	movq %r9,0x8(%r8)
	movq $0x35,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r10,0x18(%rsp)
	addq $0x30,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x8(%rsp)
	movq %r15,0x10(%rsp)
	movq %r11,0x20(%rsp)
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x68(%rbp),%r10
	movq %r10,0x0(%r15)
	movq 0x60(%rbp),%r10
	movq %r10,0x8(%r15)
	movq %r9,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq %r11,0x20(%r15)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x21A7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq $0x21A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x0(%r15)
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C8B
L_128474:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C8B
L_128475:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128476
L_128499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128500
.p2align 0x4
.long 0x1C98
L_128500:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128476:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C8C
L_128477:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C8D
L_128478:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C8E
L_128479:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128480
L_128497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128498
.p2align 0x4
.long 0x1C97
L_128498:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128480:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x39EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movl $0x2,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_128481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x1C8F
L_128481:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128482
L_128495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128496
.p2align 0x4
.long 0x1C96
L_128496:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128482:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF08)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq %r15,0x20(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C90
L_128483:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C91
L_128484:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_128485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C92
L_128485:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128486
L_128493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128494
.p2align 0x4
.long 0x1C95
L_128494:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128486:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128487
.p2align 0x4
.long 0x1C93
L_128487:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1367:
	cmpq $0x1,%r15
	jnl L_426975
L_128492:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1367
.p2align 0x4
L_426975:
L_128488:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128489
L_128490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_128491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128491
.p2align 0x4
.long 0x1C94
L_128491:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_128489:
	movq 0x28(%rbp),%r13
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x10(%rbp),%r14
	movq 0x20(%rbp),%r15
	movl 0x8(%rbp),%ecx
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%rbp)
	jmp L_128450
.text
.p2align 0x4
.globl gc_0
.hidden gc_0
gc_0:
L_128520:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128521
L_128549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128550
.p2align 0x4
.long 0x495
L_128550:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128521:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	movl 0x0(%rbp),%r14d
	testl %r14d,%r14d
	jnz x_1599
L_128522:
x_439:
	movl 0x0(%r15),%r14d
	movl %r14d,0x0(%rbp)
	movb 0x4(%r15),%r14b
	movb %r14b,0x4(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_426978
L_128523:
	movq %r13,0x30(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_128524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426978:
L_128543:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
x_1599:
	movq %r13,%r15
	jmp x_439
.p2align 0x4
.long 0x5F0
L_128524:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128525
L_128541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128542
.p2align 0x4
.long 0x4EA
L_128542:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128525:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_426980
L_128526:
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (word_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_426980:
L_128536:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_128544:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x786
word_43:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128527
L_128534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128535
.p2align 0x4
.long 0x4F2
L_128535:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128527:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x18(%rbp)
	movl $0x3,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_128528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1
L_128537:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_386:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128545
L_128546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128547
.p2align 0x4
.long 0x452
L_128547:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128545:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x522
L_128528:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_128529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x1
bug_385:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128538
L_128539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128540
.p2align 0x4
.long 0x452
L_128540:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128538:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_128529:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movb 0x20(%rbp),%r15b
	movb %r15b,0x5(%rbp)
	movzbq %r15b,%r14
	movzbq 0x4(%rbp),%r15
	shlq $0x8,%r15
	orq %r15,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x10,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x7,%r14
	movq %r14,0x20(%rbp)
	movl $0x3,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_128530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x2B
L_128530:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128531
L_128532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128533
.p2align 0x4
.long 0x4E9
L_128533:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_128531:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD978)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xBB8)(%rip),%r15
	movq %r15,0x18(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movb $0x1,0x2C(%rbp)
	movq $0x0,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movb $0x1,0x10(%rbp)
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1600
.hidden x_1600
x_1600:
L_128551:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128552
L_128600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128601
.p2align 0x4
.long 0x453
L_128601:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_128552:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_426994
	cmpq $0x2,%r13
	je L_426993
L_128553:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2080,%r15
	je L_426991
	cmpq $0x2081,%r15
	je L_426989
	cmpq $0x2082,%r15
	je L_426987
L_128554:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_426986
L_128555:
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	leaq L_128564(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_128556+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_426986:
L_128565:
	movq %r15,0x28(%rbp)
	leaq L_128564(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426987:
L_128590:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_426988
L_128591:
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	leaq L_128564(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_128592+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_426988:
L_128593:
	movq %r15,0x28(%rbp)
	leaq L_128564(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426989:
L_128578:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_426990
L_128579:
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	leaq L_128564(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_128580+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_426990:
L_128585:
	movq %r15,0x28(%rbp)
	leaq L_128564(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426991:
L_128570:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_426992
L_128571:
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	leaq L_128564(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_128572+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_426992:
L_128573:
	movq %r15,0x28(%rbp)
	leaq L_128564(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_426993:
L_128599:
	shrq $0x2,%r14
	movb %r14b,%r13b
	movb %r13b,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426994:
L_128598:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB29
L_128556:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_426999
	cmpl $0x10,%r15d
	je L_426998
	cmpl $0x20,%r15d
	je L_426997
	cmpl $0x40,%r15d
	je L_426996
L_128557:
	movq (globalObjptr+0x18E8)(%rip),%r15
L_128558:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426996:
L_128563:
	xorb %dl,%dl
L_128560:
	movzbq %dl,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movb %dl,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426997:
L_128562:
	movb $0x1,%dl
	jmp L_128560
.p2align 0x4
L_426998:
L_128561:
	movb $0x2,%dl
	jmp L_128560
.p2align 0x4
L_426999:
L_128559:
	movb $0x3,%dl
	jmp L_128560
.p2align 0x4
.long 0x72F
L_128564:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_128558
.p2align 0x4
.long 0xB29
L_128566:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB29
L_128592:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_427003
	cmpl $0x10,%r15d
	je L_427002
	cmpl $0x20,%r15d
	je L_427001
	cmpl $0x40,%r15d
	je L_427000
	jmp L_128557
.p2align 0x4
L_427000:
L_128584:
	movb $0x7,%dl
	jmp L_128560
.p2align 0x4
L_427001:
L_128583:
	movb $0x8,%dl
	jmp L_128560
.p2align 0x4
L_427002:
L_128582:
	movb $0x9,%dl
	jmp L_128560
.p2align 0x4
L_427003:
L_128581:
	movb $0xA,%dl
	jmp L_128560
.p2align 0x4
.long 0xB29
L_128594:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB29
L_128580:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_128581
	cmpl $0x10,%r15d
	je L_128582
	cmpl $0x20,%r15d
	je L_128583
	cmpl $0x40,%r15d
	je L_128584
	jmp L_128557
.p2align 0x4
.long 0xB29
L_128586:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB29
L_128572:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_128559
	cmpl $0x10,%r15d
	je L_128561
	cmpl $0x20,%r15d
	je L_128562
	cmpl $0x40,%r15d
	je L_128563
	jmp L_128557
.p2align 0x4
.long 0xB29
L_128574:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB29
bug_387:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128567
L_128568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128569
.p2align 0x4
.long 0xB2B
L_128569:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128567:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_128558
.p2align 0x4
.long 0xB29
bug_390:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128595
L_128596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128597
.p2align 0x4
.long 0xB2B
L_128597:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128595:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_128558
.p2align 0x4
.long 0xB29
bug_389:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128587
L_128588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128589
.p2align 0x4
.long 0xB2B
L_128589:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128587:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_128558
.p2align 0x4
.long 0xB29
bug_388:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128575
L_128576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128577
.p2align 0x4
.long 0xB2B
L_128577:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128575:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_128558
.text
.p2align 0x4
.globl tabulate_31
.hidden tabulate_31
tabulate_31:
L_128602:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128603
L_128634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128635
.p2align 0x4
.long 0x458
L_128635:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128603:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_427034
L_128604:
	cmpq $0x7FFFFFFF,%rdx
	ja L_427033
L_128605:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x147F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128606
.p2align 0x4
.long 0x453
L_128606:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,%r15
L_128607:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1368:
	cmpq 0x10(%rbp),%r14
	jnl L_427032
L_128609:
	movl %r14d,%r13d
	movq 0x0(%rbp),%r11
	movq %r11,%r10
	andq $0x7,%r10
	cmpq $0x1,%r10
	je L_427031
	cmpq $0x2,%r10
	je L_427030
	cmpq $0x3,%r10
	je L_427029
	cmpq $0x5,%r10
	je L_427026
	cmpq $0x6,%r10
	je L_427021
	cmpq $0x7,%r10
	je L_427017
L_128610:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x1C14,%r10
	je L_427016
L_128613:
	movslq %r13d,%r10
	imulq $0x18,%r10
	movq 0x0(%r11),%r13
	movb 0x0(%r13,%r10,1),%dl
L_128612:
	movb %dl,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_1368
.p2align 0x4
L_427016:
L_128611:
	movslq %r13d,%r10
	imulq $0x18,%r10
	movq 0x0(%r11),%r13
	movb 0x0(%r13,%r10,1),%dl
	jmp L_128612
.p2align 0x4
L_427017:
L_128627:
	movq %r11,%r10
	shrq $0x13,%r10
	movb %r10b,%r9b
	movq %r11,%r10
	shrq $0xB,%r10
	movb %r10b,%r8b
	shrq $0x3,%r11
	movb %r11b,%r10b
	cmpl $0x0,%r13d
	je L_427020
	cmpl $0x1,%r13d
	je L_427019
	cmpl $0x2,%r13d
	je L_427018
L_128628:
	movq (globalObjptr+0x4D0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427018:
L_128631:
	movb %r8b,%dl
	jmp L_128612
.p2align 0x4
L_427019:
L_128630:
	movb %r10b,%dl
	jmp L_128612
.p2align 0x4
L_427020:
	movb %r9b,%dl
	jmp L_128612
.p2align 0x4
L_427021:
L_128621:
	movq %r11,%r10
	shrq $0x13,%r10
	movb %r10b,%r9b
	movq %r11,%r10
	shrq $0xB,%r10
	movb %r10b,%r8b
	shrq $0x3,%r11
	movb %r11b,%r10b
	cmpl $0x0,%r13d
	je L_427025
	cmpl $0x1,%r13d
	je L_427024
	cmpl $0x2,%r13d
	je L_427023
	cmpl $0x3,%r13d
	je L_427022
L_128622:
	movq (globalObjptr+0x508)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427022:
L_128626:
	movb %r8b,%dl
	jmp L_128612
.p2align 0x4
L_427023:
	movb %r9b,%dl
	jmp L_128612
.p2align 0x4
L_427024:
L_128624:
	movb %r10b,%dl
	jmp L_128612
.p2align 0x4
L_427025:
L_128623:
	movb $0xB,%dl
	jmp L_128612
.p2align 0x4
L_427026:
L_128617:
	movq %r11,%r10
	shrq $0xB,%r10
	movb %r10b,%r9b
	shrq $0x3,%r11
	movb %r11b,%r10b
	cmpl $0x0,%r13d
	je L_427028
	cmpl $0x1,%r13d
	je L_427027
L_128618:
	movq (globalObjptr+0x4A8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427027:
L_128620:
	movb %r10b,%dl
	jmp L_128612
.p2align 0x4
L_427028:
	movb %r9b,%dl
	jmp L_128612
.p2align 0x4
L_427029:
L_128616:
	shrq $0x3,%r11
	movb %r11b,%dl
	jmp L_128612
.p2align 0x4
L_427030:
L_128615:
	shrq $0x3,%r11
	movb %r11b,%dl
	jmp L_128612
.p2align 0x4
L_427031:
L_128614:
	movq (globalObjptr+0x4A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427032:
L_128608:
	movq $0xB13,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427033:
L_128632:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427034:
L_128633:
	movq (globalObjptr+0xC58)(%rip),%r15
	jmp L_128607
.text
.p2align 0x4
.globl primApp_7
.hidden primApp_7
primApp_7:
L_128636:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128637
L_128671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128672
.p2align 0x4
.long 0x63D
L_128672:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128637:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_128638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xAA2
L_128638:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128639
L_128669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_128670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128670
.p2align 0x4
.long 0xAA5
L_128670:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_128639:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_128640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128640
.p2align 0x4
.long 0x1861
L_128640:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1369:
	cmpq $0x2,%r15
	jnl L_427039
L_128664:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_427038
	cmpl $0x1,%r14d
	je L_427037
L_128665:
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427037:
L_128668:
	movq 0x8(%rbp),%r14
L_128667:
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1369
.p2align 0x4
L_427038:
L_128666:
	movq 0x10(%rbp),%r14
	jmp L_128667
.p2align 0x4
L_427039:
L_128641:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128642
L_128662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_128663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128663
.p2align 0x4
.long 0x4AE
L_128663:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_128642:
	movq 0x20(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2127,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x50(%rbp)
	movq %r14,0x8(%r10)
	addq $0x20,%r12
	movq %r15,0x0(%r10)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r10)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x70(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_128643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1CA2
L_128643:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x80(%rbp)
	movq $0x3,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_128644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1CA2
L_128644:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x80(%rbp)
	movq $0x1,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_128645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1CA2
L_128645:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128646
L_128660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_128661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128661
.p2align 0x4
.long 0x1CA7
L_128661:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_128646:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_128647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1CA3
L_128647:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_128648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1CA4
L_128648:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_128649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1CA5
L_128649:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128650
L_128658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_128659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128659
.p2align 0x4
.long 0x1CA6
L_128659:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_128650:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x39EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movl $0x2,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_128651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0xC9B
L_128651:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128652
L_128656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_128657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128657
.p2align 0x4
.long 0xCBE
L_128657:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_128652:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_128653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128653
.p2align 0x4
.long 0x1B05
L_128653:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1370:
	cmpq $0x1,%r15
	jnl L_427044
L_128655:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1370
.p2align 0x4
L_427044:
L_128654:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl heapCheck_0
.hidden heapCheck_0
heapCheck_0:
L_128673:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128674
L_128782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_128783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128783
.p2align 0x4
.long 0x1CC0
L_128783:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_128674:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_128675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_0
.p2align 0x4
.long 0x1CA8
L_128675:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128676
L_128780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_128781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128781
.p2align 0x4
.long 0x1CBF
L_128781:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_128676:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_128677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1CA9
L_128677:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128678
L_128778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_128779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128779
.p2align 0x4
.long 0x1CBE
L_128779:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_128678:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_128679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128679
.p2align 0x4
.long 0x1CAA
L_128679:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1371:
	cmpq $0x2,%r15
	jnl L_427050
L_128773:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_427049
	cmpl $0x1,%r14d
	je L_427048
L_128774:
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427048:
L_128777:
	movq (globalWord64+0x138)(%rip),%r14
L_128776:
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1371
.p2align 0x4
L_427049:
L_128775:
	movq (globalWord64+0xFD8)(%rip),%r14
	jmp L_128776
.p2align 0x4
L_427050:
L_128680:
	movq 0x58(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_427051
L_128681:
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (word_44+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427051:
L_128768:
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1CAB
word_44:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128682
L_128766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_128767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128767
.p2align 0x4
.long 0x1CBD
L_128767:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_128682:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0xA,0x10(%r14)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427053
L_128683:
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (word_45+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427053:
L_128761:
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_128769:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1CAC
word_45:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128684
L_128759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_128760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128760
.p2align 0x4
.long 0x1CBC
L_128760:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_128684:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x98,%rbp
	leaq (L_128685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
.long 0x1
L_128762:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_392:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128770
L_128771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128772
.p2align 0x4
.long 0x452
L_128772:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128770:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CAD
L_128685:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128686
L_128757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_128758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128758
.p2align 0x4
.long 0x1CBB
L_128758:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_128686:
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_128687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128687
.p2align 0x4
.long 0x1CAE
L_128687:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1372:
	cmpq $0x1,%r15
	jnl L_427057
L_128756:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1372
.p2align 0x4
L_427057:
L_128688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128689
L_128754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_128755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128755
.p2align 0x4
.long 0x1CBA
L_128755:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_128689:
	movq 0x40(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_128690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
.long 0x1
bug_391:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128763
L_128764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128765
.p2align 0x4
.long 0x452
L_128765:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128763:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CAF
L_128690:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128691
L_128752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_128753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128753
.p2align 0x4
.long 0x1CB9
L_128753:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_128691:
	movl 0x30(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_427063
L_128692:
	movl 0x18(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_427062
L_128693:
	movq 0x28(%rbp),%r11
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x10(%rbp)
	movl 0x8(%rbp),%r11d
	testl %r11d,%r11d
	jz L_427061
L_128700:
L_128697:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %r14,0x0(%rbp)
	addq $0x30,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427061:
L_128694:
	movq %r10,0x50(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x50,%rbp
	leaq (L_128695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_427062:
L_128701:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x70,%rbp
	leaq (L_128702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_427063:
L_128717:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x70,%rbp
	leaq (L_128718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x18AE
L_128695:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128696
L_128698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_128699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128699
.p2align 0x4
.long 0x1CB0
L_128699:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_128696:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x28,%r12
	movl 0x18(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r14)
	movq $0x1,%r13
	movq (globalObjptr+0xF58)(%rip),%r15
	jmp L_128697
.p2align 0x4
.long 0x1CB1
L_128702:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128703
L_128715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_128716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128716
.p2align 0x4
.long 0x1CB2
L_128716:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_128703:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalWord64+0xFC0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalWord64+0xFA8)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_128704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
.long 0x1CB3
L_128718:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128719
L_128750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_128751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128751
.p2align 0x4
.long 0x1CB8
L_128751:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_128719:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF58)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x90(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0x51E0)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalWord64+0x120)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq $0xB,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_128720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
.long 0x45A
L_128704:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128705
L_128713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128714
.p2align 0x4
.long 0x4B2
L_128714:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128705:
	movq 0x20(%rbp),%r11
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x28(%rbp)
	movl 0x8(%rbp),%r11d
	testl %r11d,%r11d
	jz L_427068
L_128712:
L_128709:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %r14,0x0(%rbp)
	addq $0x30,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427068:
L_128706:
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x38,%rbp
	leaq (L_128707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1CB4
L_128720:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128721
L_128748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_128749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128749
.p2align 0x4
.long 0x1CB7
L_128749:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_128721:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_128723
L_128745:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427072
L_128746:
	movl $0x1,%ecx
L_128724:
	movq 0x28(%rbp),%r11
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x38(%rbp)
	testl %ecx,%ecx
	jz L_427071
L_128744:
L_128728:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x30,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15)
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427070
L_128729:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427070:
L_128730:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalWord64+0xFC0)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq (globalWord64+0xFA8)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq $0x11,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_128731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
L_427071:
L_128725:
	movq %r10,0x70(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x70,%rbp
	leaq (L_128726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_427072:
L_128723:
	xorl %ecx,%ecx
	jmp L_128724
.p2align 0x4
.long 0x4E3
L_128707:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128708
L_128710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128711
.p2align 0x4
.long 0x4F3
L_128711:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128708:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x28,%r12
	movl 0x20(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r14)
	movq $0x1,%r13
	movq (globalObjptr+0xF58)(%rip),%r15
	jmp L_128709
.p2align 0x4
.long 0x2B
L_128731:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128732
L_128740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128741
.p2align 0x4
.long 0x4B2
L_128741:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128732:
	movq 0x10(%rbp),%r11
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x28(%rbp)
	movl 0x8(%rbp),%r11d
	testl %r11d,%r11d
	jz L_427076
L_128739:
L_128736:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %r14,0x0(%rbp)
	addq $0x30,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427076:
L_128733:
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x38,%rbp
	leaq (L_128734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1CB5
L_128726:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128727
L_128742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_128743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128743
.p2align 0x4
.long 0x1CB6
L_128743:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_128727:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x28,%r12
	movl 0xC(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r14)
	movq $0x1,%r13
	movq (globalObjptr+0xF58)(%rip),%r15
	jmp L_128728
.p2align 0x4
.long 0x71E
L_128734:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128735
L_128737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128738
.p2align 0x4
.long 0x78A
L_128738:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128735:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x28,%r12
	movl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r14)
	movq $0x1,%r13
	movq (globalObjptr+0xF58)(%rip),%r15
	jmp L_128736
.text
.p2align 0x4
.globl concat_4
.hidden concat_4
concat_4:
L_128784:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128785
L_128828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128829
.p2align 0x4
.long 0x452
L_128829:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128785:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_427095
L_128786:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_128787:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427094
.p2align 0x4,,0x7
L_128788:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF43,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2997,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427080
L_128789:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_128787
.p2align 0x4
L_427080:
L_128790:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_128791:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427093
.p2align 0x4,,0x7
L_128792:
	movq $0x2997,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427081
L_128793:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_128791
.p2align 0x4
L_427081:
L_128794:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_427088
L_128795:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_128796:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_427082
L_128797:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_128796
.p2align 0x4
L_427082:
L_128798:
	testq %r15,%r15
	jz L_427087
L_128799:
	cmpq $0x7FFFFFFF,%r15
	ja L_427086
L_128800:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128801
.p2align 0x4
.long 0x49C
L_128801:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_128802:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1373:
	cmpq 0x18(%rbp),%r14
	jnl L_427085
.p2align 0x4,,0x7
loop_1374:
	cmpq 0x0(%r11),%r13
	jl L_427084
L_128805:
	cmpq $0x1,%r10
	je L_427083
L_128806:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_1374
.p2align 0x4
L_427083:
L_128807:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427084:
L_128808:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1373
.p2align 0x4
L_427085:
L_128803:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427086:
L_128810:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427087:
L_128811:
	movq (globalObjptr+0x638)(%rip),%r14
	xchgq %r14,%r15
	jmp L_128802
.p2align 0x4
L_427088:
L_128812:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%rdx
	movq %r13,0x10(%rbp)
	je L_427092
L_128813:
	testq %rdx,%rdx
	jz L_427091
L_128814:
	cmpq $0x7FFFFFFF,%rdx
	ja L_128810
L_128815:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128816
.p2align 0x4
.long 0x4A5
L_128816:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_128817:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1375:
	cmpq 0x18(%rbp),%r14
	jnl L_427089
L_128819:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1375
.p2align 0x4
L_427089:
L_128818:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427091:
L_128821:
	movq (globalObjptr+0x640)(%rip),%r15
	jmp L_128817
.p2align 0x4
L_427092:
L_128822:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427093:
L_128823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128824
.p2align 0x4
.long 0x45C
L_128824:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_128792
.p2align 0x4
L_427094:
L_128825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128826
.p2align 0x4
.long 0x45C
L_128826:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_128788
.p2align 0x4
L_427095:
L_128827:
	movq (globalObjptr+0x648)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl maxPath_0
.hidden maxPath_0
maxPath_0:
L_128830:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_128913
L_128831:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427102
L_128832:
	movq 0x8(%rbp),%r14
	movq 0x58(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r13
	movq 0x30(%r14),%r11
	movq %r11,0x28(%rbp)
	movslq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_128834
L_128835:
	movq 0x0(%r11,%r14,8),%r10
	cmpq $0x1,%r10
	jne L_427100
L_128837:
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_128834
L_128839:
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x38(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_427098
L_128841:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_427097
L_128842:
	movq 0x8(%r9),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq $0x1,0x48(%rbp)
L_128843:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_128844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_427097:
L_128912:
	movq $0x1,%r15
L_128886:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_128887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_427098:
L_128834:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427100:
L_128836:
	movq 0x0(%r10),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427102:
L_128913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128914
.p2align 0x4
.long 0x495
L_128914:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_128832
.p2align 0x4
.long 0xBBE
L_128844:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128845
L_128910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128911
.p2align 0x4
.long 0x1CC2
L_128911:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128845:
	movq 0x50(%rbp),%r15
	andq $0x1,%r15
	jnz L_427104
L_128846:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427104:
L_128876:
	movq 0x50(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_128834
L_128878:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_427105
L_128879:
	movl %r14d,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_128880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
L_427105:
L_128907:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_427106
L_128908:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_128843
.p2align 0x4
L_427106:
L_128909:
	movq 0x48(%rbp),%r15
	jmp L_128886
.p2align 0x4
.long 0x14C3
L_128887:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128888
L_128889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128890
.p2align 0x4
.long 0x5F4
L_128890:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128888:
	movq $0x1B51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x30(%rbp),%r11
	movq %r15,0x0(%r13,%r11,8)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_128847:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_128848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBBE
L_128880:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128881
L_128905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128906
.p2align 0x4
.long 0x1CC1
L_128906:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128881:
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	movq 0x48(%rbp),%r13
	andq %r13,%r15
	andq $0x1,%r15
	jz L_427113
L_128882:
	cmpq %r13,%r14
	jl L_427111
L_128883:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_427110
L_128884:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_128843
.p2align 0x4
L_427110:
L_128885:
	movq %r14,%r15
	jmp L_128886
.p2align 0x4
L_427111:
L_128891:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_427112
L_128892:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	jmp L_128843
.p2align 0x4
L_427112:
L_128893:
	movq 0x48(%rbp),%r15
	jmp L_128886
.p2align 0x4
L_427113:
L_128894:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128895
L_128903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128904
.p2align 0x4
.long 0x1CC1
L_128904:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128895:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x50(%rbp),%rsi
	movq %rsi,%r14
	xchgq %r14,%rsi
	movq 0x48(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_128896:
	cmpl $0x0,%eax
	jg L_427115
L_128897:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_427114
L_128898:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_128843
.p2align 0x4
L_427114:
L_128899:
	movq %r14,%r15
	jmp L_128886
.p2align 0x4
L_427115:
L_128900:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_427116
L_128901:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	jmp L_128843
.p2align 0x4
L_427116:
L_128902:
	movq 0x48(%rbp),%r15
	jmp L_128886
.p2align 0x4
.long 0x4B0
L_128848:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF378)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_128849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_128849:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_128850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_128850:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128851
L_128874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128875
.p2align 0x4
.long 0x4AF
L_128875:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_128851:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_128852:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_427122
L_128854:
	cmpq $0x1,%r14
	je L_427119
L_128855:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_128852
.p2align 0x4
L_427119:
L_128856:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128857
L_128872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128873
.p2align 0x4
.long 0x4E7
L_128873:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128857:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427120
L_128858:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_215:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_427120:
L_128871:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_215
.p2align 0x4
L_427122:
L_128853:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_213:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427126
L_128859:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_128860:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427125
.p2align 0x4,,0x7
L_128861:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427124
L_128862:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_128860
.p2align 0x4
L_427124:
L_128864:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427125:
L_128868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128869
.p2align 0x4
.long 0x45C
L_128869:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_128861
.p2align 0x4
L_427126:
L_128870:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_128864
.p2align 0x4
.long 0x1
bug_393:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128865
L_128866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128867
.p2align 0x4
.long 0x452
L_128867:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128865:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl translateOperand_0
.hidden translateOperand_0
translateOperand_0:
L_128915:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128916
L_129020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_129021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129021
.p2align 0x4
.long 0x460
L_129021:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128916:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq 0x28(%r15),%r11
	movq %r11,0x10(%rbp)
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq %r9,0x18(%rbp)
	movq 0x8(%r15),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,%r9
	andq $0x3,%r9
	cmpq $0x1,%r9
	je L_427136
	cmpq $0x2,%r9
	je L_427135
	cmpq $0x3,%r9
	je L_427134
L_128917:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r9
	shrq $0x1,%r9
	cmpq $0x108B,%r9
	je L_427132
	cmpq $0x108C,%r9
	je L_427131
	cmpq $0x108D,%r9
	je L_427130
	cmpq $0x108E,%r9
	je L_427129
	cmpq $0x108F,%r9
	je L_427128
L_128918:
	movq %r11,0x10(%rbp)
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r9
	movq %r9,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_427128:
L_129011:
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_129012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_427129:
L_129006:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_129007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_427130:
L_129005:
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp constOperand_0
.p2align 0x4
L_427131:
L_128938:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_128939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_427132:
L_128924:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r11d
	shll $0x1,%r11d
	orl $0x1,%r11d
	movl %r11d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427133
L_128925:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_128926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427133:
L_128933:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427134:
L_129019:
	movq %r10,0x8(%rbp)
	shrq $0x2,%r15
	movb %r15b,%r14b
	movb %r14b,0x0(%rbp)
	jmp runtimeOp_0
.p2align 0x4
L_427135:
L_129018:
	movq $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427136:
L_129017:
	movq (globalObjptr+0x7538)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_128919:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DB,%r15
	je L_427139
L_128921:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_427138
L_128922:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427138:
L_128923:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427139:
L_128920:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x63A
L_129012:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
.long 0x2B
L_129007:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129008
L_129009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129010
.p2align 0x4
.long 0x2C
L_129010:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129008:
	movq $0x1EBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A8
L_128939:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128940
L_129003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129004
.p2align 0x4
.long 0x4B1
L_129004:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128940:
	movq 0x38(%rbp),%r15
	cmpq $0x3,%r15
	je L_128963
L_128941:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_128942
L_128961:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_128963
	cmpq $0xF5A,%r14
	je L_128963
	cmpq $0xF5B,%r14
	je L_128963
	cmpq $0xF5D,%r14
	je L_128963
	cmpq $0xF5E,%r14
	je L_128963
	cmpq $0xF5F,%r14
	je L_427145
	cmpq $0xF60,%r14
	je L_427144
L_128942:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x6,%r15
	je L_427142
L_128943:
	andq $0x3,%r14
	jnz L_128944
L_128956:
L_128944:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_128945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427142:
L_128957:
	shrq $0x3,%r14
	movb %r14b,%r13b
	testb %r13b,%r13b
	jnz L_427143
L_128958:
	movq (globalObjptr+0x4FB0)(%rip),%r15
L_128959:
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp get_101
.p2align 0x4
L_427143:
L_128960:
	movq (globalWord64+0xF30)(%rip),%r15
	jmp L_128959
.p2align 0x4
L_427144:
L_128963:
	movq $0x1EB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427145:
L_128968:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_128969:
	cmpq $0x3,%r15
	je L_427160
L_128970:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_128942
L_128971:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_427157
	cmpq $0xF5A,%r14
	je L_427155
	cmpq $0xF5B,%r14
	je L_427153
	cmpq $0xF5D,%r14
	je L_427151
	cmpq $0xF5E,%r14
	je L_427149
	cmpq $0xF5F,%r14
	je L_427148
	cmpq $0xF60,%r14
	je L_427146
	jmp L_128942
.p2align 0x4
L_427146:
L_128993:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128963
L_128995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128996
.p2align 0x4
.long 0x733
L_128996:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_128963
.p2align 0x4
L_427148:
L_128992:
	movq 0x0(%r15),%r15
	jmp L_128969
.p2align 0x4
L_427149:
L_128988:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128963
L_128990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128991
.p2align 0x4
.long 0x733
L_128991:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_128963
.p2align 0x4
L_427151:
L_128984:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128963
L_128986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128987
.p2align 0x4
.long 0x733
L_128987:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_128963
.p2align 0x4
L_427153:
L_128980:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128963
L_128982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128983
.p2align 0x4
.long 0x733
L_128983:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_128963
.p2align 0x4
L_427155:
L_128976:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128963
L_128978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128979
.p2align 0x4
.long 0x733
L_128979:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_128963
.p2align 0x4
L_427157:
L_128972:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128963
L_128974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128975
.p2align 0x4
.long 0x733
L_128975:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_128963
.p2align 0x4
L_427160:
L_128997:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128963
L_128999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129000
.p2align 0x4
.long 0x733
L_129000:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_128963
.p2align 0x4
.long 0x2B
L_128926:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_128927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_128934:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xAA1
L_129013:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129014
L_129015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_129016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129016
.p2align 0x4
.long 0x165E
L_129016:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_129014:
	movq $0x1EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAA1
L_128945:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_128946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x71E
L_128927:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x38(%rbp)
	movq $0x3,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_128928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
bug_394:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128935
L_128936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128937
.p2align 0x4
.long 0x452
L_128937:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128935:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAA4
L_128946:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_128947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x71F
L_128928:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_128929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xF41
L_128947:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_128948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x490
L_128929:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128930
L_128931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128932
.p2align 0x4
.long 0x5E6
L_128932:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128930:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x653
L_128948:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128949
L_128954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128955
.p2align 0x4
.long 0x654
L_128955:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128949:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
L_128950:
	movq 0x30(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_427174
L_128952:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF51,%r13
	jne L_427173
L_128953:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427173:
	movq %r14,%r15
L_128951:
	movq $0x1EBF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427174:
	xchgq %r14,%r15
	jmp L_128951
.text
.p2align 0x4
.globl runtimeOp_0
.hidden runtimeOp_0
runtimeOp_0:
L_129022:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_129108
L_129023:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427204
L_129024:
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_427176
	jmp *jumpTable_267(,%rax,8)
.data
.p2align 0x4
jumpTable_267:
.quad L_427203,L_427202,L_427201,L_427200,L_427199,L_427198,L_427197,L_427196,L_427195,L_427177
.text
.p2align 0x4
L_427176:
L_129025:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427177:
L_129107:
	movq (globalObjptr+0x2498)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
L_129027:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_427178
	jmp *jumpTable_268(,%rax,8)
.data
.p2align 0x4
jumpTable_268:
.quad L_427193,L_427191,L_427190,L_427188,L_427186,L_129028,L_427183,L_427182,L_427180,L_427179
.text
.p2align 0x4
L_427178:
L_129028:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_427179:
	movq %r14,%r15
L_129033:
	movq $0x1EB7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x3,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427180:
L_129087:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427181
L_129088:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_129089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427181:
L_129093:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427182:
	movq %r14,%r15
	jmp L_129033
.p2align 0x4
L_427183:
L_129075:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427184
L_129076:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_129077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427184:
L_129081:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427186:
L_129064:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427187
L_129065:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_129066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427187:
L_129070:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427188:
L_129053:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427189
L_129054:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_129055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427189:
L_129059:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427190:
	movq %r14,%r15
	jmp L_129033
.p2align 0x4
L_427191:
L_129041:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427192
L_129042:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_129043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427192:
L_129047:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427193:
L_129029:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427194
L_129030:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_129031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427194:
L_129036:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427195:
L_129106:
	movq (globalObjptr+0x2448)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_129027
.p2align 0x4
L_427196:
L_129105:
	movq (globalObjptr+0x2450)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_129027
.p2align 0x4
L_427197:
L_129104:
	movq (globalObjptr+0x2490)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_129027
.p2align 0x4
L_427198:
L_129103:
	movq $0x5,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427199:
L_129102:
	movq (globalObjptr+0x2488)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_129027
.p2align 0x4
L_427200:
L_129101:
	movq (globalObjptr+0x2460)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_129027
.p2align 0x4
L_427201:
L_129100:
	movq (globalObjptr+0x2468)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_129027
.p2align 0x4
L_427202:
L_129099:
	movq (globalObjptr+0x2480)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_129027
.p2align 0x4
L_427203:
L_129026:
	movq (globalObjptr+0x2470)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_129027
.p2align 0x4
L_427204:
L_129108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_129109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129109
.p2align 0x4
.long 0x495
L_129109:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_129024
.p2align 0x4
.long 0x2B
L_129089:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129090
L_129091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129092
.p2align 0x4
.long 0x2C
L_129092:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129090:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_129033
.p2align 0x4
.long 0x1
L_129094:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_129077:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129078
L_129079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129080
.p2align 0x4
.long 0x2C
L_129080:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129078:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	jmp L_129033
.p2align 0x4
.long 0x1
L_129082:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_129066:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129067
L_129068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129069
.p2align 0x4
.long 0x2C
L_129069:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129067:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_129033
.p2align 0x4
.long 0x1
L_129071:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_129055:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129056
L_129057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129058
.p2align 0x4
.long 0x2C
L_129058:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129056:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_129033
.p2align 0x4
.long 0x1
L_129060:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_129043:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129044
L_129045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129046
.p2align 0x4
.long 0x2C
L_129046:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129044:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_129033
.p2align 0x4
.long 0x1
L_129048:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_129031:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129032
L_129034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129035
.p2align 0x4
.long 0x2C
L_129035:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129032:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_129033
.p2align 0x4
.long 0x1
L_129037:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_400:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129095
L_129096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129097
.p2align 0x4
.long 0x452
L_129097:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129095:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_399:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129083
L_129084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129085
.p2align 0x4
.long 0x452
L_129085:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129083:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_398:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129072
L_129073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129074
.p2align 0x4
.long 0x452
L_129074:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129072:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_397:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129061
L_129062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129063
.p2align 0x4
.long 0x452
L_129063:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129061:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_396:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129049
L_129050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129051
.p2align 0x4
.long 0x452
L_129051:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129049:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_395:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129038
L_129039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129040
.p2align 0x4
.long 0x452
L_129040:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129038:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl unfoldiP_0
.hidden unfoldiP_0
unfoldiP_0:
L_129110:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_129111
L_129181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_129182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129182
.p2align 0x4
.long 0x458
L_129182:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_129111:
	movq 0x8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_427250
L_129112:
	cmpq $0x7FFFFFFF,%rdx
	ja L_427249
L_129113:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x141D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_129114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129114
.p2align 0x4
.long 0x458
L_129114:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,0x10(%rbp)
L_129115:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1376:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427248
.p2align 0x4,,0x7
L_129116:
	movq 0x8(%rbp),%r15
	cmpq %r15,0x18(%rbp)
	jnl L_427247
L_129118:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_427246
L_129119:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x203E,%rax
	cmpq $0xF,%rax
	ja L_427218
	jmp *jumpTable_269(,%rax,8)
.data
.p2align 0x4
jumpTable_269:
.quad L_427245,L_427244,L_427243,L_427242,L_427241,L_427238,L_427237,L_427234,L_427232,L_427231,L_427228,L_427227,L_427224,L_427223,L_427222,L_427221
.text
.p2align 0x4
L_427218:
L_129120:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427220
	cmpq $0xF66,%r15
	je L_427219
L_129121:
	movq 0x0(%r11),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
.p2align 0x4,,0x7
L_129122:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_1376
.p2align 0x4
L_427219:
L_129124:
	movq 0x0(%r11),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129122
.p2align 0x4
L_427220:
L_129123:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_129122
.p2align 0x4
L_427221:
L_129170:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_129171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_427222:
L_129164:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_129165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_427223:
L_129163:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	jmp L_129122
.p2align 0x4
L_427224:
L_129159:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427226
	cmpq $0xF66,%r15
	je L_427225
L_129160:
	movq 0x0(%r11),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129122
.p2align 0x4
L_427225:
L_129162:
	movq 0x0(%r11),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129122
.p2align 0x4
L_427226:
L_129161:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_129122
.p2align 0x4
L_427227:
L_129158:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	jmp L_129122
.p2align 0x4
L_427228:
L_129154:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427230
	cmpq $0xF66,%r15
	je L_427229
L_129155:
	movq 0x0(%r11),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129122
.p2align 0x4
L_427229:
L_129157:
	movq 0x0(%r11),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129122
.p2align 0x4
L_427230:
L_129156:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_129122
.p2align 0x4
L_427231:
L_129153:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r14
	movq 0x0(%r13,%r14,8),%r13
	movq %r13,%r15
	jmp L_129122
.p2align 0x4
L_427232:
L_129150:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427233
L_129151:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_129122
.p2align 0x4
L_427233:
L_129152:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427234:
L_129146:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x18(%rbp),%r15
	movl %r15d,%r11d
	cmpl $0x0,%r11d
	je L_427236
	cmpl $0x1,%r11d
	je L_427235
L_129147:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427235:
L_129149:
	movq %r13,%r15
	jmp L_129122
.p2align 0x4
L_427236:
	movq %r14,%r15
	jmp L_129122
.p2align 0x4
L_427237:
L_129141:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_129142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_427238:
L_129137:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427240
	cmpq $0xF66,%r15
	je L_427239
L_129138:
	movq 0x0(%r11),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129122
.p2align 0x4
L_427239:
L_129140:
	movq 0x0(%r11),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129122
.p2align 0x4
L_427240:
L_129139:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_129122
.p2align 0x4
L_427241:
L_129135:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_129136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_427242:
L_129134:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	jmp L_129122
.p2align 0x4
L_427243:
L_129133:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_129122
.p2align 0x4
L_427244:
L_129126:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_129127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_427245:
L_129125:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	jmp L_129122
.p2align 0x4
L_427246:
L_129176:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427247:
L_129117:
	movq 0x10(%rbp),%r15
	movq $0x903,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427248:
L_129177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129178
.p2align 0x4
.long 0xE7E
L_129178:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_129116
.p2align 0x4
L_427249:
L_129179:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427250:
L_129180:
	movq (globalObjptr+0x490)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_129115
.p2align 0x4
.long 0x1CC3
L_129171:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_427253
L_129173:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427252
L_129174:
	movq 0x0(%r14),%r15
	jmp L_129122
.p2align 0x4
L_427252:
L_129132:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427253:
L_129172:
	movq 0x0(%r15),%r15
	jmp L_129122
.p2align 0x4
.long 0x1CC3
L_129165:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_427255
L_129167:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_129132
L_129168:
	movq 0x0(%r14),%r15
	jmp L_129122
.p2align 0x4
L_427255:
L_129166:
	movq 0x0(%r15),%r15
	jmp L_129122
.p2align 0x4
.long 0x1CC3
L_129142:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DC,%r14
	jne L_129132
L_129143:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_129132
L_129144:
	movq 0x0(%r14),%r15
	jmp L_129122
.p2align 0x4
.long 0x1CC3
L_129136:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_129122
.p2align 0x4
.long 0x1CC3
L_129127:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_427259
L_129129:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_129132
L_129130:
	movq 0x0(%r14),%r15
	jmp L_129122
.p2align 0x4
L_427259:
L_129128:
	movq 0x0(%r15),%r15
	jmp L_129122
.text
.p2align 0x4
.globl parallelMove_0
.hidden parallelMove_0
parallelMove_0:
L_129183:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_129184
L_129318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129319
.p2align 0x4
.long 0x45C
L_129319:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_129184:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_129186
L_129187:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_427280
L_129189:
	cmpl %r13d,%r11d
	jne L_129191
L_129192:
	cmpl $0x0,%r13d
	jl L_427278
L_129193:
	movq $0x1,0x10(%rbp)
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1377:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427277
.p2align 0x4,,0x7
L_129194:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_427260
L_129314:
	movl %r15d,%r14d
	incl %r14d
	movslq %r15d,%r13
	movl %r14d,0x3C(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r11
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x23BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	jmp loop_1377
.p2align 0x4
L_427260:
L_129195:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_427261
L_129196:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_129197:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_129198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
L_427261:
L_129313:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r11
	movq %r11,%r15
	xchgq %r13,%r14
L_129226:
	cmpq $0x1,%r15
	je L_427266
L_129227:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x40(%rbp)
	testl %ecx,%ecx
	jnz L_427263
L_129228:
	cmpq $0x1,%r13
	je L_427262
L_129229:
	movq %r14,0x58(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
L_129230:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_129231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_427262:
L_129262:
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_129236:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_129237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
L_427263:
L_129263:
	movq %r14,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x38(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x58(%rbp)
L_129203:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_427264
L_129204:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_129205:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_129206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_427264:
L_129211:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_427265
L_129212:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_129213:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_129214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_427265:
L_129219:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_129220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
L_427266:
L_129264:
	cmpq $0x1,%r14
	je L_427276
L_129265:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129266:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427275
.p2align 0x4,,0x7
L_129267:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427267
L_129268:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129266
.p2align 0x4
L_427267:
L_129269:
	movq %r15,0x0(%rbp)
L_129270:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427274
L_129271:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_129272:
	incl %ecx
	jo L_427273
L_129274:
	cmpq $0x1,%r15
	je L_427268
L_129275:
	movq 0x8(%r15),%r15
	jmp L_129272
.p2align 0x4
L_427268:
L_129276:
L_129277:
	movslq %ecx,%rdx
	movq %rdx,0x8(%rbp)
	testq %rdx,%rdx
	jz L_427272
L_129278:
	cmpq $0x7FFFFFFF,%rdx
	ja L_427271
L_129279:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_129280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129280
.p2align 0x4
.long 0x458
L_129280:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
L_129281:
	movq 0x0(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1378:
	cmpq 0x8(%rbp),%r14
	jnl L_427270
L_129283:
	cmpq $0x1,%r13
	je L_427269
L_129284:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1378
.p2align 0x4
L_427269:
L_129285:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427270:
L_129282:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427271:
L_129286:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427272:
L_129287:
	movq (globalObjptr+0xD38)(%rip),%r15
	jmp L_129281
.p2align 0x4
L_427273:
L_129273:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427274:
L_129288:
	xorl %ecx,%ecx
	jmp L_129277
.p2align 0x4
L_427275:
L_129289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129290
.p2align 0x4
.long 0x45C
L_129290:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129267
.p2align 0x4
L_427276:
L_129291:
	movq $0x1,0x0(%rbp)
	jmp L_129270
.p2align 0x4
L_427277:
L_129315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129316
.p2align 0x4
.long 0x635
L_129316:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_129194
.p2align 0x4
L_427278:
L_129191:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427280:
L_129186:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x913
L_129198:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129199
L_129311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_129312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129312
.p2align 0x4
.long 0x9A8
L_129312:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_129199:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427284
L_129200:
	movq $0x23BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_427283
L_129201:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_129197
.p2align 0x4
L_427283:
L_129202:
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_129203
.p2align 0x4
L_427284:
L_129306:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_427285
L_129307:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_129197
.p2align 0x4
L_427285:
L_129308:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_427286
L_129309:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_129203
.p2align 0x4
L_427286:
L_129310:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
	jmp L_129226
.p2align 0x4
.long 0x1CC6
L_129231:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129232
L_129260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_129261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129261
.p2align 0x4
.long 0x1CCA
L_129261:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_129232:
	movl 0x78(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427289
L_129233:
	movq $0x23BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_427288
L_129234:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_129230
.p2align 0x4
L_427288:
L_129235:
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_129236
.p2align 0x4
L_427289:
L_129246:
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_129247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0x768
L_129237:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129238
L_129244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_129245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129245
.p2align 0x4
.long 0x7AF
L_129245:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_129238:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_427292
L_129239:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_129240:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_427291
L_129241:
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_129203
.p2align 0x4
L_427291:
L_129242:
	xorl %ecx,%ecx
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_129226
.p2align 0x4
L_427292:
L_129243:
	movq $0x1,%r15
	jmp L_129240
.p2align 0x4
.long 0x1CC4
L_129206:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129207
L_129303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_129304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129304
.p2align 0x4
.long 0x1CCC
L_129304:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_129207:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_427295
L_129208:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_129211
L_129209:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_129205
.p2align 0x4
L_427295:
L_129296:
	movq $0x23BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_427296
L_129297:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_129203
.p2align 0x4
L_427296:
L_129298:
	movl 0x48(%rbp),%ecx
	movq 0x50(%rbp),%r13
	xchgq %r13,%r14
	jmp L_129226
.p2align 0x4
.long 0x1CC4
L_129214:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129215
L_129299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_129300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129300
.p2align 0x4
.long 0x1CCC
L_129300:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_129215:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_129296
L_129216:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_129219
L_129217:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_129213
.p2align 0x4
.long 0x1CC5
L_129220:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129221
L_129293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_129294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129294
.p2align 0x4
.long 0x1CCB
L_129294:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_129221:
	movl 0x48(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_427302
L_129222:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_129223:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_427301
L_129224:
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movl $0x1,0x48(%rbp)
	jmp L_129203
.p2align 0x4
L_427301:
L_129225:
	movl $0x1,%ecx
	movq 0x58(%rbp),%r13
	xchgq %r13,%r15
	jmp L_129226
.p2align 0x4
L_427302:
L_129292:
	movq $0x1,%r15
	jmp L_129223
.p2align 0x4
.long 0x1CC7
L_129247:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129248
L_129258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_129259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129259
.p2align 0x4
.long 0x1997
L_129259:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_129248:
	movq $0x1CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x23BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x98(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_129249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
.long 0x1CC8
L_129249:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129250
L_129256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_129257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129257
.p2align 0x4
.long 0x1CC9
L_129257:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_129250:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_427306
L_129251:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_129252:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_427305
L_129253:
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_129230
.p2align 0x4
L_427305:
L_129254:
	movq %r14,0x40(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_129236
.p2align 0x4
L_427306:
L_129255:
	movq $0x1,%r15
	jmp L_129252
.text
.p2align 0x4
.globl equals_5
.hidden equals_5
equals_5:
loopS_15:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_129480
L_129320:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427358
L_129321:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	cmpq $0x3,%r13
	je L_427355
L_129322:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_129323
L_129324:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_427308
	jmp *jumpTable_270(,%rax,8)
.data
.p2align 0x4
jumpTable_270:
.quad L_427350,L_427330,L_427327,L_427324,L_427319,L_427317,L_427314,L_427311
.text
.p2align 0x4
L_427308:
L_129325:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
L_129327:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_129323
L_129328:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF58,%r15
	jne L_427309
L_129329:
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_129330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_427309:
L_129323:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427311:
L_129478:
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r13),%r15
	xchgq %r14,%r15
L_129450:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_129323
L_129451:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF60,%r13
	jne L_129323
L_129452:
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_129453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
L_427314:
L_129429:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	xchgq %r14,%r15
L_129431:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_129323
L_129432:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF5F,%r13
	jne L_129323
L_129433:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_129434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_427317:
L_129426:
	andq $0x3,%r14
	jnz L_129323
L_129427:
	jmp L_129323
.p2align 0x4
L_427319:
L_129415:
	movq 0x0(%r13),%r15
	xchgq %r14,%r15
L_129417:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_129323
L_129418:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF5D,%r13
	jne L_129323
L_129419:
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	movq 0x0(%r15),%r10
	movq 0x8(%r10),%r9
	movl 0x0(%r10),%r8d
	movl 0x4(%r10),%esp
	cmpl %esp,0x4(%r14)
	jne L_129323
L_129421:
	cmpl %r8d,%r11d
	jne L_129323
L_129423:
	movq %r9,0x0(%rbp)
	movq %r13,0x8(%rbp)
	jmp equals_1
.p2align 0x4
L_427324:
L_129410:
	movq 0x0(%r13),%r15
	xchgq %r14,%r15
L_129412:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_129323
L_129413:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF5C,%r13
	jne L_129323
L_129414:
	movq 0x0(%r15),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427327:
L_129401:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r15
	xchgq %r14,%r15
L_129403:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_129323
L_129404:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF5B,%r13
	jne L_129323
L_129405:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_129406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_5
.p2align 0x4
L_427330:
L_129342:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r13
	movq %r13,%r15
	movq %r14,%r13
	movq %r11,%r14
L_129344:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_129323
L_129345:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF5A,%r11
	jne L_129323
L_129346:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r10
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_129323
L_129347:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq %r10,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_129323
L_129348:
	shrq $0x1,%r10
	movl %r10d,%r13d
	cmpl %r13d,%r15d
	jne L_129323
L_129350:
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_129396
	cmpq $0x5,%r13
	je L_427343
	cmpq $0x6,%r13
	je L_427341
L_129351:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_129352
L_129392:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_427339
	cmpq $0xF54,%r13
	je L_427331
L_129352:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_129353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427331:
L_129394:
	movb $0xB,0x20(%rbp)
L_129363:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_129384
	cmpq $0x5,%r15
	je L_427337
	cmpq $0x6,%r15
	je L_427335
L_129364:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_129365
L_129380:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_427333
	cmpq $0xF54,%r15
	je L_427332
L_129365:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_129366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427332:
L_129382:
	movb $0xB,%dl
L_129376:
	cmpb 0x20(%rbp),%dl
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427333:
L_129381:
	movb $0x6,%dl
	jmp L_129376
.p2align 0x4
L_427335:
L_129386:
	shrq $0x3,%r14
	movb %r14b,%dl
	testb %dl,%dl
	jnz L_427336
L_129387:
	movb $0x4,%dl
	jmp L_129376
.p2align 0x4
L_427336:
L_129388:
	movb $0x5,%dl
	jmp L_129376
.p2align 0x4
L_427337:
L_129384:
	movb $0xB,%dl
	jmp L_129376
.p2align 0x4
L_427339:
L_129393:
	movb $0x6,0x20(%rbp)
	jmp L_129363
.p2align 0x4
L_427341:
L_129398:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_427342
L_129399:
	movb $0x4,0x20(%rbp)
	jmp L_129363
.p2align 0x4
L_427342:
L_129400:
	movb $0x5,0x20(%rbp)
	jmp L_129363
.p2align 0x4
L_427343:
L_129396:
	movb $0xB,0x20(%rbp)
	jmp L_129363
.p2align 0x4
L_427350:
L_129334:
	movq 0x0(%r13),%r15
	xchgq %r14,%r15
L_129336:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_129323
L_129337:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF59,%r13
	jne L_129323
L_129338:
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%r14),%rsi
	movq 0x8(%r11),%rdi
	xorq %rax,%rax
	movq %r10,%rbx
	call IntInf_equal
L_129339:
	testl %eax,%eax
	jz L_129323
L_129341:
	movq %rbx,0x0(%rbp)
	movq %r13,0x8(%rbp)
	jmp equals_1
.p2align 0x4
L_427355:
	movq %r14,%r15
L_129469:
	cmpq $0x3,%r15
	je L_427357
L_129470:
	andq $0x3,%r15
	jnz L_129323
L_129471:
	jmp L_129323
.p2align 0x4
L_427357:
L_129472:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427358:
L_129480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_129481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129481
.p2align 0x4
.long 0x460
L_129481:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_129321
.p2align 0x4
.long 0x5B0
L_129330:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	testl %r15d,%r15d
	jz L_129323
L_129332:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129333:
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F0
L_129453:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129454
L_129473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_129474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129474
.p2align 0x4
.long 0x4E2
L_129474:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_129454:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_129323
L_129456:
	movq 0x10(%rbp),%r15
	cmpq $0x3,%r15
	je L_427371
L_129457:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_129323
L_129458:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_427361
	jmp *jumpTable_271(,%rax,8)
.data
.p2align 0x4
jumpTable_271:
.quad L_427369,L_427368,L_427367,L_427366,L_427365,L_427364,L_427363,L_427362
.text
.p2align 0x4
L_427361:
L_129459:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r14
	jmp L_129327
.p2align 0x4
L_427362:
L_129467:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x10(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_129450
.p2align 0x4
L_427363:
L_129466:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_129431
.p2align 0x4
L_427364:
L_129465:
	movq 0x18(%rbp),%r14
	jmp L_129426
.p2align 0x4
L_427365:
L_129464:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_129417
.p2align 0x4
L_427366:
L_129463:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_129412
.p2align 0x4
L_427367:
L_129462:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_129403
.p2align 0x4
L_427368:
L_129461:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r13
	jmp L_129344
.p2align 0x4
L_427369:
L_129460:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_129336
.p2align 0x4
L_427371:
L_129468:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_129469
.p2align 0x4
.long 0x5F0
L_129434:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129435
L_129476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_129477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129477
.p2align 0x4
.long 0x4E2
L_129477:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_129435:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_129323
L_129437:
	movq 0x10(%rbp),%r15
	cmpq $0x3,%r15
	je L_427384
L_129438:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_129323
L_129439:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_427374
	jmp *jumpTable_272(,%rax,8)
.data
.p2align 0x4
jumpTable_272:
.quad L_427382,L_427381,L_427380,L_427379,L_427378,L_427377,L_427376,L_427375
.text
.p2align 0x4
L_427374:
L_129440:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r14
	jmp L_129327
.p2align 0x4
L_427375:
L_129448:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x10(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_129450
.p2align 0x4
L_427376:
L_129447:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_129431
.p2align 0x4
L_427377:
L_129446:
	movq 0x18(%rbp),%r14
	jmp L_129426
.p2align 0x4
L_427378:
L_129445:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_129417
.p2align 0x4
L_427379:
L_129444:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_129412
.p2align 0x4
L_427380:
L_129443:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_129403
.p2align 0x4
L_427381:
L_129442:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r13
	jmp L_129344
.p2align 0x4
L_427382:
L_129441:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_129336
.p2align 0x4
L_427384:
L_129475:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_129469
.p2align 0x4
.long 0x491
L_129406:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_129323
L_129408:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rsi
	movq 0x10(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129409:
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8AA
L_129353:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je L_427391
	cmpl $0x10,%r15d
	je L_427390
	cmpl $0x20,%r15d
	je L_427389
	cmpl $0x40,%r15d
	je L_427388
L_129354:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427388:
L_129391:
	movb $0x0,0x20(%rbp)
	jmp L_129363
.p2align 0x4
L_427389:
L_129390:
	movb $0x1,0x20(%rbp)
	jmp L_129363
.p2align 0x4
L_427390:
L_129389:
	movb $0x2,0x20(%rbp)
	jmp L_129363
.p2align 0x4
L_427391:
L_129362:
	movb $0x3,0x20(%rbp)
	jmp L_129363
.p2align 0x4
.long 0x71F
L_129366:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_427395
	cmpl $0x10,%r15d
	je L_427394
	cmpl $0x20,%r15d
	je L_427393
	cmpl $0x40,%r15d
	je L_427392
L_129367:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427392:
L_129379:
	xorb %dl,%dl
	jmp L_129376
.p2align 0x4
L_427393:
L_129378:
	movb $0x1,%dl
	jmp L_129376
.p2align 0x4
L_427394:
L_129377:
	movb $0x2,%dl
	jmp L_129376
.p2align 0x4
L_427395:
L_129375:
	movb $0x3,%dl
	jmp L_129376
.p2align 0x4
.long 0x1
L_129355:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129356
L_129360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129361
.p2align 0x4
.long 0x452
L_129361:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129356:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_129368:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129369
L_129373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129374
.p2align 0x4
.long 0x452
L_129374:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129369:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_401:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129357
L_129358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129359
.p2align 0x4
.long 0x452
L_129359:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129357:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_402:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129370
L_129371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129372
.p2align 0x4
.long 0x452
L_129372:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129370:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1590
.hidden x_1590
x_1590:
L_129482:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_129639
L_129483:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427439
L_129484:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_129506
L_129485:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_129486:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_129502
L_129487:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_129632
	cmpq $0x5,%r13
	je L_427435
	cmpq $0x6,%r13
	je L_427433
L_129488:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_129489
L_129628:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_427431
	cmpq $0xF54,%r13
	je L_427400
L_129489:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_129490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427400:
L_129630:
	movb $0xB,%dl
.p2align 0x4,,0x7
L_129500:
	cmpb %dl,0x0(%rbp)
	je L_427403
L_129502:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_427401
L_129503:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_129486
.p2align 0x4
L_427401:
L_129504:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129506
L_129507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_129508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129508
.p2align 0x4
.long 0x0
L_129508:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_129506:
	movq $0xD99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427403:
L_129509:
	movq 0x30(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_129510:
	incl %ecx
	jo L_129511
L_129512:
	cmpq $0x1,%r15
	je L_427404
L_129513:
	movq 0x8(%r15),%r15
	jmp L_129510
.p2align 0x4
L_427404:
L_129514:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_427429
L_129515:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAD9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_129516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129516
.p2align 0x4
.long 0x78A
L_129516:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1379:
	cmpq 0x30(%rbp),%r15
	jnl L_427406
L_129621:
	cmpq $0x1,%r14
	je L_427405
L_129622:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x38(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1379
.p2align 0x4
L_427405:
L_129623:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427406:
L_129517:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129518
L_129619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129620
.p2align 0x4
.long 0x794
L_129620:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129518:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	je L_427407
L_129519:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427407:
L_129520:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jz L_427417
L_129521:
	movq $0x1765,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r11,0x8(%r15)
	cmpq $0x0,0x30(%rbp)
	jna L_129523
L_129524:
	movq 0x0(%r11),%r14
	cmpl $0x0,%r13d
	jl L_427415
L_129525:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1380:
	cmpl 0x28(%rbp),%ecx
	jnl L_427411
L_129577:
	movslq %ecx,%r13
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0x8(%r10),%r13
	movq 0x0(%r13),%r11
	movq %r11,%r13
	andq $0x1,%r13
	jz L_427410
L_129595:
	shrq $0x1,%r11
	movl %r11d,%r13d
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	movq %r9,%r11
	andq $0x1,%r11
	jz L_427409
L_129613:
	shrq $0x1,%r9
	movl %r9d,%r11d
	cmpl %r13d,%r11d
	jnl L_427408
L_129616:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r10,%r14
	movq %r15,(localObjptr+0x0)(%rip)
L_129615:
	incl %ecx
	movq (localObjptr+0x0)(%rip),%r15
	movl (localWord32+0x0)(%rip),%ebx
	jmp loop_1380
.p2align 0x4
L_427408:
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_129615
.p2align 0x4
L_427409:
L_129596:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_427410:
L_129578:
	movq %r10,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_427411:
L_129526:
	movl 0x28(%rbp),%r14d
	decl %r14d
	movslq %ebx,%r13
	movq 0x30(%rbp),%r11
	cmpq %r11,%r13
	jnb L_129523
L_129528:
	movq 0x38(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movslq %r14d,%r8
	cmpq %r11,%r8
	jnb L_427413
L_129530:
	movq 0x0(%r10,%r8,8),%r11
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r11,0x0(%r10,%r13,8)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	movq %r9,0x0(%r10,%r8,8)
	decl %r14d
	jo L_427412
L_129531:
	movl %r14d,0x48(%rbp)
	movq %r15,0x60(%rbp)
	movl $0x0,0x4C(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r10,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_129532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_12
.p2align 0x4
L_427412:
L_129511:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427413:
L_129523:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427415:
L_129617:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427417:
L_129535:
	movl 0x28(%rbp),%r15d
	decl %r15d
	jo L_129511
L_129536:
	movl %r15d,0x30(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
loop_1381:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427426
.p2align 0x4,,0x7
L_129537:
	movl 0x30(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_427418
L_129538:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x23B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp loop_1381
.p2align 0x4
L_427418:
L_129539:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_427425
L_129540:
	movq 0x0(%r14),%r13
	movq %r14,0x30(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_129541:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r14
	andq $0x1,%r14
	jz L_427424
L_129559:
	shrq $0x1,%r13
	movl %r13d,%r14d
	movl 0x38(%rbp),%r13d
	cmpl %r14d,%r13d
	jne L_427422
L_129565:
	incl %r13d
	movl %r13d,0x30(%rbp)
	jo L_129511
L_129566:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_427419
L_129567:
	movq 0x0(%r14),%r11
	movl %r13d,0x38(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r11,%r15
	jmp L_129541
.p2align 0x4
L_427419:
L_129568:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129569
L_129570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_129571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129571
.p2align 0x4
.long 0x5E5
L_129571:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_129569:
	movq 0x28(%rbp),%r15
	movl 0x30(%rbp),%ecx
L_129562:
	movq $0xD99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427422:
L_129560:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129561
L_129563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129564
.p2align 0x4
.long 0x51E
L_129564:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129561:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_129562
.p2align 0x4
L_427424:
L_129542:
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_427425:
L_129572:
	xorl %ecx,%ecx
	movq %r14,%r15
	jmp L_129562
.p2align 0x4
L_427426:
L_129573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129574
.p2align 0x4
.long 0x816
L_129574:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_129537
.p2align 0x4
L_427429:
L_129624:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427431:
L_129629:
	movb $0x6,%dl
	jmp L_129500
.p2align 0x4
L_427433:
L_129634:
	shrq $0x3,%r15
	movb %r15b,%dl
	testb %dl,%dl
	jnz L_427434
L_129635:
	movb $0x4,%dl
	jmp L_129500
.p2align 0x4
L_427434:
L_129636:
	movb $0x5,%dl
	jmp L_129500
.p2align 0x4
L_427435:
L_129632:
	movb $0xB,%dl
	jmp L_129500
.p2align 0x4
L_427439:
L_129639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_129640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129640
.p2align 0x4
.long 0x4EA
L_129640:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_129484
.p2align 0x4
.long 0x4EE
L_129490:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpl $0x8,%r15d
	je L_427444
	cmpl $0x10,%r15d
	je L_427443
	cmpl $0x20,%r15d
	je L_427442
	cmpl $0x40,%r15d
	je L_427441
L_129491:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427441:
L_129627:
	xorb %dl,%dl
	jmp L_129500
.p2align 0x4
L_427442:
L_129626:
	movb $0x1,%dl
	jmp L_129500
.p2align 0x4
L_427443:
L_129625:
	movb $0x2,%dl
	jmp L_129500
.p2align 0x4
L_427444:
L_129499:
	movb $0x3,%dl
	jmp L_129500
.p2align 0x4
.long 0x1
toString_218:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
toString_217:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5E4
L_129532:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129533
L_129575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129576
.p2align 0x4
.long 0x794
L_129576:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129533:
	movq $0x3CD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x48(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl $0x1,0x54(%rbp)
	addq $0x48,%rbp
	leaq (L_129534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x1
toString_216:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
L_129492:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129493
L_129497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129498
.p2align 0x4
.long 0x452
L_129498:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129493:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
rev_216:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427449
L_129597:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129598:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427448
.p2align 0x4,,0x7
L_129599:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427447
L_129600:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129598
.p2align 0x4
L_427447:
L_129602:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427448:
L_129610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129611
.p2align 0x4
.long 0x45C
L_129611:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129599
.p2align 0x4
L_427449:
L_129612:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_129602
.p2align 0x4
.long 0x1
rev_215:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427452
L_129579:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129580:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427451
.p2align 0x4,,0x7
L_129581:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427450
L_129582:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129580
.p2align 0x4
L_427450:
L_129584:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427451:
L_129592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129593
.p2align 0x4
.long 0x45C
L_129593:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129581
.p2align 0x4
L_427452:
L_129594:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_129584
.p2align 0x4
.long 0x7CC
L_129534:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_129535
.p2align 0x4
.long 0x1
rev_214:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427455
L_129543:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129544:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427454
.p2align 0x4,,0x7
L_129545:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427453
L_129546:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129544
.p2align 0x4
L_427453:
L_129548:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427454:
L_129556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129557
.p2align 0x4
.long 0x45C
L_129557:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129545
.p2align 0x4
L_427455:
L_129558:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_129548
.p2align 0x4
.long 0x1
bug_403:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129494
L_129495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129496
.p2align 0x4
.long 0x452
L_129496:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129494:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_129603:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129604
L_129608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129609
.p2align 0x4
.long 0x452
L_129609:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129604:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_129585:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129586
L_129590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129591
.p2align 0x4
.long 0x452
L_129591:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129586:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_129549:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129550
L_129554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129555
.p2align 0x4
.long 0x452
L_129555:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129550:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_406:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129605
L_129606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129607
.p2align 0x4
.long 0x452
L_129607:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129605:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_405:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129587
L_129588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129589
.p2align 0x4
.long 0x452
L_129589:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129587:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_404:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129551
L_129552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129553
.p2align 0x4
.long 0x452
L_129553:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129551:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl qsort_12
.hidden qsort_12
qsort_12:
L_129641:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_1382
L_129761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129762
.p2align 0x4
.long 0x4E8
L_129762:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_1382:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_129643
L_129644:
	cmpl $0x14,%r15d
	jng L_427464
L_129646:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x20(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x24(%rbp)
	jo L_427463
L_129647:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_129648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_427463:
L_129643:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427464:
L_129645:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5ED
L_129648:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_129649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x5F0
L_129649:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%esp
	movl %esp,0x20(%rbp)
	movl 0x4(%rbp),%ebx
	movl %ebx,%esi
	addl %esp,%esi
	jo L_129643
L_129650:
	movq 0x18(%rbp),%rsp
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb L_129652
L_129653:
	movq 0x0(%r13,%r15,8),%r10
	movslq %esi,%r9
	cmpq %r14,%r9
	jnb L_129652
L_129655:
	movq 0x0(%r13,%r9,8),%r8
	movq 0xFFFFFFFFFFFFFFF0(%r11),%rsp
	cmpq %rsp,%r15
	jnb L_129652
L_129657:
	movq %r11,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	movq %r8,0x0(%r11,%r15,8)
	cmpq %rsp,%r9
	jnb L_129652
L_129659:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	movq %r10,0x0(%r11,%r9,8)
	movq 0x10(%rbp),%rsi
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	cmpq %r10,%r15
	jnb L_129652
L_129661:
	movq 0x0(%rsi,%r15,8),%r9
	movl 0x0(%rbp),%ecx
	incl %ecx
	jo L_129643
L_129662:
	movq %rsp,%r8
.p2align 0x4,,0x7
loop_1384:
	incl %ebx
	movl %ebx,0x20(%rbp)
	jo L_129643
L_129663:
	movslq %ebx,%rsp
	cmpq %r10,%rsp
	jnb L_129652
L_129665:
	movq 0x10(%rbp),%rsi
	movq %rsp,%rax
	movq 0x0(%rsi,%rax,8),%rsp
	movq 0x8(%r9),%rsi
	movq 0x0(%rsi),%rdi
	movq %rdi,%rdx
	andq $0x1,%rdx
	jz L_427481
L_129683:
	shrq $0x1,%rdi
	movl %edi,%edx
	movq 0x8(%rsp),%rdi
	movq 0x0(%rdi),%rbx
	movq %rbx,%rdi
	andq $0x1,%rdi
	jz L_427480
L_129701:
	shrq $0x1,%rbx
	movl %ebx,%edi
	cmpl %edx,%edi
	jl L_427479
	xchgq %rax,%r15
	xchgq %rsi,%r11
	movq %r8,(localWord64+0x18)(%rip)
	movq %r14,(localWord64+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	movq %rax,(localWord64+0x8)(%rip)
	movq %rsi,(localObjptr+0x8)(%rip)
.p2align 0x4,,0x7
loop_1385:
	decl %ecx
	jo L_129643
L_129703:
	movslq %ecx,%r14
	cmpq %r10,%r14
	jnb L_129652
L_129705:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r8
	movq 0x8(%r8),%r13
	movq 0x0(%r13),%rsp
	movq %rsp,%r13
	andq $0x1,%r13
	jz L_427476
L_129723:
	shrq $0x1,%rsp
	movl %esp,%r13d
	movq 0x0(%r11),%rsp
	movq %rsp,%rsi
	andq $0x1,%rsi
	jz L_427475
L_129741:
	shrq $0x1,%rsp
	movl %esp,%esi
	cmpl %r13d,%esi
	jnl L_427466
L_129759:
	jmp loop_1385
.p2align 0x4
L_427466:
L_129742:
	movl 0x20(%rbp),%ebx
	cmpl %ebx,%ecx
	jl L_427471
L_129743:
	movq (localWord64+0x0)(%rip),%rsp
	cmpq %rsp,%r15
	jnb L_129652
L_129745:
	movq (localObjptr+0x0)(%rip),%r13
	movq 0x0(%r13,%r15,8),%r11
	cmpq %rsp,%r14
	jnb L_129652
L_129747:
	movq 0x0(%r13,%r14,8),%r8
	movq (localWord64+0x18)(%rip),%rsi
	cmpq %rsi,%r15
	jnb L_129652
L_129749:
	movq (localObjptr+0x8)(%rip),%rdi
	movq %rdi,%rdx
	shrq $0x8,%rdx
	movq (gcState+0x3C8)(%rip),%rax
	movb $0x1,0x0(%rax,%rdx,1)
	movq %r8,0x0(%rdi,%r15,8)
	cmpq %rsi,%r14
	jnb L_427467
L_129751:
	movq %rdi,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rax,%r15,1)
	movq %r11,0x0(%rdi,%r14,8)
	movq %rsp,%r14
	movq %rdi,%r11
	movq %rsi,%r8
	movq (localWord64+0x8)(%rip),%r15
	jmp loop_1384
.p2align 0x4
L_427467:
L_129652:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427471:
L_129752:
	movq (localObjptr+0x0)(%rip),%r15
	movq (localWord64+0x8)(%rip),%r13
	movq 0x0(%r15,%r13,8),%r11
	cmpq (localWord64+0x0)(%rip),%r14
	jnb L_129652
L_129754:
	movq 0x0(%r15,%r14,8),%r10
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r13,8)
	cmpq (localWord64+0x18)(%rip),%r14
	jnb L_129652
L_129756:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	decl %ecx
	jo L_129643
L_129757:
	movl %ecx,0x30(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_129758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_12
.p2align 0x4
L_427475:
L_129724:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r9,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_427476:
L_129706:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r8,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_427479:
L_129760:
	movl 0x20(%rbp),%ebx
	jmp loop_1384
.p2align 0x4
L_427480:
L_129684:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %rsp,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_427481:
L_129666:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r9,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
.long 0x5ED
L_129758:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_1382
.p2align 0x4
.long 0x1
toString_222:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
toString_221:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
toString_220:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
toString_219:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_220:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427493
L_129725:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129726:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427492
.p2align 0x4,,0x7
L_129727:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427491
L_129728:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129726
.p2align 0x4
L_427491:
L_129730:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427492:
L_129738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129739
.p2align 0x4
.long 0x45C
L_129739:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129727
.p2align 0x4
L_427493:
L_129740:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_129730
.p2align 0x4
.long 0x1
rev_219:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427496
L_129707:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129708:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427495
.p2align 0x4,,0x7
L_129709:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427494
L_129710:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129708
.p2align 0x4
L_427494:
L_129712:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427495:
L_129720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129721
.p2align 0x4
.long 0x45C
L_129721:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129709
.p2align 0x4
L_427496:
L_129722:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_129712
.p2align 0x4
.long 0x1
rev_218:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427499
L_129685:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129686:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427498
.p2align 0x4,,0x7
L_129687:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427497
L_129688:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129686
.p2align 0x4
L_427497:
L_129690:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427498:
L_129698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129699
.p2align 0x4
.long 0x45C
L_129699:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129687
.p2align 0x4
L_427499:
L_129700:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_129690
.p2align 0x4
.long 0x1
rev_217:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427502
L_129667:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129668:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427501
.p2align 0x4,,0x7
L_129669:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427500
L_129670:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129668
.p2align 0x4
L_427500:
L_129672:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427501:
L_129680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129681
.p2align 0x4
.long 0x45C
L_129681:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129669
.p2align 0x4
L_427502:
L_129682:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_129672
.p2align 0x4
.long 0x1
L_129731:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129732
L_129736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129737
.p2align 0x4
.long 0x452
L_129737:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129732:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_129713:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129714
L_129718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129719
.p2align 0x4
.long 0x452
L_129719:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129714:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_129691:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129692
L_129696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129697
.p2align 0x4
.long 0x452
L_129697:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129692:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_129673:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129674
L_129678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129679
.p2align 0x4
.long 0x452
L_129679:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129674:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_410:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129733
L_129734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129735
.p2align 0x4
.long 0x452
L_129735:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129733:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_409:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129715
L_129716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129717
.p2align 0x4
.long 0x452
L_129717:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129715:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_408:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129693
L_129694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129695
.p2align 0x4
.long 0x452
L_129695:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129693:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_407:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129675
L_129676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129677
.p2align 0x4
.long 0x452
L_129677:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129675:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl new_30
.hidden new_30
new_30:
L_129763:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_129764
L_129827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_129828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129828
.p2align 0x4
.long 0x460
L_129828:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_129764:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427531
L_129765:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_129766:
	incl %ecx
	jo L_129767
L_129768:
	cmpq $0x1,%r15
	je L_427511
L_129769:
	movq 0x8(%r15),%r15
	jmp L_129766
.p2align 0x4
L_427511:
L_129770:
L_129771:
	movslq %ecx,%r15
	cmpq $0x7FFFFFFF,%r15
	movq %r15,0x10(%rbp)
	ja L_427529
L_129772:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129773
L_129823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129824
.p2align 0x4
.long 0x45E
L_129824:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_129773:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x10(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129774
.p2align 0x4
.long 0x45E
L_129774:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq $0x0,0x20(%rbp)
loop_1386:
	movq 0x10(%rbp),%r14
	cmpq %r14,0x20(%rbp)
	jnl L_427513
L_129813:
	cmpq $0x1,%r15
	je L_427512
L_129814:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x11,0x50(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_129815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427512:
L_129822:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427513:
L_129775:
	movq 0x10(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	je L_427514
L_129776:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427514:
L_129777:
	movl 0x20(%rbp),%r13d
	testl %r13d,%r13d
	jz L_427524
L_129778:
	movq $0x1767,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r11,0x8(%r15)
	cmpq $0x0,0x10(%rbp)
	jna L_129780
L_129781:
	movq 0x0(%r11),%r14
	cmpl $0x0,%r13d
	jl L_427522
L_129782:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1387:
	cmpl 0x20(%rbp),%ecx
	jnl L_427518
L_129801:
	movslq %ecx,%r13
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0x8(%r10),%r13
	movq 0x8(%r14),%r11
	movq %r11,%r9
	andq %r13,%r9
	andq $0x1,%r9
	jz L_427516
L_129802:
	cmpq %r13,%r11
	jl L_427515
	movq %r15,(localObjptr+0x0)(%rip)
	movl %ebx,(localWord32+0x0)(%rip)
L_129804:
	incl %ecx
	movq (localObjptr+0x0)(%rip),%r15
	movl (localWord32+0x0)(%rip),%ebx
	jmp loop_1387
.p2align 0x4
L_427515:
	movq %r10,%r11
	movq %r15,(localObjptr+0x0)(%rip)
L_129806:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
	jmp L_129804
.p2align 0x4
L_427516:
L_129807:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r11,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	movl %ecx,%r13d
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r10,%rbx
	call IntInf_compare
L_129808:
	cmpl $0x0,%eax
	jg L_427517
	movl %r13d,%ecx
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_129804
.p2align 0x4
L_427517:
	movq %rbx,%r11
	movl %r13d,%ecx
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_129806
.p2align 0x4
L_427518:
L_129783:
	movl 0x20(%rbp),%r14d
	decl %r14d
	movslq %ebx,%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,%r13
	jnb L_129780
L_129785:
	movq 0x18(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movslq %r14d,%r8
	cmpq %r11,%r8
	jnb L_427520
L_129787:
	movq 0x0(%r10,%r8,8),%r11
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r11,0x0(%r10,%r13,8)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	movq %r9,0x0(%r10,%r8,8)
	decl %r14d
	jo L_427519
L_129788:
	movl %r14d,0x30(%rbp)
	movq %r15,0x40(%rbp)
	movl $0x0,0x34(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_129789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_13
.p2align 0x4
L_427519:
L_129767:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427520:
L_129780:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427522:
L_129811:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427524:
L_129792:
	movl 0x20(%rbp),%r15d
	decl %r15d
	jo L_129767
L_129793:
	movl %r15d,0x28(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
loop_1388:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427526
.p2align 0x4,,0x7
L_129794:
	movl 0x28(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_427525
L_129795:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x1B77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp loop_1388
.p2align 0x4
L_427525:
L_129796:
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427526:
L_129797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_129798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129798
.p2align 0x4
.long 0xBA6
L_129798:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_129794
.p2align 0x4
L_427529:
L_129825:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427531:
L_129826:
	xorl %ecx,%ecx
	jmp L_129771
.p2align 0x4
.long 0x1129
L_129815:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_427533
L_129816:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427533:
L_129817:
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_129818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x898
L_129789:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129790
L_129799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_129800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129800
.p2align 0x4
.long 0x49D
L_129800:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_129790:
	movq $0x3D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_129791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0xA86
L_129818:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129819
L_129820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129821
.p2align 0x4
.long 0x1CCD
L_129821:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129819:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	movq 0x28(%rbp),%r15
	jmp loop_1386
.p2align 0x4
.long 0x898
L_129791:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_129792
.text
.p2align 0x4
.globl qsort_13
.hidden qsort_13
qsort_13:
L_129829:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_1389
L_129888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129889
.p2align 0x4
.long 0x4E9
L_129889:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_1389:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_129831
L_129832:
	cmpl $0x14,%r15d
	jng L_427537
L_129834:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_427536
L_129835:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_129836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_427536:
L_129831:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427537:
L_129833:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_129836:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_129837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_129837:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%esp
	movl %esp,0x18(%rbp)
	movl 0x4(%rbp),%ebx
	movl %ebx,%esi
	addl %esp,%esi
	jo L_129831
L_129838:
	movq 0x10(%rbp),%rsp
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb L_129840
L_129841:
	movq 0x0(%r13,%r15,8),%r10
	movslq %esi,%r9
	cmpq %r14,%r9
	jnb L_129840
L_129843:
	movq 0x0(%r13,%r9,8),%r8
	movq 0xFFFFFFFFFFFFFFF0(%r11),%rsp
	cmpq %rsp,%r15
	jnb L_129840
L_129845:
	movq %r11,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	movq %r8,0x0(%r11,%r15,8)
	cmpq %rsp,%r9
	jnb L_129840
L_129847:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	movq %r10,0x0(%r11,%r9,8)
	movq 0x8(%rbp),%rsi
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	cmpq %r10,%r15
	jnb L_129840
L_129849:
	movq 0x0(%rsi,%r15,8),%r9
	movl 0x0(%rbp),%ecx
	incl %ecx
	jo L_129831
L_129850:
	movq %rsp,%r8
.p2align 0x4,,0x7
loop_1391:
	incl %ebx
	movl %ebx,0x18(%rbp)
	jo L_129831
L_129851:
	movslq %ebx,%rsp
	cmpq %r10,%rsp
	jnb L_129840
L_129853:
	movq 0x8(%r9),%rsi
	movq 0x8(%rbp),%rdi
	movq %rsp,%rax
	movq 0x0(%rdi,%rax,8),%rsp
	movq 0x8(%rsp),%rdx
	movq %rdx,%rsp
	andq %rsi,%rsp
	andq $0x1,%rsp
	jz L_427553
L_129854:
	cmpq %rsi,%rdx
	jl L_427552
	xchgq %rax,%r15
	xchgq %rsi,%r14
	movq %r11,(localObjptr+0x8)(%rip)
	movq %r8,(localWord64+0x18)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	movq %rax,(localWord64+0x8)(%rip)
	movq %rsi,(localWord64+0x0)(%rip)
.p2align 0x4,,0x7
loop_1392:
	decl %ecx
	jo L_129831
L_129856:
	movslq %ecx,%r13
	cmpq %r10,%r13
	jnb L_129840
L_129858:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,%r11
	andq %r14,%r11
	andq $0x1,%r11
	jz L_427548
L_129859:
	cmpq %rsp,%r14
	jnl L_427539
L_129878:
	jmp loop_1392
.p2align 0x4
L_427539:
	xchgq %r13,%r15
	movq %r9,%r14
	movq %r13,(localWord64+0x10)(%rip)
L_129861:
	movl 0x18(%rbp),%ebx
	cmpl %ebx,%ecx
	jl L_427544
L_129862:
	movq (localWord64+0x10)(%rip),%r13
	movq (localWord64+0x0)(%rip),%rsp
	cmpq %rsp,%r13
	jnb L_129840
L_129864:
	movq (localObjptr+0x0)(%rip),%rsi
	movq 0x0(%rsi,%r13,8),%r11
	cmpq %rsp,%r15
	jnb L_129840
L_129866:
	movq 0x0(%rsi,%r15,8),%r9
	movq (localWord64+0x18)(%rip),%r8
	cmpq %r8,%r13
	jnb L_129840
L_129868:
	movq (localObjptr+0x8)(%rip),%rdi
	movq %rdi,%rdx
	shrq $0x8,%rdx
	movq (gcState+0x3C8)(%rip),%rax
	movb $0x1,0x0(%rax,%rdx,1)
	movq %r9,0x0(%rdi,%r13,8)
	cmpq %r8,%r15
	jnb L_427540
L_129870:
	movq %rdi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rax,%r13,1)
	movq %r11,0x0(%rdi,%r15,8)
	movq %rsi,%r13
	movq %rdi,%r11
	movq %r14,%r9
	movq %rsp,%r14
	movq (localWord64+0x8)(%rip),%r15
	jmp loop_1391
.p2align 0x4
L_427540:
L_129840:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427544:
L_129871:
	movq (localObjptr+0x0)(%rip),%r14
	movq (localWord64+0x8)(%rip),%r13
	movq 0x0(%r14,%r13,8),%r11
	cmpq (localWord64+0x0)(%rip),%r15
	jnb L_129840
L_129873:
	movq 0x0(%r14,%r15,8),%r10
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r14,%r13,8)
	cmpq (localWord64+0x18)(%rip),%r15
	jnb L_129840
L_129875:
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	decl %ecx
	jo L_129831
L_129876:
	movl %ecx,0x28(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_129877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_13
.p2align 0x4
L_427548:
L_129879:
	movq (c_stackP+0x0)(%rip),%r11
	xchgq %r11,%rsp
	movq %r14,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	xchgq %r9,%r14
	xchgq %r10,%r12
	movq %r9,(localObjptr+0x20)(%rip)
	movq %r10,(gcState+0x0)(%rip)
	call IntInf_compare
L_129880:
	cmpl $0x0,%eax
	jng L_427549
L_129882:
	movq (gcState+0x0)(%rip),%r11
	xchgq %r11,%r12
	movq %r11,%r10
	movq %r14,%r9
	movl %ebx,%ecx
	movq (localObjptr+0x20)(%rip),%r14
	jmp loop_1392
.p2align 0x4
L_427549:
	movq (gcState+0x0)(%rip),%r11
	xchgq %r11,%r12
	xchgq %r13,%r15
	movq %r11,%r10
	movl %ebx,%ecx
	movq %r13,(localWord64+0x10)(%rip)
	jmp L_129861
.p2align 0x4
L_427552:
L_129883:
	movl 0x18(%rbp),%ebx
	jmp loop_1391
.p2align 0x4
L_427553:
L_129884:
	movq (c_stackP+0x0)(%rip),%rsp
	xchgq %rdx,%rsi
	movq %rdx,%rdi
	xorq %rbx,%rbx
	xchgq %rbx,%rax
	xchgq %rdx,%r12
	xchgq %r11,%r13
	movq %r13,(localObjptr+0x8)(%rip)
	movl %ecx,%r13d
	xchgq %r8,%r14
	xchgq %r9,%r15
	xchgq %r10,%r14
	movq %r11,(localObjptr+0x0)(%rip)
	movq %rdx,(gcState+0x0)(%rip)
	movq %r8,(localWord64+0x0)(%rip)
	movq %r9,(localWord64+0x8)(%rip)
	movq %r10,(localWord64+0x18)(%rip)
	call IntInf_compare
L_129885:
	cmpl $0x0,%eax
	jng loop_3860
L_129887:
	movl 0x18(%rbp),%esi
	movq (gcState+0x0)(%rip),%rdi
	xchgq %rdi,%r12
	movq %r14,%r10
	movq %r15,%r9
	movl %r13d,%ecx
	movq %rbx,(localWord64+0x10)(%rip)
	movl %esi,%ebx
	movq (localWord64+0x8)(%rip),%r15
	movq (localWord64+0x0)(%rip),%r14
	movq (localObjptr+0x0)(%rip),%r13
	movq (localObjptr+0x8)(%rip),%r11
	movq (localWord64+0x18)(%rip),%r8
	jmp loop_1391
.p2align 0x4
loop_3860:
	movq (gcState+0x0)(%rip),%r11
	xchgq %r11,%r12
	movq %r14,%r10
	movq %r11,%r14
	movq %r15,%r9
	movq %rbx,%r15
	movl %r13d,%ecx
	jmp loop_1392
.p2align 0x4
.long 0x4F5
L_129877:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_1389
.text
.p2align 0x4
.globl loop_3856
.hidden loop_3856
loop_3856:
L_129890:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_129891
L_129964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_129965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129965
.p2align 0x4
.long 0x460
L_129965:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_129891:
L_129892:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_129893
L_129894:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108A,%r14
	je L_427566
	cmpq $0x108C,%r14
	je L_427565
	cmpq $0x108E,%r14
	je L_427564
	cmpq $0x108F,%r14
	je L_427563
L_129893:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427563:
L_129958:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_129959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
L_427564:
L_129953:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_129954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
L_427565:
L_129948:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_129949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
L_427566:
L_129895:
	movq 0x0(%rbp),%r9
	movq 0x0(%r9),%r8
	movq 0x0(%r8),%r13
	movq 0x8(%rbp),%r9
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_427576
L_129897:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_427575
L_129898:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_129900:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_427574
L_129940:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD6A,%r9
	jne L_427573
L_129941:
	movq 0x8(%r14),%r9
	cmpq 0x0(%r14),%r10
	movq %r10,(localObjptr+0x10)(%rip)
	je L_427570
L_129901:
	incl %ecx
	jo L_427569
L_129903:
	cmpq $0x1,%r15
	je L_427567
L_129904:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_129900
.p2align 0x4
L_427567:
L_129905:
L_129906:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427568
L_129908:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_440
L_129939:
	movl %ecx,0x0(%r15)
x_440:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_427568:
L_129907:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427569:
L_129902:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427570:
L_129943:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_129907
L_129944:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_427571
L_129946:
	movl %ecx,0x0(%r15)
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427571:
L_129945:
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427573:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_129901
.p2align 0x4
L_427574:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_129901
.p2align 0x4
L_427575:
L_129947:
	xorl %ecx,%ecx
	jmp L_129906
.p2align 0x4
L_427576:
L_129896:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x63A
L_129959:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
.long 0x2B
L_129954:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129955
L_129956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129957
.p2align 0x4
.long 0x2C
L_129957:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129955:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_129949:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129950
L_129951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_129952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129952
.p2align 0x4
.long 0x4B2
L_129952:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_129950:
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_129910:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xAA1
L_129960:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129961
L_129962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_129963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129963
.p2align 0x4
.long 0x165E
L_129963:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_129961:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_129911:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_129912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_129912:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF380)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_129913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_129913:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_129914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_129914:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129915
L_129937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_129938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129938
.p2align 0x4
.long 0x4AF
L_129938:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129915:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_129916:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_129902
L_129917:
	cmpq $0x1,%r14
	je L_427582
L_129918:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_129916
.p2align 0x4
L_427582:
L_129919:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129920
L_129935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_129936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129936
.p2align 0x4
.long 0x4E7
L_129936:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_129920:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427583
L_129921:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_223:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_427583:
L_129934:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_223
.p2align 0x4
.long 0x1
rev_221:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427589
L_129922:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129923:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427588
.p2align 0x4,,0x7
L_129924:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427587
L_129925:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129923
.p2align 0x4
L_427587:
L_129927:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427588:
L_129931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_129932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129932
.p2align 0x4
.long 0x45C
L_129932:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_129924
.p2align 0x4
L_427589:
L_129933:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_129927
.p2align 0x4
.long 0x1
bug_411:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129928
L_129929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_129930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129930
.p2align 0x4
.long 0x452
L_129930:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_129928:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3857
.hidden loop_3857
loop_3857:
L_129966:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_129967
L_130040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_130041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130041
.p2align 0x4
.long 0x460
L_130041:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_129967:
L_129968:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_129969
L_129970:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108A,%r14
	je L_427594
	cmpq $0x108C,%r14
	je L_427593
	cmpq $0x108E,%r14
	je L_427592
	cmpq $0x108F,%r14
	je L_427591
L_129969:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427591:
L_130034:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_130035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427592:
L_130029:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_130030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427593:
L_130024:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_130025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427594:
L_129971:
	movq 0x0(%rbp),%r9
	movq 0x0(%r9),%r8
	movq 0x0(%r8),%r13
	movq 0x8(%rbp),%r9
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_427604
L_129973:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_427603
L_129974:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_129976:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_427602
L_130016:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD6A,%r9
	jne L_427601
L_130017:
	movq 0x8(%r14),%r9
	cmpq %r10,0x0(%r14)
	movq %r10,(localObjptr+0x10)(%rip)
	je L_427598
L_129977:
	incl %ecx
	jo L_427597
L_129979:
	cmpq $0x1,%r15
	je L_427595
L_129980:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_129976
.p2align 0x4
L_427595:
L_129981:
L_129982:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427596
L_129984:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_441
L_130015:
	movl %ecx,0x0(%r15)
x_441:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_129986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_427596:
L_129983:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427597:
L_129978:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427598:
L_130019:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_129983
L_130020:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_427599
L_130022:
	movl %ecx,0x0(%r15)
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427599:
L_130021:
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427601:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_129977
.p2align 0x4
L_427602:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_129977
.p2align 0x4
L_427603:
L_130023:
	xorl %ecx,%ecx
	jmp L_129982
.p2align 0x4
L_427604:
L_129972:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x63A
L_130035:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_130036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
.long 0x2B
L_130030:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130031
L_130032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_130033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130033
.p2align 0x4
.long 0x2C
L_130033:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_130031:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_130025:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130026
L_130027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_130028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130028
.p2align 0x4
.long 0x4B2
L_130028:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_130026:
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_129986:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_129987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xAA1
L_130036:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130037
L_130038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_130039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130039
.p2align 0x4
.long 0x165E
L_130039:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_130037:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_129987:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_129988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_129988:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF380)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_129989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_129989:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_129990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_129990:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129991
L_130013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_130014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130014
.p2align 0x4
.long 0x4AF
L_130014:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_129991:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_129992:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_129978
L_129993:
	cmpq $0x1,%r14
	je L_427610
L_129994:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_129992
.p2align 0x4
L_427610:
L_129995:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129996
L_130011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_130012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130012
.p2align 0x4
.long 0x4E7
L_130012:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_129996:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427611
L_129997:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_224:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_427611:
L_130010:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_224
.p2align 0x4
.long 0x1
rev_222:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427617
L_129998:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_129999:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427616
.p2align 0x4,,0x7
L_130000:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427615
L_130001:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_129999
.p2align 0x4
L_427615:
L_130003:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427616:
L_130007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_130008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130008
.p2align 0x4
.long 0x45C
L_130008:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_130000
.p2align 0x4
L_427617:
L_130009:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130003
.p2align 0x4
.long 0x1
bug_412:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130004
L_130005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_130006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130006
.p2align 0x4
.long 0x452
L_130006:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_130004:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl intInfBinary_23
.hidden intInfBinary_23
intInfBinary_23:
L_130042:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_130182
L_130043:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427619
L_130044:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_130045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_427619:
L_130182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130183
.p2align 0x4
.long 0x805
L_130183:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_130044
.p2align 0x4
.long 0x660
L_130045:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_427621
L_130046:
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_130047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_427621:
L_130050:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x660
L_130047:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_130050
L_130048:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_427656
	cmpq $0x1E,%r14
	je L_427647
	cmpq $0x23,%r14
	je L_427645
	cmpq $0x26,%r14
	je L_427644
	cmpq $0x2A,%r14
	je L_427635
	cmpq $0x2B,%r14
	je L_427634
	cmpq $0x2D,%r14
	je L_427633
	cmpq $0x2E,%r14
	je L_427632
	cmpq $0x33,%r14
	je L_427623
L_130049:
	andq $0x3,%r15
	jnz L_130050
L_130051:
	jmp L_130050
.p2align 0x4
L_427623:
L_130155:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	movq 0x8(%rbp),%r11
	andq %r11,%r13
	andq $0x1,%r13
	jz L_427624
L_130156:
	xorq %r11,%r14
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_14:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_130157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_427624:
L_130163:
	andq $0x1,%r11
	jz L_427630
L_130164:
	movq $0x1,%r13
	xchgq %r13,%r15
L_130165:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_427628
L_130166:
	movq $0x1,%r14
L_130167:
	cmpq %r14,%r15
	jnl L_130169
L_130175:
	movq %r14,%r15
L_130169:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r13
	imulq %r13,%r15
	addq $0x7,%rsi
	addq %r13,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x10(%rbp)
	addq $0x0,%r15
	jc L_427626
L_130170:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_130171
L_130173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_130174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130174
.p2align 0x4
.long 0x14B4
L_130174:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_130171:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_xorb
L_130172:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_14
.p2align 0x4
L_427626:
L_130075:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_427628:
L_130176:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_427629
L_130177:
	jmp L_130167
.p2align 0x4
L_427629:
L_130083:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427630:
L_130178:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	decq %r11
	jo L_130083
L_130179:
	xchgq %r11,%r15
	jmp L_130165
.p2align 0x4
L_427632:
L_130147:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_130148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_427633:
L_130139:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_130140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427634:
L_130131:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_130132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_427635:
L_130106:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	movq 0x8(%rbp),%r11
	andq %r11,%r13
	andq $0x1,%r13
	jz L_427636
L_130107:
	orq %r11,%r14
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_13:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_130108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_427636:
L_130114:
	andq $0x1,%r11
	jz L_427642
L_130115:
	movq $0x1,%r13
	xchgq %r13,%r15
L_130116:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_427640
L_130117:
	movq $0x1,%r14
L_130118:
	cmpq %r14,%r15
	jnl L_130120
L_130126:
	movq %r14,%r15
L_130120:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%rsi
	movq %rsi,%r13
	movq 0x0(%r14),%r11
	imulq %r15,%r13
	addq $0x7,%r11
	addq %r11,%rsi
	addq %rsi,%r13
	movq %r13,%rsi
	movq %r13,0x10(%rbp)
	addq $0x0,%rsi
	jc L_130075
L_130121:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_130122
L_130124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_130125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130125
.p2align 0x4
.long 0x14B4
L_130125:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_130122:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_orb
L_130123:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_13
.p2align 0x4
L_427640:
L_130127:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_130083
L_130128:
	jmp L_130118
.p2align 0x4
L_427642:
L_130129:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	decq %r11
	jo L_130083
L_130130:
	xchgq %r11,%r15
	jmp L_130116
.p2align 0x4
L_427644:
L_130098:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_130099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_427645:
L_130087:
	movq 0x0(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
loop_1393:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_427646
L_130088:
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_130089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_427646:
L_130091:
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_130092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_427647:
L_130060:
	movq 0x0(%rbp),%r14
	andq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_427648
L_130061:
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_12:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_130062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
L_427648:
L_130068:
	movq 0x8(%rbp),%r14
	andq $0x1,%r14
	jz L_427654
L_130069:
	movq $0x1,%r14
	xchgq %r14,%r15
L_130070:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_427652
L_130071:
	movq $0x1,%r14
L_130072:
	cmpq %r14,%r15
	jnl L_130074
L_130081:
	movq %r14,%r15
L_130074:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%rsi
	movq %rsi,%r13
	movq 0x0(%r14),%r11
	imulq %r15,%r13
	addq $0x7,%r11
	addq %r11,%rsi
	addq %rsi,%r13
	movq %r13,%rsi
	movq %r13,0x18(%rbp)
	addq $0x0,%rsi
	jc L_130075
L_130076:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_130077
L_130079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_130080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130080
.p2align 0x4
.long 0x14B4
L_130080:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_130077:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_andb
L_130078:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_12
.p2align 0x4
L_427652:
L_130082:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_130083
L_130084:
	jmp L_130072
.p2align 0x4
L_427654:
L_130085:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_130083
L_130086:
	xchgq %r13,%r15
	jmp L_130070
.p2align 0x4
L_427656:
L_130052:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_130053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x907
L_130157:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130158
L_130161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130162
.p2align 0x4
.long 0x771
L_130162:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_130158:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130159:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_130148:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_130149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x61C
L_130140:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_130141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x61C
L_130132:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_130133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x907
L_130108:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130109
L_130112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130113
.p2align 0x4
.long 0x771
L_130113:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_130109:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130110:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_130099:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_130100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x14B5
L_130089:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_130090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x79B
L_130092:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130093
L_130096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_130097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130097
.p2align 0x4
.long 0x14B6
L_130097:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_130093:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130094:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_130062:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130063
L_130066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130067
.p2align 0x4
.long 0x771
L_130067:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_130063:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130064:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_130053:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_130054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1521
.p2align 0x4
.long 0x907
L_130149:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130150
L_130153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130154
.p2align 0x4
.long 0x771
L_130154:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_130150:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130151:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_130141:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130142
L_130145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130146
.p2align 0x4
.long 0x771
L_130146:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_130142:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130143:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_130133:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130134
L_130137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130138
.p2align 0x4
.long 0x771
L_130138:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_130134:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130135:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_130100:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130101
L_130104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130105
.p2align 0x4
.long 0x771
L_130105:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_130101:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130102:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x77F
L_130090:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	jmp loop_1393
.p2align 0x4
.long 0x907
L_130054:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130055
L_130058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_130059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130059
.p2align 0x4
.long 0x771
L_130059:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_130055:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130050
L_130056:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3855
.hidden loop_3855
loop_3855:
L_130184:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_130185
L_130258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_130259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130259
.p2align 0x4
.long 0x460
L_130259:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_130185:
L_130186:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_130187
L_130188:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108A,%r14
	je L_427679
	cmpq $0x108C,%r14
	je L_427678
	cmpq $0x108E,%r14
	je L_427677
	cmpq $0x108F,%r14
	je L_427676
L_130187:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427676:
L_130252:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_130253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_427677:
L_130247:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_130248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_427678:
L_130242:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_130243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_427679:
L_130189:
	movq 0x0(%rbp),%r9
	movq 0x0(%r9),%r8
	movq 0x0(%r8),%r13
	movq 0x8(%rbp),%r9
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_427689
L_130191:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_427688
L_130192:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_130194:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_427687
L_130234:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD6A,%r9
	jne L_427686
L_130235:
	movq 0x8(%r14),%r9
	cmpq %r10,0x0(%r14)
	movq %r10,(localObjptr+0x10)(%rip)
	je L_427683
L_130195:
	incl %ecx
	jo L_427682
L_130197:
	cmpq $0x1,%r15
	je L_427680
L_130198:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_130194
.p2align 0x4
L_427680:
L_130199:
L_130200:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427681
L_130202:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_442
L_130233:
	movl %ecx,0x0(%r15)
x_442:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_130204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_427681:
L_130201:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427682:
L_130196:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427683:
L_130237:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_130201
L_130238:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_427684
L_130240:
	movl %ecx,0x0(%r15)
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427684:
L_130239:
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427686:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_130195
.p2align 0x4
L_427687:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_130195
.p2align 0x4
L_427688:
L_130241:
	xorl %ecx,%ecx
	jmp L_130200
.p2align 0x4
L_427689:
L_130190:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x63A
L_130253:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_130254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
.long 0x2B
L_130248:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130249
L_130250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_130251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130251
.p2align 0x4
.long 0x2C
L_130251:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_130249:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_130243:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130244
L_130245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_130246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130246
.p2align 0x4
.long 0x4B2
L_130246:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_130244:
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_130204:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_130205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xAA1
L_130254:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130255
L_130256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_130257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130257
.p2align 0x4
.long 0x165E
L_130257:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_130255:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_130205:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_130206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_130206:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF380)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_130207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_130207:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_130208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_130208:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130209
L_130231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_130232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130232
.p2align 0x4
.long 0x4AF
L_130232:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_130209:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_130210:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_130196
L_130211:
	cmpq $0x1,%r14
	je L_427695
L_130212:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_130210
.p2align 0x4
L_427695:
L_130213:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130214
L_130229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_130230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130230
.p2align 0x4
.long 0x4E7
L_130230:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_130214:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427696
L_130215:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_225:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_427696:
L_130228:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_225
.p2align 0x4
.long 0x1
rev_223:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427702
L_130216:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_130217:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427701
.p2align 0x4,,0x7
L_130218:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427700
L_130219:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_130217
.p2align 0x4
L_427700:
L_130221:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427701:
L_130225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_130226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130226
.p2align 0x4
.long 0x45C
L_130226:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_130218
.p2align 0x4
L_427702:
L_130227:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130221
.p2align 0x4
.long 0x1
bug_413:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130222
L_130223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_130224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130224
.p2align 0x4
.long 0x452
L_130224:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_130222:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1379
.hidden x_1379
x_1379:
L_130260:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_130311
L_130261:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427718
L_130262:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_427717
L_130264:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_427716
L_130265:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_130267:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_427715
L_130303:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_427714
L_130304:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_427711
L_130268:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_427710
L_130270:
	cmpq $0x1,%r15
	je L_427704
L_130271:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_130267
.p2align 0x4
L_427704:
L_130272:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130273
L_130301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_130302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130302
.p2align 0x4
.long 0x65A
L_130302:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_130273:
	movl 0x8(%rbp),%ecx
L_130274:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427708
L_130276:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_130278
L_130300:
	movl %ecx,0x0(%r15)
L_130278:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_130279:
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_427706
	cmpb $0x2,%r14b
	je L_427705
L_130280:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_130281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_427705:
L_130299:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427706:
L_130298:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427708:
L_130275:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427710:
L_130269:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427711:
L_130306:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_130275
L_130307:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_427712
L_130309:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_130279
.p2align 0x4
L_427712:
L_130308:
	movq %r11,%r15
	jmp L_130279
.p2align 0x4
L_427714:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_130268
.p2align 0x4
L_427715:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_130268
.p2align 0x4
L_427716:
L_130310:
	xorl %ecx,%ecx
	jmp L_130274
.p2align 0x4
L_427717:
L_130263:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427718:
L_130311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_130312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130312
.p2align 0x4
.long 0x460
L_130312:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_130262
.p2align 0x4
.long 0x1
L_130281:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
toString_226:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_224:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427722
L_130282:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_130283:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427721
.p2align 0x4,,0x7
L_130284:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427720
L_130285:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_130283
.p2align 0x4
L_427720:
L_130287:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_130288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427721:
L_130295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_130296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130296
.p2align 0x4
.long 0x45C
L_130296:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_130284
.p2align 0x4
L_427722:
L_130297:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130287
.p2align 0x4
.long 0x1
L_130288:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130289
L_130293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_130294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130294
.p2align 0x4
.long 0x452
L_130294:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_130289:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEDE8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_414:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130290
L_130291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_130292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130292
.p2align 0x4
.long 0x452
L_130292:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_130290:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl goto_0
.hidden goto_0
goto_0:
L_130313:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_130314
L_130712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_130713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130713
.p2align 0x4
.long 0x45C
L_130713:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_130314:
	movq 0x10(%rbp),%r8
	movq 0xB0(%r8),%r11
	movq 0xA8(%r8),%r10
	movq 0xA0(%r8),%rsp
	movq %rsp,0x18(%rbp)
	movq 0x98(%r8),%rsp
	movq %rsp,0x20(%rbp)
	movq 0x90(%r8),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x88(%r8),%rsp
	movq %rsp,0x30(%rbp)
	movq 0x80(%r8),%rsp
	movq %rsp,0x38(%rbp)
	movq 0x78(%r8),%rsp
	movq %rsp,0x40(%rbp)
	movq 0x70(%r8),%rsp
	movq %rsp,0x48(%rbp)
	movq 0x68(%r8),%rsp
	movq %rsp,0x50(%rbp)
	movq 0x60(%r8),%rsp
	movq %rsp,0x58(%rbp)
	movb 0x8(%r8),%spl
	movb %spl,0x60(%rbp)
	movq 0x58(%r8),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x50(%r8),%rsp
	movq %rsp,0x70(%rbp)
	movq 0x48(%r8),%rsp
	movq %rsp,0x78(%rbp)
	movq 0x40(%r8),%rsp
	movq %rsp,0x80(%rbp)
	movq 0x38(%r8),%rsp
	movq %rsp,0x88(%rbp)
	movq 0x30(%r8),%rsp
	movq %rsp,0x90(%rbp)
	movl 0x4(%r8),%esp
	movl %esp,0x64(%rbp)
	movq 0x28(%r8),%rsp
	movq %rsp,0x98(%rbp)
	movq 0x20(%r8),%rsp
	movq %rsp,0xA0(%rbp)
	movl 0x0(%r8),%esp
	movl %esp,0xA8(%rbp)
	movq 0x18(%r8),%rsp
	movq %rsp,0xB0(%rbp)
	movq 0x10(%r8),%rsp
	movq %rsp,0xB8(%rbp)
	movq 0xB8(%r8),%rsp
	movq 0x8(%rsp),%r9
	movq 0x0(%rsp),%r13
	movq 0x8(%rbp),%r8
	movq 0x10(%r8),%r15
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r14
	incq %r14
	jo L_427794
L_130316:
	movq %r14,0x0(%r8)
	movq 0x0(%r15),%r8
	cmpq $0x1,%r8
	je L_427793
L_130317:
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%r8
	xorl %ecx,%ecx
	movq %r8,%r15
.p2align 0x4,,0x7
L_130319:
	movq %r14,%r8
	andq $0x3,%r8
	jnz L_427792
L_130360:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r8
	shrq $0x1,%r8
	cmpq $0xD9D,%r8
	jne L_427791
L_130361:
	movq 0x8(%r14),%r8
	cmpq 0x0(%r14),%r9
	movq %r9,(localObjptr+0x18)(%rip)
	je L_427728
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
L_130320:
	incl %ecx
	jo L_427727
L_130322:
	cmpq $0x1,%r15
	je L_427725
L_130323:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	movq (localObjptr+0x10)(%rip),%r10
	movq (localObjptr+0x18)(%rip),%r9
	jmp L_130319
.p2align 0x4
L_427725:
L_130324:
L_130325:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427726
L_130327:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_443
L_130359:
	movl %ecx,0x0(%r15)
x_443:
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_130329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_427726:
L_130326:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427727:
L_130321:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427728:
L_130363:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_130326
L_130364:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_427789
L_130710:
	movl %ecx,0x0(%r14)
	movq %r8,%r15
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
L_130366:
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_427788
L_130367:
	movl $0x1,0x0(%r14)
	movq 0x0(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0xD0(%rbp)
	movq 0x20(%r13),%r9
	movq %r9,0xD8(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	cmpq $0x1,%r15
	je L_427784
L_130368:
	movq 0x0(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x10(%r11),%r13
	movq 0x8(%r15),%r11
	cmpq 0x10(%r11),%r13
	je L_427763
L_130369:
	movq (localObjptr+0x10)(%rip),%r15
	cmpq %r13,0x10(%r15)
	je L_427759
L_130370:
	cmpq $0x1,%r10
	je L_427747
	cmpq $0x2,%r10
	je L_427746
L_130371:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	je L_427736
L_130641:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
add_0:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r15
	je L_427735
L_130383:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq $0x1,0xE8(%rbp)
.p2align 0x4,,0x7
L_130384:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427734
.p2align 0x4,,0x7
L_130385:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427729
L_130386:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xE0(%rbp)
	jmp L_130384
.p2align 0x4
L_427729:
L_130387:
	movq 0xE8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq $0x1,0xE8(%rbp)
.p2align 0x4,,0x7
L_130388:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427733
.p2align 0x4,,0x7
L_130389:
	movq 0xE0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_427731
L_130614:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427730
L_130615:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xE0(%rbp)
	jmp L_130388
.p2align 0x4
L_427730:
L_130616:
L_130393:
	movq %r15,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_130394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_427731:
L_130390:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427732
L_130391:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp L_130388
.p2align 0x4
L_427732:
L_130392:
	movq 0xE8(%rbp),%r13
	xchgq %r13,%r15
	jmp L_130393
.p2align 0x4
L_427733:
L_130617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_130618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130618
.p2align 0x4
.long 0x1CF2
L_130618:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_130389
.p2align 0x4
L_427734:
L_130619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_130620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130620
.p2align 0x4
.long 0x1CF2
L_130620:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_130385
.p2align 0x4
L_427735:
L_130621:
	movq $0x1,%r15
	jmp L_130393
.p2align 0x4
L_427736:
L_130372:
	movq 0xD0(%rbp),%r13
	movq 0x40(%r13),%r15
L_130373:
	cmpq $0x1,%r15
	je L_427745
L_130374:
	cmpq (globalObjptr+0xCDF8)(%rip),%r15
	je L_427744
L_130375:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x10,%r14
	jne vectorEqual_64
L_130634:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_131:
	cmpq %r14,%r13
	je L_427743
L_130635:
	movq (globalObjptr+0xCDF8)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne vectorEqual_226
L_130637:
	incq %r13
	jmp vectorEqualLoop_131
.p2align 0x4
vectorEqual_226:
vectorEqual_64:
	cmpq (globalObjptr+0xDA18)(%rip),%r15
	je L_427742
L_130377:
	cmpq $0x9,%r14
	jne vectorEqual_65
L_130628:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_130:
	cmpq %r14,%r13
	je L_427741
L_130629:
	movq (globalObjptr+0xDA18)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne vectorEqual_227
L_130631:
	incq %r13
	jmp vectorEqualLoop_130
.p2align 0x4
vectorEqual_227:
vectorEqual_65:
	cmpq (globalObjptr+0xD978)(%rip),%r15
	je L_427740
L_130379:
	cmpq $0xA,%r14
	jne L_130381
L_130622:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_129:
	cmpq %r13,%r14
	je L_427738
L_130623:
	movq (globalObjptr+0xD978)(%rip),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne L_427737
L_130625:
	incq %r13
	jmp vectorEqualLoop_129
.p2align 0x4
L_427737:
L_130381:
	movq %r15,0xE8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (doit_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromC_0
.p2align 0x4
L_427738:
L_130626:
	movq 0x30(%rbp),%r15
doit_26:
	movq %r15,0xE8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_130382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1605
.p2align 0x4
L_427740:
L_130627:
	movq 0x30(%rbp),%r15
	jmp doit_26
.p2align 0x4
L_427741:
L_130632:
	movq 0x0(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_427742:
L_130633:
	movq 0x0(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_427743:
L_130638:
	movq 0x28(%rbp),%r15
	jmp doit_26
.p2align 0x4
L_427744:
L_130639:
	movq 0x28(%rbp),%r15
	jmp doit_26
.p2align 0x4
L_427745:
L_130640:
	movq (globalObjptr+0xF390)(%rip),%r15
	movq %r15,0xE8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (doit_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromC_0
.p2align 0x4
L_427746:
L_130643:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_427747:
L_130642:
	movq %r14,0x28(%rbp)
L_130396:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_427758
L_130399:
	cmpl $0x0,%r13d
	jl L_427757
L_130400:
	movq $0x1,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq $0x1,0xE0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movl $0x0,0x34(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
loop_1394:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427756
.p2align 0x4,,0x7
L_130401:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_427753
L_130566:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xF0(%rbp)
L_130567:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_130568
L_130570:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1092,%r15
	je L_427749
	cmpq $0x1094,%r15
	je L_427748
L_130568:
	movq $0x218B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0xF0(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x38(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0xC0(%rbp),%r9
	movq 0xC8(%rbp),%r10
	movq 0xD0(%rbp),%r11
	movq 0xD8(%rbp),%r13
	movq 0xE0(%rbp),%r14
	movq 0xE8(%rbp),%r15
.p2align 0x4,,0x7
L_130569:
	movq %r8,0x38(%rbp)
	movq %r9,0xC0(%rbp)
	movq %r10,0xC8(%rbp)
	movq %r11,0xD0(%rbp)
	movq %r13,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	incl 0x34(%rbp)
	jmp loop_1394
.p2align 0x4
L_427748:
L_130604:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x100(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_130605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_427749:
L_130571:
	movq 0xF0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF8(%rbp)
	cmpb $0x6,0x60(%rbp)
	je L_427750
L_130572:
	xorl %ecx,%ecx
L_130573:
	movl %ecx,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x158(%rbp)
	movb 0x60(%rbp),%r15b
	movb %r15b,0x160(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x108,%rbp
	leaq (L_130574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeSplit_0
.p2align 0x4
L_427750:
L_130600:
	movq 0xE0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_427751
L_130601:
	cmpq $0x1,%r15
	setg %cl
	movzbl %cl,%ecx
	jmp L_130573
.p2align 0x4
L_427751:
L_130602:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_130603:
	cmpl $0x0,%eax
	setg %cl
	movzbl %cl,%ecx
	jmp L_130573
.p2align 0x4
L_427753:
L_130402:
	cmpb $0x6,0x60(%rbp)
	je L_427754
L_130403:
	xorl %ecx,%ecx
L_130404:
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl %ecx,0xD8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	movb 0x60(%rbp),%r15b
	movb %r15b,0x128(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_130405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeSplit_0
.p2align 0x4
L_427754:
L_130562:
	movq 0xE0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	andq $0x1,%r13
	jz L_427755
L_130563:
	cmpq $0x1,%r14
	setg %cl
	movzbl %cl,%ecx
	jmp L_130404
.p2align 0x4
L_427755:
L_130564:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_130565:
	cmpl $0x0,%eax
	setg %cl
	movzbl %cl,%ecx
	jmp L_130404
.p2align 0x4
L_427756:
L_130609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_130610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130610
.p2align 0x4
.long 0x1CF0
L_130610:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_130401
.p2align 0x4
L_427757:
L_130611:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427758:
L_130398:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427759:
L_130644:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130645
L_130658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_130659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130659
.p2align 0x4
.long 0x1CF6
L_130659:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_130645:
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0xE8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_130646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130646
.p2align 0x4
.long 0x1CF3
L_130646:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0xC0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1397:
	cmpq $0x1,%r15
	jnl L_427760
L_130657:
	movq 0xC0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1397
.p2align 0x4
L_427760:
L_130647:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130648
L_130655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_130656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130656
.p2align 0x4
.long 0x1CF5
L_130656:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_130648:
	movq 0xC0(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xE8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_130649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
L_427763:
L_130660:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xE0(%rbp)
	cmpq %rdx,%r15
	jne L_130398
L_130662:
	testq %rdx,%rdx
	jz L_427782
L_130663:
	cmpq $0x7FFFFFFF,%rdx
	ja L_130687
L_130664:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15EF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_130665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130665
.p2align 0x4
.long 0x1CF7
L_130665:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq %rax,0xE8(%rbp)
L_130666:
	movl $0x0,0xAC(%rbp)
	movl $0x0,0xF0(%rbp)
	movq $0x0,0xF8(%rbp)
.p2align 0x4,,0x7
loop_1398:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427780
.p2align 0x4,,0x7
L_130667:
	movq 0xF8(%rbp),%r14
	cmpq 0xE0(%rbp),%r14
	jnl L_427769
L_130689:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_130690:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_427768
L_130694:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1092,%r15
	jne L_427767
L_130695:
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE43,%r15
	jne L_427766
L_130696:
	movl 0xF0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_427764
L_130697:
	movl 0xAC(%rbp),%ecx
	movl $0x1,%ebx
	movq $0x1,%r13
	movq %r13,%r15
L_130693:
	movl %ecx,0xAC(%rbp)
	movl %ebx,0xF0(%rbp)
	movq 0xE8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xF8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xF8(%rbp)
	jmp loop_1398
.p2align 0x4
L_427764:
	movq %r13,%r15
L_130691:
	movq $0x2655,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movl 0xAC(%rbp),%ecx
	incl %ecx
	jo L_130321
L_130692:
	movl 0xF0(%rbp),%ebx
	movq %r14,%r15
	jmp L_130693
.p2align 0x4
L_427766:
	movq %r13,%r15
	jmp L_130691
.p2align 0x4
L_427767:
	movq %r13,%r15
	jmp L_130691
.p2align 0x4
L_427768:
	movq %r13,%r15
	jmp L_130691
.p2align 0x4
L_427769:
L_130668:
	movq 0xE8(%rbp),%r15
	movq $0x1757,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0xAC(%rbp),%rdx
	movq %rdx,0xC0(%rbp)
	testq %rdx,%rdx
	jz L_427779
L_130669:
	cmpq $0x7FFFFFFF,%rdx
	ja L_427778
L_130670:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_130671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130671
.p2align 0x4
.long 0x1CF8
L_130671:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,%r15
L_130672:
	xorl %ecx,%ecx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1399:
	cmpq 0xC0(%rbp),%r14
	jnl L_427773
.p2align 0x4,,0x7
loop_1400:
	movslq %ecx,%r13
	movq 0xE8(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_427771
L_130684:
	incl %ecx
	jo L_130321
L_130685:
	jmp loop_1400
.p2align 0x4
L_427771:
L_130682:
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_130321
L_130683:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1399
.p2align 0x4
L_427773:
L_130673:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0xF0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_427777
L_130675:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427776
	cmpq $0x2,%r14
	je L_427775
L_130676:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	je L_427774
L_130678:
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	jmp add_0
.p2align 0x4
L_427774:
L_130677:
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r14
	movq 0x40(%r14),%r15
	jmp L_130373
.p2align 0x4
L_427775:
L_130680:
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	jmp add_0
.p2align 0x4
L_427776:
L_130679:
	movq %r15,0x28(%rbp)
	jmp L_130396
.p2align 0x4
L_427777:
L_130674:
	movq (globalObjptr+0x74A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427778:
L_130687:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427779:
L_130688:
	movq (globalObjptr+0x7498)(%rip),%r15
	jmp L_130672
.p2align 0x4
L_427780:
L_130699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_130700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130700
.p2align 0x4
.long 0x1CF9
L_130700:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	jmp L_130667
.p2align 0x4
L_427782:
L_130702:
	movq (globalObjptr+0x7490)(%rip),%r15
	movq %r15,0xE8(%rbp)
	jmp L_130666
.p2align 0x4
L_427784:
L_130703:
	cmpq $0x1,%r10
	je L_427787
	cmpq $0x2,%r10
	je L_427786
L_130704:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	je L_427785
L_130706:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_427785:
L_130705:
	movq 0xD0(%rbp),%r13
	movq 0x40(%r13),%r15
	jmp L_130373
.p2align 0x4
L_427786:
L_130708:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_427787:
L_130707:
	movq %r14,0x28(%rbp)
	jmp L_130396
.p2align 0x4
L_427788:
L_130709:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427789:
L_130365:
	movq %r8,%r15
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_130366
.p2align 0x4
L_427791:
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_130320
.p2align 0x4
L_427792:
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_130320
.p2align 0x4
L_427793:
L_130711:
	xorl %ecx,%ecx
	jmp L_130325
.p2align 0x4
L_427794:
L_130315:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_130329:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_130330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1CCF
L_130394:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130395
L_130612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_130613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130613
.p2align 0x4
.long 0x1CF1
L_130613:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_130395:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_130396
.p2align 0x4
.long 0x1CCE
doit_25:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp doit_26
.p2align 0x4
.long 0x1CCE
L_130382:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
.long 0x1CEE
L_130605:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130606
L_130607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_130608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130608
.p2align 0x4
.long 0x1CEF
L_130608:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_130606:
	movq $0x218B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0xF0(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x38(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0xC0(%rbp),%r9
	movq 0xC8(%rbp),%r10
	movq 0xD0(%rbp),%r11
	movq 0xD8(%rbp),%r13
	movq 0xE0(%rbp),%r14
	movq 0xE8(%rbp),%r15
	jmp L_130569
.p2align 0x4
.long 0x1CE9
L_130574:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130575
L_130598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_130599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130599
.p2align 0x4
.long 0x1CED
L_130599:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_130575:
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE42,%r14
	je L_427798
L_130596:
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1605
.p2align 0x4
L_427798:
L_130576:
	movq 0x0(%r15),%r10
	movq 0xC0(%rbp),%r9
	cmpq $0x1,%r9
	je L_427803
L_130577:
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_427802
L_130594:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r11
	movq $0x2143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r9
	movq %r9,0x8(%r15)
	movl $0x1,%ecx
	movq %r15,%r14
	movq %r10,%r15
L_130579:
	movq 0x8(%r15),%r10
	cmpq %r10,0x8(%r11)
	jne L_427801
L_130581:
	movl %ecx,0xAC(%rbp)
	movq %r13,0xC0(%rbp)
	movq %r14,%r15
L_130582:
	cmpb $0x4,0x60(%rbp)
	jne L_130584
L_130592:
	movq 0xF8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE43,%r13
	jne L_427799
L_130593:
	movl 0xAC(%rbp),%ecx
L_130585:
	movl %ecx,0x108(%rbp)
	movq %r15,0x118(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq $0x1,0x130(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x150(%rbp)
	movb 0x60(%rbp),%r15b
	movb %r15b,0x158(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x100,%rbp
	leaq (L_130586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeSplit_0
.p2align 0x4
L_427799:
L_130584:
	xorl %ecx,%ecx
	jmp L_130585
.p2align 0x4
L_427801:
L_130580:
	movq (globalObjptr+0x74A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427802:
L_130578:
	movq 0x0(%r15),%r11
	movq 0xC8(%rbp),%r14
	xorl %ecx,%ecx
	movq %r10,%r15
	jmp L_130579
.p2align 0x4
L_427803:
L_130595:
	movq (globalObjptr+0x74B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CD0
L_130405:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130406
L_130560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130561
.p2align 0x4
.long 0x1CE8
L_130561:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130406:
	movq $0x3649,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0x17,0x0(%r14)
	movq $0xE,0x10(%r14)
	movq %r14,0xD0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_130407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x1CF4
L_130649:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0xD0(%rbp),%r13
	cmpq $0x1,%r13
	je L_427808
	cmpq $0x2,%r13
	je L_427807
L_130650:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	je L_427806
L_130652:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_427806:
L_130651:
	movq 0xD0(%rbp),%r13
	movq 0x40(%r13),%r15
	jmp L_130373
.p2align 0x4
L_427807:
L_130654:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_427808:
L_130653:
	movq %r14,0x28(%rbp)
	jmp L_130396
.p2align 0x4
.long 0x1
L_130330:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_130331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1CEC
L_130597:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r14d
	movl %r14d,0xAC(%rbp)
	movq 0x110(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0xC8(%rbp),%r15
	jmp L_130582
.p2align 0x4
.long 0x1CEA
L_130586:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130587
L_130590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_130591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130591
.p2align 0x4
.long 0x1CEB
L_130591:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_130587:
	movl 0xAC(%rbp),%esp
	testl %esp,%esp
	jnz L_427809
L_130588:
	movq 0x38(%rbp),%r8
	movq 0xC0(%rbp),%r9
	movq 0xC8(%rbp),%r10
	movq 0xD0(%rbp),%r11
	movq 0xD8(%rbp),%r13
	movq $0x1,%r14
	movq 0xE0(%rbp),%r15
	jmp L_130569
.p2align 0x4
L_427809:
L_130589:
	movq $0x218B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0xF0(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x38(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0xC0(%rbp),%r9
	movq 0xC8(%rbp),%r10
	movq 0xD0(%rbp),%r11
	movq 0xD8(%rbp),%r13
	movq $0x1,%r14
	movq 0xE0(%rbp),%r15
	jmp L_130569
.p2align 0x4
.long 0x1CD1
L_130407:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130408
L_130558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130559
.p2align 0x4
.long 0x1CE7
L_130559:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130408:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x109D,%r14
	je L_427819
L_130409:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427818
L_130410:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_130411:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427817
.p2align 0x4,,0x7
L_130412:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_427811
L_130413:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_130411
.p2align 0x4
L_427811:
L_130414:
	movq 0x50(%rbp),%r14
	movq %r14,0x40(%rbp)
L_130415:
	cmpq $0x1,%r15
	je L_427816
L_130416:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_130417:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427815
.p2align 0x4,,0x7
L_130418:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_427813
L_130423:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_427812
L_130424:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_130417
.p2align 0x4
L_427812:
L_130425:
L_130422:
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp x_1606
.p2align 0x4
L_427813:
L_130419:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_427814
L_130420:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r13,0x50(%rbp)
	jmp L_130417
.p2align 0x4
L_427814:
L_130421:
	movq 0x58(%rbp),%r13
	xchgq %r13,%r15
	jmp L_130422
.p2align 0x4
L_427815:
L_130426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_130427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130427
.p2align 0x4
.long 0x1CD2
L_130427:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_130418
.p2align 0x4
L_427816:
L_130428:
	movq $0x1,%r15
	jmp L_130422
.p2align 0x4
L_427817:
L_130429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_130430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130430
.p2align 0x4
.long 0x1CD2
L_130430:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_130412
.p2align 0x4
L_427818:
L_130431:
	movq %r15,0x40(%rbp)
	movq $0x1,%r15
	jmp L_130415
.p2align 0x4
L_427819:
L_130432:
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_130315
L_130433:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_427842
L_130434:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_130436:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_130437
L_130547:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD9E,%r13
	jne L_130437
L_130548:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x88(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_427836
L_130437:
	movl 0x58(%rbp),%r13d
	incl %r13d
	movl %r13d,0x5C(%rbp)
	jo L_130321
L_130438:
	cmpq $0x1,%r15
	je L_427820
L_130439:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x58(%rbp)
	jmp L_130436
.p2align 0x4
L_427820:
L_130440:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130441
L_130545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130546
.p2align 0x4
.long 0x1CE5
L_130546:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130441:
	movl 0x5C(%rbp),%ecx
L_130442:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_130326
L_130443:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_130445
L_130544:
	movl %ecx,0x0(%r15)
L_130445:
	movq $0xCD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xCD9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xCED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	addq $0x28,%r12
	movq $0x1B3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r10,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq %r10,0x50(%rbp)
L_130446:
	movq 0x50(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
L_130447:
	movq 0x10(%rbp),%r14
	andq $0x3,%r14
	jz L_427822
L_130448:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2629,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_427821
L_130449:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_130411
.p2align 0x4
L_427821:
L_130450:
	movq 0x8(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130415
.p2align 0x4
L_427822:
L_130451:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_130458
L_130452:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x10(%rbp)
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_130453:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10A3,%r13
	je L_427828
L_130454:
	cmpq $0x1,%r15
	je L_427823
L_130455:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x10(%rbp)
	jmp L_130453
.p2align 0x4
L_427823:
L_130456:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130458
L_130535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130536
.p2align 0x4
.long 0x1CE3
L_130536:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130458:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2629,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427825
L_130460:
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_427824
L_130461:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_130411
.p2align 0x4
L_427824:
L_130462:
	movq 0x8(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130415
.p2align 0x4
L_427825:
L_130464:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427826
L_130465:
	movq %r14,0xD8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_130466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427826:
L_130530:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_130531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427828:
L_130537:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130538
L_130541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130542
.p2align 0x4
.long 0x1CE4
L_130542:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130538:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2143,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_130464
	jmp L_130460
.p2align 0x4
L_427836:
L_130550:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130551
L_130555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130556
.p2align 0x4
.long 0x1CE6
L_130556:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130551:
	movl 0x58(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_130326
L_130552:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_427837
L_130553:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_130446
.p2align 0x4
L_427837:
L_130554:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_130446
.p2align 0x4
L_427842:
L_130557:
	xorl %ecx,%ecx
	jmp L_130442
.p2align 0x4
.long 0x4B0
L_130331:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_130332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1CD3
L_130466:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130467
L_130528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130529
.p2align 0x4
.long 0x1CE2
L_130529:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130467:
	movq $0x3985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x5,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movl $0x1,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_130468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1
L_130531:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5B0
L_130332:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_130333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1CD3
L_130468:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0xD0(%rbp)
	movl $0x1,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_130469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x1
bug_415:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130532
L_130533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_130534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130534
.p2align 0x4
.long 0x452
L_130534:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_130532:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51F
L_130333:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130334
L_130357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_130358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130358
.p2align 0x4
.long 0x4AF
L_130358:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_130334:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_130335:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_130321
L_130336:
	cmpq $0x1,%r14
	je L_427847
L_130337:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_130335
.p2align 0x4
L_427847:
L_130338:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130339
L_130355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_130356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130356
.p2align 0x4
.long 0x4E7
L_130356:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_130339:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427848
L_130340:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_227:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_427848:
L_130354:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_227
.p2align 0x4
.long 0x1CD4
L_130469:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130470
L_130526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130527
.p2align 0x4
.long 0x1CE1
L_130527:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130470:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xF388)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_130471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1
rev_225:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427855
L_130341:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_130342:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427854
.p2align 0x4,,0x7
L_130343:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427853
L_130344:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_130342
.p2align 0x4
L_427853:
L_130346:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_130347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427854:
L_130351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_130352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130352
.p2align 0x4
.long 0x45C
L_130352:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_130343
.p2align 0x4
L_427855:
L_130353:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130346
.p2align 0x4
.long 0x1CD5
L_130471:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130472
L_130524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130525
.p2align 0x4
.long 0x1CE0
L_130525:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130472:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_427862
L_130473:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_130474:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427861
.p2align 0x4,,0x7
L_130475:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_427856
L_130476:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_130474
.p2align 0x4
L_427856:
L_130477:
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_130478:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427860
.p2align 0x4,,0x7
L_130479:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_427858
L_130516:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_427857
L_130517:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_130478
.p2align 0x4
L_427857:
L_130518:
L_130483:
	movq %r15,0xD0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_130484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_427858:
L_130480:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_427859
L_130481:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x60(%rbp)
	jmp L_130478
.p2align 0x4
L_427859:
L_130482:
	movq 0x68(%rbp),%r13
	xchgq %r13,%r15
	jmp L_130483
.p2align 0x4
L_427860:
L_130519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130520
.p2align 0x4
.long 0x1CDF
L_130520:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_130479
.p2align 0x4
L_427861:
L_130521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130522
.p2align 0x4
.long 0x1CDF
L_130522:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_130475
.p2align 0x4
L_427862:
L_130523:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130483
.p2align 0x4
.long 0x1
L_130347:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130348
L_130349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_130350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130350
.p2align 0x4
.long 0x452
L_130350:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_130348:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CD6
L_130484:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130485
L_130514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130515
.p2align 0x4
.long 0x1CDE
L_130515:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130485:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0xA8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427869
L_130486:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x40(%rbp)
L_130487:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130488
L_130497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130498
.p2align 0x4
.long 0x1CD9
L_130498:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130488:
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x212F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x1,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x30(%r14)
	movq (globalObjptr+0xBB8)(%rip),%r13
	movq %r13,0x38(%r14)
	movq (globalObjptr+0xF388)(%rip),%r13
	movq %r13,0x40(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x18(%r13)
	addq $0x30,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r13)
	movq %r15,0x20(%r13)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130489
.p2align 0x4
.long 0x1CD7
L_130489:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1395:
	cmpq $0x1,%r15
	jnl L_427865
L_130496:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1395
.p2align 0x4
L_427865:
L_130490:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130491
L_130494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130495
.p2align 0x4
.long 0x1CD8
L_130495:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130491:
	movq 0x40(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_427866
L_130492:
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_130411
.p2align 0x4
L_427866:
L_130493:
	movq %r14,0x40(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130415
.p2align 0x4
L_427869:
L_130499:
	movq 0xB0(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x4(%r15),%r13b
	movq 0x10(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jnz L_427871
L_130500:
	cmpb $0x1,%r13b
	jne L_427870
L_130502:
	movslq 0x40(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x80(%rbp)
	movq %r11,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_130503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_427870:
L_130501:
	movq (globalObjptr+0x7470)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427871:
L_130512:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq (globalObjptr+0x18A8)(%rip),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,%r9d
	incl %r10d
	jo L_130321
L_130513:
	movl %r10d,0x0(%r13)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xF8D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r8,0x0(%r14)
	movq $0x2123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
new1_21:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130507
.p2align 0x4
.long 0x1CD9
L_130507:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1396:
	cmpq $0x1,%r15
	jnl L_427872
L_130509:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1396
.p2align 0x4
L_427872:
L_130508:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x40(%rbp)
	jmp L_130487
.p2align 0x4
.long 0x1CDA
L_130503:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_130504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1CDB
L_130504:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_130505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1CDC
L_130505:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130506
L_130510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130511
.p2align 0x4
.long 0x1CDD
L_130511:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130506:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x12A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	jmp new1_21
