/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:02 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl toString_538
.hidden toString_538
toString_538:
L_18481:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18482
L_18520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18521
.p2align 0x4
.long 0x460
L_18521:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18482:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_380363
L_18484:
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_380348
L_18485:
	movq %r11,%r15
L_18486:
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_18487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_380348:
L_18488:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movl %r13d,(localWord32+0x0)(%rip)
	cmpq %r14,%r15
	jne L_380362
L_18490:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_260:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_380351
L_18516:
	movl %ebx,%r13d
	incl %r13d
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb L_380350
L_18518:
	incl %ecx
	jo L_380349
L_18519:
	movl %r13d,%ebx
	jmp loop_260
.p2align 0x4
L_380349:
L_18500:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380350:
L_18494:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380351:
L_18491:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_261:
	cmpl %ecx,%ebx
	je L_18486
L_18492:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_18494
L_18495:
	movb 0x0(%r15,%r13,1),%dl
	cmpb $0x41,%dl
	jb L_380357
L_18496:
	cmpb $0x61,%dl
	jb L_380355
L_18497:
	cmpb $0x7A,%dl
	jna L_18499
L_18503:
	cmpb $0x5F,%dl
	jne L_380353
L_18499:
	incl %ebx
	jo L_18500
L_18501:
	jmp loop_261
.p2align 0x4
L_380353:
L_18504:
	movq %r15,0x28(%rbp)
	movq $0x6,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_18505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
L_380355:
L_18507:
	cmpb $0x5A,%dl
	jna L_18499
	jmp L_18503
.p2align 0x4
L_380357:
L_18510:
	cmpb $0x30,%dl
	jb L_18503
L_18511:
	cmpb $0x39,%dl
	jna L_18499
	jmp L_18503
.p2align 0x4
L_380362:
L_18489:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380363:
L_18483:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_18487:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_18505:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_18486
.text
.p2align 0x4
.globl unique_0
.hidden unique_0
unique_0:
L_18522:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18523
L_18606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18607
.p2align 0x4
.long 0x460
L_18607:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18523:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_18525
L_18526:
	movl $0x0,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_262:
	cmpl %ecx,%ebx
	jnl L_380366
L_18603:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_380365
L_18605:
	movq 0x0(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x8(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r11d,%r14d
	movl %r14d,0x8(%rbp)
	movl %r15d,%ebx
	jmp loop_262
.p2align 0x4
L_380365:
L_18533:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380366:
L_18527:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18528
L_18601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18602
.p2align 0x4
.long 0x5DF
L_18602:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18528:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_380396
L_18530:
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x8(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_18545
L_18531:
	movslq %r11d,%r13
	movq %r13,0x30(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_18533
L_18534:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x38(%rbp)
	cmpq $0x1,%r11
	je L_18544
L_18535:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_18536:
	movq (globalObjptr+0xAE8)(%rip),%r10
	movq 0x0(%r10),%r13
	incq %r13
	jo L_380392
L_18538:
	movq %r13,0x0(%r10)
	movq 0x8(%r15),%r13
	cmpq %r13,0x0(%rbp)
	je L_18597
L_18539:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	cmpq %r10,0x28(%rbp)
	jne L_380388
L_18587:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_94:
	cmpq %r11,0x28(%rbp)
	je L_380387
L_18588:
	movq 0x0(%rbp),%r10
	movb 0x0(%r13,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_380367
L_18595:
	incq %r11
	jmp vectorEqualLoop_94
.p2align 0x4
L_380367:
L_18589:
	cmpq $0x1,%r14
	je L_380368
L_18590:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_18536
.p2align 0x4
L_380368:
L_18591:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18544
L_18593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_18594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18594
.p2align 0x4
.long 0x5DE
L_18594:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_18544:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xF9B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x1660)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_18545
L_18546:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x2907,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x30(%rbp),%rdx
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%rdx
	jnb L_18533
L_18548:
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	movq %r10,0x0(%r11,%rdx,8)
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_18525
L_18550:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_18545
L_18551:
	cmpl %r14d,%r10d
	jnl L_380381
L_18559:
	addl %r10d,%r10d
	jo L_18545
L_18560:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_380379
L_18561:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x61,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_18562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18562
.p2align 0x4
.long 0x5DC
L_18562:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_263:
	cmpq 0x30(%rbp),%r15
	jnl L_380369
L_18583:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_263
.p2align 0x4
L_380369:
L_18563:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_380378
L_18565:
	cmpl $0x0,%r13d
	jl L_380377
L_18566:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_264:
	movl 0x48(%rbp),%r15d
	cmpl 0xC(%rbp),%r15d
	jnl L_380375
L_18568:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_18577
L_18569:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_18570:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380373
.p2align 0x4,,0x7
L_18571:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x8(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_380372
L_18572:
	movslq %r14d,%r13
	cmpq 0x30(%rbp),%r13
	jnb L_18533
L_18574:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2907,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_380370
L_18575:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_18570
.p2align 0x4
L_380370:
L_18577:
	incl 0x48(%rbp)
	jmp loop_264
.p2align 0x4
L_380372:
L_18545:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380373:
L_18579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_18580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18580
.p2align 0x4
.long 0x5DD
L_18580:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_18571
.p2align 0x4
L_380375:
L_18567:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq %r14,%r15
L_18553:
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_18545
L_18554:
	movl %r14d,0x0(%r15)
	movl %r13d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_18555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380377:
L_18582:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380378:
L_18525:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380379:
L_18584:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380381:
L_18552:
	movq 0x28(%rbp),%r15
	jmp L_18553
.p2align 0x4
L_380387:
L_18597:
	movq 0x10(%r15),%r14
	movq %r14,%r15
	jmp L_18553
.p2align 0x4
L_380388:
L_18540:
	cmpq $0x1,%r14
	je L_380389
L_18541:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_18536
.p2align 0x4
L_380389:
L_18542:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18544
L_18585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_18586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18586
.p2align 0x4
.long 0x5DE
L_18586:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_18544
.p2align 0x4
L_380392:
L_18537:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380396:
L_18529:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_18555:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18556
L_18557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18558
.p2align 0x4
.long 0x460
L_18558:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18556:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl x_1211
.hidden x_1211
x_1211:
L_18608:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18609
L_18798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18799
.p2align 0x4
.long 0x460
L_18799:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18609:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_265:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380472
.p2align 0x4,,0x7
L_18610:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x10(%rbp)
	jl L_380456
L_18611:
	movq %r15,%r14
	incq %r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_380454
	cmpq $0x2,%r15
	je L_380452
	cmpq $0x3,%r15
	je L_380451
	cmpq $0x5,%r15
	je L_380450
	cmpq $0x6,%r15
	je L_380427
	cmpq $0x7,%r15
	je L_380425
L_18612:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2084,%r14
	je L_380409
	cmpq $0x2085,%r14
	je L_380401
L_18613:
	movb %r13b,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x10B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_539
.p2align 0x4
L_380401:
L_18699:
	movq 0x0(%r15),%r14
	cmpb $0x20,%r13b
	jb L_380408
L_18700:
	cmpb $0x7E,%r13b
	ja L_380405
L_18701:
	cmpb $0x22,%r13b
	je L_380404
	cmpb $0x5C,%r13b
	je L_380402
L_18702:
	movzbq %r13b,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380402:
L_18703:
	movq (globalObjptr+0xE0F0)(%rip),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
full_1:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380403
.p2align 0x4,,0x7
L_18614:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp loop_265
.p2align 0x4
L_380403:
L_18615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18616
.p2align 0x4
.long 0x5E1
L_18616:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_18614
.p2align 0x4
L_380404:
L_18621:
	movq (globalObjptr+0xE080)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380405:
	movq %r14,%r15
	movb %r13b,%dl
L_18705:
	cmpb $0x9,%dl
	je L_380407
	cmpb $0xA,%dl
	je L_380406
L_18706:
	movzbl %dl,%r14d
	movl %r14d,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x0(%r15)
	movl $0x21,0x4(%r15)
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_18707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380406:
L_18712:
	movq (globalObjptr+0xE100)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380407:
L_18711:
	movq (globalObjptr+0xE0F8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380408:
	movq %r14,%r15
	movb %r13b,%dl
	jmp L_18705
.p2align 0x4
L_380409:
L_18617:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movzbl %r13b,%r15d
	cmpb $0x20,%r13b
	jb L_380424
L_18618:
	cmpb $0x7E,%r13b
	ja L_380414
L_18619:
	cmpl $0x22,%r15d
	je L_18621
	cmpl $0x27,%r15d
	je L_380412
	cmpl $0x3F,%r15d
	je L_380411
	cmpl $0x5C,%r15d
	je L_380410
L_18620:
	movzbq %r13b,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380410:
L_18624:
	movq (globalObjptr+0xE098)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380411:
L_18623:
	movq (globalObjptr+0xE090)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380412:
L_18622:
	movq (globalObjptr+0xE088)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380414:
	movl %r15d,%ecx
	movq %r11,%r15
L_18626:
	cmpl $0x7,%ecx
	je L_380423
	cmpl $0x8,%ecx
	je L_380422
	cmpl $0x9,%ecx
	je L_380421
	cmpl $0xA,%ecx
	je L_380420
	cmpl $0xB,%ecx
	je L_380419
	cmpl $0xC,%ecx
	je L_380418
	cmpl $0xD,%ecx
	je L_380417
L_18627:
	cmpl $0x100,%ecx
	jl L_380416
L_18628:
	cmpl $0x10000,%ecx
	jl L_380415
L_18629:
	movl %ecx,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x0(%r14)
	movl $0x21,0x4(%r14)
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_18630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380415:
L_18651:
	movl %ecx,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x0(%r14)
	movl $0x21,0x4(%r14)
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_18652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380416:
L_18671:
	movl %ecx,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x0(%r15)
	movl $0x21,0x4(%r15)
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_18672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380417:
L_18697:
	movq (globalObjptr+0xE0E8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380418:
L_18696:
	movq (globalObjptr+0xE0E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380419:
L_18695:
	movq (globalObjptr+0xE0D8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380420:
L_18694:
	movq (globalObjptr+0xE0D0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380421:
L_18693:
	movq (globalObjptr+0xE0C8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380422:
L_18692:
	movq (globalObjptr+0xE0C0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380423:
L_18691:
	movq (globalObjptr+0xE0B8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380424:
	movl %r15d,%ecx
	movq %r11,%r15
	jmp L_18626
.p2align 0x4
L_380425:
L_18754:
	cmpb $0x5C,%r13b
	jne L_380426
L_18716:
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380426:
L_18755:
	movzbq %r13b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380427:
L_18730:
	cmpb $0x21,%r13b
	je L_380449
	cmpb $0x23,%r13b
	je L_380448
	cmpb $0x24,%r13b
	je L_380447
	cmpb $0x25,%r13b
	je L_380446
	cmpb $0x26,%r13b
	je L_380445
	cmpb $0x27,%r13b
	je L_380444
	cmpb $0x2A,%r13b
	je L_380443
	cmpb $0x2B,%r13b
	je L_380442
	cmpb $0x2D,%r13b
	je L_380441
	cmpb $0x2E,%r13b
	je L_380440
	cmpb $0x2F,%r13b
	je L_380439
	cmpb $0x3A,%r13b
	je L_380438
	cmpb $0x3C,%r13b
	je L_380437
	cmpb $0x3D,%r13b
	je L_380436
	cmpb $0x3E,%r13b
	je L_380435
	cmpb $0x3F,%r13b
	je L_380434
	cmpb $0x40,%r13b
	je L_380433
	cmpb $0x5C,%r13b
	je L_380432
	cmpb $0x5E,%r13b
	je L_380431
	cmpb $0x60,%r13b
	je L_380430
	cmpb $0x7C,%r13b
	je L_380429
	cmpb $0x7E,%r13b
	je L_380428
L_18731:
	movzbq %r13b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380428:
L_18753:
	movq (globalObjptr+0xE1A8)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380429:
L_18752:
	movq (globalObjptr+0xE1A0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380430:
L_18751:
	movq (globalObjptr+0xE198)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380431:
L_18750:
	movq (globalObjptr+0xE190)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380432:
L_18749:
	movq (globalObjptr+0xE188)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380433:
L_18748:
	movq (globalObjptr+0xE180)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380434:
L_18747:
	movq (globalObjptr+0xE178)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380435:
L_18746:
	movq (globalObjptr+0xE170)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380436:
L_18745:
	movq (globalObjptr+0xE168)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380437:
L_18744:
	movq (globalObjptr+0xE160)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380438:
L_18743:
	movq (globalObjptr+0xE158)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380439:
L_18742:
	movq (globalObjptr+0xE150)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380440:
L_18741:
	movq (globalObjptr+0xE148)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380441:
L_18740:
	movq (globalObjptr+0xE140)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380442:
L_18739:
	movq (globalObjptr+0xE138)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380443:
L_18738:
	movq (globalObjptr+0xE130)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380444:
L_18737:
	movq (globalObjptr+0xDDD0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380445:
L_18736:
	movq (globalObjptr+0xE128)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380446:
L_18735:
	movq (globalObjptr+0xE120)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380447:
L_18734:
	movq (globalObjptr+0xE118)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380448:
L_18733:
	movq (globalObjptr+0xE110)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380449:
L_18732:
	movq (globalObjptr+0xE108)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380450:
L_18725:
	cmpb $0x5A,%r13b
	ja str_5
L_18726:
	cmpb $0x41,%r13b
	jb str_4
L_18727:
	movzbl %r13b,%r14d
	addl $0x20,%r14d
	movb %r14b,%dl
str_1:
	movzbq %dl,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
str_4:
	movb %r13b,%dl
	jmp str_1
.p2align 0x4
str_5:
	movb %r13b,%dl
	jmp str_1
.p2align 0x4
L_380451:
L_18720:
	cmpb $0x5A,%r13b
	ja str_7
L_18721:
	cmpb $0x41,%r13b
	jb str_6
L_18722:
	movzbl %r13b,%r14d
	addl $0x20,%r14d
	movb %r14b,%dl
str_0:
	movzbq %dl,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
str_6:
	movb %r13b,%dl
	jmp str_0
.p2align 0x4
str_7:
	movb %r13b,%dl
	jmp str_0
.p2align 0x4
L_380452:
L_18717:
	cmpb $0x7E,%r13b
	jne L_380453
L_18719:
	movq (globalObjptr+0xD3C0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380453:
L_18718:
	movzbq %r13b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380454:
L_18714:
	cmpb $0x5C,%r13b
	je L_18716
L_18715:
	movzbq %r13b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380456:
L_18756:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_380471
L_18757:
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_18758:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380470
.p2align 0x4,,0x7
L_18759:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_380457
L_18760:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_18758
.p2align 0x4
L_380457:
L_18761:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_380464
L_18762:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_18763:
	addq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_380458
L_18764:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_18763
.p2align 0x4
L_380458:
L_18765:
	testq %r15,%r15
	jz L_380463
L_18766:
	cmpq $0x7FFFFFFF,%r15
	ja L_380462
L_18767:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_18768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18768
.p2align 0x4
.long 0x49C
L_18768:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_18769:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_266:
	cmpq 0x18(%rbp),%r14
	jnl L_380461
.p2align 0x4,,0x7
loop_267:
	cmpq 0x8(%r11),%r13
	jl L_380460
L_18772:
	cmpq $0x1,%r10
	je L_380459
L_18773:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_267
.p2align 0x4
L_380459:
L_18774:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380460:
L_18775:
	movq %r13,%r9
	addq 0x0(%r11),%r9
	movq 0x10(%r11),%rsp
	movb 0x0(%rsp,%r9,1),%r8b
	movb %r8b,0x0(%r15,%r14,1)
	incq %r13
	incq %r14
	jmp loop_266
.p2align 0x4
L_380461:
L_18770:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380462:
L_18777:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380463:
L_18778:
	movq (globalObjptr+0x5B0)(%rip),%r14
	xchgq %r14,%r15
	jmp L_18769
.p2align 0x4
L_380464:
L_18779:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x20(%rbp)
	testq %r13,%r13
	jnz L_18781
L_18790:
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jne L_380465
L_18792:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380465:
L_18781:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_380468
L_18782:
	cmpq $0x7FFFFFFF,%rdx
	ja L_18777
L_18783:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_18784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18784
.p2align 0x4
.long 0x49D
L_18784:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,%r15
L_18785:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_268:
	cmpq 0x20(%rbp),%r14
	jnl L_380466
L_18787:
	movq %r14,%r13
	addq 0x10(%rbp),%r13
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_268
.p2align 0x4
L_380466:
L_18786:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380468:
L_18789:
	movq (globalObjptr+0x5A8)(%rip),%r15
	jmp L_18785
.p2align 0x4
L_380470:
L_18793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18794
.p2align 0x4
.long 0x45C
L_18794:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_18759
.p2align 0x4
L_380471:
L_18795:
	movq $0x3,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380472:
L_18796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_18797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18797
.p2align 0x4
.long 0x5E2
L_18797:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_18610
.p2align 0x4
.long 0x5E0
full_0:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
.long 0x5E0
L_18707:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18708
L_18709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18710
.p2align 0x4
.long 0x5E1
L_18710:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18708:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE0F0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5E0
L_18630:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18631
L_18649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18650
.p2align 0x4
.long 0x5E1
L_18650:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18631:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_380477
L_18634:
	movl $0x8,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380476
L_18635:
	testl %r14d,%r14d
	jnz L_380475
L_18638:
L_18639:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380475:
L_18637:
	movq (globalObjptr+0x748)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380476:
L_18640:
	movl %r14d,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_18641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380477:
L_18633:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E0
L_18652:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18653
L_18669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18670
.p2align 0x4
.long 0x5E1
L_18670:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18653:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_18633
L_18655:
	movl $0x4,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380480
L_18656:
	testl %r14d,%r14d
	jnz L_18637
L_18658:
L_18659:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0A8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380480:
L_18660:
	movl %r14d,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_18661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x5E0
L_18672:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18673
L_18689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18690
.p2align 0x4
.long 0x5E1
L_18690:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18673:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_18633
L_18675:
	movl $0x3,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380484
L_18676:
	testl %r14d,%r14d
	jnz L_18637
L_18678:
L_18679:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380484:
L_18680:
	movl %r14d,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_18681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x578
L_18641:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18642
L_18647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_18648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18648
.p2align 0x4
.long 0x563
L_18648:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_18642:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_18643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x578
L_18661:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18662
L_18667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_18668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18668
.p2align 0x4
.long 0x563
L_18668:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_18662:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_18663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x578
L_18681:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18682
L_18687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_18688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18688
.p2align 0x4
.long 0x563
L_18688:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_18682:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_18683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5E0
L_18643:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18644
L_18645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18646
.p2align 0x4
.long 0x5E1
L_18646:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18644:
	movq 0x20(%rbp),%r15
	jmp L_18639
.p2align 0x4
.long 0x5E0
L_18663:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18664
L_18665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18666
.p2align 0x4
.long 0x5E1
L_18666:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18664:
	movq 0x20(%rbp),%r15
	jmp L_18659
.p2align 0x4
.long 0x5E0
L_18683:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18684
L_18685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18686
.p2align 0x4
.long 0x5E1
L_18686:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18684:
	movq 0x20(%rbp),%r15
	jmp L_18679
.text
.p2align 0x4
.globl toString_539
.hidden toString_539
toString_539:
L_18800:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_18888
L_18801:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380507
L_18802:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movb 0x0(%rbp),%r15b
	movzbl %r15b,%r11d
	cmpb $0x20,%r15b
	jb L_380506
L_18803:
	cmpb $0x7E,%r15b
	ja L_380495
L_18804:
	cmpl $0x22,%r11d
	je L_380494
	cmpl $0x5C,%r11d
	je L_380493
L_18805:
	movzbq %r15b,%r11
	shlq $0x4,%r11
	orq $0x9,%r11
	movq %r11,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380493:
L_18807:
	movq (globalObjptr+0xE098)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380494:
L_18806:
	movq (globalObjptr+0xE080)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380495:
	movq %r14,%r15
	movq %r13,%r14
	movl %r11d,%ecx
L_18809:
	cmpl $0x7,%ecx
	je L_380505
	cmpl $0x8,%ecx
	je L_380504
	cmpl $0x9,%ecx
	je L_380503
	cmpl $0xA,%ecx
	je L_380502
	cmpl $0xB,%ecx
	je L_380501
	cmpl $0xC,%ecx
	je L_380500
	cmpl $0xD,%ecx
	je L_380499
L_18810:
	cmpl $0x20,%ecx
	jl L_380498
L_18811:
	cmpl $0x100,%ecx
	jl L_380497
L_18812:
	cmpl $0x10000,%ecx
	jl L_380496
L_18813:
	movl %ecx,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x0(%r14)
	movl $0x21,0x4(%r14)
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_18814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380496:
L_18835:
	movl %ecx,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x0(%r14)
	movl $0x21,0x4(%r14)
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_18836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380497:
L_18855:
	movl %ecx,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x0(%r15)
	movl $0x21,0x4(%r15)
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_18856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380498:
L_18875:
	addl $0x40,%ecx
	movb %cl,%r15b
	movzbq %r15b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x8(%rbp)
	movl $0x1,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_18876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380499:
L_18886:
	movq (globalObjptr+0xE0E8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380500:
L_18885:
	movq (globalObjptr+0xE0E0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380501:
L_18884:
	movq (globalObjptr+0xE0D8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380502:
L_18883:
	movq (globalObjptr+0xE0D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380503:
L_18882:
	movq (globalObjptr+0xE0C8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380504:
L_18881:
	movq (globalObjptr+0xE0C0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380505:
L_18880:
	movq (globalObjptr+0xE0B8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380506:
	movq %r14,%r15
	movq %r13,%r14
	movl %r11d,%ecx
	jmp L_18809
.p2align 0x4
L_380507:
L_18888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18889
.p2align 0x4
.long 0x495
L_18889:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_18802
.p2align 0x4
.long 0x1
L_18814:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18815
L_18833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18834
.p2align 0x4
.long 0x452
L_18834:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18815:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_380511
L_18818:
	movl $0x8,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380510
L_18819:
	testl %r14d,%r14d
	jnz L_380509
L_18822:
L_18823:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_380509:
L_18821:
	movq (globalObjptr+0x748)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380510:
L_18824:
	movl %r14d,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380511:
L_18817:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_18836:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18837
L_18853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18854
.p2align 0x4
.long 0x452
L_18854:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18837:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_18817
L_18839:
	movl $0x4,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380514
L_18840:
	testl %r14d,%r14d
	jnz L_18821
L_18842:
L_18843:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0A8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_380514:
L_18844:
	movl %r14d,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x1
L_18856:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18857
L_18873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18874
.p2align 0x4
.long 0x452
L_18874:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18857:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_18817
L_18859:
	movl $0x3,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380518
L_18860:
	testl %r14d,%r14d
	jnz L_18821
L_18862:
L_18863:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_380518:
L_18864:
	movl %r14d,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x1
L_18876:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18877
L_18878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18879
.p2align 0x4
.long 0x452
L_18879:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18877:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE1B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x522
L_18825:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18826
L_18831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18832
.p2align 0x4
.long 0x4E9
L_18832:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_18826:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x522
L_18845:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18846
L_18851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18852
.p2align 0x4
.long 0x4E9
L_18852:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_18846:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x522
L_18865:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18866
L_18871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18872
.p2align 0x4
.long 0x4E9
L_18872:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_18866:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_18827:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18828
L_18829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18830
.p2align 0x4
.long 0x452
L_18830:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18828:
	movq 0x0(%rbp),%r15
	jmp L_18823
.p2align 0x4
.long 0x1
L_18847:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18848
L_18849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18850
.p2align 0x4
.long 0x452
L_18850:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18848:
	movq 0x0(%rbp),%r15
	jmp L_18843
.p2align 0x4
.long 0x1
L_18867:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18868
L_18869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18870
.p2align 0x4
.long 0x452
L_18870:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18868:
	movq 0x0(%rbp),%r15
	jmp L_18863
.text
.p2align 0x4
.globl get_21
.hidden get_21
get_21:
L_18890:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18891
L_18945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18946
.p2align 0x4
.long 0x460
L_18946:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18891:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_380537
L_18893:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_380536
L_18894:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_18896:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_380535
L_18937:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD9C,%r10
	jne L_380534
L_18938:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_380531
L_18897:
	incl %ecx
	jo L_380530
L_18899:
	cmpq $0x1,%r14
	je L_380528
L_18900:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_18896
.p2align 0x4
L_380528:
L_18901:
L_18902:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_380529
L_18904:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_27
L_18936:
	movl %ecx,0x0(%r15)
x_27:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_380529:
L_18903:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380530:
L_18898:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380531:
L_18940:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_18903
L_18941:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_380532
L_18943:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380532:
L_18942:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380534:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_18897
.p2align 0x4
L_380535:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_18897
.p2align 0x4
L_380536:
L_18944:
	xorl %ecx,%ecx
	jmp L_18902
.p2align 0x4
L_380537:
L_18892:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_18906:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_18907:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_18908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_18908:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_18909:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_18910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_18910:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18911
L_18934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_18935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18935
.p2align 0x4
.long 0x4AF
L_18935:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_18911:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_18912:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_18898
L_18913:
	cmpq $0x1,%r14
	je L_380539
L_18914:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_18912
.p2align 0x4
L_380539:
L_18915:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18916
L_18932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18933
.p2align 0x4
.long 0x4E7
L_18933:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18916:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380540
L_18917:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_5:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380540:
L_18931:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_5
.p2align 0x4
.long 0x1
rev_5:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_380546
L_18918:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_18919:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380545
.p2align 0x4,,0x7
L_18920:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_380544
L_18921:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_18919
.p2align 0x4
L_380544:
L_18923:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380545:
L_18928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18929
.p2align 0x4
.long 0x45C
L_18929:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_18920
.p2align 0x4
L_380546:
L_18930:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_18923
.p2align 0x4
.long 0x1
L_18924:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18925
L_18926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18927
.p2align 0x4
.long 0x452
L_18927:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18925:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3785
.hidden loop_3785
loop_3785:
L_18947:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18948
L_18979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18980
.p2align 0x4
.long 0x460
L_18980:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18948:
	movq 0x8(%rbp),%r15
.p2align 0x4,,0x7
loop_269:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	cmpq $0x1,%r14
	je L_380554
L_18949:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDB3,%r15
	je L_380552
	cmpq $0xDB4,%r15
	je L_380550
	cmpq $0xDB5,%r15
	je L_380548
L_18950:
	movq 0x8(%r14),%r15
	jmp loop_269
.p2align 0x4
L_380548:
L_18974:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18975
L_18976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18977
.p2align 0x4
.long 0x460
L_18977:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18975:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380550:
L_18967:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_380551
L_18968:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movq 0x0(%rbp),%r14
	movq %r15,0x0(%rbp)
	movq %r13,%r15
L_18969:
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_18970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380551:
L_18973:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380552:
L_18951:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_380553
L_18952:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380553:
L_18966:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380554:
L_18978:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_18970:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_380556
L_18971:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_18969
.p2align 0x4
L_380556:
L_18972:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x522
L_18953:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18954
L_18964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18965
.p2align 0x4
.long 0x4E9
L_18965:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_18954:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_380557
L_18955:
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%rbp),%r14
L_18956:
	movq %r15,0x18(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_18957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380557:
L_18963:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_18957:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18958
L_18961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18962
.p2align 0x4
.long 0x460
L_18962:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18958:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_380559
L_18959:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%rbp),%r14
	jmp L_18956
.p2align 0x4
L_380559:
L_18960:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl record_3
.hidden record_3
record_3:
L_18981:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19012
L_18982:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380562
L_18983:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_380561
L_18984:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
L_18985:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_18986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_380561:
L_19011:
	movq $0x1,%r15
L_19003:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
L_380562:
L_19012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19013
.p2align 0x4
.long 0x452
L_19013:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_18983
.p2align 0x4
.long 0x51F
L_18986:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_18987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_18987:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18988
L_19009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19010
.p2align 0x4
.long 0x4AF
L_19010:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_18988:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_18989:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_380570
L_18991:
	cmpq $0x1,%r14
	je L_380564
L_18992:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_18989
.p2align 0x4
L_380564:
L_18993:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18994
L_19007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19008
.p2align 0x4
.long 0x52D
L_19008:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_18994:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380568
L_18995:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_18996:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_380565
L_18997:
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,%r15
	jmp L_18985
.p2align 0x4
L_380565:
L_18998:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_18999:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380567
.p2align 0x4,,0x7
L_19000:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_19003
L_19001:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_18999
.p2align 0x4
L_380567:
L_19004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19005
.p2align 0x4
.long 0x45C
L_19005:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_19000
.p2align 0x4
L_380568:
L_19006:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_18996
.p2align 0x4
L_380570:
L_18990:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_16
.hidden get_16
get_16:
L_19014:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19015
L_19072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19073
.p2align 0x4
.long 0x460
L_19073:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19015:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_380582
L_19017:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_380581
L_19018:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_19020:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_380580
L_19064:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD97,%r10
	jne L_380579
L_19065:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_380576
L_19021:
	incl %ecx
	jo L_380575
L_19023:
	cmpq $0x1,%r14
	je L_380572
L_19024:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_19020
.p2align 0x4
L_380572:
L_19025:
L_19026:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_380574
L_19028:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_28
L_19063:
	movl %ecx,0x0(%r15)
x_28:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_380573
L_19061:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_19062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_380573:
L_19030:
	movq %r14,%r15
L_19031:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380574:
L_19027:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380575:
L_19022:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380576:
L_19067:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_19027
L_19068:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_380577
L_19070:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380577:
L_19069:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380579:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_19021
.p2align 0x4
L_380580:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_19021
.p2align 0x4
L_380581:
L_19071:
	xorl %ecx,%ecx
	jmp L_19026
.p2align 0x4
L_380582:
L_19016:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x522
L_19062:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_19031
.p2align 0x4
.long 0x1
L_19032:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_19033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_19033:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_19034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_19034:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_19035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_19035:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19036
L_19059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19060
.p2align 0x4
.long 0x4AF
L_19060:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_19036:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_19037:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_19022
L_19038:
	cmpq $0x1,%r14
	je L_380584
L_19039:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19037
.p2align 0x4
L_380584:
L_19040:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19041
L_19057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19058
.p2align 0x4
.long 0x4E7
L_19058:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19041:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380585
L_19042:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_6:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380585:
L_19056:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_6
.p2align 0x4
.long 0x1
rev_6:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_380591
L_19043:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_19044:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380590
.p2align 0x4,,0x7
L_19045:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_380589
L_19046:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_19044
.p2align 0x4
L_380589:
L_19048:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380590:
L_19053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19054
.p2align 0x4
.long 0x45C
L_19054:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_19045
.p2align 0x4
L_380591:
L_19055:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_19048
.p2align 0x4
.long 0x1
L_19049:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19050
L_19051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19052
.p2align 0x4
.long 0x452
L_19052:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19050:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_24
.hidden layout_24
layout_24:
L_19074:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19075
L_19194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19195
.p2align 0x4
.long 0x460
L_19195:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19075:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_380593
L_19138:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq (globalObjptr+0xDE88)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380593:
L_19076:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE1C0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_19139:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_19140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x518
L_19077:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19078
L_19136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19137
.p2align 0x4
.long 0x4EA
L_19137:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19078:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_380595
L_19080:
	movl %r10d,0x40(%rbp)
	movq $0x3B2B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_380595:
L_19079:
	movq (globalObjptr+0x518)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E3
L_19140:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E3
L_19081:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_19082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5E3
L_19141:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19142
L_19192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19193
.p2align 0x4
.long 0x4F2
L_19193:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19142:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEE8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_380597
L_19170:
	shrq $0x1,%r14
	movl %r14d,0x38(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380597:
L_19143:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E3
L_19082:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19083
L_19134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19135
.p2align 0x4
.long 0x4F2
L_19135:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19083:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_380599
L_19112:
	shrq $0x1,%r14
	movl %r14d,0x38(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380599:
L_19084:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E9
L_19171:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_380601
L_19172:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_19173:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380601:
L_19191:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_19173
.p2align 0x4
.long 0x511
L_19144:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19145
L_19168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19169
.p2align 0x4
.long 0x5E8
L_19169:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19145:
	movq 0x38(%rbp),%r15
L_19146:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_19147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x5E9
L_19113:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_380603
L_19114:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_19115:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380603:
L_19133:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_19115
.p2align 0x4
.long 0x511
L_19085:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19086
L_19110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19111
.p2align 0x4
.long 0x5E8
L_19111:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19086:
	movq 0x38(%rbp),%r15
L_19087:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_19088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x5EA
L_19174:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19175
L_19189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19190
.p2align 0x4
.long 0x5EC
L_19190:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19175:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x512
L_19147:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19148
L_19166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19167
.p2align 0x4
.long 0x5EF
L_19167:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19148:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5EA
L_19116:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19117
L_19131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19132
.p2align 0x4
.long 0x5EC
L_19132:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19117:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5E4
L_19088:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19089
L_19108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19109
.p2align 0x4
.long 0x5E7
L_19109:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19089:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5EA
L_19176:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19177
L_19187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19188
.p2align 0x4
.long 0x5EC
L_19188:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19177:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19178:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_380612
L_19179:
	cmpq $0x1,%r14
	je L_380609
L_19180:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19178
.p2align 0x4
L_380609:
L_19181:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19182
L_19185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19186
.p2align 0x4
.long 0x5EB
L_19186:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19182:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380610
L_19183:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19146
.p2align 0x4
L_380610:
L_19184:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19146
.p2align 0x4
L_380612:
L_19095:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EE
L_19149:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19150
L_19164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19165
.p2align 0x4
.long 0x4FD
L_19165:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19150:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5EA
L_19118:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19119
L_19129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19130
.p2align 0x4
.long 0x5EC
L_19130:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19119:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19120:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_19095
L_19121:
	cmpq $0x1,%r14
	je L_380615
L_19122:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19120
.p2align 0x4
L_380615:
L_19123:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19124
L_19127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19128
.p2align 0x4
.long 0x5EB
L_19128:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19124:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380616
L_19125:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19087
.p2align 0x4
L_380616:
L_19126:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19087
.p2align 0x4
.long 0x51A
L_19090:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19091
L_19106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19107
.p2align 0x4
.long 0x51D
L_19107:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19091:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x51B
L_19151:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19152
L_19162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19163
.p2align 0x4
.long 0x489
L_19163:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19152:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19153:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_19095
L_19154:
	cmpq $0x1,%r14
	je L_380621
L_19155:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19153
.p2align 0x4
L_380621:
L_19156:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19157
L_19160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19161
.p2align 0x4
.long 0x51C
L_19161:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19157:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380622
L_19158:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380622:
L_19159:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_19092:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19093
L_19104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19105
.p2align 0x4
.long 0x5E6
L_19105:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19093:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19094:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_19095
L_19096:
	cmpq $0x1,%r14
	je L_380626
L_19097:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19094
.p2align 0x4
L_380626:
L_19098:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19099
L_19102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19103
.p2align 0x4
.long 0x5E5
L_19103:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19099:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380627
L_19100:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380627:
L_19101:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_3
.hidden layout_3
layout_3:
L_19196:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19197
L_19311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19312
.p2align 0x4
.long 0x460
L_19312:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19197:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x5F0
L_19198:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19199
L_19309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19310
.p2align 0x4
.long 0x4EA
L_19310:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19199:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_380639
L_19201:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_380638
	cmpq $0x1085,%r15
	je L_380636
	cmpq $0x1086,%r15
	je L_380635
L_19202:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_380634
	cmpb $0x2,%r14b
	je L_380633
	cmpb $0x3,%r14b
	je L_380632
L_19203:
	movq (globalObjptr+0xE1C8)(%rip),%r15
L_19204:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_19205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380632:
L_19237:
	movq (globalObjptr+0xD828)(%rip),%r15
	jmp L_19204
.p2align 0x4
L_380633:
L_19236:
	movq (globalObjptr+0xE1D0)(%rip),%r15
	jmp L_19204
.p2align 0x4
L_380634:
L_19235:
	movq (globalObjptr+0xCE20)(%rip),%r15
	jmp L_19204
.p2align 0x4
L_380635:
L_19256:
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_380636:
L_19252:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_380637
L_19254:
	movl %r13d,0x10(%rbp)
	movq $0x3C9B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_380637:
L_19253:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380638:
L_19238:
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE1D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380639:
L_19200:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_19205:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_19257:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_19200
L_19258:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_19255:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x491
L_19239:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_19240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_11
.p2align 0x4
.long 0x5F0
L_19206:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_19207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_3
.p2align 0x4
.long 0x51A
L_19259:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_380642
L_19260:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
L_19261:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xE1E0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380642:
L_19308:
	movq $0x1,%r15
L_19279:
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x45A
L_19240:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19241
L_19250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19251
.p2align 0x4
.long 0x509
L_19251:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19241:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19242:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_380646
L_19243:
	cmpq $0x1,%r14
	je L_380643
L_19244:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19242
.p2align 0x4
L_380643:
L_19245:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19246
L_19248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19249
.p2align 0x4
.long 0x51E
L_19249:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19246:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380644
L_19247:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380644:
L_19225:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380646:
L_19210:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_19207:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19208
L_19233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19234
.p2align 0x4
.long 0x51D
L_19234:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19208:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19209:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_19210
L_19211:
	cmpq $0x1,%r14
	je L_380648
L_19212:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19209
.p2align 0x4
L_380648:
L_19213:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19214
L_19231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19232
.p2align 0x4
.long 0x51E
L_19232:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19214:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380649
L_19215:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
paren_5:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_19216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380649:
L_19230:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_5
.p2align 0x4
.long 0x5F1
L_19262:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_19263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x51B
L_19280:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4B0
L_19216:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_19217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EA
L_19263:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51B
L_19281:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19282
L_19299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19300
.p2align 0x4
.long 0x5F4
L_19300:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19282:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380654
L_19283:
	decl %ecx
	jo L_19210
L_19284:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_19285:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380654:
L_19298:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_19285
.p2align 0x4
.long 0x5B0
L_19217:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19218
L_19228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19229
.p2align 0x4
.long 0x45C
L_19229:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_19218:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19219:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19210
L_19220:
	cmpq $0x1,%r14
	je L_380656
L_19221:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19219
.p2align 0x4
L_380656:
L_19222:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19223
L_19226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19227
.p2align 0x4
.long 0x49D
L_19227:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19223:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_19225
L_19224:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EA
L_19264:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19265
L_19306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19307
.p2align 0x4
.long 0x5EC
L_19307:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19265:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19266:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_19210
L_19267:
	cmpq $0x1,%r14
	je L_380661
L_19268:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19266
.p2align 0x4
L_380661:
L_19269:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19270
L_19304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19305
.p2align 0x4
.long 0x5EB
L_19305:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19270:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380665
L_19271:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_19272:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_380662
L_19273:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r14,%r15
	jmp L_19261
.p2align 0x4
L_380662:
L_19274:
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_19275:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380664
.p2align 0x4,,0x7
L_19276:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_19279
L_19277:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_19275
.p2align 0x4
L_380664:
L_19301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19302
.p2align 0x4
.long 0x5F5
L_19302:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_19276
.p2align 0x4
L_380665:
L_19303:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_19272
.p2align 0x4
.long 0x5F2
L_19286:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19287
L_19296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19297
.p2align 0x4
.long 0x48A
L_19297:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19287:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19288:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_19210
L_19289:
	cmpq $0x1,%r14
	je L_380669
L_19290:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19288
.p2align 0x4
L_380669:
L_19291:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19292
L_19294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19295
.p2align 0x4
.long 0x5F3
L_19295:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19292:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_19225
L_19293:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl root_5
.hidden root_5
root_5:
L_19313:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19314
L_19323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19324
.p2align 0x4
.long 0x452
L_19324:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19314:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1456,%r13
	je L_380675
L_19315:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1457,%r15
	jne L_380674
L_19317:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_19318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_380674:
L_19316:
	movq (globalObjptr+0x14F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380675:
L_19322:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_19318:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19319
L_19320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19321
.p2align 0x4
.long 0x460
L_19321:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19319:
	movq $0x28AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_11
.hidden layout_11
layout_11:
L_19325:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19383
L_19326:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380694
L_19327:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0xC51,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x20(%rbp)
	addq $0x28,%r12
	movq %r11,0x0(%r10)
	movq 0x8(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r11,0x18(%r10)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_380693
L_19329:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_380692
L_19330:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_19332:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_19333
L_19372:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA9,%r13
	jne L_19333
L_19373:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x18(%rbp)
	je L_380685
L_19333:
	movl 0x30(%rbp),%r13d
	incl %r13d
	movl %r13d,0x34(%rbp)
	jo L_380684
L_19335:
	cmpq $0x1,%r15
	je L_380678
L_19336:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x30(%rbp)
	jmp L_19332
.p2align 0x4
L_380678:
L_19337:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19338
L_19370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19371
.p2align 0x4
.long 0x5F7
L_19371:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19338:
	movl 0x34(%rbp),%ecx
L_19339:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_380682
L_19341:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_19343
L_19369:
	movl %ecx,0x0(%r15)
L_19343:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	je L_380679
L_19364:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380679:
L_19344:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_380680
L_19346:
	movl %r13d,0x48(%rbp)
	movq $0x381D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_380680:
L_19345:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380682:
L_19340:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380684:
L_19334:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380685:
L_19375:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19376
L_19380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19381
.p2align 0x4
.long 0x5F8
L_19381:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19376:
	movl 0x30(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_19340
L_19377:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_380687
L_19378:
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
L_19351:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_380686
L_19352:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_19353:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_380686:
L_19358:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380687:
L_19379:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_19351
.p2align 0x4
L_380692:
L_19382:
	xorl %ecx,%ecx
	jmp L_19339
.p2align 0x4
L_380693:
L_19328:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380694:
L_19383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19384
.p2align 0x4
.long 0x460
L_19384:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_19327
.p2align 0x4
.long 0x4E3
L_19365:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19366
L_19367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19368
.p2align 0x4
.long 0x520
L_19368:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19366:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_19350:
	movq $0x1953,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_19351
.p2align 0x4
.long 0x5F6
L_19347:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_19348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x4A8
L_19354:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19355
L_19359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19360
.p2align 0x4
.long 0x4B1
L_19360:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19355:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_19358
L_19356:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_19353
.p2align 0x4
.long 0x4E3
L_19348:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19349
L_19362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19363
.p2align 0x4
.long 0x520
L_19363:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19349:
	movq 0x20(%rbp),%r15
	jmp L_19350
.text
.p2align 0x4
.globl tabulate_12
.hidden tabulate_12
tabulate_12:
L_19385:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19386
L_19574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19575
.p2align 0x4
.long 0x458
L_19575:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19386:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_380742
L_19387:
	cmpq $0x7FFFFFFF,%rdx
	ja L_380741
L_19388:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1481,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19389
.p2align 0x4
.long 0x453
L_19389:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_19390:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_270:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_380740
L_19392:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_380739
L_19393:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C07,%rax
	cmpq $0xC,%rax
	ja L_380700
	jmp *jumpTable_21(,%rax,8)
.data
.p2align 0x4
jumpTable_21:
.quad L_380737,L_380733,L_380731,L_380730,L_380729,L_380728,L_380727,L_380711,L_380709,L_380707,L_380705,L_380702,L_380701
.text
.p2align 0x4
L_380700:
L_19394:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3788
.p2align 0x4
L_380701:
L_19570:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3788
.p2align 0x4
L_380702:
L_19565:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movslq %r14d,%r15
	movq 0x10(%r13),%r14
	movq 0x0(%r14,%r15,8),%r10
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jz L_380704
L_19567:
	cmpq $0x1,%r10
	je L_380703
L_19568:
	movq %r10,%r15
.p2align 0x4,,0x7
L_19396:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x8(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x18(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r15,%r9,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r13,0x8(%r15,%r14,1)
	incq %r11
	movq %r11,0x18(%rbp)
	jmp loop_270
.p2align 0x4
L_380703:
L_19569:
	movq %r11,%r15
	jmp L_19396
.p2align 0x4
L_380704:
L_19566:
	movq %r11,%r15
	jmp L_19396
.p2align 0x4
L_380705:
L_19543:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	salq $0x4,%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10,%r11,1),%r9
	movl 0x0(%r10,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_380706
L_19544:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_27
.p2align 0x4
L_380706:
L_19550:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_27
.p2align 0x4
L_380707:
L_19521:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	salq $0x4,%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10,%r11,1),%r9
	movl 0x0(%r10,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_380708
L_19522:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
L_380708:
L_19528:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
L_380709:
L_19499:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	salq $0x4,%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10,%r11,1),%r9
	movl 0x0(%r10,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_380710
L_19500:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_380710:
L_19506:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_380711:
L_19455:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movslq %r14d,%r15
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r15,8),%r8
	movq %r8,0x28(%rbp)
	movq 0x18(%r10),%r14
	movq 0x10(%r10),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r10),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r10),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r8),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_380726
L_19457:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_380724
L_19458:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_19460:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_380723
L_19488:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA9,%r11
	jne L_380722
L_19489:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_380719
L_19461:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_380718
L_19462:
	cmpq $0x1,%r15
	je L_380712
L_19463:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_19460
.p2align 0x4
L_380712:
L_19464:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19465
L_19486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_19487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19487
.p2align 0x4
.long 0x5FD
L_19487:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_19465:
	movl 0x50(%rbp),%ecx
L_19466:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_380716
L_19468:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_19470
L_19485:
	movl %ecx,0x0(%r15)
L_19470:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	je L_380713
L_19480:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_19481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380713:
L_19471:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_380714
L_19473:
	movl %r13d,0x60(%rbp)
	movq $0x381D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_19474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_380714:
L_19472:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380716:
L_19467:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380718:
L_19417:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380719:
L_19491:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_19467
L_19492:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_380720
L_19494:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_19396
.p2align 0x4
L_380720:
L_19493:
	movq %r11,%r15
	jmp L_19396
.p2align 0x4
L_380722:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_19461
.p2align 0x4
L_380723:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_19461
.p2align 0x4
L_380724:
L_19495:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19496
L_19497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19498
.p2align 0x4
.long 0x5A3
L_19498:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19496:
	xorl %ecx,%ecx
	jmp L_19466
.p2align 0x4
L_380726:
L_19456:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380727:
L_19454:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_19396
.p2align 0x4
L_380728:
L_19453:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_380729:
L_19452:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_380730:
L_19451:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_19396
.p2align 0x4
L_380731:
L_19429:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	salq $0x4,%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10,%r11,1),%r9
	movl 0x0(%r10,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_380732
L_19430:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_380732:
L_19436:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_380733:
L_19400:
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	salq $0x4,%r15
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11,%r15,1),%r10
	movl 0x0(%r11,%r14,1),%r9d
	testl %r9d,%r9d
	jnz L_380735
L_19401:
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_380734
L_19402:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_19403:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380734:
L_19409:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_19403
.p2align 0x4
L_380735:
L_19410:
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_380736
L_19411:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_19412:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380736:
L_19428:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_19412
.p2align 0x4
L_380737:
L_19397:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r10
	cmpq $0x1,%r10
	je L_380738
L_19398:
	movq %r10,%r15
	jmp L_19396
.p2align 0x4
L_380738:
L_19399:
	movq %r11,%r15
	jmp L_19396
.p2align 0x4
L_380739:
L_19571:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380740:
L_19391:
	movq 0x8(%rbp),%r14
	movq $0xB15,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380741:
L_19572:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380742:
L_19573:
	movq (globalObjptr+0xC60)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_19390
.p2align 0x4
.long 0x5F9
L_19395:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_19396
.p2align 0x4
.long 0x5F9
L_19545:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19546
L_19548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19549
.p2align 0x4
.long 0x52D
L_19549:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19546:
	movq 0x20(%rbp),%r15
L_19547:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19396
.p2align 0x4
.long 0x5F9
L_19551:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F9
L_19523:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19524
L_19526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19527
.p2align 0x4
.long 0x52D
L_19527:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19524:
	movq 0x20(%rbp),%r15
L_19525:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19396
.p2align 0x4
.long 0x5F9
L_19529:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F9
L_19501:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19502
L_19504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19505
.p2align 0x4
.long 0x52D
L_19505:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19502:
	movq 0x20(%rbp),%r15
L_19503:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19396
.p2align 0x4
.long 0x5F9
L_19507:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5FB
L_19481:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19482
L_19483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19484
.p2align 0x4
.long 0x5FC
L_19484:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19482:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_19477:
	movq $0x1953,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_19396
.p2align 0x4
.long 0x5FA
L_19474:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_19475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x5F9
L_19431:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19432
L_19434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19435
.p2align 0x4
.long 0x52D
L_19435:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19432:
	movq 0x20(%rbp),%r15
L_19433:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19396
.p2align 0x4
.long 0x5F9
L_19437:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F9
L_19404:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19405
L_19407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19408
.p2align 0x4
.long 0x52D
L_19408:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19405:
	movq 0x20(%rbp),%r15
L_19406:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19396
.p2align 0x4
.long 0x5F9
L_19413:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x457
L_19552:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19553
L_19563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19564
.p2align 0x4
.long 0x57A
L_19564:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19553:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19554:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19417
L_19555:
	cmpq $0x1,%r14
	je L_380750
L_19556:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19554
.p2align 0x4
L_380750:
L_19557:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19558
L_19561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19562
.p2align 0x4
.long 0x55A
L_19562:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19558:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380751
L_19559:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19547
.p2align 0x4
L_380751:
L_19560:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19547
.p2align 0x4
.long 0x457
L_19530:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19531
L_19541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19542
.p2align 0x4
.long 0x57A
L_19542:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19531:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19532:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19417
L_19533:
	cmpq $0x1,%r14
	je L_380755
L_19534:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19532
.p2align 0x4
L_380755:
L_19535:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19536
L_19539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19540
.p2align 0x4
.long 0x55A
L_19540:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19536:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380756
L_19537:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19525
.p2align 0x4
L_380756:
L_19538:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19525
.p2align 0x4
.long 0x457
L_19508:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19509
L_19519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19520
.p2align 0x4
.long 0x57A
L_19520:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19509:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19510:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19417
L_19511:
	cmpq $0x1,%r14
	je L_380760
L_19512:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19510
.p2align 0x4
L_380760:
L_19513:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19514
L_19517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19518
.p2align 0x4
.long 0x55A
L_19518:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19514:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380761
L_19515:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19503
.p2align 0x4
L_380761:
L_19516:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19503
.p2align 0x4
.long 0x5FB
L_19475:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19476
L_19478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19479
.p2align 0x4
.long 0x5FC
L_19479:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19476:
	movq 0x20(%rbp),%r15
	jmp L_19477
.p2align 0x4
.long 0x457
L_19438:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19439
L_19449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19450
.p2align 0x4
.long 0x57A
L_19450:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19439:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19440:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19417
L_19441:
	cmpq $0x1,%r14
	je L_380766
L_19442:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19440
.p2align 0x4
L_380766:
L_19443:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19444
L_19447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19448
.p2align 0x4
.long 0x55A
L_19448:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19444:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380767
L_19445:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19433
.p2align 0x4
L_380767:
L_19446:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19433
.p2align 0x4
.long 0x457
L_19414:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19415
L_19426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19427
.p2align 0x4
.long 0x57A
L_19427:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19415:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19416:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19417
L_19418:
	cmpq $0x1,%r14
	je L_380771
L_19419:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19416
.p2align 0x4
L_380771:
L_19420:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19421
L_19424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19425
.p2align 0x4
.long 0x55A
L_19425:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19421:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380772
L_19422:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19406
.p2align 0x4
L_380772:
L_19423:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19406
.text
.p2align 0x4
.globl loop_3788
.hidden loop_3788
loop_3788:
L_19576:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19674
L_19577:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380781
L_19578:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1057,%r14
	je L_380778
	cmpq $0x1058,%r14
	je L_380776
L_19579:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x8(%rbp)
	addq $0x8,%rbp
	leaq (simple_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380776:
L_19670:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_380777
L_19672:
	movl %r13d,0x30(%rbp)
	movq $0x3827,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_380777:
L_19587:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380778:
L_19583:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1059,%r15
	je L_380780
L_19632:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_19587
L_19634:
	movl %r13d,0x38(%rbp)
	movq $0x380D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_380780:
L_19584:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380781:
L_19674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19675
.p2align 0x4
.long 0x460
L_19675:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_19578
.p2align 0x4
.long 0x1
simple_9:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19580
L_19581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19582
.p2align 0x4
.long 0x452
L_19582:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19580:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_19673:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
layoutApp_0:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1054,%r13
	jne L_380784
L_19636:
	movq %r14,0x0(%rbp)
	movq %r11,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	jmp layoutApp_1
.p2align 0x4
L_380784:
L_19637:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x2
L_19635:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	jmp layoutApp_0
.p2align 0x4
.long 0x5F0
L_19585:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	movq %r14,0x28(%rbp)
	jne L_19587
L_19588:
	cmpq $0x7FFFFFFF,%rdx
	ja L_380787
L_19589:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19590
.p2align 0x4
.long 0x5FE
L_19590:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_271:
	cmpq 0x30(%rbp),%r15
	jnl L_380786
L_19628:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_380785
L_19630:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_271
.p2align 0x4
L_380785:
L_19629:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380786:
L_19591:
	movb $0x1,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_19592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sortArray_0
.p2align 0x4
L_380787:
L_19631:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_19638:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1458,%r14
	jne L_380791
L_19640:
	movq 0x8(%r15),%r14
	movl 0x8(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movl 0xC(%r14),%r13d
	movl %r13d,0x24(%rbp)
	movl 0x10(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x30(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_380790
	cmpb $0x2,%r13b
	je L_380789
L_19641:
	movq (globalObjptr+0xE1F8)(%rip),%r15
L_19642:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380789:
L_19669:
	movq (globalObjptr+0xE228)(%rip),%r15
	jmp L_19642
.p2align 0x4
L_380790:
L_19668:
	movq (globalObjptr+0xE220)(%rip),%r15
	jmp L_19642
.p2align 0x4
L_380791:
L_19639:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5FF
L_19592:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19593
L_19626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19627
.p2align 0x4
.long 0x602
L_19627:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19593:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_19587
L_19595:
	movq $0x39C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	movl %r14d,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_19596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
.long 0x603
L_19643:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19644
L_19666:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19667
.p2align 0x4
.long 0x608
L_19667:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19644:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE200)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_19645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x600
L_19596:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19597
L_19624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19625
.p2align 0x4
.long 0x4EA
L_19625:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19597:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_19587
L_19599:
	movl %r13d,0x38(%rbp)
	movq $0x3C8F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x604
L_19645:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x45A
L_19600:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_19601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x604
L_19646:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19647
L_19664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19665
.p2align 0x4
.long 0x607
L_19665:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19647:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE208)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x24(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_380797
L_19648:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_19649:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380797:
L_19663:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_19649
.p2align 0x4
.long 0x45A
L_19601:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x605
L_19650:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19651
L_19661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19662
.p2align 0x4
.long 0x606
L_19662:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19651:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE210)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_19652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x45A
L_19602:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19603
L_19622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19623
.p2align 0x4
.long 0x601
L_19623:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19603:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380801
L_19604:
	decl %ecx
	jo L_380800
L_19606:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_19607:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380800:
L_19605:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380801:
L_19621:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_19607
.p2align 0x4
.long 0x513
L_19652:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EE
L_19608:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19609
L_19619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19620
.p2align 0x4
.long 0x4FD
L_19620:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19609:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19610:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_19605
L_19611:
	cmpq $0x1,%r14
	je L_380803
L_19612:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19610
.p2align 0x4
L_380803:
L_19613:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19614
L_19617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19618
.p2align 0x4
.long 0x51C
L_19618:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19614:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380804
L_19615:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
simple_10:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380804:
L_19616:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp simple_10
.p2align 0x4
.long 0x513
L_19653:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19654
L_19659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19660
.p2align 0x4
.long 0x515
L_19660:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19654:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE218)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1
L_19655:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19656
L_19657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19658
.p2align 0x4
.long 0x452
L_19658:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19656:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl sortArray_0
.hidden sortArray_0
sortArray_0:
L_19676:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19733
L_19677:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380832
L_19678:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x4(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	je L_380810
L_19679:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380810:
L_19680:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380831
L_19681:
	movq $0x1733,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x10(%rbp)
	jna L_19683
L_19684:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_380829
L_19685:
	movq %r14,0x20(%rbp)
	movl $0x0,0x28(%rbp)
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
loop_272:
	movl 0x2C(%rbp),%ecx
	cmpl 0x4(%rbp),%ecx
	jnl L_380825
L_19697:
	movslq %ecx,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x30(%rbp)
	movb 0x0(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_380820
	cmpb $0x2,%r14b
	je L_380815
L_19698:
	movq 0x8(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_380812
L_19699:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_380811
L_19707:
	movq %r13,%r15
L_19704:
	movq %r15,0x20(%rbp)
	movl %ecx,0x28(%rbp)
	incl 0x2C(%rbp)
	jmp loop_272
.p2align 0x4
L_380811:
L_19700:
	movq %r10,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_19701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380812:
L_19708:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movq %r10,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380814
L_19710:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r15d,%r14d
	jl L_380813
.p2align 0x4,,0x7
L_19706:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_19704
.p2align 0x4
L_380813:
.p2align 0x4,,0x7
L_19703:
	movq 0x30(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_19704
.p2align 0x4
L_380814:
L_19709:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_19704
.p2align 0x4
L_380815:
L_19722:
	movq 0x8(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_380817
L_19723:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_380816
L_19725:
	movq %r13,%r15
	jmp L_19704
.p2align 0x4
L_380816:
L_19724:
	movq %r10,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_19701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380817:
L_19726:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_380819
L_19728:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_19703
L_19729:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_19704
.p2align 0x4
L_380819:
L_19727:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_19704
.p2align 0x4
L_380820:
L_19713:
	movq 0x8(%r13),%r11
	movq 0x20(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_380822
L_19714:
	movq %r9,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_380821
L_19716:
	movq %r13,%r15
	jmp L_19704
.p2align 0x4
L_380821:
L_19715:
	movq %r9,0x40(%rbp)
	movq %r11,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_19701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380822:
L_19717:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq %r9,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_380824
L_19719:
	shrq $0x1,%r9
	movl %r9d,%r11d
	cmpl %r15d,%r11d
	jl L_19703
	jmp L_19706
.p2align 0x4
L_380824:
L_19718:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%r11d
	xchgl %r11d,%ecx
	jmp L_19704
.p2align 0x4
L_380825:
L_19686:
	movl 0x4(%rbp),%r15d
	decl %r15d
	movslq 0x28(%rbp),%r14
	movq 0x10(%rbp),%r13
	cmpq %r13,%r14
	jnb L_19683
L_19688:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_380827
L_19690:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_380826
L_19692:
	movb 0x0(%rbp),%r14b
	movb %r14b,0x20(%rbp)
	movq %r11,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	movl %r15d,0x18(%rbp)
	movl $0x0,0x1C(%rbp)
	addq $0x18,%rbp
	leaq (L_19693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_1
.p2align 0x4
L_380826:
L_19691:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380827:
L_19683:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380829:
L_19731:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380831:
L_19732:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380832:
L_19733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19734
.p2align 0x4
.long 0x495
L_19734:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_19678
.p2align 0x4
.long 0x609
L_19701:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_19706
	jmp L_19703
.p2align 0x4
.long 0x522
L_19693:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19694
L_19695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19696
.p2align 0x4
.long 0x495
L_19696:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19694:
	movq $0x3D01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movl 0x4(%rbp),%r14d
	movl %r14d,0x8(%rbp)
	movq %r15,0x0(%rbp)
	movl $0x1,0xC(%rbp)
	jmp fold_0
.text
.p2align 0x4
.globl qsort_1
.hidden qsort_1
qsort_1:
L_19735:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_273
L_19843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19844
.p2align 0x4
.long 0x2C
L_19844:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_273:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_19737
L_19738:
	cmpl $0x14,%r15d
	jng L_380837
L_19740:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_380836
L_19741:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_19742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_380836:
L_19737:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380837:
L_19739:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60A
L_19742:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_19743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x491
L_19743:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_19737
L_19744:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_19746
L_19747:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_19746
L_19749:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_19746
L_19751:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_19746
L_19753:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_19746
L_19755:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_19737
L_19756:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_275:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_19737
L_19757:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_19746
L_19759:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_380872
	cmpb $0x2,%r15b
	je L_380867
L_19760:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_380840
L_19761:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_380839
L_19819:
	jmp loop_275
.p2align 0x4
L_380839:
L_19762:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_19763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380840:
L_19820:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380866
L_19822:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl L_380865
.p2align 0x4,,0x7
L_19767:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_276:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_19737
L_19768:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_19746
L_19770:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_380858
	cmpb $0x2,%r15b
	je L_380853
L_19771:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_380842
L_19772:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380841
L_19795:
	jmp loop_276
.p2align 0x4
L_380841:
L_19773:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_19774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380842:
L_19796:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_19778
L_19798:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_380851
.p2align 0x4,,0x7
L_19778:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_380847
L_19779:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_19746
L_19781:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_19746
L_19783:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_19746
L_19785:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_380843
L_19787:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_275
.p2align 0x4
L_380843:
L_19746:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380847:
L_19788:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_19746
L_19790:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_19746
L_19792:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_19737
L_19793:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_19794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_1
.p2align 0x4
L_380851:
.p2align 0x4,,0x7
L_19776:
	movl 0xC(%rbp),%ecx
	jmp loop_276
.p2align 0x4
L_380853:
L_19810:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_380855
L_19811:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380854
L_19813:
	jmp loop_276
.p2align 0x4
L_380854:
L_19812:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_19774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380855:
L_19814:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_19778
L_19816:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jnl L_19778
L_19818:
	jmp loop_276
.p2align 0x4
L_380858:
L_19801:
	movq 0x8(%r13),%r14
	movq 0x50(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_380860
L_19802:
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_380859
L_19804:
	jmp loop_276
.p2align 0x4
L_380859:
L_19803:
	movq %r11,0x78(%rbp)
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_19774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380860:
L_19805:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_19778
L_19807:
	shrq $0x1,%r11
	movl %r11d,%r14d
	cmpl %r13d,%r14d
	jl L_19776
	jmp L_19778
.p2align 0x4
L_380865:
.p2align 0x4,,0x7
L_19765:
	movl 0x58(%rbp),%ecx
	jmp loop_275
.p2align 0x4
L_380866:
L_19821:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_276
.p2align 0x4
L_380867:
L_19834:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_380869
L_19835:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_380868
L_19837:
	jmp loop_275
.p2align 0x4
L_380868:
L_19836:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_19763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380869:
L_19838:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380871
L_19840:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl loop_275
L_19841:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_276
.p2align 0x4
L_380871:
L_19839:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_276
.p2align 0x4
L_380872:
L_19825:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r13),%r14
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_380874
L_19826:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_380873
L_19828:
	jmp loop_275
.p2align 0x4
L_380873:
L_19827:
	movq %r14,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_19763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380874:
L_19829:
	shrq $0x1,%r11
	movl %r11d,%r13d
	movq %r14,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_380876
L_19831:
	shrq $0x1,%r14
	movl %r14d,%r11d
	cmpl %r13d,%r11d
	jl L_19765
	jmp L_19767
.p2align 0x4
L_380876:
L_19830:
	movl 0xC(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp loop_276
.p2align 0x4
.long 0x60B
L_19763:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_19767
	jmp L_19765
.p2align 0x4
.long 0x60C
L_19774:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_19778
	jmp L_19776
.p2align 0x4
.long 0x60D
L_19794:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_273
.text
.p2align 0x4
.globl tabulate_13
.hidden tabulate_13
tabulate_13:
L_19845:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19846
L_19929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19930
.p2align 0x4
.long 0x458
L_19930:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19846:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_380911
L_19847:
	cmpq $0x7FFFFFFF,%rdx
	ja L_380910
L_19848:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19849
.p2align 0x4
.long 0x453
L_19849:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_19850:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_277:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380909
.p2align 0x4,,0x7
L_19851:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_380908
L_19853:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1CE0,%r13
	je L_380907
	cmpq $0x1CE1,%r13
	je L_380906
	cmpq $0x1CE2,%r13
	je L_380905
	cmpq $0x1CE3,%r13
	je L_380903
	cmpq $0x1CE4,%r13
	je L_380890
	cmpq $0x1CE5,%r13
	je L_380889
	cmpq $0x1CE6,%r13
	je L_380888
L_19854:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3790
.p2align 0x4
L_380888:
L_19920:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_380889:
L_19915:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3792
.p2align 0x4
L_380890:
L_19875:
	movq 0x0(%r15),%r11
	movslq %r14d,%r13
	movq 0x8(%r15),%r10
	movq 0x0(%r10,%r13,8),%r9
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r8
	movq %r8,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1057,%r15
	je L_380899
	cmpq $0x1058,%r15
	je L_380897
L_19876:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_380896
L_19879:
	xorl %ebx,%ebx
	movq %r11,%r14
.p2align 0x4,,0x7
loop_278:
	cmpl %ebx,%ecx
	je L_380895
L_19880:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_380894
L_19882:
	movq %r11,%r10
	salq $0x4,%r10
	movq 0x0(%r14,%r10,1),%r9
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r10
	movq 0x8(%r10),%r8
	movq 0x8(%r13),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r8)
	je L_380892
L_19883:
	incl %ebx
	jo L_380891
L_19885:
	jmp loop_278
.p2align 0x4
L_380891:
L_19884:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380892:
L_19886:
	movq %r9,0x28(%rbp)
.p2align 0x4,,0x7
L_19887:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380893
.p2align 0x4,,0x7
L_19888:
	movq $0x1041,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
.p2align 0x4,,0x7
L_19857:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_277
.p2align 0x4
L_380893:
L_19889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19890
.p2align 0x4
.long 0x57A
L_19890:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_19888
.p2align 0x4
L_380894:
L_19873:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380895:
L_19891:
	movq (globalObjptr+0x4D28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380896:
L_19878:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380897:
L_19908:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_19878
L_19910:
	movl %r13d,0x40(%rbp)
	movq $0x377B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (L_19911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380899:
L_19892:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1059,%r14
	je L_380901
L_19901:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	cmpq %r15,%r10
	jne L_19878
L_19903:
	movl %r13d,0x38(%rbp)
	movq $0x377F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_19904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380901:
L_19893:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	cmpq %r15,%r10
	jne L_19878
L_19895:
	movl %r13d,0x38(%rbp)
	movq $0x39C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_19896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_380903:
L_19871:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_19873
L_19874:
	movq 0x0(%r13,%r15,8),%r13
	movq %r13,%r15
	jmp L_19857
.p2align 0x4
L_380905:
L_19870:
	movslq %r14d,%r13
	movq 0x0(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x1041,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	jmp L_19857
.p2align 0x4
L_380906:
L_19865:
	movslq %r14d,%r13
	movq 0x0(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3793
.p2align 0x4
L_380907:
L_19860:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
L_380908:
L_19852:
	movq 0x8(%rbp),%r14
	movq $0xAF3,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380909:
L_19925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19926
.p2align 0x4
.long 0x45D
L_19926:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_19851
.p2align 0x4
L_380910:
L_19927:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380911:
L_19928:
	movq (globalObjptr+0xB98)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_19850
.p2align 0x4
.long 0x457
L_19855:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19856
L_19858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19859
.p2align 0x4
.long 0x57A
L_19859:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19856:
	movq $0x1041,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19857
.p2align 0x4
.long 0x457
L_19921:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19922
L_19923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19924
.p2align 0x4
.long 0x57A
L_19924:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19922:
	movq $0x1041,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19857
.p2align 0x4
.long 0x457
L_19916:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19917
L_19918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19919
.p2align 0x4
.long 0x57A
L_19919:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19917:
	movq $0x1041,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19857
.p2align 0x4
.long 0x558
L_19911:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19912
L_19913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19914
.p2align 0x4
.long 0x576
L_19914:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19912:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp L_19887
.p2align 0x4
.long 0x457
L_19904:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19905
L_19906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19907
.p2align 0x4
.long 0x57A
L_19907:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19905:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_19898:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	jmp L_19887
.p2align 0x4
.long 0x457
L_19896:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19897
L_19899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19900
.p2align 0x4
.long 0x57A
L_19900:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19897:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_19898
.p2align 0x4
.long 0x457
L_19866:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19867
L_19868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19869
.p2align 0x4
.long 0x57A
L_19869:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19867:
	movq $0x1041,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19857
.p2align 0x4
.long 0x457
L_19861:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19862
L_19863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19864
.p2align 0x4
.long 0x57A
L_19864:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19862:
	movq $0x1041,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19857
.text
.p2align 0x4
.globl loop_3790
.hidden loop_3790
loop_3790:
L_19931:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19971
L_19932:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380933
L_19933:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x1057,%r13
	je L_380929
	cmpq $0x1058,%r13
	je L_380927
L_19934:
	movq 0x0(%r11),%r10
	movq %r10,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r13
	jne L_380926
L_19937:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_279:
	cmpl %ecx,%ebx
	je L_380924
L_19938:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_380923
L_19940:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%rbp),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_380922
L_19941:
	incl %ebx
	jo L_380921
L_19943:
	jmp loop_279
.p2align 0x4
L_380921:
L_19942:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380922:
L_19944:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380923:
L_19939:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380924:
L_19945:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19946
L_19947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19948
.p2align 0x4
.long 0x495
L_19948:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19946:
	movq $0x20AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380926:
L_19936:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380927:
L_19964:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_19936
L_19966:
	movl %r13d,0x28(%rbp)
	movq $0x3789,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_19967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380929:
L_19949:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1059,%r14
	je L_380931
L_19957:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_19936
L_19959:
	movl %r13d,0x10(%rbp)
	movq $0x376F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380931:
L_19950:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_19936
L_19952:
	movl %r13d,0x10(%rbp)
	movq $0x39BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_380933:
L_19971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19972
.p2align 0x4
.long 0x460
L_19972:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_19933
.p2align 0x4
.long 0x2B
L_19967:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19968
L_19969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19970
.p2align 0x4
.long 0x2C
L_19970:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_19968:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_19960:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19961
L_19962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19963
.p2align 0x4
.long 0x452
L_19963:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19961:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
record_0:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_19953:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19954
L_19955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19956
.p2align 0x4
.long 0x452
L_19956:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19954:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp record_0
.text
.p2align 0x4
.globl tabulate_10
.hidden tabulate_10
tabulate_10:
L_19973:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19974
L_20086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20087
.p2align 0x4
.long 0x458
L_20087:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19974:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_380983
L_19975:
	cmpq $0x7FFFFFFF,%rdx
	ja L_380982
L_19976:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x148B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19977
.p2align 0x4
.long 0x453
L_19977:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_19978:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_280:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_380981
L_19980:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_380980
L_19981:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1BB8,%rax
	cmpq $0xC,%rax
	ja L_380938
	jmp *jumpTable_22(,%rax,8)
.data
.p2align 0x4
jumpTable_22:
.quad L_380979,L_380978,L_380977,L_380976,L_380975,L_380961,L_380958,L_380944,L_380943,L_380942,L_380941,L_380940,L_380939
.text
.p2align 0x4
L_380938:
L_19982:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3790
.p2align 0x4
L_380939:
L_20082:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3790
.p2align 0x4
L_380940:
L_20081:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_380941:
L_20080:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
L_380942:
L_20079:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3792
.p2align 0x4
L_380943:
L_20078:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3793
.p2align 0x4
L_380944:
L_20038:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movslq %r14d,%r15
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq %r9,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x1057,%r15
	je L_380953
	cmpq $0x1058,%r15
	je L_380950
L_20039:
	movq 0x0(%r9),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_380949
L_20041:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_282:
	cmpl %ebx,%ecx
	je L_380948
L_20042:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_380947
L_20044:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r11,1),%r9
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r10,%r13,1),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_380946
L_20045:
	incl %ebx
	jo L_380945
L_20046:
	jmp loop_282
.p2align 0x4
L_380945:
L_20000:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380946:
L_20047:
	movq %r9,%r15
.p2align 0x4,,0x7
L_19984:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_280
.p2align 0x4
L_380947:
L_19997:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380948:
L_20004:
	movq (globalObjptr+0x4D28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380949:
L_19993:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380950:
L_20068:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20069
L_20076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20077
.p2align 0x4
.long 0x57A
L_20077:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20069:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_19993
L_20071:
	movl %r13d,0x48(%rbp)
	movq $0x377B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380953:
L_20049:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20050
L_20066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20067
.p2align 0x4
.long 0x57A
L_20067:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20050:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1059,%r15
	je L_380955
L_20059:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_19993
L_20061:
	movl %r13d,0x30(%rbp)
	movq $0x377F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380955:
L_20051:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_19993
L_20053:
	movl %r13d,0x30(%rbp)
	movq $0x39C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_380958:
L_20034:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_380960
	cmpl $0x1,%r14d
	je L_380959
L_20035:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380959:
L_20037:
	movq %r11,%r15
	jmp L_19984
.p2align 0x4
L_380960:
	movq %r13,%r15
	jmp L_19984
.p2align 0x4
L_380961:
L_19990:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movslq %r14d,%r15
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq %r9,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x1057,%r15
	je L_380970
	cmpq $0x1058,%r15
	je L_380967
L_19991:
	movq 0x0(%r9),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_19993
L_19994:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_281:
	cmpl %ecx,%ebx
	je L_20004
L_19995:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_19997
L_19998:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r11,1),%r9
	salq $0x4,%r13
	movq 0x8(%r10,%r13,1),%r11
	movq 0x8(%r11),%r8
	movq 0x8(%r14),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r8)
	je L_380963
L_19999:
	incl %ebx
	jo L_20000
L_20001:
	jmp loop_281
.p2align 0x4
L_380963:
L_20002:
	movq %r9,%r15
	jmp L_19984
.p2align 0x4
L_380967:
L_20024:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20025
L_20032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20033
.p2align 0x4
.long 0x57A
L_20033:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20025:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_19993
L_20027:
	movl %r13d,0x48(%rbp)
	movq $0x377B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380970:
L_20005:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20006
L_20022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20023
.p2align 0x4
.long 0x57A
L_20023:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20006:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1059,%r15
	je L_380972
L_20015:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_19993
L_20017:
	movl %r13d,0x30(%rbp)
	movq $0x377F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380972:
L_20007:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_19993
L_20009:
	movl %r13d,0x30(%rbp)
	movq $0x39C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_380975:
L_19989:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3793
.p2align 0x4
L_380976:
L_19988:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3792
.p2align 0x4
L_380977:
L_19987:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r15
	jmp L_19984
.p2align 0x4
L_380978:
L_19986:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
L_380979:
L_19985:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_380980:
L_20083:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380981:
L_19979:
	movq 0x8(%rbp),%r14
	movq $0x9D1,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380982:
L_20084:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380983:
L_20085:
	movq (globalObjptr+0xCB8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_19978
.p2align 0x4
.long 0x5F9
L_19983:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_19984
.p2align 0x4
.long 0x569
L_20072:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20073
L_20074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20075
.p2align 0x4
.long 0x592
L_20075:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20073:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19984
.p2align 0x4
.long 0x5F9
L_20062:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20063
L_20064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20065
.p2align 0x4
.long 0x52D
L_20065:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20063:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_20056:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_19984
.p2align 0x4
.long 0x5F9
L_20054:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20055
L_20057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20058
.p2align 0x4
.long 0x52D
L_20058:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20055:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20056
.p2align 0x4
.long 0x569
L_20028:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20029
L_20030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20031
.p2align 0x4
.long 0x592
L_20031:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20029:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19984
.p2align 0x4
.long 0x5F9
L_20018:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20019
L_20020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20021
.p2align 0x4
.long 0x52D
L_20021:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20019:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_20012:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_19984
.p2align 0x4
.long 0x5F9
L_20010:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20011
L_20013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20014
.p2align 0x4
.long 0x52D
L_20014:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20011:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20012
.text
.p2align 0x4
.globl loop_3791
.hidden loop_3791
loop_3791:
L_20088:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_20258
L_20089:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381008
L_20090:
	movq 0x8(%rbp),%r14
	movq 0x40(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDEB,%r14
	je L_381004
	cmpq $0xDEC,%r14
	je L_381002
L_20091:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_20099
L_20092:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_20093:
	movq 0x18(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%r14
	movq 0x20(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%r13
	cmpq %r13,%r14
	je L_380999
L_20094:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_380996
L_20102:
	xorq %r10,%r10
.p2align 0x4,,0x7
vectorEqualLoop_95:
	cmpq %r11,%r10
	je L_380994
L_20103:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r14,%r10,1)
	jne L_380991
L_20110:
	incq %r10
	jmp vectorEqualLoop_95
.p2align 0x4
L_380991:
L_20104:
	cmpq $0x1,%r15
	je L_380992
L_20105:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_20093
.p2align 0x4
L_380992:
L_20106:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20099
L_20108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20109
.p2align 0x4
.long 0x2C
L_20109:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20099:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x20ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
var_0:
	movq $0x20AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380994:
L_20111:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20112
L_20113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20114
.p2align 0x4
.long 0x49E
L_20114:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20112:
	movq 0x20(%rbp),%r15
	jmp var_0
.p2align 0x4
L_380996:
L_20095:
	cmpq $0x1,%r15
	je L_380997
L_20096:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_20093
.p2align 0x4
L_380997:
L_20097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20099
L_20100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20101
.p2align 0x4
.long 0x2C
L_20101:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_20099
.p2align 0x4
L_380999:
L_20115:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20116
L_20117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20118
.p2align 0x4
.long 0x49E
L_20118:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20116:
	movq 0x20(%rbp),%r15
	jmp var_0
.p2align 0x4
L_381002:
L_20136:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_381003
L_20138:
	movl %r13d,0x68(%rbp)
	movq $0x3771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_20139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381003:
L_20123:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381004:
L_20120:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDED,%r15
	je L_381006
L_20129:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_20123
L_20131:
	movl %r11d,0x10(%rbp)
	movq $0x3787,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381006:
L_20121:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_20123
L_20124:
	movl %r11d,0x10(%rbp)
	movq $0x39CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_381008:
L_20258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20259
.p2align 0x4
.long 0x460
L_20259:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_20090
.p2align 0x4
.long 0x60E
L_20139:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20140
L_20256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_20257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20257
.p2align 0x4
.long 0x61E
L_20257:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_20140:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movl %r10d,0x58(%rbp)
	movslq %r10d,%r9
	cmpq %r14,%r9
	jne L_20123
L_20142:
	cmpq $0x1,%r13
	jne normal_0
L_20244:
	cmpl $0x2,%r10d
	jne normal_0
L_20245:
	movq 0x8(%r11),%r13
	movq 0x48(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r13)
	jne normal_8
L_20247:
	cmpq $0x0,%r14
	jna L_20167
L_20249:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	jna L_381010
L_20251:
	movq 0x8(%r15),%r14
	movq $0x377D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movl $0x2,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_20252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381010:
L_20167:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
normal_8:
normal_0:
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_20143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookupLongtycon_0
.p2align 0x4
.long 0x1
L_20132:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20133
L_20134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20135
.p2align 0x4
.long 0x452
L_20135:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20133:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
record_1:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_20125:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20126
L_20127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20128
.p2align 0x4
.long 0x452
L_20128:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20126:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp record_1
.p2align 0x4
.long 0x61C
L_20252:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20253
L_20254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20255
.p2align 0x4
.long 0x61D
L_20255:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20253:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60F
L_20143:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20144
L_20242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20243
.p2align 0x4
.long 0x61B
L_20243:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20144:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_381040
L_20145:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_20147
L_20206:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x20(%rbp)
	cmpl %r15d,0x58(%rbp)
	je L_381017
L_20207:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE230)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381017:
L_20147:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_381019
	cmpq $0x105D,%r15
	je L_381018
L_20148:
	movq 0x0(%r14),%r15
	movq $0x20B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381018:
L_20205:
	movq 0x8(%r14),%r15
	movq $0x20B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381019:
L_20149:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	movq %r10,0x20(%rbp)
	cmpq %r14,%r10
	jne L_20123
L_20151:
	testl %r11d,%r11d
	jnz L_381037
L_20202:
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_381020
L_20204:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381020:
	movl %r11d,%ecx
L_20153:
	cmpl %ecx,0x58(%rbp)
	je L_381021
L_20154:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381021:
L_20155:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_381036
L_20156:
	cmpq $0x7FFFFFFF,%rdx
	ja L_381035
L_20157:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15C9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20158
.p2align 0x4
.long 0x4E2
L_20158:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_20159:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_283:
	cmpq 0x20(%rbp),%r15
	jnl L_381022
L_20199:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x28(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_283
.p2align 0x4
L_381022:
L_20160:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20161
L_20197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20198
.p2align 0x4
.long 0x610
L_20198:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20161:
	movq 0x28(%rbp),%r13
	movq $0xBBD,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x18(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1057,%r15
	je L_381030
	cmpq $0x1058,%r15
	je L_381028
L_20162:
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_20123
L_20164:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_284:
	cmpl %ecx,%ebx
	je L_381026
L_20165:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_20167
L_20168:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r11,1),%r9
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r10,%r13,1),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_381024
L_20169:
	incl %ebx
	jo L_381023
L_20171:
	jmp loop_284
.p2align 0x4
L_381023:
L_20170:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381024:
L_20172:
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381026:
L_20173:
	movq (globalObjptr+0x4D28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381028:
L_20190:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_20123
L_20192:
	movl %r11d,0x38(%rbp)
	movq $0x377B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381030:
L_20174:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1059,%r14
	je L_381032
L_20183:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_20123
L_20185:
	movl %r11d,0x10(%rbp)
	movq $0x377F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381032:
L_20175:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_20123
L_20177:
	movl %r11d,0x10(%rbp)
	movq $0x39C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_381035:
L_20200:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381036:
L_20201:
	movq (globalObjptr+0x4D30)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_20159
.p2align 0x4
L_381037:
	movl %r11d,%ecx
	jmp L_20153
.p2align 0x4
L_381040:
L_20241:
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x611
L_20208:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x45A
L_20193:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20194
L_20195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20196
.p2align 0x4
.long 0x509
L_20196:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20194:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_20186:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20187
L_20188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20189
.p2align 0x4
.long 0x452
L_20189:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20187:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
L_20180:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_20178:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20179
L_20181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20182
.p2align 0x4
.long 0x452
L_20182:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20179:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20180
.p2align 0x4
.long 0x612
L_20209:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20210
L_20238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20239
.p2align 0x4
.long 0x61A
L_20239:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20210:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xE238)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x613
L_20211:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_20212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x614
L_20212:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x614
L_20213:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpl $0x1,0x58(%rbp)
	je L_381046
L_20214:
	movq (globalObjptr+0xE240)(%rip),%r15
L_20215:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_20216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381046:
L_20237:
	movq (globalObjptr+0xE258)(%rip),%r15
	jmp L_20215
.p2align 0x4
.long 0x615
L_20216:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE248)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_20217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x616
L_20217:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_20218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x617
L_20218:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x617
L_20219:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20220
L_20235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20236
.p2align 0x4
.long 0x619
L_20236:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20220:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20221:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20170
L_20222:
	cmpq $0x1,%r14
	je L_381047
L_20223:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20221
.p2align 0x4
L_381047:
L_20224:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20225
L_20233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20234
.p2align 0x4
.long 0x618
L_20234:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20225:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381049
L_20226:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_20227:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_20170
L_20228:
	movl %r13d,0x0(%r15)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_20229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_381049:
L_20232:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20227
.p2align 0x4
.long 0x51B
L_20229:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_381053
L_20230:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381053:
L_20231:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl lookupLongtycon_0
.hidden lookupLongtycon_0
lookupLongtycon_0:
L_20260:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_20462
L_20261:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381084
L_20262:
	movq 0x10(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r15
	je L_381070
L_20263:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x38(%r11),%r10
	movq 0x10(%r10),%r9
	movq 0x0(%r9),%r8
	movq %r8,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_381069
L_20265:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_381068
L_20266:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_20268:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_20269
L_20420:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_20269
L_20421:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x40(%rbp)
	je L_381062
L_20269:
	movl 0x50(%rbp),%r13d
	incl %r13d
	movl %r13d,0x54(%rbp)
	jo L_381061
L_20271:
	cmpq $0x1,%r15
	je L_381054
L_20272:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x50(%rbp)
	jmp L_20268
.p2align 0x4
L_381054:
L_20273:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20274
L_20418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_20419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20419
.p2align 0x4
.long 0x633
L_20419:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_20274:
	movl 0x54(%rbp),%ecx
L_20275:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_381059
L_20277:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_20279
L_20417:
	movl %ecx,0x0(%r15)
L_20279:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_20280:
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je doit_31
L_20281:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r11
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r10
	movq %r10,0x8(%r15)
	cmpq $0x1,%r13
	je L_381057
L_20282:
	movq 0x0(%r13),%r9
	movq 0x0(%r9),%r14
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	je L_381056
L_20283:
	movq 0x0(%r14),%r10
	cmpq $0x1,%r13
	je L_381055
L_20284:
	movq 0x8(%r13),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r14
L_20285:
	movq %r14,0x18(%rbp)
	movq $0x145,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp lookupLongtycon_1
.p2align 0x4
L_381055:
L_20286:
	movq %r14,%r13
	movq %r11,%r14
	jmp L_20285
.p2align 0x4
L_381056:
L_20287:
	movq %r11,%r14
	jmp L_20285
.p2align 0x4
L_381057:
L_20288:
	movq 0x0(%r10),%r9
	movq %r11,%r14
	xchgq %r9,%r13
	jmp L_20285
.p2align 0x4
doit_31:
doit_0:
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_20290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1224
.p2align 0x4
L_381059:
L_20276:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381061:
L_20270:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381062:
L_20423:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20424
L_20428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20429
.p2align 0x4
.long 0x634
L_20429:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20424:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_20276
L_20425:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_381063
L_20426:
	movq 0x58(%rbp),%r15
	jmp L_20280
.p2align 0x4
L_381063:
L_20427:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r15
	jmp L_20280
.p2align 0x4
L_381068:
L_20430:
	xorl %ecx,%ecx
	jmp L_20275
.p2align 0x4
L_381069:
L_20264:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381070:
L_20431:
	movq 0x8(%rbp),%r13
	movq 0x38(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x10(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_20264
L_20432:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_381082
L_20433:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_20435:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_20436
L_20451:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_20436
L_20452:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_381076
L_20436:
	movl 0x38(%rbp),%r13d
	incl %r13d
	movl %r13d,0x3C(%rbp)
	jo L_20270
L_20437:
	cmpq $0x1,%r15
	je L_381071
L_20438:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x38(%rbp)
	jmp L_20435
.p2align 0x4
L_381071:
L_20439:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20440
L_20449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20450
.p2align 0x4
.long 0x635
L_20450:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20440:
	movl 0x3C(%rbp),%ecx
L_20441:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_20276
L_20442:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_20444
L_20448:
	movl %ecx,0x0(%r15)
L_20444:
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1129,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1133,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_20445:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je doit_0
L_20446:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x18(%r15),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r14),%r15
	movq $0x24CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x8(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381076:
L_20454:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20455
L_20459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20460
.p2align 0x4
.long 0x636
L_20460:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20455:
	movl 0x38(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_20276
L_20456:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_381077
L_20457:
	movq 0x40(%rbp),%r15
	jmp L_20445
.p2align 0x4
L_381077:
L_20458:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_20445
.p2align 0x4
L_381082:
L_20461:
	xorl %ecx,%ecx
	jmp L_20441
.p2align 0x4
L_381084:
L_20462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_20463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20463
.p2align 0x4
.long 0x45C
L_20463:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_20262
.p2align 0x4
.long 0x45A
L_20290:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20291
L_20415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20416
.p2align 0x4
.long 0x509
L_20416:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20291:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_381099
L_20292:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_381095
	cmpq $0x1052,%r14
	je L_381086
L_20293:
	movq 0x0(%r15),%r14
	movq $0x20A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x20B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_20294:
	movq $0x110B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381086:
L_20361:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq $0x20A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0x40(%rbp)
	cmpq %r15,%r13
	movq %r11,0x28(%rbp)
	jne L_381094
L_20363:
	testq %r13,%r13
	jz L_381093
L_20364:
	cmpq $0x7FFFFFFF,%r13
	ja L_381092
L_20365:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20366
L_20410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20411
.p2align 0x4
.long 0x629
L_20411:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20366:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CB,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20367
.p2align 0x4
.long 0x629
L_20367:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_20368:
	movq $0x0,0x50(%rbp)
loop_286:
	movq 0x40(%rbp),%r14
	cmpq %r14,0x50(%rbp)
	jl L_381087
L_20369:
	movq 0x48(%rbp),%r14
	movq $0x689,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x20BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_20294
.p2align 0x4
L_381087:
L_20370:
	movq 0x50(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x28(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x58(%rbp)
	salq $0x5,%r15
	movq 0x10(%r13,%r15,1),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x48(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_381090
L_20403:
	movq 0x8(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x23DF,%r15
	je L_381089
L_20409:
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_20406:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_381088
L_20408:
	movq %r15,0xB0(%rbp)
	movq 0x18(%r14),%r14
	movq %r14,0x58(%rbp)
L_20372:
	movq $0x1,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_20373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381088:
L_20407:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_20372
.p2align 0x4
L_381089:
L_20404:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x443,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	addq $0x18,%r12
	addq $0xB8,%rbp
	leaq (L_20405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_381090:
L_20371:
	movq 0x0(%r11),%r11
	movq %r11,0x58(%rbp)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0xB0(%rbp)
	jmp L_20372
.p2align 0x4
L_381092:
L_20412:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381093:
L_20413:
	movq (globalObjptr+0x4E20)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_20368
.p2align 0x4
L_381094:
L_20301:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381095:
L_20295:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r11
	movq 0x48(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x40(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x38(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x28(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_381098
L_20354:
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x23DF,%r15
	je L_381097
L_20360:
	movq 0x0(%r11),%r11
	movq %r11,%r15
L_20357:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_381096
L_20359:
	movq %r15,0x88(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x80(%rbp)
L_20297:
	movq $0x1,0x98(%rbp)
	movl $0x0,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_20298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381096:
L_20358:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	jmp L_20297
.p2align 0x4
L_381097:
L_20355:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r11,0x88(%rbp)
	addq $0x18,%r12
	addq $0x88,%rbp
	leaq (L_20356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_381098:
L_20296:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xF60)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x88(%rbp)
	jmp L_20297
.p2align 0x4
L_381099:
L_20414:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x62A
L_20373:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20374
L_20401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_20402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20402
.p2align 0x4
.long 0x631
L_20402:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_20374:
	movq 0xB8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_20301
L_20376:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x20A9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x20B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0x2,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r15,0x8(%r11)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xBBF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x38(%r10)
	movq %r11,0x48(%r10)
	addq $0x68,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r10)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r10)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r10)
	movq 0x88(%rbp),%r14
	movq %r14,0x20(%r10)
	movq 0x80(%rbp),%r14
	movq %r14,0x28(%r10)
	movq 0x78(%rbp),%r14
	movq %r14,0x30(%r10)
	movq 0x70(%rbp),%r14
	movq %r14,0x40(%r10)
	movq %r15,0x50(%r10)
	movq %r13,0x58(%r10)
	movq %r10,0xF0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_20377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
.long 0x632
L_20405:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	jmp L_20406
.p2align 0x4
.long 0x61F
L_20298:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20299
L_20352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_20353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20353
.p2align 0x4
.long 0x627
L_20353:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_20299:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_20301
L_20302:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x20A9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x20B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0x2,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r15,0x8(%r11)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xBBF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x38(%r10)
	movq %r11,0x48(%r10)
	addq $0x68,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r10)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r10)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r10)
	movq 0x58(%rbp),%r14
	movq %r14,0x20(%r10)
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%r10)
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%r10)
	movq 0x40(%rbp),%r14
	movq %r14,0x40(%r10)
	movq %r15,0x50(%r10)
	movq %r13,0x58(%r10)
	movq %r10,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_20303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
.long 0x628
L_20356:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_20357
.p2align 0x4
.long 0x62B
L_20377:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20378
L_20399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_20400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20400
.p2align 0x4
.long 0x630
L_20400:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_20378:
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_381105
L_20379:
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
L_20380:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_20381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_381105:
L_20385:
	movq 0xC0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_381106
L_20386:
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
L_20387:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x3D91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_20388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_381106:
L_20392:
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x111D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14,%r15,1)
	incq %r11
	movq %r11,0x50(%rbp)
	jmp loop_286
.p2align 0x4
.long 0x620
L_20303:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20304
L_20350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_20351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20351
.p2align 0x4
.long 0x626
L_20351:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_20304:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_381108
L_20305:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_20306:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_20307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_381108:
L_20311:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_381109
L_20312:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_20313:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x3D91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_20314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_381109:
L_20318:
	movq 0xA8(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq $0x1,0x0(%r11)
	movq 0x38(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_20319
L_20323:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_20301
L_20325:
	movq 0x88(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r11,%r13
	jne L_20301
L_20327:
	cmpl %ecx,%ebx
	jne L_20319
L_20329:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_285:
	cmpl %ecx,%ebx
	je L_381116
L_20330:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_20332
L_20333:
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1056,%r9
	jne L_20319
L_20334:
	movq 0x0(%r10),%r9
	cmpq %r13,%r11
	jnb L_381113
L_20336:
	movq 0x8(%r9),%r10
	movq 0x88(%rbp),%r8
	movq 0x0(%r8,%r11,8),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%r10)
	jne L_381111
L_20338:
	incl %ebx
	jo L_20270
L_20339:
	jmp loop_285
.p2align 0x4
L_381111:
L_20319:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20320
L_20321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_20322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20322
.p2align 0x4
.long 0x623
L_20322:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_20320:
	movq $0x20B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_20294
.p2align 0x4
L_381113:
L_20332:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381116:
L_20340:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20341
L_20342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20343
.p2align 0x4
.long 0x48D
L_20343:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20341:
	movq $0x20B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20294
.p2align 0x4
.long 0x62C
L_20381:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20382
L_20396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_20397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20397
.p2align 0x4
.long 0x62F
L_20397:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_20382:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_20385
L_20383:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_20380
.p2align 0x4
.long 0x62D
L_20388:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20389
L_20393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_20394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20394
.p2align 0x4
.long 0x62E
L_20394:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_20389:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_20392
L_20390:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_20387
.p2align 0x4
.long 0x621
L_20307:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20308
L_20347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_20348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20348
.p2align 0x4
.long 0x625
L_20348:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_20308:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_20311
L_20309:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_20306
.p2align 0x4
.long 0x622
L_20314:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20315
L_20344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_20345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20345
.p2align 0x4
.long 0x624
L_20345:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_20315:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_20318
L_20316:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_20313
.text
.p2align 0x4
.globl lookupLongtycon_1
.hidden lookupLongtycon_1
lookupLongtycon_1:
L_20464:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20465
L_20610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20611
.p2align 0x4
.long 0x63D
L_20611:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20465:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r11
	je L_381131
L_20466:
	movq 0x8(%r11),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r11),%r14
	movq %r14,0x18(%rbp)
L_20467:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_20468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_381131:
L_20609:
	movq 0x18(%rbp),%r15
L_20543:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x637
L_20468:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144A,%r14
	jne L_381150
L_20470:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_381149
L_20473:
	cmpl $0x0,%ecx
	jl L_381148
L_20474:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_287:
	cmpl %ecx,%ebx
	jnl L_381136
L_20537:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r13),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r10)
	je L_381133
L_20538:
	incl %ebx
	jmp loop_287
.p2align 0x4
L_381133:
L_20539:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20540
L_20606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20607
.p2align 0x4
.long 0x63C
L_20607:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20540:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381134
L_20541:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_20467
.p2align 0x4
L_381134:
L_20542:
	movq 0x40(%rbp),%r15
	jmp L_20543
.p2align 0x4
L_381136:
L_20475:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_20476:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381147
.p2align 0x4,,0x7
L_20477:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381137
L_20478:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_20476
.p2align 0x4
L_381137:
L_20479:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_381146
L_20480:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_20481:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381145
.p2align 0x4,,0x7
L_20482:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381138
L_20483:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20481
.p2align 0x4
L_381138:
L_20484:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_20485:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381144
.p2align 0x4,,0x7
L_20486:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381139
L_20487:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20485
.p2align 0x4
L_381139:
L_20488:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_20489:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381143
.p2align 0x4,,0x7
L_20490:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381140
L_20491:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	jmp L_20489
.p2align 0x4
L_381140:
L_20492:
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_20493:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381142
.p2align 0x4,,0x7
L_20494:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381141
L_20495:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20493
.p2align 0x4
L_381141:
L_20496:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_20497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_381142:
L_20526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20527
.p2align 0x4
.long 0x638
L_20527:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20494
.p2align 0x4
L_381143:
L_20528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20529
.p2align 0x4
.long 0x638
L_20529:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20490
.p2align 0x4
L_381144:
L_20530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20531
.p2align 0x4
.long 0x638
L_20531:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20486
.p2align 0x4
L_381145:
L_20532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20533
.p2align 0x4
.long 0x4F1
L_20533:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_20482
.p2align 0x4
L_381146:
L_20534:
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_20489
.p2align 0x4
L_381147:
L_20535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20536
.p2align 0x4
.long 0x4DF
L_20536:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20477
.p2align 0x4
L_381148:
L_20605:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381149:
L_20472:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381150:
L_20469:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x577
L_20544:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144A,%r14
	jne L_20469
L_20545:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_20472
L_20547:
	cmpl $0x0,%ecx
	jl L_20605
L_20548:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_288:
	cmpl %ecx,%ebx
	jnl L_381152
L_20601:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq 0x30(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r13),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_381151
L_20602:
	incl %ebx
	jmp loop_288
.p2align 0x4
L_381151:
L_20603:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381152:
L_20549:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20550
L_20599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20600
.p2align 0x4
.long 0x576
L_20600:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20550:
	cmpq $0x1,0x28(%rbp)
	je L_381161
L_20551:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_381160
L_20552:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_20553:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381159
.p2align 0x4,,0x7
L_20554:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381153
L_20555:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20553
.p2align 0x4
L_381153:
L_20556:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_20557:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381158
.p2align 0x4,,0x7
L_20558:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381154
L_20559:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20557
.p2align 0x4
L_381154:
L_20561:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_381157
L_20562:
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r15
	cmpq $0x1,%r10
	je L_381156
L_20563:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r15
	je L_381155
L_20564:
	movq 0x8(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r10,%r14
L_20565:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_20566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_381155:
L_20590:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_20565
.p2align 0x4
L_381156:
L_20591:
	xchgq %r14,%r15
	jmp L_20565
.p2align 0x4
L_381157:
L_20592:
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_20565
.p2align 0x4
L_381158:
L_20593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20594
.p2align 0x4
.long 0x4F1
L_20594:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_20558
.p2align 0x4
L_381159:
L_20595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20596
.p2align 0x4
.long 0x4EC
L_20596:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_20554
.p2align 0x4
L_381160:
L_20597:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_20561
.p2align 0x4
L_381161:
L_20598:
	movq 0x0(%rbp),%r15
	jmp L_20561
.p2align 0x4
.long 0x600
L_20497:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20498
L_20524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20525
.p2align 0x4
.long 0x4EA
L_20525:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20498:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x497
L_20566:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20567
L_20588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20589
.p2align 0x4
.long 0x63B
L_20589:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20567:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xE260)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x497
L_20499:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x639
L_20568:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA440)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x497
L_20500:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE260)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x63A
L_20569:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x518
L_20501:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E4
L_20570:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20571
L_20586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20587
.p2align 0x4
.long 0x4F1
L_20587:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20571:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_20572:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20506
L_20573:
	cmpq $0x1,%r14
	je L_381168
L_20574:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20572
.p2align 0x4
L_381168:
L_20575:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20576
L_20584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20585
.p2align 0x4
.long 0x4A2
L_20585:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20576:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381170
L_20577:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_20578:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_381169
L_20579:
	movl %r13d,0x0(%r15)
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_381169:
L_20506:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381170:
L_20583:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20578
.p2align 0x4
.long 0x4A6
L_20502:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_20580:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_381174
L_20516:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381174:
L_20518:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E4
L_20503:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20504
L_20522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20523
.p2align 0x4
.long 0x4F1
L_20523:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20504:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_20505:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20506
L_20507:
	cmpq $0x1,%r14
	je L_381175
L_20508:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20505
.p2align 0x4
L_381175:
L_20509:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20510
L_20520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20521
.p2align 0x4
.long 0x4A2
L_20521:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20510:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381177
L_20511:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_20512:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_20506
L_20513:
	movl %r13d,0x0(%r15)
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_381177:
L_20519:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20512
.p2align 0x4
.long 0x1
L_20514:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_20518
	jmp L_20516
.text
.p2align 0x4
.globl root_8
.hidden root_8
root_8:
L_20612:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20613
L_20622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20623
.p2align 0x4
.long 0x452
L_20623:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20613:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	je L_381183
L_20614:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144B,%r15
	jne L_381182
L_20616:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_20617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_381182:
L_20615:
	movq (globalObjptr+0x14F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381183:
L_20621:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_20617:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20618
L_20619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20620
.p2align 0x4
.long 0x460
L_20620:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_20618:
	movq $0x2897,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3781
.hidden loop_3781
loop_3781:
L_20624:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20625
L_20632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20633
.p2align 0x4
.long 0x460
L_20633:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_20625:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_381186
L_20626:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_20627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_381186:
L_20631:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_20627:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20628
L_20629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20630
.p2align 0x4
.long 0x4E8
L_20630:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20628:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl msg_0
.hidden msg_0
msg_0:
L_20634:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20635
L_20710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20711
.p2align 0x4
.long 0x63D
L_20711:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20635:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_381189
L_20636:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x30(%rbp)
	movl 0x4(%r14),%r13d
	movl %r13d,0x34(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_381189:
L_20709:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x10(%rbp)
L_20642:
	movq $0x1,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (rev_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x63E
L_20637:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_20638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x641
rev_7:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_381193
L_20643:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_20644:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381192
.p2align 0x4,,0x7
L_20645:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_381191
L_20646:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_20644
.p2align 0x4
L_381191:
L_20648:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_381192:
L_20704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20705
.p2align 0x4
.long 0x647
L_20705:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_20645
.p2align 0x4
L_381193:
L_20706:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_20648
.p2align 0x4
.long 0x63F
L_20638:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_20639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x641
L_20649:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x0,%r14
	ja L_381194
L_20650:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381194:
L_20651:
	movq 0x8(%rbp),%r15
	movb 0x0(%r15),%r14b
	cmpb $0x61,%r14b
	jb str_9
L_20652:
	cmpb $0x7A,%r14b
	ja str_8
L_20653:
	movzbl %r14b,%r15d
	addl $0xFFFFFFE0,%r15d
	movb %r15b,%dl
str_2:
	movzbq %dl,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_20654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
str_8:
	movb %r14b,%dl
	jmp str_2
.p2align 0x4
str_9:
	movb %r14b,%dl
	jmp str_2
.p2align 0x4
.long 0x640
L_20639:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20640
L_20707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20708
.p2align 0x4
.long 0x648
L_20708:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20640:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x642
L_20654:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_381197
L_20656:
	decl %r14d
	jo L_381196
L_20658:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x40(%rbp)
	movl $0x1,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_20659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_381196:
L_20657:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381197:
L_20655:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x559
L_20641:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_20642
.p2align 0x4
.long 0x643
L_20659:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20660
L_20700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20701
.p2align 0x4
.long 0x646
L_20701:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20660:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x7C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x641
L_20661:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x641
L_20662:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20663
L_20698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20699
.p2align 0x4
.long 0x645
L_20699:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20663:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x644
L_20664:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x644
L_20665:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x559
L_20666:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x642
L_20667:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20668
L_20696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20697
.p2align 0x4
.long 0x4DF
L_20697:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20668:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20669:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20657
L_20670:
	cmpq $0x1,%r14
	je L_381200
L_20671:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20669
.p2align 0x4
L_381200:
L_20672:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20673
L_20694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20695
.p2align 0x4
.long 0x579
L_20695:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20673:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381201
L_20674:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_20675:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_381201:
L_20693:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20675
.p2align 0x4
.long 0x50C
L_20676:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20677
L_20691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20692
.p2align 0x4
.long 0x451
L_20692:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20677:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381206
L_20678:
	decl %ecx
	jo L_20657
L_20679:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_20680:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x2,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_381206:
L_20690:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20680
.p2align 0x4
.long 0x51B
L_20681:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20682
L_20688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20689
.p2align 0x4
.long 0x5F4
L_20689:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20682:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381209
L_20683:
	decl %ecx
	jo L_20657
L_20684:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_20685:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_381209:
L_20687:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20685
.p2align 0x4
.long 0x51B
L_20686:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl file_0
.hidden file_0
file_0:
L_20712:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_20736
L_20713:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381212
L_20714:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_381211
L_20715:
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x15A0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_20716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_381211:
L_20735:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381212:
L_20736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20737
.p2align 0x4
.long 0x460
L_20737:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_20714
.p2align 0x4
.long 0x2B
L_20716:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	cmpq %r14,%r15
	jl L_20732
L_20717:
	xorq %r13,%r13
.p2align 0x4,,0x7
loop_289:
	cmpq %r14,%r13
	jnl L_381215
L_20730:
	movq 0x10(%rbp),%r11
	movq 0x18(%rbp),%r9
	movb 0x0(%r9,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_381214
L_20733:
	incq %r13
	jmp loop_289
.p2align 0x4
L_381214:
L_20732:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381215:
L_20718:
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_20720
L_20721:
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_381217
L_20723:
	subl %r13d,%r14d
	jo L_381216
L_20725:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl %r13d,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_20726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_381216:
L_20724:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381217:
L_20720:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_20726:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20727
L_20728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20729
.p2align 0x4
.long 0x452
L_20729:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20727:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE268)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl extract_0
.hidden extract_0
extract_0:
L_20738:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20739
L_20762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_20763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20763
.p2align 0x4
.long 0x24
L_20763:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_20739:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movslq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r13
	andq $0x1,%r13
	jnz L_381227
L_20740:
	cmpq %r14,%r15
	jb L_381226
L_20741:
	movq %r15,%r13
	subq %r14,%r13
	movq %r13,0x20(%rbp)
sequence_0:
	movq 0x18(%rbp),%r14
	testq %r14,%r14
	jnz L_20743
L_20752:
	cmpq %r15,0x20(%rbp)
	jne L_381221
L_20754:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381221:
L_20743:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_381224
L_20744:
	cmpq $0x7FFFFFFF,%rdx
	ja L_381223
L_20745:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20746
.p2align 0x4
.long 0x649
L_20746:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,%r15
L_20747:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_290:
	cmpq 0x20(%rbp),%r14
	jnl L_381222
L_20749:
	movq %r14,%r13
	addq 0x18(%rbp),%r13
	movq 0x10(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_290
.p2align 0x4
L_381222:
L_20748:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381223:
L_20750:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381224:
L_20751:
	movq (globalObjptr+0x5A8)(%rip),%r15
	jmp L_20747
.p2align 0x4
L_381226:
L_20756:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381227:
L_20757:
	movq 0x0(%rbp),%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	movslq %r11d,%r13
	cmpq %r14,%r15
	jb L_20756
L_20758:
	movq %r15,%r11
	subq %r14,%r11
	cmpq %r13,%r11
	jb L_20756
L_20759:
	movq %r13,0x20(%rbp)
	jmp sequence_0
.text
.p2align 0x4
.globl loop_3780
.hidden loop_3780
loop_3780:
L_20764:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20765
L_20850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_20851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20851
.p2align 0x4
.long 0x45C
L_20851:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_20765:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
loop_291:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381248
.p2align 0x4,,0x7
L_20766:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,0x2C(%rbp)
	movl 0x4(%r15),%r11d
	movl %r11d,0x30(%rbp)
	cmpq $0x1,%r14
	je L_381247
L_20767:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDB3,%r15
	je L_381239
	cmpq $0xDB4,%r15
	je L_381237
	cmpq $0xDB5,%r15
	je L_381232
L_20768:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r10d
	addl %r13d,%r10d
	jo L_381231
L_20770:
	movq %r15,0x20(%rbp)
	movq $0x343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	addq $0x10,%r12
	movl %r11d,0x4(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_291
.p2align 0x4
L_381231:
L_20769:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381232:
L_20822:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpl %r13d,%r11d
	jnl L_381234
L_20833:
	subl %r11d,%r13d
	movl %r13d,0x20(%rbp)
	jo L_20769
L_20834:
	movl $0x8,0x38(%rbp)
	movl %r13d,0x3C(%rbp)
	addq $0x38,%rbp
	leaq (L_20835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_381234:
L_20824:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1B,%r14
	je L_381236
	cmpq $0x1F1C,%r14
	je L_381235
L_20825:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381235:
L_20832:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381236:
L_20831:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381237:
L_20815:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_381238
L_20816:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r10
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	movq %r10,%r14
L_20817:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_20818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_381238:
L_20821:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381239:
L_20771:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r10d
	testl %r10d,%r10d
	jnz L_20797
L_20772:
	movl %r13d,%r14d
	addl 0x28(%rbp),%r14d
	jo L_20769
L_20773:
	cmpl $0x50,%r14d
	jg L_381243
L_20774:
	cmpl %r13d,%r11d
	jnl L_381241
L_20782:
	subl %r11d,%r13d
	movl %r13d,0x18(%rbp)
	jo L_20769
L_20783:
	movl $0x8,0x40(%rbp)
	movl %r13d,0x44(%rbp)
	addq $0x40,%rbp
	leaq (L_20784+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_381241:
L_20776:
	movl 0x30(%rbp),%r15d
	addl 0x28(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jo L_20769
L_20777:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_20778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3794
.p2align 0x4
L_381243:
L_20797:
	cmpq $0x1,%r15
	je L_381244
L_20798:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_20799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_381244:
L_20813:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381247:
L_20847:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381248:
L_20848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20849
.p2align 0x4
.long 0x4B2
L_20849:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_20766
.p2align 0x4
.long 0x650
L_20835:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movq $0x9,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_20836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x652
L_20826:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20827
L_20829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20830
.p2align 0x4
.long 0x475
L_20830:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20827:
	movl 0x2C(%rbp),%r15d
	addl 0x28(%rbp),%r15d
	jo L_20769
L_20828:
	movq $0x343,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	movl %r15d,0x4(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_20818:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_381252
L_20819:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_20817
.p2align 0x4
L_381252:
L_20820:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x64B
L_20784:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq $0x9,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_20785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x474
L_20778:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20779
L_20780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20781
.p2align 0x4
.long 0x64A
L_20781:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20779:
	movq $0x343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl %r14d,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x64E
L_20799:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_381256
L_20800:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
L_20801:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1B,%r14
	je L_381255
	cmpq $0x1F1C,%r14
	je L_381254
L_20802:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381254:
L_20811:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381255:
L_20810:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381256:
L_20812:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x650
L_20836:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl $0x8,0x40(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	addq $0x40,%rbp
	leaq (L_20837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x64B
L_20785:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x8,0x48(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	addq $0x48,%rbp
	leaq (L_20786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x64F
L_20803:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20804
L_20808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20809
.p2align 0x4
.long 0x651
L_20809:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20804:
	movq $0x343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_20805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x653
L_20837:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq $0x20,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_20838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x64C
L_20786:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq $0x20,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_20787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x650
L_20805:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_381258
L_20806:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_20801
.p2align 0x4
L_381258:
L_20807:
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x653
L_20838:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20839
L_20845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20846
.p2align 0x4
.long 0x654
L_20846:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20839:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x64C
L_20787:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20788
L_20794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20795
.p2align 0x4
.long 0x64D
L_20795:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20788:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x650
L_20840:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1F1B,%r13
	je L_381262
	cmpq $0x1F1C,%r13
	je L_381261
L_20841:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381261:
L_20844:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381262:
L_20843:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x64B
L_20789:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1F1B,%r13
	je L_381264
	cmpq $0x1F1C,%r13
	je L_381263
L_20790:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381263:
L_20793:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381264:
L_20792:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x650
L_20842:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20824
.p2align 0x4
.long 0x64B
L_20791:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_20776
.text
.p2align 0x4
.globl loop_3794
.hidden loop_3794
loop_3794:
loopS_0:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20852
L_20883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20884
.p2align 0x4
.long 0x460
L_20884:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_20852:
	movq 0x0(%rbp),%r15
.p2align 0x4,,0x7
loop_292:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_381272
L_20853:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDB3,%r15
	je L_381270
	cmpq $0xDB4,%r15
	je L_381268
	cmpq $0xDB5,%r15
	je L_381265
L_20854:
	movq 0x8(%r14),%r15
	jmp loop_292
.p2align 0x4
L_381265:
L_20878:
	movq 0x0(%r14),%r15
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1F1B,%r13
	je L_381267
	cmpq $0x1F1C,%r13
	je L_381266
L_20879:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp output_0
.p2align 0x4
L_381266:
L_20881:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp output_0
.p2align 0x4
L_381267:
L_20880:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp output_0
.p2align 0x4
L_381268:
L_20870:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_381269
L_20871:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_20872:
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_20873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3794
.p2align 0x4
L_381269:
L_20876:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381270:
L_20855:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_381271
L_20856:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_20857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3794
.p2align 0x4
L_381271:
L_20869:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381272:
L_20882:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_20873:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_20876
L_20874:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_20872
.p2align 0x4
.long 0x4E6
L_20857:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_381277
L_20858:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
L_20859:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1B,%r14
	je L_381276
	cmpq $0x1F1C,%r14
	je L_381275
L_20860:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381275:
L_20867:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381276:
L_20866:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381277:
L_20865:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F0
L_20861:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_20862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3794
.p2align 0x4
.long 0x4E6
L_20862:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_20865
L_20863:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_20859
.text
.p2align 0x4
.globl layout_26
.hidden layout_26
layout_26:
L_20885:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_20946
L_20886:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381280
L_20887:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	cmpq $0x1,%r15
	je L_381279
L_20888:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1,0x18(%rbp)
	movq %r14,%r15
L_20889:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381279:
L_20945:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_20917:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_20918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381280:
L_20946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20947
.p2align 0x4
.long 0x452
L_20947:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_20887
.p2align 0x4
.long 0x5F0
L_20890:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20891
L_20943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20944
.p2align 0x4
.long 0x4EA
L_20944:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20891:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381282
L_20892:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_20889
.p2align 0x4
L_381282:
L_20893:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_20894:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381284
.p2align 0x4,,0x7
L_20895:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381283
L_20896:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20894
.p2align 0x4
L_381283:
L_20897:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381284:
L_20941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20942
.p2align 0x4
.long 0x4EA
L_20942:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_20895
.p2align 0x4
.long 0x2B
L_20918:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20919
L_20929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20930
.p2align 0x4
.long 0x2C
L_20930:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20919:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20920:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_381289
L_20921:
	cmpq $0x1,%r14
	je L_381286
L_20922:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20920
.p2align 0x4
L_381286:
L_20923:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20924
L_20927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20928
.p2align 0x4
.long 0x4E7
L_20928:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20924:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_381287
L_20925:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381287:
L_20926:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381289:
L_20902:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x600
L_20898:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_20899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x4E1
L_20899:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20900
L_20939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20940
.p2align 0x4
.long 0x4E8
L_20940:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20900:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20901:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20902
L_20903:
	cmpq $0x1,%r14
	je L_381291
L_20904:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20901
.p2align 0x4
L_381291:
L_20905:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20906
L_20937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20938
.p2align 0x4
.long 0x49A
L_20938:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20906:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381292
L_20907:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_20908:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_20909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381292:
L_20936:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20908
.p2align 0x4
.long 0x4E6
L_20909:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20910
L_20934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20935
.p2align 0x4
.long 0x4E8
L_20935:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20910:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20911:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20902
L_20912:
	cmpq $0x1,%r14
	je L_381296
L_20913:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20911
.p2align 0x4
L_381296:
L_20914:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20915
L_20932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20933
.p2align 0x4
.long 0x49A
L_20933:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20915:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381297
L_20916:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20917
.p2align 0x4
L_381297:
L_20931:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20917
