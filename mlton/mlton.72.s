/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:17:46 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl simplifyStatements_0
.hidden simplifyStatements_0
simplifyStatements_0:
L_214084:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_214085
L_214242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_214243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214243
.p2align 0x4
.long 0x4AF
L_214243:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_214085:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_467373
L_214088:
	testq %rdx,%rdx
	jz L_467372
L_214089:
	cmpq $0x7FFFFFFF,%rdx
	ja L_214106
L_214090:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_214091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214091
.p2align 0x4
.long 0x4E0
L_214091:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_214092:
	movl $0x0,0x30(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_2293:
	movq 0x38(%rbp),%r14
	cmpq 0x20(%rbp),%r14
	jnl L_467364
L_214108:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_467363
	cmpq $0xF2F,%r15
	je L_467351
L_214109:
	movq 0x10(%r13),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3D,%r15
	je L_467350
L_214110:
	movq %r13,%r15
.p2align 0x4,,0x7
L_214111:
	movl 0x30(%rbp),%ecx
	incl %ecx
	jo L_467349
.p2align 0x4,,0x7
L_214113:
	movl %ecx,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_2293
.p2align 0x4
L_467349:
L_214101:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467350:
L_214114:
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_214115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_467351:
L_214140:
	movq 0x10(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r15
	jne L_467362
.p2align 0x4,,0x7
L_214143:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF28,%r15
	je L_467360
	cmpq $0xF29,%r15
	je L_467359
	cmpq $0xF2A,%r15
	je L_467357
	cmpq $0xF2B,%r15
	je L_467355
	cmpq $0xF2C,%r15
	je L_467353
L_214144:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_214145:
	cmpq $0x1,%r15
	jne L_467352
.p2align 0x4,,0x7
L_214208:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_214113
.p2align 0x4
L_467352:
L_214146:
	movq %r15,0x40(%rbp)
doitP_2:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_214147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_467353:
L_214228:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_214229:
	cmpq $0x1,%r15
	je L_214208
L_214230:
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
L_467355:
L_214224:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_214225:
	cmpq $0x1,%r15
	je L_214208
L_214226:
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
L_467357:
L_214220:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_214221:
	cmpq $0x1,%r15
	je L_214208
L_214222:
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
L_467359:
L_214213:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq $0x1,0x40(%rbp)
L_214214:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_214215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maySideEffect_0
.p2align 0x4
L_467360:
L_214209:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_214210:
	cmpq $0x1,%r15
	je L_214208
L_214211:
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
L_467362:
L_214141:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_214142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_467363:
L_214139:
	movq %r13,%r15
	jmp L_214111
.p2align 0x4
L_467364:
L_214093:
	movq 0x28(%rbp),%r15
	movq $0x18CF,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	testq %r14,%r14
	jz L_467370
L_214094:
	cmpq $0x7FFFFFFF,%r14
	ja L_467369
L_214095:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_214096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214096
.p2align 0x4
.long 0x31A8
L_214096:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,%r15
L_214097:
	xorl %ecx,%ecx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2294:
	cmpq 0x38(%rbp),%r14
	jnl L_467368
.p2align 0x4,,0x7
loop_2295:
	movslq %ecx,%r13
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_467366
L_214103:
	incl %ecx
	jo L_214101
L_214104:
	jmp loop_2295
.p2align 0x4
L_467366:
L_214100:
	incl %ecx
	jo L_214101
L_214102:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2294
.p2align 0x4
L_467368:
L_214098:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467369:
L_214106:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467370:
L_214107:
	movq (globalObjptr+0x23D0)(%rip),%r15
	jmp L_214097
.p2align 0x4
L_467372:
L_214241:
	movq (globalObjptr+0x23C8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_214092
.p2align 0x4
L_467373:
L_214087:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x31A9
L_214115:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_214116:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_214117
L_214118:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_467377
L_214119:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_467376
	cmpq $0x2,%r15
	je L_467375
L_214120:
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_214121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_467375:
L_214138:
	movq 0x40(%rbp),%r15
	jmp L_214111
.p2align 0x4
L_467376:
L_214137:
	movq (globalObjptr+0x23E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467377:
L_214117:
	movq (globalObjptr+0x23D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x31AD
L_214147:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214148
L_214205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_214206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214206
.p2align 0x4
.long 0x31B5
L_214206:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_214148:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_467381
	cmpq $0xF2A,%r14
	je L_467379
L_214149:
L_214150:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_214111
.p2align 0x4
L_467379:
L_214176:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	cmpq $0x1,%r14
	je L_467380
L_214177:
	movq %r14,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_214178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_467380:
L_214204:
	movq 0x58(%rbp),%r15
	jmp L_214150
.p2align 0x4
L_467381:
L_214151:
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3D,%r15
	jne L_467382
L_214153:
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_214154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
L_467382:
L_214152:
	movq 0x58(%rbp),%r15
	jmp L_214150
.p2align 0x4
.long 0x31AE
L_214215:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jnz L_467385
L_214216:
	cmpq $0x1,0x40(%rbp)
	je L_214208
	jmp doitP_2
.p2align 0x4
L_467385:
L_214219:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
.long 0x31AC
L_214142:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	jne L_214143
L_214232:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF28,%r15
	je L_467390
	cmpq $0xF29,%r15
	je L_467389
	cmpq $0xF2A,%r15
	je L_467388
	cmpq $0xF2B,%r15
	je L_467387
	cmpq $0xF2C,%r15
	je L_467386
L_214233:
	movq 0x48(%rbp),%r15
	jmp L_214145
.p2align 0x4
L_467386:
L_214238:
	movq 0x48(%rbp),%r15
	jmp L_214229
.p2align 0x4
L_467387:
L_214237:
	movq 0x48(%rbp),%r15
	jmp L_214225
.p2align 0x4
L_467388:
L_214236:
	movq 0x48(%rbp),%r15
	jmp L_214221
.p2align 0x4
L_467389:
L_214235:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	jmp L_214214
.p2align 0x4
L_467390:
L_214234:
	movq 0x48(%rbp),%r15
	jmp L_214210
.p2align 0x4
.long 0x31AA
L_214121:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movslq 0x34(%rbp),%r15
	cmpq %r13,%r15
	jnb L_214123
L_214124:
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,0x8(%r9)
	jne L_467397
L_214126:
	movl $0x0,0x40(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2296:
	cmpl 0x34(%rbp),%ecx
	jnl L_467395
L_214131:
	movl %ecx,%r15d
	incl %r15d
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_467394
L_214133:
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r10
	movq 0x8(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	je L_467392
L_214134:
	movl %r15d,%ecx
	jmp loop_2296
.p2align 0x4
L_467392:
L_214135:
	movl 0x40(%rbp),%r11d
	incl %r11d
	jo L_214101
L_214136:
	movl %r11d,0x40(%rbp)
	movl %r15d,%ecx
	jmp loop_2296
.p2align 0x4
L_467394:
L_214123:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467395:
L_214127:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214128
L_214129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_214130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214130
.p2align 0x4
.long 0x31AB
L_214130:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_214128:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_214111
.p2align 0x4
L_467397:
L_214125:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_214113
.p2align 0x4
.long 0x31B1
L_214178:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214179
L_214202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_214203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214203
.p2align 0x4
.long 0x31B0
L_214203:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_214179:
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x4(%r11),%r14b
	testb %r14b,%r14b
	jz L_467399
L_214180:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r14
	movq %r14,%r15
	jmp L_214150
.p2align 0x4
L_467399:
L_214181:
	movq 0x20(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_214087
L_214183:
	movl %r13d,0x78(%rbp)
	movq $0x3841,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	addq $0x70,%rbp
	leaq (L_214184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
.long 0x31AE
L_214154:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214155
L_214174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_214175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214175
.p2align 0x4
.long 0x31B0
L_214175:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_214155:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_214156:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_214157
L_214158:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_467404
L_214159:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_467403
	cmpq $0x2,%r15
	je L_467402
L_214160:
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_214161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_467402:
L_214173:
	movq 0x58(%rbp),%r15
	jmp L_214150
.p2align 0x4
L_467403:
L_214172:
	movq (globalObjptr+0x23F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467404:
L_214157:
	movq (globalObjptr+0x23E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x31B1
L_214184:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214185
L_214200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_214201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214201
.p2align 0x4
.long 0x31B0
L_214201:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_214185:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_214087
L_214187:
	movq 0x58(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_214087
L_214189:
	cmpl %r11d,%r9d
	jne L_467407
L_214191:
	movl %r11d,0x80(%rbp)
	movq $0x38AB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_214192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
L_467407:
L_214190:
	movq (globalObjptr+0x540)(%rip),%r11
	movq %r11,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x31A9
L_214161:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq 0x20(%r14),%r15
	movq %r14,0x58(%rbp)
	movl $0x0,0x58(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2297:
	cmpl 0x34(%rbp),%ecx
	jnl L_467414
L_214166:
	movl %ecx,%r14d
	incl %r14d
	movslq %ecx,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_214123
L_214168:
	salq $0x4,%r13
	movq 0x8(%r15,%r13,1),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,0x8(%r9)
	je L_467411
L_214169:
	movl %r14d,%ecx
	jmp loop_2297
.p2align 0x4
L_467411:
L_214170:
	movl 0x58(%rbp),%r13d
	incl %r13d
	jo L_214101
L_214171:
	movl %r13d,0x58(%rbp)
	movl %r14d,%ecx
	jmp loop_2297
.p2align 0x4
L_467414:
L_214162:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214163
L_214164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_214165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214165
.p2align 0x4
.long 0x31AF
L_214165:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_214163:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,%r15
	jmp L_214150
.p2align 0x4
.long 0x31B2
L_214192:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214193
L_214198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_214199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214199
.p2align 0x4
.long 0x31B4
L_214199:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_214193:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x68(%rbp)
	movq $0x3F9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	addq $0x60,%rbp
	leaq (L_214194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x31A9
L_214194:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214195
L_214196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_214197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214197
.p2align 0x4
.long 0x31B3
L_214197:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_214195:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_214150
.text
.p2align 0x4
.globl tabulate_43
.hidden tabulate_43
tabulate_43:
L_214244:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_214245
L_214293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_214294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214294
.p2align 0x4
.long 0x458
L_214294:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_214245:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_467431
L_214246:
	cmpq $0x7FFFFFFF,%rdx
	ja L_467430
L_214247:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x145D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_214248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214248
.p2align 0x4
.long 0x453
L_214248:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_214249:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_2298:
	movq 0x18(%rbp),%r14
	cmpq 0x10(%rbp),%r14
	jnl L_467429
L_214251:
	movl %r14d,%r13d
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1CDA,%r15
	je L_467427
	cmpq $0x1CDB,%r15
	je L_467424
	cmpq $0x1CDC,%r15
	je L_467423
	cmpq $0x1CDD,%r15
	je L_467421
	cmpq $0x1CDE,%r15
	je L_467419
L_214252:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x18(%r14),%r10
	movq 0x8(%r10,%r13,1),%r9
	movq 0x0(%r9),%rsp
	cmpq $0x1,0x8(%rsp)
	je L_467418
L_214253:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_214254:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_2298
.p2align 0x4
L_467418:
L_214255:
	movq %r8,0x38(%rbp)
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_214256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_467419:
L_214283:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x18(%r14),%r10
	movq 0x8(%r10,%r13,1),%r9
	movq 0x0(%r9),%rsp
	cmpq $0x1,0x8(%rsp)
	je L_467420
L_214284:
	movq $0x1,%r15
	jmp L_214254
.p2align 0x4
L_467420:
L_214285:
	movq %r8,0x38(%rbp)
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_214286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_467421:
L_214275:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r10
	movq 0x0(%r10,%r13,1),%r9
	movq %r9,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r10,%r15,1),%r13
	movq 0x0(%r13),%r9
	cmpq $0x1,0x8(%r9)
	je L_467422
L_214276:
	movq $0x1,%r15
	jmp L_214254
.p2align 0x4
L_467422:
L_214277:
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_214278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467423:
L_214274:
	movq 0x0(%r14),%r11
	movslq %r13d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_214254
.p2align 0x4
L_467424:
L_214270:
	movq 0x0(%r14),%r15
	movslq %r13d,%r11
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r11,8),%r10
	cmpq $0x1,%r10
	je L_467426
L_214271:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_467425
L_214272:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_214254
.p2align 0x4
L_467425:
L_214258:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467426:
L_214273:
	movq %r10,%r15
	jmp L_214254
.p2align 0x4
L_467427:
L_214262:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r10
	movq 0x0(%r10,%r13,1),%r9
	movq %r9,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r10,%r15,1),%r13
	movq 0x0(%r13),%r9
	cmpq $0x1,0x8(%r9)
	je L_467428
L_214263:
	movq $0x1,%r15
	jmp L_214254
.p2align 0x4
L_467428:
L_214264:
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_214265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467429:
L_214250:
	movq 0x8(%rbp),%r15
	movq $0xBC7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467430:
L_214291:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467431:
L_214292:
	movq (globalObjptr+0xBA0)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_214249
.p2align 0x4
.long 0x558
L_214256:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214257
L_214260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_214261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214261
.p2align 0x4
.long 0x576
L_214261:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_214257:
	movq $0x2725,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_214258
L_214259:
	movl %r13d,0x0(%r14)
	jmp L_214254
.p2align 0x4
.long 0x558
L_214286:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214287
L_214289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_214290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214290
.p2align 0x4
.long 0x576
L_214290:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_214287:
	movq $0x2725,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_214258
L_214288:
	movl %r13d,0x0(%r14)
	jmp L_214254
.p2align 0x4
.long 0x558
L_214278:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214279
L_214281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_214282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214282
.p2align 0x4
.long 0x68C
L_214282:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_214279:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq $0x2725,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_214258
L_214280:
	movl %r13d,0x0(%r14)
	jmp L_214254
.p2align 0x4
.long 0x558
L_214265:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214266
L_214268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_214269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214269
.p2align 0x4
.long 0x68C
L_214269:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_214266:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq $0x2725,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_214258
L_214267:
	movl %r13d,0x0(%r14)
	jmp L_214254
.text
.p2align 0x4
.globl getWrapperLabel_1
.hidden getWrapperLabel_1
getWrapperLabel_1:
L_214295:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_214296
L_214427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_214428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214428
.p2align 0x4
.long 0x63D
L_214428:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_214296:
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_214297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
.long 0x65C
L_214297:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	movq %r13,0x30(%rbp)
	cmpq %r13,%r15
	jne L_214299
L_214300:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r14,%r13
	jne L_467456
L_214302:
	cmpl %ebx,%ecx
	jne L_467455
L_214304:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2299:
	cmpl %ecx,%ebx
	je L_467454
L_214305:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_214307
L_214308:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x0(%rbp),%r10
	movq 0x8(%r10,%r11,1),%r9
	cmpq %r14,%r13
	jnb L_467452
L_214310:
	salq $0x4,%r13
	movq 0x28(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq 0x0(%r9),%r11
	cmpq $0x1,0x8(%r11)
	je L_467451
L_214311:
	xorl %r11d,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
L_214312:
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_467450
L_214313:
	xorl %r13d,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
L_214314:
	cmpl %ecx,%ebx
	jne L_467443
L_214422:
	movl (localWord32+0x4)(%rip),%ebx
	incl %ebx
	jo L_467442
L_214423:
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2299
.p2align 0x4
L_467442:
L_214409:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467443:
L_214315:
	movq 0x30(%rbp),%rdx
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x38(%rbp)
	je L_467449
L_214316:
	cmpq $0x7FFFFFFF,%rdx
	ja L_467448
L_214317:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1565,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_214318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214318
.p2align 0x4
.long 0x979
L_214318:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_214319:
	movl $0x0,0x3C(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2300:
	cmpq 0x30(%rbp),%r15
	jnl L_467446
L_214415:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x0(%rbp),%r11
	movq 0x0(%r11,%r13,1),%r10
	salq $0x4,%r14
	movq 0x8(%r11,%r14,1),%r13
	movq 0x0(%r13),%r9
	cmpq $0x1,0x8(%r9)
	jne L_467445
L_214418:
	movl 0x3C(%rbp),%ecx
	incl %ecx
	jo L_214409
	movq %r10,%r14
L_214417:
	movl %ecx,0x3C(%rbp)
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2300
.p2align 0x4
L_467445:
L_214416:
	movl 0x3C(%rbp),%ecx
	movq $0x1,%r14
	jmp L_214417
.p2align 0x4
L_467446:
L_214320:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214321
L_214413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_214414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214414
.p2align 0x4
.long 0x978
L_214414:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_214321:
	movq 0x40(%rbp),%r15
	movq $0xB8B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xB8D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3A47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_214322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
L_467448:
L_214395:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467449:
L_214421:
	movq (globalObjptr+0x23B0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_214319
.p2align 0x4
L_467450:
L_214424:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
	jmp L_214314
.p2align 0x4
L_467451:
L_214425:
	movl $0x1,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
	jmp L_214312
.p2align 0x4
L_467452:
L_214307:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467454:
L_214426:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467455:
L_214303:
	movq (globalObjptr+0x1B28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467456:
L_214299:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x124F
L_214322:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_214332
L_214323:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_214324:
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ecx
	movslq %ecx,%r10
	cmpq %r10,%r13
	jne L_214299
L_214326:
	movq 0x40(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	movl %r10d,%ebx
	movslq %ebx,%r9
	cmpq %r9,%r10
	jne L_214299
L_214328:
	cmpl %ebx,%ecx
	jne L_467464
L_214399:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2302:
	cmpl %ebx,%ecx
	je L_467463
L_214400:
	movslq %ebx,%r9
	cmpq %r13,%r9
	jnb L_214307
L_214402:
	movq 0x0(%r11,%r9,8),%r8
	cmpq %r10,%r9
	jnb L_214307
L_214404:
	movq 0x40(%rbp),%rsp
	movq 0x0(%rsp,%r9,8),%rsi
	movq 0x10(%r8),%rdi
	cmpq %rdi,0x10(%rsi)
	jne L_467459
L_214408:
	incl %ebx
	jo L_214409
L_214410:
	jmp loop_2302
.p2align 0x4
L_467459:
L_214405:
	cmpq $0x1,%r15
	je L_467460
L_214406:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_214324
.p2align 0x4
L_467460:
L_214332:
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_214333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467463:
L_214411:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467464:
L_214329:
	cmpq $0x1,%r15
	je L_214332
L_214330:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_214324
.p2align 0x4
.long 0x31B6
L_214333:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214334
L_214397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214398
.p2align 0x4
.long 0x31BE
L_214398:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214334:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x40(%rbp)
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_467473
L_214335:
	cmpq $0x7FFFFFFF,0x30(%rbp)
	ja L_214395
L_214336:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214337
L_214392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214393
.p2align 0x4
.long 0x31B7
L_214393:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214337:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1567,%rcx
	movq 0x30(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214338
.p2align 0x4
.long 0x31B7
L_214338:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
L_214339:
	movq $0x0,0x38(%rbp)
loop_2301:
	movq 0x30(%rbp),%r15
	cmpq %r15,0x38(%rbp)
	jl L_467470
L_214340:
	movq 0x18(%rbp),%r15
	movq $0xBC5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_214299
L_214342:
	movq $0x39B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movl %r13d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_214343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
L_467470:
L_214381:
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	salq $0x4,%r14
	movq 0x0(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x50(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x58(%rbp)
	salq $0x4,%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_214382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467473:
L_214396:
	movq (globalObjptr+0x23B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_214339
.p2align 0x4
.long 0x28C3
L_214343:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214344
L_214379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214380
.p2align 0x4
.long 0x31BB
L_214380:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214344:
	movq $0x388D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_214345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x31BC
L_214382:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214383
L_214390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_214391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214391
.p2align 0x4
.long 0x31BD
L_214391:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_214383:
	movq $0x15,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x28,%r12
	movl 0x68(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r11
	movq %r11,0x18(%r13)
	movq 0x58(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,0x8(%r10)
	je L_467477
L_214384:
	movq $0x1,%r14
	movq %r13,%r15
L_214385:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r11)
	jne L_467476
L_214388:
L_214387:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x38(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0x38(%rbp)
	jmp loop_2301
.p2align 0x4
L_467476:
L_214386:
	movq $0x1,%r15
	jmp L_214387
.p2align 0x4
L_467477:
L_214389:
	movq $0x2725,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r13,%r15
	jmp L_214385
.p2align 0x4
.long 0x246A
L_214345:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214346
L_214377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214378
.p2align 0x4
.long 0x31BA
L_214378:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214346:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_214299
L_214348:
	movl %r11d,0x60(%rbp)
	movq $0x39B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_214349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x31B8
L_214349:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214350
L_214375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214376
.p2align 0x4
.long 0xBBC
L_214376:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214350:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq $0x38ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_214351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x31B9
L_214351:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214352
L_214373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214374
.p2align 0x4
.long 0x282D
L_214374:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214352:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_214299
L_214354:
	movq $0x3F9F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movl %r13d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_214355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x31B8
L_214355:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214356
L_214371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214372
.p2align 0x4
.long 0x282D
L_214372:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214356:
	movq $0x3A37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_214357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0x31B8
L_214357:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214358
L_214369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214370
.p2align 0x4
.long 0xBBC
L_214370:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214358:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_214299
L_214360:
	movl %r11d,0x60(%rbp)
	movq $0x389D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_214361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0xBD9
L_214361:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214362
L_214367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214368
.p2align 0x4
.long 0xBDB
L_214368:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214362:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x94F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq $0x3FE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_214363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1989
L_214363:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214364
L_214365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214366
.p2align 0x4
.long 0xBBC
L_214366:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214364:
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1E67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x23,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x28,%r12
	movq %r15,0x8(%r13)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r13)
	movq $0x12AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1E9B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r11
	movq 0x0(%r11),%r9
	movq 0x0(%r9),%r14
	movq $0x1E99,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r9,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r9)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl addCuts_0
.hidden addCuts_0
addCuts_0:
L_214429:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_214493
L_214430:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467508
L_214431:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r15
	movl 0x0(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_467506
L_214443:
	movq 0x10(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_467505
L_214445:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_467504
L_214446:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_214448:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_467503
L_214485:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB0,%r11
	jne L_467502
L_214486:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_467499
L_214449:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_467498
L_214450:
	cmpq $0x1,%r15
	je L_467489
L_214451:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_214448
.p2align 0x4
L_467489:
L_214452:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214453
L_214483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214484
.p2align 0x4
.long 0x4AE
L_214484:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214453:
	movl 0x14(%rbp),%ecx
L_214454:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_467496
L_214456:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_214458
L_214482:
	movl %ecx,0x0(%r15)
L_214458:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x13B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1961,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_214459:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_467493
L_214460:
	movl $0x1,0x0(%r14)
L_214461:
	movl 0x10(%rbp),%r15d
	movl %r15d,0x14(%rbp)
L_214435:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_467490
L_214436:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467490:
L_214437:
	cmpl $0x0,0x38(%rbp)
	jl L_467492
L_214438:
	movl $0x0,0x3C(%rbp)
loop_2303:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_467491
L_214439:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467491:
L_214440:
	movslq 0x3C(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x48,%rbp
	leaq (L_214441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addCuts_0
.p2align 0x4
L_467492:
L_214442:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467493:
L_214462:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_467494
L_214463:
	movq (globalObjptr+0x10228)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_214464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_467494:
L_214481:
	movl 0x10(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	jmp L_214435
.p2align 0x4
L_467496:
L_214455:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467498:
L_214433:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467499:
L_214488:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_214455
L_214489:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_467500
L_214491:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_214459
.p2align 0x4
L_467500:
L_214490:
	movq %r11,%r15
	jmp L_214459
.p2align 0x4
L_467502:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_214449
.p2align 0x4
L_467503:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_214449
.p2align 0x4
L_467504:
L_214492:
	xorl %ecx,%ecx
	jmp L_214454
.p2align 0x4
L_467505:
L_214444:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467506:
L_214432:
	movl 0x0(%rbp),%r15d
	decl %r15d
	jo L_214433
L_214434:
	movl %r15d,0x14(%rbp)
	jmp L_214435
.p2align 0x4
L_467508:
L_214493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_214494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214494
.p2align 0x4
.long 0xA2D
L_214494:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_214431
.p2align 0x4
.long 0x5E9
L_214441:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_2303
.p2align 0x4
.long 0x4AB
L_214464:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_214465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x31BF
L_214465:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_214466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x31BF
L_214466:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214467
L_214479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214480
.p2align 0x4
.long 0x4AE
L_214480:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_214467:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_214468:
	addl 0x0(%r15),%ecx
	movl %ecx,0x14(%rbp)
	jo L_214433
L_214469:
	cmpq $0x1,%r14
	je L_467510
L_214470:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_214468
.p2align 0x4
L_467510:
L_214471:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214472
L_214477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_214478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214478
.p2align 0x4
.long 0x125A
L_214478:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_214472:
	movl 0x14(%rbp),%ecx
	testl %ecx,%ecx
	jz L_467511
L_214473:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
x_720:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x58(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_214474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_467511:
L_214476:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_720
.p2align 0x4
.long 0x5EA
L_214474:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_214475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x511
L_214475:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_214461
.text
.p2align 0x4
.globl loop_3914
.hidden loop_3914
loop_3914:
L_214495:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_214888
L_214496:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467529
L_214497:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x60(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x68(%rbp)
	movq 0x18(%r10),%r8
	movq %r8,0x70(%rbp)
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x10(%r9),%r11
	movq %r11,0x80(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_467528
L_214499:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_467527
L_214500:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x8(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_214502:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_467526
L_214877:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB0,%r11
	jne L_467525
L_214878:
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_467521
L_214503:
	movl 0x8(%rbp),%r11d
	incl %r11d
	movl %r11d,0xC(%rbp)
	jo L_467520
L_214505:
	cmpq $0x1,%r15
	je L_467515
L_214506:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x8(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_214502
.p2align 0x4
L_467515:
L_214507:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214508
L_214875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_214876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214876
.p2align 0x4
.long 0x31EE
L_214876:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_214508:
	movl 0xC(%rbp),%ecx
L_214509:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_467518
L_214511:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_214513
L_214874:
	movl %ecx,0x0(%r15)
L_214513:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x13B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1961,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_214514:
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x8(%rbp)
	testl %r13d,%r13d
	jnz L_467516
L_214515:
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
L_214516:
	movq $0x33C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_214517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_467516:
L_214869:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_214870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_467518:
L_214510:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467520:
L_214504:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467521:
L_214880:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214881
L_214885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214886
.p2align 0x4
.long 0x31EF
L_214886:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214881:
	movl 0x8(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_214510
L_214882:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_467522
L_214883:
	movq 0x88(%rbp),%r15
	jmp L_214514
.p2align 0x4
L_467522:
L_214884:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x88(%rbp),%r15
	jmp L_214514
.p2align 0x4
L_467525:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_214503
.p2align 0x4
L_467526:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_214503
.p2align 0x4
L_467527:
L_214887:
	xorl %ecx,%ecx
	jmp L_214509
.p2align 0x4
L_467528:
L_214498:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467529:
L_214888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_214889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214889
.p2align 0x4
.long 0x80B
L_214889:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_214497
.p2align 0x4
.long 0xD2B
L_214517:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x80(%rbp)
	cmpq %r14,%rdx
	jne L_214519
L_214520:
	testq %rdx,%rdx
	jz L_467588
L_214521:
	cmpq $0x7FFFFFFF,%rdx
	ja L_214627
L_214522:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_214523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214523
.p2align 0x4
.long 0x31C0
L_214523:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_214524:
	movq $0x0,0x90(%rbp)
.p2align 0x4,,0x7
loop_2304:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467586
.p2align 0x4,,0x7
L_214525:
	movq 0x90(%rbp),%r15
	cmpq 0x80(%rbp),%r15
	jnl L_467557
L_214762:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq $0x95D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,%r11
	movq %r11,0x0(%r15)
	movq 0x30(%rbp),%r10
	movq %r10,0x8(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r9
	shrq $0x1,%r9
	cmpq $0xF2E,%r9
	je L_467556
	cmpq $0xF2F,%r9
	je L_467532
L_214763:
	movq 0x10(%r13),%r9
	movq %r9,0x98(%rbp)
	movl 0x0(%r13),%r9d
	movl %r9d,0xC(%rbp)
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_467531
L_214776:
	movq 0x0(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq %r14,0xA8(%rbp)
	movq %r10,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_214777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_467531:
L_214764:
	movq 0x8(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq %r14,0xB0(%rbp)
	movq %r10,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_214765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_467532:
L_214782:
	movq 0x10(%r13),%r9
	movq %r9,0x98(%rbp)
	movq 0x8(%r13),%r9
	movq %r9,0xA0(%rbp)
	movq 0x0(%r13),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_467554
	cmpq $0xF29,%r13
	je L_467552
	cmpq $0xF2A,%r13
	je L_467550
	cmpq $0xF2B,%r13
	je L_467549
	cmpq $0xF2C,%r13
	je L_467533
L_214783:
	movq 0x0(%r9),%r13
	movq %r13,0xB8(%rbp)
	movq %r14,0xB0(%rbp)
	movq %r10,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_214784+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_467533:
L_214862:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_467548
L_214863:
	xchgq %r9,%r14
.p2align 0x4,,0x7
L_214787:
	movq %r15,0x98(%rbp)
	movq %r14,0xA8(%rbp)
.p2align 0x4,,0x7
L_214788:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467547
.p2align 0x4,,0x7
L_214789:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x20,%r12
	movq 0xA8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0xA0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x98(%rbp),%r10
	movq %r10,0x10(%r13)
	cmpq $0x1,%r10
	je L_214804
L_214790:
	movq $0x6F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x78(%rbp),%r13
	movq 0x8(%r13),%r14
	movq $0x10B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x271B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xA8(%rbp)
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	movq %r13,0x18(%r9)
	addq $0x28,%r12
	movq %r11,0x10(%r9)
	movq 0x10(%r10),%r13
	movq %r13,0xB8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_214498
L_214791:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_467544
L_214792:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_214794:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_214795
L_214808:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD54,%r13
	jne L_214795
L_214809:
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_467539
L_214795:
	incl %ecx
	movl %ecx,0xC(%rbp)
	jo L_214504
L_214796:
	cmpq $0x1,%r15
	je L_467534
L_214797:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_214794
.p2align 0x4
L_467534:
L_214798:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467537
.p2align 0x4,,0x7
L_214799:
	movl 0xC(%rbp),%ecx
L_214800:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_214510
L_214801:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_214803
L_214805:
	movl %ecx,0x0(%r15)
L_214803:
	movq $0x1AA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_214804:
	movq 0xB0(%rbp),%r15
.p2align 0x4,,0x7
L_214771:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_2304
.p2align 0x4
L_467537:
L_214806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_214807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214807
.p2align 0x4
.long 0x31E8
L_214807:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_214799
.p2align 0x4
L_467539:
L_214811:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_214510
L_214812:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_467540
L_214814:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467540:
L_214813:
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467544:
L_214815:
	xorl %ecx,%ecx
	jmp L_214800
.p2align 0x4
L_467547:
L_214817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_214818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214818
.p2align 0x4
.long 0x31E6
L_214818:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_214789
.p2align 0x4
L_467548:
L_214864:
	movq %r9,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_214788
.p2align 0x4
L_467549:
L_214855:
	movq 0x8(%r9),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB8(%rbp)
	movq %r10,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_214856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_467550:
L_214846:
	movq 0x8(%r9),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r9),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %rsp,%r9
	jne L_467551
L_214848:
	movl %r8d,0xC0(%rbp)
	movq $0x3F97,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r9,0xB8(%rbp)
	addq $0x18,%r12
	addq $0xB8,%rbp
	leaq (L_214849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467551:
L_214519:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467552:
L_214837:
	movq 0x8(%r9),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r9),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %r9,%rsp
	jne L_214519
L_214839:
	movl %r8d,0xC0(%rbp)
	movq $0x3F97,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r9,0xB8(%rbp)
	addq $0x18,%r12
	addq $0xB8,%rbp
	leaq (L_214840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467554:
L_214822:
	movl 0x0(%r9),%r15d
	movl %r15d,0xC(%rbp)
	movq 0x8(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_467555
L_214832:
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq %r14,0xB0(%rbp)
	movq %r10,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_214833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_467555:
L_214823:
	movq 0x8(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq %r14,0xB8(%rbp)
	movq %r10,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_214824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_467556:
	movq %r13,%r15
	jmp L_214771
.p2align 0x4
L_467557:
L_214526:
	movq 0x88(%rbp),%r14
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x95D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_467570
L_214527:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF31,%r11
	je L_467568
	cmpq $0xF32,%r11
	je L_467566
	cmpq $0xF33,%r11
	je L_467564
	cmpq $0xF34,%r11
	je L_467563
	cmpq $0xF35,%r11
	je L_467561
	cmpq $0xF36,%r11
	je L_467559
L_214528:
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	jne L_214519
L_214530:
	movl %r10d,0xA0(%rbp)
	movq $0x402F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_214531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467559:
L_214754:
	movq 0x20(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x90(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_214519
L_214756:
	movl %r11d,0xB0(%rbp)
	movq $0x402F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xA8(%rbp)
	addq $0x18,%r12
	addq $0xA8,%rbp
	leaq (L_214757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467561:
L_214739:
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jne L_214519
L_214741:
	movl %r10d,0xA0(%rbp)
	movq $0x402F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_214742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467563:
L_214708:
	movq 0x10(%r13),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_214709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_467564:
L_214701:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	jne L_214519
L_214703:
	movl %r10d,0xA0(%rbp)
	movq $0x402F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_214704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467566:
L_214694:
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jne L_214519
L_214696:
	movl %r10d,0xA0(%rbp)
	movq $0x402F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_214697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467568:
L_214687:
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	jne L_214519
L_214689:
	movl %r10d,0xA0(%rbp)
	movq $0x402F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_214690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467570:
L_214761:
	movq $0x1,0x58(%rbp)
L_214533:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	cmpq $0x1,%r13
	je L_467585
L_214534:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_214535:
	incl %ecx
	jo L_214504
L_214536:
	cmpq $0x1,%r15
	je L_467571
L_214537:
	movq 0x8(%r15),%r15
	jmp L_214535
.p2align 0x4
L_467571:
L_214538:
L_214539:
	movslq %ecx,%rdx
	movq %rdx,0x80(%rbp)
	testq %rdx,%rdx
	jz L_467583
L_214540:
	cmpq $0x7FFFFFFF,%rdx
	ja L_214627
L_214541:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214542
.p2align 0x4
.long 0x31C1
L_214542:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
L_214543:
	movq 0x60(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2305:
	cmpq 0x80(%rbp),%r15
	jnl L_467573
L_214679:
	cmpq $0x1,%r14
	je L_467572
L_214680:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x90(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2305
.p2align 0x4
L_467572:
L_214637:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467573:
L_214544:
	movq 0x90(%rbp),%r15
	movq $0x18D1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	movq %r13,0x60(%rbp)
	cmpq %r14,%r13
	jne L_214519
L_214546:
	cmpl $0x0,%ecx
	jl L_467580
L_214547:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2306:
	cmpl %ecx,%ebx
	jnl L_467574
L_214677:
	movslq %ebx,%r15
	salq $0x4,%r15
	movq 0x90(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	incl %ebx
	jmp loop_2306
.p2align 0x4
L_467574:
L_214548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214549
L_214675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_214676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214676
.p2align 0x4
.long 0x31D8
L_214676:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_214549:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%rdx
	testq %rdx,%rdx
	jz L_467578
L_214550:
	cmpq $0x7FFFFFFF,%rdx
	ja L_467577
L_214551:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_214552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214552
.p2align 0x4
.long 0x31C2
L_214552:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x88(%rbp)
L_214553:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2307:
	cmpq 0x60(%rbp),%r15
	jnl L_467575
L_214672:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2307
.p2align 0x4
L_467575:
L_214554:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214555
L_214670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214671
.p2align 0x4
.long 0x31D7
L_214671:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214555:
	movq 0x88(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_214556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_467577:
L_214627:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467578:
L_214674:
	movq (globalObjptr+0x2428)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_214553
.p2align 0x4
L_467580:
L_214633:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467583:
L_214683:
	movq (globalObjptr+0x2420)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_214543
.p2align 0x4
L_467585:
L_214684:
	xorl %ecx,%ecx
	jmp L_214539
.p2align 0x4
L_467586:
L_214865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_214866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214866
.p2align 0x4
.long 0x31EC
L_214866:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_214525
.p2align 0x4
L_467588:
L_214868:
	movq (globalObjptr+0x2430)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_214524
.p2align 0x4
.long 0x31ED
L_214870:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214871
L_214872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214873
.p2align 0x4
.long 0x31D9
L_214873:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214871:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x95B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x28,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x78(%rbp)
	jmp L_214516
.p2align 0x4
.long 0x31E7
L_214777:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214778
L_214779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_214780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214780
.p2align 0x4
.long 0x31E5
L_214780:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_214778:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
L_214768:
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_214769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
.long 0x31E2
L_214765:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_214766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
.long 0x31E2
L_214784:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214785
L_214820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_214821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214821
.p2align 0x4
.long 0x31E6
L_214821:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_214785:
	movq $0x1E4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_467592
L_214786:
	jmp L_214787
.p2align 0x4
L_467592:
L_214819:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_214788
.p2align 0x4
.long 0x31E9
L_214856:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214857
L_214860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_214861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214861
.p2align 0x4
.long 0x31EB
L_214861:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_214857:
	movq $0x1E57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_467594
L_214858:
	jmp L_214787
.p2align 0x4
L_467594:
L_214859:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_214788
.p2align 0x4
.long 0x31E9
L_214849:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214850
L_214853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_214854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214854
.p2align 0x4
.long 0x31EB
L_214854:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_214850:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_467596
L_214851:
	jmp L_214787
.p2align 0x4
L_467596:
L_214852:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_214788
.p2align 0x4
.long 0x31E9
L_214840:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214841
L_214844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_214845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214845
.p2align 0x4
.long 0x31EB
L_214845:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_214841:
	movq $0x1E53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_467598
L_214842:
	jmp L_214787
.p2align 0x4
L_467598:
L_214843:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_214788
.p2align 0x4
.long 0x31E2
L_214833:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214834
L_214835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_214836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214836
.p2align 0x4
.long 0x31E6
L_214836:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_214834:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
L_214827:
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0xC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_467600
L_214828:
	jmp L_214787
.p2align 0x4
L_467600:
L_214829:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_214788
.p2align 0x4
.long 0x31E9
L_214824:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_214825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
.long 0x1C80
L_214531:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214532
L_214685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214686
.p2align 0x4
.long 0x31D9
L_214686:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214532:
	movq $0x1E61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x58(%rbp)
	jmp L_214533
.p2align 0x4
.long 0x31E0
L_214757:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214758
L_214759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_214760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214760
.p2align 0x4
.long 0x31E1
L_214760:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_214758:
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x58(%rbp)
	jmp L_214533
.p2align 0x4
.long 0x1C80
L_214742:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214743
L_214752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214753
.p2align 0x4
.long 0x31D9
L_214753:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214743:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_467607
	cmpq $0x2,%r13
	je L_467606
L_214744:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je L_467605
	cmpq $0x2,%r15
	je L_467604
L_214746:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_214747:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	jmp L_214533
.p2align 0x4
L_467604:
L_214749:
	movq $0x2,%r15
	jmp L_214746
.p2align 0x4
L_467605:
L_214748:
	movq $0x1,%r15
	jmp L_214746
.p2align 0x4
L_467606:
L_214751:
	movq $0x2,%r15
	jmp L_214747
.p2align 0x4
L_467607:
L_214750:
	movq $0x1,%r15
	jmp L_214747
.p2align 0x4
.long 0x1C80
L_214709:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214710
L_214737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214738
.p2align 0x4
.long 0x31D9
L_214738:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214710:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1208,%r14
	je L_467615
L_214721:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x98(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x90(%rbp)
	jne L_214519
L_214723:
	testq %rdx,%rdx
	jz L_467613
L_214724:
	cmpq $0x7FFFFFFF,%rdx
	ja L_214627
L_214725:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_214726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214726
.p2align 0x4
.long 0x31DF
L_214726:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x80(%rbp)
L_214727:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2314:
	cmpq 0x98(%rbp),%r15
	jnl L_467609
L_214734:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2314
.p2align 0x4
L_467609:
L_214728:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214729
L_214732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214733
.p2align 0x4
.long 0x31D9
L_214733:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214729:
	movq 0x80(%rbp),%r13
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x2413,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_467610
L_214730:
L_214717:
	movq $0x1E69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x58(%rbp)
	jmp L_214533
.p2align 0x4
L_467610:
L_214731:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_214717
.p2align 0x4
L_467613:
L_214736:
	movq (globalObjptr+0x2438)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_214727
.p2align 0x4
L_467615:
L_214711:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_214519
L_214713:
	movl %r13d,0xA8(%rbp)
	movq $0x39FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	addq $0xA0,%rbp
	leaq (L_214714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x31DC
L_214704:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214705
L_214706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214707
.p2align 0x4
.long 0x31C1
L_214707:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214705:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	jmp L_214533
.p2align 0x4
.long 0x31DA
L_214697:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214698
L_214699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214700
.p2align 0x4
.long 0x31DB
L_214700:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214698:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	jmp L_214533
.p2align 0x4
.long 0x31DA
L_214690:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214691
L_214692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_214693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214693
.p2align 0x4
.long 0x31DB
L_214693:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_214691:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	jmp L_214533
.p2align 0x4
.long 0x31C3
L_214556:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214557
L_214668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_214669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214669
.p2align 0x4
.long 0x31D6
L_214669:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_214557:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_214519
L_214559:
	cmpl $0x0,%r13d
	jl L_214633
L_214560:
	movl $0x0,0x80(%rbp)
loop_2308:
	movl 0xC(%rbp),%r14d
	cmpl %r14d,0x80(%rbp)
	jl L_467626
L_214561:
	movl 0x8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_467621
L_214562:
	movq 0x60(%rbp),%r15
L_214563:
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1E99,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467621:
L_214564:
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r15
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_467625
L_214565:
	movq 0x8(%r15),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_214566:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_214504
L_214567:
	cmpq $0x1,%r15
	je L_467622
L_214568:
	movq 0x8(%r15),%r15
	jmp L_214566
.p2align 0x4
L_467622:
L_214569:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214570
L_214659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214660
.p2align 0x4
.long 0x31D4
L_214660:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214570:
	movl 0x40(%rbp),%ecx
L_214571:
	movl %ecx,0x88(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_214572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467625:
L_214661:
	xorl %ecx,%ecx
	jmp L_214571
.p2align 0x4
L_467626:
L_214662:
	movslq 0x80(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0x90,%rbp
	leaq (L_214663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3914
.p2align 0x4
.long 0x31E4
L_214769:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214770
L_214772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_214773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214773
.p2align 0x4
.long 0x31E5
L_214773:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_214770:
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_214771
.p2align 0x4
.long 0x31E3
L_214766:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214767
L_214774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_214775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214775
.p2align 0x4
.long 0x31E6
L_214775:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_214767:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA0(%rbp)
	jmp L_214768
.p2align 0x4
.long 0x31EA
L_214825:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214826
L_214830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_214831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214831
.p2align 0x4
.long 0x31EB
L_214831:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_214826:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_214827
.p2align 0x4
.long 0x31DD
L_214714:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214715
L_214719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_214720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214720
.p2align 0x4
.long 0x31DE
L_214720:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_214715:
	movq $0x2411,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_467633
L_214716:
	jmp L_214717
.p2align 0x4
L_467633:
L_214718:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_214717
.p2align 0x4
.long 0x31C4
L_214572:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214573
L_214657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214658
.p2align 0x4
.long 0x31D4
L_214658:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214573:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_214519
L_214575:
	movl %r13d,%r14d
	decl %r14d
	jo L_214504
L_214576:
	movl %r13d,0x88(%rbp)
	movq $0x3FDD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_214577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x31D5
L_214663:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214664
L_214665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_214666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214666
.p2align 0x4
.long 0x31C0
L_214666:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_214664:
	incl 0x80(%rbp)
	jmp loop_2308
.p2align 0x4
.long 0x31C4
L_214577:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214578
L_214655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214656
.p2align 0x4
.long 0x31D4
L_214656:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214578:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_214519
L_214580:
	testl %r13d,%r13d
	jz L_467639
L_214581:
	movq $0x38B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	movl %r13d,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_214582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_467639:
L_214654:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
	jmp L_214563
.p2align 0x4
.long 0x31C5
L_214582:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214583
L_214652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214653
.p2align 0x4
.long 0x31D4
L_214653:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214583:
	movq $0x3F95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_214584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x31C6
L_214584:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214585
L_214650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214651
.p2align 0x4
.long 0x31D3
L_214651:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214585:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%ebx
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_214519
L_214587:
	cmpl $0x0,%ecx
	jl L_214633
L_214588:
	movl %ebx,0x18(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2309:
	cmpl %ecx,%ebx
	jnl L_467643
L_214648:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x18(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x20(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x18(%rbp)
	incl %ebx
	jmp loop_2309
.p2align 0x4
L_467643:
L_214589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214590
L_214646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214647
.p2align 0x4
.long 0x31D2
L_214647:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214590:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_214591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x31C7
L_214591:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214592
L_214644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214645
.p2align 0x4
.long 0x31D1
L_214645:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214592:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214593
.p2align 0x4
.long 0x31C8
L_214593:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2310:
	cmpq $0x1,%r15
	jnl L_467648
L_214643:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2310
.p2align 0x4
L_467648:
L_214594:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214595
L_214641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214642
.p2align 0x4
.long 0x31D0
L_214642:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214595:
	movq 0x18(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_214596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
.long 0x31C9
L_214596:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r13
	je L_467665
L_214597:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_214598:
	incl %ecx
	jo L_214504
L_214599:
	cmpq $0x1,%r15
	je L_467651
L_214600:
	movq 0x8(%r15),%r15
	jmp L_214598
.p2align 0x4
L_467651:
L_214601:
L_214602:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_467663
L_214603:
	cmpq $0x7FFFFFFF,%rdx
	ja L_214627
L_214604:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214605
.p2align 0x4
.long 0x31CA
L_214605:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x38(%rbp)
L_214606:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2311:
	cmpq 0x30(%rbp),%r15
	jnl L_467653
L_214634:
	cmpq $0x1,%r14
	je L_214637
L_214635:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x38(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2311
.p2align 0x4
L_467653:
L_214607:
	movq 0x38(%rbp),%r15
	movq $0x18D1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	movq %r13,0x20(%rbp)
	cmpq %r14,%r13
	jne L_214519
L_214609:
	cmpl $0x0,%ecx
	jl L_214633
L_214610:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2312:
	cmpl %ecx,%ebx
	jnl L_467654
L_214631:
	movslq %ebx,%r15
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	incl %ebx
	jmp loop_2312
.p2align 0x4
L_467654:
L_214611:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214612
L_214629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214630
.p2align 0x4
.long 0x31CF
L_214630:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214612:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_467658
L_214613:
	cmpq $0x7FFFFFFF,%rdx
	ja L_214627
L_214614:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214615
.p2align 0x4
.long 0x31CB
L_214615:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x18(%rbp)
L_214616:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2313:
	cmpq 0x20(%rbp),%r15
	jnl L_467655
L_214625:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2313
.p2align 0x4
L_467655:
L_214617:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214618
L_214623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214624
.p2align 0x4
.long 0x31CE
L_214624:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214618:
	movq 0x18(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_214619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_467658:
L_214628:
	movq (globalObjptr+0x2428)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_214616
.p2align 0x4
L_467663:
L_214639:
	movq (globalObjptr+0x2420)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_214606
.p2align 0x4
L_467665:
L_214640:
	xorl %ecx,%ecx
	jmp L_214602
.p2align 0x4
.long 0x31CC
L_214619:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214620
L_214621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214622
.p2align 0x4
.long 0x31CD
L_214622:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214620:
	movq 0x18(%rbp),%r15
	jmp L_214563
.text
.p2align 0x4
.globl transformStatements_1
.hidden transformStatements_1
transformStatements_1:
L_214890:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_214891
L_215080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_215081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215081
.p2align 0x4
.long 0x460
L_215081:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_214891:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x10(%rbp)
	cmpq %r14,%r11
	je L_467667
L_214892:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467667:
L_214893:
	movq 0x10(%rbp),%rdx
	testq %rdx,%rdx
	jz L_467687
L_214894:
	cmpq $0x7FFFFFFF,%rdx
	ja L_467686
L_214895:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x155F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_214896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214896
.p2align 0x4
.long 0x45E
L_214896:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
L_214897:
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_2315:
	movq 0x20(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_467685
L_214899:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%r15),%r14
	movq 0x40(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_467683
	cmpq $0xF2F,%r15
	je L_467669
L_214900:
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je new1_46
L_214906:
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (deObject_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
new1_46:
new1_42:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_214902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214902
.p2align 0x4
.long 0x56E
L_214902:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2316:
	cmpq $0x1,%r15
	jnl L_467668
L_214905:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2316
.p2align 0x4
L_467668:
L_214903:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
.p2align 0x4,,0x7
L_214904:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	jmp loop_2315
.p2align 0x4
L_467669:
L_214930:
	movq 0x10(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_467680
	cmpq $0xF29,%r13
	je L_467675
	cmpq $0xF2A,%r13
	je L_467673
L_214931:
	cmpq $0x1,%r15
	je L_467670
L_214932:
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_214933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467670:
L_214942:
	movq 0x60(%rbp),%r14
	movq %r14,0x28(%rbp)
L_214935:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214936
L_214940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_214941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214941
.p2align 0x4
.long 0x31F4
L_214941:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_214936:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_214937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214937
.p2align 0x4
.long 0x56A
L_214937:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2318:
	cmpq $0x1,%r15
	jnl L_467671
L_214939:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2318
.p2align 0x4
L_467671:
L_214938:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_214904
.p2align 0x4
L_467673:
L_215010:
	movq 0x68(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	cmpq $0x1,%r15
	jne L_467674
.p2align 0x4,,0x7
L_214994:
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_214904
.p2align 0x4
L_467674:
L_215011:
	movq %r14,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (deObject_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467675:
L_214995:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214996
L_215008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_215009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215009
.p2align 0x4
.long 0x31FC
L_215009:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_214996:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1E53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_467676
L_214997:
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_214998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467676:
L_215007:
	movq 0x60(%rbp),%r14
	movq %r14,0x30(%rbp)
L_215000:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215001
L_215005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_215006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215006
.p2align 0x4
.long 0x1824
L_215006:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_215001:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_215002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215002
.p2align 0x4
.long 0x581
L_215002:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2322:
	cmpq $0x1,%r15
	jnl L_467677
L_215004:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2322
.p2align 0x4
L_467677:
L_215003:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_214904
.p2align 0x4
L_467680:
L_214943:
	movq 0x68(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,%r15
	je L_214994
L_214944:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_467681
L_214954:
	movq %r14,0x80(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (deObject_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467681:
L_214945:
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_214946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467683:
L_214926:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_214927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214927
.p2align 0x4
.long 0x56E
L_214927:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2317:
	cmpq $0x1,%r15
	jnl L_467684
L_214929:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2317
.p2align 0x4
L_467684:
L_214928:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_214904
.p2align 0x4
L_467685:
L_214898:
	movq 0x18(%rbp),%r14
	movq $0x1791,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp concatV_0
.p2align 0x4
L_467686:
L_215066:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467687:
L_215079:
	movq (globalObjptr+0x2390)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_214897
.p2align 0x4
.long 0x1105
deObject_7:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_214907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x31F2
L_214933:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_214934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x31FD
deObject_9:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_215012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x31F8
L_214998:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_214999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x31F5
deObject_8:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_214955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x31F2
L_214946:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_214947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x1105
L_214907:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214908
L_214924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_214925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214925
.p2align 0x4
.long 0x31F1
L_214925:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_214908:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne new1_42
L_214910:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (x_722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
.long 0x31F3
L_214934:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_214935
.p2align 0x4
.long 0x31FD
L_215012:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215013
L_215075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_215076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215076
.p2align 0x4
.long 0x3204
L_215076:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_215013:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_467690
L_215014:
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_215015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467690:
L_215023:
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r14
L_215024:
	andq $0x3,%r14
	jz L_214994
L_215025:
	movq %r15,0x70(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (fromList_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattenArgs_0
.p2align 0x4
.long 0x31F9
L_214999:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_215000
.p2align 0x4
.long 0x31F5
L_214955:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214956
L_214991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_214992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214992
.p2align 0x4
.long 0x5DA
L_214992:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_214956:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_467693
L_214957:
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_214958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467693:
L_214966:
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_214967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
.long 0x31F3
L_214947:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214948
L_214952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_214953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214953
.p2align 0x4
.long 0x31F4
L_214953:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_214948:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_214949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214949
.p2align 0x4
.long 0x56A
L_214949:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2319:
	cmpq $0x1,%r15
	jnl L_467695
L_214951:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2319
.p2align 0x4
L_467695:
L_214950:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_214904
.p2align 0x4
.long 0x12D5
x_722:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214911
L_214922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_214923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214923
.p2align 0x4
.long 0x31F0
L_214923:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_214911:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_214915
L_214912:
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r13
L_214913:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_214915
L_214920:
	movq 0x10(%r13),%r15
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
L_214915:
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_214916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectOffset_0
.p2align 0x4
.long 0x31F2
L_215015:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_215016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x182F
fromList_6:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215026
L_215072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_215073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215073
.p2align 0x4
.long 0x1831
L_215073:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_215026:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_467703
L_215027:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_215028:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_467702
L_215030:
	cmpq $0x1,%r15
	je L_467700
L_215031:
	movq 0x8(%r15),%r15
	jmp L_215028
.p2align 0x4
L_467700:
L_215032:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215033
L_215069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_215070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215070
.p2align 0x4
.long 0x3203
L_215070:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_215033:
	movl 0x40(%rbp),%ecx
L_215034:
	movl %ecx,0x70(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_215035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_467702:
L_215029:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467703:
L_215071:
	xorl %ecx,%ecx
	jmp L_215034
.p2align 0x4
.long 0x31F2
L_214958:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_214959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x31F6
L_214967:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_214968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0xCC9
L_214916:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214917
L_214918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_214919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214919
.p2align 0x4
.long 0x568
L_214919:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_214917:
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x28(%rbp)
	jmp new1_42
.p2align 0x4
.long 0x31F3
L_215016:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215017
L_215021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_215022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215022
.p2align 0x4
.long 0x31F4
L_215022:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_215017:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_215018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215018
.p2align 0x4
.long 0x56A
L_215018:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2323:
	cmpq $0x1,%r15
	jnl L_467706
L_215020:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2323
.p2align 0x4
L_467706:
L_215019:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_214904
.p2align 0x4
.long 0x182F
L_215035:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r13
	je L_467715
L_215036:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_215037:
	incl %ecx
	jo L_215029
L_215038:
	cmpq $0x1,%r15
	je L_467708
L_215039:
	movq 0x8(%r15),%r15
	jmp L_215037
.p2align 0x4
L_467708:
L_215040:
L_215041:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_467713
L_215042:
	cmpq $0x7FFFFFFF,%rdx
	ja L_215066
L_215043:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_215044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215044
.p2align 0x4
.long 0x1834
L_215044:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_215045:
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2324:
	cmpq 0x48(%rbp),%r15
	jnl L_467710
L_215062:
	cmpq $0x1,%r14
	je L_467709
L_215063:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2324
.p2align 0x4
L_467709:
L_215064:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467710:
L_215046:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215047
L_215060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215061
.p2align 0x4
.long 0x3202
L_215061:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215047:
	movq 0x60(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_215048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467713:
L_215067:
	movq (globalObjptr+0xD48)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_215045
.p2align 0x4
L_467715:
L_215068:
	xorl %ecx,%ecx
	jmp L_215041
.p2align 0x4
.long 0x31F3
L_214959:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214960
L_214964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_214965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214965
.p2align 0x4
.long 0x31F4
L_214965:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_214960:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_214961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214961
.p2align 0x4
.long 0x56A
L_214961:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2320:
	cmpq $0x1,%r15
	jnl L_467716
L_214963:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2320
.p2align 0x4
L_467716:
L_214962:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_214904
.p2align 0x4
.long 0x31F6
L_214968:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214969
L_214989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_214990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214990
.p2align 0x4
.long 0x31FB
L_214990:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_214969:
	movq 0x60(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF48,%r15
	jne L_214970
L_214984:
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r15
L_214985:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_214970
L_214986:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	cmpq %r13,0x68(%rbp)
	jne L_467718
L_214988:
	movq $0x1E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
L_214973:
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_214974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467718:
L_214970:
	movl 0x28(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_214971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectOffset_0
.p2align 0x4
.long 0x31FE
L_215048:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_215049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x31F8
L_214974:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_214975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x31F7
L_214971:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214972
L_214982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_214983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214983
.p2align 0x4
.long 0x31FA
L_214983:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_214972:
	movq $0x1E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	jmp L_214973
.p2align 0x4
.long 0x31FF
L_215049:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215050
L_215058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215059
.p2align 0x4
.long 0x3201
L_215059:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215050:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215051
.p2align 0x4
.long 0x3200
L_215051:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2325:
	cmpq $0x1,%r15
	jnl L_467723
L_215057:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2325
.p2align 0x4
L_467723:
L_215052:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215053
L_215055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215056
.p2align 0x4
.long 0x12E2
L_215056:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215053:
	movq 0x28(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_215054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
.long 0x31F9
L_214975:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_214976
L_214980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_214981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214981
.p2align 0x4
.long 0x1824
L_214981:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_214976:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_214977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_214977
.p2align 0x4
.long 0x581
L_214977:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2321:
	cmpq $0x1,%r15
	jnl L_467726
L_214979:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2321
.p2align 0x4
L_467726:
L_214978:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_214904
.p2align 0x4
.long 0x5BF
L_215054:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_214904
.text
.p2align 0x4
.globl objectOffset_0
.hidden objectOffset_0
objectOffset_0:
L_215082:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_215141
L_215083:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467738
L_215084:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_467736
L_215089:
	movq 0x0(%r14),%r15
L_215090:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_467728
L_215136:
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_215137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectOffset_0
.p2align 0x4
L_467728:
L_215091:
	xorl %ecx,%ecx
L_215092:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_467735
L_215095:
	cmpl $0x0,%r13d
	jl L_467734
L_215096:
	movl %ecx,0x30(%rbp)
	movq $0x1,0x8(%rbp)
	movl $0x0,0x34(%rbp)
loop_2326:
	movl 0x4(%rbp),%r14d
	cmpl %r14d,0x34(%rbp)
	jl L_467733
L_215097:
	movq $0xC71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_467732
L_215098:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_215099:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_467731
L_215101:
	cmpq $0x1,%r15
	je L_467729
L_215102:
	movq 0x8(%r15),%r15
	jmp L_215099
.p2align 0x4
L_467729:
L_215103:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215104
L_215114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_215115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215115
.p2align 0x4
.long 0x982
L_215115:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_215104:
	movl 0x4(%rbp),%ecx
L_215105:
	movl %ecx,0x38(%rbp)
	movq $0x3769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_215106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_467731:
L_215100:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467732:
L_215116:
	xorl %ecx,%ecx
	jmp L_215105
.p2align 0x4
L_467733:
L_215117:
	movslq 0x34(%rbp),%r15
	salq $0x4,%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_215118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_467734:
L_215135:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467735:
L_215094:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467736:
L_215086:
	movslq 0x0(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_467737
L_215088:
	movl 0x0(%r15,%r14,4),%r13d
	movl %r13d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467737:
L_215087:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467738:
L_215141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_215142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215142
.p2align 0x4
.long 0x4E9
L_215142:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_215084
.p2align 0x4
.long 0x4A7
L_215137:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215138
L_215139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_215140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215140
.p2align 0x4
.long 0x520
L_215140:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_215138:
	movl 0x4(%rbp),%ecx
	jmp L_215092
.p2align 0x4
.long 0x45A
L_215106:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215107
L_215112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_215113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215113
.p2align 0x4
.long 0x49A
L_215113:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_215107:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_215094
L_215109:
	movl %r13d,%r14d
	decl %r14d
	jo L_215100
L_215110:
	movl %r13d,0x38(%rbp)
	movq $0x376B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_215111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
.long 0xD42
L_215118:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215119
L_215133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_215134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215134
.p2align 0x4
.long 0xA2C
L_215134:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_215119:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_215120
L_215123:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r14
L_215124:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_215120
L_215125:
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	cmpq %r11,0x18(%rbp)
	jne L_467744
L_215127:
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (length_40+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectFinalComponents_0
.p2align 0x4
L_467744:
L_215120:
	movl $0x1,%ecx
L_215121:
	movl 0x30(%rbp),%r15d
	addl %r15d,%ecx
	jo L_215100
L_215122:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl %r15d,0x0(%r14)
	movl %ecx,0x30(%rbp)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	incl 0x34(%rbp)
	jmp loop_2326
.p2align 0x4
.long 0x45A
L_215111:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_215086
.p2align 0x4
.long 0xD42
length_40:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215128
L_215131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_215132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215132
.p2align 0x4
.long 0xA2C
L_215132:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_215128:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_215094
	jmp L_215121
.text
.p2align 0x4
.globl flattenArgs_0
.hidden flattenArgs_0
flattenArgs_0:
L_215143:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_215144
L_215165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_215166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215166
.p2align 0x4
.long 0x4AF
L_215166:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_215144:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_467753
L_215146:
	decl %ecx
	jo L_467752
L_215148:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
loop_2327:
	cmpl $0x0,%ecx
	jl L_467751
L_215149:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x40(%rbp)
	movslq %ecx,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq %r13,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_215150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1347
.p2align 0x4
L_467751:
L_215164:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467752:
L_215147:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467753:
L_215145:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x12F6
L_215150:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_215151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x12F6
L_215151:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215152
L_215162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_215163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215163
.p2align 0x4
.long 0xC3D
L_215163:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_215152:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_215153
L_215154:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r15
L_215155:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_215153
L_215156:
	movq 0x8(%r15),%r14
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r14)
	jne L_467755
L_215158:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (x_723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1346
.p2align 0x4
L_467755:
L_215153:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movl 0x40(%rbp),%ecx
	jmp loop_2327
.p2align 0x4
.long 0x12F5
x_723:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r14
	je L_467759
L_215159:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_215160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattenArgs_0
.p2align 0x4
L_467759:
L_215161:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_215160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattenValues_0
.p2align 0x4
.long 0x2FE4
L_215160:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x40(%rbp),%ecx
	jmp loop_2327
.text
.p2align 0x4
.globl flattenValues_0
.hidden flattenValues_0
flattenValues_0:
L_215167:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_215168
L_215197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_215198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215198
.p2align 0x4
.long 0x4AF
L_215198:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_215168:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_467762
L_215170:
	decl %r13d
	jo L_467761
L_215172:
	movl %r13d,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
loop_2328:
	movl 0x50(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_467760
L_215173:
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x54(%rbp)
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x58(%rbp)
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_215174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_467760:
L_215196:
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467761:
L_215171:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467762:
L_215169:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x713
L_215174:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215175
L_215194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215195
.p2align 0x4
.long 0x4CF
L_215195:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215175:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne newNoname_3
L_215188:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r14
L_215189:
	movq %r14,%r13
	andq $0x3,%r13
	jnz newNoname_3
L_215190:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne newNoname_12
L_215192:
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_215193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattenValues_0
.p2align 0x4
newNoname_12:
newNoname_3:
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_215176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x11EF
L_215193:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	jmp loop_2328
.p2align 0x4
.long 0x713
L_215176:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215177
L_215186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215187
.p2align 0x4
.long 0x10D7
L_215187:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215177:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x60(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_215178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectOffset_0
.p2align 0x4
.long 0x1091
L_215178:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215179
L_215184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215185
.p2align 0x4
.long 0x3205
L_215185:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215179:
	movq $0x1E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_215180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0xF50
L_215180:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215181
L_215182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_215183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215183
.p2align 0x4
.long 0x714
L_215183:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_215181:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	jmp loop_2328
.text
.p2align 0x4
.globl x_1880
.hidden x_1880
x_1880:
L_215199:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_215263
L_215200:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467782
L_215201:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq $0xCAD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_467781
L_215202:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_215203:
	incl %ecx
	jo L_467780
L_215205:
	cmpq $0x1,%r15
	je L_467768
L_215206:
	movq 0x8(%r15),%r15
	jmp L_215203
.p2align 0x4
L_467768:
L_215207:
L_215208:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_467779
L_215209:
	cmpq $0x7FFFFFFF,%rdx
	ja L_215246
L_215210:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1553,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_215211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215211
.p2align 0x4
.long 0x517
L_215211:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_215212:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2329:
	cmpq 0x40(%rbp),%r15
	jnl L_467770
L_215257:
	cmpq $0x1,%r14
	je L_467769
L_215258:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x48(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2329
.p2align 0x4
L_467769:
L_215259:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467770:
L_215213:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215214
L_215255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_215256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215256
.p2align 0x4
.long 0x704
L_215256:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_215214:
	movq 0x48(%rbp),%r15
	movq $0xCAB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r11,%r14
	je L_467771
L_215215:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467771:
L_215216:
	movq $0x436D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	cmpl $0x0,0x38(%rbp)
	jl L_467776
L_215217:
	movl $0x0,0x3C(%rbp)
loop_2330:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_467775
L_215218:
	movq 0x40(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_467774
L_215219:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_215220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215220
.p2align 0x4
.long 0x3206
L_215220:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2331:
	cmpq 0x40(%rbp),%r15
	jnl L_467772
L_215244:
	movq 0x60(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2331
.p2align 0x4
L_467772:
L_215221:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215222
L_215242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215243
.p2align 0x4
.long 0x3209
L_215243:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215222:
	movq $0xCAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_215223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_7
.p2align 0x4
L_467774:
L_215246:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467775:
L_215247:
	movslq 0x3C(%rbp),%r15
	salq $0x4,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x60(%rbp)
	movq %r10,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_215248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_467776:
L_215254:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467779:
L_215261:
	movq (globalObjptr+0x2218)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_215212
.p2align 0x4
L_467780:
L_215204:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467781:
L_215262:
	xorl %ecx,%ecx
	jmp L_215208
.p2align 0x4
L_467782:
L_215263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_215264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215264
.p2align 0x4
.long 0x460
L_215264:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_215201
.p2align 0x4
.long 0x3207
L_215223:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215224
L_215240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_215241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215241
.p2align 0x4
.long 0x3208
L_215241:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_215224:
	movl $0x0,0x3C(%rbp)
loop_2332:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_467787
L_215225:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_467786
L_215226:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_215227:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467785
.p2align 0x4,,0x7
L_215228:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_467784
L_215229:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_215227
.p2align 0x4
L_467784:
L_215231:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467785:
L_215232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_215233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215233
.p2align 0x4
.long 0x5EC
L_215233:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_215228
.p2align 0x4
L_467786:
L_215234:
	movq $0x1,%r15
	jmp L_215231
.p2align 0x4
L_467787:
L_215235:
	movslq 0x3C(%rbp),%r15
	salq $0x4,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x68(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_215236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x320A
L_215248:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215249
L_215252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_215253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215253
.p2align 0x4
.long 0x320B
L_215253:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_215249:
	movq 0x68(%rbp),%r15
	andq $0x1,%r15
	jnz L_467789
L_215250:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	incl %r14d
	movl %r14d,0x3C(%rbp)
	jmp loop_2330
.p2align 0x4
L_467789:
L_215251:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x996
L_215236:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215237
L_215238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_215239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215239
.p2align 0x4
.long 0x19BF
L_215239:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_215237:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x3C(%rbp)
	jmp loop_2332
.text
.p2align 0x4
.globl x_1878
.hidden x_1878
x_1878:
L_215265:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_215287
L_215266:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x388,%r15
	jb L_467792
L_215267:
	movq $0x43AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x5F0(%rbp)
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x360(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x618(%rbp)
	movq $0x417F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x358,%r12
	movzbl 0x38(%rbp),%r13d
	movzbl 0x118(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x38(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x40(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x48(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x50(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x58(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x60(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x68(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x70(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x78(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x80(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x88(%r14)
	movq 0x98(%rbp),%r13
	movq %r13,0x90(%r14)
	movq 0xA0(%rbp),%r13
	movq %r13,0x98(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0xA0(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0xA8(%r14)
	movq 0xB8(%rbp),%r13
	movq %r13,0xB0(%r14)
	movq 0xC0(%rbp),%r13
	movq %r13,0xB8(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0xC0(%r14)
	movq 0xD0(%rbp),%r13
	movq %r13,0xC8(%r14)
	movq 0xD8(%rbp),%r13
	movq %r13,0xD0(%r14)
	movq 0xE0(%rbp),%r13
	movq %r13,0xD8(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0xE0(%r14)
	movq 0xF0(%rbp),%r13
	movq %r13,0xE8(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0xF0(%r14)
	movq 0x100(%rbp),%r13
	movq %r13,0xF8(%r14)
	movq 0x108(%rbp),%r13
	movq %r13,0x100(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x108(%r14)
	movq 0x120(%rbp),%r13
	movq %r13,0x110(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x118(%r14)
	movq 0x130(%rbp),%r13
	movq %r13,0x120(%r14)
	movq 0x138(%rbp),%r13
	movq %r13,0x128(%r14)
	movq 0x140(%rbp),%r13
	movq %r13,0x130(%r14)
	movq 0x148(%rbp),%r13
	movq %r13,0x138(%r14)
	movq 0x150(%rbp),%r13
	movq %r13,0x140(%r14)
	movq 0x158(%rbp),%r13
	movq %r13,0x148(%r14)
	movq 0x160(%rbp),%r13
	movq %r13,0x150(%r14)
	movq 0x168(%rbp),%r13
	movq %r13,0x158(%r14)
	movq 0x170(%rbp),%r13
	movq %r13,0x160(%r14)
	movq 0x178(%rbp),%r13
	movq %r13,0x168(%r14)
	movq 0x180(%rbp),%r13
	movq %r13,0x170(%r14)
	movq 0x188(%rbp),%r13
	movq %r13,0x178(%r14)
	movq 0x190(%rbp),%r13
	movq %r13,0x180(%r14)
	movq 0x198(%rbp),%r13
	movq %r13,0x188(%r14)
	movq 0x1A0(%rbp),%r13
	movq %r13,0x190(%r14)
	movq 0x1A8(%rbp),%r13
	movq %r13,0x198(%r14)
	movq 0x1B0(%rbp),%r13
	movq %r13,0x1A0(%r14)
	movq 0x1B8(%rbp),%r13
	movq %r13,0x1A8(%r14)
	movq 0x1C0(%rbp),%r13
	movq %r13,0x1B0(%r14)
	movq 0x1C8(%rbp),%r13
	movq %r13,0x1B8(%r14)
	movq 0x1D0(%rbp),%r13
	movq %r13,0x1C0(%r14)
	movq 0x1D8(%rbp),%r13
	movq %r13,0x1C8(%r14)
	movq 0x1E0(%rbp),%r13
	movq %r13,0x1D0(%r14)
	movq 0x1E8(%rbp),%r13
	movq %r13,0x1D8(%r14)
	movq 0x1F0(%rbp),%r13
	movq %r13,0x1E0(%r14)
	movq 0x1F8(%rbp),%r13
	movq %r13,0x1E8(%r14)
	movq 0x200(%rbp),%r13
	movq %r13,0x1F0(%r14)
	movq 0x208(%rbp),%r13
	movq %r13,0x1F8(%r14)
	movq 0x210(%rbp),%r13
	movq %r13,0x200(%r14)
	movq 0x218(%rbp),%r13
	movq %r13,0x208(%r14)
	movq 0x220(%rbp),%r13
	movq %r13,0x210(%r14)
	movq 0x228(%rbp),%r13
	movq %r13,0x218(%r14)
	movq 0x230(%rbp),%r13
	movq %r13,0x220(%r14)
	movq 0x238(%rbp),%r13
	movq %r13,0x228(%r14)
	movq 0x240(%rbp),%r13
	movq %r13,0x230(%r14)
	movq 0x248(%rbp),%r13
	movq %r13,0x238(%r14)
	movq 0x250(%rbp),%r13
	movq %r13,0x240(%r14)
	movq 0x258(%rbp),%r13
	movq %r13,0x248(%r14)
	movq 0x260(%rbp),%r13
	movq %r13,0x250(%r14)
	movq 0x268(%rbp),%r13
	movq %r13,0x258(%r14)
	movq 0x270(%rbp),%r13
	movq %r13,0x260(%r14)
	movq 0x278(%rbp),%r13
	movq %r13,0x268(%r14)
	movq 0x280(%rbp),%r13
	movq %r13,0x270(%r14)
	movq 0x288(%rbp),%r13
	movq %r13,0x278(%r14)
	movq 0x290(%rbp),%r13
	movq %r13,0x280(%r14)
	movq 0x298(%rbp),%r13
	movq %r13,0x288(%r14)
	movq 0x2A0(%rbp),%r13
	movq %r13,0x290(%r14)
	movq 0x2A8(%rbp),%r13
	movq %r13,0x298(%r14)
	movq 0x2B0(%rbp),%r13
	movq %r13,0x2A0(%r14)
	movq 0x2B8(%rbp),%r13
	movq %r13,0x2A8(%r14)
	movq 0x2C0(%rbp),%r13
	movq %r13,0x2B0(%r14)
	movq 0x2C8(%rbp),%r13
	movq %r13,0x2B8(%r14)
	movq 0x2D0(%rbp),%r13
	movq %r13,0x2C0(%r14)
	movq 0x2D8(%rbp),%r13
	movq %r13,0x2C8(%r14)
	movq 0x2E0(%rbp),%r13
	movq %r13,0x2D0(%r14)
	movq 0x2E8(%rbp),%r13
	movq %r13,0x2D8(%r14)
	movq 0x2F0(%rbp),%r13
	movq %r13,0x2E0(%r14)
	movq 0x2F8(%rbp),%r13
	movq %r13,0x2E8(%r14)
	movq 0x300(%rbp),%r13
	movq %r13,0x2F0(%r14)
	movq 0x308(%rbp),%r13
	movq %r13,0x2F8(%r14)
	movq 0x310(%rbp),%r13
	movq %r13,0x300(%r14)
	movq 0x318(%rbp),%r13
	movq %r13,0x308(%r14)
	movq 0x320(%rbp),%r13
	movq %r13,0x310(%r14)
	movq 0x328(%rbp),%r13
	movq %r13,0x318(%r14)
	movq 0x330(%rbp),%r13
	movq %r13,0x320(%r14)
	movq 0x338(%rbp),%r13
	movq %r13,0x328(%r14)
	movq 0x340(%rbp),%r13
	movq %r13,0x330(%r14)
	movq 0x348(%rbp),%r13
	movq %r13,0x338(%r14)
	movq 0x350(%rbp),%r13
	movq %r13,0x340(%r14)
	movq 0x358(%rbp),%r13
	movq %r13,0x348(%r14)
	movq %r14,0x608(%rbp)
	movq $0x30C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x368(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x600(%rbp)
	movq (globalObjptr+0xD750)(%rip),%r14
	movq %r14,0x610(%rbp)
	movq (globalObjptr+0x10230)(%rip),%r14
	movq %r14,0x620(%rbp)
	movq %r15,0x628(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x630(%rbp)
	addq $0x600,%rbp
	leaq (L_215268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp passTypeCheck_2
.p2align 0x4
L_467792:
L_215287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x388,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5F8,%rbp
	leaq (L_215288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215288
.p2align 0x4
.long 0x3214
L_215288:
	addq $0xFFFFFFFFFFFFFA08,%rbp
	jmp L_215267
.p2align 0x4
.long 0x320C
L_215268:
	addq $0xFFFFFFFFFFFFFA00,%rbp
	movq 0x600(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x250,%r15
	jnb L_215269
L_215285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x250,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x600,%rbp
	leaq (L_215286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215286
.p2align 0x4
.long 0x3213
L_215286:
	addq $0xFFFFFFFFFFFFFA00,%rbp
L_215269:
	movq $0x43B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x628(%rbp)
	movq $0x3141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x360(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x618(%rbp)
	movq $0x4187,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x220,%r12
	movl 0x3D8(%rbp),%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x378(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x380(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x388(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x390(%rbp),%r10
	movq %r10,0x20(%r15)
	movq 0x398(%rbp),%r10
	movq %r10,0x28(%r15)
	movq 0x3A0(%rbp),%r10
	movq %r10,0x30(%r15)
	movq 0x3A8(%rbp),%r10
	movq %r10,0x38(%r15)
	movq 0x10(%rbp),%r10
	movq %r10,0x40(%r15)
	movq 0x3B0(%rbp),%r10
	movq %r10,0x48(%r15)
	movq 0x3B8(%rbp),%r10
	movq %r10,0x50(%r15)
	movq 0x3C0(%rbp),%r10
	movq %r10,0x58(%r15)
	movq 0x3C8(%rbp),%r10
	movq %r10,0x60(%r15)
	movq 0x3D0(%rbp),%r10
	movq %r10,0x68(%r15)
	movq 0x340(%rbp),%r10
	movq %r10,0x70(%r15)
	movq 0xA0(%rbp),%r10
	movq %r10,0x78(%r15)
	movq 0x220(%rbp),%r10
	movq %r10,0x80(%r15)
	movq 0x3E8(%rbp),%r10
	movq %r10,0x88(%r15)
	movq 0x3F0(%rbp),%r10
	movq %r10,0x90(%r15)
	movq 0x3F8(%rbp),%r10
	movq %r10,0x98(%r15)
	movq 0xE8(%rbp),%r10
	movq %r10,0xA0(%r15)
	movq 0x408(%rbp),%r10
	movq %r10,0xA8(%r15)
	movq 0x158(%rbp),%r10
	movq %r10,0xB0(%r15)
	movq 0x90(%rbp),%r10
	movq %r10,0xB8(%r15)
	movq 0x410(%rbp),%r10
	movq %r10,0xC0(%r15)
	movq 0x418(%rbp),%r10
	movq %r10,0xC8(%r15)
	movq 0x420(%rbp),%r10
	movq %r10,0xD0(%r15)
	movq 0x428(%rbp),%r10
	movq %r10,0xD8(%r15)
	movq 0x430(%rbp),%r10
	movq %r10,0xE0(%r15)
	movq 0x438(%rbp),%r10
	movq %r10,0xE8(%r15)
	movq 0x440(%rbp),%r10
	movq %r10,0xF0(%r15)
	movq 0x448(%rbp),%r10
	movq %r10,0xF8(%r15)
	movq 0x450(%rbp),%r10
	movq %r10,0x100(%r15)
	movq 0x458(%rbp),%r10
	movq %r10,0x108(%r15)
	movq 0x460(%rbp),%r10
	movq %r10,0x110(%r15)
	movq 0x468(%rbp),%r10
	movq %r10,0x118(%r15)
	movq 0x218(%rbp),%r10
	movq %r10,0x120(%r15)
	movq 0xF8(%rbp),%r10
	movq %r10,0x128(%r15)
	movq 0x58(%rbp),%r10
	movq %r10,0x130(%r15)
	movq 0x70(%rbp),%r10
	movq %r10,0x138(%r15)
	movq 0x470(%rbp),%r10
	movq %r10,0x140(%r15)
	movq 0x270(%rbp),%r10
	movq %r10,0x148(%r15)
	movq 0x138(%rbp),%r10
	movq %r10,0x150(%r15)
	movq 0x478(%rbp),%r10
	movq %r10,0x158(%r15)
	movq 0x240(%rbp),%r10
	movq %r10,0x160(%r15)
	movq 0x480(%rbp),%r10
	movq %r10,0x168(%r15)
	movq 0x178(%rbp),%r10
	movq %r10,0x170(%r15)
	movq 0x488(%rbp),%r10
	movq %r10,0x178(%r15)
	movq 0x310(%rbp),%r10
	movq %r10,0x180(%r15)
	movq 0x318(%rbp),%r10
	movq %r10,0x188(%r15)
	movq 0x320(%rbp),%r10
	movq %r10,0x190(%r15)
	movq 0x490(%rbp),%r10
	movq %r10,0x198(%r15)
	movq 0x2F0(%rbp),%r10
	movq %r10,0x1A0(%r15)
	movq 0x2F8(%rbp),%r10
	movq %r10,0x1A8(%r15)
	movq 0x498(%rbp),%r10
	movq %r10,0x1B0(%r15)
	movq 0x4A0(%rbp),%r10
	movq %r10,0x1B8(%r15)
	movq 0x100(%rbp),%r10
	movq %r10,0x1C0(%r15)
	movq 0x60(%rbp),%r10
	movq %r10,0x1C8(%r15)
	movq 0x120(%rbp),%r10
	movq %r10,0x1D0(%r15)
	movq 0x370(%rbp),%r10
	movq %r10,0x1D8(%r15)
	movq 0x368(%rbp),%r10
	movq %r10,0x1E0(%r15)
	movq 0x4A8(%rbp),%r9
	movq %r9,0x1E8(%r15)
	movq %r13,0x1F0(%r15)
	movq 0x4B0(%rbp),%r13
	movq %r13,0x1F8(%r15)
	movq %r14,0x200(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x208(%r15)
	movq 0x4B8(%rbp),%r14
	movq %r14,0x210(%r15)
	movq %r15,0x608(%rbp)
	movq $0x30A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r10,0x0(%r15)
	movq %r15,0x600(%rbp)
	movq (globalObjptr+0xD750)(%rip),%r15
	movq %r15,0x610(%rbp)
	movq (globalObjptr+0x10238)(%rip),%r15
	movq %r15,0x620(%rbp)
	movq %r11,0x630(%rbp)
	addq $0x600,%rbp
	leaq (L_215270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp passTypeCheck_3
.p2align 0x4
.long 0x320D
L_215270:
	addq $0xFFFFFFFFFFFFFA00,%rbp
	movq 0x600(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x608(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215271
L_215283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x600,%rbp
	leaq (L_215284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215284
.p2align 0x4
.long 0x3212
L_215284:
	addq $0xFFFFFFFFFFFFFA00,%rbp
L_215271:
	movq 0x4C0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_467795
L_215274:
	movq 0x4C8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r15),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xD750)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x600(%rbp)
	addq $0x18,%r12
	addq $0x600,%rbp
	leaq (L_215275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_467795:
L_215273:
	movq $0x4163,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x1F8,%r12
	movl 0x3D8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x5C8(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x4E0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x4E8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x4F0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x3E0(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x4F8(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x500(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x508(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x1F8(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x518(%rbp),%r14
	movq %r14,0x60(%r15)
	movq 0x520(%rbp),%r14
	movq %r14,0x68(%r15)
	movq 0x528(%rbp),%r14
	movq %r14,0x70(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x78(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x80(%r15)
	movq 0x538(%rbp),%r14
	movq %r14,0x88(%r15)
	movq 0x378(%rbp),%r14
	movq %r14,0x90(%r15)
	movq 0x540(%rbp),%r14
	movq %r14,0x98(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0xA0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0xA8(%r15)
	movq 0x548(%rbp),%r14
	movq %r14,0xB0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0xB8(%r15)
	movq 0x550(%rbp),%r14
	movq %r14,0xC0(%r15)
	movq 0x188(%rbp),%r14
	movq %r14,0xC8(%r15)
	movq 0x558(%rbp),%r14
	movq %r14,0xD0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0xD8(%r15)
	movq 0x2D8(%rbp),%r14
	movq %r14,0xE0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0xE8(%r15)
	movq 0x400(%rbp),%r14
	movq %r14,0xF0(%r15)
	movq 0x470(%rbp),%r14
	movq %r14,0xF8(%r15)
	movq 0x1F0(%rbp),%r14
	movq %r14,0x100(%r15)
	movq 0x220(%rbp),%r14
	movq %r14,0x108(%r15)
	movq 0x560(%rbp),%r14
	movq %r14,0x110(%r15)
	movq 0x568(%rbp),%r14
	movq %r14,0x118(%r15)
	movq 0x570(%rbp),%r14
	movq %r14,0x120(%r15)
	movq 0x578(%rbp),%r14
	movq %r14,0x128(%r15)
	movq 0x580(%rbp),%r14
	movq %r14,0x130(%r15)
	movq 0x588(%rbp),%r14
	movq %r14,0x138(%r15)
	movq 0x2D0(%rbp),%r14
	movq %r14,0x140(%r15)
	movq 0x590(%rbp),%r14
	movq %r14,0x148(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x150(%r15)
	movq 0x5A0(%rbp),%r14
	movq %r14,0x158(%r15)
	movq 0x5A8(%rbp),%r14
	movq %r14,0x160(%r15)
	movq 0x5B0(%rbp),%r14
	movq %r14,0x168(%r15)
	movq 0x2C8(%rbp),%r14
	movq %r14,0x170(%r15)
	movq 0x5B8(%rbp),%r14
	movq %r14,0x178(%r15)
	movq 0x2F0(%rbp),%r14
	movq %r14,0x180(%r15)
	movq 0x2F8(%rbp),%r14
	movq %r14,0x188(%r15)
	movq 0x310(%rbp),%r14
	movq %r14,0x190(%r15)
	movq 0x318(%rbp),%r14
	movq %r14,0x198(%r15)
	movq 0x320(%rbp),%r14
	movq %r14,0x1A0(%r15)
	movq 0x5C0(%rbp),%r14
	movq %r14,0x1A8(%r15)
	movq 0x340(%rbp),%r14
	movq %r14,0x1B0(%r15)
	movq 0x5D0(%rbp),%r14
	movq %r14,0x1B8(%r15)
	movq 0x5D8(%rbp),%r14
	movq %r14,0x1C0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x1C8(%r15)
	movq 0x388(%rbp),%r14
	movq %r14,0x1D0(%r15)
	movq 0x5E0(%rbp),%r14
	movq %r14,0x1D8(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x1E0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x1E8(%r15)
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD748)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10240)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x5E8(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp pass_1
.p2align 0x4
.long 0x320E
L_215275:
	addq $0xFFFFFFFFFFFFFA00,%rbp
	movq 0x600(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215276
L_215281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x600,%rbp
	leaq (L_215282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215282
.p2align 0x4
.long 0x3211
L_215282:
	addq $0xFFFFFFFFFFFFFA00,%rbp
L_215276:
	movq $0x31B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x5F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x5F8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq %r14,0x608(%rbp)
	movq (globalObjptr+0x1628)(%rip),%r15
	movq %r15,0x610(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x638(%rbp)
	movb $0x7,0x640(%rbp)
	addq $0x5F8,%rbp
	leaq (L_215277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1832
.p2align 0x4
.long 0x320F
L_215277:
	addq $0xFFFFFFFFFFFFFA08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215273
L_215279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5F8,%rbp
	leaq (L_215280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215280
.p2align 0x4
.long 0x3210
L_215280:
	addq $0xFFFFFFFFFFFFFA08,%rbp
	jmp L_215273
.text
.p2align 0x4
.globl passTypeCheck_2
.hidden passTypeCheck_2
passTypeCheck_2:
L_215289:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_215531
L_215290:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x380,%r15
	jb L_467816
L_215291:
	movq 0x30(%rbp),%r14
	movq 0x60(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x70(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_467799
L_215292:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_215293:
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_467799:
L_215299:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20BD,%r14
	je L_467815
	cmpq $0x20BE,%r14
	je L_467814
	cmpq $0x20BF,%r14
	je L_467813
	cmpq $0x20C0,%r14
	je L_467812
	cmpq $0x20C1,%r14
	je L_467811
	cmpq $0x20C2,%r14
	je L_467810
L_215300:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x30B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x8(%rbp)
	addq $0x20,%r12
L_215301:
	movq 0x58(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_215437
	cmpb $0x1,%r15b
	je L_467808
L_215302:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x185A,%r14
	je L_467806
	cmpq $0x185B,%r14
	je L_467805
	cmpq $0x185C,%r14
	je L_467804
	cmpq $0x185D,%r14
	je L_467803
	cmpq $0x185E,%r14
	je L_467802
	cmpq $0x185F,%r14
	je L_467801
	cmpq $0x1860,%r14
	je L_467800
L_215303:
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1867
.p2align 0x4
L_467800:
L_215435:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_0
.p2align 0x4
L_467801:
L_215434:
	movq 0x48(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0xB8,%rbp
	leaq (L_215304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
L_467802:
L_215433:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_0
.p2align 0x4
L_467803:
L_215422:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x89B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1640)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_215423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_467804:
L_215421:
	movq 0x348(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x340(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x338(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x330(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x328(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x320(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x318(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x310(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x308(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x300(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x2F8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x2F0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x2E8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x2E0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x2D8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x2D0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x2C8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x2C0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x2B8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x2B0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x2A8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x2A0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x298(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x290(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x288(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x280(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x278(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x270(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x268(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x260(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x258(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x250(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x248(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x240(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x238(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x230(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x228(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x220(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x218(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x210(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x208(%r15),%r14
	movq %r14,0x1F8(%rbp)
	movq 0x200(%r15),%r14
	movq %r14,0x200(%rbp)
	movq 0x1F8(%r15),%r14
	movq %r14,0x208(%rbp)
	movq 0x1F0(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0x1E8(%r15),%r14
	movq %r14,0x218(%rbp)
	movq 0x1E0(%r15),%r14
	movq %r14,0x220(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x228(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x230(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x248(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x2D8(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2F8(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x300(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x310(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x320(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x328(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x330(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x338(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x340(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x348(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x350(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x358(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x360(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x368(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x370(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x388(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x390(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x398(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x3A0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x3B0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x3B8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x3C0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x3D0(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x3D8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x3E0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x3E8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x3F0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x3F8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x400(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x408(%rbp)
	addq $0xB8,%rbp
	leaq (L_215304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1869
.p2align 0x4
L_467805:
L_215420:
	movq 0x90(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	addq $0xB8,%rbp
	leaq (L_215304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1870
.p2align 0x4
L_467806:
L_215405:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0xB0(%rbp)
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_467807
L_215406:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq $0x1,0xB8(%rbp)
L_215407:
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_215408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flow_0
.p2align 0x4
L_467807:
L_215419:
	movq $0x1,0x8(%rbp)
L_215412:
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_215413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flow_0
.p2align 0x4
L_467808:
L_215437:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1600)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_467810:
L_215526:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x30C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_215301
.p2align 0x4
L_467811:
L_215525:
	movq 0x48(%r15),%r14
	movq 0x40(%r15),%r13
	movq 0x38(%r15),%r11
	movq 0x30(%r15),%r10
	movq 0x28(%r15),%r9
	movq 0x20(%r15),%r8
	movq 0x18(%r15),%rsp
	movq 0x10(%r15),%rsi
	movq 0x8(%r15),%rdi
	movq 0x0(%r15),%rdx
	movq $0x30BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdx,0x0(%r15)
	movq %rdi,0x8(%r15)
	movq %rsi,0x10(%r15)
	movq %rsp,0x18(%r15)
	movq %r8,0x20(%r15)
	movq %r9,0x28(%r15)
	movq %r10,0x30(%r15)
	movq %r11,0x38(%r15)
	movq %r13,0x40(%r15)
	movq %r14,0x48(%r15)
	movq %r15,0x8(%rbp)
	addq $0x58,%r12
	jmp L_215301
.p2align 0x4
L_467812:
L_215524:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x30BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_215301
.p2align 0x4
L_467813:
L_215523:
	movq 0x348(%r15),%r14
	movq 0x340(%r15),%r13
	movq 0x338(%r15),%r11
	movq 0x330(%r15),%r10
	movq 0x328(%r15),%r9
	movq 0x320(%r15),%r8
	movq 0x318(%r15),%rsp
	movq 0x310(%r15),%rsi
	movq 0x308(%r15),%rdi
	movq 0x300(%r15),%rdx
	movq 0x2F8(%r15),%rcx
	movq 0x2F0(%r15),%rbx
	movq 0x2E8(%r15),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x2E0(%r15),%r14
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x2D8(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x2D0(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x2C8(%r15),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x2C0(%r15),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x2B8(%r15),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x2B0(%r15),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x2A8(%r15),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x2A0(%r15),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x298(%r15),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x290(%r15),%rcx
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x288(%r15),%rbx
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x280(%r15),%rax
	movq %r14,(localObjptr+0x68)(%rip)
	movq 0x278(%r15),%r14
	movq %r13,(localObjptr+0x70)(%rip)
	movq 0x270(%r15),%r13
	movq %r11,(localObjptr+0x78)(%rip)
	movq 0x268(%r15),%r11
	movq %r10,(localObjptr+0x80)(%rip)
	movq 0x260(%r15),%r10
	movq %r9,(localObjptr+0x88)(%rip)
	movq 0x258(%r15),%r9
	movq %r8,(localObjptr+0x90)(%rip)
	movq 0x250(%r15),%r8
	movq %rsp,(localObjptr+0x98)(%rip)
	movq 0x248(%r15),%rsp
	movq %rsi,(localObjptr+0xA0)(%rip)
	movq 0x240(%r15),%rsi
	movq %rdi,(localObjptr+0xA8)(%rip)
	movq 0x238(%r15),%rdi
	movq %rdx,(localObjptr+0xB0)(%rip)
	movq 0x230(%r15),%rdx
	movq %rcx,(localObjptr+0xB8)(%rip)
	movq 0x228(%r15),%rcx
	movq %rbx,(localObjptr+0xC0)(%rip)
	movq 0x220(%r15),%rbx
	movq %rax,(localObjptr+0xC8)(%rip)
	movq 0x218(%r15),%rax
	movq %r14,(localObjptr+0xD0)(%rip)
	movq 0x210(%r15),%r14
	movq %r13,(localObjptr+0xD8)(%rip)
	movq 0x208(%r15),%r13
	movq %r11,(localObjptr+0xE0)(%rip)
	movq 0x200(%r15),%r11
	movq %r10,(localObjptr+0xE8)(%rip)
	movq 0x1F8(%r15),%r10
	movq %r9,(localObjptr+0xF0)(%rip)
	movq 0x1F0(%r15),%r9
	movq %r8,(localObjptr+0xF8)(%rip)
	movq 0x1E8(%r15),%r8
	movq %rsp,(localObjptr+0x100)(%rip)
	movq 0x1E0(%r15),%rsp
	movq %rsi,(localObjptr+0x108)(%rip)
	movq 0x1D8(%r15),%rsi
	movq %rdi,(localObjptr+0x110)(%rip)
	movq 0x1D0(%r15),%rdi
	movq %rdx,(localObjptr+0x118)(%rip)
	movq 0x1C8(%r15),%rdx
	movq %rcx,(localObjptr+0x120)(%rip)
	movq 0x1C0(%r15),%rcx
	movq %rbx,(localObjptr+0x128)(%rip)
	movq 0x1B8(%r15),%rbx
	movq %rax,(localObjptr+0x130)(%rip)
	movq 0x1B0(%r15),%rax
	movq %r14,(localObjptr+0x138)(%rip)
	movq 0x1A8(%r15),%r14
	movq %r13,(localObjptr+0x140)(%rip)
	movq 0x1A0(%r15),%r13
	movq %r11,(localObjptr+0x148)(%rip)
	movq 0x198(%r15),%r11
	movq %r10,(localObjptr+0x150)(%rip)
	movq 0x190(%r15),%r10
	movq %r9,(localObjptr+0x158)(%rip)
	movq 0x188(%r15),%r9
	movq %r8,(localObjptr+0x160)(%rip)
	movq 0x180(%r15),%r8
	movq %rsp,(localObjptr+0x168)(%rip)
	movq 0x178(%r15),%rsp
	movq %rsi,(localObjptr+0x170)(%rip)
	movq 0x170(%r15),%rsi
	movq %rdi,(localObjptr+0x178)(%rip)
	movq 0x168(%r15),%rdi
	movq %rdx,(localObjptr+0x180)(%rip)
	movq 0x160(%r15),%rdx
	movq %rcx,(localObjptr+0x188)(%rip)
	movq 0x158(%r15),%rcx
	movq %rbx,(localObjptr+0x190)(%rip)
	movq 0x150(%r15),%rbx
	movq %rax,(localObjptr+0x198)(%rip)
	movq 0x148(%r15),%rax
	movq %r14,(localObjptr+0x1A0)(%rip)
	movq 0x140(%r15),%r14
	movq %r13,(localObjptr+0x1A8)(%rip)
	movq 0x138(%r15),%r13
	movq %r11,(localObjptr+0x1B0)(%rip)
	movq 0x130(%r15),%r11
	movq %r10,(localObjptr+0x1B8)(%rip)
	movq 0x128(%r15),%r10
	movq %r9,(localObjptr+0x1C0)(%rip)
	movq 0x120(%r15),%r9
	movq %r8,(localObjptr+0x1C8)(%rip)
	movq 0x118(%r15),%r8
	movq %rsp,(localObjptr+0x1D0)(%rip)
	movq 0x110(%r15),%rsp
	movq %rsi,(localObjptr+0x1D8)(%rip)
	movb 0x1(%r15),%sil
	movb %sil,(localWord8+0x0)(%rip)
	movq 0x108(%r15),%rsi
	movq %rdi,(localObjptr+0x1E0)(%rip)
	movq 0x100(%r15),%rdi
	movq %rdx,(localObjptr+0x1E8)(%rip)
	movq 0xF8(%r15),%rdx
	movq %rcx,(localObjptr+0x1F0)(%rip)
	movq 0xF0(%r15),%rcx
	movq %rbx,(localObjptr+0x1F8)(%rip)
	movq 0xE8(%r15),%rbx
	movq %rax,(localObjptr+0x200)(%rip)
	movq 0xE0(%r15),%rax
	movq %r14,(localObjptr+0x208)(%rip)
	movq 0xD8(%r15),%r14
	movq %r13,(localObjptr+0x210)(%rip)
	movq 0xD0(%r15),%r13
	movq %r11,(localObjptr+0x218)(%rip)
	movq 0xC8(%r15),%r11
	movq %r10,(localObjptr+0x220)(%rip)
	movq 0xC0(%r15),%r10
	movq %r9,(localObjptr+0x228)(%rip)
	movq 0xB8(%r15),%r9
	movq %r8,(localObjptr+0x230)(%rip)
	movq 0xB0(%r15),%r8
	movq %rsp,(localObjptr+0x238)(%rip)
	movq 0xA8(%r15),%rsp
	movq %rsi,(localObjptr+0x240)(%rip)
	movq 0xA0(%r15),%rsi
	movq %rdi,(localObjptr+0x248)(%rip)
	movq 0x98(%r15),%rdi
	movq %rdx,(localObjptr+0x250)(%rip)
	movq 0x90(%r15),%rdx
	movq %rcx,(localObjptr+0x258)(%rip)
	movq 0x88(%r15),%rcx
	movq %rbx,(localObjptr+0x260)(%rip)
	movq 0x80(%r15),%rbx
	movq %rax,(localObjptr+0x268)(%rip)
	movq 0x78(%r15),%rax
	movq %r14,(localObjptr+0x270)(%rip)
	movq 0x70(%r15),%r14
	movq %r13,(localObjptr+0x278)(%rip)
	movq 0x68(%r15),%r13
	movq %r11,(localObjptr+0x280)(%rip)
	movq 0x60(%r15),%r11
	movq %r10,(localObjptr+0x288)(%rip)
	movq 0x58(%r15),%r10
	movq %r9,(localObjptr+0x290)(%rip)
	movq 0x50(%r15),%r9
	movq %r8,(localObjptr+0x298)(%rip)
	movq 0x48(%r15),%r8
	movq %rsp,(localObjptr+0x2A0)(%rip)
	movq 0x40(%r15),%rsp
	movq %rsi,(localObjptr+0x2A8)(%rip)
	movq 0x38(%r15),%rsi
	movq %rdi,(localObjptr+0x2B0)(%rip)
	movb 0x0(%r15),%dil
	movb %dil,(localWord8+0x1)(%rip)
	movq 0x30(%r15),%rdi
	movq %rdx,(localObjptr+0x2B8)(%rip)
	movq 0x28(%r15),%rdx
	movq %rcx,(localObjptr+0x2C0)(%rip)
	movq 0x20(%r15),%rcx
	movq %rbx,(localObjptr+0x2C8)(%rip)
	movq 0x18(%r15),%rbx
	movq %rax,(localObjptr+0x2D0)(%rip)
	movq 0x10(%r15),%rax
	movq %r14,(localObjptr+0x2D8)(%rip)
	movq 0x8(%r15),%r14
	movq $0x30B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %rax,0x10(%r15)
	movq %rbx,0x18(%r15)
	movq %rcx,0x20(%r15)
	movq %rdx,0x28(%r15)
	movq %rdi,0x30(%r15)
	movq %rsi,0x38(%r15)
	movq %rsp,0x40(%r15)
	movq %r8,0x48(%r15)
	movq %r9,0x50(%r15)
	movq %r10,0x58(%r15)
	movq %r11,0x60(%r15)
	movq %r13,0x68(%r15)
	movq (localObjptr+0x2D8)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x2D0)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x2C8)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x2C0)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x2B8)(%rip),%r14
	movq %r14,0x90(%r15)
	movq (localObjptr+0x2B0)(%rip),%r14
	movq %r14,0x98(%r15)
	movq (localObjptr+0x2A8)(%rip),%r14
	movq %r14,0xA0(%r15)
	movq (localObjptr+0x2A0)(%rip),%r14
	movq %r14,0xA8(%r15)
	movq (localObjptr+0x298)(%rip),%r14
	movq %r14,0xB0(%r15)
	movq (localObjptr+0x290)(%rip),%r14
	movq %r14,0xB8(%r15)
	movq (localObjptr+0x288)(%rip),%r14
	movq %r14,0xC0(%r15)
	movq (localObjptr+0x280)(%rip),%r14
	movq %r14,0xC8(%r15)
	movq (localObjptr+0x278)(%rip),%r14
	movq %r14,0xD0(%r15)
	movq (localObjptr+0x270)(%rip),%r14
	movq %r14,0xD8(%r15)
	movq (localObjptr+0x268)(%rip),%r14
	movq %r14,0xE0(%r15)
	movq (localObjptr+0x260)(%rip),%r14
	movq %r14,0xE8(%r15)
	movq (localObjptr+0x258)(%rip),%r14
	movq %r14,0xF0(%r15)
	movq (localObjptr+0x250)(%rip),%r14
	movq %r14,0xF8(%r15)
	movq (localObjptr+0x248)(%rip),%r14
	movq %r14,0x100(%r15)
	movq (localObjptr+0x240)(%rip),%r14
	movq %r14,0x108(%r15)
	movq (localObjptr+0x238)(%rip),%r14
	movq %r14,0x110(%r15)
	movq (localObjptr+0x230)(%rip),%r14
	movq %r14,0x118(%r15)
	movq (localObjptr+0x228)(%rip),%r14
	movq %r14,0x120(%r15)
	movq (localObjptr+0x220)(%rip),%r14
	movq %r14,0x128(%r15)
	movq (localObjptr+0x218)(%rip),%r14
	movq %r14,0x130(%r15)
	movq (localObjptr+0x210)(%rip),%r14
	movq %r14,0x138(%r15)
	movq (localObjptr+0x208)(%rip),%r14
	movq %r14,0x140(%r15)
	movq (localObjptr+0x200)(%rip),%r14
	movq %r14,0x148(%r15)
	movq (localObjptr+0x1F8)(%rip),%r14
	movq %r14,0x150(%r15)
	movq (localObjptr+0x1F0)(%rip),%r14
	movq %r14,0x158(%r15)
	movq (localObjptr+0x1E8)(%rip),%r14
	movq %r14,0x160(%r15)
	movq (localObjptr+0x1E0)(%rip),%r14
	movq %r14,0x168(%r15)
	movq (localObjptr+0x1D8)(%rip),%r14
	movq %r14,0x170(%r15)
	movq (localObjptr+0x1D0)(%rip),%r14
	movq %r14,0x178(%r15)
	movq (localObjptr+0x1C8)(%rip),%r14
	movq %r14,0x180(%r15)
	movq (localObjptr+0x1C0)(%rip),%r14
	movq %r14,0x188(%r15)
	movq (localObjptr+0x1B8)(%rip),%r14
	movq %r14,0x190(%r15)
	movq (localObjptr+0x1B0)(%rip),%r14
	movq %r14,0x198(%r15)
	movq (localObjptr+0x1A8)(%rip),%r14
	movq %r14,0x1A0(%r15)
	movq (localObjptr+0x1A0)(%rip),%r14
	movq %r14,0x1A8(%r15)
	movq (localObjptr+0x198)(%rip),%r14
	movq %r14,0x1B0(%r15)
	movq (localObjptr+0x190)(%rip),%r14
	movq %r14,0x1B8(%r15)
	movq (localObjptr+0x188)(%rip),%r14
	movq %r14,0x1C0(%r15)
	movq (localObjptr+0x180)(%rip),%r14
	movq %r14,0x1C8(%r15)
	movq (localObjptr+0x178)(%rip),%r14
	movq %r14,0x1D0(%r15)
	movq (localObjptr+0x170)(%rip),%r14
	movq %r14,0x1D8(%r15)
	movq (localObjptr+0x168)(%rip),%r14
	movq %r14,0x1E0(%r15)
	movq (localObjptr+0x160)(%rip),%r14
	movq %r14,0x1E8(%r15)
	movq (localObjptr+0x158)(%rip),%r14
	movq %r14,0x1F0(%r15)
	movq (localObjptr+0x150)(%rip),%r14
	movq %r14,0x1F8(%r15)
	movq (localObjptr+0x148)(%rip),%r14
	movq %r14,0x200(%r15)
	movq (localObjptr+0x140)(%rip),%r14
	movq %r14,0x208(%r15)
	movq (localObjptr+0x138)(%rip),%r14
	movq %r14,0x210(%r15)
	movq (localObjptr+0x130)(%rip),%r14
	movq %r14,0x218(%r15)
	movq (localObjptr+0x128)(%rip),%r14
	movq %r14,0x220(%r15)
	movq (localObjptr+0x120)(%rip),%r14
	movq %r14,0x228(%r15)
	movq (localObjptr+0x118)(%rip),%r14
	movq %r14,0x230(%r15)
	movq (localObjptr+0x110)(%rip),%r14
	movq %r14,0x238(%r15)
	movq (localObjptr+0x108)(%rip),%r14
	movq %r14,0x240(%r15)
	movq (localObjptr+0x100)(%rip),%r14
	movq %r14,0x248(%r15)
	movq (localObjptr+0xF8)(%rip),%r14
	movq %r14,0x250(%r15)
	movq (localObjptr+0xF0)(%rip),%r14
	movq %r14,0x258(%r15)
	movq (localObjptr+0xE8)(%rip),%r14
	movq %r14,0x260(%r15)
	movq (localObjptr+0xE0)(%rip),%r14
	movq %r14,0x268(%r15)
	movq (localObjptr+0xD8)(%rip),%r14
	movq %r14,0x270(%r15)
	movq (localObjptr+0xD0)(%rip),%r14
	movq %r14,0x278(%r15)
	movq (localObjptr+0xC8)(%rip),%r14
	movq %r14,0x280(%r15)
	movq (localObjptr+0xC0)(%rip),%r14
	movq %r14,0x288(%r15)
	movq (localObjptr+0xB8)(%rip),%r14
	movq %r14,0x290(%r15)
	movq (localObjptr+0xB0)(%rip),%r14
	movq %r14,0x298(%r15)
	movq (localObjptr+0xA8)(%rip),%r14
	movq %r14,0x2A0(%r15)
	movq (localObjptr+0xA0)(%rip),%r14
	movq %r14,0x2A8(%r15)
	movq (localObjptr+0x98)(%rip),%r14
	movq %r14,0x2B0(%r15)
	movq (localObjptr+0x90)(%rip),%r14
	movq %r14,0x2B8(%r15)
	movq (localObjptr+0x88)(%rip),%r14
	movq %r14,0x2C0(%r15)
	movq (localObjptr+0x80)(%rip),%r14
	movq %r14,0x2C8(%r15)
	movq (localObjptr+0x78)(%rip),%r14
	movq %r14,0x2D0(%r15)
	movq (localObjptr+0x70)(%rip),%r14
	movq %r14,0x2D8(%r15)
	movq (localObjptr+0x68)(%rip),%r14
	movq %r14,0x2E0(%r15)
	movq (localObjptr+0x60)(%rip),%r14
	movq %r14,0x2E8(%r15)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0x2F0(%r15)
	movq (localObjptr+0x50)(%rip),%r14
	movq %r14,0x2F8(%r15)
	movq (localObjptr+0x48)(%rip),%r14
	movq %r14,0x300(%r15)
	movq (localObjptr+0x40)(%rip),%r14
	movq %r14,0x308(%r15)
	movq (localObjptr+0x38)(%rip),%r14
	movq %r14,0x310(%r15)
	movq (localObjptr+0x30)(%rip),%r14
	movq %r14,0x318(%r15)
	movq (localObjptr+0x28)(%rip),%r14
	movq %r14,0x320(%r15)
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0x328(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0x330(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0x338(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x340(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0x348(%r15)
	addq $0x358,%r12
	movzbl (localWord8+0x1)(%rip),%r14d
	movzbl (localWord8+0x0)(%rip),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x8(%rbp)
	jmp L_215301
.p2align 0x4
L_467814:
L_215522:
	movq 0x90(%r15),%r14
	movq 0x88(%r15),%r13
	movq 0x80(%r15),%r11
	movq 0x78(%r15),%r10
	movq 0x70(%r15),%r9
	movq 0x68(%r15),%r8
	movq 0x60(%r15),%rsp
	movq 0x58(%r15),%rsi
	movq 0x50(%r15),%rdi
	movq 0x48(%r15),%rdx
	movq 0x40(%r15),%rcx
	movq 0x38(%r15),%rbx
	movq 0x30(%r15),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x28(%r15),%r14
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x20(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x18(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x10(%r15),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x8(%r15),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x0(%r15),%r8
	movq $0x30B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq %rax,0x30(%r15)
	movq %rbx,0x38(%r15)
	movq %rcx,0x40(%r15)
	movq %rdx,0x48(%r15)
	movq %rdi,0x50(%r15)
	movq %rsi,0x58(%r15)
	movq %rsp,0x60(%r15)
	movq (localObjptr+0x28)(%rip),%r14
	movq %r14,0x68(%r15)
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0x90(%r15)
	movq %r15,0x8(%rbp)
	addq $0xA0,%r12
	jmp L_215301
.p2align 0x4
L_467815:
L_215521:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x30B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_215301
.p2align 0x4
L_467816:
L_215531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x380,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_215532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215532
.p2align 0x4
.long 0xC06
L_215532:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_215291
.p2align 0x4
.long 0x3215
L_215294:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x380,%r15
	jnb L_215295
L_215528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x380,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_215529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215529
.p2align 0x4
.long 0x3240
L_215529:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_215295:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_467819
L_215296:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_215299
L_215297:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_215293
.p2align 0x4
L_467819:
L_215527:
	movq $0x30BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	jmp L_215301
.p2align 0x4
.long 0x3216
L_215304:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215306
L_215403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215404
.p2align 0x4
.long 0x322D
L_215404:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215306:
	movq $0x3121,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3232
L_215423:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215424
L_215431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_215432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215432
.p2align 0x4
.long 0x3235
L_215432:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_215424:
	movq $0x4137,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movb $0x4,0xC8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_215425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x322E
L_215408:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215409
L_215417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_215418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215418
.p2align 0x4
.long 0x3231
L_215418:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_215409:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_467823
L_215410:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_215407
.p2align 0x4
L_467823:
L_215411:
	movq %r15,0x8(%rbp)
	jmp L_215412
.p2align 0x4
.long 0x322F
L_215413:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215414
L_215415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_215416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215416
.p2align 0x4
.long 0x3230
L_215416:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_215414:
	movq $0x77F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	jmp L_215306
.p2align 0x4
.long 0x3217
L_215438:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215439
L_215518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215519
.p2align 0x4
.long 0x323F
L_215519:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215439:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x1,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3217
L_215307:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215308
L_215401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215402
.p2align 0x4
.long 0x322D
L_215402:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215308:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_467827
L_215310:
	movl %r14d,0x0(%r15)
	movq $0x310F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_467827:
L_215309:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3233
L_215425:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215426
L_215429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_215430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215430
.p2align 0x4
.long 0x3234
L_215430:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_215426:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_467829
L_215427:
	movq %r14,0x8(%rbp)
	jmp L_215306
.p2align 0x4
L_467829:
L_215428:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3217
L_215440:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x3218
L_215311:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215312
L_215399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215400
.p2align 0x4
.long 0x322C
L_215400:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215312:
	movq $0x3123,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3217
L_215441:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215442
L_215516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215517
.p2align 0x4
.long 0x323E
L_215517:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215442:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_215309
L_215443:
	movl %r14d,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x185A,%r14
	je L_467838
	cmpq $0x185B,%r14
	je L_467837
	cmpq $0x185C,%r14
	je L_467836
	cmpq $0x185D,%r14
	je L_467835
	cmpq $0x185E,%r14
	je L_467834
	cmpq $0x185F,%r14
	je L_467833
	cmpq $0x1860,%r14
	je L_467832
L_215444:
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_215445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1867
.p2align 0x4
L_467832:
L_215515:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_215445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_0
.p2align 0x4
L_467833:
L_215514:
	movq 0x48(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_215445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
L_467834:
L_215513:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_215445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_0
.p2align 0x4
L_467835:
L_215505:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq $0x89B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1640)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xD0,%rbp
	leaq (L_215506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_467836:
L_215504:
	movq 0x348(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x340(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x338(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x330(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x328(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x320(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x318(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x310(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x308(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x300(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x2F8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x2F0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x2E8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x2E0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x2D8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x2D0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x2C8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x2C0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x2B8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x2B0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x2A8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x2A0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x298(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x290(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x288(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x280(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x278(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x270(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x268(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x260(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x258(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x250(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x248(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x240(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x238(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x230(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x228(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x220(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x218(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x210(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x208(%r15),%r14
	movq %r14,0x1F8(%rbp)
	movq 0x200(%r15),%r14
	movq %r14,0x200(%rbp)
	movq 0x1F8(%r15),%r14
	movq %r14,0x208(%rbp)
	movq 0x1F0(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0x1E8(%r15),%r14
	movq %r14,0x218(%rbp)
	movq 0x1E0(%r15),%r14
	movq %r14,0x220(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x228(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x230(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x248(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x2D8(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2F8(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x300(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x310(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x320(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x328(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x330(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x338(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x340(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x348(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x350(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x358(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x360(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x368(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x370(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x388(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x390(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x398(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x3A0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x3B0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x3B8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x3C0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x3D0(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x3D8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x3E0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x3E8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x3F0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x3F8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x400(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x408(%rbp)
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_215445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1869
.p2align 0x4
L_467837:
L_215503:
	movq 0x90(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_215445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1870
.p2align 0x4
L_467838:
L_215488:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xB8(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_467839
L_215489:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq $0x1,0xC8(%rbp)
L_215490:
	movq %r15,0xD8(%rbp)
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_215491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flow_0
.p2align 0x4
L_467839:
L_215502:
	movq $0x1,0x8(%rbp)
L_215495:
	leaq L_215483(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_215496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flow_0
.p2align 0x4
.long 0x3219
L_215313:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215314
L_215397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215398
.p2align 0x4
.long 0x322B
L_215398:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215314:
	movq $0x3113,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3236
L_215445:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%rbp)
L_215446:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_467843
L_215471:
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_467843:
L_215447:
	movq $0x3,0x28(%rbp)
L_215448:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_215309
L_215449:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0xA20
L_215483:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_215448
.p2align 0x4
.long 0x29A2
L_215506:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215507
L_215511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_215512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215512
.p2align 0x4
.long 0x29A4
L_215512:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_215507:
	movq $0x4137,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movb $0x4,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_215508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x3239
L_215491:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215492
L_215500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_215501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215501
.p2align 0x4
.long 0x323C
L_215501:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_215492:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_467846
L_215493:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_215490
.p2align 0x4
L_467846:
L_215494:
	movq %r15,0x8(%rbp)
	jmp L_215495
.p2align 0x4
.long 0x323A
L_215496:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215497
L_215498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_215499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215499
.p2align 0x4
.long 0x323B
L_215499:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_215497:
	movq $0x77F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0xC0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	jmp L_215446
.p2align 0x4
.long 0x321A
L_215315:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215316
L_215395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215396
.p2align 0x4
.long 0x322A
L_215396:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215316:
	movq $0x311D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3237
L_215472:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2999
L_215450:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x323D
L_215508:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_467850
L_215509:
	movq %r14,0x8(%rbp)
	jmp L_215446
.p2align 0x4
L_467850:
L_215510:
	movq $0x9,0x28(%rbp)
	jmp L_215448
.p2align 0x4
.long 0x321B
L_215317:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215318
L_215393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215394
.p2align 0x4
.long 0x3229
L_215394:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215318:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_215309
L_215319:
	movl %r14d,0x0(%r15)
	movq (globalObjptr+0x1608)(%rip),%r15
	cmpl $0x0,0x0(%r15)
	jg L_467851
L_215320:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (L_215321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeSaveToFile_0
.p2align 0x4
L_467851:
L_215389:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1620)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xFC58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (fail_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3215
L_215473:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_215474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x299A
L_215451:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x321C
L_215321:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xA8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_467854
L_215322:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467854:
L_215323:
	movq 0x58(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_215334
	cmpb $0x1,%r15b
	je L_467861
L_215324:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1862,%r14
	je L_467860
	cmpq $0x1863,%r14
	je L_467859
	cmpq $0x1864,%r14
	je L_467858
	cmpq $0x1865,%r14
	je L_467857
	cmpq $0x1866,%r14
	je L_467856
	cmpq $0x1867,%r14
	je L_467855
L_215325:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_215326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467855:
L_215332:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_215326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467856:
L_215331:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_215326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467857:
L_215330:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_215326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467858:
L_215329:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_215326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467859:
L_215328:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_215326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467860:
L_215327:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_215326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467861:
L_215334:
	movq (globalObjptr+0x1648)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x298D
fail_5:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215390
L_215391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_215392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215392
.p2align 0x4
.long 0x478
L_215392:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_215390:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x29A0
L_215474:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x299B
L_215452:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_215453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x2985
L_215326:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x321D
L_215335:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215336
L_215386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_215387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215387
.p2align 0x4
.long 0x3228
L_215387:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_215336:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movb $0x1,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3237
L_215475:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215476
L_215486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215487
.p2align 0x4
.long 0x3238
L_215487:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215476:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x299C
L_215453:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215454
L_215469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215470
.p2align 0x4
.long 0x299D
L_215470:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215454:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_215455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x321D
L_215337:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x3237
L_215477:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215478
L_215484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215485
.p2align 0x4
.long 0x3238
L_215485:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_215478:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x1,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_215479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x299C
L_215455:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215456
L_215467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215468
.p2align 0x4
.long 0x299D
L_215468:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215456:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x1,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_215457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x321D
L_215338:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_215309
L_215339:
	movl %r14d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1862,%r14
	je L_467874
	cmpq $0x1863,%r14
	je L_467873
	cmpq $0x1864,%r14
	je L_467872
	cmpq $0x1865,%r14
	je L_467871
	cmpq $0x1866,%r14
	je L_467870
	cmpq $0x1867,%r14
	je L_467869
L_215340:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_215375(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467869:
L_215385:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_215375(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467870:
L_215384:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_215375(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467871:
L_215383:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_215375(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467872:
L_215382:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_215375(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467873:
L_215381:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_215375(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
L_467874:
L_215380:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_215375(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_2
.p2align 0x4
.long 0x3237
L_215479:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215306
L_215481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_215482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215482
.p2align 0x4
.long 0x322D
L_215482:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_215306
.p2align 0x4
.long 0x299C
L_215457:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_215458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x321E
L_215341:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_467877
L_215366:
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_467877:
L_215342:
	movq $0x3,0x20(%rbp)
L_215343:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_215309
L_215344:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0xA20
L_215375:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_215343
.p2align 0x4
.long 0x299C
L_215458:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215459
L_215465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215466
.p2align 0x4
.long 0x299D
L_215466:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215459:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_215460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x321E
L_215367:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x321F
L_215345:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x927
L_215460:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215461
L_215463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215464
.p2align 0x4
.long 0x928
L_215464:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215461:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_215462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3225
L_215368:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x3220
L_215346:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x90C
L_215462:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3226
L_215369:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x3221
L_215347:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_215348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x321E
L_215370:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215371
L_215378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_215379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215379
.p2align 0x4
.long 0x3227
L_215379:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_215371:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_215372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3222
L_215348:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215349
L_215364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215365
.p2align 0x4
.long 0x3224
L_215365:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215349:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_215350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x321E
L_215372:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215373
L_215376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_215377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215377
.p2align 0x4
.long 0x3227
L_215377:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_215373:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movb $0x1,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_215374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3222
L_215350:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215351
L_215362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215363
.p2align 0x4
.long 0x3224
L_215363:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215351:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x1,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_215352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x321E
L_215374:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3222
L_215352:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_215353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x3222
L_215353:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215354
L_215360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215361
.p2align 0x4
.long 0x3224
L_215361:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215354:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_215355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3222
L_215355:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215356
L_215358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215359
.p2align 0x4
.long 0x3224
L_215359:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215356:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_215357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x3223
L_215357:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1867
.hidden x_1867
x_1867:
L_215533:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_215590
L_215534:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467899
L_215535:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movq $0x949,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r15
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_215536:
	incl %ecx
	jo L_467898
L_215538:
	cmpq $0x1,%r15
	je L_467887
L_215539:
	movq 0x8(%r15),%r15
	jmp L_215536
.p2align 0x4
L_467887:
L_215540:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_467897
L_215541:
	cmpq $0x7FFFFFFF,%rdx
	ja L_215574
L_215542:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_215543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215543
.p2align 0x4
.long 0x3241
L_215543:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_215544:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2333:
	cmpq 0x40(%rbp),%r15
	jnl L_467889
L_215585:
	cmpq $0x1,%r14
	je L_467888
L_215586:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq %r15,%r8
	movq %r15,%rsp
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r14
	movq 0x0(%rsi),%rdi
	movq 0x8(%rsi),%rdx
	movq 0x10(%rsi),%rcx
	movq 0x18(%rsi),%rbx
	movq 0x20(%rsi),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x28(%rsi),%r14
	movq 0x48(%rbp),%rsi
	movq %r12,(gcState+0x0)(%rip)
	movq %rsi,%r12
	shrq $0x8,%r12
	movq %r15,(localWord64+0x68)(%rip)
	movq (gcState+0x3C8)(%rip),%r15
	movb $0x1,0x0(%r15,%r12,1)
	imulq $0x30,%r13
	movq %rdi,0x0(%rsi,%r13,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%r11
	movq %rdx,0x8(%rsi,%r11,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%r10
	movq %rcx,0x10(%rsi,%r10,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%r9
	movq %rbx,0x18(%rsi,%r9,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%r8
	movq %rax,0x20(%rsi,%r8,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%rsp
	movq %rsp,%rax
	movq %r14,0x28(%rsi,%rax,1)
	movq (localWord64+0x68)(%rip),%r15
	incq %r15
	movq (gcState+0x0)(%rip),%r12
	movq (localObjptr+0x0)(%rip),%r14
	jmp loop_2333
.p2align 0x4
L_467888:
L_215587:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467889:
L_215545:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215546
L_215583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_215584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215584
.p2align 0x4
.long 0x1148
L_215584:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_215546:
	movq 0x48(%rbp),%r15
	movq $0xCCB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	movq %r11,0x38(%rbp)
	cmpq %r14,%r11
	je L_467890
L_215547:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467890:
L_215548:
	movq $0x4361,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	cmpl $0x0,0x24(%rbp)
	jl L_467894
L_215549:
	movl $0x0,0x58(%rbp)
loop_2334:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x58(%rbp)
	jl L_467893
L_215550:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_467892
L_215551:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_215552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215552
.p2align 0x4
.long 0x3242
L_215552:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2335:
	cmpq 0x38(%rbp),%r15
	jnl L_467891
L_215572:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2335
.p2align 0x4
L_467891:
L_215553:
	movq %r14,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x58,%rbp
	leaq (L_215554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_12
.p2align 0x4
L_467892:
L_215574:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467893:
L_215575:
	movslq 0x58(%rbp),%r15
	imulq $0x30,%r15
	movq 0x48(%rbp),%r14
	movq 0x18(%r14,%r15,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq %r11,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_215576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_467894:
L_215582:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467897:
L_215589:
	movq (globalObjptr+0x74E8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_215544
.p2align 0x4
L_467898:
L_215537:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467899:
L_215590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_215591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215591
.p2align 0x4
.long 0x45C
L_215591:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_215535
.p2align 0x4
.long 0x3243
L_215554:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215555
L_215570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_215571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215571
.p2align 0x4
.long 0x289B
L_215571:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_215555:
	movl $0x0,0x30(%rbp)
loop_2336:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x30(%rbp)
	jl L_467904
L_215556:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_467903
L_215557:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_215558:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467902
.p2align 0x4,,0x7
L_215559:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_467901
L_215560:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_215558
.p2align 0x4
L_467901:
L_215561:
	movq $0x77F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467902:
L_215562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_215563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215563
.p2align 0x4
.long 0x606
L_215563:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_215559
.p2align 0x4
L_467903:
L_215564:
	movq (globalObjptr+0x74F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467904:
L_215565:
	movslq 0x30(%rbp),%r15
	imulq $0x30,%r15
	movq 0x48(%rbp),%r14
	movq 0x18(%r14,%r15,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x60(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_215566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x3245
L_215576:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215577
L_215580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_215581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215581
.p2align 0x4
.long 0x3246
L_215581:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_215577:
	movq 0x68(%rbp),%r15
	andq $0x1,%r15
	jnz L_467906
L_215578:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	incl %r14d
	movl %r14d,0x58(%rbp)
	jmp loop_2334
.p2align 0x4
L_467906:
L_215579:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC4E
L_215566:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215567
L_215568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_215569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215569
.p2align 0x4
.long 0x3244
L_215569:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_215567:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x30(%rbp)
	jmp loop_2336
.text
.p2align 0x4
.globl maybeSaveToFile_0
.hidden maybeSaveToFile_0
maybeSaveToFile_0:
L_215592:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_215593
L_215614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_215615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215615
.p2align 0x4
.long 0x4AF
L_215615:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_215593:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_467909
L_215594:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_215595:
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_215596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_467909:
L_215601:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE43
L_215596:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215597
L_215611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_215612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215612
.p2align 0x4
.long 0x1010
L_215612:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_215597:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_467912
L_215598:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_215601
L_215599:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_215595
.p2align 0x4
L_467912:
L_215602:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_215603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x457
L_215603:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215604
L_215609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_215610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215610
.p2align 0x4
.long 0xFFC
L_215610:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_215604:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_215605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3247
L_215605:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215606
L_215607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_215608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215608
.p2align 0x4
.long 0x3248
L_215608:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_215606:
	movq $0x31B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x1628)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb $0x7,0x48(%rbp)
	jmp x_1832
.text
.p2align 0x4
.globl typeCheck_2
.hidden typeCheck_2
typeCheck_2:
L_215616:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_215782
L_215617:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467920
L_215618:
	movq 0x8(%rbp),%r15
	movq 0x108(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x138(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x148(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_467919
L_215621:
	cmpl $0x0,%r13d
	jl L_467918
L_215622:
	movl $0x0,0x14C(%rbp)
loop_2337:
	movl 0x148(%rbp),%r14d
	cmpl %r14d,0x14C(%rbp)
	jl L_467917
L_215623:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0xD67,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq 0x38(%rbp),%r13
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x38(%r13),%r8
	movq 0x8(%r8),%rsp
	movq $0x3D5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq $0xC9F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x148(%rbp)
	movq %r13,0x8(%r8)
	addq $0x30,%r12
	movq %rsp,0x0(%r8)
	movq %r15,0x10(%r8)
	movq %r10,0x18(%r8)
	movq %r9,0x20(%r8)
	movq $0x3D5B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0xC9F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x150(%rbp)
	movq %rsp,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r10,0x18(%r14)
	movq %r9,0x20(%r14)
	addq $0x30,%r12
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0xD67,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x158(%rbp)
	movq %r14,0x0(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq %r11,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0xD67,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x160(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0xCFD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0xD69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_467916
L_215624:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_215625:
	movq 0x18(%r15),%r14
	movq %r14,0x188(%rbp)
	leaq L_215711(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x180(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_215626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_467916:
L_215629:
	leaq L_215711(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x180(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x180,%rbp
	leaq (L_215630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopFunc_0
.p2align 0x4
L_467917:
L_215776:
	movslq 0x14C(%rbp),%r15
	movq 0x130(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq $0x3081,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq $0x3061,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	leaq L_215711(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10250)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x158,%rbp
	leaq (L_215777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
L_467918:
L_215781:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467919:
L_215620:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467920:
L_215782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_215783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215783
.p2align 0x4
.long 0x45D
L_215783:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_215618
.p2align 0x4
.long 0x3249
L_215626:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_215629
L_215627:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_215625
.p2align 0x4
.long 0x25
L_215711:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
L_215712:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_215713
L_215714:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xCCD,%r14
	jne L_467923
L_215715:
	movq 0x0(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x138,%rbp
	leaq (L_215716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_52
.p2align 0x4
L_467923:
L_215713:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x324A
L_215630:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_467925
L_215631:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_215632:
	movq %r15,0x188(%rbp)
	movl $0x0,0x180(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x180,%rbp
	leaq (L_215633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopFunc_0
.p2align 0x4
L_467925:
L_215636:
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_467926
L_215637:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
L_215638:
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_215639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_467926:
L_215643:
	movq 0x138(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r11)
	movq $0x1,0x150(%rbp)
	movq %r14,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_215644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x3268
L_215777:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215778
L_215779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_215780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215780
.p2align 0x4
.long 0x3269
L_215780:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_215778:
	incl 0x14C(%rbp)
	jmp loop_2337
.p2align 0x4
.long 0x325A
L_215716:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x140(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215717
L_215720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_215721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215721
.p2align 0x4
.long 0x325B
L_215721:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_215717:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x140(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_215718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x324B
L_215633:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_215636
L_215634:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_215632
.p2align 0x4
.long 0x324C
L_215639:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq $0x2,0x150(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_215640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x324E
L_215644:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq $0x2,0x150(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_215645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x325A
L_215718:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_215719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x324D
L_215640:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_215643
L_215641:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_215638
.p2align 0x4
.long 0x324E
L_215645:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215646
L_215771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_215772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215772
.p2align 0x4
.long 0x3267
L_215772:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_215646:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x150(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x158(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x8DB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x160(%rbp)
	movq %r11,0x8(%r10)
	addq $0x30,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0x58(%rbp),%r9
	movq %r9,0x10(%r10)
	movq 0x50(%rbp),%r8
	movq %r8,0x18(%r10)
	movq 0x48(%rbp),%rsp
	movq %rsp,0x20(%r10)
	movq $0xD6B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x28(%r10)
	addq $0x78,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r10)
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%r10)
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%r10)
	movq %r13,0x20(%r10)
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%r10)
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%r10)
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%r10)
	movq 0x130(%rbp),%r15
	movq %r15,0x48(%r10)
	movq 0x78(%rbp),%r13
	movq %r13,0x50(%r10)
	movq 0x70(%rbp),%r13
	movq %r13,0x58(%r10)
	movq 0x68(%rbp),%rsi
	movq %rsi,0x60(%r10)
	movq 0x60(%rbp),%rsi
	movq %rsi,0x68(%r10)
	movq $0xD6D,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x168(%rbp)
	movq %r10,0x8(%rdi)
	addq $0x30,%r12
	movq %r11,0x0(%rdi)
	movq %r9,0x10(%rdi)
	movq %r8,0x18(%rdi)
	movq %rsp,0x20(%rdi)
	movq $0xD6F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x170(%rbp)
	addq $0x60,%r12
	movq 0xE0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq 0xD0(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%r11)
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,0x40(%r11)
	movq %rsi,0x48(%r11)
	movq %rdi,0x50(%r11)
	movq 0x140(%rbp),%r15
	cmpq $0x1,%r15
	je L_215668
L_215647:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
.p2align 0x4,,0x7
L_215648:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467944
.p2align 0x4,,0x7
L_215649:
	movq 0x70(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_467943
L_215651:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_467942
L_215652:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_215654:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_215655
L_215760:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD6D,%r13
	jne L_215655
L_215761:
	movq 0x158(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_467937
L_215655:
	incl %ecx
	movl %ecx,0x80(%rbp)
	jo L_467936
L_215657:
	cmpq $0x1,%r15
	je L_467931
L_215658:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_215654
.p2align 0x4
L_467931:
L_215659:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467935
.p2align 0x4,,0x7
L_215660:
	movl 0x80(%rbp),%ecx
L_215661:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_467934
L_215663:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_215665
L_215757:
	movl %ecx,0x0(%r15)
L_215665:
	movq $0x1ADB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_467932
L_215666:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_215648
.p2align 0x4
L_467932:
L_215668:
	movq 0x138(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x330F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x180(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_467934:
L_215662:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467935:
L_215758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215759
.p2align 0x4
.long 0x3265
L_215759:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	jmp L_215660
.p2align 0x4
L_467936:
L_215656:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467937:
L_215763:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_215662
L_215764:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_467938
L_215766:
	movl %ecx,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467938:
L_215765:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x530)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467942:
L_215767:
	xorl %ecx,%ecx
	jmp L_215661
.p2align 0x4
L_467943:
L_215650:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467944:
L_215768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215769
.p2align 0x4
.long 0x3266
L_215769:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	jmp L_215649
.p2align 0x4
.long 0x474
L_215719:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0x51B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x324F
L_215669:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215670
L_215755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215756
.p2align 0x4
.long 0x3264
L_215756:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_215670:
	movq $0x342D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x20,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x180(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3250
L_215671:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq $0x1,0x180(%rbp)
	movl $0x0,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x3250
L_215672:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_103
.p2align 0x4
.long 0x3251
L_215673:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215674
L_215753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215754
.p2align 0x4
.long 0x3263
L_215754:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_215674:
	movq 0x68(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movl %r13d,%r15d
	movl %r15d,0xA8(%rbp)
	movslq %r15d,%r11
	cmpq %r11,%r13
	jne L_215620
L_215676:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_215620
L_215678:
	cmpl %r15d,%r11d
	jne L_215680
L_215742:
	movl $0x0,0x68(%rbp)
loop_2339:
	movl 0x68(%rbp),%r15d
	cmpl 0xA8(%rbp),%r15d
	je L_467949
L_215743:
	movslq %r15d,%r14
	cmpq 0xA0(%rbp),%r14
	jnb L_467948
L_215745:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x188(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x180(%rbp)
	addq $0x180,%rbp
	leaq (not_48+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1583
.p2align 0x4
L_467948:
L_215728:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467949:
L_215680:
	movq $0xD71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x78,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xE8(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x168(%rbp),%r13
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x78(%rbp),%r11
	movq %r11,0x38(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x40(%r15)
	movq 0x158(%rbp),%r11
	movq %r11,0x48(%r15)
	movq 0xE0(%rbp),%r11
	movq %r11,0x50(%r15)
	movq 0x60(%rbp),%r11
	movq %r11,0x58(%r15)
	movq %r14,0x60(%r15)
	movq %r13,0x68(%r15)
	movq $0xD73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x60,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x108(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x170(%rbp),%r13
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x48(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x50(%r14)
	movq $0x340F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3261
not_48:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215746
L_215750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215751
.p2align 0x4
.long 0x3262
L_215751:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_215746:
	movl 0x6C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_215680
L_215748:
	movl 0x68(%rbp),%r15d
	incl %r15d
	jo L_215656
L_215749:
	movl %r15d,0x68(%rbp)
	jmp loop_2339
.p2align 0x4
.long 0x3252
L_215681:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215682
L_215740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215741
.p2align 0x4
.long 0x3260
L_215741:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_215682:
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_467957
L_215683:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_215684:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_215685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_467957:
L_215700:
	movq $0x3087,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x158(%rbp)
	movq $0x3067,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x118(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x120(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x150(%rbp)
	movq (globalObjptr+0x10248)(%rip),%r15
	movq %r15,0x160(%rbp)
	addq $0x150,%rbp
	leaq (L_215701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
.long 0x3253
L_215685:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3256
L_215701:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_467959
L_215702:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_215703:
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_215704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_467959:
L_215708:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0x138(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_215709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x3253
L_215686:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq $0x1,0x180(%rbp)
	movl $0x0,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x3257
L_215704:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq $0x2,0x138(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_215705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3259
L_215709:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq $0x2,0x138(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_215710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3253
L_215687:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_103
.p2align 0x4
.long 0x3258
L_215705:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_215708
L_215706:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_215703
.p2align 0x4
.long 0x325A
L_215710:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3254
L_215688:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215689
L_215737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215738
.p2align 0x4
.long 0x325F
L_215738:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_215689:
	movq 0x70(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0xB0(%rbp)
	movl %r13d,%r15d
	movl %r15d,0xB8(%rbp)
	movslq %r15d,%r11
	cmpq %r13,%r11
	jne L_215620
L_215691:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_215620
L_215693:
	cmpl %r11d,%r15d
	jne L_215695
L_215725:
	movl $0x0,0x70(%rbp)
loop_2338:
	movl 0x70(%rbp),%r15d
	cmpl 0xB8(%rbp),%r15d
	je L_467962
L_215726:
	movslq %r15d,%r14
	cmpq 0xB0(%rbp),%r14
	jnb L_215728
L_215729:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x188(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x180(%rbp)
	addq $0x180,%rbp
	leaq (not_47+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1583
.p2align 0x4
L_467962:
L_215695:
	movq $0xD71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x78,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xE8(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x168(%rbp),%r13
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq 0x78(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x90(%rbp),%r11
	movq %r11,0x38(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x40(%r15)
	movq 0x158(%rbp),%r11
	movq %r11,0x48(%r15)
	movq 0xE0(%rbp),%r11
	movq %r11,0x50(%r15)
	movq 0x60(%rbp),%r11
	movq %r11,0x58(%r15)
	movq %r14,0x60(%r15)
	movq %r13,0x68(%r15)
	movq $0xD73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x60,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x108(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x170(%rbp),%r13
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x48(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x50(%r14)
	movq $0x340F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_215696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x325D
not_47:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215730
L_215734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215735
.p2align 0x4
.long 0x325E
L_215735:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_215730:
	movl 0x74(%rbp),%r15d
	testl %r15d,%r15d
	jz L_215695
L_215732:
	movl 0x70(%rbp),%r15d
	incl %r15d
	jo L_215656
L_215733:
	movl %r15d,0x70(%rbp)
	jmp loop_2338
.p2align 0x4
.long 0x3255
L_215696:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215697
L_215723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_215724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215724
.p2align 0x4
.long 0x325C
L_215724:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_215697:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_215700
L_215698:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_215684
.text
.p2align 0x4
.globl loopFunc_0
.hidden loopFunc_0
loopFunc_0:
L_215784:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_215925
L_215785:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_467972
L_215786:
	movq $0xDA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x38,%r12
	movl 0x0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x48(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0x50(%rbp),%r11
	movq %r11,0x20(%r15)
	movq 0x58(%rbp),%r11
	movq %r11,0x28(%r15)
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0x70(%rbp)
	movq $0x3313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x80(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_467972:
L_215925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_215926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215926
.p2align 0x4
.long 0x9E4
L_215926:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_215786
.p2align 0x4
.long 0x326A
L_215787:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215788
L_215923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215924
.p2align 0x4
.long 0x3276
L_215924:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215788:
	movq $0x3415,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x326B
L_215789:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215790
L_215921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215922
.p2align 0x4
.long 0x3275
L_215922:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215790:
	movq $0x3429,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x326C
L_215791:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215792
L_215919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215920
.p2align 0x4
.long 0x3274
L_215920:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215792:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC93,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3413,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x27B9
L_215793:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215794
L_215917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215918
.p2align 0x4
.long 0x3273
L_215918:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215794:
	movq $0x342B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x27B9
L_215795:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x326D
L_215796:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215797
L_215915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215916
.p2align 0x4
.long 0x11F0
L_215916:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215797:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_467978
L_215798:
	movq %r15,0x8(%rbp)
L_215799:
	movq 0x8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dominators_0
.p2align 0x4
L_467978:
L_215914:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x1947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	movq %r11,0x8(%rbp)
	jmp L_215799
.p2align 0x4
.long 0x326E
L_215800:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215801
L_215912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215913
.p2align 0x4
.long 0x3272
L_215913:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215801:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_467980
L_215802:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_215803:
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_20
.p2align 0x4
L_467980:
L_215875:
	movq 0x8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_215876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_3
.p2align 0x4
.long 0x1027
L_215804:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215805
L_215909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215910
.p2align 0x4
.long 0x2354
L_215910:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215805:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_468010
	cmpq $0x2,%r13
	je L_468008
L_215806:
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_215807
L_215808:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_468006
L_215809:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x4(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_215811:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_215812
L_215892:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD6C,%r13
	jne L_215812
L_215893:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_468000
L_215812:
	movl 0x4(%rbp),%r13d
	incl %r13d
	movl %r13d,0x50(%rbp)
	jo L_215813
L_215814:
	cmpq $0x1,%r15
	je L_467982
L_215815:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x4(%rbp)
	jmp L_215811
.p2align 0x4
L_467982:
L_215816:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215817
L_215890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215891
.p2align 0x4
.long 0x1F94
L_215891:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215817:
	movl 0x50(%rbp),%ecx
L_215818:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_215819
L_215820:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_215822
L_215889:
	movl %ecx,0x0(%r15)
L_215822:
	movq $0x927,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_467995
L_215823:
	movq %r15,0x0(%r13)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_467994
L_215824:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x4(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_215826:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_215827
L_215864:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB5,%r13
	jne L_215827
L_215865:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x40(%rbp)
	je L_467987
L_215827:
	movl 0x4(%rbp),%r13d
	incl %r13d
	jo L_467986
L_215828:
	cmpq $0x1,%r15
	je L_467983
L_215829:
	movl %r13d,0x4(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_215826
.p2align 0x4
L_467983:
	movl %r13d,%ecx
L_215831:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_467985
L_215832:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_215834
L_215863:
	movl %ecx,0x0(%r15)
L_215834:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_215835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_467985:
L_215819:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467986:
L_215813:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_467987:
L_215867:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215868
L_215886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_215887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215887
.p2align 0x4
.long 0xC1B
L_215887:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_215868:
	movl 0x4(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_215819
L_215869:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_467989
L_215870:
	movq 0x78(%rbp),%r15
L_215871:
	movq $0x134D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1AD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_215872:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_215875
L_215873:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_215803
.p2align 0x4
L_467989:
L_215885:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_215871
.p2align 0x4
L_467994:
L_215888:
	xorl %ecx,%ecx
	jmp L_215831
.p2align 0x4
L_467995:
L_215807:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468000:
L_215895:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215896
L_215900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215901
.p2align 0x4
.long 0x2354
L_215901:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215896:
	movl 0x4(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_215819
L_215897:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_468001
L_215898:
	movq 0x50(%rbp),%r15
	jmp L_215872
.p2align 0x4
L_468001:
L_215899:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_215872
.p2align 0x4
L_468006:
L_215902:
	xorl %ecx,%ecx
	jmp L_215818
.p2align 0x4
L_468008:
L_215906:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_215875
L_215907:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_215803
.p2align 0x4
L_468010:
L_215903:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_215875
L_215904:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_215803
.p2align 0x4
.long 0x326F
L_215876:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x80(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x80,%rbp
	leaq (L_215877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3915
.p2align 0x4
.long 0x1
L_215835:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_215836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1E04
L_215877:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215878
L_215883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215884
.p2align 0x4
.long 0x1DEE
L_215884:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215878:
	movq $0x3411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_215879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x4B0
L_215836:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_215837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3270
L_215879:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215880
L_215881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_215882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215882
.p2align 0x4
.long 0x3271
L_215882:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_215880:
	movq $0x3319,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x5B0
L_215837:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_215838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_215838:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215839
L_215861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_215862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215862
.p2align 0x4
.long 0x4AF
L_215862:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_215839:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_215840:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_215813
L_215841:
	cmpq $0x1,%r14
	je L_468015
L_215842:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_215840
.p2align 0x4
L_468015:
L_215843:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215844
L_215859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_215860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215860
.p2align 0x4
.long 0x4E7
L_215860:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_215844:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468016
L_215845:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_330:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468016:
L_215858:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_330
.p2align 0x4
.long 0x1
rev_328:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468022
L_215846:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_215847:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468021
.p2align 0x4,,0x7
L_215848:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468020
L_215849:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_215847
.p2align 0x4
L_468020:
L_215851:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468021:
L_215855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_215856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215856
.p2align 0x4
.long 0x45C
L_215856:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_215848
.p2align 0x4
L_468022:
L_215857:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_215851
.p2align 0x4
.long 0x1
bug_529:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215852
L_215853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_215854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215854
.p2align 0x4
.long 0x452
L_215854:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_215852:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl treeAt_3
.hidden treeAt_3
treeAt_3:
L_215927:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_216041
L_215928:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468058
L_215929:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_215930
L_215931:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_468056
L_215932:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_215934:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_215935
L_216030:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD6C,%r13
	jne L_215935
L_216031:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_468050
L_215935:
	movl 0x20(%rbp),%r13d
	incl %r13d
	movl %r13d,0x24(%rbp)
	jo L_215936
L_215937:
	cmpq $0x1,%r15
	je L_468024
L_215938:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x20(%rbp)
	jmp L_215934
.p2align 0x4
L_468024:
L_215939:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215940
L_216028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_216029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216029
.p2align 0x4
.long 0x4E2
L_216029:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_215940:
	movl 0x24(%rbp),%ecx
L_215941:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_215942
L_215943:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_215945
L_216027:
	movl %ecx,0x0(%r15)
L_215945:
	movq $0x927,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_468045
L_215946:
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_468044
L_215947:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x28(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_215949:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_215950
L_215987:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB5,%r13
	jne L_215950
L_215988:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_468029
L_215950:
	movl 0x28(%rbp),%r13d
	incl %r13d
	jo L_468028
L_215951:
	cmpq $0x1,%r15
	je L_468025
L_215952:
	movl %r13d,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_215949
.p2align 0x4
L_468025:
	movl %r13d,%ecx
L_215954:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_468027
L_215955:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_215957
L_215986:
	movl %ecx,0x0(%r15)
L_215957:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_215958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468027:
L_215942:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468028:
L_215936:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468029:
L_215990:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215991
L_216024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_216025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216025
.p2align 0x4
.long 0xA2B
L_216025:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_215991:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_215942
L_215992:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_468039
L_215993:
	movq 0x30(%rbp),%r15
L_215994:
	movq $0x134D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1AD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_215995:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r13
	je L_468038
L_215996:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_215997:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_215936
L_215998:
	cmpq $0x1,%r15
	je L_468030
L_215999:
	movq 0x8(%r15),%r15
	jmp L_215997
.p2align 0x4
L_468030:
L_216000:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216001
L_216020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216021
.p2align 0x4
.long 0x765
L_216021:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_216001:
	movl 0x28(%rbp),%ecx
L_216002:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	testq %r15,%r15
	jz L_468035
L_216003:
	cmpq $0x7FFFFFFF,%r15
	ja L_468034
L_216004:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216005
L_216016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216017
.p2align 0x4
.long 0x765
L_216017:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_216005:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15F5,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216006
.p2align 0x4
.long 0x765
L_216006:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_216007:
	movq 0x20(%rbp),%r15
	movq $0x0,0x20(%rbp)
loop_2340:
	movq 0x28(%rbp),%r14
	cmpq %r14,0x20(%rbp)
	jnl L_468032
L_216009:
	cmpq $0x1,%r15
	je L_468031
L_216010:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_216011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_3
.p2align 0x4
L_468031:
L_216015:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468032:
L_216008:
	movq 0x30(%rbp),%r15
	movq $0x2F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x533F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468034:
L_216018:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468035:
L_216019:
	movq (globalObjptr+0x51A8)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_216007
.p2align 0x4
L_468038:
L_216022:
	xorl %ecx,%ecx
	jmp L_216002
.p2align 0x4
L_468039:
L_216023:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_215994
.p2align 0x4
L_468044:
L_216026:
	xorl %ecx,%ecx
	jmp L_215954
.p2align 0x4
L_468045:
L_215930:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468050:
L_216033:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216034
L_216038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216039
.p2align 0x4
.long 0x464
L_216039:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_216034:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_215942
L_216035:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_468051
L_216036:
	movq 0x28(%rbp),%r15
	jmp L_215995
.p2align 0x4
L_468051:
L_216037:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_215995
.p2align 0x4
L_468056:
L_216040:
	xorl %ecx,%ecx
	jmp L_215941
.p2align 0x4
L_468058:
L_216041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_216042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216042
.p2align 0x4
.long 0x45C
L_216042:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_215929
.p2align 0x4
.long 0x1
L_215958:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_215959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB2C
L_216011:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216012
L_216013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216014
.p2align 0x4
.long 0x2941
L_216014:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216012:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x20(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	movq 0x38(%rbp),%r15
	jmp loop_2340
.p2align 0x4
.long 0x4B0
L_215959:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_215960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_215960:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_215961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_215961:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215962
L_215984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_215985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215985
.p2align 0x4
.long 0x4AF
L_215985:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_215962:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_215963:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_215936
L_215964:
	cmpq $0x1,%r14
	je L_468061
L_215965:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_215963
.p2align 0x4
L_468061:
L_215966:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215967
L_215982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_215983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215983
.p2align 0x4
.long 0x4E7
L_215983:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_215967:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468062
L_215968:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_331:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468062:
L_215981:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_331
.p2align 0x4
.long 0x1
rev_329:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468068
L_215969:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_215970:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468067
.p2align 0x4,,0x7
L_215971:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468066
L_215972:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_215970
.p2align 0x4
L_468066:
L_215974:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468067:
L_215978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_215979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215979
.p2align 0x4
.long 0x45C
L_215979:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_215971
.p2align 0x4
L_468068:
L_215980:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_215974
.p2align 0x4
.long 0x1
bug_530:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_215975
L_215976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_215977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_215977
.p2align 0x4
.long 0x452
L_215977:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_215975:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3915
.hidden loop_3915
loop_3915:
L_216043:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_216082
L_216044:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468070
L_216045:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x40(%rbp)
	movq $0x3317,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq %r13,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_216046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_468070:
L_216082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_216083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216083
.p2align 0x4
.long 0x65A
L_216083:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_216045
.p2align 0x4
.long 0x8BB
L_216046:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216047
L_216080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216081
.p2align 0x4
.long 0x86F
L_216081:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216047:
	movq $0x32AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_216048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x8BB
L_216048:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216049
L_216078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216079
.p2align 0x4
.long 0x86F
L_216079:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216049:
	movq $0x2A51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq $0x9,0x8(%r14)
	movq $0xA,0x10(%r14)
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_216050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x8BB
L_216050:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216051
L_216076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216077
.p2align 0x4
.long 0x86F
L_216077:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216051:
	movq $0x2A2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7,0x0(%r14)
	movq $0x5,0x8(%r14)
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_216052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x8BB
L_216052:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216053
L_216074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216075
.p2align 0x4
.long 0x86F
L_216075:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216053:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_468075
L_216054:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468075:
L_216055:
	cmpl $0x0,0xC(%rbp)
	jl L_468078
L_216056:
	movl $0x0,0x48(%rbp)
loop_2341:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x48(%rbp)
	jl L_468077
L_216057:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_468076
L_216058:
	movq $0x32B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_216059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
L_468076:
L_216067:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468077:
L_216068:
	movslq 0x48(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_216069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3915
.p2align 0x4
L_468078:
L_216073:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3277
L_216059:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216060
L_216065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216066
.p2align 0x4
.long 0x3279
L_216066:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216060:
	movq $0x2A33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x11,0x0(%r14)
	movq $0xA,0x8(%r14)
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_216061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x327A
L_216069:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216070
L_216071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_216072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216072
.p2align 0x4
.long 0x125F
L_216072:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_216070:
	incl 0x48(%rbp)
	jmp loop_2341
.p2align 0x4
.long 0x18AF
L_216061:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216062
L_216063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_216064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216064
.p2align 0x4
.long 0x3278
L_216064:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_216062:
	movq $0x3311,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreach_6
.text
.p2align 0x4
.globl layout_52
.hidden layout_52
layout_52:
L_216084:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_216117
L_216085:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468084
L_216086:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_468083
L_216087:
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_216088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_52
.p2align 0x4
L_468083:
L_216116:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_216090:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10258)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_216091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468084:
L_216117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_216118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216118
.p2align 0x4
.long 0x452
L_216118:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_216086
.p2align 0x4
.long 0x4E6
L_216088:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216089
L_216114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_216115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216115
.p2align 0x4
.long 0x4E2
L_216115:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_216089:
	movq 0x18(%rbp),%r15
	movl 0x20(%rbp),%ecx
	jmp L_216090
.p2align 0x4
.long 0x51A
L_216091:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_216092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_216092:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216093
L_216112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_216113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216113
.p2align 0x4
.long 0x51D
L_216113:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_216093:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_216094:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_468090
L_216096:
	cmpq $0x1,%r14
	je L_468087
L_216097:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_216094
.p2align 0x4
L_468087:
L_216098:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216099
L_216110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_216111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216111
.p2align 0x4
.long 0x608
L_216111:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_216099:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468088
L_216100:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_216101:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_216102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_468088:
L_216109:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_216101
.p2align 0x4
L_468090:
L_216095:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_216102:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216103
L_216107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_216108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216108
.p2align 0x4
.long 0x495
L_216108:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_216103:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_468093
L_216104:
	decl %r15d
	jo L_216095
L_216105:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468093:
L_216106:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl flow_0
.hidden flow_0
flow_0:
L_216119:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_216120
L_216231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_216232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216232
.p2align 0x4
.long 0x460
L_216232:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_216120:
	movq 0x8(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r15
	jne L_468102
L_216122:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2342:
	cmpl %ebx,%ecx
	je L_468101
L_216123:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_468100
L_216125:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0x109D,%r14
	jne L_216126
L_216129:
	movq 0x10(%r10),%r14
L_216130:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_216126
L_216131:
	movq 0x8(%r14),%r13
L_216132:
	andq $0x3,%r13
	jz L_468096
L_216126:
	incl %ebx
	jo L_468095
L_216128:
	jmp loop_2342
.p2align 0x4
L_468095:
L_216127:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468096:
L_216133:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216134
L_216228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_216229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216229
.p2align 0x4
.long 0x282B
L_216229:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_216134:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3437,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x30,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_216135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468100:
L_216124:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468101:
L_216230:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468102:
L_216121:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x327B
L_216135:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x38(%rbp),%rdx
	testq %rdx,%rdx
	jz L_468106
L_216136:
	cmpq $0x7FFFFFFF,%rdx
	ja L_468105
L_216137:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_216138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216138
.p2align 0x4
.long 0x2AA5
L_216138:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x10(%rbp)
L_216139:
	movq $0x0,0x18(%rbp)
loop_2343:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x18(%rbp)
	jl L_468104
L_216140:
	movq 0x10(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_216141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_468104:
L_216165:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x78(%rbp)
	movq 0x20(%r13),%r10
	movq %r10,0x80(%rbp)
	movq %r11,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_216166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_468105:
L_216226:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468106:
L_216227:
	movq (globalObjptr+0x51C8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_216139
.p2align 0x4
.long 0x327C
L_216141:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216142
L_216163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_216164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216164
.p2align 0x4
.long 0x3285
L_216164:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_216142:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_216143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216143
.p2align 0x4
.long 0x327D
L_216143:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2344:
	cmpq $0x1,%r15
	jnl L_468107
L_216162:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2344
.p2align 0x4
L_468107:
L_216144:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216145
L_216160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_216161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216161
.p2align 0x4
.long 0x3284
L_216161:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_216145:
	movq 0x18(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x30,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x28(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_216146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216146
.p2align 0x4
.long 0x327E
L_216146:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2345:
	cmpq $0x1,%r15
	jnl L_468108
L_216159:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2345
.p2align 0x4
L_468108:
L_216147:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216148
L_216157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_216158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216158
.p2align 0x4
.long 0x3283
L_216158:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_216148:
	movq 0x18(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_216149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_7
.p2align 0x4
.long 0x3286
L_216166:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216167
L_216224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_216225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216225
.p2align 0x4
.long 0x3289
L_216225:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_216167:
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109A,%r15
	je L_216175
	cmpq $0x109B,%r15
	je L_216175
	cmpq $0x109D,%r15
	je L_468112
L_216168:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
L_216169:
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_216170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
L_468112:
L_216187:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_216175
	cmpq $0x2,%r14
	je L_468128
L_216188:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,%r15
	je L_468127
	cmpq $0x2,%r15
	je L_468122
L_216189:
	movq 0x0(%r13),%r14
	movq 0x0(%r14),%r11
L_216190:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_216191
L_216217:
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r11)
	jne L_468117
L_216219:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x88(%rbp)
L_216196:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movw 0x0(%r13),%r11w
	movw %r11w,%r14w
	andw $0x3,%r14w
	cmpw $0x2,%r14w
	jne L_216197
L_216209:
	shrw $0x2,%r11w
	movb %r11b,%r14b
	cmpb $0x1,%r14b
	jne L_468113
L_216211:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
L_216201:
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_216202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
L_468113:
L_216197:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_216198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216198
.p2align 0x4
.long 0x3289
L_216198:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2348:
	cmpq $0x1,%r15
	jnl L_468114
L_216208:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x3,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2348
.p2align 0x4
L_468114:
L_216199:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216200
L_216206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_216207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216207
.p2align 0x4
.long 0x328B
L_216207:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_216200:
	movq 0x90(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_216201
.p2align 0x4
L_468117:
L_216191:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216192
L_216215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_216216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216216
.p2align 0x4
.long 0x328B
L_216216:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_216192:
	movq $0x2121,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_216193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216193
.p2align 0x4
.long 0x328A
L_216193:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2347:
	cmpq $0x1,%r15
	jnl L_468118
L_216214:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2347
.p2align 0x4
L_468118:
L_216194:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216195
L_216212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_216213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216213
.p2align 0x4
.long 0x328B
L_216213:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_216195:
	movq 0x88(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_216196
.p2align 0x4
L_468122:
L_216175:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movw 0x0(%r13),%r11w
	movw %r11w,%r14w
	andw $0x3,%r14w
	cmpw $0x2,%r14w
	jne L_216176
L_216183:
	shrw $0x2,%r11w
	movb %r11b,%r14b
	testb %r14b,%r14b
	jnz L_468123
L_216185:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_216169
.p2align 0x4
L_468123:
L_216176:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_216177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216177
.p2align 0x4
.long 0x3288
L_216177:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2346:
	cmpq $0x1,%r15
	jnl L_468124
L_216182:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2346
.p2align 0x4
L_468124:
L_216178:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216179
L_216180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_216181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216181
.p2align 0x4
.long 0x3289
L_216181:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_216179:
	movq 0x88(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_216169
.p2align 0x4
L_468127:
L_216220:
	movq (globalObjptr+0xF08)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	xchgq %r14,%r15
	jmp L_216169
.p2align 0x4
L_468128:
L_216223:
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_216169
.p2align 0x4
.long 0x327F
L_216149:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216150
L_216155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_216156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216156
.p2align 0x4
.long 0x3282
L_216156:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_216150:
	movq $0x3405,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_216151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3287
L_216170:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216171
L_216172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_216173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216173
.p2align 0x4
.long 0x3288
L_216173:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_216171:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_2343
.p2align 0x4
.long 0x3286
L_216202:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216203
L_216204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_216205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216205
.p2align 0x4
.long 0x3289
L_216205:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_216203:
	movq 0x88(%rbp),%r15
	jmp L_216169
.p2align 0x4
.long 0x3280
L_216151:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_216152
L_216153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_216154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_216154
.p2align 0x4
.long 0x3281
L_216154:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_216152:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
