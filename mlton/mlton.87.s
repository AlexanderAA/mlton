/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:37 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl check_2
.hidden check_2
check_2:
L_261036:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_261051
L_261037:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486630
L_261038:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_486629
L_261039:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_486628
L_261040:
	movq 0x8(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5068)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10628)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
L_261041:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_261042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_486628:
L_261049:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5070)(%rip),%r14
	movq %r14,0x8(%r15)
	jmp L_261041
.p2align 0x4
L_486629:
L_261050:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486630:
L_261051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261052
.p2align 0x4
.long 0x4AF
L_261052:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_261038
.p2align 0x4
.long 0x491
L_261042:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_261043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x491
L_261043:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_486632
L_261045:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_261046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486632:
L_261044:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_261046:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_486633
L_261047:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486633:
L_261048:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl elabAndExpandTy_0
.hidden elabAndExpandTy_0
elabAndExpandTy_0:
L_261053:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_261089
L_261054:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486634
L_261055:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x38(%rbp)
	addq $0x58,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_486634:
L_261089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261090
.p2align 0x4
.long 0x4DF
L_261090:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_261055
.p2align 0x4
.long 0x4A6
L_261056:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261057
L_261087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261088
.p2align 0x4
.long 0x638
L_261088:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_261057:
	movq $0x3ED9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x50(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x78(%rbp)
	movq $0x9D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_261058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x43DD
L_261058:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_261059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1265
.p2align 0x4
.long 0x43DE
L_261059:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261060
L_261085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261086
.p2align 0x4
.long 0x43E4
L_261086:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_261060:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0xB,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x9D7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x70(%r11)
	addq $0x90,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r11)
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r11)
	movq 0x68(%rbp),%r13
	movq %r13,0x18(%r11)
	movq 0x60(%rbp),%r13
	movq %r13,0x20(%r11)
	movq 0x58(%rbp),%r13
	movq %r13,0x28(%r11)
	movq 0x50(%rbp),%r13
	movq %r13,0x30(%r11)
	movq 0x48(%rbp),%r13
	movq %r13,0x38(%r11)
	movq 0x18(%rbp),%r13
	movq %r13,0x40(%r11)
	movq 0x80(%rbp),%r13
	movq %r13,0x48(%r11)
	movq %r13,0x50(%r11)
	movq 0x10(%rbp),%r13
	movq %r13,0x58(%r11)
	movq 0x40(%rbp),%r13
	movq %r13,0x60(%r11)
	movq 0x30(%rbp),%r13
	movq %r13,0x68(%r11)
	movq %r15,0x78(%r11)
	movq %r14,0x80(%r11)
	movq %r11,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_261061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_24
.p2align 0x4
.long 0x43DF
L_261061:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261062
L_261083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_261084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261084
.p2align 0x4
.long 0x43E3
L_261084:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_261062:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486638
L_261063:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_261064:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_261065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_486638:
L_261069:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486639
L_261070:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
L_261071:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq $0x3DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_261072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_486639:
L_261076:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43E0
L_261065:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261066
L_261080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_261081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261081
.p2align 0x4
.long 0x2DEA
L_261081:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_261066:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_261069
L_261067:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_261064
.p2align 0x4
.long 0x43E1
L_261072:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261073
L_261077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_261078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261078
.p2align 0x4
.long 0x43E2
L_261078:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_261073:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_261076
L_261074:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_261071
.text
.p2align 0x4
.globl x_2033
.hidden x_2033
x_2033:
L_261091:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_261124
L_261092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486646
L_261093:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x58(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x58(%rbp)
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x8(%r15)
	movq (globalObjptr+0xF50)(%rip),%r15
	movq $0x9D9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486645
L_261095:
	movl %r13d,0x78(%rbp)
	movq $0x3EBD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_261096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486645:
L_261094:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486646:
L_261124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_261125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261125
.p2align 0x4
.long 0x460
L_261125:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_261093
.p2align 0x4
.long 0x2FCF
L_261096:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261097
L_261122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_261123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261123
.p2align 0x4
.long 0x805
L_261123:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_261097:
	movq $0x1035,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x6,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0xF0(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x90(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x98(%rbp)
	movq 0x50(%rbp),%r13
	movq %r13,0xA0(%rbp)
	movq 0x48(%rbp),%r13
	movq %r13,0xA8(%rbp)
	movq 0x40(%rbp),%r13
	movq %r13,0xB0(%rbp)
	movq 0x38(%rbp),%r13
	movq %r13,0xB8(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0xC0(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0xC8(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0xD8(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,0xE0(%rbp)
	movq 0x10(%rbp),%r13
	movq %r13,0xE8(%rbp)
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	addq $0x90,%rbp
	leaq (L_261098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_126
.p2align 0x4
.long 0x43E5
L_261098:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261099
L_261120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_261121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261121
.p2align 0x4
.long 0x43EA
L_261121:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_261099:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486649
L_261100:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
L_261101:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_261102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_486649:
L_261106:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486650
L_261107:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
L_261108:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x3DD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_261109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_486650:
L_261113:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43E6
L_261102:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261103
L_261117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_261118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261118
.p2align 0x4
.long 0x43E9
L_261118:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_261103:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_261106
L_261104:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_261101
.p2align 0x4
.long 0x43E7
L_261109:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261110
L_261114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_261115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261115
.p2align 0x4
.long 0x43E8
L_261115:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_261110:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_261113
L_261111:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_261108
.text
.p2align 0x4
.globl get_126
.hidden get_126
get_126:
L_261126:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261127
L_261470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_261471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261471
.p2align 0x4
.long 0x679
L_261471:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_261127:
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_261128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x8C3
L_261128:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r13,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_486667
L_261130:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_486666
L_261132:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_486665
L_261133:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_261135:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_261136
L_261462:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD4,%r13
	jne L_261136
L_261463:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x70(%rbp)
	je L_486660
L_261136:
	incl %ecx
	jo L_486659
L_261138:
	cmpq $0x1,%r15
	je L_486657
L_261139:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_261135
.p2align 0x4
L_486657:
L_261140:
L_261141:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_486658
L_261143:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_874
L_261461:
	movl %ecx,0x0(%r15)
x_874:
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_261145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486658:
L_261142:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486659:
L_261137:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486660:
L_261465:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_261142
L_261466:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_486661
L_261468:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486661:
L_261467:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486665:
L_261469:
	xorl %ecx,%ecx
	jmp L_261141
.p2align 0x4
L_486666:
L_261131:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486667:
L_261129:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD2C
L_261145:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261146
L_261459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261460
.p2align 0x4
.long 0xD37
L_261460:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_261146:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261129
L_261147:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_261148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0xD2C
L_261148:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_486671
	cmpb $0x2,%r14b
	je L_486670
L_261149:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_261150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486670:
L_261458:
	movq (globalObjptr+0x1BC0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486671:
L_261457:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD2E
L_261150:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261151
L_261455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_261456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261456
.p2align 0x4
.long 0xD38
L_261456:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_261151:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261129
L_261152:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_486720
L_261153:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_486719
	cmpq $0xE78,%r15
	je L_486696
	cmpq $0xE79,%r15
	je L_486694
	cmpq $0xE7A,%r15
	je L_486692
	cmpq $0xE7B,%r15
	je L_486672
L_261154:
	movq $0x1035,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
L_261155:
	movq 0x80(%rbp),%r14
	movb $0x1,0x0(%r14)
	movq $0x19A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486672:
L_261356:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r14,%r11
	movq %r15,0x88(%rbp)
	jne L_261160
L_261358:
	testq %r11,%r11
	jz L_486690
L_261359:
	cmpq $0x7FFFFFFF,%r11
	ja L_486689
L_261360:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261361
L_261404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261405
.p2align 0x4
.long 0x43FA
L_261405:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_261361:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CB,%rcx
	movq 0x98(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261362
.p2align 0x4
.long 0x43FA
L_261362:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
L_261363:
	movq $0x0,0xA8(%rbp)
loop_3072:
	movq 0x98(%rbp),%r15
	cmpq %r15,0xA8(%rbp)
	jl L_486687
L_261364:
	movq 0xA0(%rbp),%r15
	movq $0x9D9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
x_876:
	movq 0x68(%rbp),%r14
	movq 0x10(%r14),%r15
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_261131
L_261365:
	movq %r13,0x0(%r14)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486685
L_261366:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movl $0x0,0x98(%rbp)
.p2align 0x4,,0x7
L_261368:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_261369
L_261390:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD1,%r13
	je L_486680
L_261369:
	movl 0x98(%rbp),%r14d
	incl %r14d
	movl %r14d,0x90(%rbp)
	jo L_261137
L_261370:
	cmpq $0x1,%r15
	je L_486673
L_261371:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x98(%rbp)
	movq %r13,0x90(%rbp)
	jmp L_261368
.p2align 0x4
L_486673:
L_261372:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261373
L_261388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_261389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261389
.p2align 0x4
.long 0x36B2
L_261389:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_261373:
	movl 0x90(%rbp),%ecx
L_261374:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_261142
L_261375:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_486676
L_261387:
	movl %ecx,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq %r14,0x68(%rbp)
L_261377:
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_486674
L_261378:
	movq $0x1,%r15
L_261379:
	movq $0x1035,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_261155
.p2align 0x4
L_486674:
L_261380:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486675
L_261382:
	movl %r13d,0x98(%rbp)
	movq $0x3EBD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_261383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486675:
L_261160:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486676:
L_261376:
	movq 0x68(%rbp),%r15
	movq 0x88(%rbp),%r13
	movq %r13,0x68(%rbp)
	jmp L_261377
.p2align 0x4
L_486680:
L_261391:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261392
L_261396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261397
.p2align 0x4
.long 0x43FB
L_261397:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_261392:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0x98(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_261142
L_261393:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r11
	cmpl %r14d,0x0(%r11)
	jl L_486681
L_261394:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x68(%rbp)
	movq %r13,%r15
	jmp L_261377
.p2align 0x4
L_486681:
L_261395:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x98(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x68(%rbp)
	movq %r13,%r15
	jmp L_261377
.p2align 0x4
L_486685:
L_261398:
	xorl %ecx,%ecx
	jmp L_261374
.p2align 0x4
L_486687:
L_261399:
	movq 0xA8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0xB8,%rbp
	leaq (L_261400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_126
.p2align 0x4
L_486689:
L_261193:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486690:
L_261407:
	movq (globalObjptr+0x1BF8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_261363
.p2align 0x4
L_486692:
L_261306:
	movq 0x8(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_486693
L_261307:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x98(%rbp)
	movq %r14,%r15
L_261308:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xB0,%rbp
	leaq (L_261309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_126
.p2align 0x4
L_486693:
L_261355:
	movq $0x1,0x8(%rbp)
L_261313:
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_261314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_486694:
L_261221:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	cmpq $0x1,%r14
	je L_486695
L_261222:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x98(%rbp)
	movq %r14,%r15
L_261223:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xB0,%rbp
	leaq (L_261224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_126
.p2align 0x4
L_486695:
L_261305:
	movq $0x1,0x8(%rbp)
L_261228:
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_261229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_486696:
L_261157:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_486714
L_261199:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x88(%rbp)
	jne L_261160
L_261201:
	testq %rdx,%rdx
	jz L_486712
L_261202:
	cmpq $0x7FFFFFFF,%rdx
	ja L_261193
L_261203:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_261204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261204
.p2align 0x4
.long 0x1D83
L_261204:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
L_261205:
	movq $0x0,0xA0(%rbp)
loop_3067:
	movq 0x90(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_486710
L_261206:
	movq 0x98(%rbp),%r15
	movq $0x9D9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x8(%rbp)
	cmpq %rdx,%r14
	jne L_261160
L_261208:
	testq %rdx,%rdx
	jz L_486708
L_261209:
	cmpq $0x7FFFFFFF,%rdx
	ja L_261193
L_261210:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261211
.p2align 0x4
.long 0x43F0
L_261211:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,%r15
L_261212:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3068:
	cmpq 0x8(%rbp),%r14
	jnl L_486697
L_261214:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r9,8),%r8
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %r8,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r10
	movq $0x1,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_3068
.p2align 0x4
L_486697:
L_261213:
	movq $0x185D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
x_875:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %rdx,%r14
	jne L_261160
L_261168:
	testq %rdx,%rdx
	jz L_486705
L_261169:
	cmpq $0x7FFFFFFF,%rdx
	ja L_261193
L_261170:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261171
.p2align 0x4
.long 0x43EB
L_261171:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x28(%rbp)
L_261172:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3066:
	cmpq 0x20(%rbp),%r15
	jnl L_486698
L_261191:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3066
.p2align 0x4
L_486698:
L_261173:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261174
L_261189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261190
.p2align 0x4
.long 0x43EE
L_261190:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_261174:
	movq 0x28(%rbp),%r15
	movq $0x9D9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_261160
L_261176:
	cmpl $0x1,%r13d
	je L_486700
L_261177:
	movq 0x10(%rbp),%r11
	movq 0x18(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	jne L_486699
L_261180:
	movl %r13d,0x98(%rbp)
	movq $0x3EBD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_261181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486699:
L_261178:
	movq $0x1,%r14
	xchgq %r14,%r15
L_261179:
	movq $0x1035,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_261155
.p2align 0x4
L_486700:
L_261185:
	cmpq $0x0,%r14
	jna L_486701
L_261188:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_261155
.p2align 0x4
L_486701:
L_261187:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486705:
L_261194:
	movq (globalObjptr+0x1BF0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_261172
.p2align 0x4
L_486708:
L_261216:
	movq (globalObjptr+0x1BE0)(%rip),%r15
	jmp L_261212
.p2align 0x4
L_486710:
L_261217:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xB0,%rbp
	leaq (L_261218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_126
.p2align 0x4
L_486712:
L_261220:
	movq (globalObjptr+0x1BD8)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_261205
.p2align 0x4
L_486714:
L_261158:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x88(%rbp)
	jne L_261160
L_261161:
	testq %rdx,%rdx
	jz L_486717
L_261162:
	cmpq $0x7FFFFFFF,%rdx
	ja L_261193
L_261163:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_261164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261164
.p2align 0x4
.long 0x1D83
L_261164:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
L_261165:
	movq $0x0,0xA0(%rbp)
loop_3065:
	movq 0x90(%rbp),%r14
	cmpq %r14,0xA0(%rbp)
	jl L_486715
L_261166:
	movq 0x98(%rbp),%r14
	movq $0x185D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x48(%rbp),%r15
	jmp x_875
.p2align 0x4
L_486715:
L_261195:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xB0,%rbp
	leaq (L_261196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_126
.p2align 0x4
L_486717:
L_261198:
	movq (globalObjptr+0x1BD0)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_261165
.p2align 0x4
L_486719:
L_261156:
	movq 0x40(%rbp),%r15
	jmp L_261155
.p2align 0x4
L_486720:
L_261408:
	shrq $0x1,%r13
	movb %r13b,%r15b
	movb %r15b,0x40(%rbp)
	cmpb $0x1,%r15b
	je L_486727
	cmpb $0x2,%r15b
	je L_486726
	cmpb $0x3,%r15b
	je L_486721
L_261409:
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_261410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultWord_0
.p2align 0x4
L_486721:
L_261443:
	movq 0x38(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	cmpq (globalObjptr+0xCA68)(%rip),%r15
	je L_486725
L_261444:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq $0x5,%r13
	jne L_261446
L_261447:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_203:
	cmpq %r13,%r11
	je L_486723
L_261448:
	movq (globalObjptr+0xCA68)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_486722
L_261450:
	incq %r11
	jmp vectorEqualLoop_203
.p2align 0x4
L_486722:
L_261446:
	movq (globalObjptr+0x18C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486723:
	movq %r14,%r15
L_261452:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_261453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486725:
	movq %r14,%r15
	jmp L_261452
.p2align 0x4
L_486726:
L_261440:
	movq 0x18(%rbp),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_261441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultInt_0
.p2align 0x4
L_486727:
L_261418:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq (globalObjptr+0xCA98)(%rip),%r8
	je L_486733
L_261419:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq $0x6,%r13
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_249
L_261433:
	xorq %r11,%r11
	movq %r8,%r15
.p2align 0x4,,0x7
vectorEqualLoop_202:
	cmpq %r13,%r11
	je L_486732
L_261434:
	movq (globalObjptr+0xCA98)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne vectorEqual_248
L_261436:
	incq %r11
	jmp vectorEqualLoop_202
.p2align 0x4
vectorEqual_248:
vectorEqual_76:
	cmpq (globalObjptr+0xD6E8)(%rip),%r15
	je L_261429
L_261421:
	testl %ecx,%ecx
	jz L_261423
L_261424:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_201:
	cmpq %r13,%r11
	je L_486729
L_261425:
	movq (globalObjptr+0xD6E8)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_486728
L_261427:
	incq %r11
	jmp vectorEqualLoop_201
.p2align 0x4
L_486728:
L_261423:
	movq (globalObjptr+0x1AD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486729:
L_261429:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_261430:
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_261431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486732:
	movq %r14,%r15
L_261438:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_261430
.p2align 0x4
vectorEqual_249:
	movq %r8,%r15
	jmp vectorEqual_76
.p2align 0x4
L_486733:
	movq %r14,%r15
	jmp L_261438
.p2align 0x4
.long 0x43E5
L_261383:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261384
L_261385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_261386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261386
.p2align 0x4
.long 0x43EA
L_261386:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_261384:
	movq 0x88(%rbp),%r15
	jmp L_261379
.p2align 0x4
.long 0x43FC
L_261400:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261401
L_261402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_261403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261403
.p2align 0x4
.long 0x43FD
L_261403:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_261401:
	movq 0xA0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA8(%rbp),%r14
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xA8(%rbp)
	jmp loop_3072
.p2align 0x4
.long 0x2FD9
L_261309:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261310
L_261353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_261354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261354
.p2align 0x4
.long 0x2FE3
L_261354:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_261310:
	movq $0x1037,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2841,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_486738
L_261311:
	movq %r14,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	jmp L_261308
.p2align 0x4
L_486738:
L_261312:
	movq %r14,0x8(%rbp)
	jmp L_261313
.p2align 0x4
.long 0x43F7
L_261314:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_261129
L_261315:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_486740
L_261316:
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_261317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_486740:
L_261352:
	movq (globalObjptr+0x1BC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2FD9
L_261224:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261225
L_261303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_261304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261304
.p2align 0x4
.long 0x2FE3
L_261304:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_261225:
	movq $0x1037,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2841,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_486742
L_261226:
	movq %r14,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	jmp L_261223
.p2align 0x4
L_486742:
L_261227:
	movq %r14,0x8(%rbp)
	jmp L_261228
.p2align 0x4
.long 0x43F1
L_261229:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_486770
L_261230:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x8(%rbp)
.p2align 0x4,,0x7
L_261231:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486769
.p2align 0x4,,0x7
L_261232:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq $0x1CED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq 0x8(%r13),%r11
	movl 0x4(%r11),%r10d
	testl %r10d,%r10d
	jnz L_486768
L_261233:
	movq $0x2,%r13
L_261234:
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x50(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFF9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r13,0x18(%r9)
	addq $0x28,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1035,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq $0x1037,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x2841,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486744
L_261235:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_261231
.p2align 0x4
L_486744:
L_261236:
L_261237:
	cmpq $0x1,%r15
	je L_486767
L_261238:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_261239:
	incl %ecx
	jo L_261137
L_261240:
	cmpq $0x1,%r15
	je L_486745
L_261241:
	movq 0x8(%r15),%r15
	jmp L_261239
.p2align 0x4
L_486745:
L_261242:
	movq %r14,0x8(%rbp)
L_261243:
	movslq %ecx,%rdx
	movq %rdx,0x10(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_261193
L_261244:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261245
.p2align 0x4
.long 0x43F2
L_261245:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x18(%rbp)
	movq 0x8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3069:
	cmpq 0x10(%rbp),%r15
	jnl L_486747
L_261294:
	cmpq $0x1,%r14
	je L_486746
L_261295:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x18(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3069
.p2align 0x4
L_486746:
L_261296:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486747:
L_261246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261247
L_261292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261293
.p2align 0x4
.long 0x43F4
L_261293:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_261247:
	movq 0x10(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r14d,%r13
	movq %r13,0x20(%rbp)
	cmpq %r13,%r15
	jne L_261160
L_261249:
	testl %r14d,%r14d
	jz L_486758
L_261250:
	movq $0x185F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_261187
L_261252:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_486756
L_261253:
	movq %r15,0x30(%rbp)
	movl $0x0,0xC(%rbp)
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3070:
	movl 0x38(%rbp),%ecx
	cmpl 0x8(%rbp),%ecx
	jnl L_486752
L_261276:
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_486749
L_261277:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486748
L_261284:
	movq %r13,%r15
.p2align 0x4,,0x7
L_261282:
	movq %r15,0x30(%rbp)
	movl %ecx,0xC(%rbp)
	incl 0x38(%rbp)
	jmp loop_3070
.p2align 0x4
L_486748:
L_261278:
	movq %r10,0x90(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_261279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_486749:
L_261285:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486751
L_261287:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_486750
L_261288:
	movq 0x30(%rbp),%r15
	movl 0xC(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_261282
.p2align 0x4
L_486750:
.p2align 0x4,,0x7
L_261281:
	movq 0x40(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_261282
.p2align 0x4
L_486751:
L_261286:
	movq 0x30(%rbp),%r15
	movl 0xC(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_261282
.p2align 0x4
L_486752:
L_261254:
	movl 0x8(%rbp),%r15d
	decl %r15d
	movslq 0xC(%rbp),%r14
	movq 0x10(%rbp),%r13
	cmpq %r13,%r14
	jnb L_261187
L_261256:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_261187
L_261258:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_261137
L_261259:
	movl %r15d,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movq %r11,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_261260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_33
.p2align 0x4
L_486756:
L_261290:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486758:
L_261263:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_486762
L_261264:
	cmpq $0x7FFFFFFF,%rdx
	ja L_261193
L_261265:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261266
.p2align 0x4
.long 0x43F4
L_261266:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,%r15
L_261267:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3071:
	cmpq 0x20(%rbp),%r14
	jnl L_486760
L_261269:
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq 0x10(%rbp),%r11
	jnb L_261187
L_261271:
	movq %r14,%r13
	movq %r14,%r10
	movq 0x18(%rbp),%r9
	movq 0x0(%r9,%r11,8),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	salq $0x4,%r13
	movq %rsp,0x0(%r15,%r13,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r10
	movq %rsi,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_3071
.p2align 0x4
L_486760:
L_261268:
	movq $0x185D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	jmp x_875
.p2align 0x4
L_486762:
L_261273:
	movq (globalObjptr+0x1BE8)(%rip),%r15
	jmp L_261267
.p2align 0x4
L_486767:
L_261298:
	movq %r15,0x8(%rbp)
	xorl %ecx,%ecx
	jmp L_261243
.p2align 0x4
L_486768:
L_261299:
	movq $0x1,%r13
	jmp L_261234
.p2align 0x4
L_486769:
L_261300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261301
.p2align 0x4
.long 0x43F6
L_261301:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_261232
.p2align 0x4
L_486770:
L_261302:
	movq 0x8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_261237
.p2align 0x4
.long 0x43EC
L_261181:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261182
L_261183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261184
.p2align 0x4
.long 0x43ED
L_261184:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_261182:
	movq 0x8(%rbp),%r15
	jmp L_261179
.p2align 0x4
.long 0x43EF
L_261218:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_3067
.p2align 0x4
.long 0x43EF
L_261196:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq $0x1,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_3065
.p2align 0x4
.long 0x43FE
L_261410:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_261411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x43FF
L_261453:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_261412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x43FE
L_261441:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_261442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x43FF
L_261431:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_261412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x43F8
L_261317:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_261129
L_261318:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_486784
L_261319:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_261320:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486783
.p2align 0x4,,0x7
L_261321:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_261330
L_261322:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_261323:
	movq 0x8(%r15),%r13
	movq 0x18(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_486779
L_261324:
L_261325:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_261326
L_261338:
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r15)
	je L_486776
L_261326:
	cmpq $0x1,%r14
	je L_486772
L_261327:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_261323
.p2align 0x4
L_486772:
L_261328:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486775
.p2align 0x4,,0x7
L_261330:
	movq $0x1037,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2841,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_486773
L_261331:
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_261320
.p2align 0x4
L_486773:
L_261332:
	xchgq %r14,%r15
L_261333:
	cmpq $0x1,%r15
	je L_486774
L_261334:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_261239
.p2align 0x4
L_486774:
L_261335:
	movq %r15,0x8(%rbp)
	xorl %ecx,%ecx
	jmp L_261243
.p2align 0x4
L_486775:
L_261336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261337
.p2align 0x4
.long 0x43F9
L_261337:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_261330
.p2align 0x4
L_486776:
L_261341:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_486777
L_261342:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_261320
.p2align 0x4
L_486777:
L_261343:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_261333
.p2align 0x4
L_486779:
L_261344:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_261326
L_261345:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r11d,%r15d
	je L_261341
	jmp L_261326
.p2align 0x4
L_486783:
L_261349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261350
.p2align 0x4
.long 0x43F9
L_261350:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_261321
.p2align 0x4
L_486784:
L_261351:
	movq 0x8(%rbp),%r15
	jmp L_261333
.p2align 0x4
.long 0x43F5
L_261279:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r14d
	movl %r14d,0x3C(%rbp)
	testl %r14d,%r14d
	jz L_261281
L_261283:
	movq 0x30(%rbp),%r15
	movl 0xC(%rbp),%ecx
	jmp L_261282
.p2align 0x4
.long 0x43F3
L_261260:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261261
L_261274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261275
.p2align 0x4
.long 0x43F4
L_261275:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_261261:
	movq $0x3CF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movl $0x1,0x9C(%rbp)
	addq $0x90,%rbp
	leaq (L_261262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x43FF
L_261411:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_261412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4400
L_261412:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x6,0x90(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x90,%rbp
	leaq (L_261413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x43FF
L_261442:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_261412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x43F3
L_261262:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_261263
.p2align 0x4
.long 0x4401
L_261413:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x40(%rbp),%r15b
	movb %r15b,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_261414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x4402
L_261414:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261415
L_261416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261417
.p2align 0x4
.long 0x4403
L_261417:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_261415:
	movq (globalObjptr+0xF50)(%rip),%r15
	movq $0x9D9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp x_876
.text
.p2align 0x4
.globl qsort_33
.hidden qsort_33
qsort_33:
L_261472:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_3073
L_261539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_261540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261540
.p2align 0x4
.long 0x4E9
L_261540:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_3073:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_261474
L_261475:
	cmpl $0x14,%r15d
	jng L_486790
L_261477:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_486789
L_261478:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_261479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_486789:
L_261474:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486790:
L_261476:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_261479:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_261480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_261480:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_261474
L_261481:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_261483
L_261484:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_261483
L_261486:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_261483
L_261488:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_261483
L_261490:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_261483
L_261492:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_261474
L_261493:
	movl %r15d,0x50(%rbp)
.p2align 0x4,,0x7
loop_3075:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_261474
L_261494:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_261483
L_261496:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x8(%r11),%r10
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_486793
L_261497:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486792
L_261533:
	jmp loop_3075
.p2align 0x4
L_486792:
L_261498:
	movq %r10,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_261499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_486793:
L_261534:
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486809
L_261536:
	shrq $0x1,%r10
	movl %r10d,%r15d
	cmpl %r14d,%r15d
	jl loop_3075
L_261537:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
.p2align 0x4,,0x7
loop_3076:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_261474
L_261502:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_261483
L_261504:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_486795
L_261505:
	movq 0x60(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486794
L_261527:
	jmp loop_3076
.p2align 0x4
L_486794:
L_261506:
	movq %r11,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_486795:
L_261528:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_261510
L_261530:
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %r15d,%r13d
	jnl L_486796
L_261532:
	jmp loop_3076
.p2align 0x4
L_486796:
.p2align 0x4,,0x7
L_261510:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_486801
L_261511:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_261483
L_261513:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_261483
L_261515:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_261483
L_261517:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_486797
L_261519:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_3075
.p2align 0x4
L_486797:
L_261483:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486801:
L_261520:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_261483
L_261522:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_261483
L_261524:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_261474
L_261525:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_261526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_33
.p2align 0x4
L_486809:
L_261535:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_3076
.p2align 0x4
.long 0x4F6
L_261499:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_486819
L_261500:
	movl 0x54(%rbp),%ecx
	jmp loop_3075
.p2align 0x4
L_486819:
L_261501:
	movl 0x50(%rbp),%ecx
	jmp loop_3076
.p2align 0x4
.long 0x4F7
L_261507:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_261510
L_261508:
	movl 0x50(%rbp),%ecx
	jmp loop_3076
.p2align 0x4
.long 0x4F8
L_261526:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_3073
.text
.p2align 0x4
.globl toCType_0
.hidden toCType_0
toCType_0:
L_261541:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261542
L_261582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_261583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261583
.p2align 0x4
.long 0x460
L_261583:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_261542:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_261543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x51F
L_261543:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_486828
L_261545:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r14
L_261546:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_261547
L_261570:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261547
L_261571:
	movq 0x0(%r14),%r15
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_261547
L_261572:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_261573:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r15)
	je L_486823
L_261574:
	cmpq $0x1,%r14
	je L_486822
L_261575:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,0x10(%rbp)
	jmp L_261573
.p2align 0x4
L_486822:
L_261547:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_261548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486823:
L_261577:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261578
L_261579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_261580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261580
.p2align 0x4
.long 0x24
L_261580:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_261578:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x20F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486828:
L_261544:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E6
L_261548:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_261544
L_261549:
	movq 0x8(%r15),%r10
	movq 0x0(%r10),%r14
L_261550:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_261551
L_261552:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261551
L_261553:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	movq 0x10(%rbp),%r9
	cmpq $0x1,%r9
	je L_261551
L_261554:
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq %r10,%r14
.p2align 0x4,,0x7
L_261555:
	movq 0x10(%r14),%r10
	cmpq %r10,0x10(%r13)
	je L_486830
L_261556:
	cmpq $0x1,%r11
	je L_486829
L_261557:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_261555
.p2align 0x4
L_486829:
L_261551:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486830:
L_261559:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486833
L_261561:
	cmpl $0x1,%r13d
	jne L_261551
L_261563:
	cmpq $0x0,%r14
	jna L_486831
L_261565:
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_261566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_486831:
L_261564:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486833:
L_261560:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_261566:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x0(%rbp)
	je L_261551
L_261567:
	movq (globalObjptr+0x5010)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl scopeCheck_0
.hidden scopeCheck_0
scopeCheck_0:
L_261584:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261585
L_261717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261718
.p2align 0x4
.long 0x4E8
L_261718:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_261585:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_261587
L_261588:
	movl $0x0,0x4(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3077:
	cmpl %ecx,%ebx
	jnl L_486840
L_261714:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_486839
L_261716:
	movq 0x10(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x4(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r14d,%r11d
	movl %r11d,0x4(%rbp)
	movl %r15d,%ebx
	jmp loop_3077
.p2align 0x4
L_486839:
L_261595:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486840:
L_261589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261590
L_261712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_261713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261713
.p2align 0x4
.long 0xE65
L_261713:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_261590:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xAE0)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_486884
L_261592:
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	andl 0x4(%rbp),%r13d
	cmpl $0x0,%r13d
	jl L_261606
L_261593:
	movslq %r13d,%r14
	movq %r14,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_261595
L_261596:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_261605
L_261597:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x48(%rbp)
.p2align 0x4,,0x7
L_261598:
	movq (globalObjptr+0xAE8)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_486880
L_261600:
	movq %r14,0x0(%r11)
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r14
	movl 0x4(%rbp),%r10d
	cmpl %r10d,0x0(%r11)
	jne L_486877
L_261684:
	cmpq 0x10(%rbp),%r14
	je L_486875
L_261685:
	movq 0x38(%rbp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r14)
	jne L_486872
L_261692:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_204:
	cmpq %r13,0x38(%rbp)
	je L_486870
L_261693:
	movq 0x10(%rbp),%r11
	movb 0x0(%r14,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_486841
L_261700:
	incq %r13
	jmp vectorEqualLoop_204
.p2align 0x4
L_486841:
L_261694:
	cmpq $0x1,%r15
	je L_486842
L_261695:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x48(%rbp)
	jmp L_261598
.p2align 0x4
L_486842:
L_261696:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261605
L_261698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_261699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261699
.p2align 0x4
.long 0xDD8
L_261699:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_261605:
	movq $0xF97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movzbl 0x0(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x5020)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_261606
L_261607:
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x290B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x18(%rbp),%rdx
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%rdx
	jnb L_261595
L_261609:
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r10,0x0(%r11,%rdx,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_261587
L_261611:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_261606
L_261612:
	cmpl %r15d,%r10d
	jnl L_486864
L_261653:
	addl %r10d,%r10d
	jo L_261606
L_261654:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_486862
L_261655:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x653,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261656
.p2align 0x4
.long 0xDD2
L_261656:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3078:
	cmpq 0x18(%rbp),%r15
	jnl L_486843
L_261680:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3078
.p2align 0x4
L_486843:
L_261657:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_486861
L_261659:
	cmpl $0x0,%r13d
	jl L_486860
L_261660:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3079:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_486849
L_261665:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_261674
L_261666:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_261667:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486847
.p2align 0x4,,0x7
L_261668:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x4(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_486846
L_261669:
	movslq %r14d,%r13
	cmpq 0x18(%rbp),%r13
	jnb L_261595
L_261671:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x290B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_486844
L_261672:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_261667
.p2align 0x4
L_486844:
L_261674:
	incl 0x4C(%rbp)
	jmp loop_3079
.p2align 0x4
L_486846:
L_261606:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486847:
L_261676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_261677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261677
.p2align 0x4
.long 0x4405
L_261677:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_261668
.p2align 0x4
L_486849:
L_261661:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261662
L_261663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_261664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261664
.p2align 0x4
.long 0xDD0
L_261664:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_261662:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movb 0x0(%rbp),%dl
L_261614:
	movb 0x0(%rbp),%r15b
	cmpb %r15b,%dl
	je L_486858
L_261615:
	cmpb $0x1,%r15b
	je L_486855
	cmpb $0x2,%r15b
	je L_486852
L_261616:
	cmpb $0x1,%dl
	je L_486851
	cmpb $0x2,%dl
	je L_486850
L_261617:
	movq (globalObjptr+0xE928)(%rip),%r15
	movq %r15,%r13
	movq %r15,%r14
	movq %r13,%r15
L_261618:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x5028)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10A58)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10A60)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x10A68)(%rip),%r15
	movq $0x1,0x18(%rbp)
L_261619:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_261620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486850:
L_261643:
	movq (globalObjptr+0xE948)(%rip),%r15
	movq (globalObjptr+0xE928)(%rip),%r14
	jmp L_261618
.p2align 0x4
L_486851:
L_261642:
	movq (globalObjptr+0xE940)(%rip),%r15
	movq (globalObjptr+0xE928)(%rip),%r14
	jmp L_261618
.p2align 0x4
L_486852:
L_261648:
	cmpb $0x1,%dl
	je L_486854
	cmpb $0x2,%dl
	je L_486853
L_261649:
	movq (globalObjptr+0xE928)(%rip),%r15
	movq (globalObjptr+0xE948)(%rip),%r14
	jmp L_261618
.p2align 0x4
L_486853:
L_261651:
	movq (globalObjptr+0xE948)(%rip),%r15
	movq %r15,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_261618
.p2align 0x4
L_486854:
L_261650:
	movq (globalObjptr+0xE940)(%rip),%r15
	movq (globalObjptr+0xE948)(%rip),%r14
	jmp L_261618
.p2align 0x4
L_486855:
L_261644:
	cmpb $0x1,%dl
	je L_486857
	cmpb $0x2,%dl
	je L_486856
L_261645:
	movq (globalObjptr+0xE928)(%rip),%r13
	movq (globalObjptr+0xE940)(%rip),%r14
	movq %r13,%r15
	jmp L_261618
.p2align 0x4
L_486856:
L_261647:
	movq (globalObjptr+0xE948)(%rip),%r13
	movq (globalObjptr+0xE940)(%rip),%r14
	movq %r13,%r15
	jmp L_261618
.p2align 0x4
L_486857:
L_261646:
	movq (globalObjptr+0xE940)(%rip),%r14
	movq %r14,%r13
	movq %r13,%r15
	jmp L_261618
.p2align 0x4
L_486858:
L_261652:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486860:
L_261679:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486861:
L_261587:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486862:
L_261681:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486864:
L_261613:
	movb 0x0(%rbp),%dl
	jmp L_261614
.p2align 0x4
L_486870:
L_261701:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261703
L_261704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_261705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261705
.p2align 0x4
.long 0x1888
L_261705:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_261703:
	movq 0x48(%rbp),%r15
	movb 0x4(%r15),%dl
	jmp L_261614
.p2align 0x4
L_486872:
L_261686:
	cmpq $0x1,%r15
	je L_486873
L_261687:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x48(%rbp)
	jmp L_261598
.p2align 0x4
L_486873:
L_261688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261605
L_261690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_261691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261691
.p2align 0x4
.long 0xDD8
L_261691:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_261605
.p2align 0x4
L_486875:
L_261706:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261703
L_261708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_261709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261709
.p2align 0x4
.long 0x1888
L_261709:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_261703
.p2align 0x4
L_486877:
L_261601:
	cmpq $0x1,%r15
	je L_486878
L_261602:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x48(%rbp)
	jmp L_261598
.p2align 0x4
L_486878:
L_261603:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261605
L_261682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_261683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261683
.p2align 0x4
.long 0xDD8
L_261683:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_261605
.p2align 0x4
L_486880:
L_261599:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486884:
L_261591:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x743
L_261620:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261621
L_261640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261641
.p2align 0x4
.long 0xA2B
L_261641:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261621:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_486888
L_261622:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_261619
.p2align 0x4
L_486888:
L_261623:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_261624:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486894
.p2align 0x4,,0x7
L_261625:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_486889
L_261626:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_261624
.p2align 0x4
L_486889:
L_261627:
	movq 0x20(%rbp),%r13
	movq 0x18(%rbp),%r11
	xorl %ecx,%ecx
	xchgq %r11,%r15
	xchgq %r13,%r14
.p2align 0x4,,0x7
L_261628:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_261606
L_261629:
	cmpq $0x1,%r14
	je L_486890
L_261630:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_261628
.p2align 0x4
L_486890:
L_261631:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261632
L_261636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261637
.p2align 0x4
.long 0x4404
L_261637:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261632:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486891
L_261633:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_261634:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xDD30)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp msg_0
.p2align 0x4
L_486891:
L_261635:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_261634
.p2align 0x4
L_486894:
L_261638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261639
.p2align 0x4
.long 0xA2B
L_261639:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_261625
.text
.p2align 0x4
.globl primApp_8
.hidden primApp_8
primApp_8:
L_261719:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_261953
L_261720:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486897
L_261721:
	movq 0x18(%rbp),%r15
	movq 0x78(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_486896
L_261723:
	movl %r13d,0x58(%rbp)
	movq $0x3E9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_261724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486896:
L_261722:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486897:
L_261953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261954
.p2align 0x4
.long 0x4AF
L_261954:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_261721
.p2align 0x4
.long 0x11C0
L_261724:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261725
L_261951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_261952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261952
.p2align 0x4
.long 0x63C
L_261952:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_261725:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1,%r14
	je L_486945
	cmpq $0x2,%r14
	je L_486944
	cmpq $0x3,%r14
	je L_486942
	cmpq $0x5,%r14
	je L_486940
	cmpq $0x6,%r14
	je L_486938
	cmpq $0x7,%r14
	je L_486936
	cmpq $0xF,%r14
	je L_486935
	cmpq $0x13,%r14
	je L_486933
	cmpq $0x17,%r14
	je L_486932
	cmpq $0x1A,%r14
	je L_486930
	cmpq $0x35,%r14
	je L_486929
	cmpq $0x37,%r14
	je L_486928
	cmpq $0x39,%r14
	je L_486926
	cmpq $0x3A,%r14
	je L_486924
	cmpq $0x3D,%r14
	je L_486922
	cmpq $0x41,%r14
	je L_486920
	cmpq $0x42,%r14
	je L_486918
	cmpq $0x43,%r14
	je L_486916
	cmpq $0x45,%r14
	je L_486914
	cmpq $0x46,%r14
	je L_486912
	cmpq $0x47,%r14
	je L_486910
	cmpq $0x49,%r14
	je L_486909
	cmpq $0x5A,%r14
	je L_486907
	cmpq $0x5B,%r14
	je L_486905
	cmpq $0x5D,%r14
	je L_486903
	cmpq $0x5E,%r14
	je L_486902
	cmpq $0x5F,%r14
	je L_486900
L_261726:
	andq $0x3,%r15
	jnz L_261727
L_261732:
L_261727:
	movq $0x1,0x20(%rbp)
	movl $0x0,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486900:
L_261948:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_486901
L_261950:
	movq 0x0(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486901:
L_261745:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486902:
L_261947:
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486903:
L_261932:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261934:
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_261935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486905:
L_261917:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261919:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_261920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486907:
L_261902:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261904:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_261905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486909:
L_261889:
	movq 0x0(%rbp),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_261890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486910:
L_261874:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261876:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_261877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486912:
L_261859:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261861:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_261862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486914:
L_261856:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261858:
	movq 0x0(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486916:
L_261853:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261855:
	movq 0x0(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486918:
L_261850:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261852:
	movq 0x0(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486920:
L_261847:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261849:
	movq 0x0(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486922:
L_261844:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261846:
	movq 0x0(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486924:
L_261841:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261843:
	movq 0x0(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486926:
L_261838:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261840:
	movq 0x0(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486928:
L_261837:
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486929:
L_261836:
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486930:
L_261827:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261829:
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
L_486932:
L_261826:
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486933:
L_261823:
	movq 0x18(%rbp),%r14
	cmpq $0x2,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261825:
	movq 0x10(%r14),%r13
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486935:
L_261822:
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486936:
L_261807:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261809:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486938:
L_261792:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261794:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486940:
L_261777:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261779:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486942:
L_261762:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_261745
L_261764:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486944:
L_261749:
	movq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486945:
L_261733:
	movq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x51F
L_261728:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261729
L_261730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261731
.p2align 0x4
.long 0x4AF
L_261731:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_261729:
	movq $0x1D19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1573
L_261935:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261936
L_261945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_261946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261946
.p2align 0x4
.long 0xD46
L_261946:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_261936:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_486952
L_261937:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261938:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261939:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261940:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x40(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_486949
L_261942:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261944:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486949:
L_261739:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486952:
L_261736:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1136
L_261920:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261921
L_261930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_261931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261931
.p2align 0x4
.long 0x8E6
L_261931:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_261921:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261922:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261923:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261924:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261925:
	movq 0x8(%r13),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261927:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261929:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x1136
L_261905:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261906
L_261915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_261916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261916
.p2align 0x4
.long 0x8E6
L_261916:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_261906:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261907:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261908:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261909:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261910:
	movq 0x8(%r13),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261912:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261914:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3D44
L_261890:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261891
L_261900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261901
.p2align 0x4
.long 0x983
L_261901:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261891:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261892:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261893:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261894:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261895:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261897:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261899:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3D44
L_261877:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261878
L_261887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261888
.p2align 0x4
.long 0x983
L_261888:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261878:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261879:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261880:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261881:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261882:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261884:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261886:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3D44
L_261862:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261863
L_261872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261873
.p2align 0x4
.long 0x983
L_261873:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261863:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261864:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261865:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261866:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261867:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261869:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261871:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x51F
L_261830:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261831
L_261834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261835
.p2align 0x4
.long 0x4AF
L_261835:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_261831:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_486984
L_261832:
	movq 0x8(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486984:
L_261833:
	movq (globalObjptr+0x1B20)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBA0
L_261810:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261811
L_261820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_261821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261821
.p2align 0x4
.long 0x63D
L_261821:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_261811:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261812:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261813:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261814:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261815:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261817:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261819:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xBA0
L_261795:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261796
L_261805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_261806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261806
.p2align 0x4
.long 0x63D
L_261806:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_261796:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261797:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261798:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261799:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261800:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261802:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261804:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xBA0
L_261780:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261781
L_261790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_261791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261791
.p2align 0x4
.long 0x63D
L_261791:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_261781:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261782:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261783:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261784:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261785:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261787:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261789:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xBA0
L_261765:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261766
L_261775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_261776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261776
.p2align 0x4
.long 0x63D
L_261776:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_261766:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261767:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261768:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261769:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261770:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261772:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261774:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xBA0
L_261750:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261751
L_261760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_261761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261761
.p2align 0x4
.long 0x63D
L_261761:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_261751:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261752:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261753:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261754:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261755:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261757:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261759:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xBA0
L_261734:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261735
L_261747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_261748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261748
.p2align 0x4
.long 0x63D
L_261748:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_261735:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_261736
L_261737:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261738:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261739
L_261740:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_261739
L_261741:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_261739
L_261743:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_261745
L_261746:
	movq 0x0(%r15),%r14
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_261728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.text
.p2align 0x4
.globl mkSymbol_0
.hidden mkSymbol_0
mkSymbol_0:
L_261955:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261956
L_262203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262204
.p2align 0x4
.long 0x525
L_262204:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_261956:
	movq 0x18(%rbp),%r15
	movq 0x78(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_261957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4406
L_261957:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_487025
L_261959:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261960:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261961
L_262201:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_487023
L_262202:
	movq 0x20(%rbp),%r15
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x14(%rbp)
L_261962:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_261963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_487023:
L_261961:
	movl $0x0,0x14(%rbp)
	jmp L_261962
.p2align 0x4
L_487025:
L_261958:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x138E
L_261963:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261964
L_262199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262200
.p2align 0x4
.long 0x13A0
L_262200:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_261964:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_261965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4407
L_261965:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261966
L_262197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262198
.p2align 0x4
.long 0x4423
L_262198:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_261966:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq $0x47A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq $0x1D25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r11
	movq %r11,0xB8(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0xC0(%rbp)
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_487027
L_261967:
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487027:
L_262192:
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_262193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4408
L_261968:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_261969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_262193:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4408
L_261969:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movq 0xA0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movslq %r15d,%r11
	movl %r15d,0x18(%rbp)
	cmpq %r13,%r11
	movq %r13,0x30(%rbp)
	jnb L_487050
L_261972:
	movq 0x0(%r14,%r11,8),%r15
	cmpq $0x1,%r15
	movq %r15,0x18(%rbp)
	je L_487049
L_261973:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261974
L_262189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_262190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262190
.p2align 0x4
.long 0x4420
L_262190:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_261974:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_261975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261975
.p2align 0x4
.long 0x4409
L_261975:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3080:
	cmpq $0x2,%r15
	jnl L_487031
L_262185:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_487030
	cmpl $0x1,%r14d
	je L_487029
L_262017:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487029:
L_262188:
	movq 0xC8(%rbp),%r14
L_262187:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3080
.p2align 0x4
L_487030:
L_262186:
	movq 0x0(%rbp),%r14
	jmp L_262187
.p2align 0x4
L_487031:
L_261976:
	movq 0x18(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movzbq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_487032
	jmp *jumpTable_750(,%rax,8)
.data
.p2align 0x4
jumpTable_750:
.quad L_487047,L_487046,L_487045,L_487043,L_487041,L_487039,L_487038,L_487037,L_487036,L_487035,L_487033
.text
.p2align 0x4
L_487032:
L_261977:
	movq $0x81,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487033:
L_262182:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487034
L_262183:
	movq 0x8(%rbp),%r15
	movq $0xE,%r14
L_261981:
	movq %r15,0xD0(%rbp)
	movq %r14,0xD8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
L_487034:
L_262184:
	movq $0xE,0xC8(%rbp)
L_262116:
	movq 0x48(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_262117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_487035:
L_262175:
	movq $0x11,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_262176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487036:
L_262168:
	movq $0x21,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_262169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487037:
L_262161:
	movq $0x41,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_262162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487038:
L_262154:
	movq $0x81,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_262155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487039:
L_262151:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487040
L_262152:
	movq 0x8(%rbp),%r15
	movq $0xF,%r14
	jmp L_261981
.p2align 0x4
L_487040:
L_262153:
	movq $0xF,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
L_487041:
L_262148:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487042
L_262149:
	movq 0x8(%rbp),%r15
	movq (globalWord64+0xF60)(%rip),%r14
	jmp L_261981
.p2align 0x4
L_487042:
L_262150:
	movq (globalWord64+0xF60)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
L_487043:
L_262145:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487044
L_262146:
	movq 0x8(%rbp),%r15
	movq (globalWord64+0xF48)(%rip),%r14
	jmp L_261981
.p2align 0x4
L_487044:
L_262147:
	movq (globalWord64+0xF48)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
L_487045:
L_262138:
	movq $0x11,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_262139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487046:
L_262131:
	movq $0x21,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_262132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487047:
L_262124:
	movq $0x41,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_262125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487049:
L_262075:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487050:
L_261971:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_637:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262194
L_262195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_262196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262196
.p2align 0x4
.long 0x452
L_262196:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_262194:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x440A
L_261978:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261979
L_262122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262123
.p2align 0x4
.long 0x4422
L_262123:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_261979:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487052
L_261980:
	movq 0x8(%rbp),%r15
	jmp L_261981
.p2align 0x4
L_487052:
L_262115:
	movq %r14,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
.long 0x440B
L_261982:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261983
L_262113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_262114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262114
.p2align 0x4
.long 0x4420
L_262114:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_261983:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC8(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r13)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487054
L_261984:
L_261985:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x48(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movl $0x2,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_487054:
L_262093:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262094
.p2align 0x4
.long 0x441C
L_262094:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3084:
	cmpq $0x2,%r15
	jnl L_487057
L_262109:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_487056
	cmpl $0x1,%r14d
	je L_487055
	jmp L_262017
.p2align 0x4
L_487055:
L_262112:
	movq 0x70(%rbp),%r14
	movq 0x68(%rbp),%r13
L_262111:
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x18(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x18,%r11
	movq %r14,0x0(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r10
	movq $0x1,0x8(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r9
	movq %r13,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_3084
.p2align 0x4
L_487056:
L_262110:
	movq 0x60(%rbp),%r14
	movq 0x58(%rbp),%r13
	jmp L_262111
.p2align 0x4
L_487057:
L_262095:
	movq 0x18(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262096
.p2align 0x4
.long 0x441D
L_262096:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3085:
	cmpq $0x2,%r15
	jnl L_487060
L_262105:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_487059
	cmpl $0x1,%r14d
	je L_487058
	jmp L_262017
.p2align 0x4
L_487058:
L_262108:
	movq 0x78(%rbp),%r14
L_262107:
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3085
.p2align 0x4
L_487059:
L_262106:
	movq 0xC8(%rbp),%r14
	jmp L_262107
.p2align 0x4
L_487060:
L_262097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262098
L_262103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_262104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262104
.p2align 0x4
.long 0x441F
L_262104:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_262098:
	movq 0x40(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x24AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0xD8(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_262099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
.long 0x4421
L_262117:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r13d
	movl %r13d,0xD0(%rbp)
	movslq %r13d,%r15
	movq 0x40(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_261971
L_262119:
	movq 0x0(%r13,%r15,8),%r11
	cmpq $0x1,%r11
	je L_262075
L_262120:
	movq 0xC8(%rbp),%r14
	movq %r11,%r15
	jmp L_261981
.p2align 0x4
.long 0x440A
L_262176:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262177
L_262180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262181
.p2align 0x4
.long 0x4422
L_262181:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_262177:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487065
L_262178:
	movq 0x8(%rbp),%r15
	jmp L_261981
.p2align 0x4
L_487065:
L_262179:
	movq %r14,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
.long 0x440A
L_262169:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262170
L_262173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262174
.p2align 0x4
.long 0x4422
L_262174:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_262170:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487067
L_262171:
	movq 0x8(%rbp),%r15
	jmp L_261981
.p2align 0x4
L_487067:
L_262172:
	movq %r14,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
.long 0x440A
L_262162:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262163
L_262166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262167
.p2align 0x4
.long 0x4422
L_262167:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_262163:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487069
L_262164:
	movq 0x8(%rbp),%r15
	jmp L_261981
.p2align 0x4
L_487069:
L_262165:
	movq %r14,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
.long 0x440A
L_262155:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262156
L_262159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262160
.p2align 0x4
.long 0x4422
L_262160:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_262156:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487071
L_262157:
	movq 0x8(%rbp),%r15
	jmp L_261981
.p2align 0x4
L_487071:
L_262158:
	movq %r14,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
.long 0x440A
L_262139:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262140
L_262143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262144
.p2align 0x4
.long 0x4422
L_262144:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_262140:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487073
L_262141:
	movq 0x8(%rbp),%r15
	jmp L_261981
.p2align 0x4
L_487073:
L_262142:
	movq %r14,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
.long 0x440A
L_262132:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262133
L_262136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262137
.p2align 0x4
.long 0x4422
L_262137:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_262133:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487075
L_262134:
	movq 0x8(%rbp),%r15
	jmp L_261981
.p2align 0x4
L_487075:
L_262135:
	movq %r14,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
.long 0x440A
L_262125:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262126
L_262129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262130
.p2align 0x4
.long 0x4422
L_262130:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_262126:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_487077
L_262127:
	movq 0x8(%rbp),%r15
	jmp L_261981
.p2align 0x4
L_487077:
L_262128:
	movq %r14,0xC8(%rbp)
	jmp L_262116
.p2align 0x4
.long 0x440C
L_261986:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_261987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x441E
L_262099:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262100
L_262101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_262102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262102
.p2align 0x4
.long 0x441F
L_262102:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_262100:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x30(%r13)
	addq $0x40,%r12
	movb $0x3,%r11b
	movzbl %r11b,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x10,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x18,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xA058)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x5,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq $0x1,0x20(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x28(%r13)
	movq 0x10(%r11),%r10
	movq 0x0(%r10),%r14
	movq %r13,%r15
	jmp L_261985
.p2align 0x4
.long 0x440C
L_261987:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261988
L_262091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_262092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262092
.p2align 0x4
.long 0x441B
L_262092:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_261988:
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x2,0x8(%r13)
	movq $0x16D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x58(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movl 0x14(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_487081
L_261989:
	movq %r13,%r15
L_261990:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_487080
L_261991:
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_261992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487080:
L_262076:
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_262077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_487081:
L_262081:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_262082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262082
.p2align 0x4
.long 0x4419
L_262082:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3083:
	cmpq $0x2,%r15
	jnl L_487084
L_262087:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_487083
	cmpl $0x1,%r14d
	je L_487082
	jmp L_262017
.p2align 0x4
L_487082:
L_262090:
	movq 0x60(%rbp),%r14
	movq 0x78(%rbp),%r13
L_262089:
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x68(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x18,%r11
	movq %r14,0x0(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r10
	movq $0x1,0x8(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r9
	movq %r13,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_3083
.p2align 0x4
L_487083:
L_262088:
	movq 0x70(%rbp),%r14
	movq 0x90(%rbp),%r13
	jmp L_262089
.p2align 0x4
L_487084:
L_262083:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262084
L_262085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_262086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262086
.p2align 0x4
.long 0x441A
L_262086:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_262084:
	movq 0x68(%rbp),%r13
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movb $0x3,%r11b
	movzbl %r11b,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x10,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x18,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xA058)(%rip),%r11
	movq %r11,0x8(%r15)
	movq $0x2,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq %r13,0x28(%r15)
	movq 0x58(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r14
	jmp L_261990
.p2align 0x4
.long 0x440D
L_261992:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_261993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_262077:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x440D
L_261993:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movslq %r15d,%r14
	movl %r15d,0x14(%rbp)
	cmpq 0x30(%rbp),%r14
	jnb L_261971
L_261995:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	movq %r13,0x30(%rbp)
	je L_262075
L_261996:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261997
L_262072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_262073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262073
.p2align 0x4
.long 0x4418
L_262073:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_261997:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261998
.p2align 0x4
.long 0x440E
L_261998:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3081:
	cmpq $0x3,%r15
	jnl L_487090
L_262066:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_487089
	cmpl $0x1,%r14d
	je L_487088
	cmpl $0x2,%r14d
	je L_487087
L_262067:
	movq (globalObjptr+0x4D0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487087:
L_262071:
	movq 0x58(%rbp),%r14
L_262069:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3081
.p2align 0x4
L_487088:
L_262070:
	movq 0x60(%rbp),%r14
	jmp L_262069
.p2align 0x4
L_487089:
L_262068:
	movq 0x0(%rbp),%r14
	jmp L_262069
.p2align 0x4
L_487090:
L_261999:
	movq 0x30(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movzbq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_487091
	jmp *jumpTable_751(,%rax,8)
.data
.p2align 0x4
jumpTable_751:
.quad L_487102,L_487101,L_487100,L_487099,L_487098,L_487097,L_487096,L_487095,L_487094,L_487093,L_487092
.text
.p2align 0x4
L_487091:
L_262000:
	movq $0x81,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487092:
L_262065:
	movq $0x12,%r15
L_262003:
	movq %r15,0xB0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
L_487093:
L_262060:
	movq $0x11,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487094:
L_262055:
	movq $0x21,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487095:
L_262050:
	movq $0x41,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487096:
L_262045:
	movq $0x81,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487097:
L_262044:
	movq $0x13,%r15
	jmp L_262003
.p2align 0x4
L_487098:
L_262043:
	movq (globalWord64+0xF90)(%rip),%r15
	jmp L_262003
.p2align 0x4
L_487099:
L_262042:
	movq (globalWord64+0xF78)(%rip),%r15
	jmp L_262003
.p2align 0x4
L_487100:
L_262037:
	movq $0x11,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487101:
L_262032:
	movq $0x21,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_487102:
L_262027:
	movq $0x41,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x1
bug_636:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262078
L_262079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_262080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262080
.p2align 0x4
.long 0x452
L_262080:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_262078:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x440F
L_262001:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262002
L_262025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262026
.p2align 0x4
.long 0x4417
L_262026:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262002:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262003
.p2align 0x4
.long 0x4410
L_262004:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262005
L_262023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262024
.p2align 0x4
.long 0x4416
L_262024:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262005:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xA8(%rbp)
	movl $0x2,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x440F
L_262061:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262062
L_262063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262064
.p2align 0x4
.long 0x4417
L_262064:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262062:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262003
.p2align 0x4
.long 0x440F
L_262056:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262057
L_262058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262059
.p2align 0x4
.long 0x4417
L_262059:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262057:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262003
.p2align 0x4
.long 0x440F
L_262051:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262052
L_262053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262054
.p2align 0x4
.long 0x4417
L_262054:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262052:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262003
.p2align 0x4
.long 0x440F
L_262046:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262047
L_262048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262049
.p2align 0x4
.long 0x4417
L_262049:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262047:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262003
.p2align 0x4
.long 0x440F
L_262038:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262039
L_262040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262041
.p2align 0x4
.long 0x4417
L_262041:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262039:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262003
.p2align 0x4
.long 0x440F
L_262033:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262034
L_262035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262036
.p2align 0x4
.long 0x4417
L_262036:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262034:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262003
.p2align 0x4
.long 0x440F
L_262028:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262029
L_262030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262031
.p2align 0x4
.long 0x4417
L_262031:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262029:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262003
.p2align 0x4
.long 0x4411
L_262006:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_262007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4412
L_262007:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262008
.p2align 0x4
.long 0x4413
L_262008:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x30(%rbp)
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_3082:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487119
.p2align 0x4,,0x7
L_262009:
	movq 0x40(%rbp),%r15
	cmpq $0x2,%r15
	jnl L_487118
L_262016:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_487117
	cmpl $0x1,%r14d
	je L_487116
	jmp L_262017
.p2align 0x4
L_487116:
L_262020:
	movq 0x28(%rbp),%r14
	movq 0x38(%rbp),%r15
L_262019:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x40(%rbp)
	jmp loop_3082
.p2align 0x4
L_487117:
L_262018:
	movq 0x20(%rbp),%r14
	movq 0x18(%rbp),%r15
	jmp L_262019
.p2align 0x4
L_487118:
L_262010:
	movq 0x30(%rbp),%r14
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2481,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1D15,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x3EA9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r13,0xA8(%rbp)
	movl $0x2,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_487119:
L_262021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262022
.p2align 0x4
.long 0x4415
L_262022:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_262009
.p2align 0x4
.long 0x4414
L_262011:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_262012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0x78C
L_262012:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262013
L_262014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_262015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262015
.p2align 0x4
.long 0x78D
L_262015:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_262013:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl etaExtraNoWrap_0
.hidden etaExtraNoWrap_0
etaExtraNoWrap_0:
L_262205:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_262206
L_262364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_262365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262365
.p2align 0x4
.long 0x63C
L_262365:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_262206:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_262207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x637
L_262207:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_487122
L_262208:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_262209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_487122:
L_262363:
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x8(%rbp)
	jmp primApp_8
.p2align 0x4
.long 0x1F76
L_262209:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262210
L_262361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_262362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262362
.p2align 0x4
.long 0x21EC
L_262362:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_262210:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_262211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2033
.p2align 0x4
.long 0x4424
L_262211:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_487148
L_262212:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %r14,%rdx
	jne L_262214
L_262215:
	testq %rdx,%rdx
	jz L_487146
L_262216:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262278
L_262217:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x164D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262218
.p2align 0x4
.long 0x154C
L_262218:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_262219:
	movq $0x0,0x60(%rbp)
loop_3086:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_487144
L_262220:
	movq 0x58(%rbp),%r15
	movq $0xB59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	movl %r13d,0x28(%rbp)
	cmpq %r14,%rdx
	jne L_487143
L_262222:
	testq %rdx,%rdx
	jz L_487142
L_262223:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262278
L_262224:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_262225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262225
.p2align 0x4
.long 0x4425
L_262225:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x40(%rbp)
L_262226:
	movq $0x0,0x60(%rbp)
.p2align 0x4,,0x7
loop_3087:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487140
.p2align 0x4,,0x7
L_262227:
	movq 0x60(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_487124
L_262295:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x58(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq $0x4799,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	movq %r15,0x60(%rbp)
	jmp loop_3087
.p2align 0x4
L_487124:
L_262228:
	movq 0x40(%rbp),%r14
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2529,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq 0x8(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x8(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_262229:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487139
.p2align 0x4,,0x7
L_262230:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2977,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487125
L_262231:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_262229
.p2align 0x4
L_487125:
L_262232:
	movq %r13,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_262233:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487138
.p2align 0x4,,0x7
L_262234:
	movq $0x2977,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487126
L_262235:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_262233
.p2align 0x4
L_487126:
L_262236:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_487133
L_262237:
	movq 0x30(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_262238:
	addq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r13
	je L_487127
L_262239:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_262238
.p2align 0x4
L_487127:
L_262240:
	testq %r15,%r15
	jz L_487132
L_262241:
	cmpq $0x7FFFFFFF,%r15
	ja L_487131
L_262242:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_262243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262243
.p2align 0x4
.long 0x4426
L_262243:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,%r15
L_262244:
	movq 0x40(%rbp),%r10
	movq 0x30(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3088:
	cmpq 0x8(%rbp),%r14
	jnl L_487130
.p2align 0x4,,0x7
loop_3090:
	cmpq 0x0(%r11),%r13
	jl L_487129
L_262272:
	cmpq $0x1,%r10
	je L_487128
L_262273:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3090
.p2align 0x4
L_487128:
L_262275:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487129:
L_262276:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3088
.p2align 0x4
L_487130:
L_262245:
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
L_262246:
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_262247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
L_487131:
L_262278:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487132:
L_262279:
	movq (globalObjptr+0x6E88)(%rip),%r14
	xchgq %r14,%r15
	jmp L_262244
.p2align 0x4
L_487133:
L_262280:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x8(%rbp)
	je L_487137
L_262281:
	testq %r13,%r13
	jz L_487136
L_262282:
	cmpq $0x7FFFFFFF,%r13
	ja L_262278
L_262283:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_262284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262284
.p2align 0x4
.long 0x4425
L_262284:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,%r15
L_262285:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3091:
	cmpq 0x40(%rbp),%r14
	jnl L_487134
L_262287:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3091
.p2align 0x4
L_487134:
L_262286:
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_262246
.p2align 0x4
L_487136:
L_262289:
	movq (globalObjptr+0x6E90)(%rip),%r15
	jmp L_262285
.p2align 0x4
L_487137:
L_262290:
	movq 0x8(%rbp),%r15
	jmp L_262246
.p2align 0x4
L_487138:
L_262291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_262292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262292
.p2align 0x4
.long 0x442F
L_262292:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_262234
.p2align 0x4
L_487139:
L_262293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_262294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262294
.p2align 0x4
.long 0x442F
L_262294:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_262230
.p2align 0x4
L_487140:
L_262296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_262297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262297
.p2align 0x4
.long 0x4430
L_262297:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_262227
.p2align 0x4
L_487142:
L_262299:
	movq (globalObjptr+0x6EA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_262226
.p2align 0x4
L_487143:
L_262214:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487144:
L_262300:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_262301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_487146:
L_262306:
	movq (globalObjptr+0x6E98)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_262219
.p2align 0x4
L_487148:
L_262307:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262308
L_262359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262360
.p2align 0x4
.long 0x4436
L_262360:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_262308:
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262309
.p2align 0x4
.long 0x24AC
L_262309:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3092:
	cmpq $0x1,%r15
	jnl L_487149
L_262358:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3092
.p2align 0x4
L_487149:
L_262310:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262311
L_262356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262357
.p2align 0x4
.long 0x4438
L_262357:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_262311:
	movq 0x28(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2529,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_262312:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487164
.p2align 0x4,,0x7
L_262313:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2977,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487150
L_262314:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_262312
.p2align 0x4
L_487150:
L_262315:
	movq %r13,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_262316:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487163
.p2align 0x4,,0x7
L_262317:
	movq $0x2977,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487151
L_262318:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_262316
.p2align 0x4
L_487151:
L_262319:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_487158
L_262320:
	movq 0x20(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_262321:
	addq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r13
	je L_487152
L_262322:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_262321
.p2align 0x4
L_487152:
L_262323:
	testq %r15,%r15
	jz L_487157
L_262324:
	cmpq $0x7FFFFFFF,%r15
	ja L_262278
L_262325:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262326
.p2align 0x4
.long 0x4433
L_262326:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_262327:
	movq 0x28(%rbp),%r10
	movq 0x20(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3093:
	cmpq 0x8(%rbp),%r14
	jnl L_487155
.p2align 0x4,,0x7
loop_3094:
	cmpq 0x0(%r11),%r13
	jl L_487154
L_262335:
	cmpq $0x1,%r10
	je L_262275
L_262336:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3094
.p2align 0x4
L_487154:
L_262338:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3093
.p2align 0x4
L_487155:
L_262328:
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
L_262329:
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_262330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
L_487157:
L_262340:
	movq (globalObjptr+0x6E88)(%rip),%r14
	xchgq %r14,%r15
	jmp L_262327
.p2align 0x4
L_487158:
L_262341:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x8(%rbp)
	je L_487162
L_262342:
	testq %r13,%r13
	jz L_487161
L_262343:
	cmpq $0x7FFFFFFF,%r13
	ja L_262278
L_262344:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262345
.p2align 0x4
.long 0x4436
L_262345:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_262346:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3095:
	cmpq 0x28(%rbp),%r14
	jnl L_487159
L_262348:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3095
.p2align 0x4
L_487159:
L_262347:
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_262329
.p2align 0x4
L_487161:
L_262350:
	movq (globalObjptr+0x6E90)(%rip),%r15
	jmp L_262346
.p2align 0x4
L_487162:
L_262351:
	movq 0x8(%rbp),%r15
	jmp L_262329
.p2align 0x4
L_487163:
L_262352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262353
.p2align 0x4
.long 0x4437
L_262353:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_262317
.p2align 0x4
L_487164:
L_262354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262355
.p2align 0x4
.long 0x4437
L_262355:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_262313
.p2align 0x4
.long 0x4427
L_262247:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262248
L_262269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_262270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262270
.p2align 0x4
.long 0x442E
L_262270:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_262248:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x3AF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_262249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_44
.p2align 0x4
.long 0x4431
L_262301:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262302
L_262303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262304
.p2align 0x4
.long 0x4432
L_262304:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_262302:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x70(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,%r10
	salq $0x4,%r10
	movq 0x68(%rbp),%r9
	movq %r9,0x0(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r14,%r11
	salq $0x4,%r11
	movq %r13,0x8(%r15,%r11,1)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_3086
.p2align 0x4
.long 0x4434
L_262330:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262331
L_262332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262333
.p2align 0x4
.long 0x4435
L_262333:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_262331:
	movq 0x20(%rbp),%r14
	movq 0x28(%rbp),%r15
L_262259:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	movl $0x2,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_262260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4428
L_262249:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262250
L_262267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262268
.p2align 0x4
.long 0x442D
L_262268:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_262250:
	movq $0x1D05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_262214
L_262252:
	movl %r13d,0x68(%rbp)
	movq $0x3E97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_262253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x700
L_262260:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r14
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_262261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x113F
L_262253:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_262254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0x45A
L_262261:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4429
L_262254:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262255
L_262265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262266
.p2align 0x4
.long 0x442C
L_262266:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_262255:
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262256
.p2align 0x4
.long 0x442A
L_262256:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3089:
	cmpq $0x1,%r15
	jnl L_487172
L_262264:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq 0x20(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	imulq $0x18,%r14
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r10,%r14,1)
	movq %r10,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	imulq $0x18,%r13
	movq $0x1,0x8(%r10,%r13,1)
	movq %r10,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	imulq $0x18,%r11
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r10,%r11,1)
	incq %r15
	jmp loop_3089
.p2align 0x4
L_487172:
L_262257:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262258
L_262262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_262263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262263
.p2align 0x4
.long 0x442B
L_262263:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_262258:
	movq 0x20(%rbp),%r13
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x4799,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x30(%r14)
	addq $0x40,%r12
	movb $0x3,%r11b
	movzbl %r11b,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x10,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x18,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA058)(%rip),%r11
	movq %r11,0x8(%r14)
	movq $0x1,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq %r13,0x28(%r14)
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r14,%r15
	movq %r10,%r14
	jmp L_262259
.text
.p2align 0x4
.globl import_0
.hidden import_0
import_0:
L_262366:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_262367
L_262721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_262722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262722
.p2align 0x4
.long 0x979
L_262722:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_262367:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_262368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x4439
L_262368:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_487176
L_262369:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_262370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2033
.p2align 0x4
L_487176:
L_262673:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x108F0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_262674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x443A
L_262370:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262371
L_262718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_262719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262719
.p2align 0x4
.long 0x4462
L_262719:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_262371:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_487181
L_262372:
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x80(%rbp)
	cmpq %r11,%r14
	je L_487177
L_262373:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487177:
L_262374:
	movq 0x80(%rbp),%rdx
	testq %rdx,%rdx
	jz L_487180
L_262375:
	cmpq $0x7FFFFFFF,%rdx
	ja L_487179
L_262376:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_262377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262377
.p2align 0x4
.long 0x443B
L_262377:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_262378:
	movq $0x0,0x90(%rbp)
loop_3096:
	movq 0x80(%rbp),%r15
	cmpq %r15,0x90(%rbp)
	jl L_487178
L_262379:
	movq 0x88(%rbp),%r15
	movq $0x9DF,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_262380:
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_262381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_487178:
L_262694:
	movq 0x90(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	leaq L_262704(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_262695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_487179:
L_262709:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487180:
L_262710:
	movq (globalObjptr+0x5018)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_262378
.p2align 0x4
L_487181:
L_262711:
	movq 0x78(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_262712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
.long 0x445D
L_262674:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_262675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x443C
L_262381:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262382
L_262692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262693
.p2align 0x4
.long 0x445A
L_262693:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_262382:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_487216
L_262383:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x251B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_487215
L_262384:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x28(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_262385:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487214
.p2align 0x4,,0x7
L_262386:
	movb 0x28(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_262660
	cmpb $0x4,%r15b
	je L_487211
L_262387:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_487183
L_262388:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movb %r14b,0x28(%rbp)
	jmp L_262385
.p2align 0x4
L_487183:
L_262389:
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x70(%rbp),%r15
L_262390:
	cmpq $0x1,%r15
	je L_262426
L_262391:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x48(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_262392:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487209
.p2align 0x4,,0x7
L_262393:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_487184
L_262394:
	movq %r15,0x70(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movb %r15b,0x48(%rbp)
	jmp L_262392
.p2align 0x4
L_487184:
L_262395:
	cmpq $0x1,0x70(%rbp)
	jne L_262396
L_262648:
	movb 0x48(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_487204
	cmpb $0x4,%r15b
	je L_487185
L_262396:
	movq (globalObjptr+0x10A70)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_262397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487185:
L_262426:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_487203
L_262427:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x48(%rbp)
	movb $0x1,0x49(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_262428:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487202
.p2align 0x4,,0x7
L_262429:
	movb 0x48(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_262623
	cmpb $0x2,%r15b
	je L_262623
	cmpb $0x3,%r15b
	je L_487198
L_262430:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_487186
L_262431:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movb %r14b,0x48(%rbp)
	jmp L_262428
.p2align 0x4
L_487186:
L_262432:
	movb 0x49(%rbp),%r14b
	movb %r14b,0x28(%rbp)
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
L_262433:
	cmpq $0x1,%r15
	je L_487197
L_262434:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x29(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_262435:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487196
.p2align 0x4,,0x7
L_262436:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x29(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_487187
L_262437:
	movq %r15,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movb %r15b,0x29(%rbp)
	jmp L_262435
.p2align 0x4
L_487187:
L_262439:
	cmpq $0x1,0x8(%rbp)
	je L_487193
L_262440:
	cmpq $0x1,%r15
	je L_262470
L_262441:
	movb 0x0(%r15),%r14b
	cmpq $0x1,0x8(%r15)
	jne L_262442
L_262565:
	cmpb $0x1,%r14b
	je L_487190
	cmpb $0x2,%r14b
	je L_487189
	cmpb $0x3,%r14b
	je L_487188
L_262442:
	movq (globalObjptr+0x10A70)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_262443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487188:
L_262470:
	movb $0x2,0x20(%rbp)
L_262471:
	movb 0x20(%rbp),%r15b
	movb %r15b,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_262472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scopeCheck_0
.p2align 0x4
L_487189:
L_262567:
	movb $0x1,0x20(%rbp)
	jmp L_262471
.p2align 0x4
L_487190:
L_262566:
	movb $0x0,0x20(%rbp)
	jmp L_262471
.p2align 0x4
L_487193:
L_262570:
	cmpq $0x1,%r15
	je L_487194
L_262571:
	movq (globalObjptr+0x10A70)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_262572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487194:
L_262600:
	movb $0x2,0x20(%rbp)
L_262474:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_487195
L_262477:
	movq $0x3E9F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	movl %r13d,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_262478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_487195:
L_262476:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487196:
L_262619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262620
.p2align 0x4
.long 0x4455
L_262620:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_262436
.p2align 0x4
L_487197:
L_262621:
	movq $0x1,%r15
	jmp L_262439
.p2align 0x4
L_487198:
L_262623:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_487199
L_262624:
	movq %r15,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movb %r15b,0x48(%rbp)
	jmp L_262428
.p2align 0x4
L_487199:
L_262625:
	movb 0x49(%rbp),%r13b
	movb %r13b,0x28(%rbp)
	jmp L_262433
.p2align 0x4
L_487202:
L_262628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262629
.p2align 0x4
.long 0x4456
L_262629:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_262429
.p2align 0x4
L_487203:
L_262630:
	movb $0x1,0x28(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_262433
.p2align 0x4
L_487204:
L_262649:
	movq 0x50(%rbp),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x3,%r13b
	je L_262651
	cmpb $0x9,%r13b
	je L_487205
	jmp L_262426
.p2align 0x4
L_487205:
L_262651:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_487206
L_262652:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x48(%rbp)
	movb $0x0,0x49(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_262428
.p2align 0x4
L_487206:
L_262653:
	movb $0x0,0x28(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_262433
.p2align 0x4
L_487209:
L_262656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262657
.p2align 0x4
.long 0x445C
L_262657:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_262393
.p2align 0x4
L_487211:
L_262660:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_487212
L_262661:
	movq %r15,0x70(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movb %r15b,0x28(%rbp)
	jmp L_262385
.p2align 0x4
L_487212:
L_262662:
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_262390
.p2align 0x4
L_487214:
L_262664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262665
.p2align 0x4
.long 0x444F
L_262665:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_262386
.p2align 0x4
L_487215:
L_262666:
	movq %r15,0x18(%rbp)
	movq $0x1,%r15
	jmp L_262390
.p2align 0x4
L_487216:
L_262667:
	movq 0x28(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_262668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x445F
L_262695:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262696
L_262702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_262703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262703
.p2align 0x4
.long 0x4460
L_262703:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_262696:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_487218
L_262697:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq 0x88(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x90(%rbp),%r11
	movq %r11,%r9
	imulq $0x18,%r9
	movq 0x98(%rbp),%r8
	movq %r8,0x8(%r15,%r9,1)
	movq %r15,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,%r10
	imulq $0x18,%r10
	movq %r14,0x10(%r15,%r10,1)
	movq %r11,%r14
	imulq $0x18,%r14
	movb %r13b,0x0(%r15,%r14,1)
	incq %r11
	movq %r11,0x90(%rbp)
	jmp loop_3096
.p2align 0x4
L_487218:
L_262698:
	movq $0x1ACB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r13,%r15
L_262699:
	cmpq 0x70(%rbp),%r15
	je L_262673
L_262700:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_262704:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r14
L_262705:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_487222
L_262707:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xD65,%r15
	jne L_487221
L_262708:
	movq %r14,%r13
	movq 0x0(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
	jmp L_262699
.p2align 0x4
L_487221:
	movq %r14,%r15
L_262706:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487222:
	movq %r14,%r15
	jmp L_262706
.p2align 0x4
.long 0x443A
L_262712:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_262673
L_262713:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x88(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_262714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262714
.p2align 0x4
.long 0x4461
L_262714:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3100:
	cmpq $0x1,%r15
	jnl L_487223
L_262716:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	imulq $0x18,%r13
	movq 0x80(%rbp),%r9
	movq %r9,0x8(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	imulq $0x18,%r11
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r14,%r11,1)
	imulq $0x18,%r10
	movb 0x88(%rbp),%r13b
	movb %r13b,0x0(%r14,%r10,1)
	incq %r15
	jmp loop_3100
.p2align 0x4
L_487223:
L_262715:
	movq $0x9DF,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_262380
.p2align 0x4
.long 0x59C
L_262675:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_487225
L_262676:
	movl %r13d,0x0(%r14)
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_262677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_487225:
L_262404:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x443D
L_262397:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_487230
L_262398:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%dl
	movl $0x0,0x50(%rbp)
	movq $0x1,0x70(%rbp)
L_262399:
	cmpb $0x1,%dl
	je L_487229
	cmpb $0x2,%dl
	je L_487228
	cmpb $0x3,%dl
	je L_487227
	cmpb $0x4,%dl
	je L_487226
L_262400:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_262401:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_262402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487226:
L_262646:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_262401
.p2align 0x4
L_487227:
L_262645:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_262401
.p2align 0x4
L_487228:
L_262644:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_262401
.p2align 0x4
L_487229:
L_262643:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_262401
.p2align 0x4
L_487230:
L_262647:
	movq $0x1,%r14
	xchgq %r14,%r15
L_262412:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_262413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x443D
L_262443:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_487235
L_262444:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movl $0x0,0x2C(%rbp)
	movq $0x1,0x50(%rbp)
L_262445:
	cmpb $0x1,%dl
	je L_487234
	cmpb $0x2,%dl
	je L_487233
	cmpb $0x3,%dl
	je L_487232
	cmpb $0x4,%dl
	je L_487231
L_262446:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_262447:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_262448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487231:
L_262563:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_262447
.p2align 0x4
L_487232:
L_262562:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_262447
.p2align 0x4
L_487233:
L_262561:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_262447
.p2align 0x4
L_487234:
L_262560:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_262447
.p2align 0x4
L_487235:
L_262564:
	movq $0x1,%r14
	xchgq %r14,%r15
L_262457:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_262458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4443
L_262472:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262474
L_262547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262548
.p2align 0x4
.long 0x444C
L_262548:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_262474
.p2align 0x4
.long 0x4450
L_262572:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_487241
L_262573:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movl $0x0,0x2C(%rbp)
	movq $0x1,0x50(%rbp)
L_262574:
	cmpb $0x1,%dl
	je L_487240
	cmpb $0x2,%dl
	je L_487239
	cmpb $0x3,%dl
	je L_487238
	cmpb $0x4,%dl
	je L_487237
L_262575:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_262576:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_262577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487237:
L_262616:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_262576
.p2align 0x4
L_487238:
L_262615:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_262576
.p2align 0x4
L_487239:
L_262614:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_262576
.p2align 0x4
L_487240:
L_262613:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_262576
.p2align 0x4
L_487241:
L_262617:
	movq $0x1,%r14
	xchgq %r14,%r15
L_262586:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_262587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4443
L_262478:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262479
L_262545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262546
.p2align 0x4
.long 0x444B
L_262546:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262479:
	cmpq $0x1,0x8(%rbp)
	jne L_487242
L_262497:
	movq $0x265F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movl $0x1,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_262498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_487242:
L_262481:
	movq $0x3829,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_262482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x4440
L_262668:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262669
L_262690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262691
.p2align 0x4
.long 0x445E
L_262691:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262669:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_487250
L_262671:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_262672:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_262673
L_262680:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_262673
L_262681:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_262673
L_262683:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_262476
L_262685:
	testl %r11d,%r11d
	jnz L_262673
L_262687:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_487244
L_262688:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x28(%rbp)
	movq $0x1,0x48(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_262385
.p2align 0x4
L_487244:
L_262689:
	movq $0x1,0x18(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_262390
.p2align 0x4
L_487250:
L_262670:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x905
L_262677:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_487252
L_262678:
	movq $0x35,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487252:
L_262550:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x443E
L_262402:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262403
L_262641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_262642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262642
.p2align 0x4
.long 0x445B
L_262642:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_262403:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x50(%rbp),%r14d
	incl %r14d
	jo L_262404
L_262405:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_487253
L_262406:
	movl %r14d,0x50(%rbp)
	movq %r15,0x70(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_262399
.p2align 0x4
L_487253:
L_262407:
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_262408:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487255
.p2align 0x4,,0x7
L_262409:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_262412
L_262410:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_262408
.p2align 0x4
L_487255:
L_262639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262640
.p2align 0x4
.long 0x445A
L_262640:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_262409
.p2align 0x4
.long 0x443F
L_262413:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262414
L_262637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262638
.p2align 0x4
.long 0x4459
L_262638:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262414:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_262415:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_262404
L_262416:
	cmpq $0x1,%r14
	je L_487258
L_262417:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_262415
.p2align 0x4
L_487258:
L_262418:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262419
L_262635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262636
.p2align 0x4
.long 0x4458
L_262636:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262419:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_487260
L_262420:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_262421:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_262404
L_262422:
	movl %r13d,0x0(%r15)
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_262423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_487260:
L_262634:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_262421
.p2align 0x4
.long 0x4440
L_262448:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262449
L_262558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262559
.p2align 0x4
.long 0x444F
L_262559:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_262449:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x2C(%rbp),%r14d
	incl %r14d
	jo L_262404
L_262450:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_487264
L_262451:
	movl %r14d,0x2C(%rbp)
	movq %r15,0x50(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_262445
.p2align 0x4
L_487264:
L_262452:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_262453:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487266
.p2align 0x4,,0x7
L_262454:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_262457
L_262455:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_262453
.p2align 0x4
L_487266:
L_262556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262557
.p2align 0x4
.long 0x444F
L_262557:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_262454
.p2align 0x4
.long 0x4441
L_262458:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262459
L_262554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262555
.p2align 0x4
.long 0x444E
L_262555:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262459:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_262460:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_262404
L_262461:
	cmpq $0x1,%r14
	je L_487269
L_262462:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_262460
.p2align 0x4
L_487269:
L_262463:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262464
L_262552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262553
.p2align 0x4
.long 0x444D
L_262553:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262464:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_487271
L_262465:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_262466:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_262404
L_262467:
	movl %r13d,0x0(%r15)
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_262468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_487271:
L_262551:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_262466
.p2align 0x4
.long 0x4451
L_262577:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262578
L_262611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262612
.p2align 0x4
.long 0x4455
L_262612:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262578:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x2C(%rbp),%r14d
	incl %r14d
	jo L_262404
L_262579:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_487275
L_262580:
	movl %r14d,0x2C(%rbp)
	movq %r15,0x50(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_262574
.p2align 0x4
L_487275:
L_262581:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_262582:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487277
.p2align 0x4,,0x7
L_262583:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_262586
L_262584:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_262582
.p2align 0x4
L_487277:
L_262609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262610
.p2align 0x4
.long 0x4455
L_262610:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_262583
.p2align 0x4
.long 0x4452
L_262587:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262588
L_262607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262608
.p2align 0x4
.long 0x4454
L_262608:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262588:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_262589:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_262404
L_262590:
	cmpq $0x1,%r14
	je L_487280
L_262591:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_262589
.p2align 0x4
L_487280:
L_262592:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262593
L_262605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262606
.p2align 0x4
.long 0x4453
L_262606:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262593:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_487282
L_262594:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_262595:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_262404
L_262596:
	movl %r13d,0x0(%r15)
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_262597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_487282:
L_262604:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_262595
.p2align 0x4
.long 0x4446
L_262498:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq $0x1,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_262499:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487302
.p2align 0x4,,0x7
L_262500:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF3F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x299B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_487286
L_262501:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_262499
.p2align 0x4
L_487286:
L_262502:
	movq %r13,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_262503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487301
.p2align 0x4,,0x7
L_262504:
	movq $0x299B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_487287
L_262505:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_262503
.p2align 0x4
L_487287:
L_262506:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_487295
L_262507:
	movq 0x48(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_262508:
	addq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r13
	je L_487288
L_262509:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_262508
.p2align 0x4
L_487288:
L_262510:
	testq %r15,%r15
	jz L_487294
L_262511:
	cmpq $0x7FFFFFFF,%r15
	ja L_487293
L_262512:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1425,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262513
.p2align 0x4
.long 0x4447
L_262513:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x58(%rbp)
L_262514:
	movq 0x50(%rbp),%r11
	movq 0x48(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3097:
	cmpq 0x40(%rbp),%r15
	jnl L_487291
.p2align 0x4,,0x7
loop_3098:
	cmpq 0x0(%r13),%r14
	jl L_487290
L_262520:
	cmpq $0x1,%r11
	je L_487289
L_262521:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_3098
.p2align 0x4
L_487289:
L_262522:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487290:
L_262523:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0x58(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_3097
.p2align 0x4
L_487291:
L_262515:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262516
L_262517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262518
.p2align 0x4
.long 0x4448
L_262518:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262516:
	movq 0x58(%rbp),%r15
	movq $0x1F9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_262481
.p2align 0x4
L_487293:
L_262525:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487294:
L_262526:
	movq (globalObjptr+0x5030)(%rip),%r14
	movq %r14,0x58(%rbp)
	jmp L_262514
.p2align 0x4
L_487295:
L_262527:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x40(%rbp)
	je L_262481
L_262528:
	testq %r13,%r13
	jz L_487299
L_262529:
	cmpq $0x7FFFFFFF,%r13
	ja L_262525
L_262530:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1425,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262531
.p2align 0x4
.long 0x4445
L_262531:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x48(%rbp)
L_262532:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3099:
	cmpq 0x50(%rbp),%r15
	jnl L_487296
L_262537:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x48(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3099
.p2align 0x4
L_487296:
L_262533:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262534
L_262535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262536
.p2align 0x4
.long 0x4449
L_262536:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262534:
	movq 0x48(%rbp),%r15
	movq $0x1F9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_262481
.p2align 0x4
L_487299:
L_262539:
	movq (globalObjptr+0x5038)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_262532
.p2align 0x4
L_487301:
L_262541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262542
.p2align 0x4
.long 0x444A
L_262542:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_262504
.p2align 0x4
L_487302:
L_262543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262544
.p2align 0x4
.long 0x444A
L_262544:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_262500
.p2align 0x4
.long 0x4444
L_262482:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262483
L_262495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262496
.p2align 0x4
.long 0x4445
L_262496:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262483:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_487306
L_262484:
	movzbw 0x0(%r14),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
L_262485:
	movq $0x1159,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movzwl %r15w,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x10(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x18(%rbp),%r10
	cmpq $0x1,%r10
	je L_487304
L_262486:
	movq 0x10(%r10),%r14
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_487303
L_262487:
	movq %r11,%r15
L_262489:
	movq $0x24BD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x10(%r11)
	movq %r14,0x18(%r11)
	movq %r13,0x20(%r11)
	addq $0x30,%r12
	movzbl 0x28(%rbp),%r15d
	movzbl 0x20(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487303:
L_262490:
	movq $0x1,%r10
	movq %r11,%r15
	xchgq %r10,%r13
	jmp L_262489
.p2align 0x4
L_487304:
L_262491:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_487305
L_262492:
	movq 0x68(%rbp),%r14
	movq %r11,%r15
	jmp L_262489
.p2align 0x4
L_487305:
L_262493:
	movq $0x1,%r9
	movq 0x68(%rbp),%r14
	movq %r11,%r15
	xchgq %r9,%r13
	jmp L_262489
.p2align 0x4
L_487306:
L_262494:
	xorw %r15w,%r15w
	jmp L_262485
.p2align 0x4
.long 0x443D
L_262423:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262424
L_262632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262633
.p2align 0x4
.long 0x4457
L_262633:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262424:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_262550
	jmp L_262426
.p2align 0x4
.long 0x4442
L_262468:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_262550
	jmp L_262470
.p2align 0x4
.long 0x4443
L_262597:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262598
L_262602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_262603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262603
.p2align 0x4
.long 0x444C
L_262603:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_262598:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_262550
	jmp L_262600
.text
.p2align 0x4
.globl concat_9
.hidden concat_9
concat_9:
L_262723:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_262724
L_262767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_262768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262768
.p2align 0x4
.long 0x452
L_262768:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_262724:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_487328
L_262725:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_262726:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487327
.p2align 0x4,,0x7
L_262727:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF75,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2969,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487313
L_262728:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_262726
.p2align 0x4
L_487313:
L_262729:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_262730:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487326
.p2align 0x4,,0x7
L_262731:
	movq $0x2969,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487314
L_262732:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_262730
.p2align 0x4
L_487314:
L_262733:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_487321
L_262734:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_262735:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_487315
L_262736:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_262735
.p2align 0x4
L_487315:
L_262737:
	testq %r15,%r15
	jz L_487320
L_262738:
	cmpq $0x7FFFFFFF,%r15
	ja L_487319
L_262739:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262740
.p2align 0x4
.long 0x49C
L_262740:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_262741:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3101:
	cmpq 0x18(%rbp),%r14
	jnl L_487318
.p2align 0x4,,0x7
loop_3102:
	cmpq 0x0(%r11),%r13
	jl L_487317
L_262744:
	cmpq $0x1,%r10
	je L_487316
L_262745:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3102
.p2align 0x4
L_487316:
L_262746:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487317:
L_262747:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3101
.p2align 0x4
L_487318:
L_262742:
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487319:
L_262749:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487320:
L_262750:
	movq (globalObjptr+0x6D0)(%rip),%r14
	xchgq %r14,%r15
	jmp L_262741
.p2align 0x4
L_487321:
L_262751:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%rdx
	movq %r13,0x10(%rbp)
	je L_487325
L_262752:
	testq %rdx,%rdx
	jz L_487324
L_262753:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262749
L_262754:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262755
.p2align 0x4
.long 0x4A5
L_262755:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_262756:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3103:
	cmpq 0x18(%rbp),%r14
	jnl L_487322
L_262758:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3103
.p2align 0x4
L_487322:
L_262757:
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487324:
L_262760:
	movq (globalObjptr+0x6D8)(%rip),%r15
	jmp L_262756
.p2align 0x4
L_487325:
L_262761:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487326:
L_262762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_262763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262763
.p2align 0x4
.long 0x45C
L_262763:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_262731
.p2align 0x4
L_487327:
L_262764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_262765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262765
.p2align 0x4
.long 0x45C
L_262765:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_262727
.p2align 0x4
L_487328:
L_262766:
	movq (globalObjptr+0x6E0)(%rip),%r14
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3952
.hidden loop_3952
loop_3952:
L_262769:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_262770
L_262812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_262813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262813
.p2align 0x4
.long 0x495
L_262813:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_262770:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_487342
L_262771:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1067,%r14
	je L_487338
	cmpq $0x1068,%r14
	je L_487334
	cmpq $0x1069,%r14
	je L_487332
	cmpq $0x106A,%r14
	je L_487331
L_262772:
	movl 0x0(%rbp),%ecx
L_262773:
	incl %ecx
	jo L_487330
L_262775:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487330:
L_262774:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487331:
L_262801:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r14),%r15
L_262802:
	movl %ecx,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_262803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3952
.p2align 0x4
L_487332:
L_262793:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x0(%rbp),%ecx
L_262794:
	cmpq $0x1,%r15
	je L_487333
L_262795:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r15
L_262796:
	movl %ecx,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_262797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3952
.p2align 0x4
L_487333:
L_262800:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487334:
L_262784:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
L_262785:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_487337
L_262787:
	cmpl $0x0,%r13d
	jl L_487336
L_262788:
	movl $0x0,0xC(%rbp)
loop_3104:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_487335
L_262789:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487335:
L_262790:
	movl %ecx,0x18(%rbp)
	movslq 0xC(%rbp),%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_262791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3952
.p2align 0x4
L_487336:
L_262792:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487337:
L_262786:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487338:
L_262776:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x0(%rbp),%ecx
L_262777:
	cmpq $0x1,%r15
	je L_487341
L_262778:
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
L_262779:
	incl %ecx
	jo L_262774
L_262780:
	cmpq $0x1,%r15
	je L_487339
L_262781:
	movq 0x8(%r15),%r15
	jmp L_262779
.p2align 0x4
L_487339:
L_262782:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487341:
L_262783:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487342:
L_262811:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_262803:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl 0x10(%rbp),%ecx
	movl %ecx,0x8(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_487348
L_262804:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1067,%r14
	je L_487347
	cmpq $0x1068,%r14
	je L_487346
	cmpq $0x1069,%r14
	je L_487345
	cmpq $0x106A,%r14
	je L_487344
L_262805:
	jmp L_262773
.p2align 0x4
L_487344:
L_262809:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_262802
.p2align 0x4
L_487345:
L_262808:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_262794
.p2align 0x4
L_487346:
L_262807:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp L_262785
.p2align 0x4
L_487347:
L_262806:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_262777
.p2align 0x4
L_487348:
L_262810:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_262797:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl 0x10(%rbp),%ecx
	movl %ecx,0x8(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487349
L_262798:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_262796
.p2align 0x4
L_487349:
L_262799:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9AB
L_262791:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%ecx
	movl %ecx,0x10(%rbp)
	incl 0xC(%rbp)
	jmp loop_3104
.text
.p2align 0x4
.globl loop_3953
.hidden loop_3953
loop_3953:
L_262814:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_262815
L_262865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262866
.p2align 0x4
.long 0x525
L_262866:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_262815:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487364
L_262816:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1067,%r15
	je L_487359
	cmpq $0x1068,%r15
	je L_487355
	cmpq $0x1069,%r15
	je L_487353
	cmpq $0x106A,%r15
	je L_487352
L_262817:
	movq 0x0(%r14),%r15
L_262818:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	cmpl 0x10(%rbp),%r13d
	jnl L_487351
L_262821:
	movslq %r13d,%r11
	movq 0x18(%rbp),%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	jnb L_487350
L_262824:
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,0x0(%r10,%r11,8)
	incl %r13d
	movl %r13d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487350:
L_262823:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487351:
L_262820:
	movq (globalObjptr+0x1050)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487352:
L_262853:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
L_262854:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_262855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3953
.p2align 0x4
L_487353:
L_262845:
	movq 0x0(%r14),%r15
loop_3107:
	cmpq $0x1,%r15
	je L_487354
L_262846:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r15
L_262847:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_262848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3953
.p2align 0x4
L_487354:
L_262851:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487355:
L_262836:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_262837:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_487356
L_262838:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487356:
L_262839:
	cmpl $0x0,0x14(%rbp)
	jl L_487358
L_262840:
	movl $0x0,0x28(%rbp)
loop_3106:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x28(%rbp)
	jl L_487357
L_262841:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487357:
L_262842:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_262843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3953
.p2align 0x4
L_487358:
L_262844:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487359:
L_262825:
	movq 0x0(%r14),%r15
loop_3105:
	cmpq $0x1,%r15
	je L_262834
L_262826:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
L_262827:
	movq 0x8(%rbp),%r13
	movl 0x0(%r13),%r11d
	cmpl 0x10(%rbp),%r11d
	jnl L_262820
L_262829:
	movslq %r11d,%r10
	movq 0x18(%rbp),%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	jnb L_262823
L_262831:
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r10,8)
	incl %r11d
	movl %r11d,0x0(%r13)
	cmpq $0x1,%r15
	je L_487360
L_262832:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_262827
.p2align 0x4
L_487360:
L_262834:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487364:
L_262863:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x600
L_262855:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_262863
L_262856:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1067,%r15
	je L_487369
	cmpq $0x1068,%r15
	je L_487368
	cmpq $0x1069,%r15
	je L_487367
	cmpq $0x106A,%r15
	je L_487366
L_262857:
	movq 0x0(%r14),%r15
	jmp L_262818
.p2align 0x4
L_487366:
L_262861:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_262854
.p2align 0x4
L_487367:
L_262860:
	movq 0x0(%r14),%r15
	jmp loop_3107
.p2align 0x4
L_487368:
L_262859:
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_262837
.p2align 0x4
L_487369:
L_262858:
	movq 0x0(%r14),%r15
	jmp loop_3105
.p2align 0x4
.long 0x600
L_262848:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_262851
L_262849:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_262847
.p2align 0x4
.long 0x3CDA
L_262843:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x28(%rbp)
	jmp loop_3106
.text
.p2align 0x4
.globl x_2020
.hidden x_2020
x_2020:
L_262867:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_262868
L_263014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_263015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263015
.p2align 0x4
.long 0x45C
L_263015:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_262868:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	cmpq $0x1,%r13
	je L_487372
L_262869:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_262870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_487372:
L_262993:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_262994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0xF43
L_262870:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262871
L_262991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_262992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262992
.p2align 0x4
.long 0x647
L_262992:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_262871:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_262878
L_262872:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_262873:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106D,%r13
	je L_487397
L_262874:
	cmpq $0x1,%r15
	je L_487374
L_262875:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x38(%rbp)
	jmp L_262873
.p2align 0x4
L_487374:
L_262876:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262878
L_262984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_262985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262985
.p2align 0x4
.long 0x647
L_262985:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_262878:
	movq $0x1E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_877:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_487393
L_262879:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r11
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_487375
L_262880:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r11,%r15
L_262881:
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_262882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peekStrid_0
.p2align 0x4
L_487375:
L_262982:
	movq %r11,%r15
L_262887:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ebx
	movslq %ebx,%r14
	cmpq %r14,%r15
	jne L_487392
L_262889:
	decl %ebx
	jo L_262890
L_262891:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3108:
	cmpl %ecx,%ebx
	jl L_487390
L_262892:
	movl %ebx,%esp
	addl %ecx,%esp
	movl %ecx,(localWord32+0x4)(%rip)
	jo L_262890
L_262893:
	movl %esp,%esi
	shrl $0x1F,%esi
	addl %esi,%esp
	sarl $0x1,%esp
	movslq %esp,%rsi
	movq %rsi,0x10(%rbp)
	cmpq %r15,%rsi
	jnb L_487388
L_262895:
	movq 0x28(%rbp),%rdi
	movq 0x8(%rdi),%rdx
	movq 0x10(%rdx),%r8
	movq 0x8(%rbp),%rdi
	movq 0x0(%rdi,%rsi,8),%rdx
	movq 0x18(%rdx),%rax
	movq 0x8(%rax),%r14
	movq 0x10(%r14),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	xorq %r13,%r13
	xorq %r14,%r14
	movl %esp,%ecx
.p2align 0x4,,0x7
loop_3109:
	cmpq %r11,%r14
	jl L_487387
L_262896:
	movl $0x1,%esp
	xchgl %esp,%ecx
	movl %esp,(localWord32+0xC)(%rip)
L_262897:
	cmpq %r10,%r13
	jnl L_262899
L_262917:
	testl %ecx,%ecx
	jnz L_487385
L_262918:
	movb 0x0(%r8,%r14,1),%spl
	movb 0x0(%r9,%r13,1),%sil
	cmpb %sil,%spl
	jb L_487383
L_262919:
	cmpb %spl,%sil
	jb L_487376
L_262920:
	incq %r14
	incq %r13
	movl (localWord32+0xC)(%rip),%ecx
	jmp loop_3109
.p2align 0x4
L_487376:
L_262899:
	cmpq %r9,%r8
	je L_487381
L_262900:
	cmpq %r11,%r10
	jne L_262902
L_262904:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_205:
	cmpq %r11,%r14
	je L_487378
L_262905:
	movb 0x0(%r8,%r14,1),%r13b
	cmpb %r13b,0x0(%r9,%r14,1)
	jne L_487377
L_262907:
	incq %r14
	jmp vectorEqualLoop_205
.p2align 0x4
L_487377:
L_262902:
	movl (localWord32+0xC)(%rip),%r14d
	incl %r14d
	jno loop_3955
L_262890:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
loop_3955:
	movl %r14d,%ecx
	jmp loop_3108
.p2align 0x4
L_487378:
L_262908:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262910
L_262911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_262912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262912
.p2align 0x4
.long 0xA2F
L_262912:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_262910:
	movq 0x8(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x10(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487381:
L_262913:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262910
L_262915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_262916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262916
.p2align 0x4
.long 0xA2F
L_262916:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_262910
.p2align 0x4
L_487383:
	movl (localWord32+0x4)(%rip),%ecx
L_262923:
	movl (localWord32+0xC)(%rip),%ebx
	decl %ebx
	jo L_262890
	jmp loop_3108
.p2align 0x4
L_487385:
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_262923
.p2align 0x4
L_487387:
L_262926:
	xorl %esp,%esp
	xchgl %esp,%ecx
	movl %esp,(localWord32+0xC)(%rip)
	jmp L_262897
.p2align 0x4
L_487388:
L_262894:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487390:
L_262928:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_262929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
L_487392:
L_262888:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487393:
L_262983:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
L_262942:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x1,%r15
	je L_487394
L_262943:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x28(%rbp)
L_262944:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_262945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487394:
L_262977:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_262961:
	testl %ecx,%ecx
	jz L_487395
L_262962:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_262963:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_262964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_487395:
L_262968:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_262963
.p2align 0x4
L_487397:
L_262986:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262987
L_262988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_262989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262989
.p2align 0x4
.long 0x1F01
L_262989:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_262987:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_877
.p2align 0x4
.long 0x466
L_262994:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262995
L_263012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_263013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263013
.p2align 0x4
.long 0x45B
L_263013:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_262995:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_263002
L_262996:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x10(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_262997:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106B,%r13
	je L_487404
L_262998:
	cmpq $0x1,%r15
	je L_487401
L_262999:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x10(%rbp)
	jmp L_262997
.p2align 0x4
L_487401:
L_263000:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263002
L_263005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_263006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263006
.p2align 0x4
.long 0x45B
L_263006:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_263002:
	movq $0x15F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_878:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_262928
L_263003:
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487404:
L_263007:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263008
L_263009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_263010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263010
.p2align 0x4
.long 0xBF0
L_263010:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_263008:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_878
.p2align 0x4
.long 0x637
L_262882:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262883
L_262980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_262981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262981
.p2align 0x4
.long 0x63C
L_262981:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_262883:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_487409
L_262884:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_262887
L_262885:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_262881
.p2align 0x4
L_487409:
L_262937:
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_262938:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487411
.p2align 0x4,,0x7
L_262939:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487410
L_262940:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_262938
.p2align 0x4
L_487410:
L_262941:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,%r15
	jmp L_262942
.p2align 0x4
L_487411:
L_262978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_262979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262979
.p2align 0x4
.long 0x647
L_262979:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_262939
.p2align 0x4
.long 0x600
L_262929:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262930
L_262935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_262936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262936
.p2align 0x4
.long 0x765
L_262936:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_262930:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xAC28)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_262931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x4E4
L_262945:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262946
L_262975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_262976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262976
.p2align 0x4
.long 0x4F1
L_262976:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_262946:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_487414
L_262947:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_262944
.p2align 0x4
L_487414:
L_262948:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_262949:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487416
.p2align 0x4,,0x7
L_262950:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_487415
L_262951:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_262949
.p2align 0x4
L_487415:
L_262952:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_262953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487416:
L_262973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_262974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262974
.p2align 0x4
.long 0x4F1
L_262974:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_262950
.p2align 0x4
.long 0x490
L_262964:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262965
L_262966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262967
.p2align 0x4
.long 0x27
L_262967:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_262965:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_262931:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262932
L_262933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262934
.p2align 0x4
.long 0x27
L_262934:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_262932:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x994
L_262953:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_262954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x67A
L_262954:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262955
L_262971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_262972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262972
.p2align 0x4
.long 0x638
L_262972:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_262955:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_262956:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_262890
L_262957:
	cmpq $0x1,%r14
	je L_487420
L_262958:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_262956
.p2align 0x4
L_487420:
L_262959:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262960
L_262969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_262970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262970
.p2align 0x4
.long 0x995
L_262970:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_262960:
	movq 0x30(%rbp),%r15
	movl 0x10(%rbp),%ecx
	jmp L_262961
.text
.p2align 0x4
.globl approximatePrefix_0
.hidden approximatePrefix_0
approximatePrefix_0:
L_263016:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_263017
L_263038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_263039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263039
.p2align 0x4
.long 0x452
L_263039:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_263017:
	movq $0x1,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_366:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_487427
L_263018:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_263019:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487426
.p2align 0x4,,0x7
L_263020:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487425
L_263021:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_263019
.p2align 0x4
L_487425:
L_263023:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_263024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_487426:
L_263035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_263036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263036
.p2align 0x4
.long 0x45C
L_263036:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_263020
.p2align 0x4
L_487427:
L_263037:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_263023
.p2align 0x4
.long 0x1
L_263024:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_487429
L_263026:
	cmpl $0xF,%r13d
	jg L_487428
L_263027:
L_263028:
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_487428:
L_263029:
	movq $0xA,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x8(%rbp)
	movl $0x0,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_263030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_487429:
L_263025:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_263030:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263031
L_263033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_263034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263034
.p2align 0x4
.long 0x452
L_263034:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_263031:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4F90)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_263032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_263032:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp L_263028
.text
.p2align 0x4
.globl x_2021
.hidden x_2021
x_2021:
L_263040:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_263072
L_263041:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487434
L_263042:
	movq 0x8(%rbp),%r13
	movq 0x38(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x30(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x28(%r13),%r15
	movq 0x20(%r13),%r14
	movq 0x18(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x8(%r13),%r9
	movq 0x0(%r13),%r8
	movq $0x2855,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r8,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2855,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq $0x2855,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r8,0x8(%r13)
	addq $0x18,%r12
	movq $0x2855,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq $0x2855,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
.p2align 0x4,,0x7
L_263043:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r10
	cmpq %r10,0x8(%r11)
	je L_487432
L_263044:
	cmpq $0x1,%r14
	je L_487431
L_263045:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_263043
.p2align 0x4
L_487431:
L_263046:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487432:
L_263047:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263048
L_263070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_263071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263071
.p2align 0x4
.long 0x4AF
L_263071:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_263048:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10A78)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_263049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_487434:
L_263072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_263073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263073
.p2align 0x4
.long 0x460
L_263073:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_263042
.p2align 0x4
.long 0x518
L_263049:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_263050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x518
L_263050:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_263051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8AA
L_263051:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263052
L_263068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_263069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263069
.p2align 0x4
.long 0x520
L_263069:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_263052:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_263053:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_263054
L_263055:
	cmpq $0x1,%r14
	je L_487436
L_263056:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_263053
.p2align 0x4
L_487436:
L_263057:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263058
L_263066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_263067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263067
.p2align 0x4
.long 0x4463
L_263067:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_263058:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_487438
L_263059:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_263060:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_487437
L_263061:
	movl %r13d,0x0(%r15)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_263062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_487437:
L_263054:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487438:
L_263065:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_263060
.p2align 0x4
.long 0x1
L_263062:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_487442
L_263063:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487442:
L_263064:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl make_1
.hidden make_1
make_1:
L_263074:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_263172
L_263075:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487468
L_263076:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x90(%rbp)
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r11,%r14
	jne L_263078
L_263079:
	movl 0x0(%rbp),%r14d
	cmpl %r14d,%r13d
	je L_487444
L_263080:
	incl %r14d
	jo L_487443
L_263082:
	movl %r14d,0xA0(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movl 0x30(%rbp),%r14d
	movl %r14d,0xD0(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x118(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x128(%rbp)
	addq $0xA0,%rbp
	leaq (L_263083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_1
.p2align 0x4
L_487443:
L_263081:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487444:
L_263094:
	movq 0x80(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r13b
	movb %r13b,0x8(%rbp)
	movq 0x78(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r13b
	movb %r13b,0x9(%rbp)
	movq 0x70(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r13b
	movb %r13b,0xA(%rbp)
	movq 0x68(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	movq %r9,0x90(%rbp)
	cmpq %r11,%r9
	jne L_263078
L_263096:
	testq %r9,%r9
	jz L_487465
L_263097:
	cmpq $0x7FFFFFFF,%r9
	ja L_263152
L_263098:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263099
L_263168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_263169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263169
.p2align 0x4
.long 0x4466
L_263169:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_263099:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq 0x90(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_263100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263100
.p2align 0x4
.long 0x4466
L_263100:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x70(%rbp)
L_263101:
	movq $0x0,0x78(%rbp)
loop_3110:
	movq 0x90(%rbp),%r15
	cmpq %r15,0x78(%rbp)
	jl L_487461
L_263102:
	movq 0x70(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_263078
L_263104:
	cmpl %r13d,0x4(%rbp)
	je L_487445
L_263105:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487445:
L_263106:
	movq 0x98(%rbp),%rdx
	testq %rdx,%rdx
	jz L_487459
L_263107:
	cmpq $0x7FFFFFFF,%rdx
	ja L_487458
L_263108:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_263109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263109
.p2align 0x4
.long 0x4467
L_263109:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x60(%rbp)
L_263110:
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_3111:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487457
.p2align 0x4,,0x7
L_263111:
	movq 0x68(%rbp),%r15
	cmpq 0x98(%rbp),%r15
	jnl L_487446
L_263148:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r10
	movq $0x4799,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x1D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x2,0x8(%r13)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x68(%rbp)
	jmp loop_3111
.p2align 0x4
L_487446:
L_263112:
	movq 0x60(%rbp),%r14
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_263078
L_263114:
	cmpl $0x1,%r11d
	je L_487447
L_263115:
	movl %r11d,0x88(%rbp)
	movq $0x2481,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1D15,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x3EA9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq %r11,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_263116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_487447:
L_263145:
	cmpq $0x0,%r13
	jna L_263086
L_263147:
	movq 0x0(%r14),%r13
	xchgq %r13,%r15
L_263119:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_487454
L_263121:
	testl %r11d,%r11d
	jz L_487453
L_263122:
	movq $0x47B1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x10(%r10)
	movq %r15,0x30(%r10)
	addq $0x40,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movzbl 0x8(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r9d
	movzbl 0x9(%rbp),%r11d
	shll $0x10,%r11d
	orl %r11d,%r9d
	movzbl 0xA(%rbp),%r11d
	shll $0x18,%r11d
	orl %r11d,%r9d
	movl %r9d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq (globalObjptr+0x10768)(%rip),%r11
	movq %r11,0x8(%r10)
	movq 0x40(%rbp),%r11
	movq %r11,0x18(%r10)
	movq 0x38(%rbp),%r11
	movq %r11,0x20(%r10)
	movq %r14,0x28(%r10)
	cmpq $0x0,%r13
	jna L_487452
L_263124:
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq %r10,0x8(%r14)
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jz L_487451
L_263127:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_487450
L_263128:
	movq 0x20(%rbp),%r14
	cmpb $0x2,0x0(%r14)
	jne L_487449
L_263130:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_487448
L_263131:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_263132:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x58,%rbp
	leaq (L_263133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_487448:
L_263140:
	movq $0x1,%r15
	jmp L_263132
.p2align 0x4
L_487449:
	movq %r10,%r15
L_263126:
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487450:
	movq %r10,%r15
	jmp L_263126
.p2align 0x4
L_487451:
	movq %r10,%r15
	jmp L_263126
.p2align 0x4
L_487452:
L_263086:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487453:
L_263142:
	movq (globalObjptr+0x1C18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487454:
L_263078:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487457:
L_263149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_263150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263150
.p2align 0x4
.long 0x446C
L_263150:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_263111
.p2align 0x4
L_487458:
L_263152:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487459:
L_263153:
	movq (globalObjptr+0x6D60)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_263110
.p2align 0x4
L_487461:
L_263154:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	salq $0x5,%r14
	movq 0x68(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	salq $0x5,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x80(%rbp)
	salq $0x5,%r15
	movq 0x18(%r11,%r15,1),%r14
	movq %r14,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_263078
L_263156:
	movl %r14d,0xB8(%rbp)
	movq $0x3AFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	addq $0xB0,%rbp
	leaq (L_263157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_44
.p2align 0x4
L_487465:
L_263171:
	movq (globalObjptr+0x6D58)(%rip),%r13
	movq %r13,0x70(%rbp)
	jmp L_263101
.p2align 0x4
L_487468:
L_263172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_263173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263173
.p2align 0x4
.long 0x1222
L_263173:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_263076
.p2align 0x4
.long 0x4464
L_263083:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263084
L_263092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_263093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263093
.p2align 0x4
.long 0x4465
L_263093:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_263084:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movslq 0x0(%rbp),%r13
	movq 0x58(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_263086
L_263087:
	movq 0x0(%r11,%r13,8),%r10
	cmpq 0x90(%rbp),%r13
	jnb L_263086
L_263089:
	movq 0x88(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r9
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r9,0x8(%r13)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r10,0x10(%r13)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movl $0x2,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_263090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4468
L_263116:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_263117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0xC4C
L_263133:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263134
L_263138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_263139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263139
.p2align 0x4
.long 0x446A
L_263139:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_263134:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_487473
L_263137:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_263136:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487473:
	movq %r14,%r15
	jmp L_263136
.p2align 0x4
.long 0x446D
L_263157:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263158
L_263166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_263167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263167
.p2align 0x4
.long 0x4470
L_263167:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_263158:
	movq $0x448F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2097,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1D05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_263078
L_263160:
	movl %r13d,0xD0(%rbp)
	movq $0x3ECF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_263161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x71E
L_263090:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_263091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4469
L_263117:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263118
L_263143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263144
.p2align 0x4
.long 0x446B
L_263144:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_263118:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_263119
.p2align 0x4
.long 0x446E
L_263161:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_263162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0x490
L_263091:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x446E
L_263162:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263163
L_263164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_263165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263165
.p2align 0x4
.long 0x446F
L_263165:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_263163:
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movq 0xB0(%rbp),%r10
	movq %r10,0x8(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movq 0xA0(%rbp),%r11
	movq %r11,0x10(%r14,%r15,1)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_3110
.text
.p2align 0x4
.globl elabDatBind_0
.hidden elabDatBind_0
elabDatBind_0:
L_263174:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_263489
L_263175:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487511
L_263176:
	movq 0x10(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x88(%rbp)
	cmpq %r15,%r11
	movq %r13,0x80(%rbp)
	jne L_263178
L_263179:
	testq %r11,%r11
	jz L_487509
L_263180:
	cmpq $0x7FFFFFFF,%r11
	ja L_263297
L_263181:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263182
L_263485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_263486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263486
.p2align 0x4
.long 0x4471
L_263486:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_263182:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x161D,%rcx
	movq 0x88(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_263183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263183
.p2align 0x4
.long 0x4471
L_263183:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x8(%rbp)
L_263184:
	movq $0x0,0x10(%rbp)
loop_3112:
	movq 0x88(%rbp),%r15
	cmpq %r15,0x10(%rbp)
	jl L_487503
L_263185:
	movq 0x8(%rbp),%r15
	movq $0x1847,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x88(%rbp)
	movl %r13d,0x80(%rbp)
	cmpq %r11,%r15
	movq %r14,0x38(%rbp)
	jne L_263178
L_263187:
	testq %r11,%r11
	jz L_487501
L_263188:
	cmpq $0x7FFFFFFF,%r11
	ja L_263297
L_263189:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263190
L_263406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_263407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263407
.p2align 0x4
.long 0x4472
L_263407:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_263190:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x161B,%rcx
	movq 0x88(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_263191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263191
.p2align 0x4
.long 0x4472
L_263191:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x40(%rbp)
L_263192:
	movq $0x0,0x78(%rbp)
loop_3113:
	movq 0x88(%rbp),%r15
	cmpq %r15,0x78(%rbp)
	jl L_487498
L_263193:
	movq 0x40(%rbp),%r15
	movq $0x183D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_263178
L_263195:
	movl 0x80(%rbp),%r15d
	cmpl %r15d,%ecx
	jne L_263197
L_263198:
	cmpl $0x0,%r15d
	jl L_487495
L_263199:
	xorl %ecx,%ecx
loop_3114:
	cmpl 0x80(%rbp),%ecx
	jnl L_487479
L_263386:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x10(%rbp)
	movslq %ecx,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_263387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_487479:
L_263200:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x10(%rbp)
	cmpq %r11,%r14
	jne L_263178
L_263202:
	testq %r11,%r11
	jz L_487493
L_263203:
	cmpq $0x7FFFFFFF,%r11
	ja L_263297
L_263204:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263205
L_263382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263383
.p2align 0x4
.long 0x4473
L_263383:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_263205:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x161F,%rcx
	movq 0x10(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263206
.p2align 0x4
.long 0x4473
L_263206:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x18(%rbp)
L_263207:
	movq $0x0,0x30(%rbp)
loop_3115:
	movq 0x10(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_487489
L_263208:
	movq 0x18(%rbp),%r15
	movq $0x1851,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	jne L_263178
L_263210:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x38(%rbp)
	je L_487487
L_263211:
	cmpq $0x7FFFFFFF,%rdx
	ja L_263297
L_263212:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15BF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263213
.p2align 0x4
.long 0x4474
L_263213:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x40(%rbp)
L_263214:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3116:
	cmpq 0x30(%rbp),%r15
	jnl L_487480
L_263299:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movslq %r14d,%r9
	salq $0x4,%r9
	movq 0x18(%rbp),%r14
	movq 0x8(%r14,%r9,1),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq 0x10(%r8),%rdi
	movq 0x40(%rbp),%r14
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	imulq $0x18,%r13
	movq %rsp,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	imulq $0x18,%r11
	movq %rsi,0x8(%r14,%r11,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	imulq $0x18,%r10
	movq %rdi,0x10(%r14,%r10,1)
	incq %r15
	jmp loop_3116
.p2align 0x4
L_487480:
L_263215:
	movq 0x40(%rbp),%r15
	movq $0x889,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_487485
L_263216:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_487484
L_263217:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1621,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263218
.p2align 0x4
.long 0x4475
L_263218:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x38(%rbp)
L_263219:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3117:
	cmpq 0x30(%rbp),%r15
	jnl L_487481
L_263295:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	salq $0x4,%r10
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r10,1),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x38(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3117
.p2align 0x4
L_487481:
L_263220:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263221
L_263293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263294
.p2align 0x4
.long 0x447B
L_263294:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_263221:
	movq 0x38(%rbp),%r15
	movq $0xB79,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_487482
L_263223:
	movl %r13d,0x88(%rbp)
	movq $0x3ABF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_263224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_487482:
L_263178:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487484:
L_263297:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487485:
L_263298:
	movq (globalObjptr+0x6D10)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_263219
.p2align 0x4
L_487487:
L_263301:
	movq (globalObjptr+0x6D08)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_263214
.p2align 0x4
L_487489:
L_263302:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	imulq $0x30,%r14
	movq 0x8(%rbp),%r8
	movq 0x8(%r8,%r14,1),%rsp
	movq %rsp,0x38(%rbp)
	imulq $0x30,%r13
	movq 0x10(%r8,%r13,1),%r14
	movq %r14,0x40(%rbp)
	imulq $0x30,%r11
	movq 0x18(%r8,%r11,1),%r14
	movq %r14,0x78(%rbp)
	imulq $0x30,%r10
	movq 0x20(%r8,%r10,1),%r14
	movq %r14,0x80(%rbp)
	imulq $0x30,%r9
	movq 0x0(%r8,%r9,1),%r14
	movq %r14,0x88(%rbp)
	imulq $0x30,%r15
	movq 0x28(%r8,%r15,1),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r15
	movl %r15d,%r14d
	movl %r14d,0x98(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_263178
L_263304:
	movq $0x3ECD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movl %r14d,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_263305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_487493:
L_263385:
	movq (globalObjptr+0x6D00)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_263207
.p2align 0x4
L_487495:
L_263197:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487498:
L_263392:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0xA8(%rbp)
	addq $0x58,%r12
	addq $0xA0,%rbp
	leaq (L_263393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_487501:
L_263409:
	movq (globalObjptr+0x6CF0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_263192
.p2align 0x4
L_487503:
L_263410:
	movq 0x10(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x98(%rbp)
	movq 0x10(%r13),%r9
	movq %r9,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_263178
L_263412:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%r10),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_263413:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487505
.p2align 0x4,,0x7
L_263414:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487504
L_263415:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_263413
.p2align 0x4
L_487504:
L_263416:
	movq 0xC0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_263417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_487505:
L_263483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_263484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263484
.p2align 0x4
.long 0x449C
L_263484:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_263414
.p2align 0x4
L_487509:
L_263488:
	movq (globalObjptr+0x6CF8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_263184
.p2align 0x4
L_487511:
L_263489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_263490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263490
.p2align 0x4
.long 0x45C
L_263490:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_263176
.p2align 0x4
.long 0x4488
L_263387:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263388
L_263389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_263390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263390
.p2align 0x4
.long 0x4489
L_263390:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_263388:
	movl 0x10(%rbp),%ecx
	jmp loop_3114
.p2align 0x4
.long 0x4476
L_263224:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
loop_3118:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_263178
L_263226:
	cmpl $0x0,%r13d
	jl L_487516
L_263227:
	movl $0x0,0x4C(%rbp)
	movl $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_3119:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x50(%rbp)
	jl L_487515
L_263228:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jnz loop_3118
L_263229:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263230
L_263231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_263232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263232
.p2align 0x4
.long 0x78D
L_263232:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_263230:
	movq $0x20CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x20CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487515:
L_263234:
	movslq 0x50(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x58(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x80(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_263235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_487516:
L_263292:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x447C
L_263305:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_263306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x448A
L_263393:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263394
L_263404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_263405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263405
.p2align 0x4
.long 0x448D
L_263405:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_263394:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_263178
L_263396:
	testl %ecx,%ecx
	jz L_487518
L_263397:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
L_263398:
	movq %r15,0xA0(%rbp)
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_263399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp def_0
.p2align 0x4
L_487518:
L_263403:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_263398
.p2align 0x4
.long 0x448E
L_263417:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263418
L_263481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_263482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263482
.p2align 0x4
.long 0x449B
L_263482:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_263418:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_263419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4477
L_263235:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_263289
	cmpb $0x2,%r15b
	je L_487530
L_263236:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x78(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x54(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_263178
L_263238:
	movl $0x0,0x88(%rbp)
.p2align 0x4,,0x7
loop_3120:
	movl 0x88(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	je L_487528
L_263239:
	movslq %r15d,%r14
	cmpq 0x78(%rbp),%r14
	jnb L_487527
L_263241:
	salq $0x4,%r14
	movq 0x60(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x90(%rbp)
	cmpq $0x1,%r13
	jne L_487523
.p2align 0x4,,0x7
L_263254:
	movl 0x88(%rbp),%r15d
	incl %r15d
	jo L_487522
L_263256:
	movl %r15d,0x88(%rbp)
	jmp loop_3120
.p2align 0x4
L_487522:
L_263255:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487523:
L_263242:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263243
L_263285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_263286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263286
.p2align 0x4
.long 0x447A
L_263286:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_263243:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_263178
L_263245:
	testl %r13d,%r13d
	jz L_487524
L_263246:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
x_879:
	movq %r15,0xA0(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq $0x3ED1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	addq $0x98,%rbp
	leaq (L_263247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_487524:
L_263284:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp x_879
.p2align 0x4
L_487527:
L_263240:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487528:
L_263289:
	movl 0x4C(%rbp),%ecx
L_263260:
	movl %ecx,0x4C(%rbp)
	incl 0x50(%rbp)
	jmp loop_3119
.p2align 0x4
L_487530:
L_263291:
	movq (globalObjptr+0x6D18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x447C
L_263306:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%rdx
	movq %rdx,0xA0(%rbp)
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xA8(%rbp)
	cmpq %r14,%rdx
	jne L_263178
L_263308:
	testq %rdx,%rdx
	jz L_487556
L_263309:
	cmpq $0x7FFFFFFF,%rdx
	ja L_263297
L_263310:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1623,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_263311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263311
.p2align 0x4
.long 0x447D
L_263311:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xB0(%rbp)
L_263312:
	movq $0x0,0xB8(%rbp)
.p2align 0x4,,0x7
loop_3122:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487554
.p2align 0x4,,0x7
L_263313:
	movq 0xB8(%rbp),%r15
	cmpq 0xA8(%rbp),%r15
	jnl L_487535
L_263362:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	imulq $0x18,%r14
	movq 0x90(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0xC0(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r13,%r15,1),%r14
	cmpq $0x1,%r14
	jne L_487534
L_263377:
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
.p2align 0x4,,0x7
L_263368:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487533
.p2align 0x4,,0x7
L_263369:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jz L_487532
L_263370:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0xC8(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
L_263371:
	movq $0x1849,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xD0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xB8(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0xB8(%rbp)
	jmp loop_3122
.p2align 0x4
L_487532:
L_263372:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_263371
.p2align 0x4
L_487533:
L_263373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_263374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263374
.p2align 0x4
.long 0x4485
L_263374:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_263369
.p2align 0x4
L_487534:
L_263363:
	movq %r14,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0xD8(%rbp)
	addq $0x58,%r12
	addq $0xD0,%rbp
	leaq (L_263364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_487535:
L_263314:
	movq 0xB0(%rbp),%r14
	movq $0x184B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq %rdx,%r13
	jne L_263178
L_263316:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x98(%rbp)
	je L_487552
L_263317:
	cmpq $0x7FFFFFFF,%rdx
	ja L_263297
L_263318:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_263319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263319
.p2align 0x4
.long 0x447E
L_263319:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xA0(%rbp)
L_263320:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3123:
	cmpq 0x90(%rbp),%r15
	jnl L_487536
L_263359:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3123
.p2align 0x4
L_487536:
L_263321:
	movq 0xA0(%rbp),%r15
	movq $0xC15,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_487550
L_263322:
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_263297
L_263323:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1625,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_263324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263324
.p2align 0x4
.long 0x447F
L_263324:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x98(%rbp)
L_263325:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3124:
	cmpq 0x90(%rbp),%r15
	jnl L_487537
L_263356:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	salq $0x4,%r10
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14,%r10,1),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x98(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3124
.p2align 0x4
L_487537:
L_263326:
	movq 0x98(%rbp),%r15
	movq $0xB11,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0xC8(%rbp)
	cmpq %r15,%r11
	jne L_263178
L_263328:
	cmpl $0x1,%r13d
	sete %al
	movzbl %al,%eax
	movl %eax,0x80(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_263178
L_263330:
	cmpl %r11d,%r13d
	je L_487538
L_263331:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487538:
L_263332:
	movq 0xC8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_487546
L_263333:
	cmpq $0x7FFFFFFF,%rdx
	ja L_263297
L_263334:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_263335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263335
.p2align 0x4
.long 0x4480
L_263335:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xD0(%rbp)
L_263336:
	movq $0x0,0xD8(%rbp)
.p2align 0x4,,0x7
loop_3125:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487544
.p2align 0x4,,0x7
L_263337:
	movq 0xD8(%rbp),%r10
	cmpq 0xC8(%rbp),%r10
	jnl L_487543
L_263339:
	movl %r10d,%r9d
	movslq %r9d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xC0(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x8(%r10,%r14,1),%r13
	movq 0xA0(%rbp),%r10
	movq 0x0(%r10,%r15,8),%r14
	movq 0xB8(%rbp),%r10
	cmpq $0x1,0x0(%r10)
	je L_487542
L_263340:
	movq $0x209F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r9,%r15
L_263341:
	movq 0xB0(%rbp),%r10
	movq 0x8(%r10),%r9
	movq $0x5CB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x53,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movl $0x0,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x5CD,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r10,0x8(%rsp)
	addq $0x18,%r12
	movq %r8,0x0(%rsp)
	movq 0xA8(%rbp),%rsi
	movl 0x0(%rsi),%edi
	testl %edi,%edi
	jz L_487541
L_263350:
	movq $0x11D3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x10(%r10)
	addq $0x28,%r12
	movb $0x6,%sil
	movzbl %sil,%edi
	movl %edi,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %rsp,0x8(%r10)
	movq %r15,0x18(%r10)
	movq 0x0(%r9),%r11
	movq $0x24DD,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r10,0x0(%rsi)
	movq %r11,0x8(%rsi)
	addq $0x18,%r12
	movq %r9,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r11,1)
	movq %rsi,0x0(%r9)
	movq %r8,%r11
	movq %rsp,%r10
L_263343:
	movq 0x90(%rbp),%r9
	movq 0x10(%r9),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jz L_263345
L_263347:
	movl 0x80(%rbp),%r9d
	testl %r9d,%r9d
	jz L_263346
L_263345:
	movl $0x1,0x0(%r11)
L_263346:
	movq 0xD0(%rbp),%r11
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq 0xD8(%rbp),%r9
	movq %r9,%rsp
	salq $0x5,%rsp
	movq %rsp,%rax
	movq %r10,0x0(%r11,%rax,1)
	movq %r11,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,%r10
	salq $0x5,%r10
	movq %r14,0x8(%r11,%r10,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r9,%r14
	salq $0x5,%r14
	movq %r15,0x10(%r11,%r14,1)
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r9,%r15
	salq $0x5,%r15
	movq %r13,0x18(%r11,%r15,1)
	incq %r9
	movq %r9,0xD8(%rbp)
	jmp loop_3125
.p2align 0x4
L_487541:
	movq %r8,%r11
	movq %rsp,%r10
	jmp L_263343
.p2align 0x4
L_487542:
L_263351:
	movq $0x1,%r11
	movq %r9,%r15
	jmp L_263341
.p2align 0x4
L_487543:
L_263338:
	movq 0xD0(%rbp),%r15
	movq $0xAEF,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x20A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x184D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x184F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq 0x30(%rbp),%r11
	movq %r11,%r8
	salq $0x4,%r8
	movq %r15,0x0(%r13,%r8,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r9,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0x30(%rbp)
	jmp loop_3115
.p2align 0x4
L_487544:
L_263352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_263353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263353
.p2align 0x4
.long 0x4481
L_263353:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_263337
.p2align 0x4
L_487546:
L_263355:
	movq (globalObjptr+0x4DA0)(%rip),%r15
	movq %r15,0xD0(%rbp)
	jmp L_263336
.p2align 0x4
L_487550:
L_263358:
	movq (globalObjptr+0x6D30)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_263325
.p2align 0x4
L_487552:
L_263361:
	movq (globalObjptr+0x6D28)(%rip),%r14
	movq %r14,0xA0(%rbp)
	jmp L_263320
.p2align 0x4
L_487554:
L_263378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_263379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263379
.p2align 0x4
.long 0x4487
L_263379:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_263313
.p2align 0x4
L_487556:
L_263381:
	movq (globalObjptr+0x6D20)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_263312
.p2align 0x4
.long 0x448B
L_263399:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263400
L_263401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_263402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263402
.p2align 0x4
.long 0x448C
L_263402:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_263400:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x78(%rbp)
	jmp loop_3113
.p2align 0x4
.long 0x448F
L_263419:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_263420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4478
L_263247:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_263248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4482
L_263364:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263365
L_263375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_263376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263376
.p2align 0x4
.long 0x4486
L_263376:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_263365:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE8(%rbp)
	movl $0x2,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_263366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4490
L_263420:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263421
L_263479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_263480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263480
.p2align 0x4
.long 0x449A
L_263480:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_263421:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xE8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xF0(%rbp)
	movq %r15,0x8(%r11)
	addq $0x28,%r12
	movl 0xE0(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	movq $0xFE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r11b
	movzbl %r11b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x13FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq 0xD8(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq $0x13FD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xF8(%rbp)
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r15,0x10(%r10)
	addq $0x20,%r12
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_487570
L_263423:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_487569
L_263424:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_263426:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_263427
L_263472:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCE,%r13
	je L_487565
L_263427:
	incl %ecx
	movl %ecx,0xB0(%rbp)
	jo L_263255
L_263428:
	cmpq $0x1,%r15
	je L_487560
L_263429:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_263426
.p2align 0x4
L_487560:
L_263430:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263431
L_263470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_263471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263471
.p2align 0x4
.long 0x4499
L_263471:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_263431:
	movl 0xB0(%rbp),%ecx
L_263432:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_487562
L_263434:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_263436
L_263469:
	movl %ecx,0x0(%r15)
L_263436:
	movq $0x199D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
x_881:
	movq 0xF0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_263437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_487562:
L_263433:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487565:
L_263473:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_263433
L_263474:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_487566
L_263477:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_263476:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp x_881
.p2align 0x4
L_487566:
L_263475:
	movq %r14,%r15
	jmp L_263476
.p2align 0x4
L_487569:
L_263478:
	xorl %ecx,%ecx
	jmp L_263432
.p2align 0x4
L_487570:
L_263422:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4478
L_263248:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_487580
L_263250:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_263254
	cmpq $0x2,%r13
	je L_263259
L_263251:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_487575
L_263262:
	movq 0x0(%r13),%r15
L_263263:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E2,%r14
	je L_487574
	cmpq $0x23E3,%r14
	je L_487573
	cmpq $0x23E4,%r14
	je L_487572
L_263264:
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	addq $0xA0,%rbp
	leaq (L_263265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_487572:
L_263281:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (loop_3121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_487573:
L_263280:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (loop_3121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_487574:
L_263274:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (loop_3121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_487575:
L_263252:
	movq 0x0(%r13),%r15
x_880:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_263254
L_263257:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_263254
L_263259:
	movq 0x80(%rbp),%r15
	movb $0x1,0x0(%r15)
	movl $0x1,%ecx
	jmp L_263260
.p2align 0x4
L_487580:
L_263249:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4483
L_263366:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq 0xD0(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r15,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_263367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4491
L_263437:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263438
L_263467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_263468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263468
.p2align 0x4
.long 0x4498
L_263468:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_263438:
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x1CE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20C1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r15,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,0x0(%r15)
	movq $0x128D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xA8(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0xC0(%rbp),%r13
	movq 0x0(%r13),%r9
	movq $0x20C3,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r8,0x0(%r13)
	movq $0x20A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x1C00)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_263439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
.long 0x4479
L_263265:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_263259
	cmpb $0x2,%r13b
	je L_487585
L_263266:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_263254
	cmpq $0x2,%r14
	je L_263259
L_263267:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_487582
L_263269:
	movq 0x0(%r14),%r15
	jmp L_263263
.p2align 0x4
L_487582:
L_263268:
	movq 0x0(%r14),%r15
	jmp x_880
.p2align 0x4
L_487585:
L_263273:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4478
loop_3121:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r14
	movq %r14,0x90(%rbp)
	cmpq $0x1,%r14
	je L_263254
	cmpq $0x2,%r14
	je L_263259
L_263275:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_487587
L_263277:
	movq 0x0(%r14),%r15
	jmp L_263263
.p2align 0x4
L_487587:
L_263276:
	movq 0x0(%r14),%r15
	jmp x_880
.p2align 0x4
.long 0x4484
L_263367:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq 0xC8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_263368
.p2align 0x4
.long 0x4492
L_263439:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %r14,%rdx
	jne L_263178
L_263441:
	testq %rdx,%rdx
	jz L_487597
L_263442:
	cmpq $0x7FFFFFFF,%rdx
	ja L_263297
L_263443:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1627,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_263444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263444
.p2align 0x4
.long 0x4493
L_263444:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0xB8(%rbp)
L_263445:
	movq $0x0,0xC0(%rbp)
loop_3126:
	movq 0xB0(%rbp),%r15
	cmpq %r15,0xC0(%rbp)
	jl L_487595
L_263446:
	movq 0xB8(%rbp),%r15
	movq $0x1843,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xA0(%rbp)
	cmpq %r14,%rdx
	jne L_263178
L_263448:
	testq %rdx,%rdx
	jz L_487593
L_263449:
	cmpq $0x7FFFFFFF,%rdx
	ja L_263297
L_263450:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_263451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263451
.p2align 0x4
.long 0x4494
L_263451:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0xB0(%rbp)
L_263452:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3127:
	cmpq 0xA0(%rbp),%r15
	jnl L_487590
L_263457:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq %r10,%r14
	imulq $0x18,%r14
	movq 0xB8(%rbp),%r9
	movq 0x0(%r9,%r14,1),%r8
	imulq $0x18,%r10
	movq 0x8(%r9,%r10,1),%r14
	movq 0xB0(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r13
	movq %r8,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r14,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3127
.p2align 0x4
L_487590:
L_263453:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263454
L_263455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_263456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263456
.p2align 0x4
.long 0x4495
L_263456:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_263454:
	movq 0xB0(%rbp),%r15
	movq $0x17E1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r9
	movq $0x1845,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x8(%r14)
	movq %r9,0x10(%r14)
	movq %r11,0x18(%r14)
	movq %r13,0x20(%r14)
	addq $0x30,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x10(%rbp),%r13
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x90(%rbp),%r9
	movq %r9,0x8(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0xF0(%rbp),%r9
	movq %r9,0x10(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x98(%rbp),%r9
	movq %r9,0x18(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq %r14,0x20(%r15,%r10,1)
	movq %r13,%r14
	imulq $0x30,%r14
	movq 0xA8(%rbp),%r10
	movq %r10,0x0(%r15,%r14,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,%r14
	imulq $0x30,%r14
	movq 0xB8(%rbp),%r11
	movq %r11,0x28(%r15,%r14,1)
	incq %r13
	movq %r13,0x10(%rbp)
	jmp loop_3112
.p2align 0x4
L_487593:
L_263459:
	movq (globalObjptr+0x6D40)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_263452
.p2align 0x4
L_487595:
L_263460:
	movq 0xC0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x8(%r11),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_263461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_487597:
L_263466:
	movq (globalObjptr+0x6D38)(%rip),%r15
	movq %r15,0xB8(%rbp)
	jmp L_263445
.p2align 0x4
.long 0x4496
L_263461:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263462
L_263463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_263464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263464
.p2align 0x4
.long 0x4497
L_263464:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_263462:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xC0(%rbp),%r14
	movq %r14,%r10
	imulq $0x18,%r10
	movq 0xD0(%rbp),%r9
	movq %r9,0x0(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r13,%r10,1)
	movq %r14,%r10
	imulq $0x18,%r10
	movq %r11,0x8(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x18,%r13
	movq 0xC8(%rbp),%r11
	movq %r11,0x10(%r15,%r13,1)
	incq %r14
	movq %r14,0xC0(%rbp)
	jmp loop_3126
.text
.p2align 0x4
.globl loop_3937
.hidden loop_3937
loop_3937:
L_263491:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_263549
L_263492:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487616
L_263493:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_487615
L_263494:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1067,%r15
	je L_487609
	cmpq $0x1068,%r15
	je L_487605
	cmpq $0x1069,%r15
	je L_487601
	cmpq $0x106A,%r15
	je L_487600
L_263495:
	movq 0x0(%r13),%r14
	movq 0x0(%rbp),%r15
L_263496:
	movq $0x2379,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487600:
L_263535:
	movq 0x8(%r13),%r14
	movq 0x0(%rbp),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x0(%rbp)
L_263536:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_263537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3937
.p2align 0x4
L_487601:
L_263521:
	movq 0x0(%r13),%r15
L_263522:
	cmpq $0x1,%r15
	je L_487604
L_263523:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_263524:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487603
.p2align 0x4,,0x7
L_263525:
	movq $0x2503,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487602
L_263526:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_263524
.p2align 0x4
L_487602:
L_263527:
	movq 0x10(%rbp),%r13
	movq 0x0(%rbp),%r15
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%rbp)
	xchgq %r13,%r14
L_263528:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_263529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3937
.p2align 0x4
L_487603:
L_263532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_263533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263533
.p2align 0x4
.long 0x4AF
L_263533:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_263525
.p2align 0x4
L_487604:
L_263534:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487605:
L_263512:
	movq 0x0(%rbp),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x0(%rbp)
L_263513:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r13,%r11
	jne L_487608
L_263515:
	decl %ecx
	jo L_487607
L_263517:
loop_3128:
	cmpl $0x0,%ecx
	jl L_487606
L_263518:
	movq %r15,0x18(%rbp)
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x8(%rbp)
	movslq %ecx,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_263519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3937
.p2align 0x4
L_487606:
L_263520:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487607:
L_263516:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487608:
L_263514:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487609:
L_263497:
	movq 0x0(%r13),%r15
rev_367:
	cmpq $0x1,%r15
	je L_487614
L_263498:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_263499:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487613
.p2align 0x4,,0x7
L_263500:
	movq $0x2379,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487610
L_263501:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_263499
.p2align 0x4
L_487610:
L_263502:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
.p2align 0x4,,0x7
L_263503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487612
.p2align 0x4,,0x7
L_263504:
	movq $0x2379,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487611
L_263505:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_263503
.p2align 0x4
L_487611:
L_263506:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487612:
L_263507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_263508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263508
.p2align 0x4
.long 0x45C
L_263508:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_263504
.p2align 0x4
L_487613:
L_263509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_263510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263510
.p2align 0x4
.long 0x4AF
L_263510:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_263500
.p2align 0x4
L_487614:
L_263511:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487615:
L_263548:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487616:
L_263549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_263550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263550
.p2align 0x4
.long 0x460
L_263550:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_263493
.p2align 0x4
.long 0x4B0
L_263537:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263538
L_263546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_263547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263547
.p2align 0x4
.long 0x460
L_263547:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_263538:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_487622
L_263539:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1067,%r15
	je L_487621
	cmpq $0x1068,%r15
	je L_487620
	cmpq $0x1069,%r15
	je L_487619
	cmpq $0x106A,%r15
	je L_487618
L_263540:
	movq 0x0(%r13),%r14
	movq 0x8(%rbp),%r15
	jmp L_263496
.p2align 0x4
L_487618:
L_263544:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%rbp),%r15
	jmp L_263536
.p2align 0x4
L_487619:
L_263543:
	movq 0x0(%r13),%r15
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp L_263522
.p2align 0x4
L_487620:
L_263542:
	movq 0x0(%r13),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%rbp),%r15
	jmp L_263513
.p2align 0x4
L_487621:
L_263541:
	movq 0x0(%r13),%r15
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp rev_367
.p2align 0x4
L_487622:
L_263545:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_263529:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_487624
L_263530:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_263528
.p2align 0x4
L_487624:
L_263531:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9AB
L_263519:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x8(%rbp),%ecx
	jmp loop_3128
.text
.p2align 0x4
.globl x_1994
.hidden x_1994
x_1994:
L_263551:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_263552
L_263617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_263618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263618
.p2align 0x4
.long 0x4AF
L_263618:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_263552:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_263553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x72A
L_263553:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263554
L_263615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263616
.p2align 0x4
.long 0x72D
L_263616:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_263554:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_263561
L_263555:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_263556:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106E,%r13
	je L_487639
L_263557:
	cmpq $0x1,%r15
	je L_487626
L_263558:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_263556
.p2align 0x4
L_487626:
L_263559:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263561
L_263608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263609
.p2align 0x4
.long 0x72D
L_263609:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_263561:
	movq $0x15D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_263562:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_487634
L_263563:
	movq 0x8(%r15),%r14
	movq 0x58(%rbp),%r11
	movq 0x0(%r15),%r10
	movq 0x10(%r10),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r11)
	je L_487630
L_263564:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x24D5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_487627
L_263565:
L_263566:
	movq $0x11C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487627:
L_263567:
	movq 0x30(%rbp),%r11
	cmpq $0x1,0x0(%r11)
L_263569:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x5C7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq $0x1,0x8(%r10)
	movq 0x28(%rbp),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jz L_487629
L_263574:
	movq $0x11D5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x20,%r12
	movb $0x3,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r10,0x8(%r9)
	movq 0x68(%rbp),%r8
	movq %r8,0x10(%r9)
	movq 0x0(%r13),%r8
	movq $0x24D7,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r9,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %rsp,0x0(%r13)
	xchgq %r10,%r14
	movq %r11,%r13
L_263571:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_263566
L_263572:
	movl $0x1,0x0(%r13)
	jmp L_263566
.p2align 0x4
L_487629:
	xchgq %r10,%r14
	movq %r11,%r13
	jmp L_263571
.p2align 0x4
L_487630:
L_263576:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_487631
L_263577:
	movq %r14,%r15
	movq %r11,%r14
L_263578:
	movq $0x11C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487631:
L_263579:
	movq 0x30(%rbp),%r10
	cmpq $0x1,0x0(%r10)
L_263581:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x5C7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq $0x1,0x8(%r9)
	movq 0x28(%rbp),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jz L_487633
L_263586:
	movq $0x11D5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x20,%r12
	movb $0x3,%spl
	movzbl %spl,%esi
	movl %esi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq %r9,0x8(%r8)
	movq 0x68(%rbp),%rsp
	movq %rsp,0x10(%r8)
	movq 0x0(%r15),%rsp
	movq $0x24D7,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r8,0x0(%rsi)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %rsi,0x0(%r15)
	movq %r14,%r15
	movq %r9,%r14
	xchgq %r10,%r13
L_263583:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_263578
L_263584:
	movl $0x1,0x0(%r13)
	jmp L_263578
.p2align 0x4
L_487633:
	movq %r14,%r15
	movq %r9,%r14
	xchgq %r10,%r13
	jmp L_263583
.p2align 0x4
L_487634:
L_263588:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_51
L_263601:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_263602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_51:
new_16:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x24D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_487635
L_263590:
L_263591:
	movq $0x11C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487635:
L_263592:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_263594:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x5C7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_487637
L_263599:
	movq $0x11D5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movb $0x3,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r11,0x8(%r10)
	movq 0x68(%rbp),%r9
	movq %r9,0x10(%r10)
	movq 0x0(%r14),%r9
	movq $0x24D7,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	xchgq %r11,%r15
	movq %r13,%r14
L_263596:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_263591
L_263597:
	movl $0x1,0x0(%r14)
	jmp L_263591
.p2align 0x4
L_487637:
	xchgq %r11,%r15
	movq %r13,%r14
	jmp L_263596
.p2align 0x4
L_487639:
L_263610:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263611
L_263612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_263613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263613
.p2align 0x4
.long 0x72E
L_263613:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_263611:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_263562
.p2align 0x4
.long 0x72B
L_263602:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_263603
L_263606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_263607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_263607
.p2align 0x4
.long 0x72C
L_263607:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_263603:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_16
L_263605:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_16
