/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:17:22 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl loopTypBind_0
.hidden loopTypBind_0
loopTypBind_0:
L_181920:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182037
L_181921:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455316
L_181922:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r11,%r15
	movq %r14,0x18(%rbp)
	jne L_455315
L_181925:
	testq %r11,%r11
	jz L_455314
L_181926:
	cmpq $0x7FFFFFFF,%r11
	ja L_455313
L_181927:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181928
L_182033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182034
.p2align 0x4
.long 0x4E0
L_182034:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_181928:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181929
.p2align 0x4
.long 0x4E0
L_181929:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_181930:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x30(%rbp)
loop_1874:
	movq $0xB5D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_455311
L_181931:
	movq 0x28(%rbp),%r15
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x3A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455311:
L_181932:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_181933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_455313:
L_182035:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455314:
L_182036:
	movq (globalObjptr+0x4EC8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_181930
.p2align 0x4
L_455315:
L_181924:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455316:
L_182037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182038
.p2align 0x4
.long 0x45C
L_182038:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_181922
.p2align 0x4
.long 0x10D8
L_181933:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_181934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
.long 0x1128
L_181934:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181935
L_182031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_182032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182032
.p2align 0x4
.long 0x2528
L_182032:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_181935:
	movq $0x10C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_181924
L_181937:
	decl %r13d
	jo L_455352
L_181939:
	movl %r13d,0x48(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
loop_1875:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455351
.p2align 0x4,,0x7
L_181940:
	movl 0x48(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_455318
L_181941:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp loop_1875
.p2align 0x4
L_455318:
L_181942:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_455350
L_181943:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_181944:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455349
.p2align 0x4,,0x7
L_181945:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_181953
L_181946:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_181947:
	movq 0x48(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %r13,%rsp
	je L_455345
L_181948:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_455342
L_182004:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_153:
	cmpq %r10,%r11
	je L_455339
L_182005:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r15,%r10,1)
	jne L_455319
L_182012:
	incq %r10
	jmp vectorEqualLoop_153
.p2align 0x4
L_455319:
L_182006:
	cmpq $0x1,%r14
	je L_455320
L_182007:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181947
.p2align 0x4
L_455320:
L_182008:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455338
.p2align 0x4,,0x7
L_181953:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_455321
L_181954:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_181944
.p2align 0x4
L_455321:
L_181955:
	movq %r15,0x40(%rbp)
L_181956:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_455337
L_181957:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_181958:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455336
.p2align 0x4,,0x7
L_181959:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_181967
L_181960:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_181961:
	movq 0x50(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_455332
L_181962:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_455329
L_181977:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_152:
	cmpq %r11,%r10
	je L_455326
L_181978:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r15,%r10,1)
	jne L_455322
L_181985:
	incq %r10
	jmp vectorEqualLoop_152
.p2align 0x4
L_455322:
L_181979:
	cmpq $0x1,%r14
	je L_455323
L_181980:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181961
.p2align 0x4
L_455323:
L_181981:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455325
.p2align 0x4,,0x7
L_181967:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_455324
L_181968:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_181958
.p2align 0x4
L_455324:
L_181970:
	movq $0xB5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_181971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455325:
L_181983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181984
.p2align 0x4
.long 0x234B
L_181984:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181967
.p2align 0x4
L_455326:
L_181986:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455328
.p2align 0x4,,0x7
L_181987:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_455327
L_181988:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_181958
.p2align 0x4
L_455327:
L_181989:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_181970
.p2align 0x4
L_455328:
L_181990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181991
.p2align 0x4
.long 0x2525
L_181991:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181987
.p2align 0x4
L_455329:
L_181963:
	cmpq $0x1,%r14
	je L_455330
L_181964:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181961
.p2align 0x4
L_455330:
L_181965:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181967
L_181975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181976
.p2align 0x4
.long 0x234B
L_181976:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181967
.p2align 0x4
L_455332:
L_181992:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455334
.p2align 0x4,,0x7
L_181993:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_455333
L_181994:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_181958
.p2align 0x4
L_455333:
L_181995:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_181970
.p2align 0x4
L_455334:
L_181996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181997
.p2align 0x4
.long 0x2525
L_181997:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181993
.p2align 0x4
L_455336:
L_181999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_182000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182000
.p2align 0x4
.long 0x234B
L_182000:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181959
.p2align 0x4
L_455337:
L_182001:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_181970
.p2align 0x4
L_455338:
L_182010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182011
.p2align 0x4
.long 0x2526
L_182011:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_181953
.p2align 0x4
L_455339:
L_182013:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455341
.p2align 0x4,,0x7
L_182014:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_455340
L_182015:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_181944
.p2align 0x4
L_455340:
L_182016:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_181956
.p2align 0x4
L_455341:
L_182017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182018
.p2align 0x4
.long 0x2527
L_182018:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_182014
.p2align 0x4
L_455342:
L_181949:
	cmpq $0x1,%r14
	je L_455343
L_181950:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181947
.p2align 0x4
L_455343:
L_181951:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181953
L_182002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182003
.p2align 0x4
.long 0x2526
L_182003:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_181953
.p2align 0x4
L_455345:
L_182019:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455347
.p2align 0x4,,0x7
L_182020:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_455346
L_182021:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_181944
.p2align 0x4
L_455346:
L_182022:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_181956
.p2align 0x4
L_455347:
L_182023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182024
.p2align 0x4
.long 0x2527
L_182024:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_182020
.p2align 0x4
L_455349:
L_182026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182027
.p2align 0x4
.long 0x2526
L_182027:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_181945
.p2align 0x4
L_455350:
L_182028:
	movq $0x1,0x40(%rbp)
	jmp L_181956
.p2align 0x4
L_455351:
L_182029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182030
.p2align 0x4
.long 0x2527
L_182030:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_181940
.p2align 0x4
L_455352:
L_181938:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2523
L_181971:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181972
L_181973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181974
.p2align 0x4
.long 0x2524
L_181974:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_181972:
	movq 0x28(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x30(%rbp),%r11
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x30(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp loop_1874
.text
.p2align 0x4
.globl loopDatBind_0
.hidden loopDatBind_0
loopDatBind_0:
L_182039:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182188
L_182040:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455361
L_182041:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x38(%rbp)
	cmpq %r15,%r11
	movq %r13,0x30(%rbp)
	jne L_455360
L_182044:
	testq %r11,%r11
	jz L_455359
L_182045:
	cmpq $0x7FFFFFFF,%r11
	ja L_455358
L_182046:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182047
L_182184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_182185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182185
.p2align 0x4
.long 0xC59
L_182185:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_182047:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158B,%rcx
	movq 0x38(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_182048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182048
.p2align 0x4
.long 0xC59
L_182048:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x10(%rbp)
L_182049:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x40(%rbp)
loop_1876:
	movq $0xB5D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_455356
L_182050:
	movq 0x10(%rbp),%r15
	movq $0x11B9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_182051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopTypBind_0
.p2align 0x4
L_455356:
L_182059:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_182060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_455358:
L_182180:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455359:
L_182187:
	movq (globalObjptr+0x4ED0)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_182049
.p2align 0x4
L_455360:
L_182043:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455361:
L_182188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182189
.p2align 0x4
.long 0x45C
L_182189:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182041
.p2align 0x4
.long 0x1887
L_182051:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182052
L_182057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_182058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182058
.p2align 0x4
.long 0x836
L_182058:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_182052:
	movq $0x11BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x11BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_182053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x2529
L_182060:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182061
L_182182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182183
.p2align 0x4
.long 0x2534
L_182183:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_182061:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x70(%rbp)
	cmpq %r14,%r11
	jne L_182043
L_182063:
	testq %r11,%r11
	jz L_455404
L_182064:
	cmpq $0x7FFFFFFF,%r11
	ja L_182180
L_182065:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182066
L_182177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182178
.p2align 0x4
.long 0x252A
L_182178:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182066:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A3,%rcx
	movq 0x70(%rbp),%rdx
	movq $0x38,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182067
.p2align 0x4
.long 0x252A
L_182067:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x78(%rbp)
L_182068:
	movq $0x1,%r15
	movq $0x1,0x80(%rbp)
	movq $0x0,0x88(%rbp)
loop_1877:
	movq $0xB5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	cmpq %r15,0x88(%rbp)
	jl L_455400
L_182069:
	movq 0x78(%rbp),%r15
	movq $0xB1D,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x10C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x20,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_182043
L_182071:
	decl %r14d
	jo L_455398
L_182073:
	movl %r14d,0x68(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
loop_1878:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455397
.p2align 0x4,,0x7
L_182074:
	movl 0x68(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_455364
L_182075:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	jmp loop_1878
.p2align 0x4
L_455364:
L_182076:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_455396
L_182077:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r13,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_182078:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455395
.p2align 0x4,,0x7
L_182079:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_182087
L_182080:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_182081:
	movq 0x60(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_455391
L_182082:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_455388
L_182138:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_155:
	cmpq %r11,%r10
	je L_455385
L_182139:
	movb 0x0(%r15,%r10,1),%r9b
	cmpb %r9b,0x0(%r13,%r10,1)
	jne L_455365
L_182146:
	incq %r10
	jmp vectorEqualLoop_155
.p2align 0x4
L_455365:
L_182140:
	cmpq $0x1,%r14
	je L_455366
L_182141:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182081
.p2align 0x4
L_455366:
L_182142:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455384
.p2align 0x4,,0x7
L_182087:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_455367
L_182088:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_182078
.p2align 0x4
L_455367:
L_182089:
	movq %r15,0x50(%rbp)
L_182090:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_455383
L_182091:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_182092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455382
.p2align 0x4,,0x7
L_182093:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_182101
L_182094:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_182095:
	movq 0x68(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_455378
L_182096:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_455375
L_182111:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_154:
	cmpq %r10,%r11
	je L_455372
L_182112:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r15,%r10,1)
	jne L_455368
L_182119:
	incq %r10
	jmp vectorEqualLoop_154
.p2align 0x4
L_455368:
L_182113:
	cmpq $0x1,%r14
	je L_455369
L_182114:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182095
.p2align 0x4
L_455369:
L_182115:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455371
.p2align 0x4,,0x7
L_182101:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_455370
L_182102:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_182092
.p2align 0x4
L_455370:
L_182104:
	movq $0xB5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_182105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455371:
L_182117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182118
.p2align 0x4
.long 0x1D4F
L_182118:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182101
.p2align 0x4
L_455372:
L_182120:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455374
.p2align 0x4,,0x7
L_182121:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_455373
L_182122:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_182092
.p2align 0x4
L_455373:
L_182123:
	movq 0x70(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182104
.p2align 0x4
L_455374:
L_182124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182125
.p2align 0x4
.long 0x252C
L_182125:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182121
.p2align 0x4
L_455375:
L_182097:
	cmpq $0x1,%r14
	je L_455376
L_182098:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182095
.p2align 0x4
L_455376:
L_182099:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182101
L_182109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182110
.p2align 0x4
.long 0x1D4F
L_182110:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182101
.p2align 0x4
L_455378:
L_182126:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455380
.p2align 0x4,,0x7
L_182127:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_455379
L_182128:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_182092
.p2align 0x4
L_455379:
L_182129:
	movq 0x70(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182104
.p2align 0x4
L_455380:
L_182130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182131
.p2align 0x4
.long 0x252C
L_182131:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182127
.p2align 0x4
L_455382:
L_182133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182134
.p2align 0x4
.long 0x1D4F
L_182134:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182093
.p2align 0x4
L_455383:
L_182135:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_182104
.p2align 0x4
L_455384:
L_182144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182145
.p2align 0x4
.long 0x252D
L_182145:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182087
.p2align 0x4
L_455385:
L_182147:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455387
.p2align 0x4,,0x7
L_182148:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_455386
L_182149:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_182078
.p2align 0x4
L_455386:
L_182150:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_182090
.p2align 0x4
L_455387:
L_182151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182152
.p2align 0x4
.long 0x252E
L_182152:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182148
.p2align 0x4
L_455388:
L_182083:
	cmpq $0x1,%r14
	je L_455389
L_182084:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182081
.p2align 0x4
L_455389:
L_182085:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182087
L_182136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182137
.p2align 0x4
.long 0x252D
L_182137:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182087
.p2align 0x4
L_455391:
L_182153:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455393
.p2align 0x4,,0x7
L_182154:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_455392
L_182155:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_182078
.p2align 0x4
L_455392:
L_182156:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_182090
.p2align 0x4
L_455393:
L_182157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182158
.p2align 0x4
.long 0x252E
L_182158:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182154
.p2align 0x4
L_455395:
L_182160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182161
.p2align 0x4
.long 0x252D
L_182161:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182079
.p2align 0x4
L_455396:
L_182162:
	movq $0x1,0x50(%rbp)
	jmp L_182090
.p2align 0x4
L_455397:
L_182163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182164
.p2align 0x4
.long 0x252F
L_182164:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182074
.p2align 0x4
L_455398:
L_182072:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455400:
L_182165:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x80(%rbp)
	cmpq $0x1,%r11
	je L_455401
L_182166:
	movq %r11,0xA0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_182167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455401:
L_182176:
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq $0x1,%r14
L_182169:
	movq %r15,0xA8(%rbp)
	movq $0x10D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_182170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455404:
L_182181:
	movq (globalObjptr+0x4ED8)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_182068
.p2align 0x4
.long 0x51B
L_182053:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182054
L_182055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_182056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182056
.p2align 0x4
.long 0x48A
L_182056:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_182054:
	movq $0xB5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBFB
L_182105:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182106
L_182107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_182108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182108
.p2align 0x4
.long 0x252B
L_182108:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_182106:
	movq 0x10(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x40(%rbp),%r11
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x40(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r15
	jmp loop_1876
.p2align 0x4
.long 0x2530
L_182167:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182168
L_182174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_182175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182175
.p2align 0x4
.long 0x2533
L_182175:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_182168:
	movq 0x98(%rbp),%r15
	movq 0xA0(%rbp),%r14
	jmp L_182169
.p2align 0x4
.long 0x2531
L_182170:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182171
L_182172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_182173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182173
.p2align 0x4
.long 0x2532
L_182173:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_182171:
	movq 0x78(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x88(%rbp),%r13
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq %r14,0x80(%rbp)
	jmp loop_1877
.text
.p2align 0x4
.globl tuple_8
.hidden tuple_8
tuple_8:
L_182190:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182211
L_182191:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455419
L_182192:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_455418
L_182194:
	cmpl $0x1,%r13d
	je L_455416
L_182195:
	testl %r13d,%r13d
	jz L_455415
L_182196:
	cmpq $0x0,%r14
	jna L_455414
L_182199:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	decl %r13d
	jo L_455413
L_182201:
	movslq %r13d,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r10
	cmpq $0x1,%r11
	je L_455412
L_182202:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r10
	je L_455411
L_182203:
	movq 0x8(%r10),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_182204:
	movq $0x252D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1C09,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455411:
L_182205:
	movq %r11,%r15
	jmp L_182204
.p2align 0x4
L_455412:
L_182206:
	movq %r10,%r15
	jmp L_182204
.p2align 0x4
L_455413:
L_182200:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455414:
L_182198:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455415:
L_182207:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_182204
.p2align 0x4
L_455416:
L_182208:
	cmpq $0x0,%r14
	jna L_182198
L_182210:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455418:
L_182193:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455419:
L_182211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182212
.p2align 0x4
.long 0x452
L_182212:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_182192
.text
.p2align 0x4
.globl f_0
.hidden f_0
f_0:
L_182213:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182214
L_182222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182223
.p2align 0x4
.long 0x452
L_182223:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182214:
	movq (globalObjptr+0x2578)(%rip),%r15
	cmpl $0x1BC0,0x0(%r15)
	jl L_455421
L_182215:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455421:
L_182216:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_182217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_6
.p2align 0x4
.long 0x4B0
L_182217:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_0
.p2align 0x4
.long 0x522
L_182218:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182219
L_182220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182221
.p2align 0x4
.long 0x4E9
L_182221:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182219:
	movq $0x1EDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_6
.hidden f_6
f_6:
L_182224:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182225
L_182251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182252
.p2align 0x4
.long 0x452
L_182252:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182225:
	movq (globalObjptr+0x2578)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182226
L_182227:
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,%r9
	movslq %r14d,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	jnb L_182229
L_182230:
	movzbl 0x0(%r9,%r8,1),%esp
	incl %r14d
	jo L_182226
L_182231:
	movslq %r14d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	jnb L_182229
L_182233:
	movzbl 0x0(%r10,%r9,1),%r14d
	imull $0x100,%r14d
	jo L_182226
L_182234:
	addl %esp,%r14d
	jo L_182226
L_182235:
	testl %r14d,%r14d
	jz L_455431
L_182236:
	decl %r14d
	movl %r14d,0x8(%rbp)
	jo L_182226
L_182237:
	movl %r13d,%r14d
	addl $0x2,%r14d
	jo L_182226
L_182238:
	movl %r14d,0x0(%r15)
	movq 0x0(%r11),%r15
	movq %r15,%r14
	movslq %r13d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	jnb L_182229
L_182240:
	movzbl 0x0(%r14,%r10,1),%r9d
	incl %r13d
	jo L_182226
L_182241:
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_455426
L_182243:
	movzbl 0x0(%r15,%r14,1),%r13d
	imull $0x100,%r13d
	jo L_182226
L_182244:
	addl %r9d,%r13d
	movl %r13d,0xC(%rbp)
	jo L_455424
L_182245:
	movq %r11,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_6
.p2align 0x4
L_455424:
L_182226:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455426:
L_182229:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455431:
L_182250:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_182246:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182247
L_182248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182249
.p2align 0x4
.long 0x24
L_182249:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182247:
	movq $0x1BBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_1
.hidden f_1
f_1:
L_182253:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182254
L_182282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182283
.p2align 0x4
.long 0x45C
L_182283:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182254:
	movq (globalObjptr+0x2578)(%rip),%r15
	cmpl $0x1504,0x0(%r15)
	jl L_455440
L_182255:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455440:
L_182256:
	movq (globalObjptr+0x2578)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182257
L_182258:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r11
	movslq %r14d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_182260
L_182261:
	movzbl 0x0(%r11,%r10,1),%r9d
	incl %r14d
	jo L_182257
L_182262:
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_182260
L_182264:
	movzbl 0x0(%r13,%r15,1),%r14d
	imull $0x100,%r14d
	jo L_182257
L_182265:
	addl %r9d,%r14d
	jo L_182257
L_182266:
	cmpl $0x0,%r14d
	je L_455444
	cmpl $0x1,%r14d
	je L_455443
L_182267:
	subl $0x2,%r14d
	jo L_455442
L_182268:
	movslq %r14d,%r15
	movq 0x8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_455441
L_182270:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x18(%rbp)
L_182271:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_7
.p2align 0x4
L_455441:
L_182260:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455442:
L_182257:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455443:
L_182281:
	movq $0x1,0x18(%rbp)
	jmp L_182271
.p2align 0x4
L_455444:
L_182280:
	movq $0x0,0x18(%rbp)
	jmp L_182271
.p2align 0x4
.long 0xB9F
L_182272:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182273
L_182278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182279
.p2align 0x4
.long 0xFFC
L_182279:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182273:
	movq $0x12A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_182274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_1
.p2align 0x4
.long 0x51B
L_182274:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182275
L_182276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_182277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182277
.p2align 0x4
.long 0x489
L_182277:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_182275:
	movq $0x1EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_7
.hidden f_7
f_7:
L_182284:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182285
L_182318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182319
.p2align 0x4
.long 0x452
L_182319:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182285:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x2578)(%rip),%r15
	movl 0x0(%r15),%r11d
	movl %r11d,%r10d
	addl $0x2,%r10d
	jo L_182286
L_182287:
	movl %r10d,0x0(%r15)
	movq 0x0(%r14),%r9
	movq %r9,%r8
	movslq %r11d,%rsp
	cmpq 0xFFFFFFFFFFFFFFF0(%r8),%rsp
	jnb L_182289
L_182290:
	movq %rsp,%rax
	movzbl 0x0(%r8,%rax,1),%esp
	incl %r11d
	jo L_182286
L_182291:
	movslq %r11d,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	jnb L_182289
L_182293:
	movzbl 0x0(%r9,%r8,1),%r11d
	imull $0x100,%r11d
	jo L_182286
L_182294:
	addl %esp,%r11d
	jo L_182286
L_182295:
	testl %r11d,%r11d
	jz L_455465
L_182296:
	decl %r11d
	movl %r11d,0x8(%rbp)
	jo L_182286
L_182297:
	movl %r10d,%r11d
	addl $0x2,%r11d
	jo L_182286
L_182298:
	movl %r11d,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,%r11
	movslq %r10d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_182289
L_182300:
	movzbl 0x0(%r11,%r9,1),%r8d
	incl %r10d
	jo L_182286
L_182301:
	movslq %r10d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_182289
L_182303:
	movzbl 0x0(%r15,%r14,1),%r11d
	imull $0x100,%r11d
	jo L_182286
L_182304:
	addl %r8d,%r11d
	jo L_182286
L_182305:
	cmpl $0x0,%r11d
	je L_455457
	cmpl $0x1,%r11d
	je L_455456
L_182306:
	subl $0x2,%r11d
	jo L_455455
L_182307:
	movslq %r11d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_455454
L_182309:
	movq 0x0(%r13,%r15,8),%r14
	movq %r14,0x10(%rbp)
L_182310:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_7
.p2align 0x4
L_455454:
L_182289:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455455:
L_182286:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455456:
L_182316:
	movq $0x1,0x10(%rbp)
	jmp L_182310
.p2align 0x4
L_455457:
L_182315:
	movq $0x0,0x10(%rbp)
	jmp L_182310
.p2align 0x4
L_455465:
L_182317:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48B
L_182311:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182312
L_182313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182314
.p2align 0x4
.long 0x27
L_182314:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_182312:
	movq $0x1BBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x8(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_2
.hidden f_2
f_2:
L_182320:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182321
L_182338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182339
.p2align 0x4
.long 0x452
L_182339:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182321:
	movq (globalObjptr+0x2578)(%rip),%r15
	cmpl $0x4C0,0x0(%r15)
	jl L_455474
L_182322:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455474:
L_182323:
	movq (globalObjptr+0x2578)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182324
L_182325:
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r11
	movslq %r14d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_182327
L_182328:
	movzbl 0x0(%r11,%r10,1),%r9d
	incl %r14d
	jo L_182324
L_182329:
	movslq %r14d,%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jnb L_455477
L_182331:
	movzbl 0x0(%r13,%r11,1),%r14d
	imull $0x100,%r14d
	jo L_182324
L_182332:
	addl %r9d,%r14d
	movl %r14d,0x8(%rbp)
	jo L_455475
L_182333:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_2
.p2align 0x4
L_455475:
L_182324:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455477:
L_182327:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_182334:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182335
L_182336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182337
.p2align 0x4
.long 0x24
L_182337:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182335:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_3
.hidden f_3
f_3:
L_182340:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182341
L_182349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182350
.p2align 0x4
.long 0x452
L_182350:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182341:
	movq (globalObjptr+0x3E90)(%rip),%r15
	cmpl $0x21C,0x0(%r15)
	jl L_455483
L_182342:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455483:
L_182343:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_182344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_8
.p2align 0x4
.long 0x4B0
L_182344:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_3
.p2align 0x4
.long 0x522
L_182345:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182346
L_182347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182348
.p2align 0x4
.long 0x4E9
L_182348:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182346:
	movq $0x1EDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_8
.hidden f_8
f_8:
L_182351:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182352
L_182378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182379
.p2align 0x4
.long 0x452
L_182379:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182352:
	movq (globalObjptr+0x3E90)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182353
L_182354:
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,%r9
	movslq %r14d,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	jnb L_182356
L_182357:
	movzbl 0x0(%r9,%r8,1),%esp
	incl %r14d
	jo L_182353
L_182358:
	movslq %r14d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	jnb L_182356
L_182360:
	movzbl 0x0(%r10,%r9,1),%r14d
	imull $0x100,%r14d
	jo L_182353
L_182361:
	addl %esp,%r14d
	jo L_182353
L_182362:
	testl %r14d,%r14d
	jz L_455493
L_182363:
	decl %r14d
	movl %r14d,0x8(%rbp)
	jo L_182353
L_182364:
	movl %r13d,%r14d
	addl $0x2,%r14d
	jo L_182353
L_182365:
	movl %r14d,0x0(%r15)
	movq 0x0(%r11),%r15
	movq %r15,%r14
	movslq %r13d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	jnb L_182356
L_182367:
	movzbl 0x0(%r14,%r10,1),%r9d
	incl %r13d
	jo L_182353
L_182368:
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_455488
L_182370:
	movzbl 0x0(%r15,%r14,1),%r13d
	imull $0x100,%r13d
	jo L_182353
L_182371:
	addl %r9d,%r13d
	movl %r13d,0xC(%rbp)
	jo L_455486
L_182372:
	movq %r11,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_8
.p2align 0x4
L_455486:
L_182353:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455488:
L_182356:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455493:
L_182377:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_182373:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182374
L_182375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182376
.p2align 0x4
.long 0x24
L_182376:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182374:
	movq $0x1BBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_4
.hidden f_4
f_4:
L_182380:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182381
L_182409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182410
.p2align 0x4
.long 0x45C
L_182410:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182381:
	movq (globalObjptr+0x3E90)(%rip),%r15
	cmpl $0x198,0x0(%r15)
	jl L_455502
L_182382:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455502:
L_182383:
	movq (globalObjptr+0x3E90)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182384
L_182385:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r11
	movslq %r14d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_182387
L_182388:
	movzbl 0x0(%r11,%r10,1),%r9d
	incl %r14d
	jo L_182384
L_182389:
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_182387
L_182391:
	movzbl 0x0(%r13,%r15,1),%r14d
	imull $0x100,%r14d
	jo L_182384
L_182392:
	addl %r9d,%r14d
	jo L_182384
L_182393:
	cmpl $0x0,%r14d
	je L_455506
	cmpl $0x1,%r14d
	je L_455505
L_182394:
	subl $0x2,%r14d
	jo L_455504
L_182395:
	movslq %r14d,%r15
	movq 0x8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_455503
L_182397:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x18(%rbp)
L_182398:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_9
.p2align 0x4
L_455503:
L_182387:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455504:
L_182384:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455505:
L_182408:
	movq $0x1,0x18(%rbp)
	jmp L_182398
.p2align 0x4
L_455506:
L_182407:
	movq $0x0,0x18(%rbp)
	jmp L_182398
.p2align 0x4
.long 0xB9F
L_182399:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182400
L_182405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182406
.p2align 0x4
.long 0xFFC
L_182406:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182400:
	movq $0x12A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_182401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_4
.p2align 0x4
.long 0x51B
L_182401:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182402
L_182403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_182404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182404
.p2align 0x4
.long 0x489
L_182404:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_182402:
	movq $0x1EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_9
.hidden f_9
f_9:
L_182411:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182412
L_182445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182446
.p2align 0x4
.long 0x452
L_182446:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182412:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x3E90)(%rip),%r15
	movl 0x0(%r15),%r11d
	movl %r11d,%r10d
	addl $0x2,%r10d
	jo L_182413
L_182414:
	movl %r10d,0x0(%r15)
	movq 0x0(%r14),%r9
	movq %r9,%r8
	movslq %r11d,%rsp
	cmpq 0xFFFFFFFFFFFFFFF0(%r8),%rsp
	jnb L_182416
L_182417:
	movq %rsp,%rax
	movzbl 0x0(%r8,%rax,1),%esp
	incl %r11d
	jo L_182413
L_182418:
	movslq %r11d,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	jnb L_182416
L_182420:
	movzbl 0x0(%r9,%r8,1),%r11d
	imull $0x100,%r11d
	jo L_182413
L_182421:
	addl %esp,%r11d
	jo L_182413
L_182422:
	testl %r11d,%r11d
	jz L_455527
L_182423:
	decl %r11d
	movl %r11d,0x8(%rbp)
	jo L_182413
L_182424:
	movl %r10d,%r11d
	addl $0x2,%r11d
	jo L_182413
L_182425:
	movl %r11d,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,%r11
	movslq %r10d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_182416
L_182427:
	movzbl 0x0(%r11,%r9,1),%r8d
	incl %r10d
	jo L_182413
L_182428:
	movslq %r10d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_182416
L_182430:
	movzbl 0x0(%r15,%r14,1),%r11d
	imull $0x100,%r11d
	jo L_182413
L_182431:
	addl %r8d,%r11d
	jo L_182413
L_182432:
	cmpl $0x0,%r11d
	je L_455519
	cmpl $0x1,%r11d
	je L_455518
L_182433:
	subl $0x2,%r11d
	jo L_455517
L_182434:
	movslq %r11d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_455516
L_182436:
	movq 0x0(%r13,%r15,8),%r14
	movq %r14,0x10(%rbp)
L_182437:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_9
.p2align 0x4
L_455516:
L_182416:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455517:
L_182413:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455518:
L_182443:
	movq $0x1,0x10(%rbp)
	jmp L_182437
.p2align 0x4
L_455519:
L_182442:
	movq $0x0,0x10(%rbp)
	jmp L_182437
.p2align 0x4
L_455527:
L_182444:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48B
L_182438:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182439
L_182440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182441
.p2align 0x4
.long 0x27
L_182441:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_182439:
	movq $0x1BBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x8(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_5
.hidden f_5
f_5:
L_182447:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182448
L_182465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182466
.p2align 0x4
.long 0x452
L_182466:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182448:
	movq (globalObjptr+0x3E90)(%rip),%r15
	cmpl $0xA8,0x0(%r15)
	jl L_455536
L_182449:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455536:
L_182450:
	movq (globalObjptr+0x3E90)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182451
L_182452:
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r11
	movslq %r14d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_182454
L_182455:
	movzbl 0x0(%r11,%r10,1),%r9d
	incl %r14d
	jo L_182451
L_182456:
	movslq %r14d,%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jnb L_455539
L_182458:
	movzbl 0x0(%r13,%r11,1),%r14d
	imull $0x100,%r14d
	jo L_182451
L_182459:
	addl %r9d,%r14d
	movl %r14d,0x8(%rbp)
	jo L_455537
L_182460:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_5
.p2align 0x4
L_455537:
L_182451:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455539:
L_182454:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_182461:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182462
L_182463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182464
.p2align 0x4
.long 0x24
L_182464:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182462:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1201
.hidden x_1201
x_1201:
L_182467:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182468
L_182481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182482
.p2align 0x4
.long 0x4E9
L_182482:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182468:
	movq 0x10(%rbp),%r15
loop_1879:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_455549
	cmpq $0x2,%r14
	je L_455545
L_182469:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movb 0x0(%rbp),%r15b
	movb %r15b,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_182470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1201
.p2align 0x4
L_455545:
L_182475:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movw 0x0(%r13),%r15w
	movw %r15w,%r11w
	andw $0x1,%r11w
	jnz L_455548
L_182476:
	movzbw 0x0(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movw %r15w,0x0(%r13)
	movw 0x0(%r14),%r15w
	movw %r15w,%r14w
	andw $0x3,%r14w
	cmpw $0x1,%r14w
	je L_455547
	cmpw $0x2,%r14w
	je L_455546
L_182477:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455546:
L_182479:
	shrw $0x2,%r15w
	movb %r15b,%r14b
	cmpb 0x0(%rbp),%r14b
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455547:
L_182472:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455548:
L_182480:
	shrw $0x1,%r15w
	movb %r15b,%r14b
	cmpb 0x0(%rbp),%r14b
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455549:
L_182474:
	movzbw 0x0(%rbp),%r15w
	shlw $0x2,%r15w
	orw $0x2,%r15w
	movw %r15w,0x0(%rbp)
	jmp up_2
.p2align 0x4
.long 0x4E6
L_182470:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r14d
	movl %r14d,0x4(%rbp)
	testl %r14d,%r14d
	jz L_182472
L_182473:
	movq 0x10(%rbp),%r15
	jmp loop_1879
.text
.p2align 0x4
.globl x_1202
.hidden x_1202
x_1202:
L_182483:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182513
L_182484:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455564
L_182485:
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_455552
	jmp *jumpTable_610(,%rax,8)
.data
.p2align 0x4
jumpTable_610:
.quad L_455563,L_455562,L_455561,L_455560,L_455559,L_455558,L_455557,L_455556,L_455555,L_455554,L_455553
.text
.p2align 0x4
L_455552:
L_182486:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x18(%rbp),%r15
x_572:
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	addq $0x10,%rbp
	leaq (L_182487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455553:
L_182507:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5658)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455554:
L_182506:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455555:
L_182505:
	movq (globalObjptr+0xEE40)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455556:
L_182504:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455557:
L_182503:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455558:
L_182497:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5650)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455559:
L_182496:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x20(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455560:
L_182495:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x20(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455561:
L_182494:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455562:
L_182493:
	movq (globalObjptr+0xEE40)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455563:
L_182492:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455564:
L_182513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182514
.p2align 0x4
.long 0x4EA
L_182514:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182485
.p2align 0x4
.long 0x4B0
L_182487:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B
L_182508:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B
L_182498:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x522
L_182488:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182489
L_182490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182491
.p2align 0x4
.long 0x8E7
L_182491:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182489:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movl 0x10(%rbp),%r13d
	movl %r13d,0x18(%rbp)
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_182509:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182510
L_182511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182512
.p2align 0x4
.long 0x49D
L_182512:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182510:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_182499:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182500
L_182501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182502
.p2align 0x4
.long 0x49D
L_182502:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182500:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1203
.hidden x_1203
x_1203:
L_182515:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182545
L_182516:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455581
L_182517:
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_455569
	jmp *jumpTable_611(,%rax,8)
.data
.p2align 0x4
jumpTable_611:
.quad L_455580,L_455579,L_455578,L_455577,L_455576,L_455575,L_455574,L_455573,L_455572,L_455571,L_455570
.text
.p2align 0x4
L_455569:
L_182518:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x18(%rbp),%r15
x_573:
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	addq $0x10,%rbp
	leaq (L_182519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455570:
L_182539:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5658)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455571:
L_182538:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455572:
L_182537:
	movq (globalObjptr+0xEE40)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455573:
L_182536:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455574:
L_182535:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455575:
L_182529:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5650)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455576:
L_182528:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x20(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455577:
L_182527:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x20(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455578:
L_182526:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455579:
L_182525:
	movq (globalObjptr+0xEE40)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455580:
L_182524:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455581:
L_182545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182546
.p2align 0x4
.long 0x4EA
L_182546:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182517
.p2align 0x4
.long 0x4B0
L_182519:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B
L_182540:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B
L_182530:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x522
L_182520:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182521
L_182522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182523
.p2align 0x4
.long 0x8E7
L_182523:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182521:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movl 0x10(%rbp),%r13d
	movl %r13d,0x18(%rbp)
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_182541:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182542
L_182543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182544
.p2align 0x4
.long 0x49D
L_182544:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182542:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_182531:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182532
L_182533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182534
.p2align 0x4
.long 0x49D
L_182534:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182532:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_0
.hidden layout_0
layout_0:
L_182547:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182586
L_182548:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455590
L_182550:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_182551
L_182568:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC97,%r14
	je L_455588
	cmpq $0xC98,%r14
	je L_455587
	cmpq $0xC99,%r14
	je L_455586
L_182551:
	movq (globalObjptr+0xCA00)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_182552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_455586:
L_182571:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x8(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	addq $0x18,%rbp
	leaq (L_182572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455587:
L_182570:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_455588:
L_182569:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_455590:
L_182586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182587
.p2align 0x4
.long 0x452
L_182587:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_182550
.p2align 0x4
.long 0x4B0
L_182552:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x522
L_182572:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x522
L_182553:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x522
L_182573:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_0
.p2align 0x4
.long 0x522
L_182554:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182555
L_182566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182567
.p2align 0x4
.long 0x4E9
L_182567:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182555:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_182556:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_455595
L_182558:
	cmpq $0x1,%r14
	je L_455592
L_182559:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182556
.p2align 0x4
L_455592:
L_182560:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182561
L_182564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182565
.p2align 0x4
.long 0x49D
L_182565:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182561:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_455593
L_182562:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455593:
L_182563:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455595:
L_182557:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_182574:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182575
L_182584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182585
.p2align 0x4
.long 0x2C
L_182585:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_182575:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_182576:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_182557
L_182577:
	cmpq $0x1,%r14
	je L_455597
L_182578:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182576
.p2align 0x4
L_455597:
L_182579:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182580
L_182582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182583
.p2align 0x4
.long 0x4E7
L_182583:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_182580:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_182563
L_182581:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl mkCanonical_0
.hidden mkCanonical_0
mkCanonical_0:
L_182588:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182589
L_182682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182683
.p2align 0x4
.long 0x452
L_182683:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182589:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_182590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x1
L_182590:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_182626
L_182591:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_182592:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455637
.p2align 0x4,,0x7
L_182593:
	movq 0x18(%rbp),%r14
	cmpq (globalObjptr+0xA058)(%rip),%r14
	je L_455635
L_182594:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x28(%rbp)
	testq %r13,%r13
	jnz vectorEqual_69
L_182666:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_159:
	cmpq %r15,0x28(%rbp)
	je L_455633
L_182667:
	movq (globalObjptr+0xA058)(%rip),%r14
	movq 0x18(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455603
L_182672:
	incq %r15
	jmp vectorEqualLoop_159
.p2align 0x4
L_455603:
L_182668:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455632
.p2align 0x4,,0x7
vectorEqual_69:
	movq (globalObjptr+0xA050)(%rip),%r14
	cmpq %r14,0x18(%rbp)
	je L_455630
L_182596:
	cmpq $0x1,0x28(%rbp)
	jne vectorEqual_70
L_182653:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_158:
	cmpq %r15,0x28(%rbp)
	je L_455628
L_182654:
	movq (globalObjptr+0xA050)(%rip),%r14
	movq 0x18(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455604
L_182659:
	incq %r15
	jmp vectorEqualLoop_158
.p2align 0x4
L_455604:
L_182655:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455627
.p2align 0x4,,0x7
vectorEqual_70:
	movq (globalObjptr+0xA048)(%rip),%r14
	cmpq %r14,0x18(%rbp)
	je L_182617
L_182598:
	cmpq $0x2,0x28(%rbp)
	jne canonName_0
L_182608:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_156:
	cmpq 0x28(%rbp),%r15
	je L_455610
L_182609:
	movq (globalObjptr+0xA048)(%rip),%r14
	movq 0x18(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455605
L_182614:
	incq %r15
	jmp vectorEqualLoop_156
.p2align 0x4
L_455605:
L_182610:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455609
.p2align 0x4,,0x7
canonName_0:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_455606
L_182600:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_182592
.p2align 0x4
L_455606:
L_182601:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_182602:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455608
.p2align 0x4,,0x7
L_182603:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_455607
L_182604:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_182602
.p2align 0x4
L_455607:
L_182605:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp toString_537
.p2align 0x4
L_455608:
L_182606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182607
.p2align 0x4
.long 0x65A
L_182607:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182603
.p2align 0x4
L_455609:
L_182612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182613
.p2align 0x4
.long 0x65A
L_182613:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp canonName_0
.p2align 0x4
L_455610:
L_182615:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455625
.p2align 0x4,,0x7
L_182617:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_455621
L_182618:
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r15
	cmpq (globalObjptr+0xA048)(%rip),%r15
	je L_182637
L_182619:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x2,%r14
	jne L_455618
L_182629:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_157:
	cmpq %r14,%r13
	je L_455615
L_182630:
	movq (globalObjptr+0xA048)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_455611
L_182634:
	incq %r13
	jmp vectorEqualLoop_157
.p2align 0x4
L_455611:
L_182631:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455612
L_182632:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182592
.p2align 0x4
L_455612:
L_182633:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
L_182623:
	cmpq $0x1,%r15
	je L_455613
L_182624:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182602
.p2align 0x4
L_455613:
L_182626:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455614
L_182627:
	movq $0x1,0x10(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182602
.p2align 0x4
L_455614:
L_182628:
	movq $0x1,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182602
.p2align 0x4
L_455615:
L_182635:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455617
.p2align 0x4,,0x7
L_182637:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA048)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_455616
L_182638:
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	jmp L_182592
.p2align 0x4
L_455616:
L_182639:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA048)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182602
.p2align 0x4
L_455617:
L_182640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182641
.p2align 0x4
.long 0x799
L_182641:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_182637
.p2align 0x4
L_455618:
L_182620:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455619
L_182621:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182592
.p2align 0x4
L_455619:
L_182622:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182623
.p2align 0x4
L_455621:
L_182643:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455623
L_182644:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455622
L_182645:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0x7C0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_182592
.p2align 0x4
L_455622:
L_182646:
	movq $0x1,0x10(%rbp)
	movq (globalObjptr+0xA048)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182602
.p2align 0x4
L_455623:
L_182647:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_182626
L_182648:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182592
.p2align 0x4
L_455625:
L_182650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182651
.p2align 0x4
.long 0x1002
L_182651:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182617
.p2align 0x4
L_455627:
L_182657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182658
.p2align 0x4
.long 0x5DF
L_182658:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp vectorEqual_70
.p2align 0x4
L_455628:
L_182660:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455629
L_182661:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182592
.p2align 0x4
L_455629:
L_182662:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182623
.p2align 0x4
L_455630:
L_182663:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455631
L_182664:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182592
.p2align 0x4
L_455631:
L_182665:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182623
.p2align 0x4
L_455632:
L_182670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182671
.p2align 0x4
.long 0x5DF
L_182671:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp vectorEqual_69
.p2align 0x4
L_455633:
L_182673:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455634
L_182674:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182592
.p2align 0x4
L_455634:
L_182675:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182623
.p2align 0x4
L_455635:
L_182676:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455636
L_182677:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x18(%rbp)
	jmp L_182592
.p2align 0x4
L_455636:
L_182678:
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_182623
.p2align 0x4
L_455637:
L_182679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182680
.p2align 0x4
.long 0x65A
L_182680:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182593
.text
.p2align 0x4
.globl fromString_24
.hidden fromString_24
fromString_24:
L_182684:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182685
L_182739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182740
.p2align 0x4
.long 0x452
L_182740:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182685:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x0,0x18(%rbp)
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_1880:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455658
.p2align 0x4,,0x7
L_182686:
	movq 0x20(%rbp),%r15
	cmpq 0x8(%rbp),%r15
	jnl L_455640
L_182734:
	movq 0x0(%rbp),%r14
	cmpb $0x2F,0x0(%r14,%r15,1)
	je L_455639
L_182735:
	incq %r15
	movq %r15,0x20(%rbp)
	jmp loop_1880
.p2align 0x4
L_455639:
L_182736:
	movq %r15,%r14
	incq %r14
	movq 0x18(%rbp),%r13
	subq %r13,%r15
	movq $0x225,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r11)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_1880
.p2align 0x4
L_455640:
L_182687:
	movq 0x18(%rbp),%r14
	subq %r14,%r15
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_182688:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455657
.p2align 0x4,,0x7
L_182689:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_455641
L_182690:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_182688
.p2align 0x4
L_455641:
L_182691:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_182692:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455656
.p2align 0x4,,0x7
L_182693:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	testq %r13,%r13
	jnz L_182695
L_182727:
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jne L_455650
L_182729:
L_182702:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_455642
L_182703:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_182692
.p2align 0x4
L_455642:
L_182704:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_182705:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455649
.p2align 0x4,,0x7
L_182706:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_455643
L_182707:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_182705
.p2align 0x4
L_455643:
L_182708:
	movq 0x8(%rbp),%r11
	cmpq (globalObjptr+0xA058)(%rip),%r11
	je L_182716
L_182709:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	testq %r10,%r10
	jnz L_455647
L_182711:
	xorq %r13,%r13
	xchgq %r10,%r14
.p2align 0x4,,0x7
vectorEqualLoop_160:
	cmpq %r13,%r14
	je L_455645
L_182712:
	movq (globalObjptr+0xA058)(%rip),%r11
	movq 0x8(%rbp),%r9
	movb 0x0(%r9,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_455644
L_182714:
	incq %r13
	jmp vectorEqualLoop_160
.p2align 0x4
L_455644:
L_182713:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455645:
L_182716:
	cmpq $0x1,0x10(%rbp)
	je L_455646
L_182717:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455646:
L_182718:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455647:
L_182710:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455649:
L_182720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182721
.p2align 0x4
.long 0x45C
L_182721:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182706
.p2align 0x4
L_455650:
L_182695:
	movq 0x28(%rbp),%r15
	testq %r15,%r15
	jnz L_455653
L_182726:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_182699:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1881:
	cmpq 0x28(%rbp),%r15
	jnl L_455651
L_182724:
	movq %r15,%r14
	addq 0x18(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1881
.p2align 0x4
L_455651:
L_182700:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455652
.p2align 0x4,,0x7
L_182701:
	movq 0x8(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_182702
.p2align 0x4
L_455652:
L_182722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182723
.p2align 0x4
.long 0x45C
L_182723:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182701
.p2align 0x4
L_455653:
L_182696:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455654
L_182697:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182698
.p2align 0x4
.long 0x97A
L_182698:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x8(%rbp)
	jmp L_182699
.p2align 0x4
L_455654:
L_182725:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455656:
L_182730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182731
.p2align 0x4
.long 0x45C
L_182731:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182693
.p2align 0x4
L_455657:
L_182732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182733
.p2align 0x4
.long 0x45C
L_182733:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182689
.p2align 0x4
L_455658:
L_182737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182738
.p2align 0x4
.long 0x48F
L_182738:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182686
.text
.p2align 0x4
.globl toString_537
.hidden toString_537
toString_537:
L_182741:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182742
L_182869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182870
.p2align 0x4
.long 0x799
L_182870:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_182742:
	movq 0x0(%rbp),%r13
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_182751
L_182743:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_182745
L_182746:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_161:
	cmpq %r14,%r15
	je L_455661
L_182747:
	movq 0x0(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455660
L_182749:
	incq %r14
	jmp vectorEqualLoop_161
.p2align 0x4
L_455660:
L_182745:
	movq $0xF,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455661:
L_182751:
	movl 0x8(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_182756
L_182752:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_182777
L_182753:
	movq 0x0(%r11),%r15
	cmpq %r15,(globalObjptr+0xA058)(%rip)
	je L_182745
L_182754:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	testq %r14,%r14
	jnz L_182756
L_182860:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_164:
	cmpq %r14,%r13
	je L_182745
L_182861:
	movq (globalObjptr+0xA058)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_455662
L_182863:
	incq %r13
	jmp vectorEqualLoop_164
.p2align 0x4
L_455662:
L_182756:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_182777
L_182757:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_182758:
	cmpq %r15,(globalObjptr+0xA058)(%rip)
	je L_455691
L_182759:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	testq %r14,%r14
	jnz L_182761
L_182849:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_163:
	cmpq %r14,%r13
	je L_455664
L_182850:
	movq (globalObjptr+0xA058)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_455663
L_182852:
	incq %r13
	jmp vectorEqualLoop_163
.p2align 0x4
L_455663:
L_182761:
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_182762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455664:
L_182853:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455665
L_182854:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_182758
.p2align 0x4
L_455665:
L_182777:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455688
L_182778:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455687
L_182779:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_182780:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455686
.p2align 0x4,,0x7
L_182781:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_455666
L_182782:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_182780
.p2align 0x4
L_455666:
L_182783:
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
L_182784:
	cmpq $0x1,%r15
	je L_455685
L_182785:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_182786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455684
.p2align 0x4,,0x7
L_182787:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_455667
L_182788:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_182786
.p2align 0x4
L_455667:
L_182789:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_455677
L_182790:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
L_182791:
	andq $0x3,%r15
	jz L_455668
L_182792:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_455668:
L_182793:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq 0x10(%rbp),%r15
.p2align 0x4,,0x7
L_182794:
	incq %r15
	addq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r13
	je L_455669
L_182795:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_182794
.p2align 0x4
L_455669:
L_182796:
	testq %r15,%r15
	jz L_455676
L_182797:
	cmpq $0x7FFFFFFF,%r15
	ja L_455675
L_182798:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_182799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182799
.p2align 0x4
.long 0xC57
L_182799:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_182800:
	movq 0x20(%rbp),%r8
	movq 0x0(%r8),%r10
	movq 0x10(%r8),%r14
	xorq %r13,%r13
	movl $0x1,%ecx
	xorq %r15,%r15
	movq 0x10(%rbp),%r11
	movq 0x28(%rbp),%r9
.p2align 0x4,,0x7
loop_1882:
	cmpq 0x30(%rbp),%r15
	jnl L_455673
.p2align 0x4,,0x7
loop_1883:
	cmpq %r11,%r13
	jl L_455672
L_182807:
	cmpl $0x1,%ecx
	je L_455671
L_182808:
	cmpq $0x1,%r9
	je L_455670
L_182809:
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%r9
	movq 0x10(%r8),%r14
	movq 0x8(%r8),%r11
	movq 0x0(%r8),%r10
	xorq %r13,%r13
	movl $0x1,%ecx
	jmp loop_1883
.p2align 0x4
L_455670:
L_182810:
	movq (globalObjptr+0x6F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455671:
L_182811:
	movq $0x1,%r11
	movq 0x18(%rbp),%r14
	xorq %r10,%r10
	xorq %r13,%r13
	xorl %ecx,%ecx
	jmp loop_1883
.p2align 0x4
L_455672:
L_182812:
	movq %r10,%r8
	addq %r13,%r8
	movq 0x38(%rbp),%rsp
	movb 0x0(%r14,%r8,1),%sil
	movb %sil,0x0(%rsp,%r15,1)
	incq %r13
	incq %r15
	jmp loop_1882
.p2align 0x4
L_455673:
L_182801:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182802
L_182804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_182805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182805
.p2align 0x4
.long 0xE58
L_182805:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_182802:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_182803:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_455675:
L_182814:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455676:
L_182815:
	movq (globalObjptr+0x6E8)(%rip),%r14
	movq %r14,0x38(%rbp)
	jmp L_182800
.p2align 0x4
L_455677:
L_182816:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	testq %r14,%r14
	jnz L_182818
L_182830:
	cmpq %r15,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_455678
L_182832:
	movq %r11,%r15
	jmp L_182803
.p2align 0x4
L_455678:
L_182818:
	movq 0x28(%rbp),%rdx
	testq %rdx,%rdx
	jz L_455682
L_182819:
	cmpq $0x7FFFFFFF,%rdx
	ja L_182814
L_182820:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182821
.p2align 0x4
.long 0xC9D
L_182821:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x20(%rbp)
L_182822:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1884:
	cmpq 0x28(%rbp),%r15
	jnl L_455679
L_182827:
	movq 0x10(%rbp),%r14
	addq %r15,%r14
	movq 0x20(%rbp),%r13
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1884
.p2align 0x4
L_455679:
L_182823:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182824
L_182825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182826
.p2align 0x4
.long 0x52D
L_182826:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182824:
	movq 0x20(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_182803
.p2align 0x4
L_455682:
L_182829:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_182822
.p2align 0x4
L_455684:
L_182833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182834
.p2align 0x4
.long 0x4DF
L_182834:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_182787
.p2align 0x4
L_455685:
L_182835:
	movq $0x3,0x18(%rbp)
	movl $0x0,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_182836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_455686:
L_182840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182841
.p2align 0x4
.long 0x4DF
L_182841:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_182781
.p2align 0x4
L_455687:
L_182842:
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_182784
.p2align 0x4
L_455688:
L_182843:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455689
L_182844:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_182780
.p2align 0x4
L_455689:
L_182845:
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_182784
.p2align 0x4
L_455691:
L_182856:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_182777
L_182857:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_182758
.p2align 0x4
.long 0x65D
L_182762:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movl 0x38(%rbp),%r11d
	movl %r11d,0xC(%rbp)
	movq 0x40(%rbp),%r10
	movq %r10,0x30(%rbp)
L_182763:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_182764
L_182765:
	cmpq $0x1,0x8(%r10)
	jne L_182764
L_182766:
	testl %r11d,%r11d
	jnz L_182764
L_182767:
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_455706
L_182768:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_182764
L_182770:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_162:
	cmpq %r14,%r15
	je L_455703
L_182771:
	movq 0x28(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455702
L_182773:
	incq %r14
	jmp vectorEqualLoop_162
.p2align 0x4
L_455702:
L_182764:
	movq $0x11,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455703:
L_182774:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_182777
L_182775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_182758
.p2align 0x4
L_455706:
L_182846:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_182777
L_182847:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_182758
.p2align 0x4
.long 0x5B0
L_182836:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182837
L_182838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182839
.p2align 0x4
.long 0x45C
L_182839:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182837:
	movq 0x10(%rbp),%r15
	jmp L_182803
.text
.p2align 0x4
.globl x_1204
.hidden x_1204
x_1204:
L_182871:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182872
L_183327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_183328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183328
.p2align 0x4
.long 0x453
L_183328:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182872:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_455713
L_182873:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1488,%r13
	je L_455712
L_182875:
	movq 0x30(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	leaq L_182925(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_182876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455712:
L_182874:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455713:
L_183326:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2535
L_182876:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182877
L_183324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183325
.p2align 0x4
.long 0x2565
L_183325:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_182877:
	movl 0x60(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_455715
L_182878:
	movq $0xF,%r15
L_182879:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2913,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455715:
L_182880:
	movq (globalObjptr+0xD348)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_182881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x72F
L_182925:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182926
L_182927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_182928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182928
.p2align 0x4
.long 0x71A
L_182928:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_182926:
	movq 0x50(%rbp),%r15
	jmp L_182879
.p2align 0x4
.long 0x2535
L_182881:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x68(%rbp),%r15d
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	testl %r15d,%r15d
	movl %r15d,0x60(%rbp)
	jnz L_455718
L_182882:
	movq (globalObjptr+0xD348)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_182883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_1
.p2align 0x4
L_455718:
L_183323:
	movq (globalObjptr+0xD348)(%rip),%r15
	movq %r15,0x50(%rbp)
L_182885:
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (fromString_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2536
L_182883:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_182884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x2535
fromString_10:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182886
L_183321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183322
.p2align 0x4
.long 0x255A
L_183322:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_182886:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_455753
L_182888:
	movb 0x0(%r14,%r15,1),%r13b
	testb %r13b,%r13b
	jz L_455719
L_182889:
	movq (globalObjptr+0x750)(%rip),%r15
	jmp L_182879
.p2align 0x4
L_455719:
L_182890:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x58(%rbp),%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_182891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_openDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182891
.p2align 0x4
.long 0x71A
L_182891:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182892
L_183319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183320
.p2align 0x4
.long 0x2550
L_183320:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_182892:
	movq 0x58(%rbp),%r15
	testq %r15,%r15
	jz L_455742
L_182893:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_455741
L_182894:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x1,0x60(%rbp)
loop_1886:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_182895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_clearErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182895
.p2align 0x4
.long 0x2537
L_182895:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x58(%rbp),%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_182896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_readDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182896
.p2align 0x4
.long 0x2537
L_182896:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182897
L_183288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183289
.p2align 0x4
.long 0x254A
L_183289:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_182897:
	movq 0x68(%rbp),%r15
	testq %r15,%r15
	jz L_455727
L_182898:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_455726
L_182899:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1887:
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movslq %ecx,%r14
	movq %r14,0x78(%rbp)
	movb 0x0(%r15,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_455720
L_182900:
	incl %ecx
	jmp loop_1887
.p2align 0x4
L_455720:
L_182901:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182902
L_183114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_183115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183115
.p2align 0x4
.long 0x2538
L_183115:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_182902:
	movq 0x78(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455724
L_182903:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_182904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182904
.p2align 0x4
.long 0x2538
L_182904:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1888:
	cmpq 0x78(%rbp),%r15
	jnl L_455721
L_183112:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x68(%rbp),%r14
	movq 0x70(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1888
.p2align 0x4
L_455721:
L_182905:
	movq 0x68(%rbp),%r14
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r14)
	cmpq (globalObjptr+0xA050)(%rip),%r14
	je loop_1886
L_182906:
	cmpq $0x1,0x78(%rbp)
	jne vectorEqual_71
L_183106:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_166:
	cmpq 0x78(%rbp),%r15
	je loop_1886
L_183107:
	movq (globalObjptr+0xA050)(%rip),%r14
	movq 0x68(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne vectorEqual_238
L_183109:
	incq %r15
	jmp vectorEqualLoop_166
.p2align 0x4
vectorEqual_238:
vectorEqual_71:
	movq (globalObjptr+0xA048)(%rip),%r14
	cmpq %r14,0x68(%rbp)
	je loop_1886
L_182908:
	cmpq $0x2,0x78(%rbp)
	jne L_182910
L_183100:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_165:
	cmpq %r15,0x78(%rbp)
	je loop_1886
L_183101:
	movq 0x68(%rbp),%r14
	movq (globalObjptr+0xA048)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455722
L_183103:
	incq %r15
	jmp vectorEqualLoop_165
.p2align 0x4
L_455722:
L_182910:
	leaq L_183095(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_182911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp joinDirFile_0
.p2align 0x4
L_455724:
L_183084:
	movq $0x5,0x50(%rbp)
L_182920:
	movq $0x3E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	leaq L_182925(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_182921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455726:
L_183044:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_182920
.p2align 0x4
L_455727:
L_183117:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183118
.p2align 0x4
.long 0x2537
L_183118:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl %eax,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183119
L_183286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183287
.p2align 0x4
.long 0x254A
L_183287:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183119:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_183044
L_183120:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (globalObjptr+0x76B0)(%rip),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_183121:
	cmpl 0x68(%rbp),%ecx
	je L_455736
L_183122:
	cmpq $0x1,%r15
	je L_455728
L_183123:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_183121
.p2align 0x4
L_455728:
L_183124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x68(%rbp),%edi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183125
.p2align 0x4
.long 0x254C
L_183125:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183126
L_183143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183144
.p2align 0x4
.long 0x254C
L_183144:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183126:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	testq %r15,%r15
	jz L_455734
L_183127:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1893:
	movslq %ecx,%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455729
L_183128:
	incl %ecx
	jmp loop_1893
.p2align 0x4
L_455729:
L_183129:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183130
L_183140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183141
.p2align 0x4
.long 0x254C
L_183141:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183130:
	movq 0x50(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183084
L_183131:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183132
.p2align 0x4
.long 0x254C
L_183132:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1894:
	cmpq 0x50(%rbp),%r15
	jnl L_455730
L_183138:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x70(%rbp),%r14
	movq 0x60(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1894
.p2align 0x4
L_455730:
L_183133:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183134
L_183136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183137
.p2align 0x4
.long 0x254D
L_183137:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183134:
	movq 0x70(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183135:
	movl 0x68(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_182920
.p2align 0x4
L_455734:
L_183142:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183135
.p2align 0x4
L_455736:
L_183145:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183146
L_183283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183284
.p2align 0x4
.long 0x2537
L_183284:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183146:
	movq $0x3E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	leaq L_182925(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455741:
L_183291:
	movq (globalObjptr+0x740)(%rip),%r15
	jmp L_182879
.p2align 0x4
L_455742:
L_183292:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_183293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183293
.p2align 0x4
.long 0x719
L_183293:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl %eax,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183294
L_183317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183318
.p2align 0x4
.long 0x2563
L_183318:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183294:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183291
L_183295:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x50(%rbp),%edi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183296
.p2align 0x4
.long 0x2563
L_183296:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183297
L_183314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183315
.p2align 0x4
.long 0x2548
L_183315:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183297:
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	testq %r15,%r15
	jz L_455748
L_183298:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1895:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455743
L_183299:
	incl %ecx
	jmp loop_1895
.p2align 0x4
L_455743:
L_183300:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183301
L_183311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183312
.p2align 0x4
.long 0x254E
L_183312:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183301:
	movq 0x58(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455746
L_183302:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183303
.p2align 0x4
.long 0x254E
L_183303:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1896:
	cmpq 0x58(%rbp),%r15
	jnl L_455744
L_183309:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x68(%rbp),%r14
	movq 0x60(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1896
.p2align 0x4
L_455744:
L_183304:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183305
L_183307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183308
.p2align 0x4
.long 0x2564
L_183308:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183305:
	movq 0x68(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183306:
	movl 0x50(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_182879
.p2align 0x4
L_455746:
L_183310:
	movq $0x5,%r15
	jmp L_182879
.p2align 0x4
L_455748:
L_183313:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183306
.p2align 0x4
L_455753:
L_182887:
	movq $0x3,%r15
	jmp L_182879
.p2align 0x4
.long 0x2536
L_182884:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_182885
.p2align 0x4
.long 0x2539
L_182911:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_182912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x72F
L_183095:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182920
L_183097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183098
.p2align 0x4
.long 0x2550
L_183098:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_182920
.p2align 0x4
.long 0x2535
L_182921:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182922
L_182923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_182924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182924
.p2align 0x4
.long 0x71A
L_182924:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_182922:
	movq 0x50(%rbp),%r15
	jmp L_182879
.p2align 0x4
.long 0x2551
L_183147:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183148
L_183281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183282
.p2align 0x4
.long 0x2562
L_183282:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183148:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_455757
L_183149:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_183150:
	leaq L_183195(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_183151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455757:
L_183280:
	movq $0x1,%r14
	xchgq %r14,%r15
L_183162:
	movq $0x2911,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x253A
L_182912:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x88(%rbp),%r15d
	movq 0x90(%rbp),%r14
	movq %r14,0x88(%rbp)
	testl %r15d,%r15d
	movl %r15d,0x80(%rbp)
	jnz L_455759
L_182913:
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_182914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fullPath_0
.p2align 0x4
L_455759:
L_183099:
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_182917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fullPath_0
.p2align 0x4
.long 0x2552
L_183151:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183152
L_183278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183279
.p2align 0x4
.long 0x2561
L_183279:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183152:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455764
L_183153:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455760
L_183154:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455760:
L_183155:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
L_183156:
	cmpq $0x1,%r15
	je L_455763
L_183157:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_183158:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455762
.p2align 0x4,,0x7
L_183159:
	movq $0x2381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_183162
L_183160:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183158
.p2align 0x4
L_455762:
L_183163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_183164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183164
.p2align 0x4
.long 0x1E16
L_183164:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_183159
.p2align 0x4
L_455763:
L_183165:
	movq $0x1,%r15
	jmp L_183162
.p2align 0x4
L_455764:
L_183166:
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_183167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x72F
L_183195:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183196
L_183199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183200
.p2align 0x4
.long 0x2559
L_183200:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183196:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455766
L_183197:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455766:
L_183198:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183156
.p2align 0x4
.long 0x2539
L_182914:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_182915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getcwd_0
.p2align 0x4
.long 0x2539
L_182917:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (fromString_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2552
L_183167:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x40(%rbp)
	testl %r15d,%r15d
	jnz L_455768
L_183168:
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_1
.p2align 0x4
L_455768:
L_183277:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
L_183171:
	movq (globalObjptr+0xF5C0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp joinDirFile_0
.p2align 0x4
.long 0x253A
L_182915:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_182916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fullPath_0
.p2align 0x4
.long 0x253B
fromString_11:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182918
L_183093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183094
.p2align 0x4
.long 0x254F
L_183094:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_182918:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_455783
L_182929:
	movb 0x0(%r15,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_455769
L_182930:
	movq (globalObjptr+0x750)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_182920
.p2align 0x4
L_455769:
L_182931:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x80(%rbp),%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_182932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_lstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182932
.p2align 0x4
.long 0x253C
L_182932:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_455773
L_182933:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_182934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182934
.p2align 0x4
.long 0x253C
L_182934:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x88,%rbp
	leaq (L_182935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182935
.p2align 0x4
.long 0x253C
L_182935:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x88,%rbp
	leaq (L_182936+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182936
.p2align 0x4
.long 0x253C
L_182936:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl %eax,0x80(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182937
.p2align 0x4
.long 0x253D
L_182937:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl %eax,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182938
L_183063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183064
.p2align 0x4
.long 0x253D
L_183064:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_182938:
	cmpl $0x0,0x84(%rbp)
	jl L_455770
L_182939:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182940
.p2align 0x4
.long 0x253D
L_182940:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x90,%rbp
	leaq (L_182941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182941
.p2align 0x4
.long 0x253D
L_182941:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x90,%rbp
	leaq (L_182942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182942
.p2align 0x4
.long 0x253D
L_182942:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x90,%rbp
	leaq (L_182943+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182943
.p2align 0x4
.long 0x253D
L_182943:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x90(%rbp)
	leaq L_183058(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x90,%rbp
	leaq (L_182944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_455770:
L_183049:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183044
L_183050:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x3,0x50(%rbp)
	jmp L_182920
.p2align 0x4
L_455773:
L_183065:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183066
.p2align 0x4
.long 0x2548
L_183066:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl %eax,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183067
L_183091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183092
.p2align 0x4
.long 0x2548
L_183092:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183067:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183044
L_183068:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x50(%rbp),%edi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183069
.p2align 0x4
.long 0x2548
L_183069:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183070
L_183088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183089
.p2align 0x4
.long 0x254E
L_183089:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183070:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	testq %r15,%r15
	jz L_455779
L_183071:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1891:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455774
L_183072:
	incl %ecx
	jmp loop_1891
.p2align 0x4
L_455774:
L_183073:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183074
L_183085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183086
.p2align 0x4
.long 0x254C
L_183086:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183074:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183084
L_183075:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183076
.p2align 0x4
.long 0x254C
L_183076:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1892:
	cmpq 0x60(%rbp),%r15
	jnl L_455775
L_183082:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x70(%rbp),%r14
	movq 0x68(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1892
.p2align 0x4
L_455775:
L_183077:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183078
L_183080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183081
.p2align 0x4
.long 0x254D
L_183081:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183078:
	movq 0x70(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183079:
	movl 0x50(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_182920
.p2align 0x4
L_455779:
L_183087:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183079
.p2align 0x4
L_455783:
L_182919:
	movq $0x3,0x50(%rbp)
	jmp L_182920
.p2align 0x4
.long 0x2552
L_183169:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_183170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x2553
L_183172:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xF5C8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp joinDirFile_0
.p2align 0x4
.long 0x253A
L_182916:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_182917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkRelative_0
.p2align 0x4
.long 0x253E
L_182944:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x98(%rbp)
	movq %r11,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq %r13,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_182945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72F
L_183058:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183049
L_183060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183061
.p2align 0x4
.long 0x2548
L_183061:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183049
.p2align 0x4
.long 0x2552
L_183170:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_183171
.p2align 0x4
.long 0x2554
L_183173:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	leaq L_183271(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_0
.p2align 0x4
.long 0x253F
L_182945:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_182946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182946
.p2align 0x4
.long 0x2540
L_182946:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA8(%rbp)
	leaq L_183054(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0xA8,%rbp
	leaq (L_182947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x2553
L_183174:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_0
.p2align 0x4
.long 0x72F
L_183271:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183272
L_183275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183276
.p2align 0x4
.long 0x2559
L_183276:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183272:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455786
L_183273:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455786:
L_183274:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183156
.p2align 0x4
.long 0x253F
L_182947:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_182948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72F
L_183054:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183049
L_183056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183057
.p2align 0x4
.long 0x2548
L_183057:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183049
.p2align 0x4
.long 0x2554
L_183175:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	leaq L_183195(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (first_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tokens_0
.p2align 0x4
.long 0x253F
L_182948:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_182949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182949
.p2align 0x4
.long 0x2540
L_182949:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA8(%rbp)
	leaq L_183047(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0xA8,%rbp
	leaq (L_182950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x2553
first_0:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183176
L_183269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183270
.p2align 0x4
.long 0x2560
L_183270:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183176:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455789
L_183177:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (first_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tokens_0
.p2align 0x4
L_455789:
L_183266:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455790
L_183267:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455790:
L_183268:
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp L_183156
.p2align 0x4
.long 0x253F
L_182950:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_182951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72F
L_183047:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183049
L_183052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183053
.p2align 0x4
.long 0x2548
L_183053:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183049
.p2align 0x4
.long 0x2555
first_1:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183178
L_183264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183265
.p2align 0x4
.long 0x255F
L_183265:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183178:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_455793
L_183179:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x5,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
L_455793:
L_183261:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455794
L_183262:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455794:
L_183263:
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp L_183156
.p2align 0x4
.long 0x2541
L_182951:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182952
L_183045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183046
.p2align 0x4
.long 0x254B
L_183046:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_182952:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183044
L_182953:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x80(%rbp),%edi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182954
.p2align 0x4
.long 0x2542
L_182954:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	testl %eax,%eax
	jnz loop_1886
L_182956:
	leaq L_183035(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (fromString_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2556
L_183180:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9C8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x928)(%rip),%r15
	movq %r15,0x60(%rbp)
L_183181:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	leaq L_183255(%rip),%r15
	movq %r15,0x8(%rbp)
	movq $0x5,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
.long 0x2539
fromString_12:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182957
L_183033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183034
.p2align 0x4
.long 0x2542
L_183034:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182957:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_455808
L_182959:
	movb 0x0(%r15,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_455798
L_182960:
	movq (globalObjptr+0x750)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_182920
.p2align 0x4
L_455798:
L_182961:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_stat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182962
.p2align 0x4
.long 0x2543
L_182962:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_455802
L_182963:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182964
.p2align 0x4
.long 0x2543
L_182964:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x78,%rbp
	leaq (L_182965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182965
.p2align 0x4
.long 0x2543
L_182965:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x78,%rbp
	leaq (L_182966+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182966
.p2align 0x4
.long 0x2543
L_182966:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl %eax,0x70(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182967
.p2align 0x4
.long 0x2544
L_182967:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl %eax,0x74(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182968
L_183010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183011
.p2align 0x4
.long 0x2544
L_183011:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182968:
	cmpl $0x0,0x74(%rbp)
	jl L_455799
L_182969:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182970
.p2align 0x4
.long 0x2544
L_182970:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x80,%rbp
	leaq (L_182971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182971
.p2align 0x4
.long 0x2544
L_182971:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x80,%rbp
	leaq (L_182972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182972
.p2align 0x4
.long 0x2544
L_182972:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x80,%rbp
	leaq (L_182973+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182973
.p2align 0x4
.long 0x2544
L_182973:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x80(%rbp)
	leaq L_183005(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x80,%rbp
	leaq (L_182974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_455799:
L_182996:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_455800
L_182997:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x3,0x50(%rbp)
	jmp L_182920
.p2align 0x4
L_455800:
L_182991:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_182920
.p2align 0x4
L_455802:
L_183012:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183013
.p2align 0x4
.long 0x2537
L_183013:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl %eax,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183014
L_183031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183032
.p2align 0x4
.long 0x254A
L_183032:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183014:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_182991
L_183015:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x68(%rbp),%edi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183016
.p2align 0x4
.long 0x2537
L_183016:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
	testq %rax,%rax
	jz loop_1886
L_183017:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1889:
	movslq %ecx,%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455803
L_183018:
	incl %ecx
	jmp loop_1889
.p2align 0x4
L_455803:
L_183019:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183020
L_183027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183028
.p2align 0x4
.long 0x2549
L_183028:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183020:
	movq 0x70(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455804
L_183021:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183022
.p2align 0x4
.long 0x2549
L_183022:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1890:
	cmpq 0x70(%rbp),%r15
	jnl loop_1886
L_183025:
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq 0x68(%rbp),%r10
	movb 0x0(%r10,%r11,1),%r13b
	movb %r13b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1890
.p2align 0x4
L_455804:
L_183026:
	movq $0x5,0x50(%rbp)
	jmp L_182920
.p2align 0x4
L_455808:
L_182958:
	movq $0x3,0x50(%rbp)
	jmp L_182920
.p2align 0x4
.long 0x72F
L_183035:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183037
L_183041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183042
.p2align 0x4
.long 0x2543
L_183042:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183037:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_183038
L_183039:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC98,%r14
	je loop_1886
L_183038:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_182920
.p2align 0x4
.long 0x2557
L_183182:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183183
L_183253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183254
.p2align 0x4
.long 0x7D1
L_183254:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183183:
	movq 0x30(%rbp),%r13
	movq 0x68(%rbp),%r11
	cmpq %r11,%r13
	je L_183211
L_183184:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq %r15,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_455816
L_183201:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_167:
	cmpq %r15,%r14
	je L_455815
L_183202:
	movq 0x68(%rbp),%r13
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455812
L_183209:
	incq %r14
	jmp vectorEqualLoop_167
.p2align 0x4
L_455812:
L_183203:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183204
L_183207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183208
.p2align 0x4
.long 0x255A
L_183208:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183204:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_455813
L_183205:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_183181
.p2align 0x4
L_455813:
L_183188:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF5D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	leaq L_183195(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x60,%rbp
	leaq (L_183189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455815:
L_183211:
	movq 0x60(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x30(%rbp)
	leaq L_183195(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x5,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
L_455816:
L_183185:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_183188
L_183186:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_183181
.p2align 0x4
.long 0x72F
L_183255:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183256
L_183259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183260
.p2align 0x4
.long 0x2559
L_183260:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183256:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455820
L_183257:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455820:
L_183258:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183156
.p2align 0x4
.long 0x2545
L_182974:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x88(%rbp)
	movq %r11,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq %r13,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_182975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72F
L_183005:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182996
L_183007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183008
.p2align 0x4
.long 0x2548
L_183008:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_182996
.p2align 0x4
.long 0x2558
L_183189:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183190
L_183193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183194
.p2align 0x4
.long 0x2559
L_183194:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183190:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455823
L_183191:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455823:
L_183192:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183156
.p2align 0x4
.long 0x2554
L_183212:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x920)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x860)(%rip),%r15
	movq %r15,0x60(%rbp)
L_183213:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	leaq L_183246(%rip),%r15
	movq %r15,0x8(%rbp)
	movq $0x5,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
.long 0x2546
L_182975:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_182976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182976
.p2align 0x4
.long 0x2547
L_182976:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x98(%rbp)
	leaq L_183001(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x98,%rbp
	leaq (L_182977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x255B
L_183214:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183215
L_183244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183245
.p2align 0x4
.long 0x255E
L_183245:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183215:
	movq 0x68(%rbp),%r13
	movq 0x40(%rbp),%r11
	cmpq %r11,%r13
	je L_183238
L_183216:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	cmpq %r15,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_455831
L_183227:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_168:
	cmpq %r14,%r15
	je L_455828
L_183228:
	movq 0x40(%rbp),%r13
	movq 0x68(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455825
L_183235:
	incq %r14
	jmp vectorEqualLoop_168
.p2align 0x4
L_455825:
L_183229:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183230
L_183233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183234
.p2align 0x4
.long 0x255C
L_183234:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183230:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_455826
L_183231:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_183213
.p2align 0x4
L_455826:
L_183220:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF5D8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	leaq L_183195(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x60,%rbp
	leaq (L_183221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455828:
L_183236:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183238
L_183241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183242
.p2align 0x4
.long 0x255D
L_183242:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183238:
	movq 0x60(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq $0x1221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x30(%rbp),%r13d
	movzbl %r14b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2381,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_455829
L_183239:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455829:
L_183240:
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_183158
.p2align 0x4
L_455831:
L_183217:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_183220
L_183218:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_183213
.p2align 0x4
.long 0x72F
L_183246:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183247
L_183250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183251
.p2align 0x4
.long 0x2559
L_183251:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183247:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455835
L_183248:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455835:
L_183249:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183156
.p2align 0x4
.long 0x2546
L_182977:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_182978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72F
L_183001:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182996
L_183003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183004
.p2align 0x4
.long 0x2548
L_183004:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_182996
.p2align 0x4
.long 0x2558
L_183221:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183222
L_183225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183226
.p2align 0x4
.long 0x2559
L_183226:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183222:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455838
L_183223:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183150
.p2align 0x4
L_455838:
L_183224:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183156
.p2align 0x4
.long 0x2546
L_182978:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_182979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182979
.p2align 0x4
.long 0x2547
L_182979:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x98(%rbp)
	leaq L_182994(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x98,%rbp
	leaq (L_182980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x2546
L_182980:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_182981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72F
L_182994:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182996
L_182999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183000
.p2align 0x4
.long 0x2548
L_183000:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_182996
.p2align 0x4
.long 0x2545
L_182981:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182982
L_182992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182993
.p2align 0x4
.long 0x2544
L_182993:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182982:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_182991
L_182983:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x70(%rbp),%edi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182984
.p2align 0x4
.long 0x2543
L_182984:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl %eax,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182985
L_182988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182989
.p2align 0x4
.long 0x2544
L_182989:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182985:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz loop_1886
L_182986:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	jmp loop_1886
.text
.p2align 0x4
.globl concat_1
.hidden concat_1
concat_1:
L_183329:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183330
L_183396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183397
.p2align 0x4
.long 0x460
L_183397:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_183330:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_183331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x4B0
L_183331:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_183332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x4E1
L_183332:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movl 0x30(%rbp),%r11d
	movl %r11d,0x14(%rbp)
	movq 0x38(%rbp),%r10
	movq %r10,0x28(%rbp)
	testl %r11d,%r11d
	jnz L_183336
L_183333:
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_183342
L_183334:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_183336
L_183337:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_169:
	cmpq %r14,%r15
	je L_455846
L_183338:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455845
L_183340:
	incq %r14
	jmp vectorEqualLoop_169
.p2align 0x4
L_455845:
L_183336:
	movq $0xF,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455846:
L_183342:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455865
L_183343:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_183344:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455864
.p2align 0x4,,0x7
L_183345:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455847
L_183346:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_183344
.p2align 0x4
L_455847:
L_183347:
	movq 0x30(%rbp),%r13
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_455862
L_183348:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_455860
L_183368:
	xorq %r13,%r13
	xchgq %r13,%r14
.p2align 0x4,,0x7
vectorEqualLoop_170:
	cmpq %r15,%r14
	je L_455855
L_183369:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455848
L_183373:
	incq %r14
	jmp vectorEqualLoop_170
.p2align 0x4
L_455848:
L_183370:
	cmpq $0x1,0x28(%rbp)
	je L_455854
L_183371:
	movq 0x18(%rbp),%r15
L_183351:
	cmpq $0x1,%r15
	je L_455853
L_183352:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183353:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455852
.p2align 0x4,,0x7
L_183354:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455849
L_183355:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183353
.p2align 0x4
L_455849:
L_183356:
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_183357:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455851
.p2align 0x4,,0x7
L_183358:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455850
L_183359:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183357
.p2align 0x4
L_455850:
L_183361:
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movl 0x10(%rbp),%r14d
	movl %r14d,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp toString_537
.p2align 0x4
L_455851:
L_183362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_183363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183363
.p2align 0x4
.long 0xA2D
L_183363:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_183358
.p2align 0x4
L_455852:
L_183364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_183365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183365
.p2align 0x4
.long 0xB66
L_183365:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_183354
.p2align 0x4
L_455853:
L_183366:
	movq 0x28(%rbp),%r15
	jmp L_183361
.p2align 0x4
L_455854:
L_183372:
	movq 0x18(%rbp),%r15
	jmp L_183361
.p2align 0x4
L_455855:
L_183374:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455859
L_183375:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183376:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455858
.p2align 0x4,,0x7
L_183377:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455856
L_183378:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183376
.p2align 0x4
L_455856:
L_183380:
	cmpq $0x1,0x28(%rbp)
	je L_183361
	jmp L_183351
.p2align 0x4
L_455858:
L_183383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_183384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183384
.p2align 0x4
.long 0xB66
L_183384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_183377
.p2align 0x4
L_455859:
L_183385:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_183380
.p2align 0x4
L_455860:
L_183349:
	cmpq $0x1,0x28(%rbp)
	je L_455861
L_183350:
	movq 0x18(%rbp),%r15
	jmp L_183351
.p2align 0x4
L_455861:
L_183367:
	movq 0x18(%rbp),%r15
	jmp L_183361
.p2align 0x4
L_455862:
L_183386:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455863
L_183387:
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183376
.p2align 0x4
L_455863:
L_183388:
	movq $0x1,%r11
	xchgq %r11,%r15
	jmp L_183380
.p2align 0x4
L_455864:
L_183389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183390
.p2align 0x4
.long 0x9CC
L_183390:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183345
.p2align 0x4
L_455865:
L_183391:
	cmpq $0x1,0x28(%rbp)
	je L_183361
L_183392:
	jmp L_183351
.text
.p2align 0x4
.globl joinDirFile_0
.hidden joinDirFile_0
joinDirFile_0:
L_183398:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183399
L_183462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183463
.p2align 0x4
.long 0x460
L_183463:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_183399:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_183400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x4B0
L_183400:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183401
L_183460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_183461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183461
.p2align 0x4
.long 0x525
L_183461:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_183401:
	cmpq $0x1,0x18(%rbp)
	jne x_574
L_183447:
	movq 0x0(%rbp),%r13
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_183458
L_183448:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz x_574
L_183450:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_172:
	cmpq %r15,%r14
	je L_455890
L_183451:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x0(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455871
L_183456:
	incq %r14
	jmp vectorEqualLoop_172
.p2align 0x4
L_455871:
L_183452:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_574
L_183454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_183455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183455
.p2align 0x4
.long 0x525
L_183455:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
x_574:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455888
L_183402:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_183403:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455887
.p2align 0x4,,0x7
L_183404:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_455872
L_183405:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_183403
.p2align 0x4
L_455872:
L_183406:
	movq 0x30(%rbp),%r13
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_455885
L_183407:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_455883
L_183424:
	xorq %r13,%r13
	xchgq %r13,%r14
.p2align 0x4,,0x7
vectorEqualLoop_171:
	cmpq %r15,%r14
	je L_455879
L_183425:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455873
L_183429:
	incq %r14
	jmp vectorEqualLoop_171
.p2align 0x4
L_455873:
L_183426:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455878
L_183427:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183410:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455877
.p2align 0x4,,0x7
L_183411:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455874
L_183412:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_183410
.p2align 0x4
L_455874:
L_183413:
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_183414:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455876
.p2align 0x4,,0x7
L_183415:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455875
L_183416:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183414
.p2align 0x4
L_455875:
L_183418:
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movl 0x10(%rbp),%r14d
	movl %r14d,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp toString_537
.p2align 0x4
L_455876:
L_183419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_183420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183420
.p2align 0x4
.long 0xA2D
L_183420:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_183415
.p2align 0x4
L_455877:
L_183421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_183422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183422
.p2align 0x4
.long 0xB66
L_183422:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_183411
.p2align 0x4
L_455878:
L_183428:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183418
.p2align 0x4
L_455879:
L_183430:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455882
L_183431:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183432:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455881
.p2align 0x4,,0x7
L_183433:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455880
L_183434:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_183432
.p2align 0x4
L_455880:
L_183435:
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183410
.p2align 0x4
L_455881:
L_183436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_183437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183437
.p2align 0x4
.long 0xB66
L_183437:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_183433
.p2align 0x4
L_455882:
L_183438:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183418
.p2align 0x4
L_455883:
L_183408:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455884
L_183409:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r13,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183410
.p2align 0x4
L_455884:
L_183423:
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_183418
.p2align 0x4
L_455885:
L_183439:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455886
L_183440:
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183432
.p2align 0x4
L_455886:
L_183441:
	movq 0x20(%rbp),%r11
	xchgq %r11,%r15
	jmp L_183418
.p2align 0x4
L_455887:
L_183442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183443
.p2align 0x4
.long 0x9CC
L_183443:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183404
.p2align 0x4
L_455888:
L_183444:
	cmpq $0x1,%r15
	je L_455889
L_183445:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183410
.p2align 0x4
L_455889:
L_183446:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183418
.p2align 0x4
L_455890:
L_183458:
	movq $0x1,%r15
	jmp L_183418
.text
.p2align 0x4
.globl fullPath_0
.hidden fullPath_0
fullPath_0:
L_183464:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183465
L_183762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_183763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183763
.p2align 0x4
.long 0x45D
L_183763:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_183465:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x48,%rbp
	leaq (L_183466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getcwd_0
.p2align 0x4
.long 0x2566
L_183466:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_183467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x49F
L_183467:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183468
L_183760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183761
.p2align 0x4
.long 0x257F
L_183761:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183468:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455894
L_183469:
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_183470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455894:
L_183759:
	movq 0x50(%rbp),%r15
computeFullPath_0:
	movq %r15,0x48(%rbp)
	movl $0x40,0x50(%rbp)
gotoRoot_0:
	movq 0x40(%rbp),%r14
	cmpq (globalObjptr+0xA058)(%rip),%r14
	je chdir_0
L_183482:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x58(%rbp)
	testq %r13,%r13
	jnz vectorEqual_72
L_183739:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_177:
	cmpq 0x58(%rbp),%r15
	je L_455899
L_183740:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xA058)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455895
L_183745:
	incq %r15
	jmp vectorEqualLoop_177
.p2align 0x4
L_455895:
L_183741:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_72
L_183743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183744
.p2align 0x4
.long 0x257D
L_183744:
	addq $0xFFFFFFFFFFFFFF98,%rbp
vectorEqual_72:
	movq (globalObjptr+0xD3B8)(%rip),%r14
	cmpq %r14,0x40(%rbp)
	je chdir_0
L_183484:
	cmpq $0x1,0x58(%rbp)
	jne L_183486
L_183729:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_176:
	cmpq 0x58(%rbp),%r15
	je L_455897
L_183730:
	movq (globalObjptr+0xD3B8)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455896
L_183732:
	incq %r15
	jmp vectorEqualLoop_176
.p2align 0x4
L_455896:
L_183486:
	leaq L_183581(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_455897:
L_183733:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb chdir_0
L_183736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183737
.p2align 0x4
.long 0x257C
L_183737:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
chdir_0:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xD3B8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	leaq L_183581(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455899:
L_183746:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb chdir_0
L_183748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183749
.p2align 0x4
.long 0x257C
L_183749:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp chdir_0
.p2align 0x4
.long 0x2567
L_183470:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183471
L_183757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183758
.p2align 0x4
.long 0x2570
L_183758:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183471:
	cmpq $0x1,0x50(%rbp)
	je L_455905
L_183472:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_455904
L_183473:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_183474:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455903
.p2align 0x4,,0x7
L_183475:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_455901
L_183476:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_183474
.p2align 0x4
L_455901:
L_183477:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_183478:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455902
.p2align 0x4,,0x7
L_183479:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je computeFullPath_0
L_183480:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_183478
.p2align 0x4
L_455902:
L_183751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183752
.p2align 0x4
.long 0x243D
L_183752:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183479
.p2align 0x4
L_455903:
L_183753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183754
.p2align 0x4
.long 0x257E
L_183754:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_183475
.p2align 0x4
L_455904:
L_183755:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp computeFullPath_0
.p2align 0x4
L_455905:
L_183756:
	movq 0x58(%rbp),%r15
	jmp computeFullPath_0
.p2align 0x4
.long 0x2568
L_183487:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183488
L_183727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183728
.p2align 0x4
.long 0x257B
L_183728:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183488:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
.long 0x25
L_183581:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183500
L_183583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183584
.p2align 0x4
.long 0x4A2
L_183584:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183500:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_183501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
.long 0x2568
L_183735:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r13d
	movl %r13d,0x54(%rbp)
	movq 0x48(%rbp),%r14
	movq $0x1,%r15
	movl 0x50(%rbp),%r13d
	movl %r13d,0x48(%rbp)
walkPath_0:
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
loop_1897:
	movl 0x48(%rbp),%r13d
	testl %r13d,%r13d
	jz L_455921
L_183490:
	cmpq $0x1,%r14
	je L_455917
L_183491:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_455916
L_183492:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz vectorEqual_73
L_183714:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_175:
	cmpq %r14,%r15
	je L_455915
L_183715:
	movq 0x60(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne vectorEqual_242
L_183717:
	incq %r14
	jmp vectorEqualLoop_175
.p2align 0x4
vectorEqual_242:
vectorEqual_73:
	movq (globalObjptr+0xA050)(%rip),%r13
	cmpq %r13,0x60(%rbp)
	je L_455914
L_183494:
	cmpq $0x1,%r15
	jne vectorEqual_74
L_183708:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_174:
	cmpq %r14,%r15
	je L_455913
L_183709:
	movq 0x60(%rbp),%r13
	movq (globalObjptr+0xA050)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne vectorEqual_243
L_183711:
	incq %r14
	jmp vectorEqualLoop_174
.p2align 0x4
vectorEqual_243:
vectorEqual_74:
	movq (globalObjptr+0xA048)(%rip),%r13
	cmpq %r13,0x60(%rbp)
	je L_183700
L_183496:
	cmpq $0x2,%r15
	jne x_575
L_183695:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_173:
	cmpq %r15,%r14
	je L_455909
L_183696:
	movq 0x60(%rbp),%r13
	movq (globalObjptr+0xA048)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne x_1800
L_183698:
	incq %r14
	jmp vectorEqualLoop_173
.p2align 0x4
x_1800:
x_575:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (fromString_13+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_455909:
L_183700:
	cmpq $0x1,0x50(%rbp)
	jne L_455910
L_183706:
	movq 0x58(%rbp),%r14
	movq $0x1,0x50(%rbp)
	jmp loop_1897
.p2align 0x4
L_455910:
L_183701:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183702
L_183704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183705
.p2align 0x4
.long 0x2570
L_183705:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183702:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA048)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455913:
L_183712:
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
L_455914:
L_183713:
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
L_455915:
L_183718:
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
L_455916:
L_183719:
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
L_455917:
L_183720:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_455920
L_183721:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183631:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455919
.p2align 0x4,,0x7
L_183632:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455918
L_183633:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_183631
.p2align 0x4
L_455918:
L_183635:
	movq %r15,0x58(%rbp)
	leaq L_183581(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl $0x1,0x50(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_183636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_537
.p2align 0x4
L_455919:
L_183641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_183642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183642
.p2align 0x4
.long 0x2578
L_183642:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_183632
.p2align 0x4
L_455920:
L_183722:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_183635
.p2align 0x4
L_455921:
L_183723:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183724
L_183725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183726
.p2align 0x4
.long 0x2574
L_183726:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183724:
	movq (globalObjptr+0x7E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_183500
.p2align 0x4
.long 0x2568
L_183489:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r13d
	movl %r13d,0x54(%rbp)
	movq 0x48(%rbp),%r14
	movq $0x1,%r15
	movl 0x50(%rbp),%r13d
	movl %r13d,0x48(%rbp)
	jmp walkPath_0
.p2align 0x4
.long 0x45A
L_183501:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2569
fromString_13:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183498
L_183693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183694
.p2align 0x4
.long 0x2572
L_183694:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183498:
	movq 0x70(%rbp),%rdi
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_455937
L_183502:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_455936
L_183505:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_lstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183506
.p2align 0x4
.long 0x256A
L_183506:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_455926
L_183507:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183508
.p2align 0x4
.long 0x256A
L_183508:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183509
.p2align 0x4
.long 0x256A
L_183509:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183510+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183510
.p2align 0x4
.long 0x256A
L_183510:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl %eax,0x4C(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183511
.p2align 0x4
.long 0x256A
L_183511:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl %eax,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183512
L_183664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183665
.p2align 0x4
.long 0x2579
L_183665:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183512:
	cmpl $0x0,0x70(%rbp)
	jl L_455923
L_183513:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183514
.p2align 0x4
.long 0x256A
L_183514:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183515
.p2align 0x4
.long 0x256A
L_183515:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183516
.p2align 0x4
.long 0x256A
L_183516:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183517+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183517
.p2align 0x4
.long 0x256A
L_183517:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x78(%rbp)
	leaq L_183659(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x78,%rbp
	leaq (L_183518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_455923:
L_183650:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_455924
L_183651:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x3,0x20(%rbp)
	jmp L_183500
.p2align 0x4
L_455924:
L_183542:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_183500
.p2align 0x4
L_455926:
L_183666:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183667
.p2align 0x4
.long 0x2574
L_183667:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl %eax,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183668
L_183691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183692
.p2align 0x4
.long 0x2574
L_183692:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183668:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183542
L_183669:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x20(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183670
.p2align 0x4
.long 0x2574
L_183670:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183671
L_183688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183689
.p2align 0x4
.long 0x2574
L_183689:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183671:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	testq %r15,%r15
	jz L_455932
L_183672:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1901:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455927
L_183673:
	incl %ecx
	jmp loop_1901
.p2align 0x4
L_455927:
L_183674:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183675
L_183685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183686
.p2align 0x4
.long 0x2574
L_183686:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183675:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455930
L_183676:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183677
.p2align 0x4
.long 0x2574
L_183677:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1902:
	cmpq 0x28(%rbp),%r15
	jnl L_455928
L_183683:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1902
.p2align 0x4
L_455928:
L_183678:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183679
L_183681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_183682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183682
.p2align 0x4
.long 0x2575
L_183682:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_183679:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183680:
	movl 0x20(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_183500
.p2align 0x4
L_455930:
L_183611:
	movq $0x5,0x20(%rbp)
	jmp L_183500
.p2align 0x4
L_455932:
L_183687:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183680
.p2align 0x4
L_455936:
L_183504:
	movq (globalObjptr+0x750)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_183500
.p2align 0x4
L_455937:
L_183499:
	movq $0x3,0x20(%rbp)
	jmp L_183500
.p2align 0x4
.long 0x257A
L_183703:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp loop_1897
.p2align 0x4
.long 0x4A1
L_183636:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183637
L_183639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183640
.p2align 0x4
.long 0x4A2
L_183640:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183637:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	movl $0x0,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_183638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
.long 0x2569
L_183518:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x80(%rbp)
	movq %r11,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_183519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x25
L_183659:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183650
L_183661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183662
.p2align 0x4
.long 0x2574
L_183662:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183650
.p2align 0x4
.long 0x2577
L_183638:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x256B
L_183519:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183520
.p2align 0x4
.long 0x256C
L_183520:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x90(%rbp)
	leaq L_183655(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x90,%rbp
	leaq (L_183521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x256B
L_183521:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_183522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x25
L_183655:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183650
L_183657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183658
.p2align 0x4
.long 0x2574
L_183658:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183650
.p2align 0x4
.long 0x256B
L_183522:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183523
.p2align 0x4
.long 0x256C
L_183523:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x90(%rbp)
	leaq L_183648(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x90,%rbp
	leaq (L_183524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x256B
L_183524:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x25
L_183648:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183650
L_183653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183654
.p2align 0x4
.long 0x2574
L_183654:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183650
.p2align 0x4
.long 0x256D
L_183525:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183526
L_183646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183647
.p2align 0x4
.long 0x256E
L_183647:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183526:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183542
L_183527:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4C(%rbp),%edi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183528
.p2align 0x4
.long 0x256E
L_183528:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl %eax,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183529
L_183643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183644
.p2align 0x4
.long 0x256E
L_183644:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183529:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_455943
L_183530:
	leaq L_183581(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (fromString_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_455943:
L_183624:
	cmpq $0x1,0x58(%rbp)
	je L_455944
L_183625:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	leaq L_183581(%rip),%r15
	movq %r15,0x10(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455944:
L_183630:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183631
.p2align 0x4
.long 0x256F
fromString_14:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183531
L_183622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183623
.p2align 0x4
.long 0x256E
L_183623:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183531:
	movq 0x60(%rbp),%rdi
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_183499
L_183532:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_183504
L_183534:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x400,%rdx
	movq 0x28(%rbp),%rsi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_readlink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183535
.p2align 0x4
.long 0x2570
L_183535:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183536
L_183620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183621
.p2align 0x4
.long 0x2576
L_183621:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183536:
	movq 0x60(%rbp),%r14
	cmpq $0xFFFFFFFFFFFFFFFF,%r14
	je L_455956
L_183537:
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x68(%rbp)
	cmpq %r14,%r11
	je L_455949
L_183538:
	movq $0x3,%r15
L_183539:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_183542
L_183540:
	movq %r15,0x20(%rbp)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	jmp L_183500
.p2align 0x4
L_455949:
L_183543:
	movq 0x28(%rbp),%r15
	movq 0x68(%rbp),%rdx
	cmpq %rdx,0xFFFFFFFFFFFFFFF0(%r15)
	jb L_455955
L_183544:
	testq %rdx,%rdx
	jz L_455954
L_183545:
	cmpq $0x7FFFFFFF,%rdx
	ja L_455953
L_183546:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183547
.p2align 0x4
.long 0x2571
L_183547:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x60(%rbp)
L_183548:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1898:
	cmpq 0x68(%rbp),%r15
	jnl L_455950
L_183588:
	movq 0x60(%rbp),%r14
	movq 0x28(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	movb %r13b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1898
.p2align 0x4
L_455950:
L_183549:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183550
L_183586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183587
.p2align 0x4
.long 0x256E
L_183587:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183550:
	movq 0x60(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_183542
L_183551:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_183552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455953:
L_183589:
	movq $0x5,%r15
	jmp L_183539
.p2align 0x4
L_455954:
L_183590:
	movq (globalObjptr+0x6F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_183548
.p2align 0x4
L_455955:
L_183591:
	movq $0x6,%r15
	jmp L_183539
.p2align 0x4
L_455956:
L_183592:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183593
.p2align 0x4
.long 0x2574
L_183593:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl %eax,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183594
L_183618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183619
.p2align 0x4
.long 0x2574
L_183619:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183594:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183542
L_183595:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x20(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183596
.p2align 0x4
.long 0x2574
L_183596:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183597
L_183615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183616
.p2align 0x4
.long 0x2574
L_183616:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183597:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	testq %r15,%r15
	jz L_455962
L_183598:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1899:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455957
L_183599:
	incl %ecx
	jmp loop_1899
.p2align 0x4
L_455957:
L_183600:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183601
L_183612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183613
.p2align 0x4
.long 0x2574
L_183613:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183601:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183611
L_183602:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183603
.p2align 0x4
.long 0x2574
L_183603:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1900:
	cmpq 0x28(%rbp),%r15
	jnl L_455958
L_183609:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1900
.p2align 0x4
L_455958:
L_183604:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183605
L_183607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_183608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183608
.p2align 0x4
.long 0x2575
L_183608:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_183605:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183606:
	movl 0x20(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_183500
.p2align 0x4
L_455962:
L_183614:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183606
.p2align 0x4
.long 0x256D
L_183626:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183627
L_183628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183629
.p2align 0x4
.long 0x256E
L_183629:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183627:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
.long 0x256F
L_183552:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183553
L_183579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183580
.p2align 0x4
.long 0x2573
L_183580:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183553:
	cmpq $0x1,0x58(%rbp)
	je L_455979
L_183554:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_455978
L_183555:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_183556:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455977
.p2align 0x4,,0x7
L_183557:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_455971
L_183558:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_183556
.p2align 0x4
L_455971:
L_183559:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_183560:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455976
.p2align 0x4,,0x7
L_183561:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_455972
L_183562:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_183560
.p2align 0x4
L_455972:
L_183564:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_455974
L_183566:
	movl 0x48(%rbp),%r13d
	decl %r13d
	jo L_183499
L_183567:
	movl %r13d,0x48(%rbp)
	movq 0x50(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp walkPath_0
.p2align 0x4
L_455974:
L_183569:
	movl 0x48(%rbp),%r14d
	decl %r14d
	jo L_183499
L_183570:
	movq %r15,0x48(%rbp)
	movl %r14d,0x50(%rbp)
	jmp gotoRoot_0
.p2align 0x4
L_455976:
L_183571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183572
.p2align 0x4
.long 0x256A
L_183572:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_183561
.p2align 0x4
L_455977:
L_183573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183574
.p2align 0x4
.long 0x2572
L_183574:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_183557
.p2align 0x4
L_455978:
L_183575:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183564
.p2align 0x4
L_455979:
L_183576:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_455980
L_183577:
	movq 0x68(%rbp),%r15
	jmp L_183566
.p2align 0x4
L_455980:
L_183578:
	movq 0x68(%rbp),%r15
	jmp L_183569
.text
.p2align 0x4
.globl getcwd_0
.hidden getcwd_0
getcwd_0:
loop_1903:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183764
L_183821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183822
.p2align 0x4
.long 0x452
L_183822:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_183764:
	incl (gcState+0x44)(%rip)
	movq (globalObjptr+0x798)(%rip),%r15
	movslq 0x0(%r15),%rsi
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_getcwd
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183765
.p2align 0x4
.long 0x452
L_183765:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	testq %rax,%rax
	jz L_455991
L_183766:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_455990
L_183767:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_455989
L_183769:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1904:
	cmpl %ecx,%ebx
	jnl L_455988
L_183771:
	movslq %ebx,%r14
	movq %r14,0x10(%rbp)
	cmpq %r15,%r14
	jnb L_183773
L_183774:
	movq 0x8(%rbp),%r11
	movb 0x0(%r11,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_455982
L_183775:
	incl %ebx
	jmp loop_1904
.p2align 0x4
L_455982:
L_183776:
	movq 0x10(%rbp),%rdx
	cmpq %rdx,%r15
	jb L_455986
L_183777:
	testq %rdx,%rdx
	jz L_455985
L_183778:
	cmpq $0x7FFFFFFF,%rdx
	ja L_455984
L_183779:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_183780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183780
.p2align 0x4
.long 0x8E7
L_183780:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,%r15
L_183781:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1905:
	cmpq 0x10(%rbp),%r14
	jnl L_455983
L_183783:
	movq 0x8(%rbp),%r11
	movb 0x0(%r11,%r14,1),%r13b
	movb %r13b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_1905
.p2align 0x4
L_455983:
L_183782:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455984:
L_183785:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455985:
L_183786:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_183781
.p2align 0x4
L_455986:
L_183773:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455988:
L_183770:
	movq (globalObjptr+0x7A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455989:
L_183768:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455990:
L_183789:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455991:
L_183790:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183791
.p2align 0x4
.long 0x452
L_183791:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl %eax,0x8(%rbp)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_183789
L_183792:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq $0x1,%r15
	movl $0x22,%ecx
.p2align 0x4,,0x7
L_183793:
	cmpl 0x8(%rbp),%ecx
	je L_455999
L_183794:
	cmpq $0x1,%r15
	je L_455992
L_183795:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_183793
.p2align 0x4
L_455992:
L_183796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x8(%rbp),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183797
.p2align 0x4
.long 0x26
L_183797:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183798
L_183812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_183813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183813
.p2align 0x4
.long 0x47B
L_183813:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_183798:
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	testq %r15,%r15
	jz L_455997
L_183799:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1906:
	movslq %ecx,%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455993
L_183800:
	incl %ecx
	jmp loop_1906
.p2align 0x4
L_455993:
L_183801:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183785
L_183802:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_183803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183803
.p2align 0x4
.long 0x64A
L_183803:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1907:
	cmpq 0x10(%rbp),%r15
	jnl L_455994
L_183809:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x20(%rbp),%r14
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1907
.p2align 0x4
L_455994:
L_183804:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183805
L_183807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_183808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183808
.p2align 0x4
.long 0x49E
L_183808:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_183805:
	movq 0x20(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183806:
	movl 0x8(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455997:
L_183811:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183806
.p2align 0x4
L_455999:
L_183814:
	movq (globalObjptr+0x798)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl %r14d,%r14d
	jo L_456001
L_183816:
	movl %r14d,0x0(%r15)
	movslq %r14d,%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183785
L_183817:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183818
.p2align 0x4
.long 0x452
L_183818:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %rax,0x0(%r15)
	jmp loop_1903
.p2align 0x4
L_456001:
L_183815:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl mkRelative_0
.hidden mkRelative_0
mkRelative_0:
L_183823:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183824
L_183884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183885
.p2align 0x4
.long 0x460
L_183885:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_183824:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_183825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x5B0
L_183825:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_183826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x518
L_183826:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_183827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x518
L_183827:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x30(%rbp)
	testl %r15d,%r15d
	jz L_183829
L_183830:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_456005
L_183831:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456005:
L_183832:
	movq 0x10(%rbp),%r13
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_456018
L_183833:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_183829
L_183835:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_178:
	cmpq %r15,%r14
	je L_456007
L_183836:
	movq 0x10(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_456006
L_183838:
	incq %r14
	jmp vectorEqualLoop_178
.p2align 0x4
L_456006:
L_183829:
	movq $0xF,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456007:
L_183839:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_456016
L_183840:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r15
	movq %r11,0x28(%rbp)
.p2align 0x4,,0x7
L_183841:
	cmpq $0x1,%r15
	je L_456015
L_183842:
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r11
	cmpq %r14,%r11
	je L_456013
L_183843:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r9
	cmpq %r9,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_183845
L_183865:
	xorq %r8,%r8
.p2align 0x4,,0x7
vectorEqualLoop_179:
	cmpq %r9,%r8
	je L_456009
L_183866:
	movb 0x0(%r14,%r8,1),%spl
	cmpb %spl,0x0(%r11,%r8,1)
	jne L_456008
L_183868:
	incq %r8
	jmp vectorEqualLoop_179
.p2align 0x4
L_456008:
L_183845:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_183846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parentize_0
.p2align 0x4
L_456009:
L_183869:
	cmpq $0x1,%r13
	je L_456010
L_183870:
	movq 0x0(%r13),%r14
	movq %r13,0x28(%rbp)
	movq 0x8(%r13),%r13
	movq %r10,%r15
	jmp L_183841
.p2align 0x4
L_456010:
L_183871:
	movq %r10,%r15
L_183872:
	cmpq $0x1,%r15
	je L_456011
L_183873:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_183874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parentize_0
.p2align 0x4
L_456011:
L_183875:
	movq (globalObjptr+0x7C8)(%rip),%r15
L_183858:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp toString_537
.p2align 0x4
L_456013:
L_183876:
	cmpq $0x1,%r13
	je L_456014
L_183877:
	movq 0x0(%r13),%r14
	movq %r13,0x28(%rbp)
	movq 0x8(%r13),%r13
	movq %r10,%r15
	jmp L_183841
.p2align 0x4
L_456014:
L_183878:
	movq %r10,%r15
	jmp L_183872
.p2align 0x4
L_456015:
L_183879:
	movq 0x28(%rbp),%r15
	jmp L_183858
.p2align 0x4
L_456016:
L_183880:
	movq 0x30(%rbp),%r15
	jmp L_183872
.p2align 0x4
L_456018:
L_183881:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_456019
L_183882:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r15
	movq %r11,0x28(%rbp)
	xchgq %r10,%r13
	jmp L_183841
.p2align 0x4
L_456019:
L_183883:
	movq 0x30(%rbp),%r15
	jmp L_183872
.p2align 0x4
.long 0x5EE
L_183846:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x7D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_183847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equal_list_0
.p2align 0x4
.long 0x1
L_183874:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp L_183858
.p2align 0x4
.long 0x5F2
L_183847:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x38(%rbp)
	jnz L_456026
L_183848:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_456025
L_183849:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_183850:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456024
.p2align 0x4,,0x7
L_183851:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456021
L_183852:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_183850
.p2align 0x4
L_456021:
L_183853:
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_183854:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456023
.p2align 0x4,,0x7
L_183855:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_183858
L_183856:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_183854
.p2align 0x4
L_456023:
L_183859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_183860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183860
.p2align 0x4
.long 0x45C
L_183860:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_183855
.p2align 0x4
L_456024:
L_183861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_183862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183862
.p2align 0x4
.long 0x5F5
L_183862:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_183851
.p2align 0x4
L_456025:
L_183863:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183858
.p2align 0x4
L_456026:
L_183864:
	movq 0x30(%rbp),%r15
	jmp L_183858
.text
.p2align 0x4
.globl parentize_0
.hidden parentize_0
parentize_0:
L_183886:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183887
L_183894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183895
.p2align 0x4
.long 0x452
L_183895:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_183887:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_456027
L_183888:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_183889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parentize_0
.p2align 0x4
L_456027:
L_183893:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_183889:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183890
L_183891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183892
.p2align 0x4
.long 0x452
L_183892:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_183890:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA048)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl equal_list_0
.hidden equal_list_0
equal_list_0:
L_183896:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183897
L_183918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183919
.p2align 0x4
.long 0x460
L_183919:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_183897:
	movq 0x8(%rbp),%r8
	movq 0x0(%rbp),%rsp
	cmpq %rsp,%r8
	je L_456036
L_183899:
	movq %r8,%r15
	andq $0x3,%r15
	jnz L_183900
L_183901:
	movq 0x8(%r8),%r14
	movq 0x0(%r8),%r15
L_183902:
	movq %rsp,%r13
	andq $0x3,%r13
	jnz L_183900
L_183903:
	movq 0x8(%rsp),%r11
	movq 0x0(%rsp),%r13
	cmpq %r15,%r13
	je L_456033
L_183904:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	jne L_183900
L_183906:
	xorq %r9,%r9
.p2align 0x4,,0x7
vectorEqualLoop_180:
	cmpq %r10,%r9
	je L_456031
L_183907:
	movb 0x0(%r15,%r9,1),%r8b
	cmpb %r8b,0x0(%r13,%r9,1)
	jne L_456030
L_183909:
	incq %r9
	jmp vectorEqualLoop_180
.p2align 0x4
L_456030:
L_183900:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456031:
	movq %r11,%r15
L_183911:
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_183912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equal_list_0
.p2align 0x4
L_456033:
	movq %r11,%r15
	jmp L_183911
.p2align 0x4
L_456036:
L_183915:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_183912:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	testl %r15d,%r15d
	jnz L_183915
	jmp L_183900
.text
.p2align 0x4
.globl contents_0
.hidden contents_0
contents_0:
L_183920:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183921
L_184021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_184022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184022
.p2align 0x4
.long 0x45D
L_184022:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_183921:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	leaq L_184020(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_183922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openIn_0
.p2align 0x4
.long 0x5EE
L_183922:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x48(%rbp),%r13
	movq %r13,0x40(%rbp)
	movq 0x50(%rbp),%r11
	movq %r11,0x48(%rbp)
	movq 0x58(%rbp),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r15),%r9
	movq %r15,0x30(%rbp)
	movq %r9,%r15
	andq $0x1,%r15
	jz L_183924
L_183927:
	shrq $0x1,%r9
	movl %r9d,%r15d
	testl %r15d,%r15d
	jnz L_456055
L_183928:
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movl 0x0(%r11),%r15d
	movl 0x0(%r13),%r14d
	subl %r15d,%r14d
	jo x_576
L_183931:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	movslq %r15d,%r11
	movq %r11,0x58(%rbp)
	movslq %r14d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r11,%r13
	jb x_576
L_183932:
	subq %r11,%r13
	cmpq %rdx,%r13
	jb x_576
L_183933:
	testq %rdx,%rdx
	jz L_456054
L_183934:
	cmpq $0x7FFFFFFF,%rdx
	ja x_576
L_183935:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183936
.p2align 0x4
.long 0x2580
L_183936:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_183937:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1908:
	cmpq 0x60(%rbp),%r15
	jnl L_456040
L_184014:
	movq %r15,%r14
	addq 0x58(%rbp),%r14
	movq 0x68(%rbp),%r13
	movq 0x50(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1908
.p2align 0x4
L_456040:
L_183938:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183939
L_184012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_184013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184013
.p2align 0x4
.long 0x2585
L_184013:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183939:
	movq 0x68(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
loop_1909:
	movq 0x38(%rbp),%r15
	movl 0x8(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x24B7,%r13
	jne L_456051
L_183940:
	movq 0x10(%r15),%r13
	movq %r13,0x60(%rbp)
	movl 0x0(%r15),%r11d
	movq 0x8(%r15),%r10
	movq %r10,0x68(%rbp)
	movq 0x20(%r15),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz x_576
L_183941:
	subl 0x0(%r13),%r11d
	jo x_576
L_183942:
	cmpl %r11d,%r14d
	jl L_183944
L_183943:
	movl %r11d,0x58(%rbp)
L_183944:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq 0x60(%rbp),%r13
	movslq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movslq 0x58(%rbp),%r13
	movq %r13,0x78(%rbp)
	cmpq %r11,%r14
	jb x_576
L_183945:
	movq %r14,%r10
	subq %r11,%r10
	cmpq %r13,%r10
	jb x_576
L_183946:
	testq %r11,%r11
	jnz L_183948
L_183978:
	cmpq %r13,%r14
	jne L_456046
L_183980:
L_183954:
	movq 0x60(%rbp),%r14
	movl 0x0(%r14),%r13d
	addl 0x58(%rbp),%r13d
	jo x_576
L_183955:
	movl %r13d,0x0(%r14)
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_183956:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456045
.p2align 0x4,,0x7
L_183957:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne x_1802
L_183959:
	testl %r13d,%r13d
	jz L_456041
L_183960:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	jmp loop_1909
.p2align 0x4
L_456041:
L_183961:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_456044
L_183962:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_183963:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456043
.p2align 0x4,,0x7
L_183964:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_456042
L_183965:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_183963
.p2align 0x4
L_456042:
L_183967:
	movq %r15,0x58(%rbp)
	leaq L_183969(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x58,%rbp
	leaq (L_183968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456043:
L_183970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183971
.p2align 0x4
.long 0x4B7
L_183971:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183964
.p2align 0x4
L_456044:
L_183972:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_183967
.p2align 0x4
x_1802:
x_576:
	leaq L_183930(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x28,%rbp
	leaq (L_183929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
L_456045:
L_183973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183974
.p2align 0x4
.long 0x4B7
L_183974:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183957
.p2align 0x4
L_456046:
L_183948:
	movq 0x78(%rbp),%r14
	testq %r14,%r14
	jnz L_456048
L_183977:
	movq (globalObjptr+0x5A8)(%rip),%r15
.p2align 0x4,,0x7
L_183952:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1910:
	cmpq 0x78(%rbp),%r14
	jnl L_456047
L_183975:
	movq 0x70(%rbp),%r13
	addq %r14,%r13
	movq 0x68(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_1910
.p2align 0x4
L_456047:
L_183953:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_183954
.p2align 0x4
L_456048:
L_183949:
	movq 0x78(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja x_576
L_183950:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_183951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183951
.p2align 0x4
.long 0x2581
L_183951:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,%r15
	jmp L_183952
.p2align 0x4
L_456051:
L_183985:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz x_576
L_183986:
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x5C(%rbp)
	movslq %r14d,%r15
	cmpq $0x7FFFFFFF,%r15
	movq %r15,0x68(%rbp)
	ja x_576
L_183987:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183988
L_184008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_184009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184009
.p2align 0x4
.long 0x2582
L_184009:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183988:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq 0x68(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183989
.p2align 0x4
.long 0x2582
L_183989:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	movq $0x3E41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x5C(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq %rax,0x8(%r15)
	movq %r15,0x80(%rbp)
	leaq L_183969(%rip),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (x_577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_456054:
L_184016:
	movq (globalObjptr+0x6F8)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_183937
.p2align 0x4
L_456055:
L_184019:
	movq 0x30(%rbp),%r15
	movq (globalWord64+0x30)(%rip),%r9
	movq %r9,0x0(%r15)
L_183924:
	leaq L_183926(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_183925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
.long 0x25
L_184020:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x853
L_183968:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_183924
.p2align 0x4
.long 0x25
L_183969:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp x_576
.p2align 0x4
.long 0x474
L_183929:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_183930:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2583
x_577:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x80(%rbp)
	cmpq %rdx,%r15
	movq %r15,0x78(%rbp)
	jne x_576
L_183991:
	cmpl 0x58(%rbp),%r14d
	je L_456059
L_183992:
	cmpq %rdx,0x68(%rbp)
	jb x_576
L_183993:
	testq %rdx,%rdx
	jz L_456058
L_183994:
	cmpq $0x7FFFFFFF,%rdx
	ja x_576
L_183995:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183996
.p2align 0x4
.long 0x2584
L_183996:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,%r15
L_183997:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1911:
	cmpq 0x80(%rbp),%r14
	jnl L_456057
L_184003:
	movq 0x70(%rbp),%r11
	movb 0x0(%r11,%r14,1),%r13b
	movb %r13b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_1911
.p2align 0x4
L_456057:
L_183998:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183999:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne x_576
L_184001:
	movq 0x60(%rbp),%r14
	addq 0x0(%r14),%r11
	jo x_576
L_184002:
	movq %r11,0x0(%r14)
	movq %r15,0x58(%rbp)
	jmp L_183956
.p2align 0x4
L_456058:
L_184005:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_183997
.p2align 0x4
L_456059:
L_184007:
	movq 0x70(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_183999
.p2align 0x4
.long 0x51B
L_183925:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_183926:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl usage_0
.hidden usage_0
usage_0:
L_184023:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_184024
L_184177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_184178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184178
.p2align 0x4
.long 0x460
L_184178:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_184024:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_456060
L_184025:
	movq 0x18(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_184026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp options_0
.p2align 0x4
L_456060:
L_184176:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65C
L_184026:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_456098
L_184027:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_184028:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456097
.p2align 0x4,,0x7
L_184029:
	movq $0x2385,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_456062
L_184030:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_184028
.p2align 0x4
L_456062:
L_184031:
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_184032:
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpb $0x1,0x0(%r15)
	je L_456095
L_184033:
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_456093
L_184034:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_456063
L_184035:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_184032
.p2align 0x4
L_456063:
L_184036:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
L_184037:
	movq (globalObjptr+0x13F0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_184038:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456092
.p2align 0x4,,0x7
L_184039:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_456064
L_184040:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_184038
.p2align 0x4
L_456064:
L_184041:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_456091
L_184042:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_184043:
	cmpq $0x1,%r15
	je L_456090
L_184044:
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_184045:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456089
.p2align 0x4,,0x7
L_184047:
	movq 0x40(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_184048
L_184049:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r11,%r10
	jne L_184051
L_184052:
	cmpl %ebx,%r13d
	jnl L_456086
L_184151:
L_184054:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ebx,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_456065
L_184055:
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_184045
.p2align 0x4
L_456065:
L_184056:
	xchgq %r14,%r15
L_184057:
	cmpq $0x1,%r14
	jne L_456085
L_184058:
	cmpq $0x1,%r15
	je L_456084
L_184059:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_184060:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456083
.p2align 0x4,,0x7
L_184061:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_456066
L_184062:
	movq %r15,0x38(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0x30(%rbp)
	jmp L_184060
.p2align 0x4
L_456066:
L_184064:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_456067
L_184065:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	xchgq %r14,%r15
	jmp L_184043
.p2align 0x4
L_456067:
L_184066:
	movq %r15,0x20(%rbp)
L_184067:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_456082
L_184068:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_184069:
	cmpq $0x1,%r15
	jne L_456077
L_184146:
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x13F8)(%rip),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x40(%rbp)
.p2align 0x4,,0x7
L_184087:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456076
.p2align 0x4,,0x7
L_184088:
	cmpq $0x1,0x40(%rbp)
	jne L_184073
L_184089:
	cmpq $0x1,0x38(%rbp)
	jne L_456074
L_184090:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_456073
L_184091:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_184092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456072
.p2align 0x4,,0x7
L_184093:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456068
L_184094:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_184092
.p2align 0x4
L_456068:
L_184096:
	movq $0x1B7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_456069
L_184097:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r14,%r15
	jmp L_184069
.p2align 0x4
L_456069:
L_184098:
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_184099:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456071
.p2align 0x4,,0x7
L_184100:
	movq $0x1B7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_456070
L_184101:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_184099
.p2align 0x4
L_456070:
L_184102:
	movq %r15,0x10(%rbp)
L_184103:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_456071:
L_184135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_184136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184136
.p2align 0x4
.long 0x4DF
L_184136:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_184100
.p2align 0x4
L_456072:
L_184137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184138
.p2align 0x4
.long 0x63C
L_184138:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_184093
.p2align 0x4
L_456073:
L_184139:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_184096
.p2align 0x4
L_456074:
L_184073:
	movq (globalObjptr+0x1408)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456076:
L_184140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184141
.p2align 0x4
.long 0x63C
L_184141:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_184088
.p2align 0x4
L_456077:
L_184070:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	movq (globalObjptr+0x13F8)(%rip),%r15
	movq 0x20(%rbp),%r14
L_184072:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_184073
L_184074:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r13d
L_184075:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_184073
L_184076:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_456079
L_184078:
	subl %r11d,%r13d
	jo L_456078
L_184080:
	movl %r13d,0x68(%rbp)
	movq $0x20,%r15
	shlq $0x4,%r15
	orq $0x7,%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_184081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_456078:
L_184079:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456079:
L_184051:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456082:
L_184147:
	movq $0x1,0x10(%rbp)
	jmp L_184103
.p2align 0x4
L_456083:
L_184148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_184149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184149
.p2align 0x4
.long 0x648
L_184149:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_184061
.p2align 0x4
L_456084:
L_184150:
	movq $0x1,%r15
	jmp L_184064
.p2align 0x4
L_456085:
L_184048:
	movq (globalObjptr+0x1400)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456086:
	movl %r13d,%ebx
	jmp L_184054
.p2align 0x4
L_456089:
L_184152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184153
.p2align 0x4
.long 0x63C
L_184153:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_184047
.p2align 0x4
L_456090:
L_184154:
	movq $0x1,%r15
	jmp L_184057
.p2align 0x4
L_456091:
L_184155:
	movq %r15,0x20(%rbp)
	jmp L_184067
.p2align 0x4
L_456092:
L_184156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_184157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184157
.p2align 0x4
.long 0x4DF
L_184157:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_184039
.p2align 0x4
L_456093:
L_184158:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184160
L_184167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184168
.p2align 0x4
.long 0x63C
L_184168:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_184160:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xF5E0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_184161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456095:
L_184169:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184160
L_184171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184172
.p2align 0x4
.long 0x63C
L_184172:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_184160
.p2align 0x4
L_456097:
L_184173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_184174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184174
.p2align 0x4
.long 0x647
L_184174:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_184029
.p2align 0x4
L_456098:
L_184175:
	movq $0x1,0x10(%rbp)
	jmp L_184037
.p2align 0x4
.long 0x5F0
L_184104:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x7F1
L_184081:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184082
L_184144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_184145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184145
.p2align 0x4
.long 0x80A
L_184145:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_184082:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_184083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xA19
L_184161:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184162
L_184165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_184166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184166
.p2align 0x4
.long 0x2295
L_184166:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_184162:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_456100
L_184163:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_184032
.p2align 0x4
L_456100:
L_184164:
	movq %r14,0x10(%rbp)
	jmp L_184037
.p2align 0x4
.long 0x5F0
L_184105:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0x76C0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_184106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x19CD
L_184083:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184084
L_184142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_184143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184143
.p2align 0x4
.long 0x61E
L_184143:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_184084:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_456102
L_184085:
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_184072
.p2align 0x4
L_456102:
L_184086:
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_184087
.p2align 0x4
.long 0x5F0
L_184106:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5F0
L_184107:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5F0
L_184108:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_456104
L_184109:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
L_184110:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_184111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456104:
L_184129:
	movl $0x1,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp exit_0
.p2align 0x4
.long 0x5F0
L_184111:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_184051
L_184113:
	decl %ecx
	jo L_184079
L_184114:
.p2align 0x4,,0x7
loop_1912:
	cmpl $0x0,%ecx
	jl L_184122
L_184115:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_456109
L_184117:
	movq 0x20(%rbp),%r13
	movb 0x0(%r13,%r14,1),%r11b
	cmpb $0xD,%r11b
	ja L_456107
L_184118:
	cmpb $0x9,%r11b
	jb L_456105
L_184120:
	decl %ecx
	jmp loop_1912
.p2align 0x4
L_456105:
L_184122:
	incl %ecx
	jo L_184079
L_184123:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_184124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_456107:
L_184130:
	cmpb $0x20,%r11b
	jne L_184122
	jmp L_184120
.p2align 0x4
L_456109:
L_184116:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F0
L_184124:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5F0
L_184125:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5F0
L_184126:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_184129
L_184127:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_184110
.text
.p2align 0x4
.globl options_0
.hidden options_0
options_0:
L_184179:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_184445
L_184180:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x4A8,%r15
	jb L_456177
L_184181:
	movq 0x0(%rbp),%r15
	movq 0x2D8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x2D0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x2C8(%r15),%r11
	movq 0x2C0(%r15),%r10
	movq 0x2B8(%r15),%r9
	movq 0x2B0(%r15),%r8
	movq %r8,0x18(%rbp)
	movq 0x2A8(%r15),%r8
	movq 0x2A0(%r15),%rsp
	movq 0x298(%r15),%rsi
	movq %rsi,0x20(%rbp)
	movq 0x290(%r15),%rsi
	movq 0x288(%r15),%rdi
	movq %rdi,0x28(%rbp)
	movq 0x280(%r15),%rdi
	movq 0x278(%r15),%rdx
	movq 0x270(%r15),%rcx
	movq %rcx,0x30(%rbp)
	movq 0x268(%r15),%rcx
	movq %rcx,0x38(%rbp)
	movq 0x260(%r15),%rcx
	movq %rcx,0x40(%rbp)
	movq 0x258(%r15),%rcx
	movq %rcx,0x48(%rbp)
	movq 0x250(%r15),%rcx
	movq %rcx,0x50(%rbp)
	movq 0x248(%r15),%rcx
	movq %rcx,0x58(%rbp)
	movq 0x240(%r15),%rcx
	movq %rcx,0x60(%rbp)
	movq 0x238(%r15),%rcx
	movq %rcx,0x68(%rbp)
	movq 0x230(%r15),%rcx
	movq %rcx,0x70(%rbp)
	movq 0x228(%r15),%rcx
	movq %rcx,0x78(%rbp)
	movq 0x220(%r15),%rcx
	movq %rcx,0x80(%rbp)
	movq 0x218(%r15),%rcx
	movq %rcx,0x88(%rbp)
	movq 0x210(%r15),%rcx
	movq %rcx,0x90(%rbp)
	movq 0x208(%r15),%rcx
	movq %rcx,0x98(%rbp)
	movq 0x1F0(%r15),%rcx
	movq %rcx,0xA0(%rbp)
	movq 0x1E8(%r15),%rcx
	movq %rcx,0xA8(%rbp)
	movq 0x1E0(%r15),%rcx
	movq %rcx,0xB0(%rbp)
	movq 0x1D8(%r15),%rcx
	movq %rcx,0xB8(%rbp)
	movq 0x1D0(%r15),%rcx
	movq %rcx,0xC0(%rbp)
	movq 0x1C8(%r15),%rcx
	movq %rcx,0xC8(%rbp)
	movq 0x1C0(%r15),%rcx
	movq %rcx,0xD0(%rbp)
	movq 0x1B8(%r15),%rcx
	movq %rcx,0xD8(%rbp)
	movq 0x1B0(%r15),%rcx
	movq %rcx,0xE0(%rbp)
	movq 0x1A8(%r15),%rcx
	movq %rcx,0xE8(%rbp)
	movq 0x1A0(%r15),%rcx
	movq %rcx,0xF0(%rbp)
	movq 0x198(%r15),%rcx
	movq %rcx,0xF8(%rbp)
	movq 0x190(%r15),%rcx
	movq %rcx,0x100(%rbp)
	movq 0x188(%r15),%rcx
	movq %rcx,0x108(%rbp)
	movq 0x180(%r15),%rcx
	movq %rcx,0x110(%rbp)
	movq 0x178(%r15),%rcx
	movq %rcx,0x118(%rbp)
	movq 0x170(%r15),%rcx
	movq %rcx,0x120(%rbp)
	movq 0x168(%r15),%rcx
	movq %rcx,0x128(%rbp)
	movq 0x160(%r15),%rcx
	movq %rcx,0x130(%rbp)
	movq 0x158(%r15),%rcx
	movq %rcx,0x138(%rbp)
	movq 0x150(%r15),%rcx
	movq %rcx,0x140(%rbp)
	movq 0x148(%r15),%rcx
	movq %rcx,0x148(%rbp)
	movq 0x140(%r15),%rcx
	movq %rcx,0x150(%rbp)
	movq 0x138(%r15),%rcx
	movq %rcx,0x158(%rbp)
	movq 0x130(%r15),%rcx
	movq %rcx,0x160(%rbp)
	movq 0x128(%r15),%rcx
	movq %rcx,0x168(%rbp)
	movq 0x120(%r15),%rcx
	movq %rcx,0x170(%rbp)
	movq 0x118(%r15),%rcx
	movq %rcx,0x178(%rbp)
	movq 0x110(%r15),%rcx
	movq %rcx,0x180(%rbp)
	movq 0x108(%r15),%rcx
	movq %rcx,0x188(%rbp)
	movq 0x100(%r15),%rcx
	movq %rcx,0x190(%rbp)
	movq 0xF8(%r15),%rcx
	movq %rcx,0x198(%rbp)
	movq 0xF0(%r15),%rcx
	movq %rcx,0x1A0(%rbp)
	movq 0xE8(%r15),%rcx
	movq %rcx,0x1A8(%rbp)
	movq 0xE0(%r15),%rcx
	movq %rcx,0x1B0(%rbp)
	movq 0xD8(%r15),%rcx
	movq %rcx,0x1B8(%rbp)
	movq 0xD0(%r15),%rcx
	movq %rcx,0x1C0(%rbp)
	movq 0xC8(%r15),%rcx
	movq %rcx,0x1C8(%rbp)
	movq 0xC0(%r15),%rcx
	movq %rcx,0x1D0(%rbp)
	movq 0xB8(%r15),%rcx
	movq %rcx,0x1D8(%rbp)
	movq 0xB0(%r15),%rcx
	movq %rcx,0x1E0(%rbp)
	movq 0xA8(%r15),%rcx
	movq %rcx,0x1E8(%rbp)
	movq 0xA0(%r15),%rcx
	movq %rcx,0x1F0(%rbp)
	movq 0x98(%r15),%rcx
	movq %rcx,0x1F8(%rbp)
	movq 0x90(%r15),%rcx
	movq %rcx,0x200(%rbp)
	movq 0x88(%r15),%rcx
	movq %rcx,0x208(%rbp)
	movq 0x80(%r15),%rcx
	movq %rcx,0x210(%rbp)
	movq 0x78(%r15),%rcx
	movq %rcx,0x218(%rbp)
	movq 0x70(%r15),%rcx
	movq %rcx,0x220(%rbp)
	movq 0x68(%r15),%rcx
	movq %rcx,0x228(%rbp)
	movq 0x60(%r15),%rcx
	movq %rcx,0x230(%rbp)
	movq 0x58(%r15),%rcx
	movq %rcx,0x238(%rbp)
	movq 0x50(%r15),%rcx
	movq %rcx,0x240(%rbp)
	movq 0x48(%r15),%rcx
	movq %rcx,0x248(%rbp)
	movq 0x40(%r15),%rcx
	movq %rcx,0x250(%rbp)
	movq 0x38(%r15),%rcx
	movq %rcx,0x258(%rbp)
	movq 0x30(%r15),%rcx
	movq %rcx,0x260(%rbp)
	movq 0x28(%r15),%rcx
	movq %rcx,0x268(%rbp)
	movq 0x20(%r15),%rcx
	movq %rcx,0x270(%rbp)
	movq 0x18(%r15),%rcx
	movq %rcx,0x278(%rbp)
	movq 0x10(%r15),%rcx
	movq %rcx,0x280(%rbp)
	movq 0x8(%r15),%rcx
	movq %rcx,0x288(%rbp)
	movq 0x0(%r15),%rcx
	movq %rcx,0x290(%rbp)
	movq $0x20B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x298(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movzbq 0x0(%r11),%rax
	subq $0x1,%rax
	cmpq $0xB,%rax
	ja L_456114
	jmp *jumpTable_612(,%rax,8)
.data
.p2align 0x4
jumpTable_612:
.quad L_456176,L_456175,L_456174,L_456174,L_456173,L_456174,L_456172,L_456171,L_456174,L_456170,L_456169,L_456168
.text
.p2align 0x4
L_456114:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
L_184182:
	movq (globalObjptr+0xF5E8)(%rip),%r15
L_184183:
	movq $0x48EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq (localObjptr+0x8)(%rip),%r13
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r15,0x18(%r14)
	addq $0x30,%r12
	movb $0x1,%r15b
	movzbl %r15b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xF5F0)(%rip),%r15
	movq %r15,0x10(%r14)
	movq (globalObjptr+0xCA30)(%rip),%r15
	movq %r15,0x20(%r14)
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x48EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq (localObjptr+0x10)(%rip),%r11
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xF5F8)(%rip),%r11
	movq %r11,0x10(%r14)
	movq (globalObjptr+0xF600)(%rip),%r11
	movq %r11,0x18(%r14)
	movq (globalObjptr+0xF608)(%rip),%r11
	movq %r11,0x20(%r14)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x48F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF610)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xF618)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF620)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x48E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF628)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF630)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r9,0x8(%r14)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x18)(%rip),%r11
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF638)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xF640)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF648)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x48F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF650)(%rip),%r14
	movq %r14,0x10(%r15)
	movq (globalObjptr+0xF658)(%rip),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xF660)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq $0x48E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF668)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF670)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq $0x48F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF678)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF680)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r9,0x8(%r14)
	addq $0x18,%r12
	movq $0x48E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x28)(%rip),%r11
	movq %r11,0x0(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF688)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF690)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF698)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x494B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x30)(%rip),%r14
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6A0)(%rip),%r14
	movq %r14,0x10(%r15)
	movq (globalObjptr+0xF6A8)(%rip),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xF6B0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x38)(%rip),%r13
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6B8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xF6C0)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x76D8)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	movb $0x1,0x2B0(%rbp)
	movq $0x1,0x2B8(%rbp)
.p2align 0x4,,0x7
L_184184:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456167
.p2align 0x4,,0x7
L_184185:
	movzbw 0x2B0(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movq $0x2393,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x2B8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x2A8(%rbp),%r13
	cmpq $0x1,%r13
	je L_456115
L_184186:
	movq %r14,0x2B8(%rbp)
	movb 0x0(%r13),%r14b
	movq 0x8(%r13),%r13
	movq %r13,0x2A8(%rbp)
	movb %r14b,0x2B0(%rbp)
	jmp L_184184
.p2align 0x4
L_456115:
L_184187:
	movw %r15w,0x2B0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq $0x1,0x2B8(%rbp)
.p2align 0x4,,0x7
L_184188:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456166
.p2align 0x4,,0x7
L_184189:
	movq $0x2393,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x2B0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_456116
L_184190:
	movq %r15,0x2B8(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movw %r15w,0x2B0(%rbp)
	jmp L_184188
.p2align 0x4
L_456116:
L_184191:
	movq $0x1,%r13
	xchgq %r13,%r14
.p2align 0x4,,0x7
L_184192:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r10b
	cmpb $0xB,%r10b
	je L_184421
hasCodegen_2:
	movq 0x8(%r13),%r9
	movq 0x0(%r13),%r8
	cmpb $0x0,%r10b
	je L_456161
	cmpb $0xB,%r10b
	je L_456159
	movq %r14,(localObjptr+0x8)(%rip)
L_184193:
	cmpq $0x1,%r15
	je L_456158
L_184194:
	movw 0x0(%r15),%r11w
	movq 0x8(%r15),%r15
	movq %r15,%r14
	movw %r11w,%r15w
	movq (localObjptr+0x8)(%rip),%r13
.p2align 0x4,,0x7
L_184195:
	movw %r15w,%r11w
	andw $0x1,%r11w
	jz L_456157
L_184197:
	shrw $0x1,%r15w
	movb %r15b,%r11b
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq 0x10(%r15),%rsp
	movb 0x0(%rsp),%r8b
	cmpb $0x0,%r8b
	je L_456148
	cmpb $0xB,%r8b
	je L_456144
L_184198:
	cmpb $0x2,%r11b
	je L_456141
	movq %r13,(localObjptr+0x8)(%rip)
L_184200:
	cmpq $0x1,%r14
	je L_456117
L_184201:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_184195
.p2align 0x4
L_456117:
L_184202:
	movq (localObjptr+0x8)(%rip),%r15
L_184203:
	cmpq $0x1,%r15
	je L_456140
L_184204:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq $0x1,0x2B0(%rbp)
.p2align 0x4,,0x7
L_184205:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456139
.p2align 0x4,,0x7
L_184206:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456118
L_184207:
	movq %r15,0x2B0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x2A8(%rbp)
	jmp L_184205
.p2align 0x4
L_456118:
L_184208:
	movq 0x2B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x2B0(%rbp)
.p2align 0x4,,0x7
L_184209:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456138
.p2align 0x4,,0x7
L_184210:
	movq 0x2A8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456119
L_184211:
	movq %r15,0x2B0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x2A8(%rbp)
	jmp L_184209
.p2align 0x4
L_456119:
L_184212:
	movq %r13,0x2A8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x2B0(%rbp)
.p2align 0x4,,0x7
L_184213:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456137
.p2align 0x4,,0x7
L_184214:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456120
L_184215:
	movq %r15,0x2B0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x2A8(%rbp)
	jmp L_184213
.p2align 0x4
L_456120:
L_184216:
	movq 0x2B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_456130
L_184217:
	movq 0x2A8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_184218:
	andq $0x3,%r15
	jz L_456121
L_184219:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_456121:
L_184220:
	movq 0x2B0(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r15
.p2align 0x4,,0x7
L_184221:
	incq %r15
	addq 0x8(%r14),%r15
	movq %r15,0x2B8(%rbp)
	cmpq $0x1,%r13
	je L_456122
L_184222:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_184221
.p2align 0x4
L_456122:
L_184223:
	testq %r15,%r15
	jz L_456129
L_184224:
	cmpq $0x7FFFFFFF,%r15
	ja L_456128
L_184225:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184226
.p2align 0x4
.long 0x2586
L_184226:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x2C0(%rbp)
L_184227:
	movq 0x2A8(%rbp),%r8
	movq 0x0(%r8),%r14
	movq 0x10(%r8),%r13
	xorq %r11,%r11
	movl $0x1,%ecx
	xorq %r15,%r15
	movq 0x30(%rbp),%r10
	movq 0x2B0(%rbp),%r9
.p2align 0x4,,0x7
loop_1913:
	cmpq 0x2B8(%rbp),%r15
	jnl L_456126
.p2align 0x4,,0x7
loop_1917:
	cmpq %r10,%r11
	jl L_456125
L_184350:
	cmpl $0x1,%ecx
	je L_456124
L_184351:
	cmpq $0x1,%r9
	je L_456123
L_184352:
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%r9
	movq 0x10(%r8),%r13
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r14
	xorq %r11,%r11
	movl $0x1,%ecx
	jmp loop_1917
.p2align 0x4
L_456123:
L_184314:
	movq (globalObjptr+0x6F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456124:
L_184354:
	movq $0x1,%r10
	movq (globalObjptr+0xD500)(%rip),%r13
	xorq %r14,%r14
	xorq %r11,%r11
	xorl %ecx,%ecx
	jmp loop_1917
.p2align 0x4
L_456125:
L_184355:
	movq %r11,%r8
	addq %r14,%r8
	movq 0x2C0(%rbp),%rsp
	movb 0x0(%r13,%r8,1),%sil
	movb %sil,0x0(%rsp,%r15,1)
	incq %r11
	incq %r15
	jmp loop_1913
.p2align 0x4
L_456126:
L_184228:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184229
L_184347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_184348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184348
.p2align 0x4
.long 0x2592
L_184348:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_184229:
	movq 0x2C0(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_184230:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD508)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2B0(%rbp)
	addq $0x2B0,%rbp
	leaq (L_184231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456128:
L_184318:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456129:
L_184357:
	movq (globalObjptr+0x6E8)(%rip),%r14
	movq %r14,0x2C0(%rbp)
	jmp L_184227
.p2align 0x4
L_456130:
L_184358:
	movq 0x2A8(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x2B0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x2B8(%rbp)
	testq %r14,%r14
	jnz L_184360
L_184372:
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r15)
	jne L_456131
L_184374:
	jmp L_184230
.p2align 0x4
L_456131:
L_184360:
	movq 0x2B8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_456135
L_184361:
	cmpq $0x7FFFFFFF,%rdx
	ja L_184318
L_184362:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184363
.p2align 0x4
.long 0x2593
L_184363:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x2A8(%rbp)
L_184364:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1918:
	cmpq 0x2B8(%rbp),%r15
	jnl L_456132
L_184369:
	movq %r15,%r14
	addq 0x30(%rbp),%r14
	movq 0x2A8(%rbp),%r13
	movq 0x2B0(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1918
.p2align 0x4
L_456132:
L_184365:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184366
L_184367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184368
.p2align 0x4
.long 0x2594
L_184368:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_184366:
	movq 0x2A8(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_184230
.p2align 0x4
L_456135:
L_184371:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	jmp L_184364
.p2align 0x4
L_456137:
L_184375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_184376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184376
.p2align 0x4
.long 0x2595
L_184376:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_184214
.p2align 0x4
L_456138:
L_184377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_184378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184378
.p2align 0x4
.long 0x2595
L_184378:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_184210
.p2align 0x4
L_456139:
L_184379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_184380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184380
.p2align 0x4
.long 0x2595
L_184380:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_184206
.p2align 0x4
L_456140:
L_184381:
	movq $0x3,0x2B0(%rbp)
	movl $0x0,0x2B8(%rbp)
	addq $0x2B0,%rbp
	leaq (L_184382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_456141:
	movq %r13,(localObjptr+0x8)(%rip)
L_184388:
	movq %r14,0x2B0(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x2B8(%rbp)
	movq (globalObjptr+0xD540)(%rip),%r15
	movq %r15,0x2A8(%rbp)
L_184389:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456143
.p2align 0x4,,0x7
L_184390:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x2B8(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x2B0(%rbp),%r11
	cmpq $0x1,%r11
	je L_456142
L_184391:
	movq 0x8(%r11),%r14
	movw 0x0(%r11),%r15w
	jmp L_184195
.p2align 0x4
L_456142:
L_184392:
	movq 0x2B8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x2B0(%rbp)
	jmp L_184205
.p2align 0x4
L_456143:
L_184393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184394
.p2align 0x4
.long 0x2596
L_184394:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	jmp L_184390
.p2align 0x4
L_456144:
L_184412:
	cmpb $0x1,%r11b
	je L_456146
	cmpb $0x2,%r11b
	je L_456145
	movq %r13,(localObjptr+0x8)(%rip)
L_184403:
	movq %r14,0x2B0(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x2B8(%rbp)
	movq (globalObjptr+0xD520)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	jmp L_184389
.p2align 0x4
L_456145:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184388
.p2align 0x4
L_456146:
L_184414:
	cmpq $0x1,%r14
	je L_456147
L_184415:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_184195
.p2align 0x4
L_456147:
L_184416:
	movq %r13,%r15
	jmp L_184203
.p2align 0x4
L_456148:
L_184395:
	cmpb $0x1,%r11b
	je L_456151
	cmpb $0x2,%r11b
	je L_456150
L_184396:
	cmpq $0x1,%r14
	je L_456149
L_184397:
	movw 0x0(%r14),%r11w
	movq 0x8(%r14),%r14
	movw %r11w,%r15w
	jmp L_184195
.p2align 0x4
L_456149:
L_184398:
	xchgq %r13,%r15
	jmp L_184203
.p2align 0x4
L_456150:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184388
.p2align 0x4
L_456151:
L_184399:
	cmpb $0x8,0x0(%r10)
	jne L_456156
L_184406:
	movb 0x0(%r9),%r10b
	cmpb $0x2,%r10b
	je L_456155
L_184407:
	cmpb $0x3,%r10b
	jne L_456154
	movb %r11b,%dl
	movq %r13,(localObjptr+0x8)(%rip)
L_184401:
	cmpb $0x1,%dl
	je L_456153
	cmpb $0x2,%dl
	je L_184388
	jmp L_184403
.p2align 0x4
L_456153:
L_184404:
	movq %r14,0x2B0(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x2B8(%rbp)
	movq (globalObjptr+0xD538)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	jmp L_184389
.p2align 0x4
L_456154:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184200
.p2align 0x4
L_456155:
	movb %r11b,%dl
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184401
.p2align 0x4
L_456156:
	movb %r11b,%dl
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184401
.p2align 0x4
L_456157:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_184192
.p2align 0x4
L_456158:
L_184418:
	movq (localObjptr+0x8)(%rip),%r15
	jmp L_184203
.p2align 0x4
L_456159:
L_184427:
	cmpq $0x1,%r15
	je L_456160
L_184428:
	movw 0x0(%r15),%r11w
	movq 0x8(%r15),%r15
	movq %r15,%rax
	movw %r11w,%r15w
	movq %r14,%r13
	movq %rax,%r14
	jmp L_184195
.p2align 0x4
L_456160:
L_184429:
	movq %r14,%r15
	jmp L_184203
.p2align 0x4
L_456161:
L_184419:
	cmpb $0x8,0x0(%r9)
	jne L_184421
L_184422:
	movb 0x0(%r8),%r13b
	cmpb $0x2,%r13b
	je L_184421
L_184423:
	cmpb $0x3,%r13b
	jne L_456162
L_184421:
	movq %r15,0x2B0(%rbp)
	movq %r14,0x2B8(%rbp)
	movq (globalObjptr+0xD678)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	jmp L_184389
.p2align 0x4
L_456162:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_184193
.p2align 0x4
L_456166:
L_184432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184433
.p2align 0x4
.long 0x2597
L_184433:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	jmp L_184189
.p2align 0x4
L_456167:
L_184434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184435
.p2align 0x4
.long 0x2597
L_184435:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	jmp L_184185
.p2align 0x4
L_456168:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
L_184437:
	movq (globalObjptr+0xFBE8)(%rip),%r15
	jmp L_184183
.p2align 0x4
L_456169:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
	jmp L_184437
.p2align 0x4
L_456170:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
	jmp L_184437
.p2align 0x4
L_456171:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
	jmp L_184437
.p2align 0x4
L_456172:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
	jmp L_184437
.p2align 0x4
L_456173:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
	jmp L_184437
.p2align 0x4
L_456174:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
	jmp L_184182
.p2align 0x4
L_456175:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
	jmp L_184437
.p2align 0x4
L_456176:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
	jmp L_184437
.p2align 0x4
L_456177:
L_184445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x4A8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_184446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184446
.p2align 0x4
.long 0x452
L_184446:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_184181
.p2align 0x4
.long 0x2587
L_184231:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x6A0,%r15
	jnb L_184232
L_184345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x6A0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_184346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184346
.p2align 0x4
.long 0x2591
L_184346:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_184232:
	movq $0x48F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6C8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xCA50)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x2A0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x48E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6D0)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xF6D8)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF6E0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6E8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF640)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF6F0)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x494D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x58(%rbp),%r9
	movq %r9,0x8(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6F8)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xCA60)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF700)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r8,0x8(%r11)
	addq $0x18,%r12
	movq $0x48F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF708)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xF710)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF718)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x48E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x298(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x68(%rbp),%r9
	movq %r9,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF720)(%rip),%r9
	movq %r9,0x10(%r15)
	movq (globalObjptr+0xF728)(%rip),%r9
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xD628)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq $0x48FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r10
	movq %r10,0x8(%r15)
	movq 0x78(%rbp),%r10
	movq %r10,0x10(%r15)
	movq 0x80(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x88(%rbp),%r10
	movq %r10,0x20(%r15)
	movq 0x90(%rbp),%r10
	movq %r10,0x28(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r10b
	movzbl %r10b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF730)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xF738)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF740)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r8,0x8(%r10)
	addq $0x18,%r12
	movq $0x48DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r8
	movq %r8,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF748)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xF750)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF758)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r10,0x8(%rsp)
	addq $0x18,%r12
	movq $0x48FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r11,0x0(%r15)
	movq 0xA0(%rbp),%r10
	movq %r10,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsi,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%sil
	movzbl %sil,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF760)(%rip),%rsi
	movq %rsi,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xD708)(%rip),%rsi
	movq %rsi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movq $0x48DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF768)(%rip),%rsp
	movq %rsp,0x10(%r15)
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF770)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %rsi,0x8(%r14)
	addq $0x18,%r12
	movq $0x48FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r11,0x0(%r15)
	movq %r10,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF778)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xD710)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x76F0)(%rip),%r11
	movq %r11,0x0(%r15)
	movq $0x4949,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xF780)(%rip),%r11
	movq %r11,0x10(%r14)
	movq (globalObjptr+0xF6A8)(%rip),%r11
	movq %r11,0x18(%r14)
	movq (globalObjptr+0xF788)(%rip),%r11
	movq %r11,0x20(%r14)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r10
	movq %r10,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF790)(%rip),%r10
	movq %r10,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF798)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq $0x48DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7A0)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF7A8)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF7B0)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2A8(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x7708)(%rip),%r15
	movq $0x1,%r14
.p2align 0x4,,0x7
L_184233:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xD718)(%rip),%r15
	movq %r15,0x30(%rbp)
L_184234:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456205
.p2align 0x4,,0x7
L_184235:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_456182
L_184236:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	cmpb $0x1,%r11b
	je L_456181
	cmpb $0x2,%r11b
	je L_456180
	cmpb $0x3,%r11b
	je L_456179
L_184237:
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xD720)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_184234
.p2align 0x4
L_456179:
L_184240:
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xD730)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_184234
.p2align 0x4
L_456180:
L_184239:
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_184233
.p2align 0x4
L_456181:
L_184238:
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xD728)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_184234
.p2align 0x4
L_456182:
L_184241:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_184242:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456204
.p2align 0x4,,0x7
L_184243:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456183
L_184244:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_184242
.p2align 0x4
L_456183:
L_184245:
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_184246:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456203
.p2align 0x4,,0x7
L_184247:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456184
L_184248:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_184246
.p2align 0x4
L_456184:
L_184249:
	movq %r13,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_184250:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456202
.p2align 0x4,,0x7
L_184251:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456185
L_184252:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_184250
.p2align 0x4
L_456185:
L_184253:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_456195
L_184254:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_184255:
	andq $0x3,%r15
	jz L_456186
L_184256:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_456186:
L_184257:
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r15
.p2align 0x4,,0x7
L_184258:
	incq %r15
	addq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r13
	je L_456187
L_184259:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_184258
.p2align 0x4
L_456187:
L_184260:
	testq %r15,%r15
	jz L_456194
L_184261:
	cmpq $0x7FFFFFFF,%r15
	ja L_184318
L_184262:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184263
.p2align 0x4
.long 0x2588
L_184263:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq %rax,0x50(%rbp)
L_184264:
	movq 0x38(%rbp),%r8
	movq 0x0(%r8),%r14
	movq 0x10(%r8),%r13
	xorq %r11,%r11
	movl $0x1,%ecx
	xorq %r15,%r15
	movq 0x30(%rbp),%r10
	movq 0x40(%rbp),%r9
.p2align 0x4,,0x7
loop_1914:
	cmpq 0x48(%rbp),%r15
	jnl L_456191
.p2align 0x4,,0x7
loop_1915:
	cmpq %r10,%r11
	jl L_456190
L_184310:
	cmpl $0x1,%ecx
	je L_456189
L_184311:
	cmpq $0x1,%r9
	je L_184314
L_184312:
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%r9
	movq 0x10(%r8),%r13
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r14
	xorq %r11,%r11
	movl $0x1,%ecx
	jmp loop_1915
.p2align 0x4
L_456189:
L_184315:
	movq $0x1,%r10
	movq (globalObjptr+0xD500)(%rip),%r13
	xorq %r14,%r14
	xorq %r11,%r11
	xorl %ecx,%ecx
	jmp loop_1915
.p2align 0x4
L_456190:
L_184316:
	movq %r11,%r8
	addq %r14,%r8
	movq 0x50(%rbp),%rsp
	movb 0x0(%r13,%r8,1),%sil
	movb %sil,0x0(%rsp,%r15,1)
	incq %r11
	incq %r15
	jmp loop_1914
.p2align 0x4
L_456191:
L_184265:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184266
L_184307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184308
.p2align 0x4
.long 0x258D
L_184308:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_184266:
	movq 0x50(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_184267:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD508)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2B8(%rbp)
	addq $0x2B8,%rbp
	leaq (L_184268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456194:
L_184319:
	movq (globalObjptr+0x6E8)(%rip),%r14
	movq %r14,0x50(%rbp)
	jmp L_184264
.p2align 0x4
L_456195:
L_184320:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	testq %r14,%r14
	jnz L_184322
L_184334:
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jne L_456196
L_184336:
	jmp L_184267
.p2align 0x4
L_456196:
L_184322:
	movq 0x48(%rbp),%rdx
	testq %rdx,%rdx
	jz L_456200
L_184323:
	cmpq $0x7FFFFFFF,%rdx
	ja L_184318
L_184324:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184325
.p2align 0x4
.long 0x258E
L_184325:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq %rax,0x38(%rbp)
L_184326:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1916:
	cmpq 0x48(%rbp),%r15
	jnl L_456197
L_184331:
	movq %r15,%r14
	addq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1916
.p2align 0x4
L_456197:
L_184327:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184328
L_184329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184330
.p2align 0x4
.long 0x258F
L_184330:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_184328:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_184267
.p2align 0x4
L_456200:
L_184333:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_184326
.p2align 0x4
L_456202:
L_184337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184338
.p2align 0x4
.long 0x2590
L_184338:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	jmp L_184251
.p2align 0x4
L_456203:
L_184339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184340
.p2align 0x4
.long 0x2590
L_184340:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	jmp L_184247
.p2align 0x4
L_456204:
L_184341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184342
.p2align 0x4
.long 0x2590
L_184342:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	jmp L_184243
.p2align 0x4
L_456205:
L_184343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184344
.p2align 0x4
.long 0x2590
L_184344:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	jmp L_184235
.p2align 0x4
.long 0x2587
L_184382:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184383
L_184384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_184385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184385
.p2align 0x4
.long 0x2591
L_184385:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_184383:
	movq 0x30(%rbp),%r15
	jmp L_184230
.p2align 0x4
.long 0x2589
L_184268:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq 0x2B8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x16A8,%r15
	jnb L_184269
L_184305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x16A8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184306
.p2align 0x4
.long 0x258C
L_184306:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_184269:
	movq $0x4901,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xCB20)(%rip),%r13
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF7B8)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x48D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7C0)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xF7C8)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF7D0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7D8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF640)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF7E0)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7720)(%rip),%r11
	movq %r11,0x0(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0x7730)(%rip),%r15
	movq %r15,0x0(%r11)
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE0(%rbp),%r10
	movq %r10,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7E8)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xF6A8)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF7F0)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7F8)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF800)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r9,0x8(%rsp)
	addq $0x18,%r12
	movq $0x494F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%esi
	movl %esi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF808)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF810)(%rip),%rsi
	movq %rsi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movq $0x4903,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq %r11,0x10(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF818)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xBB50)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF820)(%rip),%rdi
	movq %rdi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	movq %rsi,0x8(%rdi)
	addq $0x18,%r12
	movq $0x4943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF0(%rbp),%rsi
	movq %rsi,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdx,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dl
	movzbl %dl,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF828)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x4951,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rsi,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dil
	movzbl %dil,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF830)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r8,0x8(%r9)
	addq $0x18,%r12
	movq $0x48D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq %rsi,0x10(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF838)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF840)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7740)(%rip),%r9
	movq %r9,0x0(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq (globalObjptr+0x7750)(%rip),%r15
	movq %r15,0x0(%r9)
	movq $0x4905,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x60,%r12
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r8
	movq %r8,0x8(%r15)
	movq 0x100(%rbp),%r8
	movq %r8,0x10(%r15)
	movq 0x108(%rbp),%r8
	movq %r8,0x18(%r15)
	movq 0x110(%rbp),%r8
	movq %r8,0x20(%r15)
	movq 0x118(%rbp),%r8
	movq %r8,0x28(%r15)
	movq 0x120(%rbp),%r8
	movq %r8,0x30(%r15)
	movq 0x128(%rbp),%r8
	movq %r8,0x38(%r15)
	movq 0x130(%rbp),%r8
	movq %r8,0x40(%r15)
	movq 0x138(%rbp),%r8
	movq %r8,0x48(%r15)
	movq 0x140(%rbp),%r8
	movq %r8,0x50(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF848)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xF850)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF858)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq $0x48D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r9
	movq %r9,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF860)(%rip),%r9
	movq %r9,0x10(%r15)
	movq (globalObjptr+0xF750)(%rip),%r9
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xF868)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq $0x4907,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x150(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esi
	movl %esi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF870)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xF878)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF880)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rsp,0x8(%r8)
	addq $0x18,%r12
	movq $0x48D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x158(%rbp),%rsp
	movq %rsp,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsi,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%sil
	movzbl %sil,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF888)(%rip),%rsi
	movq %rsi,0x10(%r15)
	movq (globalObjptr+0xF618)(%rip),%rsi
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xF890)(%rip),%rdi
	movq %rdi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	movq %r8,0x8(%rdi)
	addq $0x18,%r12
	movq $0x4909,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rsp,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF898)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xF8A0)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x4937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%esi
	movl %esi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF8A8)(%rip),%rsp
	movq %rsp,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF8B0)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esi
	movl %esi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF8B8)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF8C0)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rsp,0x8(%r8)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7768)(%rip),%r8
	movq %r8,0x0(%r15)
	movq $0x48D1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x20,%r12
	movq 0x170(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x178(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0x180(%rbp),%rsp
	movq %rsp,0x10(%r8)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r8,0x0(%rsi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %rsi,0x8(%r8)
	addq $0x30,%r12
	movb $0x1,%sil
	movzbl %sil,%edi
	movl %edi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq (globalObjptr+0xF8C8)(%rip),%rsi
	movq %rsi,0x10(%r8)
	movq (globalObjptr+0xF7A8)(%rip),%rsi
	movq %rsi,0x18(%r8)
	movq (globalObjptr+0xF8D0)(%rip),%rdi
	movq %rdi,0x20(%r8)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r8,0x0(%rdi)
	movq %r15,0x8(%rdi)
	addq $0x18,%r12
	movq $0x490B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rsp,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF8D8)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xF6D8)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF8E0)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7780)(%rip),%r8
	movq %r8,0x0(%r15)
	movq $0x4949,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq 0x188(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %rsp,0x8(%r8)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%edi
	movl %edi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq (globalObjptr+0xF8E8)(%rip),%rsp
	movq %rsp,0x10(%r8)
	movq %r10,0x18(%r8)
	movq (globalObjptr+0xF8F0)(%rip),%rsp
	movq %rsp,0x20(%r8)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r15,0x8(%rsp)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7798)(%rip),%r8
	movq %r8,0x0(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x8(%r8)
	addq $0x18,%r12
	movq (globalObjptr+0x77B0)(%rip),%r15
	movq %r15,0x0(%r8)
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x190(%rbp),%rsp
	movq %rsp,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF8F8)(%rip),%rsp
	movq %rsp,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF900)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x198(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF908)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF910)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rsp,0x8(%r8)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x77C8)(%rip),%r8
	movq %r8,0x0(%r15)
	movq $0x493B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq 0x1A0(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %rsp,0x8(%r8)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%edi
	movl %edi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq (globalObjptr+0xF918)(%rip),%rsp
	movq %rsp,0x10(%r8)
	movq %r11,0x18(%r8)
	movq (globalObjptr+0xF920)(%rip),%rsp
	movq %rsp,0x20(%r8)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r15,0x8(%rsp)
	addq $0x18,%r12
	movq $0x4941,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1A8(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF928)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF930)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rsp,0x8(%r8)
	addq $0x18,%r12
	movq $0x48CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dil
	movzbl %dil,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xBBE8)(%rip),%rdi
	movq %rdi,0x10(%r15)
	movq (globalObjptr+0xF938)(%rip),%rdi
	movq %rdi,0x18(%r15)
	movq (globalObjptr+0xF940)(%rip),%rdi
	movq %rdi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	movq %r8,0x8(%rdi)
	addq $0x18,%r12
	movq $0x490D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1B8(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r8b
	movzbl %r8b,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF948)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xDD88)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x4953,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1C0(%rbp),%rdi
	movq %rdi,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdx,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dl
	movzbl %dl,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF950)(%rip),%rdx
	movq %rdx,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xCC50)(%rip),%rdx
	movq %rdx,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	movq %r8,0x8(%rdx)
	addq $0x18,%r12
	movq $0x493F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rdi,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF958)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF960)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdx,0x8(%r8)
	addq $0x18,%r12
	movq $0x4935,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rdi,0x0(%r15)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdx,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dl
	movzbl %dl,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF968)(%rip),%rdx
	movq %rdx,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF970)(%rip),%rdx
	movq %rdx,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	movq %r8,0x8(%rdx)
	addq $0x18,%r12
	movq $0x493D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rdi,0x0(%r15)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF978)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF980)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdx,0x8(%r8)
	addq $0x18,%r12
	movq $0x4933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rdi,0x0(%r15)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dil
	movzbl %dil,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF988)(%rip),%rdi
	movq %rdi,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF990)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r8,0x8(%r11)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1C8(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF998)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF9A0)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r11,0x8(%r8)
	addq $0x18,%r12
	movq $0x48CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9A8)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xF9B0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r8,0x8(%r11)
	addq $0x18,%r12
	movq $0x490F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x1D8(%rbp),%r9
	movq %r9,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x1E0(%rbp),%r9
	movq %r9,0x10(%r15)
	movq %r14,0x18(%r15)
	movq 0x1E8(%rbp),%r9
	movq %r9,0x20(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9B8)(%rip),%r9
	movq %r9,0x10(%r15)
	movq (globalObjptr+0xF9C0)(%rip),%r9
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xCC68)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9C8)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF9D0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movq $0x48CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1F8(%rbp),%r9
	movq %r9,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9D8)(%rip),%r9
	movq %r9,0x10(%r15)
	movq (globalObjptr+0xF9E0)(%rip),%r9
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xF9E8)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r11,0x8(%r8)
	addq $0x18,%r12
	movq $0x4911,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x200(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dil
	movzbl %dil,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9F0)(%rip),%rdi
	movq %rdi,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xF9F8)(%rip),%rdi
	movq %rdi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	movq %r8,0x8(%rdi)
	addq $0x18,%r12
	movq $0x48C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x208(%rbp),%r8
	movq %r8,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA00)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xFA08)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xFA10)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x4913,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA18)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xFA20)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r8,0x8(%r11)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x210(%rbp),%r9
	movq %r9,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA28)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFA30)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x218(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA38)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFA40)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x220(%rbp),%r9
	movq %r9,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA48)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFA50)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x48C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x228(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA58)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xFA60)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xFA68)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4915,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x230(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA70)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xFA78)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFA80)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x48C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x238(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA88)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xFA90)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4917,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA98)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xFAA0)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x248(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAA8)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFAB0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x48C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAB8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xFAC0)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFAC8)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x4919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAD0)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFAD8)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r10,0x8(%r11)
	addq $0x18,%r12
	movq $0x48C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x250(%rbp),%r10
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAE0)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xFAE8)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFAF0)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x491B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAF8)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFB00)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq 0x258(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_184270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1204
.p2align 0x4
.long 0x258A
L_184270:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184271
L_184303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_184304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184304
.p2align 0x4
.long 0x258B
L_184304:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_184271:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_456210
L_184272:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	je L_456209
L_184273:
	movq 0x8(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x77D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_184274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456209:
L_184301:
	movq 0x8(%r14),%r15
L_184276:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD508)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_184277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456210:
L_184302:
	movq (globalObjptr+0xA058)(%rip),%r14
	xchgq %r14,%r15
	jmp L_184276
.p2align 0x4
.long 0x258A
L_184274:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184275
L_184299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_184300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184300
.p2align 0x4
.long 0x258B
L_184300:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_184275:
	movq 0x28(%rbp),%r15
	jmp L_184276
.p2align 0x4
.long 0x258A
L_184277:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x558,%r15
	jnb L_184278
L_184297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x558,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_184298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184298
.p2align 0x4
.long 0x258B
L_184298:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_184278:
	movq $0x48BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x258(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x270(%rbp),%r13
	movq %r13,0x20(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB08)(%rip),%r13
	movq %r13,0x10(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xCCC0)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x48B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB10)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xFB18)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB20)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq $0x48B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB28)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB30)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movq $0x48B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB38)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB40)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq $0x48B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB48)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB50)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movq $0x48BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x158(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB58)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB60)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq $0x48B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB68)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB70)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x278(%rbp),%r11
	movq %r11,0x8(%r15)
	movq (globalObjptr+0xFB78)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xFB80)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xFB88)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x280(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB90)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF640)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFB98)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x491D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x288(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFBA0)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xFBA8)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xFBB0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x290(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFBB8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF6A8)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFBC0)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFBC8)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFBD0)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movq $0x48BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFBD8)(%rip),%r14
	movq %r14,0x10(%r15)
	movq (globalObjptr+0xFAC0)(%rip),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xFBE0)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x77E8)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_184279:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456218
.p2align 0x4,,0x7
L_184280:
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_456213
L_184281:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_184279
.p2align 0x4
L_456213:
L_184282:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_184283:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456217
.p2align 0x4,,0x7
L_184284:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movb 0x0(%r15),%r9b
	movq $0x1215,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r13,0x18(%r15)
	movq %r11,0x20(%r15)
	addq $0x30,%r12
	movzbl %r9b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2385,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_456214
L_184285:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_184283
.p2align 0x4
L_456214:
L_184286:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_184287:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456216
.p2align 0x4,,0x7
L_184288:
	movq $0x2385,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_456215
L_184289:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_184287
.p2align 0x4
L_456215:
L_184290:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456216:
L_184291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_184292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184292
.p2align 0x4
.long 0x45C
L_184292:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_184288
.p2align 0x4
L_456217:
L_184293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_184294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184294
.p2align 0x4
.long 0x45C
L_184294:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_184284
.p2align 0x4
L_456218:
L_184295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_184296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184296
.p2align 0x4
.long 0x45C
L_184296:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_184280
