/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:16:58 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl get_106
.hidden get_106
get_106:
L_137892:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_137893
L_137931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_137932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137932
.p2align 0x4
.long 0x4DF
L_137932:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_137893:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_137894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
.long 0x656
L_137894:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movb 0x40(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137895
L_137929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_137930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137930
.p2align 0x4
.long 0x635
L_137930:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_137895:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_431089
L_137896:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431089:
L_137897:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_137900
	cmpq $0x2,%r15
	je L_137900
	cmpq $0x3,%r15
	je L_137900
	cmpq $0x5,%r15
	je L_137900
L_137898:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_431098
	cmpq $0xEB1,%r15
	je L_431097
	cmpq $0xEB2,%r15
	je L_431093
	cmpq $0xEB3,%r15
	je L_431092
	cmpq $0xEB4,%r15
	je L_431091
	cmpq $0xEB5,%r15
	je L_431090
L_137900:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431090:
L_137924:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x40,%rbp
	leaq (L_137902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_106
.p2align 0x4
L_431091:
L_137919:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_137920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_83
.p2align 0x4
L_431092:
L_137918:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x40,%rbp
	leaq (L_137902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_106
.p2align 0x4
L_431093:
L_137907:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_431094
L_137908:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431094:
L_137909:
	cmpl $0x0,0x40(%rbp)
	jl L_431096
L_137910:
	movl $0x0,0x44(%rbp)
loop_1445:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_137900
L_137912:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x50,%rbp
	leaq (L_137913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_106
.p2align 0x4
L_431096:
L_137917:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431097:
L_137906:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x40,%rbp
	leaq (L_137902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_106
.p2align 0x4
L_431098:
L_137901:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x40,%rbp
	leaq (L_137902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_106
.p2align 0x4
.long 0x8F9
L_137902:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137900
L_137904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137905
.p2align 0x4
.long 0x1DA8
L_137905:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_137900
.p2align 0x4
.long 0x8FB
L_137920:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137921
L_137922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137923
.p2align 0x4
.long 0x75C
L_137923:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_137921:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x20C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_137900
.p2align 0x4
.long 0x1DA9
L_137913:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137914
L_137915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_137916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137916
.p2align 0x4
.long 0x67E
L_137916:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_137914:
	incl 0x44(%rbp)
	jmp loop_1445
.text
.p2align 0x4
.globl tabulate_11
.hidden tabulate_11
tabulate_11:
L_137933:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_137934
L_137954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_137955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137955
.p2align 0x4
.long 0x458
L_137955:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_137934:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_431117
L_137935:
	cmpq $0x7FFFFFFF,%rdx
	ja L_431116
L_137936:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x97B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_137937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137937
.p2align 0x4
.long 0x453
L_137937:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,%r15
L_137938:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1446:
	cmpq 0x10(%rbp),%r14
	jnl L_431115
L_137940:
	movl %r14d,%r11d
	movq 0x0(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x1D0C,%r13
	je L_431114
	cmpq $0x1D0D,%r13
	je L_431113
	cmpq $0x1D0E,%r13
	je L_431112
	cmpq $0x1D0F,%r13
	je L_431111
	cmpq $0x1D10,%r13
	je L_431110
	cmpq $0x1D11,%r13
	je L_431107
L_137941:
	movq 0x0(%r10),%r9
	movslq %r11d,%r13
	salq $0x4,%r13
	movq 0x8(%r9,%r13,1),%r9
	movq %r9,%r13
L_137942:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1446
.p2align 0x4
L_431107:
L_137948:
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r9
	cmpl $0x0,%r11d
	je L_137942
	cmpl $0x1,%r11d
	je L_431108
L_137949:
	movq (globalObjptr+0x4A8)(%rip),%r11
	movq %r11,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431108:
L_137951:
	movq %r9,%r13
	jmp L_137942
.p2align 0x4
L_431110:
L_137947:
	movq 0x0(%r10),%r9
	movslq %r11d,%r13
	movq 0x0(%r9,%r13,8),%r11
	movq 0x0(%r11),%r9
	movq %r9,%r13
	jmp L_137942
.p2align 0x4
L_431111:
L_137946:
	movq 0x0(%r10),%r9
	movslq %r11d,%r13
	movq 0x0(%r9,%r13,8),%r11
	movq 0x0(%r11),%r9
	movq %r9,%r13
	jmp L_137942
.p2align 0x4
L_431112:
L_137945:
	movq 0x0(%r10),%r9
	movslq %r11d,%r13
	movq 0x0(%r9,%r13,8),%r11
	movq 0x8(%r11),%r9
	movq %r9,%r13
	jmp L_137942
.p2align 0x4
L_431113:
L_137944:
	movq 0x0(%r10),%r9
	movslq %r11d,%r13
	movq 0x0(%r9,%r13,8),%r11
	movq 0x0(%r11),%r9
	movq %r9,%r13
	jmp L_137942
.p2align 0x4
L_431114:
L_137943:
	movq 0x0(%r10),%r9
	movslq %r11d,%r13
	salq $0x4,%r13
	movq 0x0(%r9,%r13,1),%r9
	movq %r9,%r13
	jmp L_137942
.p2align 0x4
L_431115:
L_137939:
	movq $0x6ED,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431116:
L_137952:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431117:
L_137953:
	movq (globalObjptr+0xB78)(%rip),%r15
	jmp L_137938
.text
.p2align 0x4
.globl foreach_1
.hidden foreach_1
foreach_1:
L_137956:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_137957
L_138654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_138655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138655
.p2align 0x4
.long 0x460
L_138655:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_137957:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_137959
L_137960:
	cmpl $0x0,%r13d
	jl L_138063
L_137961:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431260
.p2align 0x4,,0x7
L_137962:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_431259
L_137964:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x18(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_431255
L_137965:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x191D,%rax
	cmpq $0xA,%rax
	ja L_431119
	jmp *jumpTable_299(,%rax,8)
.data
.p2align 0x4
jumpTable_299:
.quad L_431237,L_431236,L_431218,L_431211,L_431209,L_431202,L_431143,L_431142,L_431141,L_431122,L_431121
.text
.p2align 0x4
L_431119:
L_137966:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_431120
L_138004:
	movq %r11,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_138005+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_431120:
L_137967:
L_137968:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431121:
L_138535:
	movq 0x0(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x68,%rbp
	leaq (L_138536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_431122:
L_138477:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_431140
L_138478:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_431139
L_138479:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_138481:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_431138
L_138527:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA5,%r11
	jne L_431137
L_138528:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_431134
L_138482:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_431133
L_138483:
	cmpq $0x1,%r15
	je L_431123
L_138484:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_138481
.p2align 0x4
L_431123:
L_138485:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431132
.p2align 0x4,,0x7
L_138486:
	movl 0x18(%rbp),%ecx
L_138487:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_431131
L_138488:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138490
L_138524:
	movl %ecx,0x0(%r15)
L_138490:
	movq $0x2741,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x74B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x194B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r14,0x18(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_138491:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_137959
L_138493:
	cmpl $0x0,%r13d
	jl L_138063
L_138494:
	movl $0x0,0x34(%rbp)
loop_1459:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_431127
L_138496:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_431126
L_138498:
	cmpl $0x0,%r14d
	jl L_431125
L_138499:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_1460:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_431124
L_138500:
	incl 0x34(%rbp)
	jmp loop_1459
.p2align 0x4
L_431124:
L_138501:
	movslq 0x44(%rbp),%r15
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_138502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_431125:
L_138063:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431126:
L_137959:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431127:
.p2align 0x4,,0x7
L_137993:
	incl 0x14(%rbp)
	jmp loop_1447
.p2align 0x4
L_431131:
L_138024:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431132:
L_138525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_138526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138526
.p2align 0x4
.long 0xF2D
L_138526:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_138486
.p2align 0x4
L_431133:
L_137985:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431134:
L_138530:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138531:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_431135
L_138533:
	movl %ecx,0x0(%r15)
	movq %r11,0x18(%rbp)
	jmp L_138491
.p2align 0x4
L_431135:
L_138532:
	movq %r11,0x18(%rbp)
	jmp L_138491
.p2align 0x4
L_431137:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_138482
.p2align 0x4
L_431138:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_138482
.p2align 0x4
L_431139:
L_138534:
	xorl %ecx,%ecx
	jmp L_138487
.p2align 0x4
L_431140:
L_138013:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431141:
L_138446:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x40(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	movq 0x0(%r14),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_138447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_431142:
L_138400:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1E4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_138401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_431143:
L_138239:
	movq 0x0(%rbp),%r13
	movq 0x38(%r13),%r15
	movq 0x30(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movl %r10d,0x60(%rbp)
	movslq %r10d,%r14
	cmpq %r14,%r11
	jne L_137959
L_138241:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_138013
L_138242:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_431199
L_138243:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x64(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_138245:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_431198
L_138389:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD39,%r11
	jne L_431197
L_138390:
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_431193
L_138246:
	movl 0x64(%rbp),%r11d
	incl %r11d
	movl %r11d,0x78(%rbp)
	jo L_137985
L_138247:
	cmpq $0x1,%r15
	je L_431144
L_138248:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x64(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_138245
.p2align 0x4
L_431144:
L_138249:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431191
.p2align 0x4,,0x7
L_138250:
	movl 0x78(%rbp),%ecx
L_138251:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138252:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138254
L_138386:
	movl %ecx,0x0(%r15)
L_138254:
	movq $0x1381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_138255:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jnz L_431187
L_138277:
	movl 0x60(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138013
L_138278:
	movq %r15,0x0(%r13)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_431185
L_138279:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_138281:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138282
L_138377:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD39,%r13
	jne L_138282
L_138378:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x30(%rbp)
	je L_431180
L_138282:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_137985
L_138283:
	cmpq $0x1,%r15
	je L_431145
L_138284:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138281
.p2align 0x4
L_431145:
L_138285:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431178
.p2align 0x4,,0x7
L_138286:
	movl 0x28(%rbp),%ecx
L_138287:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138288:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138290
L_138374:
	movl %ecx,0x0(%r15)
L_138290:
	movq $0x1381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_138291:
	cmpl $0x0,0x60(%rbp)
	jl L_138063
L_138292:
	movl $0x0,0x18(%rbp)
loop_1456:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431174
.p2align 0x4,,0x7
L_138293:
	movl 0x18(%rbp),%r11d
	cmpl 0x60(%rbp),%r11d
	jnl L_137993
L_138295:
	movslq %r11d,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r15,1),%r10
	movq %r10,0x28(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%r10),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_138013
L_138296:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_431171
L_138297:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x1C(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_138299:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_431170
L_138360:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA0,%r11
	jne L_431169
L_138361:
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_431165
L_138300:
	movl 0x1C(%rbp),%r11d
	incl %r11d
	movl %r11d,0x64(%rbp)
	jo L_137985
L_138301:
	cmpq $0x1,%r15
	je L_431146
L_138302:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x1C(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_138299
.p2align 0x4
L_431146:
L_138303:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431163
.p2align 0x4,,0x7
L_138304:
	movl 0x64(%rbp),%ecx
L_138305:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138306:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138308
L_138357:
	movl %ecx,0x0(%r15)
L_138308:
	movq $0x1413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1941,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_506:
	cmpb $0x2,0x0(%r15)
	jne L_431159
L_138330:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138013
L_138331:
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_431157
L_138332:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_138334:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138335
L_138348:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA0,%r13
	jne L_138335
L_138349:
	movq 0x8(%r14),%r13
	movq 0x50(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_431152
L_138335:
	incl %ecx
	movl %ecx,0x1C(%rbp)
	jo L_137985
L_138336:
	cmpq $0x1,%r15
	je L_431147
L_138337:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138334
.p2align 0x4
L_431147:
L_138338:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431150
.p2align 0x4,,0x7
L_138339:
	movl 0x1C(%rbp),%ecx
L_138340:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138341:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138343
L_138345:
	movl %ecx,0x0(%r15)
L_138343:
	movq $0x1413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1941,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_138344:
	incl 0x18(%rbp)
	jmp loop_1456
.p2align 0x4
L_431150:
L_138346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138347
.p2align 0x4
.long 0x1DB3
L_138347:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_138339
.p2align 0x4
L_431152:
L_138351:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138352:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_431153
L_138355:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_138354:
	movb $0x1,0x0(%r15)
	jmp L_138344
.p2align 0x4
L_431153:
L_138353:
	movq %r13,%r15
	jmp L_138354
.p2align 0x4
L_431157:
L_138356:
	xorl %ecx,%ecx
	jmp L_138340
.p2align 0x4
L_431159:
L_138309:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_431160
L_138328:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_138329+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_431160:
L_138310:
L_138311:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431163:
L_138358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138359
.p2align 0x4
.long 0xCE2
L_138359:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_138304
.p2align 0x4
L_431165:
L_138363:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431168
.p2align 0x4,,0x7
L_138364:
	movl 0x1C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_138024
L_138365:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_431166
L_138366:
	movq 0x68(%rbp),%r15
	jmp x_506
.p2align 0x4
L_431166:
L_138367:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp x_506
.p2align 0x4
L_431168:
L_138368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_138369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138369
.p2align 0x4
.long 0x1312
L_138369:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_138364
.p2align 0x4
L_431169:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_138300
.p2align 0x4
L_431170:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_138300
.p2align 0x4
L_431171:
L_138370:
	xorl %ecx,%ecx
	jmp L_138305
.p2align 0x4
L_431174:
L_138371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138372
.p2align 0x4
.long 0x1DB4
L_138372:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_138293
.p2align 0x4
L_431178:
L_138375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_138376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138376
.p2align 0x4
.long 0x1D95
L_138376:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_138286
.p2align 0x4
L_431180:
L_138380:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138381:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_431181
L_138384:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_138383:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_138291
.p2align 0x4
L_431181:
L_138382:
	movq %r13,%r15
	jmp L_138383
.p2align 0x4
L_431185:
L_138385:
	xorl %ecx,%ecx
	jmp L_138287
.p2align 0x4
L_431187:
L_138256:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_431188
L_138275:
	movq %r11,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_138276+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_431188:
L_138257:
L_138258:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431191:
L_138387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_138388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138388
.p2align 0x4
.long 0x1D97
L_138388:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_138250
.p2align 0x4
L_431193:
L_138392:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431196
.p2align 0x4,,0x7
L_138393:
	movl 0x64(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_138024
L_138394:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_431194
L_138395:
	movq 0x78(%rbp),%r15
	jmp L_138255
.p2align 0x4
L_431194:
L_138396:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x64(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_138255
.p2align 0x4
L_431196:
L_138397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_138398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138398
.p2align 0x4
.long 0x12A0
L_138398:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_138393
.p2align 0x4
L_431197:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_138246
.p2align 0x4
L_431198:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_138246
.p2align 0x4
L_431199:
L_138399:
	xorl %ecx,%ecx
	jmp L_138251
.p2align 0x4
L_431202:
L_138225:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0xB75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_137959
L_138227:
	cmpl $0x0,%r13d
	jl L_138063
L_138228:
	movl $0x0,0x2C(%rbp)
loop_1454:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_137993
L_138230:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x38(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_137959
L_138232:
	cmpl $0x0,%r14d
	jl L_138063
L_138233:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1455:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_431203
L_138234:
	incl 0x2C(%rbp)
	jmp loop_1454
.p2align 0x4
L_431203:
L_138235:
	movslq 0x3C(%rbp),%r15
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_138236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_431209:
L_138198:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_431210
L_138223:
	movq %r11,0x60(%rbp)
	movq %r13,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_138224+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_431210:
L_138199:
L_138200:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_138201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431211:
L_138184:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq $0xD83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_137959
L_138186:
	cmpl $0x0,%r13d
	jl L_138063
L_138187:
	movl $0x0,0x2C(%rbp)
loop_1452:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_137993
L_138189:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x38(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_137959
L_138191:
	cmpl $0x0,%r14d
	jl L_138063
L_138192:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1453:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_431212
L_138193:
	incl 0x2C(%rbp)
	jmp loop_1452
.p2align 0x4
L_431212:
L_138194:
	movslq 0x3C(%rbp),%r15
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_138195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
L_431218:
L_138129:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_137959
L_138131:
	cmpl $0x0,%r13d
	jl L_138063
L_138132:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1451:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431233
.p2align 0x4,,0x7
L_138133:
	movl 0x3C(%rbp),%r13d
	cmpl 0x38(%rbp),%r13d
	jnl L_137993
L_138135:
	movslq %r13d,%r15
	salq $0x4,%r15
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138013
L_138136:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_431230
L_138137:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_138139:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138140
L_138173:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD42,%r13
	jne L_138140
L_138174:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x40(%rbp)
	je L_431225
L_138140:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_137985
L_138141:
	cmpq $0x1,%r15
	je L_431219
L_138142:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138139
.p2align 0x4
L_431219:
L_138143:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138144
L_138171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138172
.p2align 0x4
.long 0x1DAE
L_138172:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_138144:
	movl 0x50(%rbp),%ecx
L_138145:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138146:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138148
L_138170:
	movl %ecx,0x0(%r15)
L_138148:
	movq $0x1371,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_502:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_431220
L_138149:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_138150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431220:
L_138166:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (x_504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431225:
L_138176:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138177:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_431226
L_138179:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_502
.p2align 0x4
L_431226:
L_138178:
	movq %r13,%r15
	jmp x_502
.p2align 0x4
L_431230:
L_138180:
	xorl %ecx,%ecx
	jmp L_138145
.p2align 0x4
L_431233:
L_138181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_138182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138182
.p2align 0x4
.long 0xC59
L_138182:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_138133
.p2align 0x4
L_431236:
L_138064:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x8(%r15)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_138065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_431237:
L_138006:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_137959
L_138008:
	cmpl $0x0,%r13d
	jl L_138063
L_138009:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1448:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431252
.p2align 0x4,,0x7
L_138010:
	movl 0x3C(%rbp),%r13d
	cmpl 0x38(%rbp),%r13d
	jnl L_137993
L_138012:
	movslq %r13d,%r15
	salq $0x4,%r15
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138013
L_138014:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_431249
L_138015:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_138017:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138018
L_138052:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD48,%r13
	jne L_138018
L_138053:
	movq 0x8(%r14),%r13
	movq 0x40(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_431244
L_138018:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_137985
L_138019:
	cmpq $0x1,%r15
	je L_431238
L_138020:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138017
.p2align 0x4
L_431238:
L_138021:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138022
L_138050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138051
.p2align 0x4
.long 0x1DAE
L_138051:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_138022:
	movl 0x50(%rbp),%ecx
L_138023:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138025:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138027
L_138049:
	movl %ecx,0x0(%r15)
L_138027:
	movq $0x136B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A91,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_499:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_431239
L_138028:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_138029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431239:
L_138045:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (x_501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431244:
L_138055:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138056:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_431245
L_138058:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_499
.p2align 0x4
L_431245:
L_138057:
	movq %r13,%r15
	jmp x_499
.p2align 0x4
L_431249:
L_138059:
	xorl %ecx,%ecx
	jmp L_138023
.p2align 0x4
L_431252:
L_138060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_138061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138061
.p2align 0x4
.long 0xC59
L_138061:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_138010
.p2align 0x4
L_431255:
L_138644:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r13,%r11
	jne L_137959
L_138646:
	cmpl $0x0,%ecx
	jl L_138063
L_138647:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1464:
	cmpl %ecx,%ebx
	jnl L_137993
L_138649:
	movslq %ebx,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r11)
	incl %ebx
	jmp loop_1464
.p2align 0x4
L_431259:
L_137963:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431260:
L_138651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_138652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138652
.p2align 0x4
.long 0x45E
L_138652:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_137962
.p2align 0x4
.long 0x54A
L_138005:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137968
.p2align 0x4
.long 0x588
L_137969:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_137970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x54A
L_138536:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138537
L_138642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138643
.p2align 0x4
.long 0x1DC6
L_138643:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_138537:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x60(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xF3E8)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x78(%rbp)
	movl $0x0,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_138538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
.long 0x1DB7
L_138502:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138503
L_138520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138521
.p2align 0x4
.long 0x1DB8
L_138521:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_138503:
	movq 0x48(%rbp),%r15
	movq 0x18(%rbp),%r13
	cmpq %r13,%r15
	je L_138510
L_138504:
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	cmpq $0x1,%r14
	je L_431267
L_138505:
	cmpq $0x1,%r15
	je L_138510
L_138506:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_431265
L_138507:
L_138508:
	movq $0x41BF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_138509:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
L_138510:
	incl 0x44(%rbp)
	jmp loop_1460
.p2align 0x4
L_431265:
L_138511:
	movq $0x41BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp L_138509
.p2align 0x4
L_431267:
L_138513:
	cmpq $0x1,%r15
	je L_138510
L_138514:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_138510
L_138515:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x13,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_138516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x57B
L_138447:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138448
L_138475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138476
.p2align 0x4
.long 0x567
L_138476:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_138448:
	cmpq $0x1,0x50(%rbp)
	jne L_138436
L_138450:
	movq $0x1947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138013
L_138451:
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_431282
L_138452:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_138454:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138455
L_138467:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA7,%r13
	jne L_138455
L_138468:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_431277
L_138455:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_137985
L_138456:
	cmpq $0x1,%r15
	je L_431272
L_138457:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138454
.p2align 0x4
L_431272:
L_138458:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138459
L_138465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_138466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138466
.p2align 0x4
.long 0x52E
L_138466:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_138459:
	movl 0x20(%rbp),%ecx
L_138460:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138461:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138463
L_138464:
	movl %ecx,0x0(%r15)
L_138463:
	movq $0x194F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_137993
.p2align 0x4
L_431277:
L_138470:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138471:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138436
L_138473:
	movl %ecx,0x0(%r15)
L_138436:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431282:
L_138474:
	xorl %ecx,%ecx
	jmp L_138460
.p2align 0x4
.long 0x541
L_138401:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_137959
L_138403:
	cmpl $0x0,%r13d
	jl L_138063
L_138404:
	movl $0x0,0x4C(%rbp)
loop_1457:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_137993
L_138406:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movl 0x0(%r11),%ebx
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_137959
L_138408:
	cmpl $0x0,%ecx
	jl L_138063
L_138409:
	movl %ebx,0x68(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1458:
	cmpl %ecx,%ebx
	jnl L_431286
L_138443:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x68(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x58(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x68(%rbp)
	incl %ebx
	jmp loop_1458
.p2align 0x4
L_431286:
L_138410:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138411
L_138441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_138442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138442
.p2align 0x4
.long 0x1DB6
L_138442:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_138411:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_138412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x69C
L_138329:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_138311
.p2align 0x4
.long 0x1
toString_235:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x45A
L_138276:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_138258
.p2align 0x4
.long 0x1
toString_234:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1DB0
L_138236:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_1455
.p2align 0x4
.long 0x5B6
L_138224:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_138200
.p2align 0x4
.long 0x598
L_138201:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_138202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1DB0
L_138195:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_1453
.p2align 0x4
.long 0x5A5
L_138150:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_138151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
.long 0xCF8
x_504:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138167
L_138168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_138169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138169
.p2align 0x4
.long 0x574
L_138169:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_138167:
	movq 0x40(%rbp),%r15
x_503:
	movq %r15,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_138159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x527
L_138065:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138066
L_138127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_138128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138128
.p2align 0x4
.long 0x564
L_138128:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_138066:
	cmpq $0x1,0x38(%rbp)
	je L_431302
L_138067:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_137959
L_138069:
	cmpl $0x0,%r13d
	jl L_138063
L_138070:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_1449:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_431297
L_138085:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x50(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_137959
L_138087:
	cmpl $0x0,%r14d
	jl L_138063
L_138088:
	movl $0x0,0x54(%rbp)
.p2align 0x4,,0x7
loop_1450:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	jl L_431294
L_138089:
	incl 0x44(%rbp)
	jmp loop_1449
.p2align 0x4
L_431294:
L_138090:
	movslq 0x54(%rbp),%r15
	salq $0x4,%r15
	movq 0x48(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_138091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_107
.p2align 0x4
L_431297:
L_138071:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138072
L_138083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_138084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138084
.p2align 0x4
.long 0x56E
L_138084:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_138072:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_431298
L_138073:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_138074:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_138075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_431298:
L_138079:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_137993
.p2align 0x4
L_431302:
L_138094:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_431303
L_138125:
	movq %r11,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_138126+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_431303:
L_138095:
L_138096:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_138097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5A5
L_138029:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_138030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_27
.p2align 0x4
.long 0xCF8
x_501:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138046
L_138047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_138048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138048
.p2align 0x4
.long 0x574
L_138048:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_138046:
	movq 0x40(%rbp),%r15
x_500:
	movq %r15,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_138038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x54A
L_137970:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_137971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
.long 0xCB8
L_138538:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138539
L_138640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_138641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138641
.p2align 0x4
.long 0x1DC5
L_138641:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_138539:
	movq $0x10B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x64(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_137959
L_138541:
	movq $0x3A19,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	movl %r13d,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_138542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
.long 0x1DB7
L_138516:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_138510
.p2align 0x4
.long 0xC77
L_138412:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138413
L_138439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_138440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138440
.p2align 0x4
.long 0xFB0
L_138440:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_138413:
	movq $0x1379,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x58(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138013
L_138414:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_431318
L_138415:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_138417:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138418
L_138430:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD3C,%r13
	jne L_138418
L_138431:
	movq 0x0(%r14),%r13
	cmpq %r13,0x30(%rbp)
	je L_431313
L_138418:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_137985
L_138419:
	cmpq $0x1,%r15
	je L_431308
L_138420:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138417
.p2align 0x4
L_431308:
L_138421:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138422
L_138428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_138429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138429
.p2align 0x4
.long 0x1DB5
L_138429:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_138422:
	movl 0x50(%rbp),%ecx
L_138423:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138424:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138426
L_138427:
	movl %ecx,0x0(%r15)
L_138426:
	movq $0x1A79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	incl 0x4C(%rbp)
	jmp loop_1457
.p2align 0x4
L_431313:
L_138433:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138434:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138436
L_138437:
	movl %ecx,0x0(%r15)
	jmp L_138436
.p2align 0x4
L_431318:
L_138438:
	xorl %ecx,%ecx
	jmp L_138423
.p2align 0x4
.long 0x1
rev_233:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_431323
L_138312:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_138313:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431322
.p2align 0x4,,0x7
L_138314:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_431321
L_138315:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_138313
.p2align 0x4
L_431321:
L_138317:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_138318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_431322:
L_138325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_138326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138326
.p2align 0x4
.long 0x45C
L_138326:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_138314
.p2align 0x4
L_431323:
L_138327:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_138317
.p2align 0x4
.long 0x1
rev_232:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_431326
L_138259:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_138260:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431325
.p2align 0x4,,0x7
L_138261:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_431324
L_138262:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_138260
.p2align 0x4
L_431324:
L_138264:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_138265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_431325:
L_138272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_138273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138273
.p2align 0x4
.long 0x45C
L_138273:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_138261
.p2align 0x4
L_431326:
L_138274:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_138264
.p2align 0x4
.long 0x57B
L_138202:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138203
L_138221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138222
.p2align 0x4
.long 0x567
L_138222:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_138203:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_137959
L_138205:
	movl %r13d,0x68(%rbp)
	movq $0x3C67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_138206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x594
L_138151:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138152
L_138164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138165
.p2align 0x4
.long 0x5D1
L_138165:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_138152:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_138153:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_137985
L_138154:
	cmpq $0x1,%r14
	je L_431329
L_138155:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_138153
.p2align 0x4
L_431329:
L_138156:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138157
L_138162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138163
.p2align 0x4
.long 0x1DAD
L_138163:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_138157:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_431330
L_138158:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp x_503
.p2align 0x4
L_431330:
L_138161:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp x_503
.p2align 0x4
.long 0xCF8
L_138159:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_138160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1DAF
L_138091:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	incl 0x54(%rbp)
	jmp loop_1450
.p2align 0x4
.long 0x527
L_138075:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138076
L_138080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_138081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138081
.p2align 0x4
.long 0x564
L_138081:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_138076:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_138079
L_138077:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_138074
.p2align 0x4
.long 0x45A
L_138126:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_138096
.p2align 0x4
.long 0x1
L_138097:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_138098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x594
L_138030:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138031
L_138043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138044
.p2align 0x4
.long 0x5D1
L_138044:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_138031:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_138032:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_137985
L_138033:
	cmpq $0x1,%r14
	je L_431336
L_138034:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_138032
.p2align 0x4
L_431336:
L_138035:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138036
L_138041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138042
.p2align 0x4
.long 0x1DAD
L_138042:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_138036:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_431337
L_138037:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp x_500
.p2align 0x4
L_431337:
L_138040:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp x_500
.p2align 0x4
.long 0xCF8
L_138038:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_138039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5D4
L_137971:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_431341
L_137972:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_137973:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_137974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431341:
L_138003:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_137973
.p2align 0x4
.long 0x1DB9
L_138542:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138543
L_138638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_138639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138639
.p2align 0x4
.long 0x1DC4
L_138639:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_138543:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2733,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1363,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x88(%rbp)
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x28,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x10(%r11)
	movq 0x80(%rbp),%r13
	movq %r13,0x18(%r11)
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138013
L_138544:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_431356
L_138545:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_138547:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138548
L_138630:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4F,%r13
	jne L_138548
L_138631:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_431351
L_138548:
	incl %ecx
	movl %ecx,0x78(%rbp)
	jo L_137985
L_138549:
	cmpq $0x1,%r15
	je L_431342
L_138550:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138547
.p2align 0x4
L_431342:
L_138551:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138552
L_138628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_138629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138629
.p2align 0x4
.long 0x1DC3
L_138629:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_138552:
	movl 0x78(%rbp),%ecx
L_138553:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138554:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138556
L_138627:
	movl %ecx,0x0(%r15)
L_138556:
	movq $0x1A9F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_137959
L_138558:
	cmpl $0x0,%ecx
	jl L_138063
L_138559:
	movl 0x60(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1461:
	cmpl %ecx,%ebx
	jnl L_431343
L_138625:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x30(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x70(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x30(%rbp)
	incl %ebx
	jmp loop_1461
.p2align 0x4
L_431343:
L_138560:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138561
L_138623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_138624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138624
.p2align 0x4
.long 0x1DC2
L_138624:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_138561:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_138562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_431351:
L_138633:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138634:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138436
L_138636:
	movl %ecx,0x0(%r15)
	jmp L_138436
.p2align 0x4
L_431356:
L_138637:
	xorl %ecx,%ecx
	jmp L_138553
.p2align 0x4
.long 0x1
L_138318:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138319
L_138323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_138324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138324
.p2align 0x4
.long 0x452
L_138324:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_138319:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_138265:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138266
L_138270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_138271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138271
.p2align 0x4
.long 0x452
L_138271:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_138266:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFC0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1DB1
L_138206:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_138207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0xCF8
L_138160:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_1451
.p2align 0x4
.long 0x4B0
L_138098:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF3F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_138099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCF8
L_138039:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_1448
.p2align 0x4
.long 0x5D4
L_137974:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137975
L_138001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138002
.p2align 0x4
.long 0x5D9
L_138002:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_137975:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_137976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1DBA
L_138562:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_138563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
bug_441:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138320
L_138321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_138322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138322
.p2align 0x4
.long 0x452
L_138322:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_138320:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_440:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138267
L_138268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_138269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138269
.p2align 0x4
.long 0x452
L_138269:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_138267:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1DB1
L_138207:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138208
L_138219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138220
.p2align 0x4
.long 0x1DB2
L_138220:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_138208:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_138209:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_137985
L_138210:
	cmpq $0x1,%r14
	je L_431364
L_138211:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_138209
.p2align 0x4
L_431364:
L_138212:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138213
L_138217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138218
.p2align 0x4
.long 0x1D99
L_138218:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_138213:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_431365
L_138214:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_505:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x60(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_138215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_431365:
L_138216:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_505
.p2align 0x4
.long 0x5B0
L_138099:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_138100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5D4
L_137976:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_137977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1DBB
L_138563:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138564
L_138621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_138622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138622
.p2align 0x4
.long 0x1DC1
L_138622:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_138564:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x755,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x10(%r13)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r13)
	cmpl $0x0,0x64(%rbp)
	jl L_138063
L_138565:
	movl $0x0,0x28(%rbp)
loop_1462:
	movl 0x28(%rbp),%r15d
	cmpl 0x64(%rbp),%r15d
	jnl L_137993
L_138567:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x70(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x68(%rbp)
	jne L_137959
L_138569:
	testq %rdx,%rdx
	jz L_431384
L_138570:
	cmpq $0x7FFFFFFF,%rdx
	ja L_431383
L_138571:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14BF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_138572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138572
.p2align 0x4
.long 0x1DBC
L_138572:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x78(%rbp)
L_138573:
	movq $0x0,0x80(%rbp)
.p2align 0x4,,0x7
loop_1463:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431382
.p2align 0x4,,0x7
L_138574:
	movq 0x80(%rbp),%r15
	cmpq 0x70(%rbp),%r15
	jnl L_431369
L_138615:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x68(%rbp),%r11
	movl 0x0(%r11,%r14,1),%r10d
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq $0x2733,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x135F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x16EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x78(%rbp),%r13
	movl %r10d,0x0(%r13,%r14,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r15,%r14
	salq $0x4,%r14
	movq %r11,0x8(%r13,%r14,1)
	incq %r15
	movq %r15,0x80(%rbp)
	jmp loop_1463
.p2align 0x4
L_431369:
L_138575:
	movq 0x78(%rbp),%r13
	movq $0x74F,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x2731,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x751,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movb $0x1,%r10b
	movzbl %r10b,%ecx
	movl %ecx,0x4(%r14)
	movq $0x2733,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x757,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x68(%rbp)
	movq %r9,0x0(%r10)
	movq %r14,0x10(%r10)
	movq %r11,0x18(%r10)
	addq $0x30,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r10)
	movq %r13,0x20(%r10)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_138013
L_138576:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_431380
L_138577:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_138579:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138580
L_138607:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4E,%r13
	jne L_138580
L_138608:
	movq 0x40(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_431375
L_138580:
	incl %ecx
	movl %ecx,0x2C(%rbp)
	jo L_137985
L_138581:
	cmpq $0x1,%r15
	je L_431370
L_138582:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138579
.p2align 0x4
L_431370:
L_138583:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138584
L_138605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_138606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138606
.p2align 0x4
.long 0x1DBF
L_138606:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_138584:
	movl 0x2C(%rbp),%ecx
L_138585:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138586:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138588
L_138604:
	movl %ecx,0x0(%r15)
L_138588:
	movq $0x1A9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_138589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_431375:
L_138610:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138024
L_138611:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138436
L_138613:
	movl %ecx,0x0(%r15)
	jmp L_138436
.p2align 0x4
L_431380:
L_138614:
	xorl %ecx,%ecx
	jmp L_138585
.p2align 0x4
L_431382:
L_138616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_138617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138617
.p2align 0x4
.long 0x1DC0
L_138617:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_138574
.p2align 0x4
L_431383:
L_138618:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431384:
L_138619:
	movq (globalObjptr+0xEF0)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_138573
.p2align 0x4
.long 0x5CD
L_138215:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_137992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x51F
L_138100:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138101
L_138123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_138124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138124
.p2align 0x4
.long 0x4AF
L_138124:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_138101:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_138102:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_137985
L_138103:
	cmpq $0x1,%r14
	je L_431389
L_138104:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_138102
.p2align 0x4
L_431389:
L_138105:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138106
L_138121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_138122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138122
.p2align 0x4
.long 0x4E7
L_138122:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_138106:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_431390
L_138107:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_233:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_431390:
L_138120:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_233
.p2align 0x4
.long 0x1DAA
L_137977:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137978
L_137999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138000
.p2align 0x4
.long 0x53E
L_138000:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_137978:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_137959
L_137980:
	movl %r13d,0x78(%rbp)
	movq $0x3C71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_137981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1DBD
L_138589:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138590
L_138602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138603
.p2align 0x4
.long 0x1DBE
L_138603:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_138590:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_431397
L_138591:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_431396
L_138592:
L_138593:
	movq $0x41F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_138594:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_138595:
	incl 0x28(%rbp)
	jmp loop_1462
.p2align 0x4
L_431396:
L_138596:
	movq $0x41F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_138594
.p2align 0x4
L_431397:
L_138597:
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_138598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
.long 0x524
L_137992:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_137993
.p2align 0x4
.long 0x1
rev_231:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_431401
L_138108:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_138109:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431400
.p2align 0x4,,0x7
L_138110:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_431399
L_138111:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_138109
.p2align 0x4
L_431399:
L_138113:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_431400:
L_138117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_138118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138118
.p2align 0x4
.long 0x45C
L_138118:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_138110
.p2align 0x4
L_431401:
L_138119:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_138113
.p2align 0x4
.long 0x1DAB
L_137981:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_137982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1DBD
L_138598:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_138595
L_138599:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_138600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3816
.p2align 0x4
.long 0x1
bug_439:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138114
L_138115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_138116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138116
.p2align 0x4
.long 0x452
L_138116:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_138114:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1DAB
L_137982:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137983
L_137997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_137998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137998
.p2align 0x4
.long 0x1DAC
L_137998:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_137983:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_137984:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_137985
L_137986:
	cmpq $0x1,%r14
	je L_431404
L_137987:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_137984
.p2align 0x4
L_431404:
L_137988:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137989
L_137995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137996
.p2align 0x4
.long 0x12D2
L_137996:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137989:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_431405
L_137990:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_498:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x68(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_431405:
L_137994:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_498
.p2align 0x4
.long 0x1DBD
L_138600:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_138595
.p2align 0x4
.long 0x12D1
L_137991:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_137992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl get_107
.hidden get_107
get_107:
L_138656:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_138657
L_138718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_138719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138719
.p2align 0x4
.long 0x63D
L_138719:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_138657:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_138658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
.long 0x73A
L_138658:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movb 0x38(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138659
L_138716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_138717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138717
.p2align 0x4
.long 0x5F7
L_138717:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_138659:
	movb 0x30(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_431410
L_138660:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431410:
L_138661:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
L_138662:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_138663
L_138664:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	je L_431412
	cmpq $0xF26,%r15
	je L_431411
L_138663:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431411:
L_138676:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_138677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_431412:
L_138665:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_431413
L_138666:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431413:
L_138667:
	cmpl $0x0,0x38(%rbp)
	jl L_431415
L_138668:
	movl $0x0,0x3C(%rbp)
loop_1465:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_138663
L_138670:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_138671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_107
.p2align 0x4
L_431415:
L_138675:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBC4
L_138677:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138678
L_138714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_138715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138715
.p2align 0x4
.long 0x4F1
L_138715:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_138678:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_431418
L_138679:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r15,0x0(%r10)
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp L_138663
.p2align 0x4
L_431418:
L_138680:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r14),%r10
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	jne L_431419
L_138712:
	movq %r10,0x38(%rbp)
	movq %r13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_138713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_431419:
L_138681:
	xchgq %r14,%r15
L_138682:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_138683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBD7
L_138671:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138672
L_138673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_138674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138674
.p2align 0x4
.long 0x73E
L_138674:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_138672:
	incl 0x3C(%rbp)
	jmp loop_1465
.p2align 0x4
.long 0x51B
L_138713:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_138682
.p2align 0x4
.long 0x1
L_138683:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_138684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_138684:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF3F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_138685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_138685:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_138686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_138686:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138687
L_138710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_138711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138711
.p2align 0x4
.long 0x4AF
L_138711:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_138687:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_138688:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_431425
L_138690:
	cmpq $0x1,%r14
	je L_431422
L_138691:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_138688
.p2align 0x4
L_431422:
L_138692:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138693
L_138708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_138709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138709
.p2align 0x4
.long 0x4E7
L_138709:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_138693:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_431423
L_138694:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_236:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_431423:
L_138707:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_236
.p2align 0x4
L_431425:
L_138689:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_234:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_431429
L_138695:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_138696:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431428
.p2align 0x4,,0x7
L_138697:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_431427
L_138698:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_138696
.p2align 0x4
L_431427:
L_138700:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_431428:
L_138704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_138705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138705
.p2align 0x4
.long 0x45C
L_138705:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_138697
.p2align 0x4
L_431429:
L_138706:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_138700
.p2align 0x4
.long 0x1
bug_442:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138701
L_138702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_138703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138703
.p2align 0x4
.long 0x452
L_138703:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_138701:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl foreach_0
.hidden foreach_0
foreach_0:
L_138720:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_138721
L_139328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_139329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139329
.p2align 0x4
.long 0x460
L_139329:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_138721:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_138723
L_138724:
	cmpl $0x0,%r13d
	jl L_138782
L_138725:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1466:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431595
.p2align 0x4,,0x7
L_138726:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_431594
L_138728:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_431587
	cmpq $0x2,%r15
	je L_431583
L_138729:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x195E,%rax
	cmpq $0x13,%rax
	ja L_431431
	jmp *jumpTable_300(,%rax,8)
.data
.p2align 0x4
jumpTable_300:
.quad L_431582,L_431568,L_431550,L_431546,L_431541,L_431540,L_431539,L_431538,L_431537,L_431536,L_431535,L_431534,L_431533,L_431532,L_431531,L_431530,L_431526,L_431490,L_431483,L_431449
.text
.p2align 0x4
L_431431:
L_138730:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_431448
L_138732:
	cmpl $0x0,%r13d
	jl L_431447
L_138733:
	movl $0x0,0x3C(%rbp)
loop_1467:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_431446
L_138736:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x40(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	cmpq $0x1,%r15
	jne L_431445
L_138780:
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_138743:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431444
.p2align 0x4,,0x7
L_138744:
	movq 0x40(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_431443
L_138746:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_431442
L_138747:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_138749:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138750
L_138764:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD91,%r13
	jne L_138750
L_138765:
	movq 0x0(%r14),%r13
	cmpq %r13,0x20(%rbp)
	je L_431437
L_138750:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_431436
L_138752:
	cmpq $0x1,%r15
	je L_431432
L_138753:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138749
.p2align 0x4
L_431432:
L_138754:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431435
.p2align 0x4,,0x7
L_138755:
	movl 0x40(%rbp),%ecx
L_138756:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_431434
L_138758:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138760
L_138761:
	movl %ecx,0x0(%r15)
L_138760:
	movq $0x1B23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	incl 0x3C(%rbp)
	jmp loop_1467
.p2align 0x4
L_431434:
L_138757:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431435:
L_138762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138763
.p2align 0x4
.long 0x1DC7
L_138763:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_138755
.p2align 0x4
L_431436:
L_138751:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431437:
L_138767:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_138768:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138770
L_138771:
	movl %ecx,0x0(%r15)
L_138770:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431442:
L_138772:
	xorl %ecx,%ecx
	jmp L_138756
.p2align 0x4
L_431443:
L_138745:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431444:
L_138773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138774
.p2align 0x4
.long 0x5D1
L_138774:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_138744
.p2align 0x4
L_431445:
L_138737:
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_138738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_96
.p2align 0x4
L_431446:
.p2align 0x4,,0x7
L_138735:
	incl 0x14(%rbp)
	jmp loop_1466
.p2align 0x4
L_431447:
L_138782:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431448:
L_138723:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431449:
L_139230:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x88(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,%r13d
	decl %r13d
	movl %r13d,0x1C(%rbp)
	movslq %r14d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_431482
L_139231:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x83,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_139232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139232
.p2align 0x4
.long 0x1DDC
L_139232:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1481:
	cmpq 0x90(%rbp),%r15
	jnl L_431450
L_139303:
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1481
.p2align 0x4
L_431450:
L_139233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139234
L_139301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_139302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139302
.p2align 0x4
.long 0x1DE2
L_139302:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_139234:
	movq $0x85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xA8(%rbp)
	addq $0x10,%r12
	movl 0x1C(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x87,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xB0(%rbp)
	addq $0x68,%r12
	movq $0x7FFFFFFF,0x0(%r10)
	movl 0x18(%rbp),%r9d
	movl %r9d,0x8(%r10)
	movl $0x0,0xC(%r10)
	movq %r13,0x10(%r10)
	movq 0x38(%rbp),%r13
	movq %r13,0x18(%r10)
	movq 0x78(%rbp),%r13
	movq %r13,0x20(%r10)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%r10)
	movq 0x28(%rbp),%r13
	movq %r13,0x30(%r10)
	movq 0x88(%rbp),%r13
	movq %r13,0x38(%r10)
	movq 0x20(%rbp),%r13
	movq %r13,0x40(%r10)
	movq 0x80(%rbp),%r13
	movq %r13,0x48(%r10)
	movq %r11,0x50(%r10)
	movq %r14,0x58(%r10)
	movq 0x10(%r13),%r14
	movq %r14,0xB8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138745
L_139235:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_431479
L_139236:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x98(%rbp)
	movl $0x0,0x1C(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_139238:
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_139239
L_139289:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD8F,%r13
	jne L_139239
L_139290:
	movq 0x40(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_431473
L_139239:
	movl 0x1C(%rbp),%r14d
	incl %r14d
	movl %r14d,0x98(%rbp)
	jo L_138751
L_139240:
	cmpq $0x1,%r15
	je L_431451
L_139241:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x1C(%rbp)
	movq %r13,0x98(%rbp)
	jmp L_139238
.p2align 0x4
L_431451:
L_139242:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139243
L_139287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_139288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139288
.p2align 0x4
.long 0x1DE0
L_139288:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_139243:
	movl 0x98(%rbp),%ecx
L_139244:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_139245:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_139247
L_139286:
	movl %ecx,0x0(%r15)
L_139247:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x5333,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x68,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movl 0x18(%rbp),%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq 0x90(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xA8(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x88(%rbp),%r13
	movq %r13,0x30(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x38(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x40(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x48(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x50(%r15)
	movq 0xA0(%rbp),%r13
	movq %r13,0x58(%r15)
	movq $0x1B1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
length_26:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_138723
L_139249:
	cmpl $0x0,%r13d
	jl L_138782
L_139250:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_1482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431466
.p2align 0x4,,0x7
L_139251:
	movl 0x1C(%rbp),%r14d
	cmpl 0x18(%rbp),%r14d
	jnl L_138735
L_139253:
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r15
	incq %r15
	jo L_138745
L_139254:
	movq %r15,0x0(%r14)
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_431463
L_139255:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_139257:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_139258
L_139271:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD8E,%r13
	jne L_139258
L_139272:
	movq 0x0(%r14),%r13
	cmpq %r13,0x60(%rbp)
	je L_431457
L_139258:
	movl 0x30(%rbp),%r14d
	incl %r14d
	movl %r14d,0x28(%rbp)
	jo L_138751
L_139259:
	cmpq $0x1,%r15
	je L_431452
L_139260:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x30(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_139257
.p2align 0x4
L_431452:
L_139261:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431455
.p2align 0x4,,0x7
L_139262:
	movl 0x28(%rbp),%ecx
L_139263:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_139264:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_139266
L_139268:
	movl %ecx,0x0(%r15)
L_139266:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x532D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xB0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x1B1D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_139267:
	incl 0x1C(%rbp)
	jmp loop_1482
.p2align 0x4
L_431455:
L_139269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_139270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139270
.p2align 0x4
.long 0x1DDD
L_139270:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_139262
.p2align 0x4
L_431457:
L_139274:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431460
.p2align 0x4,,0x7
L_139275:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_138757
L_139276:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_431458
L_139277:
	movq 0x28(%rbp),%r15
L_139278:
	movq $0x532D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x8(%r15)
	jmp L_139267
.p2align 0x4
L_431458:
L_139279:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_139278
.p2align 0x4
L_431460:
L_139280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_139281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139281
.p2align 0x4
.long 0x1DDE
L_139281:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_139275
.p2align 0x4
L_431463:
L_139282:
	xorl %ecx,%ecx
	jmp L_139263
.p2align 0x4
L_431466:
L_139283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_139284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139284
.p2align 0x4
.long 0x1DDF
L_139284:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_139251
.p2align 0x4
L_431473:
L_139292:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139293
L_139298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_139299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139299
.p2align 0x4
.long 0x1DE1
L_139299:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_139293:
	movl 0x1C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_138757
L_139294:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_431474
L_139295:
	movq 0x98(%rbp),%r15
L_139296:
	movq $0x5333,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x68,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movl 0x18(%rbp),%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x38(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x40(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x48(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x50(%r14)
	movq 0xA0(%rbp),%r13
	movq %r13,0x58(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x8(%r15)
	jmp length_26
.p2align 0x4
L_431474:
L_139297:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x98(%rbp),%r15
	jmp L_139296
.p2align 0x4
L_431479:
L_139300:
	xorl %ecx,%ecx
	jmp L_139244
.p2align 0x4
L_431482:
L_138929:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431483:
L_139216:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r13),%r15
	movq 0x8(%r14),%r11
	movq 0x8(%r13),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	jne L_138735
L_139218:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_138723
L_139220:
	cmpl $0x0,%ecx
	jl L_138782
L_139221:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1480:
	cmpl %ecx,%ebx
	jnl L_138735
L_139223:
	movslq %ebx,%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x0(%r15,%r13,1),%r11
	movq %r11,0x20(%rbp)
	salq $0x4,%r14
	cmpq $0x1,0x8(%r15,%r14,1)
	je L_431484
L_139224:
	incl %ebx
	jmp loop_1480
.p2align 0x4
L_431484:
L_139225:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139226
L_139227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_139228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139228
.p2align 0x4
.long 0x5E6
L_139228:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_139226:
	movq $0x19BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431490:
L_139127:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x30(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_138723
L_139129:
	cmpl $0x0,%r13d
	jl L_138782
L_139130:
	movl $0x0,0x44(%rbp)
loop_1477:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431523
.p2align 0x4,,0x7
L_139131:
	movl 0x40(%rbp),%r13d
	cmpl %r13d,0x44(%rbp)
	jl L_431510
L_139132:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_138745
L_139133:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_431508
L_139134:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x28(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_139136:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_139137
L_139145:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCDB,%r13
	jne L_139137
L_139146:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x18(%rbp)
	je L_431495
L_139137:
	movl 0x28(%rbp),%r13d
	incl %r13d
	jo L_138751
L_139138:
	cmpq $0x1,%r14
	je L_431491
L_139139:
	movl %r13d,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_139136
.p2align 0x4
L_431491:
	movl %r13d,%ecx
L_139141:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_139142:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138802
L_139144:
	movl %ecx,0x0(%r15)
L_138802:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431495:
L_139148:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431505
.p2align 0x4,,0x7
L_139149:
	movl 0x28(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_138757
L_139150:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_431503
L_139151:
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
L_139152:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x44(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_138723
L_139154:
	cmpl $0x0,%r13d
	jl L_138782
L_139155:
	movl $0x0,0x58(%rbp)
loop_1478:
	movl 0x44(%rbp),%r15d
	cmpl %r15d,0x58(%rbp)
	jl L_431499
L_139156:
	movl $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1479:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431498
.p2align 0x4,,0x7
L_139157:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	jl L_431497
L_139158:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_431496
.p2align 0x4,,0x7
L_139165:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_138735
.p2align 0x4
L_431496:
L_139159:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_139160:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x3DDB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_139161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_431497:
L_139169:
	movslq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x68(%rbp)
	movq $0x3DB1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_139170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_431498:
L_139171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_139172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139172
.p2align 0x4
.long 0x1DDA
L_139172:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_139157
.p2align 0x4
L_431499:
L_139173:
	movslq 0x58(%rbp),%r15
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	cmpq $0x1,%r13
	jne L_431500
.p2align 0x4,,0x7
L_139178:
	incl 0x58(%rbp)
	jmp loop_1478
.p2align 0x4
L_431500:
L_139174:
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x68,%rbp
	leaq (L_139175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_108
.p2align 0x4
L_431503:
L_139182:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_139152
.p2align 0x4
L_431505:
L_139183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_139184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139184
.p2align 0x4
.long 0x58C
L_139184:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_139149
.p2align 0x4
L_431508:
L_139185:
	xorl %ecx,%ecx
	jmp L_139141
.p2align 0x4
L_431510:
L_139186:
	movslq 0x44(%rbp),%r15
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138745
L_139187:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_431521
L_139188:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_139190:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_139191
L_139204:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB1,%r13
	jne L_139191
L_139205:
	movq 0x8(%r14),%r13
	movq 0x38(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_431516
L_139191:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_138751
L_139192:
	cmpq $0x1,%r15
	je L_431511
L_139193:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_139190
.p2align 0x4
L_431511:
L_139194:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431514
.p2align 0x4,,0x7
L_139195:
	movl 0x50(%rbp),%ecx
L_139196:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_139197:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_139199
L_139201:
	movl %ecx,0x0(%r15)
L_139199:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x44(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_139200:
	incl 0x44(%rbp)
	jmp loop_1477
.p2align 0x4
L_431514:
L_139202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_139203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139203
.p2align 0x4
.long 0x1DA7
L_139203:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_139195
.p2align 0x4
L_431516:
L_139207:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_139208:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_431517
L_139211:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_139210:
	movl 0x44(%rbp),%r14d
	movl %r14d,0x0(%r15)
	jmp L_139200
.p2align 0x4
L_431517:
L_139209:
	movq %r13,%r15
	jmp L_139210
.p2align 0x4
L_431521:
L_139212:
	xorl %ecx,%ecx
	jmp L_139196
.p2align 0x4
L_431523:
L_139213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_139214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139214
.p2align 0x4
.long 0x1DA6
L_139214:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_139131
.p2align 0x4
L_431526:
L_139038:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x20(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x60(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_138723
L_139040:
	cmpl $0x0,%r13d
	jl L_138782
L_139041:
	movl $0x0,0x64(%rbp)
loop_1473:
	movl 0x60(%rbp),%r15d
	cmpl %r15d,0x64(%rbp)
	jl L_431527
L_139042:
	movq $0x3F4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x70(%rbp)
	movl %r15d,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_139043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_431527:
L_139105:
	movslq 0x64(%rbp),%r14
	movq 0x50(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x8(%r10),%r14
	movq %r14,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_139106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_431530:
L_139032:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_139033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431531:
L_139026:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_139027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431532:
L_139020:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_139021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431533:
L_139014:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_139015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431534:
L_139008:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_139009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431535:
L_139002:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_139003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431536:
L_138996:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_138997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431537:
L_138990:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_138991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431538:
L_138984:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_138985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431539:
L_138978:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_138979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431540:
L_138971:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_138972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_50
.p2align 0x4
L_431541:
L_138944:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x30(%rbp)
	movq $0xB75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r9,0x18(%r15)
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_138723
L_138946:
	cmpl $0x0,%r13d
	jl L_138782
L_138947:
	movl $0x0,0x4C(%rbp)
loop_1472:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_138735
L_138949:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	cmpq $0x1,%r13
	jne L_431542
.p2align 0x4,,0x7
L_138954:
	incl 0x4C(%rbp)
	jmp loop_1472
.p2align 0x4
L_431542:
L_138950:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_138951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_431546:
L_138931:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_138723
L_138933:
	cmpl $0x0,%r13d
	jl L_138782
L_138934:
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_1471:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_138735
L_138936:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq %r11,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_138937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_431550:
L_138892:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	movq %r10,0x30(%rbp)
	cmpq %r14,%r10
	jne L_138723
L_138894:
	testq %r10,%r10
	jnz L_431565
L_138930:
	movq (globalObjptr+0xEA8)(%rip),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_138898:
	movq $0x0,0x40(%rbp)
loop_1470:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431564
.p2align 0x4,,0x7
L_138899:
	movq 0x30(%rbp),%r13
	cmpq %r13,0x40(%rbp)
	jl L_431563
L_138900:
	movq 0x38(%rbp),%r13
	movq $0xA7,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138745
L_138901:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_431561
L_138902:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_138904:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138905
L_138917:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCDB,%r13
	jne L_138905
L_138918:
	movq 0x0(%r14),%r13
	cmpq %r13,0x18(%rbp)
	je L_431556
L_138905:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_138751
L_138906:
	cmpq $0x1,%r15
	je L_431551
L_138907:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138904
.p2align 0x4
L_431551:
L_138908:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431554
.p2align 0x4,,0x7
L_138909:
	movl 0x28(%rbp),%ecx
L_138910:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_138911:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138913
L_138914:
	movl %ecx,0x0(%r15)
L_138913:
	movq $0x19B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_138735
.p2align 0x4
L_431554:
L_138915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_138916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138916
.p2align 0x4
.long 0x597
L_138916:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_138909
.p2align 0x4
L_431556:
L_138920:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_138921:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138770
L_138923:
	movl %ecx,0x0(%r15)
	jmp L_138770
.p2align 0x4
L_431561:
L_138924:
	xorl %ecx,%ecx
	jmp L_138910
.p2align 0x4
L_431563:
L_138925:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x5DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x40(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0x40(%rbp)
	jmp loop_1470
.p2align 0x4
L_431564:
L_138926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_138927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138927
.p2align 0x4
.long 0xC58
L_138927:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_138899
.p2align 0x4
L_431565:
L_138895:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_138929
L_138896:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14BB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_138897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138897
.p2align 0x4
.long 0xC57
L_138897:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	jmp L_138898
.p2align 0x4
L_431568:
L_138790:
	movq 0x0(%rbp),%r11
	movq 0x20(%r11),%r14
	movq 0x18(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_138745
L_138791:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_431580
L_138792:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x50(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_138794:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_431579
L_138804:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCDB,%r11
	jne L_431578
L_138805:
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_431573
L_138795:
	movl 0x50(%rbp),%r11d
	incl %r11d
	jo L_138751
L_138796:
	cmpq $0x1,%r15
	je L_431569
L_138797:
	movl %r11d,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_138794
.p2align 0x4
L_431569:
	movl %r11d,%ecx
L_138799:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_138800:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138802
L_138803:
	movl %ecx,0x0(%r15)
	jmp L_138802
.p2align 0x4
L_431573:
L_138807:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138808
L_138889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_138890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138890
.p2align 0x4
.long 0x1DCA
L_138890:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_138808:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_138757
L_138809:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_431575
L_138810:
	movq 0x58(%rbp),%r15
L_138811:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_138723
L_138813:
	movl %r11d,0x60(%rbp)
	movq $0x3921,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_138814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_431575:
L_138888:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r15
	jmp L_138811
.p2align 0x4
L_431578:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_138795
.p2align 0x4
L_431579:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_138795
.p2align 0x4
L_431580:
L_138891:
	xorl %ecx,%ecx
	jmp L_138799
.p2align 0x4
L_431582:
L_138783:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_138784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_431583:
L_139318:
	movq 0x10(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r13,%r11
	jne L_138723
L_139320:
	cmpl $0x0,%ecx
	jl L_138782
L_139321:
	xorl %ebx,%ebx
	xchgq %r14,%r15
.p2align 0x4,,0x7
loop_1485:
	cmpl %ecx,%ebx
	jnl L_138735
L_139323:
	movslq %ebx,%r14
	salq $0x4,%r14
	movq 0x0(%r15,%r14,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	incl %ebx
	jmp loop_1485
.p2align 0x4
L_431587:
L_139305:
	movq 0x0(%r13),%r14
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x10(%r10),%r9
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r9)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r10
	cmpq %r13,%r10
	jne L_138723
L_139307:
	cmpl $0x0,%ecx
	jl L_138782
L_139308:
	xorl %ebx,%ebx
	xchgq %r11,%r15
.p2align 0x4,,0x7
loop_1483:
	cmpl %ecx,%ebx
	jnl L_431588
L_139316:
	movslq %ebx,%r13
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r9)
	incl %ebx
	jmp loop_1483
.p2align 0x4
L_431588:
L_139309:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_138723
L_139311:
	cmpl $0x0,%ecx
	jl L_138782
L_139312:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1484:
	cmpl %ecx,%ebx
	jnl L_138735
L_139314:
	movslq %ebx,%r14
	salq $0x4,%r14
	movq 0x0(%r15,%r14,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	incl %ebx
	jmp loop_1484
.p2align 0x4
L_431594:
L_138727:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431595:
L_139325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_139326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139326
.p2align 0x4
.long 0x45E
L_139326:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_138726
.p2align 0x4
.long 0x5A5
L_138738:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138739
L_138778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138779
.p2align 0x4
.long 0x5D1
L_138779:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_138739:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298E,%r15
	je L_431601
	cmpq $0x298F,%r15
	je L_431600
	cmpq $0x2990,%r15
	je L_431599
L_138740:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_138741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1540
.p2align 0x4
L_431599:
L_138777:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_138742:
	movq %r15,0x48(%rbp)
	jmp L_138743
.p2align 0x4
L_431600:
L_138776:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_138742
.p2align 0x4
L_431601:
L_138775:
	movq 0x10(%r14),%r15
	movq %r15,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_138741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1541
.p2align 0x4
.long 0x1DD9
L_139161:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139162
L_139166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_139167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139167
.p2align 0x4
.long 0x1D9A
L_139167:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_139162:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_139165
L_139163:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_139160
.p2align 0x4
.long 0x1055
L_139170:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	incl 0x18(%rbp)
	jmp loop_1479
.p2align 0x4
.long 0x1DDB
L_139175:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2989,%r14
	je L_431605
L_139179:
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_139177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_431605:
L_139176:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_139177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
.long 0xCD6
L_139043:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_138723
L_139045:
	cmpl $0x0,%ecx
	jl L_138782
L_139046:
	movl %ebx,0x20(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1474:
	cmpl %ecx,%ebx
	jnl L_431606
L_139103:
	movslq %ebx,%r15
	movl 0x20(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x20(%rbp)
	incl %ebx
	jmp loop_1474
.p2align 0x4
L_431606:
L_139047:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139048
L_139101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_139102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139102
.p2align 0x4
.long 0x1DD8
L_139102:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_139048:
	movq $0x1D2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_139049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
.long 0x1DB9
L_139106:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139107
L_139124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_139125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139125
.p2align 0x4
.long 0x1DC4
L_139125:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_139107:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_431611
L_139108:
L_139109:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_431610
L_139110:
	movl $0x1,0x0(%r15)
	incl 0x64(%rbp)
	jmp loop_1473
.p2align 0x4
L_431610:
L_139111:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_139112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431611:
L_139123:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x78(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp L_139109
.p2align 0x4
.long 0x556
L_139033:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139034
L_139036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_139037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139037
.p2align 0x4
.long 0x5E1
L_139037:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_139034:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_139027:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139028
L_139030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_139031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139031
.p2align 0x4
.long 0x5E1
L_139031:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_139028:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_139021:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139022
L_139024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_139025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139025
.p2align 0x4
.long 0x5E1
L_139025:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_139022:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_139015:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139016
L_139018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_139019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139019
.p2align 0x4
.long 0x5E1
L_139019:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_139016:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_139009:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139010
L_139012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_139013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139013
.p2align 0x4
.long 0x5E1
L_139013:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_139010:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_139003:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139004
L_139006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_139007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139007
.p2align 0x4
.long 0x5E1
L_139007:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_139004:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_138997:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138998
L_139000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_139001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139001
.p2align 0x4
.long 0x5E1
L_139001:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_138998:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_138999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_138991:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138992
L_138994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_138995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138995
.p2align 0x4
.long 0x5E1
L_138995:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_138992:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_138993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_138985:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138986
L_138988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_138989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138989
.p2align 0x4
.long 0x5E1
L_138989:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_138986:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_138987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_138979:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138980
L_138982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_138983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138983
.p2align 0x4
.long 0x5E1
L_138983:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_138980:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_138981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x556
L_138972:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138973
L_138976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_138977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138977
.p2align 0x4
.long 0x5E1
L_138977:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_138973:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_138974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x1DCB
L_138951:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movb 0x68(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138952
L_138967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138968
.p2align 0x4
.long 0x1DCE
L_138968:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_138952:
	movb 0x60(%rbp),%r15b
	testb %r15b,%r15b
	jz L_138954
L_138955:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_431625
L_138956:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_138723
L_138958:
	movl %r13d,0x70(%rbp)
	movq $0x3AC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_138959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_431625:
L_138965:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_138751
L_138966:
	movl %r14d,0x0(%r15)
L_138962:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_138954
.p2align 0x4
.long 0xCF6
L_138937:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138938
L_138941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_138942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138942
.p2align 0x4
.long 0xC58
L_138942:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_138938:
	movq 0x40(%rbp),%r15
	andq $0x1,%r15
	jnz L_138770
L_138939:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	incl 0x34(%rbp)
	jmp loop_1471
.p2align 0x4
.long 0x593
L_138814:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_138723
L_138816:
	cmpl $0x0,%r13d
	jl L_138782
L_138817:
	movl $0x0,0x54(%rbp)
.p2align 0x4,,0x7
loop_1468:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431663
.p2align 0x4,,0x7
L_138818:
	movl 0x54(%rbp),%r13d
	cmpl 0x50(%rbp),%r13d
	jnl L_431643
L_138860:
	movslq %r13d,%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138745
L_138861:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_431641
L_138862:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_138864:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138865
L_138877:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA8,%r13
	jne L_138865
L_138878:
	movq 0x18(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_431636
L_138865:
	incl %ecx
	movl %ecx,0x60(%rbp)
	jo L_138751
L_138866:
	cmpq $0x1,%r15
	je L_431631
L_138867:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138864
.p2align 0x4
L_431631:
L_138868:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431634
.p2align 0x4,,0x7
L_138869:
	movl 0x60(%rbp),%ecx
L_138870:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_138871:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138873
L_138874:
	movl %ecx,0x0(%r15)
L_138873:
	movq $0x1951,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	incl 0x54(%rbp)
	jmp loop_1468
.p2align 0x4
L_431634:
L_138875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_138876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138876
.p2align 0x4
.long 0xFAF
L_138876:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_138869
.p2align 0x4
L_431636:
L_138880:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_138881:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138770
L_138883:
	movl %ecx,0x0(%r15)
	jmp L_138770
.p2align 0x4
L_431641:
L_138884:
	xorl %ecx,%ecx
	jmp L_138870
.p2align 0x4
L_431643:
L_138819:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_138723
L_138821:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1469:
	cmpl %ecx,%ebx
	je L_431660
L_138822:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_431659
L_138824:
	movq 0x38(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jz L_431645
L_138854:
	incl %ebx
	jo L_138751
L_138855:
	jmp loop_1469
.p2align 0x4
L_431645:
L_138825:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138826
L_138852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138853
.p2align 0x4
.long 0x1DC8
L_138853:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_138826:
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
L_138827:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138745
L_138828:
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_431656
L_138829:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_138831:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_138832
L_138844:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA8,%r13
	jne L_138832
L_138845:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_431651
L_138832:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_138751
L_138833:
	cmpq $0x1,%r15
	je L_431646
L_138834:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_138831
.p2align 0x4
L_431646:
L_138835:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138836
L_138842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138843
.p2align 0x4
.long 0x124D
L_138843:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_138836:
	movl 0x20(%rbp),%ecx
L_138837:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_138838:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138840
L_138841:
	movl %ecx,0x0(%r15)
L_138840:
	movq $0x1951,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_138735
.p2align 0x4
L_431651:
L_138847:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_138848:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138770
L_138850:
	movl %ecx,0x0(%r15)
	jmp L_138770
.p2align 0x4
L_431656:
L_138851:
	xorl %ecx,%ecx
	jmp L_138837
.p2align 0x4
L_431659:
L_138823:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431660:
L_138856:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138857
L_138858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_138859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138859
.p2align 0x4
.long 0x1DC9
L_138859:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_138857:
	movq $0x1,0x18(%rbp)
	jmp L_138827
.p2align 0x4
L_431663:
L_138885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_138886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138886
.p2align 0x4
.long 0xC56
L_138886:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_138818
.p2align 0x4
.long 0x526
L_138784:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138785
L_138788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_138789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138789
.p2align 0x4
.long 0xC57
L_138789:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_138785:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_138770
L_138786:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_138735
.p2align 0x4
.long 0x5A5
L_138741:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_138742
.p2align 0x4
.long 0x1DDB
L_139177:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_139178
.p2align 0x4
.long 0x1DCF
L_139049:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_138723
L_139051:
	cmpl $0x0,%r13d
	jl L_138782
L_139052:
	movl $0x0,0x24(%rbp)
loop_1475:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_431669
L_139053:
	movl $0x0,0x18(%rbp)
loop_1476:
	movl 0x18(%rbp),%r15d
	cmpl 0x60(%rbp),%r15d
	jnl L_138735
L_139055:
	movslq %r15d,%r14
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq %r10,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_139056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_431669:
L_139063:
	movslq 0x24(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x40(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_139064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkType_0
.p2align 0x4
.long 0x907
L_139112:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139113
L_139121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_139122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139122
.p2align 0x4
.long 0xA9A
L_139122:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_139113:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF400)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x556
L_139035:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_139029:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_139023:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_139017:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_139011:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_139005:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_138999:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_138993:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_138987:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_138981:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x556
L_138974:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_138975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1DCC
L_138959:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_138960
L_138963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_138964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_138964
.p2align 0x4
.long 0x1DCD
L_138964:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_138960:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_138751
L_138961:
	movl %r14d,0x0(%r15)
	jmp L_138962
.p2align 0x4
.long 0x1DD0
L_139056:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139057
L_139061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_139062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139062
.p2align 0x4
.long 0x1DD1
L_139062:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_139057:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_431675
L_139058:
L_139059:
	movl $0x0,0x0(%r15)
	incl 0x18(%rbp)
	jmp loop_1476
.p2align 0x4
L_431675:
L_139060:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp L_139059
.p2align 0x4
.long 0x1DD2
L_139064:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139065
L_139098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_139099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139099
.p2align 0x4
.long 0x1DD7
L_139099:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_139065:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_431677
L_139066:
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_139067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkType_0
.p2align 0x4
L_431677:
L_139097:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
L_139070:
	movq $0x13F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x40(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_138745
L_139071:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_431688
L_139072:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_139074:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_139075
L_139087:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD6,%r13
	jne L_139075
L_139088:
	movq 0x0(%r14),%r13
	cmpq %r13,0x70(%rbp)
	je L_431683
L_139075:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_138751
L_139076:
	cmpq $0x1,%r15
	je L_431678
L_139077:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_139074
.p2align 0x4
L_431678:
L_139078:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139079
L_139085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_139086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139086
.p2align 0x4
.long 0x1DD5
L_139086:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_139079:
	movl 0x40(%rbp),%ecx
L_139080:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_139081:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_139083
L_139084:
	movl %ecx,0x0(%r15)
L_139083:
	movq $0x19AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	incl 0x24(%rbp)
	jmp loop_1475
.p2align 0x4
L_431683:
L_139090:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_138757
L_139091:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_138770
L_139093:
	movl %ecx,0x0(%r15)
	jmp L_138770
.p2align 0x4
L_431688:
L_139094:
	xorl %ecx,%ecx
	jmp L_139080
.p2align 0x4
.long 0xCBC
L_139114:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x524
L_138975:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_138735
.p2align 0x4
.long 0x1DD3
L_139067:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_139068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1611
.p2align 0x4
.long 0xCBC
L_139115:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139116
L_139119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139120
.p2align 0x4
.long 0xCBD
L_139120:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139116:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_139117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x1DD4
L_139068:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139069
L_139095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_139096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139096
.p2align 0x4
.long 0x1DD6
L_139096:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_139069:
	movq 0x50(%rbp),%r15
	jmp L_139070
.p2align 0x4
.long 0xCAA
L_139117:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_139118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_139118:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_32
.hidden tabulate_32
tabulate_32:
L_139330:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_139331
L_139403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_139404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139404
.p2align 0x4
.long 0x458
L_139404:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_139331:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_431701
L_139332:
	cmpq $0x7FFFFFFF,%rdx
	ja L_431700
L_139333:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_139334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139334
.p2align 0x4
.long 0x453
L_139334:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_139335:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1486:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_431699
L_139337:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_431698
	cmpq $0x2,%r15
	je L_431697
L_139338:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1D60,%r13
	je L_431696
	cmpq $0x1D61,%r13
	je L_431695
	cmpq $0x1D62,%r13
	je L_431694
	cmpq $0x1D63,%r13
	je L_431693
L_139339:
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x10(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xB50)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_431693:
L_139398:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
L_431694:
L_139379:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_139380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_431695:
L_139343:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x28(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_139344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_431696:
L_139342:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_139340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
L_431697:
.p2align 0x4,,0x7
L_139341:
	incq 0x18(%rbp)
	jmp loop_1486
.p2align 0x4
L_431698:
L_139399:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431699:
L_139336:
	movq 0x8(%rbp),%r14
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431700:
L_139401:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431701:
L_139402:
	movq (globalObjptr+0xB48)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_139335
.p2align 0x4
.long 0x5F9
L_139340:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_139341
.p2align 0x4
.long 0x598
L_139380:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movb 0x58(%rbp),%r15b
	movb %r15b,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139381
L_139396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_139397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139397
.p2align 0x4
.long 0x5FD
L_139397:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_139381:
	movb 0x50(%rbp),%r15b
	testb %r15b,%r15b
	jz L_139341
L_139383:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_431704
L_139384:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_431703
L_139386:
	movl %r13d,0x60(%rbp)
	movq $0x3AC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_139387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_431703:
L_139350:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431704:
L_139394:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_431705
L_139395:
	movl %r14d,0x0(%r15)
L_139391:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_139341
.p2align 0x4
L_431705:
L_139389:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B6
L_139344:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movb 0x60(%rbp),%r15b
	movb %r15b,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139345
L_139377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_139378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139378
.p2align 0x4
.long 0xD05
L_139378:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_139345:
	movb 0x58(%rbp),%r15b
	testb %r15b,%r15b
	jz L_139341
L_139347:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	je L_431708
L_139357:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_139358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_431708:
L_139348:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_139350
L_139351:
	movl %r13d,0x68(%rbp)
	movq $0x3AC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_139352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
.long 0xCEC
L_139387:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139388
L_139392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_139393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139393
.p2align 0x4
.long 0x1119
L_139393:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_139388:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_139389
L_139390:
	movl %r14d,0x0(%r15)
	jmp L_139391
.p2align 0x4
.long 0x5D6
L_139358:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139359
L_139375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_139376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139376
.p2align 0x4
.long 0xFAA
L_139376:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_139359:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_431715
L_139360:
x_507:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_431714
L_139361:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_139362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431714:
L_139354:
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_139341
.p2align 0x4
L_431715:
L_139374:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x30(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp x_507
.p2align 0x4
.long 0x5AE
L_139352:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139354
L_139355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_139356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139356
.p2align 0x4
.long 0x1DE3
L_139356:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_139354
.p2align 0x4
.long 0x848
L_139362:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139363
L_139371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_139372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139372
.p2align 0x4
.long 0x849
L_139372:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_139363:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF408)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_139364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x77F
L_139364:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_139365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x77F
L_139365:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139366
L_139369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_139370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139370
.p2align 0x4
.long 0xA51
L_139370:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_139366:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_139367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x61C
L_139367:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_139368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_139368:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl extendTycon_0
.hidden extendTycon_0
extendTycon_0:
L_139405:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_139431
L_139406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431725
L_139407:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1052,%r15
	jne L_139408
L_139416:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_431720
L_139417:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431720:
L_139418:
	cmpl $0x0,0x48(%rbp)
	jl L_431723
L_139419:
	movl $0x0,0x4C(%rbp)
loop_1487:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_431721
L_139421:
	movslq %r15d,%r14
	movq %r14,%r15
	movq %r14,%r13
	movq %r14,%r11
	salq $0x5,%r15
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r15,1),%r9
	movq %r9,0x50(%rbp)
	salq $0x5,%r13
	movq 0x8(%r10,%r13,1),%r15
	salq $0x5,%r11
	movq 0x10(%r10,%r11,1),%r13
	movq %r13,0x58(%rbp)
	salq $0x5,%r14
	movq 0x18(%r10,%r14,1),%r13
	movq $0x209F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x5C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	addq $0x88,%rbp
	leaq (L_139422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_431721:
L_139408:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_431722
L_139409:
	movq $0x2,0x20(%rbp)
L_139410:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_139411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_431722:
L_139415:
	movq $0x1,0x20(%rbp)
	jmp L_139410
.p2align 0x4
L_431723:
L_139430:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431725:
L_139431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_139432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139432
.p2align 0x4
.long 0x63D
L_139432:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_139407
.p2align 0x4
.long 0x1DE5
L_139422:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139423
L_139428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_139429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139429
.p2align 0x4
.long 0x1DE8
L_139429:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_139423:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x80(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x58(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_139424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x1DE4
L_139411:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139412
L_139413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_139414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139414
.p2align 0x4
.long 0x763
L_139414:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_139412:
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x44(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp x_1236
.p2align 0x4
.long 0x1DE6
L_139424:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139425
L_139426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_139427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139427
.p2align 0x4
.long 0x1DE7
L_139427:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_139425:
	incl 0x4C(%rbp)
	jmp loop_1487
.text
.p2align 0x4
.globl get_109
.hidden get_109
get_109:
L_139433:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_139434
L_139809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_139810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139810
.p2align 0x4
.long 0x460
L_139810:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_139434:
	movq 0x8(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_139435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x660
L_139435:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_431731
L_139437:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r13,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_431731:
L_139436:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1DE9
L_139438:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movb 0x80(%rbp),%r15b
	movb %r15b,0x10(%rbp)
	testb %r15b,%r15b
	jnz L_431732
L_139439:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431732:
L_139440:
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x1DE9
L_139441:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139442
L_139807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139808
.p2align 0x4
.long 0x679
L_139808:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139442:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_139436
L_139443:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x1DEA
L_139444:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_431736
	cmpb $0x2,%r14b
	je L_431735
L_139445:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_431735:
L_139806:
	movq (globalObjptr+0x1BC0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431736:
L_139805:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x68E
L_139446:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139447
L_139803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139804
.p2align 0x4
.long 0x1E05
L_139804:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139447:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_139436
L_139448:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_431779
L_139449:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_139463
	cmpq $0xE78,%r15
	je L_431770
	cmpq $0xE79,%r15
	je L_431768
	cmpq $0xE7A,%r15
	je L_431766
	cmpq $0xE7B,%r15
	je L_431749
L_139450:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_431748
L_139453:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1488:
	cmpl %ebx,%ecx
	je L_431741
L_139454:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_431740
L_139457:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r14,%r13,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r10)
	je L_431738
L_139458:
	incl %ebx
	jo L_431737
L_139460:
	jmp loop_1488
.p2align 0x4
L_431737:
L_139459:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431738:
L_139461:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139463
L_139464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139465
.p2align 0x4
.long 0x1DEB
L_139465:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139463:
	movq 0x10(%rbp),%r15
	movb $0x1,0x0(%r15)
	movq $0x1945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431740:
L_139456:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431741:
L_139466:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139467
L_139482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139483
.p2align 0x4
.long 0x1DEC
L_139483:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139467:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_139474
L_139468:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_139469:
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r14),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_431744
L_139470:
	cmpq $0x1,%r15
	je L_431742
L_139471:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_139469
.p2align 0x4
L_431742:
L_139472:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139474
L_139475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139476
.p2align 0x4
.long 0x1DEC
L_139476:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139474:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_139463
.p2align 0x4
L_431744:
L_139477:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139463
L_139479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139480
.p2align 0x4
.long 0x1DEB
L_139480:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139463
.p2align 0x4
L_431748:
L_139452:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431749:
L_139684:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_431765
L_139686:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_431764
L_139687:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_139689:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_139690
L_139746:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD0,%r13
	je L_431759
L_139690:
	movl 0x38(%rbp),%r14d
	incl %r14d
	movl %r14d,0x30(%rbp)
	jo L_139459
L_139691:
	cmpq $0x1,%r15
	je L_431750
L_139692:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x38(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_139689
.p2align 0x4
L_431750:
L_139693:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139694
L_139744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139745
.p2align 0x4
.long 0x1DFE
L_139745:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139694:
	movl 0x30(%rbp),%ecx
L_139695:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_431756
L_139697:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_139699
L_139743:
	movl %ecx,0x0(%r15)
L_139699:
	movq $0x13F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_139700:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_431753
L_139701:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_431752
	cmpq $0x1052,%r15
	je L_431751
L_139702:
	movq %r13,0x90(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
L_431751:
L_139711:
	movq %r13,0x90(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
L_431752:
L_139709:
	movq %r11,0x90(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x88(%rbp)
	movq $0x3ED3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_431753:
L_139712:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_139452
L_139714:
	movl %r13d,0x88(%rbp)
	movq $0x3AC1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_431756:
L_139696:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431759:
L_139747:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139748
L_139752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139753
.p2align 0x4
.long 0x1DFF
L_139753:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139748:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x38(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_139696
L_139749:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_139700
L_139751:
	movl %r14d,0x0(%r13)
	jmp L_139700
.p2align 0x4
L_431764:
L_139754:
	xorl %ecx,%ecx
	jmp L_139695
.p2align 0x4
L_431765:
L_139685:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431766:
L_139634:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_431767
L_139635:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x28(%rbp)
	movq %r13,%r15
L_139636:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
L_431767:
L_139683:
	movq $0x1,0x20(%rbp)
L_139641:
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_431768:
L_139525:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x18(%rbp)
	cmpq $0x1,%r13
	je L_431769
L_139526:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
L_139527:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
L_431769:
L_139633:
	movq $0x1,0x20(%rbp)
L_139532:
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_431770:
L_139485:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_431772
L_139511:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_139452
L_139513:
	movl %r13d,0x88(%rbp)
	movq $0x3AC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_431772:
L_139486:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x18(%rbp)
	jne L_139452
L_139488:
	testq %rdx,%rdx
	jz L_431776
L_139489:
	cmpq $0x7FFFFFFF,%rdx
	ja L_431775
L_139490:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139491
.p2align 0x4
.long 0x1DED
L_139491:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x28(%rbp)
L_139492:
	movq $0x0,0x30(%rbp)
loop_1489:
	movq 0x20(%rbp),%r14
	cmpq %r14,0x30(%rbp)
	jl L_431774
L_139493:
	movq 0x28(%rbp),%r15
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r15)
x_508:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_139452
L_139495:
	movl %r13d,0x88(%rbp)
	movq $0x2,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_431774:
L_139506:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
L_431775:
L_139509:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431776:
L_139510:
	movq (globalObjptr+0x4C78)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_139492
.p2align 0x4
L_431779:
L_139755:
	shrq $0x1,%r14
	movb %r14b,%r15b
	movb %r15b,0x8(%rbp)
	cmpb $0x1,%r15b
	je L_431786
	cmpb $0x2,%r15b
	je L_431785
	cmpb $0x3,%r15b
	je L_431780
L_139756:
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultWord_0
.p2align 0x4
L_431780:
L_139791:
	movq 0x30(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	cmpq %r15,(globalObjptr+0xCA68)(%rip)
	je L_431784
L_139792:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq $0x5,%r13
	jne L_139794
L_139795:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_135:
	cmpq %r11,%r13
	je L_431782
L_139796:
	movq (globalObjptr+0xCA68)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_431781
L_139798:
	incq %r11
	jmp vectorEqualLoop_135
.p2align 0x4
L_431781:
L_139794:
	movq (globalObjptr+0x18C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431782:
	movq %r14,%r15
L_139800:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_431784:
	movq %r14,%r15
	jmp L_139800
.p2align 0x4
L_431785:
L_139788:
	movq 0x50(%rbp),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultInt_0
.p2align 0x4
L_431786:
L_139766:
	movq 0x40(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq (globalObjptr+0xCA98)(%rip),%r8
	je L_431792
L_139767:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq $0x6,%r13
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_231
L_139781:
	xorq %r11,%r11
	movq %r8,%r15
.p2align 0x4,,0x7
vectorEqualLoop_134:
	cmpq %r13,%r11
	je L_431791
L_139782:
	movq (globalObjptr+0xCA98)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne vectorEqual_230
L_139784:
	incq %r11
	jmp vectorEqualLoop_134
.p2align 0x4
vectorEqual_230:
vectorEqual_66:
	cmpq (globalObjptr+0xD6E8)(%rip),%r15
	je L_139777
L_139769:
	testl %ecx,%ecx
	jz L_139771
L_139772:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_133:
	cmpq %r13,%r11
	je L_431788
L_139773:
	movq (globalObjptr+0xD6E8)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_431787
L_139775:
	incq %r11
	jmp vectorEqualLoop_133
.p2align 0x4
L_431787:
L_139771:
	movq (globalObjptr+0x1AD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431788:
L_139777:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_139778:
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_431791:
	movq %r14,%r15
L_139786:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_139778
.p2align 0x4
vectorEqual_231:
	movq %r8,%r15
	jmp vectorEqual_66
.p2align 0x4
L_431792:
	movq %r14,%r15
	jmp L_139786
.p2align 0x4
.long 0x1DFC
L_139703:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
L_139704:
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
.long 0x1DFC
L_139710:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_139704
.p2align 0x4
.long 0x1DFA
L_139715:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139716
L_139741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139742
.p2align 0x4
.long 0x1DFD
L_139742:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139716:
	movq 0x20(%rbp),%r15
get_6:
	movq 0x10(%r15),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_139685
L_139717:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_431805
L_139718:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_139720:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_139721
L_139732:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD1,%r13
	je L_431800
L_139721:
	movl 0x18(%rbp),%r13d
	incl %r13d
	movl %r13d,0x1C(%rbp)
	jo L_139459
L_139722:
	cmpq $0x1,%r15
	je L_431795
L_139723:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x18(%rbp)
	jmp L_139720
.p2align 0x4
L_431795:
L_139724:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139725
L_139730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139731
.p2align 0x4
.long 0x1DEB
L_139731:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139725:
	movl 0x1C(%rbp),%ecx
L_139726:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_139696
L_139727:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_139463
L_139729:
	movl %ecx,0x0(%r15)
	jmp L_139463
.p2align 0x4
L_431800:
L_139733:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139734
L_139738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139739
.p2align 0x4
.long 0x1DEB
L_139739:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139734:
	movl 0x18(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_139696
L_139735:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jnl L_139463
L_139737:
	movl %r15d,0x0(%r14)
	jmp L_139463
.p2align 0x4
L_431805:
L_139740:
	xorl %ecx,%ecx
	jmp L_139726
.p2align 0x4
.long 0x1DF8
L_139637:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139638
L_139681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139682
.p2align 0x4
.long 0x1DFB
L_139682:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139638:
	movq $0x2831,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_431808
L_139639:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_139636
.p2align 0x4
L_431808:
L_139640:
	movq %r15,0x20(%rbp)
	jmp L_139641
.p2align 0x4
.long 0x1DF9
L_139642:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_139436
L_139643:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_431810
L_139644:
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_139645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_431810:
L_139680:
	movq (globalObjptr+0x1BC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1DF0
L_139528:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139529
L_139631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139632
.p2align 0x4
.long 0x1DF7
L_139632:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139529:
	movq $0x2831,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_431812
L_139530:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_139527
.p2align 0x4
L_431812:
L_139531:
	movq %r15,0x20(%rbp)
	jmp L_139532
.p2align 0x4
.long 0x1DF1
L_139533:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r14
	je L_431850
L_139534:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_139535:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_139452
L_139537:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1491:
	cmpl %ebx,%ecx
	je L_431842
L_139538:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_139456
L_139540:
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r14,%r13,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r10)
	je L_431815
L_139541:
	incl %ebx
	jo L_139459
L_139542:
	jmp loop_1491
.p2align 0x4
L_431815:
L_139543:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431840
.p2align 0x4,,0x7
L_139545:
	movq $0x2831,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_431816
L_139546:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_139535
.p2align 0x4
L_431816:
L_139548:
	cmpq $0x1,%r15
	je L_431839
L_139549:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_139550:
	incl %ecx
	jo L_139459
L_139551:
	cmpq $0x1,%r15
	je L_431817
L_139552:
	movq 0x8(%r15),%r15
	jmp L_139550
.p2align 0x4
L_431817:
L_139553:
	movq %r14,0x18(%rbp)
L_139554:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_139509
L_139555:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA9D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139556
.p2align 0x4
.long 0x1DEE
L_139556:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x28(%rbp)
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1492:
	cmpq 0x20(%rbp),%r15
	jnl L_431819
L_139605:
	cmpq $0x1,%r14
	je L_431818
L_139606:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1492
.p2align 0x4
L_431818:
L_139607:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431819:
L_139557:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139558
L_139603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139604
.p2align 0x4
.long 0x1DF3
L_139604:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139558:
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x18(%rbp)
	movslq %r14d,%r13
	movq %r13,0x30(%rbp)
	cmpq %r15,%r13
	jne L_139452
L_139560:
	testl %r14d,%r14d
	jz L_431830
L_139561:
	movq $0x179D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_139456
L_139563:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_431828
L_139564:
	movq %r15,0x40(%rbp)
	movl $0x0,0x1C(%rbp)
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_1493:
	movl 0x48(%rbp),%ecx
	cmpl 0x18(%rbp),%ecx
	jnl L_431824
L_139587:
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_431821
L_139588:
	movq 0x40(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_431820
L_139595:
	movq %r13,%r15
.p2align 0x4,,0x7
L_139593:
	movq %r15,0x40(%rbp)
	movl %ecx,0x1C(%rbp)
	incl 0x48(%rbp)
	jmp loop_1493
.p2align 0x4
L_431820:
L_139589:
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r13,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_431821:
L_139596:
	shrq $0x1,%r13
	movl %r13d,%r14d
	movq 0x40(%rbp),%r15
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_431823
L_139598:
	movq %r15,%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	cmpl %r14d,%r11d
	jl L_431822
L_139599:
	movl 0x1C(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_139593
.p2align 0x4
L_431822:
.p2align 0x4,,0x7
L_139592:
	movq 0x50(%rbp),%r15
	movl 0x48(%rbp),%ecx
	jmp L_139593
.p2align 0x4
L_431823:
L_139597:
	movl 0x1C(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_139593
.p2align 0x4
L_431824:
L_139565:
	movl 0x18(%rbp),%r15d
	decl %r15d
	movslq 0x1C(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	jnb L_139456
L_139567:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_139456
L_139569:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_139459
L_139570:
	movl %r15d,0x80(%rbp)
	movl $0x0,0x84(%rbp)
	movq %r11,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_139571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_14
.p2align 0x4
L_431828:
L_139601:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431830:
L_139574:
	movq 0x30(%rbp),%rdx
	testq %rdx,%rdx
	jz L_431834
L_139575:
	cmpq $0x7FFFFFFF,%rdx
	ja L_139509
L_139576:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139577
.p2align 0x4
.long 0x1DEB
L_139577:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,%r15
L_139578:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1494:
	cmpq 0x30(%rbp),%r14
	jnl L_431832
L_139580:
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq 0x20(%rbp),%r11
	jnb L_139456
L_139582:
	incq %r14
	jmp loop_1494
.p2align 0x4
L_431832:
L_139579:
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r15)
	jmp x_508
.p2align 0x4
L_431834:
L_139584:
	movq (globalObjptr+0x4C88)(%rip),%r15
	jmp L_139578
.p2align 0x4
L_431839:
L_139609:
	movq %r15,0x18(%rbp)
	xorl %ecx,%ecx
	jmp L_139554
.p2align 0x4
L_431840:
L_139610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139611
.p2align 0x4
.long 0x1DF5
L_139611:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139545
.p2align 0x4
L_431842:
L_139612:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431848
.p2align 0x4,,0x7
L_139613:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_139620
L_139614:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_139615:
	movq 0x8(%r14),%r13
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r13)
	je L_431845
L_139616:
	cmpq $0x1,%r15
	je L_431843
L_139617:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_139615
.p2align 0x4
L_431843:
L_139618:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431844
.p2align 0x4,,0x7
L_139620:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_139545
.p2align 0x4
L_431844:
L_139621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139622
.p2align 0x4
.long 0x1DF6
L_139622:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139620
.p2align 0x4
L_431845:
L_139623:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139545
L_139625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139626
.p2align 0x4
.long 0x1DF5
L_139626:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139545
.p2align 0x4
L_431848:
L_139628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139629
.p2align 0x4
.long 0x1DF6
L_139629:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139613
.p2align 0x4
L_431850:
L_139630:
	movq 0x20(%rbp),%r15
	jmp L_139548
.p2align 0x4
.long 0x8DE
L_139514:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x18(%rbp)
	jne L_139452
L_139516:
	testq %rdx,%rdx
	jz L_431853
L_139517:
	cmpq $0x7FFFFFFF,%rdx
	ja L_139509
L_139518:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139519
.p2align 0x4
.long 0x1DEB
L_139519:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,%r15
L_139520:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1490:
	cmpq 0x20(%rbp),%r14
	jnl L_431851
L_139522:
	incq %r14
	jmp loop_1490
.p2align 0x4
L_431851:
L_139521:
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r15)
	jmp x_508
.p2align 0x4
L_431853:
L_139524:
	movq (globalObjptr+0x4C80)(%rip),%r15
	jmp L_139520
.p2align 0x4
.long 0x8DE
L_139496:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139497
L_139504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139505
.p2align 0x4
.long 0x1DEE
L_139505:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139497:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_139452
L_139499:
	cmpl $0x1,%r15d
	jne L_139463
L_139501:
	cmpq $0x0,%r14
	ja L_139463
	jmp L_139456
.p2align 0x4
.long 0x1DEF
L_139507:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	incq 0x30(%rbp)
	jmp loop_1489
.p2align 0x4
.long 0x1E00
L_139757:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x1E01
L_139801:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_139759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x1E00
L_139789:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x1E01
L_139779:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_139759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x8DE
L_139705:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139463
L_139707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139708
.p2align 0x4
.long 0x1DEB
L_139708:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139463
.p2align 0x4
.long 0x1DFA
L_139645:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_139436
L_139646:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_431872
L_139647:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_139648:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431871
.p2align 0x4,,0x7
L_139649:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_139658
L_139650:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_139651:
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_431867
L_139652:
L_139653:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_139654
L_139666:
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r15)
	je L_431864
L_139654:
	cmpq $0x1,%r14
	je L_431860
L_139655:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_139651
.p2align 0x4
L_431860:
L_139656:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431863
.p2align 0x4,,0x7
L_139658:
	movq $0x2831,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_431861
L_139659:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_139648
.p2align 0x4
L_431861:
L_139661:
	cmpq $0x1,%r15
	je L_431862
L_139662:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_139550
.p2align 0x4
L_431862:
L_139663:
	movq %r15,0x18(%rbp)
	xorl %ecx,%ecx
	jmp L_139554
.p2align 0x4
L_431863:
L_139664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139665
.p2align 0x4
.long 0xC13
L_139665:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139658
.p2align 0x4
L_431864:
L_139669:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_431865
L_139670:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_139648
.p2align 0x4
L_431865:
L_139671:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_139661
.p2align 0x4
L_431867:
L_139672:
	shrq $0x1,%r13
	movl %r13d,%r11d
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_139654
L_139673:
	shrq $0x1,%r15
	movl %r15d,%r13d
	cmpl %r13d,%r11d
	je L_139669
	jmp L_139654
.p2align 0x4
L_431871:
L_139677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139678
.p2align 0x4
.long 0xC13
L_139678:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139649
.p2align 0x4
L_431872:
L_139679:
	movq 0x20(%rbp),%r15
	jmp L_139661
.p2align 0x4
.long 0x1DF4
L_139590:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r14d
	movl %r14d,0x4C(%rbp)
	testl %r14d,%r14d
	jz L_139592
L_139594:
	movq 0x40(%rbp),%r15
	movl 0x1C(%rbp),%ecx
	jmp L_139593
.p2align 0x4
.long 0x1DF2
L_139571:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139572
L_139585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139586
.p2align 0x4
.long 0x1DF3
L_139586:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139572:
	movq $0x3D1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl $0x1,0x8C(%rbp)
	addq $0x80,%rbp
	leaq (L_139573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x1E01
L_139758:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_139759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x1E02
L_139759:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x9,0x80(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_139760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x1E01
L_139790:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_139759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x8DE
L_139573:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_139574
.p2align 0x4
.long 0x1E03
L_139760:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x8DE
L_139761:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_139762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
.long 0x1E04
L_139762:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139763
L_139764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_139765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139765
.p2align 0x4
.long 0x1DEE
L_139765:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_139763:
	movq 0x18(%rbp),%r15
	jmp get_6
.text
.p2align 0x4
.globl qsort_14
.hidden qsort_14
qsort_14:
L_139811:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_1495
L_139878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_139879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139879
.p2align 0x4
.long 0x4E9
L_139879:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_1495:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_139813
L_139814:
	cmpl $0x14,%r15d
	jng L_431878
L_139816:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_431877
L_139817:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_139818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_431877:
L_139813:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431878:
L_139815:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_139818:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_139819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_139819:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_139813
L_139820:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_139822
L_139823:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_139822
L_139825:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_139822
L_139827:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_139822
L_139829:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_139822
L_139831:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_139813
L_139832:
	movl %r15d,0x50(%rbp)
.p2align 0x4,,0x7
loop_1497:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_139813
L_139833:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_139822
L_139835:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x48(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_431881
L_139836:
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_431880
L_139872:
	jmp loop_1497
.p2align 0x4
L_431880:
L_139837:
	movq %r13,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_139838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_431881:
L_139873:
	movq 0x48(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_431897
L_139875:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl loop_1497
L_139876:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
.p2align 0x4,,0x7
loop_1498:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_139813
L_139841:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_139822
L_139843:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_431883
L_139844:
	movq 0x48(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_431882
L_139866:
	jmp loop_1498
.p2align 0x4
L_431882:
L_139845:
	movq %r13,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_139846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_431883:
L_139867:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_139849
L_139869:
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %r15d,%r13d
	jnl L_431884
L_139871:
	jmp loop_1498
.p2align 0x4
L_431884:
.p2align 0x4,,0x7
L_139849:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_431889
L_139850:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_139822
L_139852:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x60(%rbp),%r10
	cmpq %r14,%r10
	jnb L_139822
L_139854:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_139822
L_139856:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_431885
L_139858:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_1497
.p2align 0x4
L_431885:
L_139822:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431889:
L_139859:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x60(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_139822
L_139861:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_139822
L_139863:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_139813
L_139864:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_139865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_14
.p2align 0x4
L_431897:
L_139874:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_1498
.p2align 0x4
.long 0x1E06
L_139838:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	testl %r15d,%r15d
	jnz L_431907
L_139839:
	movl 0x54(%rbp),%ecx
	jmp loop_1497
.p2align 0x4
L_431907:
L_139840:
	movl 0x50(%rbp),%ecx
	jmp loop_1498
.p2align 0x4
.long 0x1E07
L_139846:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_139849
L_139847:
	movl 0x50(%rbp),%ecx
	jmp loop_1498
.p2align 0x4
.long 0x4F8
L_139865:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_1495
.text
.p2align 0x4
.globl layout_50
.hidden layout_50
layout_50:
L_139880:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_139981
L_139881:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431914
L_139882:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_431913
L_139885:
	cmpl $0x0,%r13d
	je L_431911
	cmpl $0x1,%r13d
	je L_431909
L_139886:
	movl %r13d,0x40(%rbp)
	movq $0x3BAB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r13,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_139887+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_431909:
L_139964:
	cmpq $0x0,%r15
	jna L_431910
L_139966:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_139967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431910:
L_139965:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431911:
L_139963:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_139898:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_431912
L_139956:
	movq %r11,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_139957+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_431912:
L_139899:
L_139900:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_139901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431913:
L_139884:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431914:
L_139981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_139982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139982
.p2align 0x4
.long 0x460
L_139982:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_139882
.p2align 0x4
.long 0x4A7
L_139887:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_139888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4A7
L_139967:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_139968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBAB
L_139957:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_139900
.p2align 0x4
.long 0x900
L_139901:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_139902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A7
L_139888:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_139889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_139968:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139969
L_139979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_139980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139980
.p2align 0x4
.long 0x4B1
L_139980:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_139969:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_139970:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_431919
L_139971:
	cmpq $0x1,%r14
	je L_431916
L_139972:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_139970
.p2align 0x4
L_431916:
L_139973:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139974
L_139977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_139978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139978
.p2align 0x4
.long 0xC44
L_139978:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_139974:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_431917
L_139975:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_139898
.p2align 0x4
L_431917:
L_139976:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_139898
.p2align 0x4
L_431919:
L_139892:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_139902:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139903
L_139954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_139955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139955
.p2align 0x4
.long 0x5E8
L_139955:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_139903:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_139884
L_139905:
	movl %r13d,0x50(%rbp)
	movq $0x3BA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_139906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4A8
L_139889:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139890
L_139961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_139962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139962
.p2align 0x4
.long 0x4B1
L_139962:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_139890:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_139891:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_139892
L_139893:
	cmpq $0x1,%r14
	je L_431923
L_139894:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_139891
.p2align 0x4
L_431923:
L_139895:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139896
L_139959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_139960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139960
.p2align 0x4
.long 0xC44
L_139960:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_139896:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_431924
L_139897:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_139898
.p2align 0x4
L_431924:
L_139958:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_139898
.p2align 0x4
.long 0x75E
L_139906:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139907
L_139952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_139953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139953
.p2align 0x4
.long 0x5EF
L_139953:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_139907:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_431929
L_139908:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,%r13
	je L_431928
L_139909:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x48(%rbp)
	movq %r13,%r15
L_139910:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0xDF80)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_139911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_431928:
L_139950:
	movq 0x28(%rbp),%r15
x_509:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_139926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_431929:
L_139951:
	movq $0x1,%r15
	jmp x_509
.p2align 0x4
.long 0x4B4
L_139911:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139912
L_139948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_139949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139949
.p2align 0x4
.long 0x4B7
L_139949:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_139912:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_139913:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_139892
L_139914:
	cmpq $0x1,%r14
	je L_431931
L_139915:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_139913
.p2align 0x4
L_431931:
L_139916:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139917
L_139946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_139947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139947
.p2align 0x4
.long 0x7A5
L_139947:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_139917:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_431935
L_139918:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_139919:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_431932
L_139920:
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	jmp L_139910
.p2align 0x4
L_431932:
L_139921:
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_139922:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431934
.p2align 0x4,,0x7
L_139923:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_431933
L_139924:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_139922
.p2align 0x4
L_431933:
L_139925:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,%r15
	jmp x_509
.p2align 0x4
L_431934:
L_139943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_139944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139944
.p2align 0x4
.long 0x7AD
L_139944:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_139923
.p2align 0x4
L_431935:
L_139945:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_139919
.p2align 0x4
.long 0x75E
L_139926:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139927
L_139941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_139942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139942
.p2align 0x4
.long 0x1E08
L_139942:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_139927:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_431944
L_139928:
	decl %ecx
	jo L_139892
L_139929:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
L_139930:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_139931:
	addl 0x0(%r14),%ecx
	movl %ecx,0x30(%rbp)
	jo L_139892
L_139932:
	cmpq $0x1,%r15
	je L_431939
L_139933:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_139931
.p2align 0x4
L_431939:
L_139934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_139935
L_139938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_139939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139939
.p2align 0x4
.long 0x5E5
L_139939:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_139935:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_431940
L_139936:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431940:
L_139937:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431944:
L_139940:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_139930
.text
.p2align 0x4
.globl unfoldi_2
.hidden unfoldi_2
unfoldi_2:
L_139983:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_139984
L_140197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_140198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140198
.p2align 0x4
.long 0x493
L_140198:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_139984:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_432030
L_139985:
	cmpq $0x7FFFFFFF,%rdx
	ja L_140027
L_139986:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1421,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_139987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_139987
.p2align 0x4
.long 0x1E09
L_139987:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x8(%rbp)
L_139988:
	movq $0x0,0x28(%rbp)
.p2align 0x4,,0x7
loop_1499:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_432028
.p2align 0x4,,0x7
L_139989:
	movq 0x28(%rbp),%r15
	cmpq 0x20(%rbp),%r15
	jnl L_432027
L_139991:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_432026
L_139992:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1F8E,%rax
	cmpq $0x26,%rax
	ja L_431946
	jmp *jumpTable_301(,%rax,8)
.data
.p2align 0x4
jumpTable_301:
.quad L_432025,L_432024,L_432023,L_432018,L_432017,L_432016,L_432015,L_432014,L_432013,L_432012,L_432011,L_432010,L_432009,L_432008,L_432004,L_432003,L_432002,L_431980,L_431977,L_431976,L_431972,L_431971,L_431970,L_431969,L_431961,L_431960,L_431959,L_431958,L_431957,L_431956,L_431955,L_431954,L_431953,L_431952,L_431951,L_431950,L_431949,L_431948,L_431947
.text
.p2align 0x4
L_431946:
L_139993:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_139994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_431947:
L_140177:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x40(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x30(%r13),%r9
	movq 0x28(%r13),%r8
	movq 0x20(%r13),%rsp
	movq 0x18(%r13),%rsi
	movq 0x10(%r13),%rdi
	movq 0x8(%r13),%rdx
	movq 0x0(%r13),%rcx
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x981,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rcx,0x8(%r13)
	movq %rdx,0x10(%r13)
	movq %rdi,0x18(%r13)
	movq %rsi,0x20(%r13)
	movq %rsp,0x28(%r13)
	movq %r8,0x30(%r13)
	movq %r9,0x38(%r13)
	movq %r10,0x40(%r13)
	movq %r11,0x48(%r13)
	addq $0x68,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x50(%r13)
	movq %r14,0x58(%r13)
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_140178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_110
.p2align 0x4
L_431948:
L_140176:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_110
.p2align 0x4
L_431949:
L_140175:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_111
.p2align 0x4
L_431950:
L_140174:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq $0x1D2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
L_431951:
L_140173:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_139997:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x28(%rbp)
	jmp loop_1499
.p2align 0x4
L_431952:
L_140172:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_112
.p2align 0x4
L_431953:
L_140171:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_431954:
L_140170:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq $0x1D2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
L_431955:
L_140169:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_112
.p2align 0x4
L_431956:
L_140168:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_431957:
L_140167:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_113
.p2align 0x4
L_431958:
L_140166:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_113
.p2align 0x4
L_431959:
L_140165:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1612
.p2align 0x4
L_431960:
L_140164:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1612
.p2align 0x4
L_431961:
L_140118:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x298B,%r15
	je L_431965
L_140142:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_431964
L_140143:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1496,%r15
	jne L_431962
L_140144:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_139997
.p2align 0x4
L_431962:
L_140145:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2069,%r14
	je L_431963
L_140155:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	leaq L_140151(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_140156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_431963:
L_140146:
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	leaq L_140151(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_140147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1613
.p2align 0x4
L_431964:
L_140141:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431965:
L_140119:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_140141
L_140120:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1496,%r15
	jne L_431966
L_140121:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_139997
.p2align 0x4
L_431966:
L_140122:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2069,%r14
	je L_431967
L_140132:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	leaq L_140128(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_140133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_431967:
L_140123:
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	leaq L_140128(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_140124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1613
.p2align 0x4
L_431969:
L_140117:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq $0x1D2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
L_431970:
L_140116:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_431971:
L_140115:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkVarExp_0
.p2align 0x4
L_431972:
L_140110:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpl $0x0,%r14d
	je L_431975
	cmpl $0x1,%r14d
	je L_431974
	cmpl $0x2,%r14d
	je L_431973
L_140111:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431973:
L_140114:
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_431974:
L_140113:
	movq %r10,%r15
	jmp L_139997
.p2align 0x4
L_431975:
	movq %r13,%r15
	jmp L_139997
.p2align 0x4
L_431976:
L_140109:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_139997
.p2align 0x4
L_431977:
L_140105:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_431979
	cmpl $0x1,%r14d
	je L_431978
L_140106:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431978:
L_140108:
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_431979:
	movq %r13,%r15
	jmp L_139997
.p2align 0x4
L_431980:
L_140047:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movslq %r14d,%r15
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r15,8),%r8
	movq %r8,0x38(%rbp)
	movq 0x28(%r10),%r14
	movq 0x20(%r10),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%r10),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r10),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r10),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r10),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r8),%r11
	movq %r11,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_432001
L_140049:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_432000
L_140050:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_140052:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_431999
L_140097:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_431998
L_140098:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_431995
L_140053:
	incl %ecx
	movl %ecx,0x70(%rbp)
	jo L_140041
L_140054:
	cmpq $0x1,%r15
	je L_431981
L_140055:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_140052
.p2align 0x4
L_431981:
L_140056:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431993
.p2align 0x4,,0x7
L_140057:
	movl 0x70(%rbp),%ecx
L_140058:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_431992
L_140060:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_140062
L_140094:
	movl %ecx,0x0(%r15)
L_140062:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE96,%r14
	je L_431989
L_140081:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_431988
L_140083:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1503:
	cmpl %ebx,%ecx
	je L_431986
L_140084:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_431985
L_140086:
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x48(%rbp),%r11
	movq 0x0(%r11,%r13,1),%r10
	salq $0x4,%r14
	movq 0x30(%rbp),%r13
	movq 0x8(%r13),%r9
	movq 0x8(%r11,%r14,1),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_431983
L_140087:
	incl %ebx
	jo L_431982
L_140088:
	jmp loop_1503
.p2align 0x4
L_431982:
L_140041:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431983:
L_140089:
	movq %r10,0x30(%rbp)
.p2align 0x4,,0x7
L_140073:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_431984
.p2align 0x4,,0x7
L_140074:
	movq $0x193F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
	jmp L_139997
.p2align 0x4
L_431984:
L_140075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_140076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140076
.p2align 0x4
.long 0x1E0C
L_140076:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_140074
.p2align 0x4
L_431985:
L_140085:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431986:
L_140090:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140091
L_140092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_140093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140093
.p2align 0x4
.long 0x1E0E
L_140093:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_140091:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x80(%rbp)
	movq $0x1D2F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_140072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
L_431988:
L_140018:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431989:
L_140063:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_140018
L_140065:
	movl %r13d,0x80(%rbp)
	movq $0x3F3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x78,%rbp
	leaq (L_140066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_431992:
L_140059:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_431993:
L_140095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_140096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140096
.p2align 0x4
.long 0x1E0F
L_140096:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_140057
.p2align 0x4
L_431995:
L_140100:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_140059
L_140101:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_431996
L_140103:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_431996:
L_140102:
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_431998:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_140053
.p2align 0x4
L_431999:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_140053
.p2align 0x4
L_432000:
L_140104:
	xorl %ecx,%ecx
	jmp L_140058
.p2align 0x4
L_432001:
L_140048:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432002:
L_140046:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_432003:
L_140045:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkExp_0
.p2align 0x4
L_432004:
L_140039:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_1501:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_432006
L_140043:
	incl %ecx
	jo L_140041
L_140044:
	jmp loop_1501
.p2align 0x4
L_432006:
L_140040:
	incl %ecx
	jo L_140041
L_140042:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_139997
.p2align 0x4
L_432008:
L_140038:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1612
.p2align 0x4
L_432009:
L_140037:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1612
.p2align 0x4
L_432010:
L_140036:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_113
.p2align 0x4
L_432011:
L_140035:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_113
.p2align 0x4
L_432012:
L_140034:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_139997
.p2align 0x4
L_432013:
L_140033:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_112
.p2align 0x4
L_432014:
L_140032:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_112
.p2align 0x4
L_432015:
L_140031:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_112
.p2align 0x4
L_432016:
L_140030:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_112
.p2align 0x4
L_432017:
L_140029:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_112
.p2align 0x4
L_432018:
L_140016:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %rdx,%r15
	movq %r13,0x38(%rbp)
	jne L_140018
L_140019:
	testq %rdx,%rdx
	jz L_432021
L_140020:
	cmpq $0x7FFFFFFF,%rdx
	ja L_432020
L_140021:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_140022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140022
.p2align 0x4
.long 0x1B21
L_140022:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_140023:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1500:
	cmpq 0x50(%rbp),%r14
	jnl L_432019
L_140025:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r9,8),%r8
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r10
	movq %r8,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_1500
.p2align 0x4
L_432019:
L_140024:
	movq $0x9A3,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1614
.p2align 0x4
L_432020:
L_140027:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432021:
L_140028:
	movq (globalObjptr+0x4CF0)(%rip),%r15
	jmp L_140023
.p2align 0x4
L_432023:
L_140015:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_139997
.p2align 0x4
L_432024:
L_140013:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_140014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_111
.p2align 0x4
L_432025:
L_139998:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x40(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x30(%r13),%r9
	movq 0x28(%r13),%r8
	movq 0x20(%r13),%rsp
	movq 0x18(%r13),%rsi
	movq 0x10(%r13),%rdi
	movq 0x8(%r13),%rdx
	movq 0x0(%r13),%rcx
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x981,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rcx,0x8(%r13)
	movq %rdx,0x10(%r13)
	movq %rdi,0x18(%r13)
	movq %rsi,0x20(%r13)
	movq %rsp,0x28(%r13)
	movq %r8,0x30(%r13)
	movq %r9,0x38(%r13)
	movq %r10,0x40(%r13)
	movq %r11,0x48(%r13)
	addq $0x68,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x50(%r13)
	movq %r14,0x58(%r13)
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_139999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_110
.p2align 0x4
L_432026:
L_140192:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432027:
L_139990:
	movq 0x8(%rbp),%r14
	movq $0x99,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432028:
L_140193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_140194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140194
.p2align 0x4
.long 0x14BB
L_140194:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_139989
.p2align 0x4
L_432030:
L_140196:
	movq (globalObjptr+0x4F0)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_139988
.p2align 0x4
.long 0xE72
L_139994:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_432032
L_139996:
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r15
	jmp L_139997
.p2align 0x4
L_432032:
L_139995:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x52C
L_140178:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140179
L_140190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_140191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140191
.p2align 0x4
.long 0x5B5
L_140191:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_140179:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_432033
L_140180:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_140181:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x3DBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_140182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_432033:
L_140186:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_139997
.p2align 0x4
.long 0xE72
L_140014:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_139997
.p2align 0x4
.long 0x1B5E
L_140156:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140157
L_140161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_140162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140162
.p2align 0x4
.long 0x1E10
L_140162:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_140157:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_432035
L_140158:
L_140159:
	movl $0x1,0x0(%r15)
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1D2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_140147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
L_432035:
L_140160:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x60(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp L_140159
.p2align 0x4
.long 0x25
L_140151:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140152
L_140153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_140154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140154
.p2align 0x4
.long 0x7C1
L_140154:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_140152:
	movq $0x292F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x52C
L_140147:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140148
L_140149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_140150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140150
.p2align 0x4
.long 0x1B4D
L_140150:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_140148:
	movq $0x292D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_139997
.p2align 0x4
.long 0x1B5E
L_140133:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140134
L_140138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_140139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140139
.p2align 0x4
.long 0x1E10
L_140139:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_140134:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_432039
L_140135:
L_140136:
	movl $0x1,0x0(%r15)
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1D2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_140124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
L_432039:
L_140137:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x195D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x60(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp L_140136
.p2align 0x4
.long 0x25
L_140128:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140129
L_140130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_140131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140131
.p2align 0x4
.long 0x7C1
L_140131:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_140129:
	movq $0x292F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x52C
L_140124:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140125
L_140126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_140127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140127
.p2align 0x4
.long 0x1B4D
L_140127:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_140125:
	movq $0x292D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_139997
.p2align 0x4
.long 0x1E0B
L_140072:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_140073
.p2align 0x4
.long 0x1E0A
L_140066:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_140018
L_140068:
	cmpl $0x0,%ecx
	jl L_432045
L_140069:
	movl %ebx,0x48(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1502:
	cmpl %ecx,%ebx
	jnl L_432043
L_140079:
	movslq %ebx,%r15
	movl 0x48(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x48(%rbp)
	incl %ebx
	jmp loop_1502
.p2align 0x4
L_432043:
L_140070:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140071
L_140077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_140078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140078
.p2align 0x4
.long 0x1E0D
L_140078:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_140071:
	movq $0x1D2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_140072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
L_432045:
L_140080:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x52C
L_139999:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140000
L_140011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_140012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140012
.p2align 0x4
.long 0x5B5
L_140012:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_140000:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_432047
L_140001:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_140002:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x3DBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_140003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_432047:
L_140007:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_139997
.p2align 0x4
.long 0x5B7
L_140182:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140183
L_140187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_140188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140188
.p2align 0x4
.long 0x5BC
L_140188:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_140183:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_140186
L_140184:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_140181
.p2align 0x4
.long 0x5B7
L_140003:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140004
L_140008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_140009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140009
.p2align 0x4
.long 0x5BC
L_140009:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_140004:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_140007
L_140005:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_140002
.text
.p2align 0x4
.globl get_110
.hidden get_110
get_110:
L_140199:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_140370
L_140200:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_432078
L_140201:
	movq 0x8(%rbp),%r11
	movq 0x58(%r11),%r14
	movq 0x50(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x40(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_140202
L_140203:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_432076
L_140204:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_140206:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_432075
L_140362:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_432074
L_140363:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_432071
L_140207:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_140208
L_140209:
	cmpq $0x1,%r15
	je L_432053
L_140210:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_140206
.p2align 0x4
L_432053:
L_140211:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140212
L_140360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_140361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140361
.p2align 0x4
.long 0xF2C
L_140361:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_140212:
	movl 0x48(%rbp),%ecx
L_140213:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_140214
L_140215:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_140217
L_140359:
	movl %ecx,0x0(%r15)
L_140217:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE96,%r14
	je L_432065
L_140307:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r11
	incq %r11
	jo L_432064
L_140308:
	movq %r11,0x0(%r14)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_432063
L_140309:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x20(%rbp)
	movl $0x0,0x28(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_140311:
	movq 0x20(%rbp),%r14
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_140312
L_140348:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xD90,%r11
	jne L_140312
L_140349:
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_432057
L_140312:
	movl 0x28(%rbp),%r14d
	incl %r14d
	jo L_432056
L_140313:
	cmpq $0x1,%r15
	je L_432054
L_140314:
	movl %r14d,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_140311
.p2align 0x4
L_432054:
	movl %r14d,%ecx
L_140316:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_432055
L_140317:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_510
L_140347:
	movl %ecx,0x0(%r15)
x_510:
	movq 0x10(%r13),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_140319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_432055:
L_140214:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432056:
L_140208:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432057:
L_140351:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140352
L_140356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_140357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140357
.p2align 0x4
.long 0x1E13
L_140357:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_140352:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_140214
L_140353:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_432058
L_140354:
	movq 0x20(%rbp),%r15
x_511:
	movq 0x8(%r15),%r15
L_140289:
	movq $0x193F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432058:
L_140355:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp x_511
.p2align 0x4
L_432063:
L_140358:
	xorl %ecx,%ecx
	jmp L_140316
.p2align 0x4
L_432064:
L_140202:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432065:
L_140218:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_432066
L_140221:
	movl %r13d,0x58(%rbp)
	movq $0x3F67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_140222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_432066:
L_140220:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432071:
L_140365:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_140214
L_140366:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_432072
L_140368:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432072:
L_140367:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432074:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_140207
.p2align 0x4
L_432075:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_140207
.p2align 0x4
L_432076:
L_140369:
	xorl %ecx,%ecx
	jmp L_140213
.p2align 0x4
L_432078:
L_140370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_140371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140371
.p2align 0x4
.long 0x460
L_140371:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_140201
.p2align 0x4
.long 0x1
L_140319:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_140320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1851
L_140222:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140223
L_140305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_140306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140306
.p2align 0x4
.long 0x86F
L_140306:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_140223:
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r15
	incq %r15
	jo L_140202
L_140224:
	movq %r15,0x0(%r14)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_432097
L_140225:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x50(%rbp)
	movl $0x0,0x58(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_140227:
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_140228
L_140273:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD8F,%r13
	jne L_140228
L_140274:
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_432086
L_140228:
	movl 0x58(%rbp),%r14d
	incl %r14d
	movl %r14d,0x50(%rbp)
	jo L_140208
L_140229:
	cmpq $0x1,%r15
	je L_432080
L_140230:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x58(%rbp)
	movq %r13,0x50(%rbp)
	jmp L_140227
.p2align 0x4
L_432080:
L_140231:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140232
L_140271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_140272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140272
.p2align 0x4
.long 0x1E11
L_140272:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_140232:
	movl 0x50(%rbp),%ecx
L_140233:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_140214
L_140234:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_140236
L_140270:
	movl %ecx,0x0(%r15)
L_140236:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_432081
L_140268:
	movq %r11,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_140269+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_432081:
L_140237:
L_140238:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_140239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_432086:
L_140276:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140277
L_140302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_140303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140303
.p2align 0x4
.long 0x1E12
L_140303:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_140277:
	movl 0x58(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_140214
L_140278:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_432092
L_140279:
	movq 0x50(%rbp),%r15
L_140280:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2998,%r15
	je L_432087
L_140296:
	movq 0x58(%r14),%r15
	movq 0x50(%r14),%r13
	movq 0x48(%r14),%r11
	movq 0x40(%r14),%r10
	movq 0x38(%r14),%r9
	movq 0x0(%r14),%r8
	movq 0x30(%r14),%rsp
	movq 0x28(%r14),%rsi
	movq 0x20(%r14),%rdi
	movq 0x18(%r14),%rdx
	movq 0x10(%r14),%rcx
	movl 0x8(%r14),%ebx
	movq $0x87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movl %ebx,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	movq %r11,0x20(%r14)
	movq %r10,0x28(%r14)
	movq %r9,0x30(%r14)
	movq %rsp,0x38(%r14)
	movq %rsi,0x40(%r14)
	movq %rdi,0x48(%r14)
	movq %rdx,0x50(%r14)
	movq %rcx,0x58(%r14)
	addq $0x68,%r12
	movl $0x0,0xC(%r14)
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_140297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiate_0
.p2align 0x4
L_432087:
L_140281:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movl 0x0(%r15),%ebx
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_140220
L_140283:
	cmpl $0x0,%ecx
	jl L_432090
L_140284:
	movl %ebx,0x30(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1504:
	cmpl %ecx,%ebx
	jnl L_432088
L_140294:
	movslq %ebx,%r15
	movl 0x30(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x30(%rbp)
	incl %ebx
	jmp loop_1504
.p2align 0x4
L_432088:
L_140285:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140286
L_140292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_140293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140293
.p2align 0x4
.long 0xC3E
L_140293:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_140286:
	movq $0x1D2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_140287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_0
.p2align 0x4
L_432090:
L_140295:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432092:
L_140301:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_140280
.p2align 0x4
L_432097:
L_140304:
	xorl %ecx,%ecx
	jmp L_140233
.p2align 0x4
.long 0x4B0
L_140320:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE3F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_140321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_140269:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_140238
.p2align 0x4
.long 0x1
L_140239:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_140240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78E
L_140297:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140298
L_140299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_140300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140300
.p2align 0x4
.long 0x78F
L_140300:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_140298:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r15
	jmp L_140289
.p2align 0x4
.long 0x78E
L_140287:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140288
L_140290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_140291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140291
.p2align 0x4
.long 0x78F
L_140291:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_140288:
	movq 0x48(%rbp),%r15
	jmp L_140289
.p2align 0x4
.long 0x5B0
L_140321:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_140322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_140240:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF410)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_140241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_140322:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140323
L_140345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_140346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140346
.p2align 0x4
.long 0x4AF
L_140346:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_140323:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_140324:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_140208
L_140325:
	cmpq $0x1,%r14
	je L_432102
L_140326:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_140324
.p2align 0x4
L_432102:
L_140327:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140328
L_140343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_140344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140344
.p2align 0x4
.long 0x4E7
L_140344:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_140328:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_432103
L_140329:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_238:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_432103:
L_140342:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_238
.p2align 0x4
.long 0x5B0
L_140241:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_140242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
rev_236:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_432109
L_140330:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_140331:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_432108
.p2align 0x4,,0x7
L_140332:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_432107
L_140333:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_140331
.p2align 0x4
L_432107:
L_140335:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_432108:
L_140339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_140340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140340
.p2align 0x4
.long 0x45C
L_140340:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_140332
.p2align 0x4
L_432109:
L_140341:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_140335
.p2align 0x4
.long 0x51F
L_140242:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140243
L_140266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_140267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140267
.p2align 0x4
.long 0x4AF
L_140267:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_140243:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_140244:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_140208
L_140245:
	cmpq $0x1,%r14
	je L_432110
L_140246:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_140244
.p2align 0x4
L_432110:
L_140247:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140248
L_140264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_140265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140265
.p2align 0x4
.long 0x4E7
L_140265:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_140248:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_432111
L_140249:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_237:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_432111:
L_140263:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_237
.p2align 0x4
.long 0x1
bug_443:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140336
L_140337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_140338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140338
.p2align 0x4
.long 0x452
L_140338:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_140336:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_235:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_432118
L_140250:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_140251:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_432117
.p2align 0x4,,0x7
L_140252:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_432116
L_140253:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_140251
.p2align 0x4
L_432116:
L_140255:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_140256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_432117:
L_140260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_140261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140261
.p2align 0x4
.long 0x45C
L_140261:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_140252
.p2align 0x4
L_432118:
L_140262:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_140255
.p2align 0x4
.long 0x1
L_140256:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140257
L_140258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_140259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140259
.p2align 0x4
.long 0x452
L_140259:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_140257:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl lookup_0
.hidden lookup_0
lookup_0:
L_140372:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_140451
L_140373:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_432155
L_140374:
	movq 0x10(%rbp),%r13
	movq 0x48(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x40(%r13),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_432154
L_140376:
	movq %r14,0x0(%r13)
	movl 0x0(%r10),%r13d
	andl 0x8(%rbp),%r13d
	cmpl $0x0,%r13d
	jl L_140391
L_140377:
	movslq %r13d,%r11
	movq %r11,0x10(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jnb L_140379
L_140380:
	movq 0x0(%r15,%r11,8),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r13
	je L_140390
L_140381:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_140382:
	movq (globalObjptr+0xAE8)(%rip),%r13
	movq 0x0(%r13),%r11
	incq %r11
	jo L_432150
L_140384:
	movq %r11,0x0(%r13)
	movq 0x8(%r15),%r13
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xE96,%r10
	je L_432140
L_140445:
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xE97,%r11
	jne L_140386
L_140446:
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r9
	movq 0x8(%r10),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	je L_432138
L_140386:
	cmpq $0x1,%r14
	je L_432120
L_140387:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_140382
.p2align 0x4
L_432120:
L_140388:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_140390
L_140426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_140427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140427
.p2align 0x4
.long 0x1E16
L_140427:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_140390:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x9F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq (globalObjptr+0x15E0)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_140391
L_140392:
	movl %r13d,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28FB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x10(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_140379
L_140394:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r14,8)
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_140396
L_140397:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_140391
L_140398:
	cmpl %r14d,%r10d
	jnl L_432132
L_140400:
	addl %r10d,%r10d
	jo L_140391
L_140401:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_432130
L_140402:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x73,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_140403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140403
.p2align 0x4
.long 0x1E14
L_140403:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1505:
	cmpq 0x38(%rbp),%r15
	jnl L_432121
L_140424:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1505
.p2align 0x4
L_432121:
L_140404:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_432129
L_140406:
	cmpl $0x0,%r13d
	jl L_432128
L_140407:
	movl $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_1506:
	movl 0x50(%rbp),%r15d
	cmpl 0x2C(%rbp),%r15d
	jnl L_432127
L_140409:
	movslq %r15d,%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_140418
L_140410:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_140411:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_432125
.p2align 0x4,,0x7
L_140412:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x28(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_432124
L_140413:
	movslq %r14d,%r13
	cmpq 0x38(%rbp),%r13
	jnb L_432123
L_140415:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28FB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_432122
L_140416:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_140411
.p2align 0x4
L_432122:
L_140418:
	incl 0x50(%rbp)
	jmp loop_1506
.p2align 0x4
L_432123:
L_140379:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432124:
L_140391:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432125:
L_140420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_140421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140421
.p2align 0x4
.long 0x1E15
L_140421:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_140412
.p2align 0x4
L_432127:
L_140408:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432128:
L_140423:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432129:
L_140396:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432130:
L_140425:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432132:
L_140399:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432138:
L_140444:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432140:
L_140385:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xE96,%r11
	jne L_140386
L_140428:
	movq 0x8(%r13),%r8
	movq 0x0(%r13),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r9)
	jne L_140386
L_140430:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ecx
	movslq %ecx,%r13
	cmpq %r11,%r13
	jne L_140396
L_140432:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r9
	movl %r9d,%ebx
	movslq %ebx,%r13
	cmpq %r9,%r13
	jne L_140396
L_140434:
	cmpl %ebx,%ecx
	jne L_140386
L_140436:
	xorl %ebx,%ebx
	movq %r8,%r13
.p2align 0x4,,0x7
loop_1507:
	cmpl %ecx,%ebx
	je L_140444
L_140437:
	movslq %ebx,%r9
	cmpq %r11,%r9
	jnb L_140379
L_140439:
	movq 0x0(%r10,%r9,8),%r8
	movq 0x0(%r13,%r9,8),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne L_140386
L_140441:
	incl %ebx
	jo L_140391
L_140442:
	jmp loop_1507
.p2align 0x4
L_432150:
L_140383:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432154:
L_140375:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_432155:
L_140451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_140452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_140452
.p2align 0x4
.long 0x65B
L_140452:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_140374
