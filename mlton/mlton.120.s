/* MLton g9a43e11 (built Sun Apr  5 22:29:53 NZST 2015 on xeon) */
/*   created this file on Sun Apr 05 23:19:50 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl predict_1
.hidden predict_1
predict_1:
L_369553:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_369554
L_370084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_370085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370085
.p2align 0x4
.long 0x45C
L_370085:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_369554:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369785
L_369555:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_369556:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	jne L_529507
L_369557:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529498
	cmpq $0x2,%r14
	je L_529496
L_369558:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529491
	cmpq $0x2209,%r15
	je L_529482
	cmpq $0x220A,%r15
	je L_529480
L_369559:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369782
L_369560:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369561:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529388
L_369789:
	cmpq $0x1,%r13
	je L_529386
L_369790:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369561
.p2align 0x4
L_529386:
L_369782:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_529387
L_369783:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369556
.p2align 0x4
L_529387:
L_369785:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_369786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp track_0
.p2align 0x4
L_529388:
L_369562:
	cmpl %r11d,%r10d
	jl L_369782
L_369564:
	cmpb $0x1,%dl
	je L_369581
	cmpb $0x3,%dl
	je sawCommit_5
sawRemove_1:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369566:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_369567:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	je L_529396
L_369642:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	jne L_529395
L_369655:
	cmpb $0x1,%r13b
	je L_369579
	cmpb $0x2,%r13b
	je L_369579
	cmpb $0x4,%r13b
	je L_529391
	cmpb $0x5,%r13b
	je L_369579
	cmpb $0x6,%r13b
	je L_529389
L_369581:
	movb $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529389:
L_369579:
	movb $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529391:
L_369660:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369661:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369567
.p2align 0x4
L_529395:
L_369643:
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_369644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529396:
L_369568:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529424
	cmpq $0x2,%r14
	je L_529422
L_369569:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529417
	cmpq $0x2209,%r15
	je L_529408
	cmpq $0x220A,%r15
	je L_529406
L_369570:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369585
L_369571:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369572:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529399
L_369588:
	cmpq $0x1,%r13
	je L_529397
L_369589:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369572
.p2align 0x4
L_529397:
L_369585:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369586:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369567
.p2align 0x4
L_529399:
L_369573:
	cmpl %r11d,%r10d
	jl L_369585
L_369575:
	cmpb $0x1,%dl
	je L_369581
	cmpb $0x2,%dl
	je L_369579
	cmpb $0x3,%dl
	je L_369579
L_369576:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369577:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369567
.p2align 0x4
L_529406:
L_369619:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	jne L_369585
	jmp L_369575
.p2align 0x4
L_529408:
L_369602:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x28(%r13),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369585
L_369603:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369611
	cmpb $0x3,%r15b
	je L_369611
	cmpb $0x4,%r15b
	je L_529413
	cmpb $0x5,%r15b
	je L_369615
	cmpb $0x6,%r15b
	je L_369615
	cmpb $0x7,%r15b
	je L_529410
L_369605:
	xorb %cl,%cl
L_369606:
	cmpb $0x2,%cl
	je L_369585
	jmp L_369575
.p2align 0x4
L_529410:
L_369615:
	movb $0x2,%cl
	jmp L_369606
.p2align 0x4
L_529413:
L_369611:
	movb $0x1,%cl
	jmp L_369606
.p2align 0x4
L_529417:
L_369592:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369585
L_369593:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369594:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529419
L_369598:
	cmpq $0x1,%r13
	je L_369585
L_369599:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369594
.p2align 0x4
L_529419:
L_369595:
	cmpl %r11d,%r10d
	jl L_369585
	jmp L_369575
.p2align 0x4
L_529422:
L_369639:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369640:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369567
.p2align 0x4
L_529424:
L_369622:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369632
	cmpb $0x3,%r15b
	je L_369632
	cmpb $0x4,%r15b
	je L_529430
	cmpb $0x5,%r15b
	je L_369636
	cmpb $0x6,%r15b
	je L_369636
	cmpb $0x7,%r15b
	je L_529427
L_369624:
	xorb %cl,%cl
L_369625:
	cmpb $0x2,%cl
	jne L_369575
L_369627:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369628:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369567
.p2align 0x4
L_529427:
L_369636:
	movb $0x2,%cl
	jmp L_369625
.p2align 0x4
L_529430:
L_369632:
	movb $0x1,%cl
	jmp L_369625
.p2align 0x4
sawCommit_5:
sawCommit_1:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369669:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_369670:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	je L_529441
L_369743:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	jne L_529440
L_369758:
	cmpb $0x1,%r13b
	je L_369761
	cmpb $0x2,%r13b
	je L_369761
	cmpb $0x5,%r13b
	je L_529436
	cmpb $0x6,%r13b
	je L_529434
	jmp L_369579
.p2align 0x4
L_529434:
L_369761:
	movb $0x2,0x18(%rbp)
L_369762:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_529435
L_369763:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_369764:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_369765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp predict_1
.p2align 0x4
L_529435:
L_369769:
	movb 0x18(%rbp),%r15b
	movb %r15b,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529436:
L_369776:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369777:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369670
.p2align 0x4
L_529440:
L_369744:
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_369745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529441:
L_369671:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529467
	cmpq $0x2,%r14
	je L_529465
L_369672:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529460
	cmpq $0x2209,%r15
	je L_529451
	cmpq $0x220A,%r15
	je L_529449
L_369673:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369686
L_369674:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369675:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529444
L_369689:
	cmpq $0x1,%r13
	je L_529442
L_369690:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369675
.p2align 0x4
L_529442:
L_369686:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369687:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369670
.p2align 0x4
L_529444:
L_369676:
	cmpl %r11d,%r10d
	jl L_369686
L_369678:
	cmpb $0x3,%dl
	jne L_369579
L_369682:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369683:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369670
.p2align 0x4
L_529449:
L_369720:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	jne L_369686
	jmp L_369678
.p2align 0x4
L_529451:
L_369703:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r15
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369686
L_369704:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369712
	cmpb $0x3,%r15b
	je L_369712
	cmpb $0x4,%r15b
	je L_529456
	cmpb $0x5,%r15b
	je L_369716
	cmpb $0x6,%r15b
	je L_369716
	cmpb $0x7,%r15b
	je L_529453
L_369706:
	xorb %cl,%cl
L_369707:
	cmpb $0x2,%cl
	je L_369686
	jmp L_369678
.p2align 0x4
L_529453:
L_369716:
	movb $0x2,%cl
	jmp L_369707
.p2align 0x4
L_529456:
L_369712:
	movb $0x1,%cl
	jmp L_369707
.p2align 0x4
L_529460:
L_369693:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369686
L_369694:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369695:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529462
L_369699:
	cmpq $0x1,%r13
	je L_369686
L_369700:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369695
.p2align 0x4
L_529462:
L_369696:
	cmpl %r11d,%r10d
	jl L_369686
	jmp L_369678
.p2align 0x4
L_529465:
L_369740:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369741:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369670
.p2align 0x4
L_529467:
L_369723:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369733
	cmpb $0x3,%r15b
	je L_369733
	cmpb $0x4,%r15b
	je L_529473
	cmpb $0x5,%r15b
	je L_369737
	cmpb $0x6,%r15b
	je L_369737
	cmpb $0x7,%r15b
	je L_529470
L_369725:
	xorb %cl,%cl
L_369726:
	cmpb $0x2,%cl
	jne L_369678
L_369728:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369729:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369670
.p2align 0x4
L_529470:
L_369737:
	movb $0x2,%cl
	jmp L_369726
.p2align 0x4
L_529473:
L_369733:
	movb $0x1,%cl
	jmp L_369726
.p2align 0x4
L_529480:
L_369820:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	je L_369564
	jmp L_369782
.p2align 0x4
L_529482:
L_369803:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r15
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369782
L_369804:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369812
	cmpb $0x3,%r15b
	je L_369812
	cmpb $0x4,%r15b
	je L_529487
	cmpb $0x5,%r15b
	je L_369816
	cmpb $0x6,%r15b
	je L_369816
	cmpb $0x7,%r15b
	je L_529484
L_369806:
	xorb %cl,%cl
L_369807:
	cmpb $0x2,%cl
	jne L_369564
	jmp L_369782
.p2align 0x4
L_529484:
L_369816:
	movb $0x2,%cl
	jmp L_369807
.p2align 0x4
L_529487:
L_369812:
	movb $0x1,%cl
	jmp L_369807
.p2align 0x4
L_529491:
L_369793:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369782
L_369794:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369795:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529493
L_369799:
	cmpq $0x1,%r13
	je L_369782
L_369800:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369795
.p2align 0x4
L_529493:
L_369796:
	cmpl %r11d,%r10d
	jnl L_369564
	jmp L_369782
.p2align 0x4
L_529496:
L_369840:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369785
L_369841:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369556
.p2align 0x4
L_529498:
L_369823:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369833
	cmpb $0x3,%r15b
	je L_369833
	cmpb $0x4,%r15b
	je L_529504
	cmpb $0x5,%r15b
	je L_369837
	cmpb $0x6,%r15b
	je L_369837
	cmpb $0x7,%r15b
	je L_529501
L_369825:
	xorb %cl,%cl
L_369826:
	cmpb $0x2,%cl
	jne L_369564
L_369828:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369785
L_369829:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369556
.p2align 0x4
L_529501:
L_369837:
	movb $0x2,%cl
	jmp L_369826
.p2align 0x4
L_529504:
L_369833:
	movb $0x1,%cl
	jmp L_369826
.p2align 0x4
L_529507:
L_369843:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	cmpq %r11,0x10(%r14)
	je L_529511
L_369844:
	cmpb $0x1,%r13b
	je L_369860
L_369845:
	testb %r13b,%r13b
	jz L_529508
L_369847:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_369848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529508:
L_369860:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_369847
L_369861:
	movq 0x8(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_369862:
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_369863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529511:
L_369870:
	cmpb $0x1,%r13b
	je L_369873
	cmpb $0x2,%r13b
	je L_529513
	cmpb $0x4,%r13b
	je sawRemove_1
	cmpb $0x5,%r13b
	je sawCommit_1
	cmpb $0x6,%r13b
	je L_529512
	jmp L_369581
.p2align 0x4
L_529512:
L_369873:
	movb $0x3,0x18(%rbp)
	jmp L_369762
.p2align 0x4
L_529513:
L_369874:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369997
L_369875:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_369876:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	je L_529559
L_370055:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x30(%rbp)
	movq 0x10(%r14),%r15
	cmpq %r15,0x40(%rbp)
	jne L_529558
L_370068:
	cmpb $0x2,%r13b
	je L_529556
	cmpb $0x5,%r13b
	je sawUseCommit_5
	jmp L_369873
.p2align 0x4
sawUseCommit_5:
sawUseCommit_1:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369905
L_369889:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_369890:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	je L_529520
L_369967:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x30(%rbp)
	movq 0x10(%r14),%r15
	cmpq %r15,0x40(%rbp)
	jne L_529519
L_369982:
	cmpb $0x1,%r13b
	je L_369761
	cmpb $0x2,%r13b
	je L_369761
	cmpb $0x5,%r13b
	je L_529515
	cmpb $0x6,%r13b
	je L_369761
	jmp L_369873
.p2align 0x4
L_529515:
L_369988:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_529516
L_369989:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369890
.p2align 0x4
L_529516:
L_369905:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_369906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp track_0
.p2align 0x4
L_529519:
L_369968:
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_369969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529520:
L_369891:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529546
	cmpq $0x2,%r14
	je L_529544
L_369892:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529539
	cmpq $0x2209,%r15
	je L_529530
	cmpq $0x220A,%r15
	je L_529528
L_369893:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369910
L_369894:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369895:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529523
L_369913:
	cmpq $0x1,%r13
	je L_529521
L_369914:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369895
.p2align 0x4
L_529521:
L_369910:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369905
L_369911:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369890
.p2align 0x4
L_529523:
L_369896:
	cmpl %r11d,%r10d
	jl L_369910
L_369898:
	cmpb $0x3,%dl
	jne L_369873
L_369902:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369905
L_369903:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369890
.p2align 0x4
L_529528:
L_369944:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	jne L_369910
	jmp L_369898
.p2align 0x4
L_529530:
L_369927:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r15
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369910
L_369928:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369936
	cmpb $0x3,%r15b
	je L_369936
	cmpb $0x4,%r15b
	je L_529535
	cmpb $0x5,%r15b
	je L_369940
	cmpb $0x6,%r15b
	je L_369940
	cmpb $0x7,%r15b
	je L_529532
L_369930:
	xorb %cl,%cl
L_369931:
	cmpb $0x2,%cl
	je L_369910
	jmp L_369898
.p2align 0x4
L_529532:
L_369940:
	movb $0x2,%cl
	jmp L_369931
.p2align 0x4
L_529535:
L_369936:
	movb $0x1,%cl
	jmp L_369931
.p2align 0x4
L_529539:
L_369917:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369910
L_369918:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369919:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529541
L_369923:
	cmpq $0x1,%r13
	je L_369910
L_369924:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369919
.p2align 0x4
L_529541:
L_369920:
	cmpl %r11d,%r10d
	jl L_369910
	jmp L_369898
.p2align 0x4
L_529544:
L_369964:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369905
L_369965:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369890
.p2align 0x4
L_529546:
L_369947:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369957
	cmpb $0x3,%r15b
	je L_369957
	cmpb $0x4,%r15b
	je L_529552
	cmpb $0x5,%r15b
	je L_369961
	cmpb $0x6,%r15b
	je L_369961
	cmpb $0x7,%r15b
	je L_529549
L_369949:
	xorb %cl,%cl
L_369950:
	cmpb $0x2,%cl
	jne L_369898
L_369952:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369905
L_369953:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369890
.p2align 0x4
L_529549:
L_369961:
	movb $0x2,%cl
	jmp L_369950
.p2align 0x4
L_529552:
L_369957:
	movb $0x1,%cl
	jmp L_369950
.p2align 0x4
L_529556:
L_370071:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_529557
L_370072:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369876
.p2align 0x4
L_529557:
L_369997:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_369998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp track_0
.p2align 0x4
L_529558:
L_370056:
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_370057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529559:
L_369877:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529583
	cmpq $0x2,%r14
	je L_529581
L_369878:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529576
	cmpq $0x2209,%r15
	je L_529567
	cmpq $0x220A,%r15
	je L_529565
L_369879:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369994
L_369880:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369881:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529562
L_370001:
	cmpq $0x1,%r13
	je L_529560
L_370002:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369881
.p2align 0x4
L_529560:
L_369994:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369997
L_369995:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369876
.p2align 0x4
L_529562:
L_369882:
	cmpl %r11d,%r10d
	jl L_369994
L_369884:
	cmpb $0x3,%dl
	je sawUseCommit_1
	jmp L_369873
.p2align 0x4
L_529565:
L_370032:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	je L_369884
	jmp L_369994
.p2align 0x4
L_529567:
L_370015:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r15
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369994
L_370016:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_370024
	cmpb $0x3,%r15b
	je L_370024
	cmpb $0x4,%r15b
	je L_529572
	cmpb $0x5,%r15b
	je L_370028
	cmpb $0x6,%r15b
	je L_370028
	cmpb $0x7,%r15b
	je L_529569
L_370018:
	xorb %cl,%cl
L_370019:
	cmpb $0x2,%cl
	jne L_369884
	jmp L_369994
.p2align 0x4
L_529569:
L_370028:
	movb $0x2,%cl
	jmp L_370019
.p2align 0x4
L_529572:
L_370024:
	movb $0x1,%cl
	jmp L_370019
.p2align 0x4
L_529576:
L_370005:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369994
L_370006:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_370007:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529578
L_370011:
	cmpq $0x1,%r13
	je L_369994
L_370012:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_370007
.p2align 0x4
L_529578:
L_370008:
	cmpl %r11d,%r10d
	jnl L_369884
	jmp L_369994
.p2align 0x4
L_529581:
L_370052:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369997
L_370053:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369876
.p2align 0x4
L_529583:
L_370035:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_370045
	cmpb $0x3,%r15b
	je L_370045
	cmpb $0x4,%r15b
	je L_529589
	cmpb $0x5,%r15b
	je L_370049
	cmpb $0x6,%r15b
	je L_370049
	cmpb $0x7,%r15b
	je L_529586
L_370037:
	xorb %cl,%cl
L_370038:
	cmpb $0x2,%cl
	jne L_369884
L_370040:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369997
L_370041:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369876
.p2align 0x4
L_529586:
L_370049:
	movb $0x2,%cl
	jmp L_370038
.p2align 0x4
L_529589:
L_370045:
	movb $0x1,%cl
	jmp L_370038
.p2align 0x4
.long 0x1
L_369786:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	testl %r15d,%r15d
	jnz L_369581
	jmp L_369579
.p2align 0x4
.long 0x457
L_369644:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x14(%rbp)
	testl %r14d,%r14d
	jnz L_529598
L_369645:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369646:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369567
.p2align 0x4
L_529598:
L_369648:
	movb 0x10(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369579
	cmpb $0x1,%r14b
	je L_369579
	cmpb $0x2,%r14b
	je L_369579
L_369649:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369650:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369567
.p2align 0x4
.long 0x518
L_369765:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movb 0x30(%rbp),%r14b
	movb %r14b,0x19(%rbp)
	cmpb $0x0,%r14b
	je L_369579
	cmpb $0x1,%r14b
	je L_369579
L_369766:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_369769
L_369767:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_369764
.p2align 0x4
.long 0xE7A
L_369745:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r14d
	movl %r14d,0x2C(%rbp)
	testl %r14d,%r14d
	jnz L_529607
L_369746:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369747:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369670
.p2align 0x4
L_529607:
L_369749:
	movb 0x28(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369579
	cmpb $0x1,%r14b
	je L_369579
	cmpb $0x2,%r14b
	je L_529609
L_369750:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369751:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369670
.p2align 0x4
L_529609:
L_369755:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369579
L_369756:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369670
.p2align 0x4
.long 0x124F
L_369848:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r14d
	movl %r14d,0x30(%rbp)
	testl %r14d,%r14d
	jnz L_529614
L_369849:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369785
L_369850:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369556
.p2align 0x4
L_529614:
L_369852:
	movb 0x38(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369579
	cmpb $0x1,%r14b
	je L_369579
	cmpb $0x2,%r14b
	je sawCommit_1
L_369853:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369785
L_369854:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369556
.p2align 0x4
.long 0x1F75
L_369863:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x3C(%rbp)
	testl %r14d,%r14d
	jnz L_369579
L_369864:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_369847
L_369865:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_369862
.p2align 0x4
.long 0x51F
L_369906:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jnz L_369873
	jmp L_369761
.p2align 0x4
.long 0x96C
L_369969:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x34(%rbp)
	testl %r14d,%r14d
	jnz L_529622
L_369970:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369905
L_369971:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369890
.p2align 0x4
L_529622:
L_369973:
	movb 0x30(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369873
	cmpb $0x1,%r14b
	je L_369873
	cmpb $0x2,%r14b
	je L_529624
L_369974:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369905
L_369975:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369890
.p2align 0x4
L_529624:
L_369979:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369905
L_369980:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369890
.p2align 0x4
.long 0x51F
L_369998:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jnz L_369873
	jmp L_369761
.p2align 0x4
.long 0x96C
L_370057:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x34(%rbp)
	testl %r14d,%r14d
	jnz L_529630
L_370058:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369997
L_370059:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369876
.p2align 0x4
L_529630:
L_370061:
	movb 0x30(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369873
	cmpb $0x1,%r14b
	je L_369873
	cmpb $0x2,%r14b
	je sawUseCommit_1
L_370062:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369997
L_370063:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369876
.text
.p2align 0x4
.globl layout_59
.hidden layout_59
layout_59:
L_370086:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_370087
L_370403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_370404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370404
.p2align 0x4
.long 0x460
L_370404:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_370087:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112B,%r14
	je L_529645
	cmpq $0x112C,%r14
	je L_529636
	cmpq $0x112D,%r14
	je L_529635
	cmpq $0x112E,%r14
	je L_529634
L_370088:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xED78)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_370089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529634:
L_370387:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xFC98)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_370388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529635:
L_370371:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0x114E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_370372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529636:
L_370126:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_529644
	cmpq $0x2,%r14
	je L_529643
	cmpq $0x3,%r14
	je L_529642
	cmpq $0x5,%r14
	je L_529641
L_370127:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1125,%r15
	je L_529640
	cmpq $0x1126,%r15
	je L_529639
	cmpq $0x1127,%r15
	je L_529638
	cmpq $0x1128,%r15
	je L_529637
L_370128:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x116B0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_370129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529637:
L_370298:
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x114C0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529638:
L_370254:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x114B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529639:
L_370233:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x114A8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_370234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529640:
L_370160:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x11498)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_370161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529641:
L_370370:
	movq (globalObjptr+0x114D8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529642:
L_370369:
	movq (globalObjptr+0x114D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529643:
L_370368:
	movq (globalObjptr+0x116C0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529644:
L_370363:
	movq (globalObjptr+0x116B8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529645:
L_370104:
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_529646
L_370105:
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_370106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529646:
L_370121:
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_370122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4E1
L_370089:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_370090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_60
.p2align 0x4
.long 0x522
L_370388:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_370389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E6
L_370372:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_370373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_549
.p2align 0x4
.long 0x5F2
L_370129:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_529648
L_370130:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529648:
L_370155:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x146A
L_370299:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x7C0
L_370255:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370256
L_370296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370297
.p2align 0x4
.long 0x86B
L_370297:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370256:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_529649
L_370257:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x48(%rbp)
L_370258:
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
L_529649:
L_370295:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_370275:
	testl %ecx,%ecx
	jz L_529658
L_370276:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_370277:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370278:
	addl 0x0(%r14),%ecx
	movl %ecx,0x50(%rbp)
	jo L_370093
L_370279:
	cmpq $0x1,%r15
	je L_529650
L_370280:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_370278
.p2align 0x4
L_529650:
L_370281:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370282
L_370284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370285
.p2align 0x4
.long 0xA29
L_370285:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370282:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529655
L_370283:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
L_370140:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
.p2align 0x4,,0x7
L_370141:
	addl 0x0(%r14),%ecx
	movl %ecx,0x8(%rbp)
	jo L_529654
L_370142:
	cmpq $0x1,%r15
	je L_529651
L_370143:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_370141
.p2align 0x4
L_529651:
L_370144:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370145
L_370148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_370149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370149
.p2align 0x4
.long 0x458
L_370149:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_370145:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529652
L_370146:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529652:
L_370147:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529654:
L_370093:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529655:
L_370150:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_370140
.p2align 0x4
L_529658:
L_370286:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_370277
.p2align 0x4
.long 0x5F2
L_370234:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_529660
L_370235:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529660:
L_370249:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x700
L_370161:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_529661
L_370162:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529661:
L_370228:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_370364:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370365
L_370366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370367
.p2align 0x4
.long 0x452
L_370367:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370365:
	movq 0x0(%rbp),%r15
	jmp L_370140
.p2align 0x4
.long 0x1
L_370106:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_370122:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370123
L_370124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370125
.p2align 0x4
.long 0x452
L_370125:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370123:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_370090:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370091
L_370102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_370103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370103
.p2align 0x4
.long 0x2C
L_370103:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_370091:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370092:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_370093
L_370094:
	cmpq $0x1,%r14
	je L_529664
L_370095:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370092
.p2align 0x4
L_529664:
L_370096:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370097
L_370100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_370101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370101
.p2align 0x4
.long 0x4E7
L_370101:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_370097:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529665
L_370098:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529665:
L_370099:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_370389:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xAEC0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_370390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_370373:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_370374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78C
L_370131:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78C
L_370156:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370157
L_370158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370159
.p2align 0x4
.long 0x78D
L_370159:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370157:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x44B9
L_370300:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370301
L_370361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370362
.p2align 0x4
.long 0x14DD
L_370362:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370301:
	cmpq $0x1,0x40(%rbp)
	je L_529671
L_370302:
	cmpq $0x1,0x38(%rbp)
	je L_529670
L_370303:
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_370304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529670:
L_370329:
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_370330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529671:
L_370344:
	cmpq $0x1,0x38(%rbp)
	je L_529672
L_370345:
	movq (globalObjptr+0x114C8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_370346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529672:
L_370360:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_370315:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_370316:
	addl 0x0(%r14),%ecx
	movl %ecx,0x60(%rbp)
	jo L_370093
L_370317:
	cmpq $0x1,%r15
	je L_529673
L_370318:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_370316
.p2align 0x4
L_529673:
L_370319:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370320
L_370322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_370323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370323
.p2align 0x4
.long 0x771
L_370323:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_370320:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_370150
L_370321:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_370140
.p2align 0x4
.long 0x146A
L_370259:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370260
L_370293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370294
.p2align 0x4
.long 0x14DD
L_370294:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370260:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_529678
L_370261:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_370258
.p2align 0x4
L_529678:
L_370262:
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_370263:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529680
.p2align 0x4,,0x7
L_370264:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529679
L_370265:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_370263
.p2align 0x4
L_529679:
L_370266:
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529680:
L_370291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370292
.p2align 0x4
.long 0x83A
L_370292:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_370264
.p2align 0x4
.long 0x78C
L_370236:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78C
L_370250:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370251
L_370252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370253
.p2align 0x4
.long 0x78D
L_370253:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370251:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x853
L_370163:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x853
L_370229:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370230
L_370231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370232
.p2align 0x4
.long 0x4B6
L_370232:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370230:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_370107:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDEC0)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_370108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x491
L_370390:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370391
L_370401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_370402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370402
.p2align 0x4
.long 0x4B2
L_370402:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_370391:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370392:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_370093
L_370393:
	cmpq $0x1,%r14
	je L_529684
L_370394:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370392
.p2align 0x4
L_529684:
L_370395:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370396
L_370399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370400
.p2align 0x4
.long 0x5E5
L_370400:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370396:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529685
L_370397:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529685:
L_370398:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_370374:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370375
L_370385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_370386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370386
.p2align 0x4
.long 0x5E6
L_370386:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_370375:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370376:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_370093
L_370377:
	cmpq $0x1,%r14
	je L_529689
L_370378:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370376
.p2align 0x4
L_529689:
L_370379:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370380
L_370383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370384
.p2align 0x4
.long 0x5E5
L_370384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370380:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529690
L_370381:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529690:
L_370382:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78C
L_370132:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370133
L_370153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370154
.p2align 0x4
.long 0x78D
L_370154:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370133:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370134:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_370093
L_370135:
	cmpq $0x1,%r14
	je L_529694
L_370136:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370134
.p2align 0x4
L_529694:
L_370137:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370138
L_370151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370152
.p2align 0x4
.long 0xA29
L_370152:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370138:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_370150
L_370139:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_370140
.p2align 0x4
.long 0x4FA0
L_370304:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_370305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x76F
L_370330:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x2811
L_370346:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x4D74
L_370267:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x78C
L_370237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370238
L_370247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370248
.p2align 0x4
.long 0x78D
L_370248:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370238:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370239:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_370093
L_370240:
	cmpq $0x1,%r14
	je L_529699
L_370241:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370239
.p2align 0x4
L_529699:
L_370242:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370243
L_370245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370246
.p2align 0x4
.long 0xA29
L_370246:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370243:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_370150
L_370244:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_370140
.p2align 0x4
.long 0x853
L_370164:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370165
L_370226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370227
.p2align 0x4
.long 0x4B6
L_370227:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370165:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370166:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_370093
L_370167:
	cmpq $0x1,%r14
	je L_529704
L_370168:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370166
.p2align 0x4
L_529704:
L_370169:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370170
L_370224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370225
.p2align 0x4
.long 0x4F9F
L_370225:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370170:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529705
L_370171:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_370172:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x114A0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529705:
L_370223:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370172
.p2align 0x4
.long 0x4B0
L_370108:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370109
L_370119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_370120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370120
.p2align 0x4
.long 0x460
L_370120:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_370109:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370110:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_370093
L_370111:
	cmpq $0x1,%r14
	je L_529709
L_370112:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370110
.p2align 0x4
L_529709:
L_370113:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370114
L_370117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_370118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370118
.p2align 0x4
.long 0x4A5
L_370118:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_370114:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529710
L_370115:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529710:
L_370116:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4FA1
L_370305:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2141
L_370331:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370332
L_370342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370343
.p2align 0x4
.long 0x9B5
L_370343:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370332:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370333:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_370093
L_370334:
	cmpq $0x1,%r14
	je L_529714
L_370335:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370333
.p2align 0x4
L_529714:
L_370336:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370337
L_370340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_370341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370341
.p2align 0x4
.long 0x4FA3
L_370341:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_370337:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529715
L_370338:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_370315
.p2align 0x4
L_529715:
L_370339:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370315
.p2align 0x4
.long 0x770
L_370347:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370348
L_370358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370359
.p2align 0x4
.long 0x83A
L_370359:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370348:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370349:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_370093
L_370350:
	cmpq $0x1,%r14
	je L_529719
L_370351:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370349
.p2align 0x4
L_529719:
L_370352:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370353
L_370356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_370357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370357
.p2align 0x4
.long 0x4ED2
L_370357:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_370353:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529720
L_370354:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_370315
.p2align 0x4
L_529720:
L_370355:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370315
.p2align 0x4
.long 0x838
L_370268:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370269
L_370289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370290
.p2align 0x4
.long 0x781
L_370290:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370269:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370270:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_370093
L_370271:
	cmpq $0x1,%r14
	je L_529724
L_370272:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370270
.p2align 0x4
L_529724:
L_370273:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370274
L_370287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370288
.p2align 0x4
.long 0x782
L_370288:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370274:
	movq 0x58(%rbp),%r15
	movl 0x48(%rbp),%ecx
	jmp L_370275
.p2align 0x4
.long 0x9B2
L_370173:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_529728
L_370174:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529728:
L_370218:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x76C
L_370306:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_370307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x768
L_370175:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x768
L_370219:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370220
L_370221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370222
.p2align 0x4
.long 0x7AD
L_370222:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370220:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xB79
L_370307:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370308
L_370327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_370328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370328
.p2align 0x4
.long 0xB77
L_370328:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_370308:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_370309:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_370093
L_370310:
	cmpq $0x1,%r14
	je L_529730
L_370311:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370309
.p2align 0x4
L_529730:
L_370312:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370313
L_370325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_370326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370326
.p2align 0x4
.long 0x4FA2
L_370326:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_370313:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529731
L_370314:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_370315
.p2align 0x4
L_529731:
L_370324:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370315
.p2align 0x4
.long 0x768
L_370176:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370177
L_370216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370217
.p2align 0x4
.long 0x7AD
L_370217:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370177:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370178:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_370093
L_370179:
	cmpq $0x1,%r14
	je L_529735
L_370180:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370178
.p2align 0x4
L_529735:
L_370181:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370182
L_370214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370215
.p2align 0x4
.long 0x4F9E
L_370215:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370182:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529736
L_370183:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_370184:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xFC98)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529736:
L_370213:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370184
.p2align 0x4
.long 0x768
L_370185:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x11498)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_370186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B4
L_370186:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_529740
L_370187:
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_370188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529740:
L_370208:
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_370209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4F9B
L_370188:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F9B
L_370209:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370210
L_370211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370212
.p2align 0x4
.long 0x4F9D
L_370212:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370210:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4F9B
L_370189:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xAEC0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F9C
L_370190:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370191
L_370206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370207
.p2align 0x4
.long 0x1CCB
L_370207:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370191:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_370192:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_370093
L_370193:
	cmpq $0x1,%r14
	je L_529742
L_370194:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370192
.p2align 0x4
L_529742:
L_370195:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370196
L_370204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370205
.p2align 0x4
.long 0xF1B
L_370205:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370196:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529746
L_370197:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_370198:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x20(%rbp),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x3,%r13b
	je L_529745
	cmpb $0x8,%r13b
	je L_529744
	cmpb $0x9,%r13b
	je L_529743
L_370199:
	movq 0x28(%rbp),%r15
	jmp L_370140
.p2align 0x4
L_529743:
L_370202:
	movq %r14,%r15
	jmp L_370140
.p2align 0x4
L_529744:
L_370201:
	movq 0x38(%rbp),%r15
	jmp L_370140
.p2align 0x4
L_529745:
L_370200:
	movq %r14,%r15
	jmp L_370140
.p2align 0x4
L_529746:
L_370203:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370198
.text
.p2align 0x4
.globl getProfileInfo_0
.hidden getProfileInfo_0
getProfileInfo_0:
L_370405:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_370406
L_370611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370612
.p2align 0x4
.long 0x452
L_370612:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370406:
	movq 0x0(%rbp),%r14
	movq 0x38(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x10(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_529817
L_370407:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370408:
	incl %ecx
	jo L_370409
L_370410:
	cmpq $0x1,%r15
	je L_529750
L_370411:
	movq 0x8(%r15),%r15
	jmp L_370408
.p2align 0x4
L_529750:
L_370412:
L_370413:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_529815
L_370414:
	cmpq $0x7FFFFFFF,%rdx
	ja L_370486
L_370415:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370416
.p2align 0x4
.long 0xAA0
L_370416:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_370417:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3663:
	cmpq 0x48(%rbp),%r15
	jnl L_529752
L_370605:
	cmpq $0x1,%r14
	je L_529751
L_370606:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3663
.p2align 0x4
L_529751:
L_370508:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529752:
L_370418:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370419
L_370603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370604
.p2align 0x4
.long 0x2362
L_370604:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370419:
	movq 0x50(%rbp),%r15
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2715,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x10(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_370420:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529812
.p2align 0x4,,0x7
L_370421:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2993,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_529753
L_370422:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_370420
.p2align 0x4
L_529753:
L_370423:
	movq %r13,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_370424:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529811
.p2align 0x4,,0x7
L_370425:
	movq $0x2993,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_529754
L_370426:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_370424
.p2align 0x4
L_529754:
L_370427:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_529806
L_370428:
	movq 0x40(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_370429:
	addq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r13
	je L_529755
L_370430:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_370429
.p2align 0x4
L_529755:
L_370431:
	testq %r15,%r15
	jz L_529805
L_370432:
	cmpq $0x7FFFFFFF,%r15
	ja L_370486
L_370433:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370434
.p2align 0x4
.long 0x247F
L_370434:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,%r15
L_370435:
	movq 0x48(%rbp),%r10
	movq 0x40(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3664:
	cmpq 0x10(%rbp),%r14
	jnl L_529758
.p2align 0x4,,0x7
loop_3672:
	cmpq 0x0(%r11),%r13
	jl L_529757
L_370582:
	cmpq $0x1,%r10
	je L_529756
L_370583:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3672
.p2align 0x4
L_529756:
L_370483:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529757:
L_370585:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3664
.p2align 0x4
L_529758:
L_370436:
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_370437:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r11,%r14
	je L_529759
L_370438:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529759:
L_370439:
	movq 0x40(%rbp),%rdx
	testq %rdx,%rdx
	jz L_529803
L_370440:
	cmpq $0x7FFFFFFF,%rdx
	ja L_370486
L_370441:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1575,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370442
.p2align 0x4
.long 0x67E
L_370442:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_370443:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3665:
	cmpq 0x40(%rbp),%r15
	jnl L_529772
L_370519:
	movl %r15d,%esp
	movslq %esp,%r14
	movq 0x10(%rbp),%rsp
	movq 0x0(%rsp,%r14,8),%r11
	movq 0x8(%r11),%r9
	movq 0x18(%rbp),%rsp
	movq 0x8(%rsp),%r10
	movq 0x0(%rsp),%r8
	movq 0x8(%r9),%r14
	movq (globalObjptr+0x1068)(%rip),%rsp
	movq 0x0(%rsp),%r13
	incq %r13
	jo L_529771
L_370521:
	movq %r13,0x0(%rsp)
	movq 0x0(%r14),%rsp
	cmpq $0x1,%rsp
	je L_529770
L_370522:
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%rsp
	xorl %esi,%esi
	movq %rsp,%r14
	xchgl %esi,%ecx
	movl %esi,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_370524:
	movq %r14,%rsp
	andq $0x3,%rsp
	jnz L_529769
L_370567:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rsp
	shrq $0x1,%rsp
	cmpq $0xCB1,%rsp
	jne L_529768
L_370568:
	movq 0x8(%r14),%rsp
	cmpq 0x0(%r14),%r8
	movq %r8,(localObjptr+0x18)(%rip)
	je L_529763
	movq %r15,(localWord64+0x0)(%rip)
	movq %r11,(localObjptr+0x0)(%rip)
L_370525:
	incl %ecx
	jo L_529762
L_370526:
	cmpq $0x1,%r13
	je L_529760
L_370527:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq (localWord64+0x0)(%rip),%r15
	movq (localObjptr+0x0)(%rip),%r11
	movq (localObjptr+0x18)(%rip),%r8
	jmp L_370524
.p2align 0x4
L_529760:
L_370528:
L_370529:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_529761
L_370531:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1144
L_370566:
	movl %ecx,0x0(%r15)
x_1144:
	movq %r10,0x10(%rbp)
	movl 0x0(%r9),%r15d
	movl %r15d,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529761:
L_370530:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529762:
L_370409:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529763:
L_370570:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_370530
L_370571:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_529766
L_370577:
	movl %ecx,0x0(%r14)
	xchgq %rsp,%r15
	movq %r11,(localObjptr+0x0)(%rip)
	movq %rsp,(localWord64+0x0)(%rip)
x_1145:
	cmpl $0xFFFFFFFF,0x0(%r15)
	je L_529765
L_370573:
	movl (localWord32+0x0)(%rip),%r14d
	incl %r14d
	jo L_370409
L_370574:
	movl %r14d,(localWord32+0x0)(%rip)
	movq (localObjptr+0x0)(%rip),%r15
L_370575:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq (localWord64+0x0)(%rip),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,%r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_3665
.p2align 0x4
L_529765:
L_370576:
	movq $0x1,%r15
	jmp L_370575
.p2align 0x4
L_529766:
L_370572:
	xchgq %rsp,%r15
	movq %r11,(localObjptr+0x0)(%rip)
	movq %rsp,(localWord64+0x0)(%rip)
	jmp x_1145
.p2align 0x4
L_529768:
	movq %r15,(localWord64+0x0)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_370525
.p2align 0x4
L_529769:
	movq %r15,(localWord64+0x0)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_370525
.p2align 0x4
L_529770:
L_370578:
	xorl %ecx,%ecx
	jmp L_370529
.p2align 0x4
L_529771:
L_370520:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529772:
L_370444:
	movq 0x48(%rbp),%r15
	movq $0x18E1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_529801
L_370445:
	cmpq $0x7FFFFFFF,%rdx
	ja L_370486
L_370446:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370447
.p2align 0x4
.long 0x44DF
L_370447:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
L_370448:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3666:
	cmpq 0x10(%rbp),%r15
	jnl L_529776
.p2align 0x4,,0x7
loop_3671:
	movslq %ecx,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_529774
L_370515:
	incl %ecx
	jo L_370409
L_370516:
	jmp loop_3671
.p2align 0x4
L_529774:
L_370513:
	incl %ecx
	jo L_370409
L_370514:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3666
.p2align 0x4
L_529776:
L_370449:
	movq 0x18(%rbp),%r14
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r13
	je L_529799
L_370450:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370451:
	incl %ecx
	jo L_370409
L_370452:
	cmpq $0x1,%r15
	je L_529777
L_370453:
	movq 0x8(%r15),%r15
	jmp L_370451
.p2align 0x4
L_529777:
L_370454:
L_370455:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_529797
L_370456:
	cmpq $0x7FFFFFFF,%rdx
	ja L_370486
L_370457:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370458
.p2align 0x4
.long 0x517
L_370458:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_370459:
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3667:
	cmpq 0x40(%rbp),%r15
	jnl L_529779
L_370505:
	cmpq $0x1,%r14
	je L_370508
L_370506:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3667
.p2align 0x4
L_529779:
L_370460:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370461
L_370503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370504
.p2align 0x4
.long 0xA84
L_370504:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370461:
	movq 0x48(%rbp),%r15
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2715,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_370462:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529794
.p2align 0x4,,0x7
L_370463:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2993,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_529780
L_370464:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_370462
.p2align 0x4
L_529780:
L_370465:
	movq %r13,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_370466:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529793
.p2align 0x4,,0x7
L_370467:
	movq $0x2993,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_529781
L_370468:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_370466
.p2align 0x4
L_529781:
L_370469:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_529788
L_370470:
	movq 0x48(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_370471:
	addq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r13
	je L_529782
L_370472:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_370471
.p2align 0x4
L_529782:
L_370473:
	testq %r15,%r15
	jz L_529787
L_370474:
	cmpq $0x7FFFFFFF,%r15
	ja L_529786
L_370475:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370476
.p2align 0x4
.long 0x829
L_370476:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_370477:
	movq 0x50(%rbp),%r10
	movq 0x48(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3668:
	cmpq 0x40(%rbp),%r14
	jnl L_529785
.p2align 0x4,,0x7
loop_3669:
	cmpq 0x0(%r11),%r13
	jl L_529784
L_370480:
	cmpq $0x1,%r10
	je L_370483
L_370481:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3669
.p2align 0x4
L_529784:
L_370484:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3668
.p2align 0x4
L_529785:
L_370478:
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529786:
L_370486:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529787:
L_370487:
	movq (globalObjptr+0x668)(%rip),%r14
	xchgq %r14,%r15
	jmp L_370477
.p2align 0x4
L_529788:
L_370488:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x40(%rbp)
	je L_529792
L_370489:
	testq %r13,%r13
	jz L_529791
L_370490:
	cmpq $0x7FFFFFFF,%r13
	ja L_370486
L_370491:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370492
.p2align 0x4
.long 0x7B3
L_370492:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_370493:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3670:
	cmpq 0x50(%rbp),%r14
	jnl L_529789
L_370495:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3670
.p2align 0x4
L_529789:
L_370494:
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529791:
L_370497:
	movq (globalObjptr+0x670)(%rip),%r15
	jmp L_370493
.p2align 0x4
L_529792:
L_370498:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529793:
L_370499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370500
.p2align 0x4
.long 0x7AD
L_370500:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_370467
.p2align 0x4
L_529794:
L_370501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370502
.p2align 0x4
.long 0x7AD
L_370502:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_370463
.p2align 0x4
L_529797:
L_370510:
	movq (globalObjptr+0xD60)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_370459
.p2align 0x4
L_529799:
L_370511:
	xorl %ecx,%ecx
	jmp L_370455
.p2align 0x4
L_529801:
L_370518:
	movq (globalObjptr+0x2570)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_370448
.p2align 0x4
L_529803:
L_370580:
	movq (globalObjptr+0x2568)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_370443
.p2align 0x4
L_529805:
L_370587:
	movq (globalObjptr+0x668)(%rip),%r14
	xchgq %r14,%r15
	jmp L_370435
.p2align 0x4
L_529806:
L_370588:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x10(%rbp)
	je L_370437
L_370589:
	testq %r13,%r13
	jz L_529809
L_370590:
	cmpq $0x7FFFFFFF,%r13
	ja L_370486
L_370591:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370592
.p2align 0x4
.long 0x1DE7
L_370592:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,%r15
L_370593:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3673:
	cmpq 0x48(%rbp),%r14
	jnl L_529807
L_370595:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3673
.p2align 0x4
L_529807:
L_370594:
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_370437
.p2align 0x4
L_529809:
L_370597:
	movq (globalObjptr+0x670)(%rip),%r15
	jmp L_370593
.p2align 0x4
L_529811:
L_370599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370600
.p2align 0x4
.long 0x8A8
L_370600:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_370425
.p2align 0x4
L_529812:
L_370601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370602
.p2align 0x4
.long 0x8A8
L_370602:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_370421
.p2align 0x4
L_529815:
L_370609:
	movq (globalObjptr+0xD60)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_370417
.p2align 0x4
L_529817:
L_370610:
	xorl %ecx,%ecx
	jmp L_370413
.p2align 0x4
.long 0x1
L_370533:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370534
L_370564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370565
.p2align 0x4
.long 0x452
L_370565:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370534:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_370535:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_370536:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_370537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_370537:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11178)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_370538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_370538:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_370539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_370539:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370540
L_370562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_370563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370563
.p2align 0x4
.long 0x4AF
L_370563:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_370540:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_370541:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_370409
L_370542:
	cmpq $0x1,%r14
	je L_529820
L_370543:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370541
.p2align 0x4
L_529820:
L_370544:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370545
L_370560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_370561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370561
.p2align 0x4
.long 0x4E7
L_370561:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_370545:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529821
L_370546:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_536:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_529821:
L_370559:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_536
.p2align 0x4
.long 0x1
rev_539:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_529827
L_370547:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_370548:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529826
.p2align 0x4,,0x7
L_370549:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_529825
L_370550:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_370548
.p2align 0x4
L_529825:
L_370552:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_529826:
L_370556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_370557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370557
.p2align 0x4
.long 0x45C
L_370557:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_370549
.p2align 0x4
L_529827:
L_370558:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_370552
.p2align 0x4
.long 0x1
bug_694:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370553
L_370554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370555
.p2align 0x4
.long 0x452
L_370555:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370553:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl ssa2PassesSet_0
.hidden ssa2PassesSet_0
ssa2PassesSet_0:
L_370613:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_370698
L_370614:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529837
L_370615:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq (globalObjptr+0x116C8)(%rip),%r14
	je L_370696
L_370616:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x7,%r13
	sete %al
	movzbl %al,%eax
	movl %eax,0x38(%rbp)
	jne vectorEqual_93
L_370688:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_254:
	cmpq %r15,0x8(%rbp)
	je L_529835
L_370689:
	movq (globalObjptr+0x116C8)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529829
L_370694:
	incq %r15
	jmp vectorEqualLoop_254
.p2align 0x4
L_529829:
L_370690:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_93
L_370692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370693
.p2align 0x4
.long 0x5516
L_370693:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
vectorEqual_93:
	movq (globalObjptr+0xCAD0)(%rip),%r14
	cmpq %r14,0x0(%rbp)
	je L_370686
L_370618:
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jz L_370620
L_370678:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_253:
	cmpq %r15,0x8(%rbp)
	je L_529832
L_370679:
	movq (globalObjptr+0xCAD0)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529830
L_370684:
	incq %r15
	jmp vectorEqualLoop_253
.p2align 0x4
L_529830:
L_370680:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370620
L_370682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370683
.p2align 0x4
.long 0x5515
L_370683:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370620:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_370666(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x3A,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_370621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_529832:
L_370686:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529835:
L_370696:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529837:
L_370698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370699
.p2align 0x4
.long 0x97E
L_370699:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_370615
.p2align 0x4
.long 0x5513
L_370621:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370622
L_370676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370677
.p2align 0x4
.long 0x5FE
L_370677:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370622:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_529850
L_370623:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_370624:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_370632
L_370625:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_370626:
	movq 0x18(%r15),%r9
	movq %r9,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq %r8,0x50(%rbp)
	movq 0x38(%rbp),%rsp
	cmpq %r8,%rsp
	je L_529848
L_370627:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r8)
	jne L_529845
L_370638:
	xorq %r10,%r10
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_252:
	cmpq %r11,%r10
	je L_529843
L_370639:
	movq 0x50(%rbp),%r9
	movq 0x38(%rbp),%rsp
	movb 0x0(%rsp,%r10,1),%r8b
	cmpb %r8b,0x0(%r9,%r10,1)
	jne L_529839
L_370646:
	incq %r10
	jmp vectorEqualLoop_252
.p2align 0x4
L_529839:
L_370640:
	cmpq $0x1,%r14
	je L_529840
L_370641:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370626
.p2align 0x4
L_529840:
L_370642:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370632
L_370644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370645
.p2align 0x4
.long 0x2574
L_370645:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_370632:
	movq $0x1AAB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
L_370633:
	cmpq %r14,0x8(%rbp)
	je L_529841
L_370634:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529841:
L_370635:
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529843:
	movq %r13,%r14
L_370648:
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_529844
L_370650:
	movl %r13d,0x0(%r15)
	movl %r11d,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529844:
L_370649:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529845:
L_370628:
	cmpq $0x1,%r14
	je L_529846
L_370629:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370626
.p2align 0x4
L_529846:
L_370630:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370632
L_370636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370637
.p2align 0x4
.long 0x2574
L_370637:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370632
.p2align 0x4
L_529848:
	movq %r9,%r15
	movq %r13,%r14
	jmp L_370648
.p2align 0x4
L_529850:
L_370675:
	movq $0x1,%r14
	xchgq %r14,%r15
L_370661:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x922
L_370666:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_370667:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_529853
L_370669:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xD55,%r15
	jne L_529852
L_370670:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_370633
.p2align 0x4
L_529852:
	movq %r13,%r15
L_370668:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529853:
	movq %r13,%r15
	jmp L_370668
.p2align 0x4
.long 0x5514
L_370651:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370652
L_370671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370672
.p2align 0x4
.long 0xBBF
L_370672:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370652:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x31B8
L_370653:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370654
L_370664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370665
.p2align 0x4
.long 0x1863
L_370665:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370654:
	movq $0x12A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1E9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_529855
L_370655:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_370624
.p2align 0x4
L_529855:
L_370656:
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_370657:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529857
.p2align 0x4,,0x7
L_370658:
	movq $0x1E9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_370661
L_370659:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_370657
.p2align 0x4
L_529857:
L_370662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370663
.p2align 0x4
.long 0x64D
L_370663:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370658
.text
.p2align 0x4
.globl sxmlPassesSet_0
.hidden sxmlPassesSet_0
sxmlPassesSet_0:
L_370700:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_370847
L_370701:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529870
L_370702:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq (globalObjptr+0xCEA0)(%rip),%r14
	je L_370845
L_370703:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0xC,%r13
	jne vectorEqual_94
L_370837:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_259:
	cmpq 0x8(%rbp),%r15
	je L_529868
L_370838:
	movq (globalObjptr+0xCEA0)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529859
L_370843:
	incq %r15
	jmp vectorEqualLoop_259
.p2align 0x4
L_529859:
L_370839:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_94
L_370841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370842
.p2align 0x4
.long 0x5522
L_370842:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
vectorEqual_94:
	movq (globalObjptr+0x116C8)(%rip),%r14
	cmpq %r14,0x0(%rbp)
	je L_370835
L_370705:
	cmpq $0x7,0x8(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x18(%rbp)
	jne vectorEqual_95
L_370827:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_258:
	cmpq 0x8(%rbp),%r15
	je L_529866
L_370828:
	movq (globalObjptr+0x116C8)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529860
L_370833:
	incq %r15
	jmp vectorEqualLoop_258
.p2align 0x4
L_529860:
L_370829:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_95
L_370831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370832
.p2align 0x4
.long 0x5521
L_370832:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
vectorEqual_95:
	movq 0x0(%rbp),%r14
	cmpq %r14,(globalObjptr+0xCAD0)(%rip)
	je L_370825
L_370707:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jz L_370709
L_370817:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_257:
	cmpq 0x8(%rbp),%r15
	je L_529863
L_370818:
	movq (globalObjptr+0xCAD0)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529861
L_370823:
	incq %r15
	jmp vectorEqualLoop_257
.p2align 0x4
L_529861:
L_370819:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370709
L_370821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370822
.p2align 0x4
.long 0x5520
L_370822:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370709:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_370739(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x3A,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_370710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_529863:
L_370825:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529866:
L_370835:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529868:
L_370845:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529870:
L_370847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370848
.p2align 0x4
.long 0xC06
L_370848:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370702
.p2align 0x4
.long 0x5517
L_370710:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370711
L_370815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370816
.p2align 0x4
.long 0x551F
L_370816:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370711:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_529893
L_370712:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_370713:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_370733
L_370714:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_370715:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23AE,%r14
	je L_529882
	cmpq $0x23AF,%r14
	je L_529872
L_370716:
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp polyvariancePassGen_0
.p2align 0x4
L_529872:
L_370782:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x60(%rbp)
	movq 0x20(%rbp),%r10
	cmpq %r11,%r10
	je L_529881
L_370783:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r14
	cmpq %r14,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_529878
L_370790:
	xorq %r13,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
vectorEqualLoop_256:
	cmpq %r14,%r13
	je L_529877
L_370791:
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne L_529873
L_370798:
	incq %r13
	jmp vectorEqualLoop_256
.p2align 0x4
L_529873:
L_370792:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529874
L_370793:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370715
.p2align 0x4
L_529874:
L_370794:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370733
L_370796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370797
.p2align 0x4
.long 0x5519
L_370797:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370733:
	movq $0x1939,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
L_370734:
	cmpq 0x8(%rbp),%r14
	je L_529875
L_370735:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529875:
L_370736:
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529877:
L_370800:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_370801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_529878:
L_370784:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529879
L_370785:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370715
.p2align 0x4
L_529879:
L_370786:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370733
L_370788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370789
.p2align 0x4
.long 0x5519
L_370789:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370733
.p2align 0x4
L_529881:
	movq %r11,%r15
	jmp L_370800
.p2align 0x4
L_529882:
L_370744:
	movq 0x18(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r8
	movq %r8,0x58(%rbp)
	movq 0x20(%rbp),%r8
	cmpq %r10,%r8
	je L_529891
L_370745:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r10)
	jne L_529888
L_370752:
	xorq %r11,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_255:
	cmpq %r13,%r11
	je L_529886
L_370753:
	movq 0x20(%rbp),%r10
	movq 0x50(%rbp),%r8
	movb 0x0(%r8,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_529883
L_370760:
	incq %r11
	jmp vectorEqualLoop_255
.p2align 0x4
L_529883:
L_370754:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529884
L_370755:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370715
.p2align 0x4
L_529884:
L_370756:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370733
L_370758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370759
.p2align 0x4
.long 0x5519
L_370759:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370733
.p2align 0x4
L_529886:
L_370762:
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_529887
L_370764:
	movl %r13d,0x0(%r15)
	movl %r11d,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_370765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529887:
L_370763:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529888:
L_370746:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529889
L_370747:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370715
.p2align 0x4
L_529889:
L_370748:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370733
L_370750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370751
.p2align 0x4
.long 0x5519
L_370751:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370733
.p2align 0x4
L_529891:
	movq %r9,%r15
	jmp L_370762
.p2align 0x4
L_529893:
L_370814:
	movq $0x1,%r14
	xchgq %r14,%r15
L_370727:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA20
L_370739:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_370740:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_529896
L_370742:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xC9C,%r15
	jne L_529895
L_370743:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_370734
.p2align 0x4
L_529895:
	movq %r13,%r15
L_370741:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529896:
	movq %r13,%r15
	jmp L_370741
.p2align 0x4
.long 0xF1C
L_370717:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370718
L_370737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370738
.p2align 0x4
.long 0x5518
L_370738:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370718:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_529900
L_370719:
	movq 0x0(%r14),%r13
	movl 0xC(%r13),%r11d
	movl 0x8(%r13),%r10d
	movl 0x4(%r13),%r9d
	movl 0x0(%r13),%r8d
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%rsp
	movq 0x8(%r14),%r13
	movq $0x476B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r8d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movl %r10d,0x8(%r14)
	movl %r11d,0xC(%r14)
	movq %rsp,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq %r13,%r15
L_370720:
	movq $0x12C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1D57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_529897
L_370721:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_370713
.p2align 0x4
L_529897:
L_370722:
	movq %r13,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_370723:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529899
.p2align 0x4,,0x7
L_370724:
	movq $0x1D57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_370727
L_370725:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_370723
.p2align 0x4
L_529899:
L_370728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370729
.p2align 0x4
.long 0xE66
L_370729:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370724
.p2align 0x4
L_529900:
L_370730:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_370733
L_370731:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_370715
.p2align 0x4
.long 0x551D
L_370801:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_370763
L_370802:
	movl %r14d,0x0(%r15)
	movl %r13d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_370803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x551A
L_370765:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370766
L_370779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370780
.p2align 0x4
.long 0x551C
L_370780:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370766:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1039
L_370803:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_370804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1083
L_370767:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370768
L_370777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370778
.p2align 0x4
.long 0x551B
L_370778:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370768:
	movq 0x58(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x23B2,%r15
	je L_529907
	cmpq $0x23B3,%r15
	je L_529906
	cmpq $0x23B4,%r15
	je L_529905
L_370769:
	movq 0xF8(%rsp),%rax
	movq %rax,(localObjptr+0x0)(%rip)
	movq 0xF0(%rsp),%rax
	movq %rax,(localObjptr+0x8)(%rip)
	movq 0xE8(%rsp),%rax
	movq %rax,(localObjptr+0x10)(%rip)
	movq 0xE0(%rsp),%rax
	movq %rax,(localObjptr+0x18)(%rip)
	movq 0xD8(%rsp),%rax
	movq %rax,(localObjptr+0x20)(%rip)
	movq 0xD0(%rsp),%rax
	movq %rax,(localObjptr+0x28)(%rip)
	movq 0xC8(%rsp),%rax
	movq %rax,(localObjptr+0x30)(%rip)
	movq 0xC0(%rsp),%rax
	movq %rax,(localObjptr+0x38)(%rip)
	movq 0xB8(%rsp),%rax
	movq %rax,(localObjptr+0x40)(%rip)
	movq 0xB0(%rsp),%rax
	movq %rax,(localObjptr+0x48)(%rip)
	movq 0xA8(%rsp),%rax
	movq %rax,(localObjptr+0x50)(%rip)
	movq 0xA0(%rsp),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%rsp),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%rsp),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%rsp),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%rsp),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%rsp),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%rsp),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%rsp),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%rsp),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%rsp),%rbx
	movq 0x50(%rsp),%rcx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%rsp
	movq %rsp,(localObjptr+0x100)(%rip)
L_370770:
	movq $0x4775,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	movq %rdi,0x40(%rsp)
	movq %rdx,0x48(%rsp)
	movq %rcx,0x50(%rsp)
	movq %rbx,0x58(%rsp)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0x60(%rsp)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x68(%rsp)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x70(%rsp)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x78(%rsp)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x80(%rsp)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x88(%rsp)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x90(%rsp)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x98(%rsp)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0xA0(%rsp)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0xA8(%rsp)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0xB0(%rsp)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xB8(%rsp)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xC0(%rsp)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xC8(%rsp)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xD0(%rsp)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xD8(%rsp)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xE0(%rsp)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xE8(%rsp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xF0(%rsp)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xF8(%rsp)
	movq (localObjptr+0x100)(%rip),%r15
	addq $0x108,%r12
	movq %rsp,%r14
	jmp L_370720
.p2align 0x4
L_529905:
L_370775:
	movq 0x40(%rsp),%rdx
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%r9
L_370776:
	movq $0x476D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rsi,0x30(%rsp)
	movq %rdi,0x38(%rsp)
	movq %rdx,0x40(%rsp)
	addq $0x50,%r12
	movq %r9,%r15
	movq %rsp,%r14
	jmp L_370720
.p2align 0x4
L_529906:
L_370773:
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%r10
L_370774:
	movq $0x4771,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r9,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rsi,0x30(%rsp)
	movq %rdi,0x38(%rsp)
	addq $0x48,%r12
	movq %r10,%r15
	movq %rsp,%r14
	jmp L_370720
.p2align 0x4
L_529907:
L_370771:
	movq 0x50(%rsp),%rbx
	movl 0x0(%rsp),%ecx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r10
	movq 0x20(%rsp),%r11
	movq 0x18(%rsp),%r13
	movq 0x10(%rsp),%r14
	movq 0x8(%rsp),%r15
	movq 0x20(%rbp),%r9
L_370772:
	movq $0x4773,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %ecx,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq %r14,0x10(%rsp)
	movq %r13,0x18(%rsp)
	movq %r11,0x20(%rsp)
	movq %r10,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	movq %rdi,0x40(%rsp)
	movq %rdx,0x48(%rsp)
	movq %rbx,0x50(%rsp)
	addq $0x60,%r12
	movl $0x0,0x4(%rsp)
	movq %r9,%r15
	movq %rsp,%r14
	jmp L_370720
.p2align 0x4
.long 0x551E
L_370804:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370805
L_370810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_370811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370811
.p2align 0x4
.long 0x1040
L_370811:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_370805:
	movq 0x60(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x23B2,%r15
	je L_529911
	cmpq $0x23B3,%r15
	je L_529910
	cmpq $0x23B4,%r15
	je L_529909
L_370806:
	movq 0xF8(%rsp),%rax
	movq %rax,(localObjptr+0x0)(%rip)
	movq 0xF0(%rsp),%rax
	movq %rax,(localObjptr+0x8)(%rip)
	movq 0xE8(%rsp),%rax
	movq %rax,(localObjptr+0x10)(%rip)
	movq 0xE0(%rsp),%rax
	movq %rax,(localObjptr+0x18)(%rip)
	movq 0xD8(%rsp),%rax
	movq %rax,(localObjptr+0x20)(%rip)
	movq 0xD0(%rsp),%rax
	movq %rax,(localObjptr+0x28)(%rip)
	movq 0xC8(%rsp),%rax
	movq %rax,(localObjptr+0x30)(%rip)
	movq 0xC0(%rsp),%rax
	movq %rax,(localObjptr+0x38)(%rip)
	movq 0xB8(%rsp),%rax
	movq %rax,(localObjptr+0x40)(%rip)
	movq 0xB0(%rsp),%rax
	movq %rax,(localObjptr+0x48)(%rip)
	movq 0xA8(%rsp),%rax
	movq %rax,(localObjptr+0x50)(%rip)
	movq 0xA0(%rsp),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%rsp),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%rsp),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%rsp),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%rsp),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%rsp),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%rsp),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%rsp),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%rsp),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%rsp),%rbx
	movq 0x50(%rsp),%rcx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%rsp
	movq %rsp,(localObjptr+0x100)(%rip)
	jmp L_370770
.p2align 0x4
L_529909:
L_370809:
	movq 0x40(%rsp),%rdx
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%r9
	jmp L_370776
.p2align 0x4
L_529910:
L_370808:
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%r10
	jmp L_370774
.p2align 0x4
L_529911:
L_370807:
	movq 0x50(%rsp),%rbx
	movl 0x0(%rsp),%ecx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r10
	movq 0x20(%rsp),%r11
	movq 0x18(%rsp),%r13
	movq 0x10(%rsp),%r14
	movq 0x8(%rsp),%r15
	movq 0x20(%rbp),%r9
	jmp L_370772
.text
.p2align 0x4
.globl polyvariancePassGen_0
.hidden polyvariancePassGen_0
polyvariancePassGen_0:
L_370849:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_370850
L_370936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_370937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370937
.p2align 0x4
.long 0x63D
L_370937:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_370850:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq $0xC,%r15
	jl L_370866
L_370851:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3674:
	cmpq $0xC,%r14
	jnl L_529914
L_370932:
	movq (globalObjptr+0xCC50)(%rip),%r13
	movq 0x0(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_529913
L_370934:
	incq %r14
	jmp loop_3674
.p2align 0x4
L_529913:
L_370866:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529914:
L_370852:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_529916
L_370855:
	subl $0xC,%r14d
	jo L_529915
L_370857:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	movl $0xC,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_370858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_529915:
L_370856:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529916:
L_370854:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_370858:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_529928
L_370859:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_370861
L_370926:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_260:
	cmpq %r15,%r14
	je L_529926
L_370927:
	movq 0x28(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_529919
L_370929:
	incq %r14
	jmp vectorEqualLoop_260
.p2align 0x4
L_529919:
L_370861:
	cmpq $0x0,%r15
	jna L_370863
L_370864:
	movq 0x28(%rbp),%r14
	cmpb $0x28,0x0(%r14)
	jne L_370866
L_370867:
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_370854
L_370869:
	decl %r13d
	jo L_370856
L_370870:
	movslq %r13d,%r11
	cmpq %r15,%r11
	jnb L_529921
L_370872:
	cmpb $0x29,0x0(%r14,%r11,1)
	jne L_370866
L_370874:
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_370875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_529921:
L_370863:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529926:
L_370930:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movl $0x12C,0x28(%rbp)
	movl $0x1E,0x2C(%rbp)
	movl $0x2,0x30(%rbp)
	movl $0x1,0x34(%rbp)
L_370904:
	movl 0x30(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_370905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529928:
L_370931:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movl $0x12C,0x28(%rbp)
	movl $0x1E,0x2C(%rbp)
	movl $0x2,0x30(%rbp)
	movl $0x1,0x34(%rbp)
	jmp L_370904
.p2align 0x4
.long 0x4A6
L_370875:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_370854
L_370877:
	decl %r13d
	jo L_370856
L_370878:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x30(%rbp)
	movl $0x1,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_370879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
.long 0x19F7
L_370905:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_370906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4A6
L_370879:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x2C,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_370880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
.long 0xA28
L_370906:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_370907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4A6
L_370880:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r13
	je L_370866
L_370881:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq (globalObjptr+0x1E20)(%rip),%r15
.p2align 0x4,,0x7
L_370882:
	cmpq $0x1,%r15
	jne L_529932
L_370922:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_370866
L_370923:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_370882
.p2align 0x4
L_529932:
L_370883:
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_370884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
.long 0x8ED
L_370907:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1E18)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_370856
L_370908:
	movl %r14d,0x0(%r15)
	movl %r13d,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4ED
L_370884:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370885
L_370920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370921
.p2align 0x4
.long 0x73E
L_370921:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_370885:
	movq 0x38(%rbp),%r15
	andq $0x1,%r15
	jnz L_529936
L_370886:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_370866
L_370887:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,%r15
	jmp L_370882
.p2align 0x4
L_529936:
L_370889:
	movq 0x38(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2801,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq 0x28(%rbp),%r10
	cmpq $0x1,%r10
	je L_529937
L_370890:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	movq %r10,0x28(%rbp)
	movq %r11,%r15
	jmp L_370882
.p2align 0x4
L_529937:
L_370891:
	movl %r13d,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_370892:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529944
.p2align 0x4,,0x7
L_370893:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_529938
L_370894:
	movq %r15,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movl %r15d,0x28(%rbp)
	jmp L_370892
.p2align 0x4
L_529938:
L_370896:
	movq 0x30(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_370866
L_370897:
	movq 0x8(%r15),%r13
	movl 0x0(%r15),%r11d
L_370898:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_370866
L_370899:
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r10d
L_370900:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_370866
L_370901:
	movl 0x0(%r15),%r13d
	cmpq $0x1,0x8(%r15)
	jne L_370866
L_370902:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529939
L_370903:
	movl %r13d,0x28(%rbp)
	movl %r10d,0x2C(%rbp)
	movl %r11d,0x30(%rbp)
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movl $0x1,0x34(%rbp)
	jmp L_370904
.p2align 0x4
L_529939:
L_370917:
	movl %r13d,0x28(%rbp)
	movl %r10d,0x2C(%rbp)
	movl %r11d,0x30(%rbp)
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movl $0x0,0x34(%rbp)
	jmp L_370904
.p2align 0x4
L_529944:
L_370918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370919
.p2align 0x4
.long 0xA2B
L_370919:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_370893
.p2align 0x4
.long 0x1852
L_370909:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370910
L_370915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370916
.p2align 0x4
.long 0x3AEE
L_370916:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370910:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116D8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_370911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x966
L_370911:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370912
L_370913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370914
.p2align 0x4
.long 0x8BA
L_370914:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370912:
	movq $0x4761,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x30(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movl 0x28(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x34(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1D5B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl xmlPassesSet_0
.hidden xmlPassesSet_0
xmlPassesSet_0:
L_370938:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_371073
L_370939:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529956
L_370940:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq (globalObjptr+0x116C8)(%rip),%r14
	je L_371071
L_370941:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x7,%r13
	sete %al
	movzbl %al,%eax
	movl %eax,0x38(%rbp)
	jne vectorEqual_96
L_371063:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_264:
	cmpq %r15,0x8(%rbp)
	je L_529954
L_371064:
	movq 0x0(%rbp),%r14
	movq (globalObjptr+0x116C8)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529948
L_371069:
	incq %r15
	jmp vectorEqualLoop_264
.p2align 0x4
L_529948:
L_371065:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_96
L_371067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371068
.p2align 0x4
.long 0x5516
L_371068:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
vectorEqual_96:
	movq 0x0(%rbp),%r14
	cmpq %r14,(globalObjptr+0xCAD0)(%rip)
	je L_371061
L_370943:
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jz L_370945
L_371053:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_263:
	cmpq %r15,0x8(%rbp)
	je L_529951
L_371054:
	movq (globalObjptr+0xCAD0)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529949
L_371059:
	incq %r15
	jmp vectorEqualLoop_263
.p2align 0x4
L_529949:
L_371055:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370945
L_371057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371058
.p2align 0x4
.long 0x5515
L_371058:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370945:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_370975(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x3A,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_370946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_529951:
L_371061:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529954:
L_371071:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529956:
L_371073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371074
.p2align 0x4
.long 0x97E
L_371074:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_370940
.p2align 0x4
.long 0x5513
L_370946:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370947
L_371051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371052
.p2align 0x4
.long 0x5FE
L_371052:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370947:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_529979
L_370948:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_370949:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_370969
L_370950:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_370951:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23AE,%r14
	je L_529968
	cmpq $0x23AF,%r14
	je L_529958
L_370952:
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp polyvariancePassGen_0
.p2align 0x4
L_529958:
L_371018:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x60(%rbp)
	movq 0x38(%rbp),%r10
	cmpq %r10,%r11
	je L_529967
L_371019:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jne L_529964
L_371026:
	xorq %r13,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
vectorEqualLoop_262:
	cmpq %r14,%r13
	je L_529963
L_371027:
	movq 0x38(%rbp),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_529959
L_371034:
	incq %r13
	jmp vectorEqualLoop_262
.p2align 0x4
L_529959:
L_371028:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529960
L_371029:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370951
.p2align 0x4
L_529960:
L_371030:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370969
L_371032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371033
.p2align 0x4
.long 0x2574
L_371033:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_370969:
	movq $0x1939,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
L_370970:
	cmpq %r14,0x8(%rbp)
	je L_529961
L_370971:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529961:
L_370972:
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529963:
L_371036:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_371037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_529964:
L_371020:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529965
L_371021:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370951
.p2align 0x4
L_529965:
L_371022:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370969
L_371024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371025
.p2align 0x4
.long 0x2574
L_371025:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370969
.p2align 0x4
L_529967:
	movq %r11,%r15
	jmp L_371036
.p2align 0x4
L_529968:
L_370980:
	movq 0x18(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r8
	movq %r8,0x58(%rbp)
	movq 0x38(%rbp),%r8
	cmpq %r8,%r10
	je L_529977
L_370981:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r10)
	jne L_529974
L_370988:
	xorq %r11,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_261:
	cmpq %r11,%r13
	je L_529972
L_370989:
	movq 0x38(%rbp),%r10
	movq 0x50(%rbp),%r8
	movb 0x0(%r8,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_529969
L_370996:
	incq %r11
	jmp vectorEqualLoop_261
.p2align 0x4
L_529969:
L_370990:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529970
L_370991:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370951
.p2align 0x4
L_529970:
L_370992:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370969
L_370994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370995
.p2align 0x4
.long 0x2574
L_370995:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370969
.p2align 0x4
L_529972:
L_370998:
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_529973
L_371000:
	movl %r13d,0x0(%r15)
	movl %r11d,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_371001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529973:
L_370999:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529974:
L_370982:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529975
L_370983:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370951
.p2align 0x4
L_529975:
L_370984:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370969
L_370986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370987
.p2align 0x4
.long 0x2574
L_370987:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370969
.p2align 0x4
L_529977:
	movq %r9,%r15
	jmp L_370998
.p2align 0x4
L_529979:
L_371050:
	movq $0x1,%r14
	xchgq %r14,%r15
L_370963:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x922
L_370975:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_370976:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_529982
L_370978:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xC9C,%r15
	jne L_529981
L_370979:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_370970
.p2align 0x4
L_529981:
	movq %r13,%r15
L_370977:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529982:
	movq %r13,%r15
	jmp L_370977
.p2align 0x4
.long 0xBBD
L_370953:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370954
L_370973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370974
.p2align 0x4
.long 0xBBF
L_370974:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370954:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_529986
L_370955:
	movq 0x0(%r14),%r13
	movl 0xC(%r13),%r11d
	movl 0x8(%r13),%r10d
	movl 0x4(%r13),%r9d
	movl 0x0(%r13),%r8d
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%rsp
	movq 0x8(%r14),%r13
	movq $0x476B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r8d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movl %r10d,0x8(%r14)
	movl %r11d,0xC(%r14)
	movq %rsp,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq %r13,%r15
L_370956:
	movq $0x12C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1D57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_529983
L_370957:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_370949
.p2align 0x4
L_529983:
L_370958:
	movq %r13,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_370959:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529985
.p2align 0x4,,0x7
L_370960:
	movq $0x1D57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_370963
L_370961:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_370959
.p2align 0x4
L_529985:
L_370964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370965
.p2align 0x4
.long 0x64D
L_370965:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370960
.p2align 0x4
L_529986:
L_370966:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_370969
L_370967:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_370951
.p2align 0x4
.long 0x5527
L_371037:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_370999
L_371038:
	movl %r14d,0x0(%r15)
	movl %r13d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5523
L_371001:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371002
L_371015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371016
.p2align 0x4
.long 0x5526
L_371016:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371002:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_371003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5528
L_371039:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5524
L_371003:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371004
L_371013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371014
.p2align 0x4
.long 0x5525
L_371014:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371004:
	movq 0x58(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x23B2,%r15
	je L_529993
	cmpq $0x23B3,%r15
	je L_529992
	cmpq $0x23B4,%r15
	je L_529991
L_371005:
	movq 0xF8(%rsp),%rax
	movq %rax,(localObjptr+0x0)(%rip)
	movq 0xF0(%rsp),%rax
	movq %rax,(localObjptr+0x8)(%rip)
	movq 0xE8(%rsp),%rax
	movq %rax,(localObjptr+0x10)(%rip)
	movq 0xE0(%rsp),%rax
	movq %rax,(localObjptr+0x18)(%rip)
	movq 0xD8(%rsp),%rax
	movq %rax,(localObjptr+0x20)(%rip)
	movq 0xD0(%rsp),%rax
	movq %rax,(localObjptr+0x28)(%rip)
	movq 0xC8(%rsp),%rax
	movq %rax,(localObjptr+0x30)(%rip)
	movq 0xC0(%rsp),%rax
	movq %rax,(localObjptr+0x38)(%rip)
	movq 0xB8(%rsp),%rax
	movq %rax,(localObjptr+0x40)(%rip)
	movq 0xB0(%rsp),%rax
	movq %rax,(localObjptr+0x48)(%rip)
	movq 0xA8(%rsp),%rax
	movq %rax,(localObjptr+0x50)(%rip)
	movq 0xA0(%rsp),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%rsp),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%rsp),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%rsp),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%rsp),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%rsp),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%rsp),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%rsp),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%rsp),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%rsp),%rbx
	movq 0x50(%rsp),%rcx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%rsp
	movq %rsp,(localObjptr+0x100)(%rip)
L_371006:
	movq $0x4775,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	movq %rdi,0x40(%rsp)
	movq %rdx,0x48(%rsp)
	movq %rcx,0x50(%rsp)
	movq %rbx,0x58(%rsp)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0x60(%rsp)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x68(%rsp)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x70(%rsp)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x78(%rsp)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x80(%rsp)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x88(%rsp)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x90(%rsp)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x98(%rsp)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0xA0(%rsp)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0xA8(%rsp)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0xB0(%rsp)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xB8(%rsp)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xC0(%rsp)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xC8(%rsp)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xD0(%rsp)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xD8(%rsp)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xE0(%rsp)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xE8(%rsp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xF0(%rsp)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xF8(%rsp)
	movq (localObjptr+0x100)(%rip),%r15
	addq $0x108,%r12
	movq %rsp,%r14
	jmp L_370956
.p2align 0x4
L_529991:
L_371011:
	movq 0x40(%rsp),%rdx
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%r9
L_371012:
	movq $0x476D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rsi,0x30(%rsp)
	movq %rdi,0x38(%rsp)
	movq %rdx,0x40(%rsp)
	addq $0x50,%r12
	movq %r9,%r15
	movq %rsp,%r14
	jmp L_370956
.p2align 0x4
L_529992:
L_371009:
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%r10
L_371010:
	movq $0x4771,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r9,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rsi,0x30(%rsp)
	movq %rdi,0x38(%rsp)
	addq $0x48,%r12
	movq %r10,%r15
	movq %rsp,%r14
	jmp L_370956
.p2align 0x4
L_529993:
L_371007:
	movq 0x50(%rsp),%rbx
	movl 0x0(%rsp),%ecx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r10
	movq 0x20(%rsp),%r11
	movq 0x18(%rsp),%r13
	movq 0x10(%rsp),%r14
	movq 0x8(%rsp),%r15
	movq 0x38(%rbp),%r9
L_371008:
	movq $0x4773,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %ecx,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq %r14,0x10(%rsp)
	movq %r13,0x18(%rsp)
	movq %r11,0x20(%rsp)
	movq %r10,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	movq %rdi,0x40(%rsp)
	movq %rdx,0x48(%rsp)
	movq %rbx,0x50(%rsp)
	addq $0x60,%r12
	movl $0x0,0x4(%rsp)
	movq %r9,%r15
	movq %rsp,%r14
	jmp L_370956
.p2align 0x4
.long 0x5529
L_371040:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371041
L_371046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_371047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371047
.p2align 0x4
.long 0x552A
L_371047:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_371041:
	movq 0x60(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x23B2,%r15
	je L_529997
	cmpq $0x23B3,%r15
	je L_529996
	cmpq $0x23B4,%r15
	je L_529995
L_371042:
	movq 0xF8(%rsp),%rax
	movq %rax,(localObjptr+0x0)(%rip)
	movq 0xF0(%rsp),%rax
	movq %rax,(localObjptr+0x8)(%rip)
	movq 0xE8(%rsp),%rax
	movq %rax,(localObjptr+0x10)(%rip)
	movq 0xE0(%rsp),%rax
	movq %rax,(localObjptr+0x18)(%rip)
	movq 0xD8(%rsp),%rax
	movq %rax,(localObjptr+0x20)(%rip)
	movq 0xD0(%rsp),%rax
	movq %rax,(localObjptr+0x28)(%rip)
	movq 0xC8(%rsp),%rax
	movq %rax,(localObjptr+0x30)(%rip)
	movq 0xC0(%rsp),%rax
	movq %rax,(localObjptr+0x38)(%rip)
	movq 0xB8(%rsp),%rax
	movq %rax,(localObjptr+0x40)(%rip)
	movq 0xB0(%rsp),%rax
	movq %rax,(localObjptr+0x48)(%rip)
	movq 0xA8(%rsp),%rax
	movq %rax,(localObjptr+0x50)(%rip)
	movq 0xA0(%rsp),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%rsp),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%rsp),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%rsp),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%rsp),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%rsp),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%rsp),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%rsp),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%rsp),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%rsp),%rbx
	movq 0x50(%rsp),%rcx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%rsp
	movq %rsp,(localObjptr+0x100)(%rip)
	jmp L_371006
.p2align 0x4
L_529995:
L_371045:
	movq 0x40(%rsp),%rdx
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%r9
	jmp L_371012
.p2align 0x4
L_529996:
L_371044:
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%r10
	jmp L_371010
.p2align 0x4
L_529997:
L_371043:
	movq 0x50(%rsp),%rbx
	movl 0x0(%rsp),%ecx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r10
	movq 0x20(%rsp),%r11
	movq 0x18(%rsp),%r13
	movq 0x10(%rsp),%r14
	movq 0x8(%rsp),%r15
	movq 0x38(%rbp),%r9
	jmp L_371008
.text
.p2align 0x4
.globl ssaPassesSet_0
.hidden ssaPassesSet_0
ssaPassesSet_0:
L_371075:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_371343
L_371076:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530007
L_371077:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq (globalObjptr+0x116C8)(%rip),%r14
	je L_371341
L_371078:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x7,%r13
	sete %al
	movzbl %al,%eax
	movl %eax,0x40(%rbp)
	jne vectorEqual_97
L_371333:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_267:
	cmpq %r15,0x8(%rbp)
	je L_530005
L_371334:
	movq 0x0(%rbp),%r14
	movq (globalObjptr+0x116C8)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529999
L_371339:
	incq %r15
	jmp vectorEqualLoop_267
.p2align 0x4
L_529999:
L_371335:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_97
L_371337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371338
.p2align 0x4
.long 0x5541
L_371338:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
vectorEqual_97:
	movq 0x0(%rbp),%r14
	cmpq %r14,(globalObjptr+0xCAD0)(%rip)
	je L_371331
L_371080:
	movl 0x40(%rbp),%r14d
	testl %r14d,%r14d
	jz L_371082
L_371323:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_266:
	cmpq %r15,0x8(%rbp)
	je L_530002
L_371324:
	movq (globalObjptr+0xCAD0)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_530000
L_371329:
	incq %r15
	jmp vectorEqualLoop_266
.p2align 0x4
L_530000:
L_371325:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371082
L_371327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371328
.p2align 0x4
.long 0x1FE0
L_371328:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371082:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_371160(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x3A,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_371083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_530002:
L_371331:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530005:
L_371341:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530007:
L_371343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371344
.p2align 0x4
.long 0x979
L_371344:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371077
.p2align 0x4
.long 0x552B
L_371083:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371084
L_371321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371322
.p2align 0x4
.long 0x5540
L_371322:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371084:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_530035
L_371085:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x40(%rbp)
L_371086:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371087:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_371088:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2364,%r14
	je L_530019
L_371263:
	movq 0x18(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r8
	movq %r8,0x58(%rbp)
	movq 0x20(%rbp),%r8
	cmpq %r10,%r8
	je L_530018
L_371264:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	jne L_530015
L_371271:
	xorq %r11,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_265:
	cmpq %r11,%r13
	je L_530013
L_371272:
	movq 0x50(%rbp),%r10
	movq 0x20(%rbp),%r8
	movb 0x0(%r8,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_530009
L_371279:
	incq %r11
	jmp vectorEqualLoop_265
.p2align 0x4
L_530009:
L_371273:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530010
L_371274:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530010:
L_371275:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371104
L_371277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371278
.p2align 0x4
.long 0x553B
L_371278:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371104:
	movq $0x1A6F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
L_371105:
	cmpq 0x8(%rbp),%r14
	je L_530011
L_371106:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530011:
L_371107:
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530013:
L_371281:
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_530014
L_371282:
	movl %r13d,0x0(%r15)
	movl %r11d,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_371283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_530014:
L_371095:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530015:
L_371265:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530016
L_371266:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530016:
L_371267:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371104
L_371269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371270
.p2align 0x4
.long 0x553B
L_371270:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371104
.p2align 0x4
L_530018:
	movq %r9,%r15
	jmp L_371281
.p2align 0x4
L_530019:
L_371089:
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq $0x12,%r15
	jl L_371171
L_371090:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3675:
	cmpq $0x12,%r14
	jnl L_530030
L_371169:
	movq (globalObjptr+0xCF38)(%rip),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_530020
L_371261:
	incq %r14
	jmp loop_3675
.p2align 0x4
L_530020:
L_371171:
	cmpq $0xA,%r15
	jl L_530027
L_371172:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3676:
	cmpq $0xA,%r14
	jnl L_530024
L_371247:
	movq (globalObjptr+0x116F0)(%rip),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_530021
L_371254:
	incq %r14
	jmp loop_3676
.p2align 0x4
L_530021:
L_371248:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530022
L_371249:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530022:
L_371250:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371104
L_371252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371253
.p2align 0x4
.long 0x553B
L_371253:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371104
.p2align 0x4
L_530024:
L_371173:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_530026
L_371175:
	subl $0xA,%r14d
	jo L_371095
L_371176:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x78(%rbp)
	movl $0xA,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_371177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_530026:
L_371093:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530027:
L_371255:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530028
L_371256:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530028:
L_371257:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371104
L_371259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371260
.p2align 0x4
.long 0x553B
L_371260:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371104
.p2align 0x4
L_530030:
L_371091:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_371093
L_371094:
	subl $0x12,%r14d
	jo L_371095
L_371096:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x70(%rbp)
	movl $0x12,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_371097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_530035:
L_371320:
	movq $0x1,%r14
	xchgq %r14,%r15
L_371155:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_371160:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_371161:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_530038
L_371163:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xD37,%r15
	jne L_530037
L_371164:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_371105
.p2align 0x4
L_530037:
	movq %r13,%r15
L_371162:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530038:
	movq %r13,%r15
	jmp L_371162
.p2align 0x4
.long 0x553C
L_371283:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371284
L_371316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371317
.p2align 0x4
.long 0x553F
L_371317:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371284:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_371285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5535
L_371177:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_371178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nums_0
.p2align 0x4
.long 0xAA6
L_371097:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nums_0
.p2align 0x4
.long 0x553D
L_371285:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371286
L_371314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371315
.p2align 0x4
.long 0x553E
L_371315:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371286:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_530068
L_371287:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x2367,%rax
	cmpq $0x17,%rax
	ja L_530040
	jmp *jumpTable_874(,%rax,8)
.data
.p2align 0x4
jumpTable_874:
.quad L_530067,L_530066,L_530065,L_530064,L_530063,L_530062,L_530061,L_530060,L_530059,L_530058,L_530057,L_530056,L_530055,L_530054,L_530053,L_530052,L_530051,L_530050,L_530049,L_530048,L_530047,L_530046,L_530045,L_530044
.text
.p2align 0x4
L_530040:
L_371288:
	movq 0x58(%rbp),%r13
	movq 0x20(%r13),%r15
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x46FF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
L_371148:
	movq $0x12B1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1E41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_530041
L_371149:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_371086
.p2align 0x4
L_530041:
L_371150:
	movq %r13,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_371151:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530043
.p2align 0x4,,0x7
L_371152:
	movq $0x1E41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_371155
L_371153:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_371151
.p2align 0x4
L_530043:
L_371156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371157
.p2align 0x4
.long 0x5531
L_371157:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371152
.p2align 0x4
L_530044:
L_371312:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x472B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530045:
L_371311:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x471F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530046:
L_371310:
	movq 0x58(%rbp),%r13
	movq 0x138(%r13),%r15
	movq 0x130(%r13),%r14
	movq 0x128(%r13),%r11
	movq 0x120(%r13),%r10
	movl 0x0(%r13),%r9d
	movq 0x118(%r13),%r8
	movq 0x110(%r13),%rsp
	movq 0x108(%r13),%rsi
	movq 0x100(%r13),%rdi
	movq 0xF8(%r13),%rdx
	movq 0xF0(%r13),%rcx
	movq 0xE8(%r13),%rbx
	movq 0xE0(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0xD8(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0xD0(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0xC8(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0xC0(%r13),%r10
	movq %r8,(localObjptr+0x20)(%rip)
	movq 0xB8(%r13),%r8
	movq %rsp,(localObjptr+0x28)(%rip)
	movq 0xB0(%r13),%rsp
	movq %rsi,(localObjptr+0x30)(%rip)
	movq 0xA8(%r13),%rsi
	movq %rdi,(localObjptr+0x38)(%rip)
	movq 0xA0(%r13),%rdi
	movq %rdx,(localObjptr+0x40)(%rip)
	movq 0x98(%r13),%rdx
	movq %rcx,(localObjptr+0x48)(%rip)
	movq 0x90(%r13),%rcx
	movq %rbx,(localObjptr+0x50)(%rip)
	movq 0x88(%r13),%rbx
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x80(%r13),%rax
	movq %r15,(localObjptr+0x60)(%rip)
	movq 0x78(%r13),%r15
	movq %r14,(localObjptr+0x68)(%rip)
	movq 0x70(%r13),%r14
	movq %r11,(localObjptr+0x70)(%rip)
	movq 0x68(%r13),%r11
	movq %r10,(localObjptr+0x78)(%rip)
	movq 0x60(%r13),%r10
	movq %r8,(localObjptr+0x80)(%rip)
	movq 0x58(%r13),%r8
	movq %rsp,(localObjptr+0x88)(%rip)
	movq 0x50(%r13),%rsp
	movq %rsi,(localObjptr+0x90)(%rip)
	movq 0x48(%r13),%rsi
	movq %rdi,(localObjptr+0x98)(%rip)
	movq 0x40(%r13),%rdi
	movq %rdx,(localObjptr+0xA0)(%rip)
	movq 0x38(%r13),%rdx
	movq %rcx,(localObjptr+0xA8)(%rip)
	movq 0x30(%r13),%rcx
	movq %rbx,(localObjptr+0xB0)(%rip)
	movq 0x28(%r13),%rbx
	movq %rax,(localObjptr+0xB8)(%rip)
	movq 0x20(%r13),%rax
	movq %r15,(localObjptr+0xC0)(%rip)
	movq 0x18(%r13),%r15
	movq %r14,(localObjptr+0xC8)(%rip)
	movq 0x10(%r13),%r14
	movq %r11,(localObjptr+0xD0)(%rip)
	movq 0x8(%r13),%r11
	movq $0x4737,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %rax,0x20(%r13)
	movq %rbx,0x28(%r13)
	movq %rcx,0x30(%r13)
	movq %rdx,0x38(%r13)
	movq %rdi,0x40(%r13)
	movq %rsi,0x48(%r13)
	movq %rsp,0x50(%r13)
	movq %r8,0x58(%r13)
	movq %r10,0x60(%r13)
	movq (localObjptr+0xD0)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0xC8)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0xC0)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0xB8)(%rip),%r15
	movq %r15,0x80(%r13)
	movq (localObjptr+0xB0)(%rip),%r15
	movq %r15,0x88(%r13)
	movq (localObjptr+0xA8)(%rip),%r15
	movq %r15,0x90(%r13)
	movq (localObjptr+0xA0)(%rip),%r15
	movq %r15,0x98(%r13)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0xA0(%r13)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0xA8(%r13)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0xB0(%r13)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0xB8(%r13)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0xC0(%r13)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0xC8(%r13)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0xD0(%r13)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0xD8(%r13)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0xE0(%r13)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0xE8(%r13)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0xF0(%r13)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xF8(%r13)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0x100(%r13)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0x108(%r13)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0x110(%r13)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x118(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x120(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x128(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x130(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0x138(%r13)
	addq $0x148,%r12
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530047:
L_371309:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x4709,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530048:
L_371308:
	movq 0x58(%rbp),%r14
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq $0x4717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530049:
L_371307:
	movq 0x58(%rbp),%r13
	movq 0x20(%r13),%r15
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x471B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530050:
L_371306:
	movq 0x58(%rbp),%r13
	movq 0x20(%r13),%r15
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x472F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530051:
L_371305:
	movq 0x58(%rbp),%r14
	movq 0xD8(%r14),%r15
	movq 0xD0(%r14),%r13
	movq 0xC8(%r14),%r11
	movq 0xC0(%r14),%r10
	movq 0xB8(%r14),%r9
	movq 0xB0(%r14),%r8
	movq 0xA8(%r14),%rsp
	movq 0xA0(%r14),%rsi
	movq 0x98(%r14),%rdi
	movq 0x90(%r14),%rdx
	movq 0x88(%r14),%rcx
	movq 0x80(%r14),%rbx
	movq 0x78(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x70(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x68(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x60(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x58(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x50(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x48(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x40(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x38(%r14),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x30(%r14),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x28(%r14),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x20(%r14),%rcx
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x18(%r14),%rbx
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x10(%r14),%rax
	movq %r15,(localObjptr+0x68)(%rip)
	movq 0x8(%r14),%r15
	movq %r13,(localObjptr+0x70)(%rip)
	movq 0x0(%r14),%r13
	movq $0x4733,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %rax,0x10(%r14)
	movq %rbx,0x18(%r14)
	movq %rcx,0x20(%r14)
	movq %rdx,0x28(%r14)
	movq %rdi,0x30(%r14)
	movq %rsi,0x38(%r14)
	movq %rsp,0x40(%r14)
	movq %r8,0x48(%r14)
	movq %r9,0x50(%r14)
	movq %r10,0x58(%r14)
	movq %r11,0x60(%r14)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xA8(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xB0(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xB8(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xC0(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xC8(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xD0(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xD8(%r14)
	addq $0xE8,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530052:
L_371304:
	movq 0x58(%rbp),%r14
	movq 0xA8(%r14),%r15
	movq 0xA0(%r14),%r13
	movq 0x98(%r14),%r11
	movq 0x90(%r14),%r10
	movq 0x88(%r14),%r9
	movq 0x80(%r14),%r8
	movq 0x78(%r14),%rsp
	movq 0x70(%r14),%rsi
	movq 0x68(%r14),%rdi
	movq 0x60(%r14),%rdx
	movq 0x58(%r14),%rcx
	movq 0x50(%r14),%rbx
	movq 0x48(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x40(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x38(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x30(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x28(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x20(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x18(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x10(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x8(%r14),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x0(%r14),%rdi
	movq $0x4727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdi,0x0(%r14)
	movq %rsi,0x8(%r14)
	movq %rsp,0x10(%r14)
	movq %r8,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r10,0x28(%r14)
	movq %r11,0x30(%r14)
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq %rax,0x48(%r14)
	movq %rbx,0x50(%r14)
	movq %rcx,0x58(%r14)
	movq %rdx,0x60(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xA8(%r14)
	addq $0xB8,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530053:
L_371303:
	movq 0x58(%rbp),%r14
	movq 0xA8(%r14),%r15
	movq 0xA0(%r14),%r13
	movq 0x98(%r14),%r11
	movq 0x90(%r14),%r10
	movq 0x88(%r14),%r9
	movq 0x80(%r14),%r8
	movq 0x78(%r14),%rsp
	movq 0x70(%r14),%rsi
	movq 0x68(%r14),%rdi
	movq 0x60(%r14),%rdx
	movq 0x58(%r14),%rcx
	movq 0x50(%r14),%rbx
	movq 0x48(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x40(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x38(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x30(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x28(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x20(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x18(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x10(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x8(%r14),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x0(%r14),%rdi
	movq $0x4735,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdi,0x0(%r14)
	movq %rsi,0x8(%r14)
	movq %rsp,0x10(%r14)
	movq %r8,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r10,0x28(%r14)
	movq %r11,0x30(%r14)
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq %rax,0x48(%r14)
	movq %rbx,0x50(%r14)
	movq %rcx,0x58(%r14)
	movq %rdx,0x60(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xA8(%r14)
	addq $0xB8,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530054:
L_371302:
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x4707,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530055:
L_371301:
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x4705,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530056:
L_371300:
	movq 0x58(%rbp),%r14
	movq 0xE0(%r14),%r15
	movq 0xD8(%r14),%r13
	movq 0xD0(%r14),%r11
	movq 0xC8(%r14),%r10
	movq 0xC0(%r14),%r9
	movq 0xB8(%r14),%r8
	movq 0xB0(%r14),%rsp
	movq 0xA8(%r14),%rsi
	movl 0x14(%r14),%edi
	movq 0xA0(%r14),%rdx
	movq 0x98(%r14),%rcx
	movq 0x90(%r14),%rbx
	movq 0x88(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x80(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x78(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x70(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x68(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x60(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x58(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x50(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x48(%r14),%rsi
	movq %rdx,(localObjptr+0x40)(%rip)
	movq 0x40(%r14),%rdx
	movq %rcx,(localObjptr+0x48)(%rip)
	movq 0x38(%r14),%rcx
	movq %rbx,(localObjptr+0x50)(%rip)
	movq 0x30(%r14),%rbx
	movq %rax,(localObjptr+0x58)(%rip)
	movl 0x10(%r14),%eax
	movq %r15,(localObjptr+0x60)(%rip)
	movq 0x8(%r14),%r15
	movq %r13,(localObjptr+0x68)(%rip)
	movq 0x0(%r14),%r13
	movq %r11,(localObjptr+0x70)(%rip)
	movq 0x28(%r14),%r11
	movq %r10,(localObjptr+0x78)(%rip)
	movq 0x20(%r14),%r10
	movq %r9,(localObjptr+0x80)(%rip)
	movq 0x18(%r14),%r9
	movq $0x4703,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movl %eax,0x10(%r14)
	movl %edi,0x14(%r14)
	movq %r9,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r11,0x28(%r14)
	movq %rbx,0x30(%r14)
	movq %rcx,0x38(%r14)
	movq %rdx,0x40(%r14)
	movq %rsi,0x48(%r14)
	movq %rsp,0x50(%r14)
	movq %r8,0x58(%r14)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x60(%r14)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xA8(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xB0(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xB8(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xC0(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xC8(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xD0(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xD8(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xE0(%r14)
	addq $0xF0,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530057:
L_371299:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x4701,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530058:
L_371298:
	movq 0x58(%rbp),%r13
	movq 0xF0(%r13),%r15
	movq 0xE8(%r13),%r14
	movq 0xE0(%r13),%r11
	movq 0xD8(%r13),%r10
	movq 0xD0(%r13),%r9
	movq 0xC8(%r13),%r8
	movq 0xC0(%r13),%rsp
	movq 0xB8(%r13),%rsi
	movq 0xB0(%r13),%rdi
	movq 0xA8(%r13),%rdx
	movq 0xA0(%r13),%rcx
	movq 0x98(%r13),%rbx
	movq 0x90(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x88(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0x80(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x78(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x70(%r13),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x68(%r13),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x60(%r13),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x58(%r13),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x50(%r13),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x48(%r13),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x40(%r13),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x38(%r13),%rcx
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x30(%r13),%rbx
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x28(%r13),%rax
	movq %r15,(localObjptr+0x68)(%rip)
	movq 0x20(%r13),%r15
	movq %r14,(localObjptr+0x70)(%rip)
	movq 0x18(%r13),%r14
	movq %r11,(localObjptr+0x78)(%rip)
	movq 0x10(%r13),%r11
	movq %r10,(localObjptr+0x80)(%rip)
	movq 0x8(%r13),%r10
	movq %r9,(localObjptr+0x88)(%rip)
	movq 0x0(%r13),%r9
	movq $0x4711,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %rax,0x28(%r13)
	movq %rbx,0x30(%r13)
	movq %rcx,0x38(%r13)
	movq %rdx,0x40(%r13)
	movq %rdi,0x48(%r13)
	movq %rsi,0x50(%r13)
	movq %rsp,0x58(%r13)
	movq %r8,0x60(%r13)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x80(%r13)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x88(%r13)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x90(%r13)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0x98(%r13)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0xA0(%r13)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0xA8(%r13)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xB0(%r13)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xB8(%r13)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xC0(%r13)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xC8(%r13)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xD0(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xD8(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xE0(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xE8(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xF0(%r13)
	addq $0x100,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530059:
L_371297:
	movq 0x58(%rbp),%r13
	movq 0x80(%r13),%r15
	movq 0x78(%r13),%r14
	movq 0x70(%r13),%r11
	movq 0x68(%r13),%r10
	movq 0x60(%r13),%r9
	movq 0x58(%r13),%r8
	movq 0x50(%r13),%rsp
	movq 0x48(%r13),%rsi
	movq 0x40(%r13),%rdi
	movq 0x38(%r13),%rdx
	movq 0x30(%r13),%rcx
	movq 0x28(%r13),%rbx
	movq 0x20(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x18(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0x10(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x8(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x0(%r13),%r10
	movq $0x4723,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %rax,0x20(%r13)
	movq %rbx,0x28(%r13)
	movq %rcx,0x30(%r13)
	movq %rdx,0x38(%r13)
	movq %rdi,0x40(%r13)
	movq %rsi,0x48(%r13)
	movq %rsp,0x50(%r13)
	movq %r8,0x58(%r13)
	movq %r9,0x60(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0x80(%r13)
	addq $0x90,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530060:
L_371296:
	movq 0x58(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x10(%r13),%r9
	movq 0x8(%r13),%r8
	movq 0x0(%r13),%rsp
	movq $0x4721,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rsp,0x0(%r13)
	movq %r8,0x8(%r13)
	movq %r9,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r11,0x20(%r13)
	movq %r14,0x28(%r13)
	movq %r15,0x30(%r13)
	addq $0x40,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530061:
L_371295:
	movq 0x58(%rbp),%r14
	movq 0xB8(%r14),%r15
	movq 0xB0(%r14),%r13
	movq 0xA8(%r14),%r11
	movq 0xA0(%r14),%r10
	movq 0x98(%r14),%r9
	movq 0x90(%r14),%r8
	movq 0x88(%r14),%rsp
	movq 0x80(%r14),%rsi
	movq 0x78(%r14),%rdi
	movq 0x70(%r14),%rdx
	movq 0x68(%r14),%rcx
	movq 0x60(%r14),%rbx
	movq 0x58(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x50(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x48(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x40(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x38(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x30(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x28(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x20(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x18(%r14),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x10(%r14),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x8(%r14),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x0(%r14),%rcx
	movq $0x4713,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rcx,0x0(%r14)
	movq %rdx,0x8(%r14)
	movq %rdi,0x10(%r14)
	movq %rsi,0x18(%r14)
	movq %rsp,0x20(%r14)
	movq %r8,0x28(%r14)
	movq %r9,0x30(%r14)
	movq %r10,0x38(%r14)
	movq %r11,0x40(%r14)
	movq %r13,0x48(%r14)
	movq %r15,0x50(%r14)
	movq %rax,0x58(%r14)
	movq %rbx,0x60(%r14)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xA8(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xB0(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xB8(%r14)
	addq $0xC8,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530062:
L_371294:
	movq 0x58(%rbp),%r13
	movq 0x80(%r13),%r15
	movq 0x78(%r13),%r14
	movq 0x70(%r13),%r11
	movq 0x68(%r13),%r10
	movq 0x60(%r13),%r9
	movq 0x58(%r13),%r8
	movq 0x50(%r13),%rsp
	movq 0x48(%r13),%rsi
	movq 0x40(%r13),%rdi
	movq 0x38(%r13),%rdx
	movq 0x30(%r13),%rcx
	movq 0x28(%r13),%rbx
	movq 0x20(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x18(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0x10(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x8(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x0(%r13),%r10
	movq $0x4719,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %rax,0x20(%r13)
	movq %rbx,0x28(%r13)
	movq %rcx,0x30(%r13)
	movq %rdx,0x38(%r13)
	movq %rdi,0x40(%r13)
	movq %rsi,0x48(%r13)
	movq %rsp,0x50(%r13)
	movq %r8,0x58(%r13)
	movq %r9,0x60(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0x80(%r13)
	addq $0x90,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530063:
L_371293:
	movq 0x58(%rbp),%r13
	movq 0x88(%r13),%r15
	movq 0x80(%r13),%r14
	movq 0x78(%r13),%r11
	movq 0x70(%r13),%r10
	movq 0x68(%r13),%r9
	movq 0x60(%r13),%r8
	movq 0x58(%r13),%rsp
	movq 0x50(%r13),%rsi
	movq 0x48(%r13),%rdi
	movl 0x0(%r13),%edx
	movq 0x40(%r13),%rcx
	movq 0x38(%r13),%rbx
	movq 0x30(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x28(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0x20(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x18(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x10(%r13),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x8(%r13),%r9
	movq $0x4725,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %edx,0x0(%r13)
	movq %r9,0x8(%r13)
	movq %r10,0x10(%r13)
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r15,0x28(%r13)
	movq %rax,0x30(%r13)
	movq %rbx,0x38(%r13)
	movq %rcx,0x40(%r13)
	movq %rdi,0x48(%r13)
	movq %rsi,0x50(%r13)
	movq %rsp,0x58(%r13)
	movq %r8,0x60(%r13)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x80(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0x88(%r13)
	addq $0x98,%r12
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530064:
L_371292:
	movq 0x58(%rbp),%r14
	movq 0x38(%r14),%r15
	movq 0x30(%r14),%r13
	movq 0x28(%r14),%r11
	movq 0x20(%r14),%r10
	movq 0x18(%r14),%r9
	movq 0x10(%r14),%r8
	movq 0x8(%r14),%rsp
	movq 0x0(%r14),%rsi
	movq $0x472D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsi,0x0(%r14)
	movq %rsp,0x8(%r14)
	movq %r8,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r11,0x28(%r14)
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	addq $0x48,%r12
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
L_530065:
L_371291:
	movq 0x58(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x10(%r13),%r9
	movq 0x8(%r13),%r8
	movq 0x0(%r13),%rsp
	movq $0x4731,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rsp,0x0(%r13)
	movq %r8,0x8(%r13)
	movq %r9,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r11,0x20(%r13)
	movq %r14,0x28(%r13)
	movq %r15,0x30(%r13)
	addq $0x40,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530066:
L_371290:
	movq 0x58(%rbp),%r13
	movq 0x38(%r13),%r15
	movq 0x30(%r13),%r14
	movq 0x28(%r13),%r11
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movl 0x0(%r13),%esp
	movq 0x8(%r13),%rsi
	movq $0x4729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %esp,0x0(%r13)
	movq %rsi,0x8(%r13)
	movq %r8,0x10(%r13)
	movq %r9,0x18(%r13)
	movq %r10,0x20(%r13)
	movq %r11,0x28(%r13)
	movq %r14,0x30(%r13)
	movq %r15,0x38(%r13)
	addq $0x48,%r12
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530067:
L_371289:
	movq 0x58(%rbp),%r13
	movq 0x40(%r13),%r15
	movq 0x38(%r13),%r14
	movq 0x30(%r13),%r11
	movq 0x28(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x18(%r13),%r8
	movq 0x10(%r13),%rsp
	movq 0x8(%r13),%rsi
	movq 0x0(%r13),%rdi
	movq $0x471D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rdi,0x0(%r13)
	movq %rsi,0x8(%r13)
	movq %rsp,0x10(%r13)
	movq %r8,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r10,0x28(%r13)
	movq %r11,0x30(%r13)
	movq %r14,0x38(%r13)
	movq %r15,0x40(%r13)
	addq $0x50,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371148
.p2align 0x4
L_530068:
L_371313:
	movq $0x1,%r14
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_371148
.p2align 0x4
.long 0x5536
L_371178:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371180
L_371245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_371246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371246
.p2align 0x4
.long 0x553A
L_371246:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_371180:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	jz L_530071
L_371181:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371182:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530071:
L_371184:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
L_371185:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_530090
L_371189:
	movq 0x8(%r15),%r14
	movq %r14,%r13
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_530088
L_371193:
	shrq $0x1,%r14
	movl %r14d,0x50(%rbp)
L_371194:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_530086
L_371198:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_530084
L_371202:
	shrq $0x1,%r14
	movl %r14d,0x54(%rbp)
L_371203:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_530082
L_371207:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_371208:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_530080
L_371212:
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	cmpq $0x1,%r14
	je L_530073
L_371213:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371214:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530073:
L_371216:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_530078
L_371217:
	movl 0x54(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_530076
L_371218:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_371219:
	movq 0x60(%rbp),%r14
	andq $0x1,%r14
	jnz L_530075
L_371220:
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x70(%rbp)
L_371221:
	movq (globalObjptr+0x21D0)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_371095
L_371222:
	movl %r14d,0x0(%r15)
	movl %r13d,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_371223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_530075:
L_371231:
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_371232:
	movl %ecx,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_371233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_530076:
L_371238:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_371239:
	movq 0x60(%rbp),%r14
	andq $0x1,%r14
	jnz L_530077
L_371240:
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_371221
.p2align 0x4
L_530077:
L_371241:
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_371232
.p2align 0x4
L_530078:
L_371242:
	movl 0x54(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_530079
L_371243:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_371219
.p2align 0x4
L_530079:
L_371244:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_371239
.p2align 0x4
L_530080:
L_371209:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371210:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530082:
L_371204:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371205:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530084:
L_371199:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371200:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530086:
L_371195:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371196:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530088:
L_371190:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371191:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530090:
L_371186:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371187:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
.long 0x552C
L_371098:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371100
L_371167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_371168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371168
.p2align 0x4
.long 0x5534
L_371168:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_371100:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	jz L_530094
L_371101:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371102:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530094:
L_371108:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
L_371109:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_530107
L_371113:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_371114:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_530105
L_371118:
	movq 0x0(%r13),%r15
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_530103
L_371122:
	shrq $0x1,%r15
	movl %r15d,0x50(%rbp)
L_371123:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_530101
L_371127:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
L_371128:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_530099
L_371132:
	movq 0x0(%r13),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_530097
L_371136:
	shrq $0x1,%r14
	movl %r14d,0x54(%rbp)
	cmpq $0x1,%r15
	je L_530096
L_371137:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371138:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530096:
L_371140:
	movl 0x50(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_530097:
L_371133:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371134:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530099:
L_371129:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371130:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530101:
L_371124:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371125:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530103:
L_371119:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371120:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530105:
L_371115:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371116:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
L_530107:
L_371110:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371104
L_371111:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371088
.p2align 0x4
.long 0x5537
L_371223:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371224
L_371229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_371230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371230
.p2align 0x4
.long 0x5539
L_371230:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_371224:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_371225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5536
L_371233:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371234
L_371236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_371237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371237
.p2align 0x4
.long 0x5539
L_371237:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_371234:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_371235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x552D
L_371141:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5538
L_371225:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371226
L_371227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_371228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371228
.p2align 0x4
.long 0x4F5E
L_371228:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_371226:
	movq $0x470D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x54(%rbp),%r13d
	movl %r13d,0x8(%r14)
	movl 0x50(%rbp),%r13d
	movl %r13d,0xC(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r15
	jmp L_371148
.p2align 0x4
.long 0x5536
L_371235:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_371221
.p2align 0x4
.long 0x552E
L_371142:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x21D0)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_371095
L_371143:
	movl %r14d,0x0(%r15)
	movl %r13d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x552F
L_371144:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371145
L_371165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_371166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371166
.p2align 0x4
.long 0x5533
L_371166:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_371145:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_371146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5530
L_371146:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371147
L_371158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_371159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371159
.p2align 0x4
.long 0x5532
L_371159:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_371147:
	movq $0x470B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0x54(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl 0x50(%rbp),%r13d
	movl %r13d,0x4(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r15
	jmp L_371148
.text
.p2align 0x4
.globl nums_0
.hidden nums_0
nums_0:
L_371345:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_371463
L_371346:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530128
L_371347:
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x0(%rbp),%r13
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_371461
L_371348:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz length_50
L_371456:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_271:
	cmpq %r14,%r15
	je L_530126
L_371457:
	movq 0x0(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne length_77
L_371459:
	incq %r14
	jmp vectorEqualLoop_271
.p2align 0x4
length_77:
length_50:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movl %r14d,(localWord32+0x0)(%rip)
	cmpq %r15,%r13
	jne L_530125
L_371352:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3677:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_530118
L_371452:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_530117
L_371454:
	incl %ecx
	jo L_530116
L_371455:
	movl %r14d,%ebx
	jmp loop_3677
.p2align 0x4
L_530116:
L_371360:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530117:
L_371355:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530118:
L_371353:
	cmpq $0x0,%r15
	jna L_371355
L_371356:
	movq 0x0(%rbp),%r14
	cmpb $0x28,0x0(%r14)
	jne L_371358
L_371359:
	decl %ecx
	jo L_371360
L_371361:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_371355
L_371363:
	cmpb $0x29,0x0(%r14,%r13,1)
	jne L_530120
L_371365:
	decl %ecx
	jo L_371360
L_371366:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	leaq L_371419(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_371367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_530120:
L_371358:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530125:
L_371351:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530126:
L_371461:
	movq (globalObjptr+0x21C8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530128:
L_371463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_371464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371464
.p2align 0x4
.long 0x45D
L_371464:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_371347
.p2align 0x4
.long 0x497
L_371367:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x2C,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_371368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
.long 0x25
L_371419:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r14
L_371420:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_530132
L_371422:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xD35,%r15
	jne L_530131
L_371423:
	movq %r14,%r13
	movq 0x0(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
L_371390:
	cmpq 0x20(%rbp),%r15
	je L_371358
L_371391:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530131:
	movq %r14,%r15
L_371421:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530132:
	movq %r14,%r15
	jmp L_371421
.p2align 0x4
.long 0x497
L_371368:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371369
L_371450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_371451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371451
.p2align 0x4
.long 0x498
L_371451:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_371369:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530155
L_371370:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_371371:
	cmpq %r15,(globalObjptr+0xCDC0)(%rip)
	je L_371447
L_371372:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x4,%r14
	jne vectorEqual_98
L_371442:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_270:
	cmpq %r13,%r14
	je L_530153
L_371443:
	movq (globalObjptr+0xCDC0)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne vectorEqual_292
L_371445:
	incq %r13
	jmp vectorEqualLoop_270
.p2align 0x4
vectorEqual_292:
vectorEqual_98:
	cmpq (globalObjptr+0xCDB0)(%rip),%r15
	je L_371440
L_371374:
	cmpq $0x5,%r14
	jne vectorEqual_99
L_371435:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_269:
	cmpq %r13,%r14
	je L_530151
L_371436:
	movq (globalObjptr+0xCDB0)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne vectorEqual_293
L_371438:
	incq %r13
	jmp vectorEqualLoop_269
.p2align 0x4
vectorEqual_293:
vectorEqual_99:
	cmpq %r15,(globalObjptr+0xD5F8)(%rip)
	je L_371433
L_371376:
	cmpq $0x3,%r14
	jne length_51
L_371428:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_268:
	cmpq %r13,%r14
	je L_530144
L_371429:
	movq (globalObjptr+0xD5F8)(%rip),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne length_79
L_371431:
	incq %r13
	jmp vectorEqualLoop_268
.p2align 0x4
length_79:
length_51:
	movl %r14d,%r13d
	movslq %r13d,%r11
	movl %r13d,(localWord32+0x0)(%rip)
	cmpq %r14,%r11
	jne L_371351
L_371379:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3678:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_530135
L_371424:
	movl %ebx,%r13d
	incl %r13d
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb L_371355
L_371426:
	incl %ecx
	jo L_371360
L_371427:
	movl %r13d,%ebx
	jmp loop_3678
.p2align 0x4
L_530135:
L_371380:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3679:
	cmpl %ebx,%ecx
	je L_530142
L_371381:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_371355
L_371383:
	movb 0x0(%r15,%r13,1),%r11b
	cmpb $0x39,%r11b
	ja L_530139
L_371384:
	cmpb $0x30,%r11b
	jb L_530137
L_371385:
	incl %ebx
	jo L_371360
L_371386:
	jmp loop_3679
.p2align 0x4
L_530137:
L_371387:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371389
L_371393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_371394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371394
.p2align 0x4
.long 0x49E
L_371394:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_371389:
	movq $0x1A6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_371390
.p2align 0x4
L_530139:
L_371395:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371389
L_371397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_371398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371398
.p2align 0x4
.long 0x49E
L_371398:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371389
.p2align 0x4
L_530142:
L_371399:
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_371400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
L_530144:
L_371433:
	movq (globalObjptr+0x21C0)(%rip),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_371402:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530149
.p2align 0x4,,0x7
L_371403:
	movq $0x277B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530145
L_371404:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_371371
.p2align 0x4
L_530145:
L_371405:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_371406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530148
.p2align 0x4,,0x7
L_371407:
	movq $0x277B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_530146
L_371408:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_371406
.p2align 0x4
L_530146:
L_371411:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_371358
L_371412:
	movq $0x277D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530148:
L_371413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371414
.p2align 0x4
.long 0x4FD
L_371414:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_371407
.p2align 0x4
L_530149:
L_371415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371416
.p2align 0x4
.long 0x98A
L_371416:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371403
.p2align 0x4
L_530151:
L_371440:
	movq (globalWord64+0x1C8)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_371402
.p2align 0x4
L_530153:
L_371447:
	movq (globalWord64+0x1D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_371402
.p2align 0x4
L_530155:
L_371449:
	movq $0x1,%r15
	jmp L_371411
.p2align 0x4
.long 0x7BF
L_371400:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371401
L_371417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371418
.p2align 0x4
.long 0x44E5
L_371418:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371401:
	movq $0x2779,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	jmp L_371402
.text
.p2align 0x4
.globl x_1207
.hidden x_1207
x_1207:
L_371465:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_371466
L_372082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372083
.p2align 0x4
.long 0x453
L_372083:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_371466:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_3680:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530435
.p2align 0x4,,0x7
L_371467:
	movq 0x20(%rbp),%r15
	cmpq $0x0,%r15
	jl L_530158
L_371468:
	movq %r15,%r14
	decq %r14
	movq 0x0(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r11b
	movq %r14,0x20(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_3680
.p2align 0x4
L_530158:
L_371469:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
Re_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530434
.p2align 0x4,,0x7
L_371470:
	movq $0x318B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
Br_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530433
.p2align 0x4,,0x7
L_371471:
	movq $0x3187,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
P_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530432
.p2align 0x4,,0x7
L_371472:
	movq $0x3181,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_371473:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371474
L_371475:
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
L_371476:
	movb 0x20(%rbp),%r15b
	cmpb $0x24,%r15b
	je L_530430
	cmpb $0x28,%r15b
	je L_530429
	cmpb $0x2E,%r15b
	je L_530428
	cmpb $0x5B,%r15b
	je L_530211
	cmpb $0x5C,%r15b
	je L_530209
	cmpb $0x5E,%r15b
	je L_530159
x_1146:
	leaq L_371546(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb 0x20(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	movq (globalObjptr+0x116F8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_371477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_530159:
L_372073:
	movq $0x1,%r14
	movq 0x18(%rbp),%r15
finishR_0:
	movq (globalObjptr+0x14E8)(%rip),%r13
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x28(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x18C0,%r10
	je L_530207
L_371673:
	movq 0x10(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r11),%r8
	cmpq $0x1,%r15
	je L_530206
L_371674:
	movq %r8,0x28(%rbp)
	movq %r9,0x30(%rbp)
	movq %r10,0x38(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq %r13,0x40(%rbp)
.p2align 0x4,,0x7
L_371482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530205
.p2align 0x4,,0x7
L_371483:
	movb 0x20(%rbp),%r15b
	cmpb $0x29,%r15b
	je L_530204
	cmpb $0x2A,%r15b
	je L_530203
	cmpb $0x2B,%r15b
	je L_530202
	cmpb $0x3F,%r15b
	je L_530201
	cmpb $0x7B,%r15b
	je L_530165
	cmpb $0x7C,%r15b
	je L_530160
default_31:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x3183,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x28(%rbp)
	jmp L_371476
.p2align 0x4
L_530160:
L_371669:
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r13
	movq %r13,0x30(%rbp)
finish_1:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_371485:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530164
.p2align 0x4,,0x7
L_371486:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_530161
L_371487:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_371485
.p2align 0x4
L_530161:
L_371488:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371489:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530163
.p2align 0x4,,0x7
L_371490:
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530162
L_371491:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_371489
.p2align 0x4
L_530162:
L_371492:
	movq %r15,0x48(%rbp)
	leaq L_371546(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_371493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_12
.p2align 0x4
L_530163:
L_371581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371582
.p2align 0x4
.long 0x5EC
L_371582:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371490
.p2align 0x4
L_530164:
L_371583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371584
.p2align 0x4
.long 0x4AE
L_371584:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_371486
.p2align 0x4
L_530165:
L_371589:
	movq 0x18(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz default_31
L_371590:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%r11b
	cmpb $0x39,%r11b
	ja default_31
L_371591:
	cmpb $0x30,%r11b
	jb default_31
L_371592:
	movzbl %r11b,%ecx
	subl $0x30,%ecx
	jo L_371593
L_371594:
	cmpq $0x1,%r14
	je L_530199
L_371595:
	movb 0x0(%r14),%dl
	movq %r14,%r13
	movq 0x8(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
.p2align 0x4,,0x7
L_371596:
	cmpb $0x39,%dl
	ja finish_9
L_371597:
	cmpb $0x30,%dl
	jb finish_13
L_371598:
	movzbl %dl,%r13d
	subl $0x30,%r13d
	jo L_371593
L_371599:
	imull $0xA,%ecx
	jo L_371593
L_371600:
	addl %ecx,%r13d
	jo L_371593
L_371601:
	cmpq $0x1,%r15
	je L_530166
L_371602:
	movb 0x0(%r15),%dl
	movq %r15,%r14
	movq 0x8(%r15),%r15
	movl %r13d,%ecx
	jmp L_371596
.p2align 0x4
L_530166:
L_371603:
	movl %r13d,0x18(%rbp)
L_371604:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_371474
L_371605:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x2C,%r14b
	je L_530172
	cmpb $0x7D,%r14b
	je L_530167
L_371474:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530167:
L_371655:
	cmpb $0x7D,%r14b
	jne L_371474
L_371656:
	movl 0x18(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530170
L_371657:
	decl %r15d
	movl %r15d,0x50(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_3684:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530169
.p2align 0x4,,0x7
L_371658:
	movl 0x50(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530168
L_371659:
	decl %r15d
	movl %r15d,0x50(%rbp)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_3684
.p2align 0x4
L_530168:
L_371660:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530169:
L_371661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371662
.p2align 0x4
.long 0x9A8
L_371662:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371658
.p2align 0x4
L_530170:
L_371638:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1490)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530172:
L_371606:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_371474
L_371607:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x7D,%r14b
	jne L_530177
L_371645:
	cmpb $0x7D,%r14b
	jne L_371474
L_371646:
	movl 0x18(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_371638
L_371647:
	decl %r15d
	movl %r15d,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_3683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530174
.p2align 0x4,,0x7
L_371648:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530173
L_371649:
	decl %r15d
	movl %r15d,0x20(%rbp)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_3683
.p2align 0x4
L_530173:
L_371650:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530174:
L_371651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371652
.p2align 0x4
.long 0x2940
L_371652:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371648
.p2align 0x4
L_530177:
L_371608:
	movq 0x20(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371609:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%r11b
	cmpb $0x39,%r11b
	ja L_371474
L_371610:
	cmpb $0x30,%r11b
	jb L_371474
L_371611:
	movzbl %r11b,%ecx
	subl $0x30,%ecx
	jo L_371593
L_371612:
	cmpq $0x1,%r14
	je L_530189
L_371613:
	movb 0x0(%r14),%dl
	movq %r14,%r15
	movq 0x8(%r14),%r14
	xchgq %r14,%r15
.p2align 0x4,,0x7
L_371614:
	cmpb $0x39,%dl
	ja finish_8
L_371615:
	cmpb $0x30,%dl
	jb finish_11
L_371616:
	movzbl %dl,%r13d
	subl $0x30,%r13d
	jo L_371593
L_371617:
	imull $0xA,%ecx
	jo L_371593
L_371618:
	addl %ecx,%r13d
	jo L_371593
L_371619:
	cmpq $0x1,%r15
	je L_530178
L_371620:
	movb 0x0(%r15),%dl
	movq %r15,%r14
	movq 0x8(%r15),%r15
	movl %r13d,%ecx
	jmp L_371614
.p2align 0x4
L_530178:
L_371621:
	movl %r13d,0x1C(%rbp)
finish_7:
	movl 0x18(%rbp),%r14d
	cmpl %r14d,0x1C(%rbp)
	jl L_371474
L_371623:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371624:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	cmpb $0x7D,0x0(%r15)
	jne L_371474
L_371625:
	cmpl $0x0,%r14d
	jl L_371638
L_371626:
	decl %r14d
	movl %r14d,0x58(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
loop_3682:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530181
.p2align 0x4,,0x7
L_371627:
	movl 0x58(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530179
L_371628:
	decl %r15d
	movl %r15d,0x58(%rbp)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	jmp loop_3682
.p2align 0x4
L_530179:
L_371629:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x1C(%rbp),%r14d
	subl 0x18(%rbp),%r14d
	jo L_530180
L_371630:
	movl %r14d,0x68(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_371631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp upper_0
.p2align 0x4
L_530180:
L_371593:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530181:
L_371635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371636
.p2align 0x4
.long 0x1561
L_371636:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_371627
.p2align 0x4
finish_11:
finish_8:
	movl %ecx,0x1C(%rbp)
	movq %r14,%r15
	jmp finish_7
.p2align 0x4
L_530189:
L_371642:
	movl %ecx,0x1C(%rbp)
	movq %r14,%r15
	jmp finish_7
.p2align 0x4
finish_13:
finish_9:
	movl %ecx,0x18(%rbp)
	movq %r14,%r15
	jmp L_371604
.p2align 0x4
L_530199:
L_371666:
	movl %ecx,0x18(%rbp)
	movq %r14,%r15
	jmp L_371604
.p2align 0x4
L_530201:
L_371587:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x1498)(%rip),%r11
	movq %r11,0x0(%r13)
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530202:
L_371586:
	movq $0x1B81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq $0x1B85,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x40(%rbp),%r10
	movq %r10,0x30(%rbp)
	movq %r11,%r15
	movq %r13,%r14
	jmp finish_1
.p2align 0x4
L_530203:
L_371585:
	movq $0x1B81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530204:
L_371484:
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530205:
L_371670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371671
.p2align 0x4
.long 0x2940
L_371671:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371483
.p2align 0x4
L_530206:
L_371675:
	movq %r15,%r11
	movq %r9,%r15
	movq %r14,%r9
	movq %r8,%r14
	xchgq %r10,%r13
L_371542:
	movq %r11,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq %r10,0x30(%rbp)
	movq %r13,%r15
	movq %r9,%r14
	jmp finish_1
.p2align 0x4
L_530207:
L_371480:
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_530208
L_371481:
	movq %r10,0x28(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_371482
.p2align 0x4
L_530208:
L_371672:
	movq $0x1,%r8
	movq $0x1,%rsp
	movq %r15,%r11
	movq %r8,%r15
	movq %r14,%r9
	movq %r10,%r14
	movq %r13,%r10
	movq %rsp,%r13
	jmp L_371542
.p2align 0x4
L_530209:
L_372071:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz x_1146
L_372072:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x18(%rbp)
.p2align 0x4,,0x7
finishC_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530210
.p2align 0x4,,0x7
L_371479:
	movzbq 0x18(%rbp),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x1B89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	jmp finishR_0
.p2align 0x4
L_530210:
L_371676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_371677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371677
.p2align 0x4
.long 0x509
L_371677:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_371479
.p2align 0x4
L_530211:
L_371685:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_371474
L_371686:
	movq 0x8(%r14),%r13
	cmpb $0x5E,0x0(%r14)
	jne x_2260
L_372053:
	cmpq $0x1,%r13
	je L_371474
L_372054:
	movq 0x8(%r13),%r14
	movq %r14,%r11
	movb 0x0(%r13),%r10b
	cmpb $0x5D,%r10b
	je L_530415
x_1153:
	cmpq $0x1,%r13
	je L_371474
L_372055:
	cmpb $0x2D,%r10b
	je L_530412
L_372056:
	movq %r14,0x18(%rbp)
	movb %r10b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x40(%rbp)
L_371690:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530411
.p2align 0x4,,0x7
L_371691:
	movb 0x20(%rbp),%r14b
	cmpb $0x2D,%r14b
	je L_530408
	cmpb $0x5B,%r14b
	je L_530235
	cmpb $0x5D,%r14b
	je L_530214
L_371693:
	movq 0x18(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz x_1151
L_371696:
	movq 0x8(%r14),%r13
	cmpb $0x2D,0x0(%r14)
	jne x_1151
L_371698:
	movq %r13,%r15
	andq $0x3,%r15
	jnz x_2255
L_371699:
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,%r15
x_1152:
	movzbl 0x20(%rbp),%r14d
	movzbl %dl,%r13d
	movq $0x4113,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r13d,0x0(%r11)
	movl %r14d,0x4(%r11)
	addq $0x10,%r12
	movq $0x28BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
L_371700:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371701:
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x20(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_371690
.p2align 0x4
x_2255:
x_1151:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_371694:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371474
L_371695:
	movq %r15,0x38(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_371690
.p2align 0x4
L_530214:
L_372036:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_530234
L_372037:
	movq 0x8(%r13),%r15
	movq 0x48(%rbp),%r14
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_371706:
	incl %ecx
	cmpq $0x1,%r15
	je L_530215
L_371707:
	movq 0x8(%r15),%r15
	jmp L_371706
.p2align 0x4
L_530215:
L_371708:
	movq %r13,0x18(%rbp)
	movq %r14,0x38(%rbp)
L_371709:
	movslq %ecx,%r15
	movq %r15,0x48(%rbp)
	testq %r15,%r15
	jnz L_530232
L_371753:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_371713:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3685:
	cmpq 0x48(%rbp),%r15
	jnl L_530217
L_371747:
	cmpq $0x1,%r14
	je L_530216
L_371748:
	movq 0x8(%r14),%r13
	movq 0x50(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_3685
.p2align 0x4
L_530216:
L_371750:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530217:
L_371714:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530231
.p2align 0x4,,0x7
L_371715:
	movq 0x50(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x24(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_530228
L_371716:
	movq $0x4959,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x4955,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1B89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_530227
L_371717:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x30(%rbp)
L_371718:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530226
.p2align 0x4,,0x7
L_371719:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_530225
L_371721:
	decl %r15d
	jo L_371593
L_371722:
	movl %r15d,0x50(%rbp)
	movq $0x1,0x30(%rbp)
loop_3686:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530223
.p2align 0x4,,0x7
L_371723:
	movl 0x50(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530219
L_371724:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	cmpq 0x48(%rbp),%r13
	jnb L_530218
L_371726:
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movzbq 0x0(%r15,%r13,1),%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq $0x1B89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	jmp loop_3686
.p2align 0x4
L_530218:
L_371725:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530219:
L_371727:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_530220
L_371728:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_371718
.p2align 0x4
L_530220:
L_371729:
	movq %r14,%r15
L_371731:
	movq 0x38(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_371474
L_371732:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%dl
L_371733:
	cmpb $0x5D,%dl
	jne L_371474
L_371734:
	xchgq %r14,%r15
	jmp finishR_0
.p2align 0x4
L_530223:
L_371735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371736
.p2align 0x4
.long 0x5543
L_371736:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371723
.p2align 0x4
L_530225:
L_371720:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530226:
L_371737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371738
.p2align 0x4
.long 0x5E8
L_371738:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371719
.p2align 0x4
L_530227:
L_371739:
	xchgq %r14,%r15
	jmp L_371731
.p2align 0x4
L_530228:
L_371740:
	cmpq $0x1,0x30(%rbp)
	jne L_530230
L_371742:
	movq $0x4957,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_371743:
	movq 0x38(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_371474
L_371744:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%dl
	jmp L_371733
.p2align 0x4
L_530230:
L_371741:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x14D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530231:
L_371745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371746
.p2align 0x4
.long 0xBB4
L_371746:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371715
.p2align 0x4
L_530232:
L_371710:
	movq 0x48(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_530233
L_371711:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371712
.p2align 0x4
.long 0xC43
L_371712:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
	jmp L_371713
.p2align 0x4
L_530233:
L_371752:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530234:
L_372038:
	movq %r13,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_371709
.p2align 0x4
L_530235:
L_371755:
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz x_1151
L_371756:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
	cmpb $0x2D,%r11b
	je L_530407
	cmpb $0x2E,%r11b
	je L_530388
	cmpb $0x3A,%r11b
	je L_530236
	jmp x_1151
.p2align 0x4
L_530236:
L_371806:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371807:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r11b
	cmpb $0x61,%r11b
	je L_530363
	cmpb $0x62,%r11b
	je L_530356
	cmpb $0x63,%r11b
	je L_530342
	cmpb $0x64,%r11b
	je L_530328
	cmpb $0x67,%r11b
	je L_530314
	cmpb $0x6C,%r11b
	je L_530300
	cmpb $0x70,%r11b
	je L_530281
	cmpb $0x73,%r11b
	je L_530267
	cmpb $0x75,%r11b
	je L_530253
	cmpb $0x78,%r11b
	je L_530237
	jmp L_371474
.p2align 0x4
L_530237:
L_372013:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_372014:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x64,0x0(%r15)
	jne L_371474
L_372016:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_372017:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x69,0x0(%r11)
	jne L_371474
L_372019:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_372020:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x67,0x0(%r13)
	jne L_371474
L_372022:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_372023:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x69,0x0(%r11)
	jne L_371474
L_372025:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_372026:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x74,0x0(%r13)
	jne L_371474
L_372028:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_372029:
	movq 0x8(%r11),%r15
	cmpb $0x3A,0x0(%r11)
	jne L_371474
L_372031:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_372032:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_372033:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0xB,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_372034:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_372035:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530253:
L_371992:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371993:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x70,0x0(%r15)
	jne L_371474
L_371995:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371996:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x70,0x0(%r11)
	jne L_371474
L_371998:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371999:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x65,0x0(%r13)
	jne L_371474
L_372001:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_372002:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x72,0x0(%r11)
	jne L_371474
L_372004:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_372005:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371474
L_372007:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_372008:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_372009:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x3,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_372010:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_372011:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530267:
L_371971:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371972:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x70,0x0(%r15)
	jne L_371474
L_371974:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371975:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x61,0x0(%r11)
	jne L_371474
L_371977:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371978:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x63,0x0(%r13)
	jne L_371474
L_371980:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371981:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x65,0x0(%r11)
	jne L_371474
L_371983:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371984:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371474
L_371986:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371987:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_371988:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x2,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371989:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_371990:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530281:
L_371941:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371942:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
	cmpb $0x72,%r11b
	je L_530287
	cmpb $0x75,%r11b
	je L_530282
	jmp L_371474
.p2align 0x4
L_530282:
L_371962:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371963:
	movq 0x8(%r13),%r15
	cmpb $0x6E,0x0(%r13)
	jne L_371474
L_371965:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371966:
	movq 0x8(%r15),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	cmpb $0x63,0x0(%r15)
	jne L_371474
L_371968:
	jmp L_371474
.p2align 0x4
L_530287:
L_371944:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371945:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x69,0x0(%r13)
	jne L_371474
L_371947:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371948:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x6E,0x0(%r11)
	jne L_371474
L_371950:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371951:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x74,0x0(%r13)
	jne L_371474
L_371953:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371954:
	movq 0x8(%r11),%r15
	cmpb $0x3A,0x0(%r11)
	jne L_371474
L_371956:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371957:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_371958:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0xA,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371959:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_371960:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530300:
L_371920:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371921:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x6F,0x0(%r15)
	jne L_371474
L_371923:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371924:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x77,0x0(%r11)
	jne L_371474
L_371926:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371927:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x65,0x0(%r13)
	jne L_371474
L_371929:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371930:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x72,0x0(%r11)
	jne L_371474
L_371932:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371933:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371474
L_371935:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371936:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_371937:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0xD,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371938:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_371939:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530314:
L_371899:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371900:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x72,0x0(%r15)
	jne L_371474
L_371902:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371903:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x61,0x0(%r11)
	jne L_371474
L_371905:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371906:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x70,0x0(%r13)
	jne L_371474
L_371908:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371909:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x68,0x0(%r11)
	jne L_371474
L_371911:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371912:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371474
L_371914:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371915:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_371916:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x5,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371917:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_371918:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530328:
L_371878:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371879:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x69,0x0(%r15)
	jne L_371474
L_371881:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371882:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x67,0x0(%r11)
	jne L_371474
L_371884:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371885:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x69,0x0(%r13)
	jne L_371474
L_371887:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371888:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x74,0x0(%r11)
	jne L_371474
L_371890:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371891:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371474
L_371893:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371894:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_371895:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371896:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_371897:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530342:
L_371857:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371858:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x6E,0x0(%r15)
	jne L_371474
L_371860:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371861:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x74,0x0(%r11)
	jne L_371474
L_371863:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371864:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x72,0x0(%r13)
	jne L_371474
L_371866:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371867:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x6C,0x0(%r11)
	jne L_371474
L_371869:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371870:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371474
L_371872:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371873:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_371874:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x9,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371875:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_371876:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530356:
L_371845:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371846:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x6C,0x0(%r15)
	jne L_371474
L_371848:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371849:
	movq 0x8(%r11),%r15
	cmpb $0x61,0x0(%r11)
	jne L_371474
L_371851:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371852:
	movq 0x8(%r15),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	cmpb $0x6E,0x0(%r15)
	jne L_371474
L_371854:
	jmp L_371474
.p2align 0x4
L_530363:
L_371809:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371810:
	movq 0x8(%r15),%r13
	cmpb $0x6C,0x0(%r15)
	jne L_371474
L_371812:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371813:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r11b
	cmpb $0x6E,%r11b
	je L_530374
	cmpb $0x70,%r11b
	je L_530364
	jmp L_371474
.p2align 0x4
L_530364:
L_371830:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371831:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x68,0x0(%r15)
	jne L_371474
L_371833:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371834:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x61,0x0(%r11)
	jne L_371474
L_371836:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371837:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371474
L_371839:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371840:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_371841:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x6,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371842:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_371843:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530374:
L_371815:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371816:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x75,0x0(%r15)
	jne L_371474
L_371818:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371819:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x6D,0x0(%r11)
	jne L_371474
L_371821:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371822:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371474
L_371824:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371825:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371474
L_371826:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x7,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371827:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_371828:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530388:
L_371761:
	movq %r13,%r10
	andq $0x3,%r10
	jnz L_371474
L_371762:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq $0x1,0x48(%rbp)
L_371763:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530405
.p2align 0x4,,0x7
L_371764:
	movb 0x20(%rbp),%r15b
	cmpb $0x2E,%r15b
	je L_530390
L_371765:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
L_371766:
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371474
L_371767:
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movb %r14b,0x20(%rbp)
	jmp L_371763
.p2align 0x4
L_530390:
L_371768:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530404
L_371769:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movb %r13b,0x21(%rbp)
	movq $0x1,0x50(%rbp)
L_371770:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530403
.p2align 0x4,,0x7
L_371771:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x21(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530391
L_371772:
	movq %r15,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movb %r15b,0x21(%rbp)
	jmp L_371770
.p2align 0x4
L_530391:
L_371773:
	movq %r15,0x48(%rbp)
L_371774:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530402
L_371775:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_371776:
	incl %ecx
	cmpq $0x1,%r15
	je L_530392
L_371777:
	movq 0x8(%r15),%r15
	jmp L_371776
.p2align 0x4
L_530392:
L_371778:
L_371779:
	movslq %ecx,%r15
	movq %r15,0x50(%rbp)
	testq %r15,%r15
	jnz L_530400
L_371798:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_371783:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3687:
	cmpq 0x50(%rbp),%r15
	jnl L_530394
L_371794:
	cmpq $0x1,%r14
	je L_371750
L_371795:
	movq 0x8(%r14),%r13
	movq 0x58(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_3687
.p2align 0x4
L_530394:
L_371784:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530399
.p2align 0x4,,0x7
L_371785:
	movq 0x58(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	cmpb $0x2E,0x20(%rbp)
	jne L_371474
L_371787:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371474
L_371788:
	movq 0x8(%r14),%r13
	cmpb $0x5D,0x0(%r14)
	jne L_371474
L_371789:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
L_371790:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371474
L_371791:
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371690
.p2align 0x4
L_530399:
L_371792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371793
.p2align 0x4
.long 0x1878
L_371793:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_371785
.p2align 0x4
L_530400:
L_371780:
	movq 0x50(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_371752
L_371781:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371782
.p2align 0x4
.long 0x5544
L_371782:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	jmp L_371783
.p2align 0x4
L_530402:
L_371799:
	xorl %ecx,%ecx
	jmp L_371779
.p2align 0x4
L_530403:
L_371800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371801
.p2align 0x4
.long 0x2940
L_371801:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371771
.p2align 0x4
L_530404:
L_371802:
	movq $0x1,0x48(%rbp)
	jmp L_371774
.p2align 0x4
L_530405:
L_371803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371804
.p2align 0x4
.long 0x707
L_371804:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_371764
.p2align 0x4
L_530407:
L_371758:
	movq %r13,%r10
	andq $0x3,%r10
	jnz x_1151
L_371759:
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	xchgq %r13,%r15
	jmp x_1152
.p2align 0x4
L_530408:
L_371703:
	movq 0x18(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371474
L_371704:
	cmpb $0x5D,0x0(%r11)
	jne L_371474
L_371705:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2D,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	xorl %ecx,%ecx
	movq %r11,%r14
	jmp L_371706
.p2align 0x4
L_530411:
L_372039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_372040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372040
.p2align 0x4
.long 0x707
L_372040:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_371691
.p2align 0x4
L_530412:
L_372058:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371474
L_372059:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14C0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371690
.p2align 0x4
L_530415:
L_372061:
	cmpq $0x1,%r11
	je L_371474
L_372062:
	movq 0x8(%r11),%r14
	movb 0x0(%r11),%r13b
	cmpb $0x2D,%r13b
	je L_530416
L_372063:
	movq %r14,0x18(%rbp)
	movb %r13b,0x20(%rbp)
	movq %r11,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14C8)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371690
.p2align 0x4
L_530416:
L_372065:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371474
L_372066:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371690
.p2align 0x4
x_2260:
x_1149:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_371474
L_371687:
	movq 0x8(%r14),%r13
	cmpb $0x5D,0x0(%r14)
	jne x_2261
L_372045:
	cmpq $0x1,%r13
	je L_371474
L_372046:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%r11b
	cmpb $0x2D,%r11b
	je L_530420
L_372047:
	movq %r14,0x18(%rbp)
	movb %r11b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14C8)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371690
.p2align 0x4
L_530420:
L_372049:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371474
L_372050:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371690
.p2align 0x4
x_2261:
x_1150:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_371474
L_371688:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	cmpb $0x2D,%r11b
	je L_530423
L_371689:
	movb %r11b,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq %r13,0x18(%rbp)
	jmp L_371690
.p2align 0x4
L_530423:
L_372042:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371474
L_372043:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14C0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371690
.p2align 0x4
L_530428:
L_371684:
	movq (globalObjptr+0x14E0)(%rip),%r14
	movq 0x18(%rbp),%r13
	movq %r13,%r15
	jmp finishR_0
.p2align 0x4
L_530429:
L_371681:
	movq 0x18(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz x_1148
L_371682:
	movq 0x8(%r13),%r14
	cmpb $0x29,0x0(%r13)
	jne x_2262
L_371683:
	movq (globalObjptr+0x1498)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp finishR_0
.p2align 0x4
x_2262:
x_1148:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x318D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	jmp Re_0
.p2align 0x4
L_530430:
L_371679:
	movq $0x2,%r14
	movq 0x18(%rbp),%r13
	movq %r13,%r15
	jmp finishR_0
.p2align 0x4
L_530432:
L_372074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_372075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372075
.p2align 0x4
.long 0x5E6
L_372075:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371472
.p2align 0x4
L_530433:
L_372076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_372077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372077
.p2align 0x4
.long 0x5E6
L_372077:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371471
.p2align 0x4
L_530434:
L_372078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_372079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372079
.p2align 0x4
.long 0x5E6
L_372079:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371470
.p2align 0x4
L_530435:
L_372080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_372081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372081
.p2align 0x4
.long 0x967
L_372081:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371467
.p2align 0x4
.long 0x71F
L_371477:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x24(%rbp)
	jnz L_371474
L_371478:
	movb 0x20(%rbp),%r15b
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%rbp)
	movb %r15b,0x18(%rbp)
	jmp finishC_0
.p2align 0x4
.long 0x72F
L_371546:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E4
L_371493:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371494
L_371579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371580
.p2align 0x4
.long 0x5E7
L_371580:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371494:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x18C2,%r14
	je L_530445
L_371576:
	movq 0x0(%r15),%r14
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_530444
L_371577:
	movb 0x0(%r11),%dl
L_371497:
	cmpb $0x29,%dl
	je finish_2
	cmpb $0x7C,%dl
	je finish_15
L_371498:
	movq $0x3185,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r11,0x18(%rbp)
	jmp P_0
.p2align 0x4
finish_15:
finish_2:
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq %r13,%r15
finish_3:
	cmpq $0x1,%r15
	je L_530443
L_371499:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371500:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530442
.p2align 0x4,,0x7
L_371501:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_530438
L_371502:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_371500
.p2align 0x4
L_530438:
L_371504:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_530441
L_371505:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371506:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530440
.p2align 0x4,,0x7
L_371507:
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530439
L_371508:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_371506
.p2align 0x4
L_530439:
L_371510:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_371511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_12
.p2align 0x4
L_530440:
L_371569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371570
.p2align 0x4
.long 0x5EC
L_371570:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371507
.p2align 0x4
L_530441:
L_371571:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_371510
.p2align 0x4
L_530442:
L_371572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371573
.p2align 0x4
.long 0x5EC
L_371573:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371501
.p2align 0x4
L_530443:
L_371574:
	movq $0x1,%r15
	jmp L_371504
.p2align 0x4
L_530444:
L_371578:
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq %r13,%r15
	jmp finish_3
.p2align 0x4
L_530445:
L_371495:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r15)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r14)
	movq 0x18(%rbp),%r10
	cmpq $0x1,%r10
	je L_530446
L_371496:
	movb 0x0(%r10),%dl
	movq %r15,%r13
	movq %r14,%r15
	movq %r11,%r14
	jmp L_371497
.p2align 0x4
L_530446:
L_371575:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp finish_3
.p2align 0x4
.long 0x7B0
L_371631:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371632
L_371633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371634
.p2align 0x4
.long 0x450C
L_371634:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371632:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
.long 0x80D
L_371511:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371512
L_371567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371568
.p2align 0x4
.long 0x720
L_371568:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_371512:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x18C4,%r15
	je L_530457
L_371564:
	movq 0x0(%r14),%r11
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x18(%rbp),%r10
	cmpq $0x1,%r10
	je L_530456
L_371565:
	movq 0x8(%r10),%r15
	movb 0x0(%r10),%dl
L_371515:
	cmpb $0x29,%dl
	je finish_17
	cmpb $0x7C,%dl
	je L_530449
	jmp L_371474
.p2align 0x4
L_530449:
L_371562:
	movq %r15,0x20(%rbp)
	movq $0x3189,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r15,0x18(%rbp)
	addq $0x20,%r12
	jmp Br_0
.p2align 0x4
finish_17:
finish_4:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq %r13,%r15
finish_5:
	cmpq $0x1,%r15
	je L_530455
L_371516:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371517:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530454
.p2align 0x4,,0x7
L_371518:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_530450
L_371519:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_371517
.p2align 0x4
L_530450:
L_371521:
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_530453
L_371522:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371523:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530452
.p2align 0x4,,0x7
L_371524:
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530451
L_371525:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_371523
.p2align 0x4
L_530451:
L_371527:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_371528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_12
.p2align 0x4
L_530452:
L_371556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371557
.p2align 0x4
.long 0x5EC
L_371557:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371524
.p2align 0x4
L_530453:
L_371558:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_371527
.p2align 0x4
L_530454:
L_371559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371560
.p2align 0x4
.long 0x5EC
L_371560:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371518
.p2align 0x4
L_530455:
L_371561:
	movq $0x1,%r15
	jmp L_371521
.p2align 0x4
L_530456:
L_371566:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq %r13,%r15
	jmp finish_5
.p2align 0x4
L_530457:
L_371513:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x1B97,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x30(%rbp),%r9
	movq %r9,0x0(%r10)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r14)
	movq 0x18(%rbp),%r9
	cmpq $0x1,%r9
	je L_530458
L_371514:
	movq 0x8(%r9),%r15
	movb 0x0(%r9),%dl
	movq %r10,%r13
	jmp L_371515
.p2align 0x4
L_530458:
L_371563:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq %r10,%r15
	jmp finish_5
.p2align 0x4
.long 0x80D
L_371528:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371529
L_371554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371555
.p2align 0x4
.long 0x720
L_371555:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_371529:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_530465
L_371530:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
L_371531:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_371474
L_371532:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpb $0x29,0x0(%r15)
	jne L_371474
L_371533:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371534
L_371550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371551
.p2align 0x4
.long 0x4B8
L_371551:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_371534:
	movq $0x1B83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371535
.p2align 0x4
.long 0x289A
L_371535:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3681:
	cmpq $0x1,%r15
	jnl L_530460
L_371549:
	incq %r15
	jmp loop_3681
.p2align 0x4
L_530460:
L_371536:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371537
L_371547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371548
.p2align 0x4
.long 0x5542
L_371548:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_371537:
	movq 0x28(%rbp),%r15
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_371538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_12
.p2align 0x4
L_530465:
L_371552:
	cmpq $0x1,0x18(%rbp)
	jne L_371474
L_371553:
	movq $0x1B99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x843
L_371538:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x18C0,%r13
	je L_530469
L_371543:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_530468
L_371544:
	movq %r11,0x30(%rbp)
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq %r10,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	jmp L_371482
.p2align 0x4
L_530468:
L_371545:
	movq 0x18(%rbp),%r9
	xchgq %r11,%r15
	xchgq %r10,%r14
	xchgq %r10,%r11
	jmp L_371542
.p2align 0x4
L_530469:
L_371539:
	movq 0x0(%r14),%r13
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_530470
L_371540:
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	jmp L_371482
.p2align 0x4
L_530470:
L_371541:
	movq $0x1,%r8
	movq $0x1,%rsp
	movq 0x18(%rbp),%r9
	movq %r14,%r11
	movq %r13,%r14
	movq %rsp,%r13
	movq %r15,%r10
	movq %r8,%r15
	jmp L_371542
.text
.p2align 0x4
.globl concat_12
.hidden concat_12
concat_12:
L_372084:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_372085
L_372128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_372129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372129
.p2align 0x4
.long 0x452
L_372129:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_372085:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_530486
L_372086:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_372087:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530485
.p2align 0x4,,0x7
L_372088:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF3D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x299D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_530471
L_372089:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_372087
.p2align 0x4
L_530471:
L_372090:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_372091:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530484
.p2align 0x4,,0x7
L_372092:
	movq $0x299D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_530472
L_372093:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_372091
.p2align 0x4
L_530472:
L_372094:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_530479
L_372095:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_372096:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_530473
L_372097:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_372096
.p2align 0x4
L_530473:
L_372098:
	testq %r15,%r15
	jz L_530478
L_372099:
	cmpq $0x7FFFFFFF,%r15
	ja L_530477
L_372100:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_372101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372101
.p2align 0x4
.long 0x49C
L_372101:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_372102:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3688:
	cmpq 0x18(%rbp),%r14
	jnl L_530476
	movq %r15,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
loop_3689:
	cmpq 0x0(%r11),%r13
	jl L_530475
L_372105:
	cmpq $0x1,%r10
	je L_530474
L_372106:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r15,%r11
	jmp loop_3689
.p2align 0x4
L_530474:
L_372107:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530475:
L_372108:
	incq %r13
	incq %r14
	movq (localObjptr+0x0)(%rip),%r15
	jmp loop_3688
.p2align 0x4
L_530476:
L_372103:
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530477:
L_372110:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530478:
L_372111:
	movq (globalObjptr+0x610)(%rip),%r14
	xchgq %r14,%r15
	jmp L_372102
.p2align 0x4
L_530479:
L_372112:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jne L_530480
L_372122:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530480:
L_372113:
	movq 0x10(%rbp),%rdx
	testq %rdx,%rdx
	jz L_530483
L_372114:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372110
L_372115:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372116
.p2align 0x4
.long 0x47B
L_372116:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,%r15
L_372117:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3690:
	cmpq 0x10(%rbp),%r14
	jnl L_530481
L_372119:
	incq %r14
	jmp loop_3690
.p2align 0x4
L_530481:
L_372118:
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530483:
L_372121:
	movq (globalObjptr+0x618)(%rip),%r15
	jmp L_372117
.p2align 0x4
L_530484:
L_372123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372124
.p2align 0x4
.long 0x45C
L_372124:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_372092
.p2align 0x4
L_530485:
L_372125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372126
.p2align 0x4
.long 0x45C
L_372126:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_372088
.p2align 0x4
L_530486:
L_372127:
	movq (globalObjptr+0x620)(%rip),%r14
	movq $0xF3B,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl upper_0
.hidden upper_0
upper_0:
L_372130:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_372131
L_372138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_372139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372139
.p2align 0x4
.long 0x495
L_372139:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_372131:
	cmpl $0x0,0x0(%rbp)
	jg L_530488
L_372132:
	movq (globalObjptr+0x1498)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530488:
L_372133:
	movl 0x0(%rbp),%r15d
	decl %r15d
	movl %r15d,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_372134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp upper_0
.p2align 0x4
.long 0x522
L_372134:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372135
L_372136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372137
.p2align 0x4
.long 0x4E9
L_372137:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_372135:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1498)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1209
.hidden x_1209
x_1209:
L_372140:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_372141
L_372896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372897
.p2align 0x4
.long 0x453
L_372897:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_372141:
	movq (globalObjptr+0x1478)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_372142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4794
.p2align 0x4
.long 0x1160
L_372142:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r13
	je L_530524
L_372143:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372144:
	incl %ecx
	jo L_372145
L_372146:
	cmpq $0x1,%r15
	je L_530492
L_372147:
	movq 0x8(%r15),%r15
	jmp L_372144
.p2align 0x4
L_530492:
L_372148:
L_372149:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_530522
L_372150:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372151:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_372152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372152
.p2align 0x4
.long 0x79A
L_372152:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_372153:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3691:
	cmpq 0x18(%rbp),%r15
	jnl L_530494
L_372890:
	cmpq $0x1,%r14
	je L_530493
L_372891:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3691
.p2align 0x4
L_530493:
L_372516:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530494:
L_372154:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372155
L_372888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_372889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372889
.p2align 0x4
.long 0x343E
L_372889:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_372155:
	movq 0x30(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x20(%rbp),%r15d
	incl %r15d
	movl %r15d,0x18(%rbp)
	jo L_530519
L_372156:
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x28(%rbp)
	movslq %r15d,%r14
	movq %r14,0x38(%rbp)
	cmpq $0x0,%r14
	jl L_372158
L_372157:
	imulq %r14,%r14
	movq %r14,0x40(%rbp)
	jo L_372158
L_372159:
	cmpq $0x7FFFFFFF,%r14
	ja L_372158
L_372160:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372161
L_372884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_372885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372885
.p2align 0x4
.long 0x5583
L_372885:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_372161:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAAB,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_372162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372162
.p2align 0x4
.long 0x5545
L_372162:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	movq $0xAAD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %rax,0x10(%r14)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3692:
	cmpq 0x38(%rbp),%r15
	jnl L_530500
L_372873:
	movq %r15,%r13
	incq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3749:
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	jnl L_530499
L_372875:
	movq %r14,%r10
	incq %r10
	cmpq %r11,%r15
	jnb L_372245
L_372877:
	cmpq %r11,%r14
	jnb L_372245
L_372879:
	movl %r15d,%r9d
	movl %r14d,%r8d
	movslq %r9d,%r14
	movslq %r8d,%r9
	cmpq %r11,%r14
	jnb L_372245
L_372881:
	cmpq %r11,%r9
	jnb L_530495
L_372883:
	imulq %r11,%r14
	addq %r9,%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq $0x1,0x0(%r11,%r14,8)
	movq %r10,%r14
	jmp loop_3749
.p2align 0x4
L_530495:
L_372245:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530499:
L_372874:
	movq %r13,%r15
	jmp loop_3692
.p2align 0x4
L_530500:
L_372163:
	movslq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x0,%r15
	jl L_372158
L_372164:
	imulq $0x100,%r15
	movq %r15,0x58(%rbp)
	jo L_372158
L_372165:
	cmpq $0x7FFFFFFF,%r15
	ja L_372158
L_372166:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372167
L_372869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_372870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372870
.p2align 0x4
.long 0x5582
L_372870:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_372167:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_372168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372168
.p2align 0x4
.long 0x5546
L_372168:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq $0xAAF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x20,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x100,0x8(%r13)
	movq %rax,0x10(%r13)
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3693:
	cmpq 0x50(%rbp),%r15
	jnl L_530506
L_372858:
	movq %r15,%r11
	incq %r11
	xorq %r10,%r10
	movq %r14,%r13
	movq %r10,%r14
.p2align 0x4,,0x7
loop_3748:
	cmpq $0x100,%r14
	jnl L_530505
L_372860:
	movq %r14,%r10
	incq %r10
	movq 0x50(%rbp),%r9
	cmpq %r9,%r15
	jnb L_372245
L_372862:
	cmpq $0x100,%r14
	jnb L_372245
L_372864:
	movl %r15d,%r8d
	movl %r14d,%esp
	movslq %r8d,%r14
	movslq %esp,%r8
	cmpq %r9,%r14
	jnb L_372245
L_372866:
	cmpq $0x100,%r8
	jnb L_372245
L_372868:
	salq $0x8,%r14
	addq %r14,%r8
	movl $0x0,0x0(%r13,%r8,4)
	movq %r10,%r14
	jmp loop_3748
.p2align 0x4
L_530505:
L_372859:
	movq %r11,%r15
	movq %r13,%r14
	jmp loop_3693
.p2align 0x4
L_530506:
L_372169:
	movq 0x50(%rbp),%rdx
	testq %rdx,%rdx
	jz L_530510
L_372170:
	cmpq $0x7FFFFFFF,%rdx
	ja L_530509
L_372171:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAAB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_372172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372172
.p2align 0x4
.long 0x5547
L_372172:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_372173:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3694:
	cmpq 0x50(%rbp),%r15
	jnl L_530507
L_372855:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3694
.p2align 0x4
L_530507:
L_372174:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372175
L_372853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_372854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372854
.p2align 0x4
.long 0x5581
L_372854:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_372175:
	movq 0x60(%rbp),%r15
	movq $0x191D,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xC71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xC71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x191F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl 0x20(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r11)
	movq %r11,0xC0(%rbp)
	movq 0x0(%rbp),%r11
	movq %r11,0x80(%rbp)
	movq %r13,0x88(%rbp)
	movl %r10d,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r9,0xB0(%rbp)
	movq %r14,0xB8(%rbp)
	addq $0x80,%rbp
	leaq (L_372176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4795
.p2align 0x4
L_530509:
L_372158:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530510:
L_372857:
	movq (globalObjptr+0x1488)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_372173
.p2align 0x4
L_530519:
L_372145:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530522:
L_372894:
	movq (globalObjptr+0x1480)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_372153
.p2align 0x4
L_530524:
L_372895:
	xorl %ecx,%ecx
	jmp L_372149
.p2align 0x4
.long 0x5548
L_372176:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	cmpq $0x1,%r13
	je L_530600
L_372177:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372178:
	incl %ecx
	jo L_372145
L_372179:
	cmpq $0x1,%r15
	je L_530525
L_372180:
	movq 0x8(%r15),%r15
	jmp L_372178
.p2align 0x4
L_530525:
L_372181:
L_372182:
	movslq %ecx,%rdx
	movq %rdx,0x70(%rbp)
	testq %rdx,%rdx
	jz L_530598
L_372183:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372184:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_372185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372185
.p2align 0x4
.long 0x5549
L_372185:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_372186:
	movq $0x0,0x90(%rbp)
.p2align 0x4,,0x7
loop_3695:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530596
.p2align 0x4,,0x7
L_372187:
	movq 0x70(%rbp),%r13
	cmpq %r13,0x90(%rbp)
	jnl L_530529
L_372840:
	movq 0x80(%rbp),%r13
	cmpq $0x1,%r13
	je L_372516
L_372841:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	movslq %r11d,%r15
	movq 0x78(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_372245
L_372843:
	movq 0x0(%r13,%r15,8),%r10
	cmpq $0x1,%r10
	je L_530526
L_372844:
	movq $0x28CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
L_372845:
	movq %r14,0x80(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_3695
.p2align 0x4
L_530526:
L_372846:
	movq $0x1,%r15
	jmp L_372845
.p2align 0x4
L_530529:
L_372188:
	movq 0x88(%rbp),%r15
	movq $0x1921,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x70(%rbp)
	cmpq %rdx,%r14
	jne L_372190
L_372191:
	testq %rdx,%rdx
	jz L_530594
L_372192:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372193:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372194
.p2align 0x4
.long 0x554A
L_372194:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x80(%rbp)
L_372195:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3696:
	cmpq 0x70(%rbp),%r15
	jnl L_530532
L_372833:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x88(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_530531
L_372834:
	incl %ecx
	jo L_372145
L_372835:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_372836:
	movq 0x80(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_3696
.p2align 0x4
L_530531:
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_372836
.p2align 0x4
L_530532:
L_372196:
	movq 0x80(%rbp),%r15
	movq $0x1921,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x70(%rbp)
	testq %rdx,%rdx
	jz L_530592
L_372197:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372198:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_372199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372199
.p2align 0x4
.long 0x5549
L_372199:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_372200:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3697:
	cmpq 0x70(%rbp),%r15
	jnl L_530536
.p2align 0x4,,0x7
loop_3747:
	movslq %ecx,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_530534
L_372829:
	incl %ecx
	jo L_372145
L_372830:
	jmp loop_3747
.p2align 0x4
L_530534:
L_372827:
	movq 0x8(%r11),%r14
	movl 0x0(%r11),%r13d
	incl %ecx
	jo L_372145
L_372828:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x88(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x8(%r9,%r11,1)
	salq $0x4,%r10
	movl %r13d,0x0(%r9,%r10,1)
	incq %r15
	jmp loop_3697
.p2align 0x4
L_530536:
L_372201:
	movq 0x88(%rbp),%r14
	movq $0x1923,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	je L_530590
L_372202:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372203:
	incl %ecx
	jo L_372145
L_372204:
	cmpq $0x1,%r15
	je L_530537
L_372205:
	movq 0x8(%r15),%r15
	jmp L_372203
.p2align 0x4
L_530537:
L_372206:
L_372207:
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_530588
L_372208:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372209:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372210
.p2align 0x4
.long 0x554B
L_372210:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x80(%rbp)
L_372211:
	movq $0x0,0x90(%rbp)
.p2align 0x4,,0x7
loop_3698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530586
.p2align 0x4,,0x7
L_372212:
	movq 0x68(%rbp),%r13
	cmpq %r13,0x90(%rbp)
	jnl L_530541
L_372813:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_372516
L_372814:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	movslq %r11d,%r15
	movq 0x60(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_372245
L_372816:
	movq 0x0(%r13,%r15,8),%r10
	cmpq $0x1,%r10
	je L_530538
L_372817:
	movq $0x28CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
L_372818:
	movq %r14,0x70(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_3698
.p2align 0x4
L_530538:
L_372819:
	movq $0x1,%r15
	jmp L_372818
.p2align 0x4
L_530541:
L_372213:
	movq 0x80(%rbp),%r15
	movq $0x1921,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	cmpq %rdx,%r14
	jne L_372190
L_372215:
	testq %rdx,%rdx
	jz L_530584
L_372216:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372217:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372218
.p2align 0x4
.long 0x554C
L_372218:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x70(%rbp)
L_372219:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3699:
	cmpq 0x68(%rbp),%r15
	jnl L_530544
L_372806:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_530543
L_372807:
	incl %ecx
	jo L_372145
L_372808:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_372809:
	movq 0x70(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_3699
.p2align 0x4
L_530543:
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_372809
.p2align 0x4
L_530544:
L_372220:
	movq 0x70(%rbp),%r15
	movq $0x1921,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_530582
L_372221:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372222:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372223
.p2align 0x4
.long 0x554B
L_372223:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x80(%rbp)
L_372224:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3700:
	cmpq 0x68(%rbp),%r15
	jnl L_530548
.p2align 0x4,,0x7
loop_3746:
	movslq %ecx,%r14
	movq 0x70(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_530546
L_372802:
	incl %ecx
	jo L_372145
L_372803:
	jmp loop_3746
.p2align 0x4
L_530546:
L_372800:
	movq 0x8(%r11),%r14
	movl 0x0(%r11),%r13d
	incl %ecx
	jo L_372145
L_372801:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x80(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x8(%r9,%r11,1)
	salq $0x4,%r10
	movl %r13d,0x0(%r9,%r10,1)
	incq %r15
	jmp loop_3700
.p2align 0x4
L_530548:
L_372225:
	movq 0x80(%rbp),%r15
	movq $0x1923,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_372190
L_372227:
	cmpl $0x0,%ecx
	jl L_372448
L_372228:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3701:
	cmpl %ecx,%ebx
	jnl L_530552
L_372790:
	movslq %ebx,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_372796
L_372791:
	movq 0x50(%rbp),%r14
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	jnb L_372245
L_372793:
	cmpq %r11,%r15
	jnb L_372245
L_372795:
	imulq %r14,%r11
	addq %r15,%r11
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
L_372796:
	incl %ebx
	jmp loop_3701
.p2align 0x4
L_530552:
L_372229:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372230:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372231
.p2align 0x4
.long 0x554D
L_372231:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3702:
	cmpq 0x38(%rbp),%r15
	jnl L_530553
L_372788:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3702
.p2align 0x4
L_530553:
L_372232:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372233
L_372786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372787
.p2align 0x4
.long 0x557E
L_372787:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372233:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_372190
L_372235:
	cmpl $0x0,%r13d
	jl L_372448
L_372236:
	movl $0x0,0x24(%rbp)
loop_3703:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_530574
L_372237:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_530573
L_372239:
	cmpl $0x0,%r13d
	jl L_530572
L_372240:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_3704:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530571
.p2align 0x4,,0x7
L_372241:
	movl 0x24(%rbp),%r15d
	cmpl 0x1C(%rbp),%r15d
	jnl L_530556
L_372771:
	movslq %r15d,%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_372775
L_372772:
	movq $0x28C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	cmpq 0x38(%rbp),%r14
	jnb L_372245
L_372774:
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
L_372775:
	incl 0x24(%rbp)
	jmp loop_3704
.p2align 0x4
L_530556:
L_372242:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_372247
L_372243:
	movq $0x28C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x8(%r13)
	movq 0x50(%rbp),%r14
	cmpq 0x38(%rbp),%r14
	jnb L_372245
L_372246:
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r14,8)
L_372247:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAAB,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372248
.p2align 0x4
.long 0x554E
L_372248:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3705:
	cmpq 0x38(%rbp),%r15
	jnl L_530557
L_372769:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3705
.p2align 0x4
L_530557:
L_372249:
	movq 0x38(%rbp),%r15
	imulq $0x100,%r15
	movq %r15,0x50(%rbp)
	jo L_372158
L_372250:
	cmpq $0x7FFFFFFF,%r15
	ja L_372158
L_372251:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372252
L_372766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372767
.p2align 0x4
.long 0x554F
L_372767:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372252:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAA5,%rcx
	movq 0x50(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372253
.p2align 0x4
.long 0x554F
L_372253:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x50(%rbp)
	movq $0xAA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x100,0x8(%r15)
	movq %rax,0x10(%r15)
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_3706:
	movq 0x68(%rbp),%r15
	cmpq 0x38(%rbp),%r15
	jnl L_530562
L_372724:
	incq %r15
	movq %r15,0x70(%rbp)
	movq $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_3742:
	cmpq $0x100,0x78(%rbp)
	jl L_530558
L_372725:
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp loop_3706
.p2align 0x4
L_530558:
L_372726:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372727
L_372764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372765
.p2align 0x4
.long 0x5577
L_372765:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372727:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	incq %r14
	movq %r14,0x80(%rbp)
	movq 0x68(%rbp),%r14
	cmpq 0x38(%rbp),%r14
	jnb L_372245
L_372729:
	cmpq $0x100,%r15
	jnb L_372245
L_372731:
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x24(%rbp)
	movq $0x3D0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl %r14d,0x0(%r15)
	movl %r13d,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530562:
L_372254:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372255
L_372722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372723
.p2align 0x4
.long 0x5575
L_372723:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372255:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x28(%rbp)
	movq $0xAC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq $0x100,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372256
.p2align 0x4
.long 0x5550
L_372256:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x50(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3707:
	cmpq $0x100,%r15
	jnl L_530563
L_372721:
	movq 0x50(%rbp),%r14
	movl $0xFFFFFFFF,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_3707
.p2align 0x4
L_530563:
L_372257:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372258
L_372719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372720
.p2align 0x4
.long 0x5553
L_372720:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372258:
	movq $0x3CF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x98(%rbp)
	movl $0x100,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530571:
L_372777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372778
.p2align 0x4
.long 0x557C
L_372778:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_372241
.p2align 0x4
L_530572:
L_372448:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530573:
L_372190:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530574:
L_372780:
	movslq 0x24(%rbp),%r15
	salq $0x4,%r15
	movq 0x80(%rbp),%r14
	movl 0x0(%r14,%r15,1),%r13d
	movq $0x3CFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530582:
L_372805:
	movq (globalObjptr+0x1470)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_372224
.p2align 0x4
L_530584:
L_372812:
	movq (globalObjptr+0x1468)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_372219
.p2align 0x4
L_530586:
L_372821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372822
.p2align 0x4
.long 0x557F
L_372822:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_372212
.p2align 0x4
L_530588:
L_372824:
	movq (globalObjptr+0x1460)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_372211
.p2align 0x4
L_530590:
L_372825:
	xorl %ecx,%ecx
	jmp L_372207
.p2align 0x4
L_530592:
L_372832:
	movq (globalObjptr+0x1470)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_372200
.p2align 0x4
L_530594:
L_372839:
	movq (globalObjptr+0x1468)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_372195
.p2align 0x4
L_530596:
L_372848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372849
.p2align 0x4
.long 0x5580
L_372849:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_372187
.p2align 0x4
L_530598:
L_372851:
	movq (globalObjptr+0x1460)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_372186
.p2align 0x4
L_530600:
L_372852:
	xorl %ecx,%ecx
	jmp L_372182
.p2align 0x4
.long 0x5576
L_372732:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %rdx,%r15
	jne L_372190
L_372734:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372735:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372736
.p2align 0x4
.long 0x5577
L_372736:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	movq $0x0,0xA0(%rbp)
.p2align 0x4,,0x7
loop_3743:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530610
.p2align 0x4,,0x7
L_372737:
	movq 0xA0(%rbp),%r14
	cmpq 0x78(%rbp),%r14
	jnl L_530603
L_372756:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	cmpq $0x1,%r11
	je L_530602
L_372757:
	movq $0x28CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movl 0x98(%rbp),%ecx
	incl %ecx
	jo L_372145
L_372758:
L_372759:
	movl %ecx,0x98(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_3743
.p2align 0x4
L_530602:
L_372760:
	movl 0x98(%rbp),%ecx
	movq $0x1,%r15
	jmp L_372759
.p2align 0x4
L_530603:
L_372738:
	movslq 0x98(%rbp),%rdx
	movq %rdx,0x78(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372739:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372740
.p2align 0x4
.long 0x5578
L_372740:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3744:
	cmpq 0x78(%rbp),%r15
	jnl L_530607
.p2align 0x4,,0x7
loop_3745:
	movslq %ecx,%r14
	movq 0x90(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_530605
L_372753:
	incl %ecx
	jo L_372145
L_372754:
	jmp loop_3745
.p2align 0x4
L_530605:
L_372751:
	movq 0x8(%r11),%r14
	movl 0x0(%r11),%r13d
	incl %ecx
	jo L_372145
L_372752:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x98(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x8(%r9,%r11,1)
	salq $0x4,%r10
	movl %r13d,0x0(%r9,%r10,1)
	incq %r15
	jmp loop_3744
.p2align 0x4
L_530607:
L_372741:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372742
L_372748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372749
.p2align 0x4
.long 0x557A
L_372749:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_372742:
	movq $0x3CFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	movl $0x0,0xB4(%rbp)
	addq $0xA8,%rbp
	leaq (L_372743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530610:
L_372761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372762
.p2align 0x4
.long 0x557B
L_372762:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_372737
.p2align 0x4
.long 0x5551
L_372259:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	movl %r14d,0x1C(%rbp)
	jo L_372145
L_372260:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E7,%rcx
	xorq %rdx,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372261
.p2align 0x4
.long 0x5552
L_372261:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x28(%rbp)
	movslq 0x1C(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x0,%r15
	jl L_372158
L_372262:
	movq 0x38(%rbp),%r14
	imulq %r15,%r14
	movq %r14,0x68(%rbp)
	jo L_372158
L_372263:
	cmpq $0x7FFFFFFF,%r14
	ja L_372158
L_372264:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372265
L_372715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372716
.p2align 0x4
.long 0x5553
L_372716:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372265:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAA5,%rcx
	movq 0x68(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372266
.p2align 0x4
.long 0x5553
L_372266:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x68(%rbp)
	movq $0xAA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %rax,0x10(%r14)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3708:
	cmpq 0x38(%rbp),%r15
	jnl L_530618
L_372704:
	movq %r15,%r13
	incq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3741:
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	jnl L_530617
L_372706:
	movq %r14,%r10
	incq %r10
	movq 0x38(%rbp),%r9
	cmpq %r9,%r15
	jnb L_372245
L_372708:
	cmpq %r11,%r14
	jnb L_372245
L_372710:
	movl %r15d,%r8d
	movl %r14d,%esp
	movslq %r8d,%r14
	movslq %esp,%r8
	cmpq %r9,%r14
	jnb L_372245
L_372712:
	cmpq %r11,%r8
	jnb L_372245
L_372714:
	imulq %r11,%r14
	addq %r8,%r14
	movq 0x68(%rbp),%r11
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r11,%r14,8)
	movq %r10,%r14
	jmp loop_3741
.p2align 0x4
L_530617:
L_372705:
	movq %r13,%r15
	jmp loop_3708
.p2align 0x4
L_530618:
L_372267:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372268
L_372702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372703
.p2align 0x4
.long 0x5574
L_372703:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372268:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_530619
L_372269:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_372270:
	movl 0x0(%r15),%r14d
	movl 0x4(%r15),%r13d
	movq $0x3D13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movl %r13d,0x4(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530619:
L_372275:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372276
.p2align 0x4
.long 0x5555
L_372276:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3709:
	cmpq 0x38(%rbp),%r15
	jnl L_530620
L_372698:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_3709
.p2align 0x4
L_530620:
L_372277:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1925,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372278
.p2align 0x4
.long 0x5555
L_372278:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3710:
	cmpq 0x38(%rbp),%r15
	jnl L_530621
L_372697:
	movq %r15,%r13
	movq %r15,%r11
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq $0x1,0x8(%r14,%r13,1)
	salq $0x4,%r11
	movl $0xFFFFFFFF,0x0(%r14,%r11,1)
	incq %r15
	jmp loop_3710
.p2align 0x4
L_530621:
L_372279:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1925,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372280
.p2align 0x4
.long 0x5555
L_372280:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3711:
	cmpq 0x38(%rbp),%r15
	jnl L_530622
L_372696:
	movq %r15,%r13
	movq %r15,%r11
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq $0x1,0x8(%r14,%r13,1)
	salq $0x4,%r11
	movl $0xFFFFFFFF,0x0(%r14,%r11,1)
	incq %r15
	jmp loop_3711
.p2align 0x4
L_530622:
L_372281:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372282
.p2align 0x4
.long 0x5555
L_372282:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3712:
	cmpq 0x38(%rbp),%r15
	jnl L_530623
L_372695:
	movq 0x28(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_3712
.p2align 0x4
L_530623:
L_372283:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372284
L_372693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372694
.p2align 0x4
.long 0x5572
L_372694:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372284:
	movq $0xAA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x20,%r12
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x60(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_372190
L_372286:
	cmpl $0x0,%r15d
	jl L_372448
L_372287:
	movl $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_3713:
	movl 0x78(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_530629
L_372678:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x88(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x7C(%rbp)
	movq 0x8(%r13,%r15,1),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_372190
L_372680:
	testl %r9d,%r9d
	jz L_372687
L_372681:
	movslq %r11d,%r15
	movq %r15,0x80(%rbp)
	cmpq 0x38(%rbp),%r15
	jnb L_372245
L_372683:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jz L_530624
.p2align 0x4,,0x7
L_372687:
	incl 0x78(%rbp)
	jmp loop_3713
.p2align 0x4
L_530624:
L_372684:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372685
L_372688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372689
.p2align 0x4
.long 0x556F
L_372689:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372685:
	movq 0x28(%rbp),%r15
	movq 0x80(%rbp),%r14
	movl $0x1,0x0(%r15,%r14,4)
	movq $0x3D15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x7C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530629:
L_372288:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372289
L_372676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372677
.p2align 0x4
.long 0x556F
L_372677:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372289:
	movq $0x3D17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x557D
L_372781:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372782
L_372783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372784
.p2align 0x4
.long 0x557E
L_372784:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372782:
	incl 0x24(%rbp)
	jmp loop_3703
.p2align 0x4
.long 0x5579
L_372743:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movslq 0x1C(%rbp),%r15
	movslq 0x24(%rbp),%r14
	cmpq 0x38(%rbp),%r15
	jnb L_372245
L_372745:
	cmpq $0x100,%r14
	jnb L_372245
L_372747:
	salq $0x8,%r15
	addq %r14,%r15
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	jmp loop_3742
.p2align 0x4
.long 0x5554
L_372271:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372272
L_372699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372700
.p2align 0x4
.long 0x5573
L_372700:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372272:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_372275
L_372273:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_372270
.p2align 0x4
.long 0x5571
L_372686:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_372687
.p2align 0x4
.long 0x5556
L_372290:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372291
L_372674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372675
.p2align 0x4
.long 0x5570
L_372675:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372291:
	movq $0x1927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1929,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372292
.p2align 0x4
.long 0x5557
L_372292:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3714:
	cmpq 0x38(%rbp),%r15
	jnl L_530645
L_372673:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3714
.p2align 0x4
L_530645:
L_372293:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372294
L_372671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372672
.p2align 0x4
.long 0x556F
L_372672:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372294:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372295:
	incl %ecx
	jo L_372145
L_372296:
	cmpq $0x1,%r15
	je L_530646
L_372297:
	movq 0x8(%r15),%r15
	jmp L_372295
.p2align 0x4
L_530646:
L_372298:
	movslq %ecx,%rdx
	movq %rdx,0x80(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372299:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372300
.p2align 0x4
.long 0x5558
L_372300:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3715:
	cmpq 0x80(%rbp),%r15
	jnl L_530648
L_372667:
	cmpq $0x1,%r14
	je L_372516
L_372668:
	movq 0x8(%r14),%r13
	movq 0x90(%rbp),%r11
	movl 0x0(%r14),%r10d
	movl %r10d,0x0(%r11,%r15,4)
	incq %r15
	movq %r13,%r14
	jmp loop_3715
.p2align 0x4
L_530648:
L_372301:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372302
L_372665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372666
.p2align 0x4
.long 0x556E
L_372666:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_372302:
	movq 0x80(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_372190
L_372304:
	cmpl $0x0,%ecx
	jg L_530797
L_372305:
	movl $0x0,0x18(%rbp)
x_1154:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_372314
L_372306:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_372307:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ebx
	movslq %ebx,%r14
	cmpq %r11,%r14
	jne L_372190
L_372309:
	cmpl %ebx,%ecx
	jne L_530792
L_372650:
	xorl %ebx,%ebx
	movq %r13,%r14
.p2align 0x4,,0x7
loop_3740:
	cmpl %ecx,%ebx
	je L_530791
L_372651:
	movslq %ebx,%r13
	cmpq 0x80(%rbp),%r13
	jnb L_372245
L_372653:
	movq 0x90(%rbp),%r11
	movl 0x0(%r14,%r13,4),%r10d
	cmpl %r10d,0x0(%r11,%r13,4)
	jne L_530650
L_372660:
	incl %ebx
	jo L_372145
L_372661:
	jmp loop_3740
.p2align 0x4
L_530650:
L_372654:
	cmpq $0x1,%r15
	je L_530651
L_372655:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372307
.p2align 0x4
L_530651:
L_372656:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372314
L_372658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372659
.p2align 0x4
.long 0x556E
L_372659:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_372314:
	movq $0xFD1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq $0x28C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl $0x0,0x90(%rbp)
L_372315:
	movq (globalObjptr+0xF30)(%rip),%r15
	movq $0xF71,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14EB,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372316
.p2align 0x4
.long 0x5559
L_372316:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3716:
	cmpq $0x1,%r15
	jnl L_530652
L_372647:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq (globalObjptr+0xF30)(%rip),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3716
.p2align 0x4
L_530652:
L_372317:
	movl 0x24(%rbp),%r15d
	decl %r15d
	movl %r15d,0x94(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
loop_3717:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530788
.p2align 0x4,,0x7
L_372318:
	movl 0x94(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530653
L_372319:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x94(%rbp)
	salq $0x4,%r13
	movq 0x88(%rbp),%r15
	movl 0x0(%r15,%r13,1),%r14d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	jmp loop_3717
.p2align 0x4
L_530653:
L_372320:
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_530787
L_372321:
	movl 0x0(%r14),%r15d
	movl %r15d,0x94(%rbp)
	movq $0x1,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
.p2align 0x4,,0x7
L_372322:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530786
.p2align 0x4,,0x7
L_372323:
	movl 0x94(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_530781
L_372630:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_530654
L_372631:
	movq %r14,0xA0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x94(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	jmp L_372322
.p2align 0x4
L_530654:
L_372632:
	movl 0x94(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
.p2align 0x4,,0x7
L_372633:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530780
.p2align 0x4,,0x7
L_372634:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_530655
L_372635:
	movq %r15,0x98(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movl %r15d,0x20(%rbp)
	jmp L_372633
.p2align 0x4
L_530655:
L_372637:
	cmpq $0x1,%r15
	je L_530779
L_372638:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372332:
	incl %ecx
	jo L_372145
L_372333:
	cmpq $0x1,%r15
	je L_530656
L_372334:
	movq 0x8(%r15),%r15
	jmp L_372332
.p2align 0x4
L_530656:
L_372335:
	movq %r14,0x78(%rbp)
L_372336:
	movslq %ecx,%rdx
	movq %rdx,0x98(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372337:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372338
.p2align 0x4
.long 0x555A
L_372338:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3718:
	cmpq 0x98(%rbp),%r15
	jnl L_530658
L_372622:
	cmpq $0x1,%r14
	je L_372516
L_372623:
	movq 0x8(%r14),%r13
	movq 0xA0(%rbp),%r11
	movl 0x0(%r14),%r10d
	movl %r10d,0x0(%r11,%r15,4)
	incq %r15
	movq %r13,%r14
	jmp loop_3718
.p2align 0x4
L_530658:
L_372339:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372340
L_372620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372621
.p2align 0x4
.long 0x555B
L_372621:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_372340:
	movq 0x98(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	movq %r14,0x78(%rbp)
	cmpq %r15,%r14
	jne L_372190
L_372342:
	cmpl %ecx,0x18(%rbp)
	jnl x_1155
L_372619:
	movl %ecx,0x18(%rbp)
x_1155:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_372352
L_372344:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_372345:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r10,%r11
	jne L_372190
L_372347:
	cmpl %ebx,%ecx
	jne L_530770
L_372605:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3739:
	cmpl %ecx,%ebx
	je L_530769
L_372606:
	movslq %ebx,%r11
	cmpq 0x98(%rbp),%r11
	jnb L_372245
L_372608:
	movq 0xA0(%rbp),%r10
	movl 0x0(%r10,%r11,4),%r9d
	cmpl %r9d,0x0(%r13,%r11,4)
	jne L_530660
L_372615:
	incl %ebx
	jo L_372145
L_372616:
	jmp loop_3739
.p2align 0x4
L_530660:
L_372609:
	cmpq $0x1,%r15
	je L_530661
L_372610:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372345
.p2align 0x4
L_530661:
L_372611:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372352
L_372613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372614
.p2align 0x4
.long 0x555B
L_372614:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_372352:
	movl 0x90(%rbp),%r15d
	incl %r15d
	jo L_372145
L_372353:
	movq $0xFD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xFD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x10(%r13)
	movl %r15d,0x20(%rbp)
	movl %r15d,0x90(%rbp)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x28C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
L_372354:
	movq 0x78(%rbp),%rdx
	testq %rdx,%rdx
	jz L_530765
L_372355:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372356:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14EB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372357
.p2align 0x4
.long 0x555B
L_372357:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0xA8(%rbp)
L_372358:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3719:
	cmpq 0x78(%rbp),%r15
	jnl L_530667
L_372590:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x98(%rbp),%r13
	jnb L_372245
L_372592:
	movq 0xA0(%rbp),%r14
	movl 0x0(%r14,%r13,4),%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3738:
	cmpl 0x24(%rbp),%ecx
	je L_530665
L_372593:
	movslq %ecx,%r14
	cmpq 0x60(%rbp),%r14
	jnb L_372245
L_372595:
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x88(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	salq $0x4,%r14
	cmpl 0x0(%r11,%r14,1),%ebx
	je L_530663
L_372596:
	incl %ecx
	jo L_372145
L_372597:
	jmp loop_3738
.p2align 0x4
L_530663:
	movq %r10,%r14
L_372599:
	movq 0xA8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3719
.p2align 0x4
L_530665:
L_372600:
	movq (globalObjptr+0xF30)(%rip),%r14
	movq $0xF71,0xFFFFFFFFFFFFFFF8(%r14)
	jmp L_372599
.p2align 0x4
L_530667:
L_372359:
	movq 0xA8(%rbp),%r14
	movq $0xFDB,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_530763
L_372360:
	movl 0x18(%rbp),%r13d
	movl %r13d,0x60(%rbp)
	movl 0x20(%rbp),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_372361:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x58(%rbp),%r15
	testq %r15,%r15
	jnz L_530761
L_372588:
	movq (globalObjptr+0x14A8)(%rip),%r15
	movq %r15,0x88(%rbp)
.p2align 0x4,,0x7
L_372365:
	movq $0x0,0x98(%rbp)
.p2align 0x4,,0x7
loop_3720:
	movq 0x58(%rbp),%r14
	cmpq %r14,0x98(%rbp)
	jl L_530708
L_372366:
	movq 0x88(%rbp),%r14
	movq $0xFD5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_530668
L_372367:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_372361
.p2align 0x4
L_530668:
L_372368:
	movl 0x18(%rbp),%ecx
	movl 0x60(%rbp),%r15d
	movl %r15d,0x18(%rbp)
L_372369:
	incl %ecx
	jo L_372145
L_372370:
	movq (globalObjptr+0x14B8)(%rip),%r15
	movq $0x16F9,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%r15
	movq %r15,0x20(%rbp)
	cmpq $0x0,%r15
	jl L_372158
L_372371:
	movq 0x58(%rbp),%r14
	imulq %r14,%r15
	movq %r15,0x28(%rbp)
	jo L_372158
L_372372:
	cmpq $0x7FFFFFFF,%r15
	ja L_372158
L_372373:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372374
L_372464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372465
.p2align 0x4
.long 0x555D
L_372465:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_372374:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC3,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372375
.p2align 0x4
.long 0x555D
L_372375:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x28(%rbp)
	movq $0xAC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %rax,0x10(%r14)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3721:
	cmpq 0x20(%rbp),%r15
	jnl L_530674
L_372453:
	movq %r15,%r13
	incq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3728:
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	jnl L_530673
L_372455:
	movq %r14,%r10
	incq %r10
	movq 0x20(%rbp),%r9
	cmpq %r9,%r15
	jnb L_372245
L_372457:
	cmpq %r11,%r14
	jnb L_372245
L_372459:
	movl %r15d,%r8d
	movl %r14d,%esp
	movslq %r8d,%r14
	movslq %esp,%r8
	cmpq %r9,%r14
	jnb L_372245
L_372461:
	cmpq %r11,%r8
	jnb L_372245
L_372463:
	imulq %r11,%r14
	addq %r14,%r8
	movq %r8,%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r14
	movq (globalObjptr+0x14B8)(%rip),%r9
	movq %r9,0x8(%r11,%r14,1)
	salq $0x4,%r8
	movl $0xFFFFFFFF,0x0(%r11,%r8,1)
	movq %r10,%r14
	jmp loop_3728
.p2align 0x4
L_530673:
L_372454:
	movq %r13,%r15
	jmp loop_3721
.p2align 0x4
L_530674:
L_372376:
	movq 0x20(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372377:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xFD9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372378
.p2align 0x4
.long 0x555E
L_372378:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3722:
	cmpq 0x20(%rbp),%r15
	jnl L_530675
L_372451:
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3722
.p2align 0x4
L_530675:
L_372379:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_372401
L_372380:
	movq 0x8(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_372381:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,(localWord32+0x0)(%rip)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_530700
L_372382:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r15
	cmpq %r15,%r13
	jne L_372190
L_372384:
	cmpl $0x0,%ebx
	jl L_372448
L_372385:
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_3723:
	cmpl %ebx,%ecx
	jnl L_530678
L_372442:
	movslq %ecx,%r13
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x8(%r15,%r11,1),%r10
	movq %r13,%r11
	salq $0x4,%r11
	movl 0x0(%r15,%r11,1),%r9d
	movslq (localWord32+0x0)(%rip),%r11
	cmpq 0x20(%rbp),%r11
	jnb L_372245
L_372444:
	movq 0x58(%rbp),%r8
	cmpq %r8,%r13
	jnb L_372245
L_372446:
	imulq %r8,%r11
	addq %r11,%r13
	movq %r13,%r11
	movq 0x28(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r11
	movq %r10,0x8(%r8,%r11,1)
	salq $0x4,%r13
	movl %r9d,0x0(%r8,%r13,1)
	incl %ecx
	jmp loop_3723
.p2align 0x4
L_530678:
L_372386:
	movslq (localWord32+0x0)(%rip),%r15
	movq %r15,0x70(%rbp)
	cmpq 0x20(%rbp),%r15
	jnb L_372245
L_372388:
	movq 0x68(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
L_372389:
	movq %r11,%r15
	andq $0x3,%r15
	jnz x_1156
L_372440:
	movl 0x0(%r11),%r15d
	testl %r15d,%r15d
	jz L_372437
x_1156:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_372190
L_372391:
	movl $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_3724:
	movl 0x78(%rbp),%r13d
	cmpl %ecx,%r13d
	je L_530693
L_372392:
	movslq %r13d,%r11
	cmpq %r15,%r11
	jnb L_372245
L_372394:
	movslq 0x0(%r14,%r11,4),%r10
	cmpq 0x38(%rbp),%r10
	jnb L_372245
L_372396:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r10,8),%r9
	movq %r9,0x80(%rbp)
	cmpq $0x1,%r9
	jne L_530680
L_372434:
	incl %r13d
	jo L_372145
L_372435:
	movl %r13d,0x78(%rbp)
	jmp loop_3724
.p2align 0x4
L_530680:
L_372397:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530690
.p2align 0x4,,0x7
L_372398:
	movq 0x80(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r15
	movq $0x28C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x78(%rbp),%r13d
	movl %r13d,0x4(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x70(%rbp),%r11
	movq %r14,0x0(%r13,%r11,8)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530681
L_372399:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_372381
.p2align 0x4
L_530681:
L_372401:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x20(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372402
.p2align 0x4
.long 0x555F
L_372402:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x28(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3725:
	movq 0x38(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq %r14,%r15
	jnl L_530685
L_372415:
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r15
	cmpq %r14,%r15
	jnb L_372245
L_372417:
	movq 0x68(%rbp),%r14
	cmpq $0x1,0x0(%r14,%r15,8)
	je L_530682
L_372418:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372419:
	movq 0x28(%rbp),%r15
	movq 0x38(%rbp),%r14
	movl %ecx,0x0(%r15,%r14,4)
	incq %r14
	movq %r14,0x38(%rbp)
	jmp loop_3725
.p2align 0x4
L_530682:
L_372420:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372421
L_372430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372431
.p2align 0x4
.long 0x5560
L_372431:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_372421:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3CF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0xB8(%rbp)
	leaq L_372423(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movl $0x0,0xC4(%rbp)
	addq $0xB8,%rbp
	leaq (L_372422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530685:
L_372403:
	movslq 0x18(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x7FFFFFFF,%r14
	ja L_372158
L_372404:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xFD7,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372405
.p2align 0x4
.long 0x5560
L_372405:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3726:
	cmpq 0x20(%rbp),%r15
	jnl L_530686
L_372413:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3726
.p2align 0x4
L_530686:
L_372406:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xFD7,%rcx
	movq 0x20(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372407
.p2align 0x4
.long 0x5561
L_372407:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3727:
	cmpq 0x20(%rbp),%r15
	jnl L_530687
L_372412:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3727
.p2align 0x4
L_530687:
L_372408:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372409
L_372410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372411
.p2align 0x4
.long 0x5562
L_372411:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_372409:
	movq $0x28C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x40(%r15)
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530690:
L_372432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372433
.p2align 0x4
.long 0x5564
L_372433:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_372398
.p2align 0x4
L_530693:
L_372437:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_372401
L_372438:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_372381
.p2align 0x4
L_530700:
L_372449:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530708:
L_372468:
	movq 0x98(%rbp),%r15
	movl %r15d,0x64(%rbp)
	movq 0x38(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	movq %r14,0xA0(%rbp)
	cmpq %r14,%r15
	jne L_372190
L_372470:
	cmpl $0x0,%ecx
	jl L_372448
L_372471:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3729:
	cmpl %ecx,%ebx
	jnl L_530709
L_372585:
	movslq %ebx,%r15
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incl %ebx
	jmp loop_3729
.p2align 0x4
L_530709:
L_372472:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x94(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_372190
L_372474:
	cmpl $0x0,%r13d
	jl L_372448
L_372475:
	movl $0x0,0xB0(%rbp)
.p2align 0x4,,0x7
loop_3730:
	movl 0xB0(%rbp),%r15d
	cmpl 0x94(%rbp),%r15d
	jnl L_530718
L_372565:
	movslq %r15d,%r14
	movq 0x78(%rbp),%r15
	movl 0x0(%r15,%r14,4),%r13d
	movl %r13d,0xB4(%rbp)
	movslq %r13d,%r15
	movslq 0x64(%rbp),%r14
	cmpq 0x38(%rbp),%r15
	jnb L_372245
L_372567:
	movq 0x58(%rbp),%r13
	cmpq %r13,%r14
	jnb L_372245
L_372569:
	imulq %r13,%r15
	addq %r14,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0xC0(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_372190
L_372571:
	cmpl $0x0,%r14d
	jl L_372448
L_372572:
	movl $0x0,0xC4(%rbp)
loop_3737:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530713
.p2align 0x4,,0x7
L_372573:
	movl 0xC0(%rbp),%r15d
	cmpl %r15d,0xC4(%rbp)
	jl L_530710
L_372574:
	incl 0xB0(%rbp)
	jmp loop_3730
.p2align 0x4
L_530710:
L_372575:
	movslq 0xC4(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xB8(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	salq $0x4,%r15
	movl 0x0(%r13,%r15,1),%r14d
	movslq %r14d,%r15
	cmpq 0x38(%rbp),%r15
	jnb L_372245
L_372577:
	movq 0x70(%rbp),%r13
	cmpq $0x1,0x0(%r13,%r15,8)
	jne L_372579
L_372580:
	movq $0x28C7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movl %r14d,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r10)
	movl 0xB4(%rbp),%r14d
	movl %r14d,0x4(%r10)
	movl $0x0,0xC(%r10)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13,%r15,8)
L_372579:
	incl 0xC4(%rbp)
	jmp loop_3737
.p2align 0x4
L_530713:
L_372581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_372582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372582
.p2align 0x4
.long 0x556B
L_372582:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_372573
.p2align 0x4
L_530718:
L_372476:
	movq 0xA0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372477:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1929,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372478
.p2align 0x4
.long 0x5565
L_372478:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xB0(%rbp)
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3731:
	cmpq 0xA0(%rbp),%r15
	jnl L_530721
L_372559:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x70(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_530720
L_372560:
	incl %ecx
	jo L_372145
L_372561:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_372562:
	movq 0xB0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_3731
.p2align 0x4
L_530720:
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_372562
.p2align 0x4
L_530721:
L_372479:
	movslq %ecx,%rdx
	movq %rdx,0xA0(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372480:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x192B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_372481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372481
.p2align 0x4
.long 0x5566
L_372481:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xB8(%rbp)
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3732:
	cmpq 0xA0(%rbp),%r15
	jnl L_530725
.p2align 0x4,,0x7
loop_3736:
	movslq %ecx,%r14
	movq 0xB0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_530723
L_372556:
	incl %ecx
	jo L_372145
L_372557:
	jmp loop_3736
.p2align 0x4
L_530723:
L_372554:
	movl 0x8(%r11),%r14d
	movl 0x4(%r11),%r13d
	movl 0x0(%r11),%r10d
	movq 0x10(%r11),%r9
	incl %ecx
	jo L_372145
L_372555:
	movq %r15,%r11
	movq %r15,%r8
	movq %r15,%rsp
	movq %r15,%rsi
	imulq $0x18,%r11
	movq 0xB8(%rbp),%rdi
	movl %r14d,0x0(%rdi,%r11,1)
	imulq $0x18,%r8
	movl %r13d,0x4(%rdi,%r8,1)
	imulq $0x18,%rsp
	movq %rsp,%rax
	movl %r10d,0x8(%rdi,%rax,1)
	movq %rdi,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	imulq $0x18,%rsi
	movq %r9,0x10(%rdi,%rsi,1)
	incq %r15
	jmp loop_3732
.p2align 0x4
L_530725:
L_372482:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %r15,%rdx
	jne L_372190
L_372484:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372485:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_372486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372486
.p2align 0x4
.long 0x5567
L_372486:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xA0(%rbp)
	movq $0x1,0xC0(%rbp)
	movq $0x0,0xC8(%rbp)
.p2align 0x4,,0x7
loop_3733:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530752
.p2align 0x4,,0x7
L_372487:
	movq 0xC8(%rbp),%r15
	cmpq 0xB0(%rbp),%r15
	jnl L_530730
L_372539:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	movq %r15,%r11
	movq %r15,%r10
	imulq $0x18,%r14
	movq 0xB8(%rbp),%r9
	movl 0x0(%r9,%r14,1),%ecx
	imulq $0x18,%r11
	movl 0x4(%r9,%r11,1),%r8d
	imulq $0x18,%r10
	movl 0x8(%r9,%r10,1),%r11d
	imulq $0x18,%r15
	movq 0x10(%r9,%r15,1),%r14
	movslq %ecx,%r15
	movq 0x38(%rbp),%r10
	cmpq %r10,%r15
	jnb L_372245
L_372541:
	movq 0x28(%rbp),%r9
	movl 0x0(%r9,%r15,4),%esp
	testl %esp,%esp
	jz L_530728
L_372544:
	movslq %r8d,%r15
	cmpq %r10,%r15
	jnb L_372245
L_372546:
	movl 0x0(%r9,%r15,4),%r10d
	testl %r10d,%r10d
	jz L_530726
L_372549:
	movq $0x1B93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movl %r13d,0x4(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r15,%r14
L_372548:
	movq $0x28CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
L_372543:
	movq 0xA0(%rbp),%r14
	movq 0xC8(%rbp),%r13
	movl %ecx,0x0(%r14,%r13,4)
	movq %r15,0xC0(%rbp)
	incq %r13
	movq %r13,0xC8(%rbp)
	jmp loop_3733
.p2align 0x4
L_530726:
L_372547:
	movq $0x1B91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,%r14
	jmp L_372548
.p2align 0x4
L_530728:
L_372542:
	movq 0xC0(%rbp),%r15
	jmp L_372543
.p2align 0x4
L_530730:
L_372488:
	movq 0xB0(%rbp),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_372190
L_372490:
	cmpl %ecx,0x60(%rbp)
	jnl x_1157
L_372538:
	movl %ecx,0x60(%rbp)
x_1157:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_372500
L_372492:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_372493:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r10,%r11
	jne L_372190
L_372495:
	cmpl %ebx,%ecx
	jne L_530746
L_372522:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3735:
	cmpl %ecx,%ebx
	je L_530744
L_372523:
	movslq %ebx,%r11
	cmpq 0xB0(%rbp),%r11
	jnb L_372245
L_372525:
	movq 0xA0(%rbp),%r10
	movl 0x0(%r13,%r11,4),%r9d
	cmpl %r9d,0x0(%r10,%r11,4)
	jne L_530732
L_372532:
	incl %ebx
	jo L_372145
L_372533:
	jmp loop_3735
.p2align 0x4
L_530732:
L_372526:
	cmpq $0x1,%r15
	je L_530733
L_372527:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372493
.p2align 0x4
L_530733:
L_372528:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372500
L_372530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_372531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372531
.p2align 0x4
.long 0x5569
L_372531:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_372500:
	movl 0x18(%rbp),%ecx
	incl %ecx
	jo L_372145
L_372501:
	movq $0xFD1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x28C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq $0x28C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_530740
L_372502:
	movq 0x8(%r13),%r11
	movl %ecx,(localWord32+0x4)(%rip)
	xorl %ebx,%ebx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_372503:
	incl %ebx
	jo L_372145
L_372504:
	cmpq $0x1,%r15
	je L_530734
L_372505:
	movq 0x8(%r15),%r15
	jmp L_372503
.p2align 0x4
L_530734:
L_372506:
	movq %r14,0x20(%rbp)
	movl %ecx,0x18(%rbp)
	movl (localWord32+0x4)(%rip),%r15d
	movl %r15d,0x64(%rbp)
	movl %ebx,%ecx
L_372507:
	movslq %ecx,%rdx
	movq %rdx,0xA0(%rbp)
	testq %rdx,%rdx
	jz L_530738
L_372508:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372509:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14ED,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_372510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372510
.p2align 0x4
.long 0x5568
L_372510:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,%r15
L_372511:
	movq 0xC0(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3734:
	cmpq 0xA0(%rbp),%r14
	jnl L_530736
L_372513:
	cmpq $0x1,%r13
	je L_372516
L_372514:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3734
.p2align 0x4
L_530736:
L_372512:
	movq $0x16F9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	movq %r13,%r15
	salq $0x4,%r15
	movl 0x64(%rbp),%r11d
	movl %r11d,0x0(%r14,%r15,1)
	incq %r13
	movq %r13,0x98(%rbp)
	jmp loop_3720
.p2align 0x4
L_530738:
L_372518:
	movq (globalObjptr+0x14B0)(%rip),%r15
	jmp L_372511
.p2align 0x4
L_530740:
L_372519:
	movq %r15,0x20(%rbp)
	movl %ecx,0x18(%rbp)
	movl %ecx,0x64(%rbp)
	xorl %ecx,%ecx
	jmp L_372507
.p2align 0x4
L_530744:
L_372534:
	movl 0x0(%r14),%r13d
	movq 0xC0(%rbp),%r11
	cmpq $0x1,%r11
	je L_530745
L_372535:
	movl %r13d,(localWord32+0x4)(%rip)
	movq 0x8(%r11),%r15
	movq 0x20(%rbp),%r14
	xorl %ebx,%ebx
	movl 0x18(%rbp),%ecx
	jmp L_372503
.p2align 0x4
L_530745:
L_372536:
	movl %r13d,0x64(%rbp)
	xorl %ecx,%ecx
	jmp L_372507
.p2align 0x4
L_530746:
L_372496:
	cmpq $0x1,%r15
	je L_530747
L_372497:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372493
.p2align 0x4
L_530747:
L_372498:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372500
L_372520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_372521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372521
.p2align 0x4
.long 0x5569
L_372521:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_372500
.p2align 0x4
L_530752:
L_372550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_372551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372551
.p2align 0x4
.long 0x556A
L_372551:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_372487
.p2align 0x4
L_530761:
L_372362:
	movq 0x58(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_372158
L_372363:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372364
.p2align 0x4
.long 0x555C
L_372364:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x88(%rbp)
	jmp L_372365
.p2align 0x4
L_530763:
L_372589:
	movl 0x20(%rbp),%ecx
	jmp L_372369
.p2align 0x4
L_530765:
L_372602:
	movq (globalObjptr+0x14A0)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_372358
.p2align 0x4
L_530769:
L_372617:
	movl 0x90(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x90(%rbp)
	jmp L_372354
.p2align 0x4
L_530770:
L_372348:
	cmpq $0x1,%r15
	je L_530771
L_372349:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372345
.p2align 0x4
L_530771:
L_372350:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372352
L_372603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372604
.p2align 0x4
.long 0x555B
L_372604:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_372352
.p2align 0x4
L_530779:
L_372639:
	movq %r15,0x78(%rbp)
	xorl %ecx,%ecx
	jmp L_372336
.p2align 0x4
L_530780:
L_372640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372641
.p2align 0x4
.long 0x556C
L_372641:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_372634
.p2align 0x4
L_530781:
L_372324:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xA0(%rbp),%r13
	cmpq $0x1,%r13
	je L_530785
L_372325:
	movq %r14,0x98(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x78(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x20(%rbp)
.p2align 0x4,,0x7
L_372326:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530784
.p2align 0x4,,0x7
L_372327:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_530782
L_372328:
	movq %r15,0x98(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movl %r15d,0x20(%rbp)
	jmp L_372326
.p2align 0x4
L_530782:
L_372330:
	cmpq $0x1,%r15
	je L_530783
L_372331:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_372332
.p2align 0x4
L_530783:
L_372626:
	movq %r15,0x78(%rbp)
	xorl %ecx,%ecx
	jmp L_372336
.p2align 0x4
L_530784:
L_372627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372628
.p2align 0x4
.long 0x556C
L_372628:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_372327
.p2align 0x4
L_530785:
	movq %r14,%r15
	jmp L_372330
.p2align 0x4
L_530786:
L_372642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372643
.p2align 0x4
.long 0x556D
L_372643:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_372323
.p2align 0x4
L_530787:
L_372644:
	movq 0x78(%rbp),%r13
	movq %r13,%r15
	jmp L_372637
.p2align 0x4
L_530788:
L_372645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372646
.p2align 0x4
.long 0x556C
L_372646:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_372318
.p2align 0x4
L_530791:
L_372662:
	movq $0x1,0x80(%rbp)
	movl $0xFFFFFFFF,0x90(%rbp)
	jmp L_372315
.p2align 0x4
L_530792:
L_372310:
	cmpq $0x1,%r15
	je L_530793
L_372311:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372307
.p2align 0x4
L_530793:
L_372312:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372314
L_372648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372649
.p2align 0x4
.long 0x556E
L_372649:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_372314
.p2align 0x4
L_530797:
L_372664:
	movl %ecx,0x18(%rbp)
	jmp x_1154
.p2align 0x4
.long 0x5563
L_372422:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl $0x1,%ecx
	jmp L_372419
.p2align 0x4
.long 0x72F
L_372423:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
L_372424:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_372425
L_372426:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC9D,%r14
	jne L_530805
L_372427:
	movl 0x0(%r15),%r14d
	movq 0x48(%rbp),%r13
	cmpq %r13,0x8(%r15)
	je L_530804
L_372428:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530804:
	movl %r14d,%ecx
	jmp L_372419
.p2align 0x4
L_530805:
L_372425:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
