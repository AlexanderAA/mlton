/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:19:28 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl sextdFromInt64_0
.hidden sextdFromInt64_0
sextdFromInt64_0:
L_10187:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10188
L_10210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10211
.p2align 0x4
.long 0x454
L_10211:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_10188:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	sarq $0x3E,%r14
	jz L_10208
L_10189:
	cmpq $0xFFFFFFFFFFFFFFFF,%r14
	je L_376909
L_10190:
	cmpq $0x0,%r15
	jl L_376908
L_10191:
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x8)(%rip),%r15
	movq %r15,0x0(%rbp)
.p2align 0x4,,0x7
loop_173:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_376907
.p2align 0x4,,0x7
L_10192:
	movq 0x10(%rbp),%r15
	testq %r15,%r15
	jz L_376904
L_10193:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	incq %r13
	jo L_376903
L_10195:
	movq $0x5B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x8(%rbp)
	movq $0x29A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x0,0x10(%rbp)
	jmp loop_173
.p2align 0x4
L_376903:
L_10194:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376904:
L_10196:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16E7,%rcx
	movq 0x8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10197
.p2align 0x4
.long 0x452
L_10197:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_376906
L_10198:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %rax,%r15
.p2align 0x4,,0x7
L_10199:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x0(%r15,%r11,8)
	cmpq $0x1,%r13
	je L_376905
L_10200:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_10199
.p2align 0x4
L_376905:
L_10202:
	movq $0xD,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376906:
	movq %rax,%r15
	jmp L_10202
.p2align 0x4
L_376907:
L_10204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10205
.p2align 0x4
.long 0x453
L_10205:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10192
.p2align 0x4
L_376908:
L_10206:
	negq %r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x18)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp loop_173
.p2align 0x4
L_376909:
L_10208:
	movq 0x0(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl div_0
.hidden div_0
div_0:
L_10212:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10213
L_10232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10233
.p2align 0x4
.long 0x454
L_10233:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_10213:
	movl 0x4(%rbp),%eax
	cmpl $0x0,%eax
	jl L_376915
L_10214:
	movl 0x0(%rbp),%r15d
	cmpl $0x0,%r15d
	jg L_376914
L_10215:
	cmpl $0x0,%r15d
	jnl L_376913
L_10218:
	testl %eax,%eax
	jz L_376912
L_10219:
	decl %eax
	cltd
	idivl %r15d
	decl %eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376912:
L_10220:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376913:
L_10217:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376914:
L_10221:
	cltd
	idivl %r15d
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376915:
L_10222:
	movl 0x0(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_376917
L_10223:
	cmpl $0x0,%r15d
	jng L_10217
L_10225:
	incl %eax
	cltd
	idivl %r15d
	decl %eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376917:
L_10226:
	cmpl $0x80000000,%eax
	jne L_10228
L_10229:
	cmpl $0xFFFFFFFF,%r15d
	jne L_376918
L_10231:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376918:
L_10228:
	movl 0x4(%rbp),%eax
	cltd
	idivl 0x0(%rbp)
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl unfoldi_0
.hidden unfoldi_0
unfoldi_0:
L_10234:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10235
L_10337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10338
.p2align 0x4
.long 0x458
L_10338:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10235:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_376966
L_10236:
	cmpq $0x7FFFFFFF,%rdx
	ja L_376965
L_10237:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10238
.p2align 0x4
.long 0x453
L_10238:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_10239:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_174:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_376964
L_10241:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0xF,%r13
	cmpq $0x1,%r13
	je L_10327
	cmpq $0x2,%r13
	je L_376962
	cmpq $0x3,%r13
	je L_376961
	cmpq $0x5,%r13
	je L_10331
	cmpq $0x6,%r13
	je L_376959
	cmpq $0x7,%r13
	je L_376958
	cmpq $0x9,%r13
	je L_376957
L_10242:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1FB6,%r13
	je L_376952
	cmpq $0x1FB7,%r13
	je L_376943
	cmpq $0x1FB8,%r13
	je L_376941
	cmpq $0x1FB9,%r13
	je L_376938
	cmpq $0x1FBA,%r13
	je L_376935
	cmpq $0x1FBB,%r13
	je L_376930
	cmpq $0x1FBC,%r13
	je L_376925
L_10243:
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	cmpl 0x0(%r15),%r11d
	je L_376924
L_10244:
	incl %r11d
	jo L_10245
L_10246:
	movl %r11d,0x0(%r13)
x_16:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movl 0x0(%r15),%eax
	movl %eax,%r14d
	xchgl %r14d,%eax
	movl $0x3E,%ebx
	xorl %edx,%edx
	divl %ebx
	cmpl $0x0,%edx
	jl L_376922
L_10247:
	movslq %edx,%r13
	cmpq $0x3E,%r13
	jnb L_376921
L_10250:
	movq (globalObjptr+0xDBF8)(%rip),%r11
	movb 0x0(%r11,%r13,1),%r10b
	movl %r14d,%eax
	movl $0x3E,%ebx
	xorl %edx,%edx
	divl %ebx
	movl %eax,0x0(%r15)
	movb %r10b,%dl
L_10251:
	movq 0x8(%rbp),%r15
	movq 0x18(%rbp),%r14
	movb %dl,0x0(%r15,%r14,1)
	incq %r14
	movq %r14,0x18(%rbp)
	jmp loop_174
.p2align 0x4
L_376921:
L_10249:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376922:
L_10245:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376924:
L_10253:
	movq (globalObjptr+0x4E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	imull $0x19660D,%r14d
	addl $0x3C6EF35F,%r14d
	movl %r14d,0x0(%r15)
	movq (globalObjptr+0x4E0)(%rip),%r15
	movl %r14d,0x0(%r15)
	movl $0x1,0x0(%r13)
	jmp x_16
.p2align 0x4
L_376925:
L_10317:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_10249
L_10319:
	movb 0x0(%r13,%r15,1),%r11b
	testl %r14d,%r14d
	jnz L_376928
L_10321:
	cmpb $0x61,%r11b
	jb L_376927
L_10322:
	cmpb $0x7A,%r11b
	ja L_376926
L_10323:
	movzbl %r11b,%r15d
	addl $0xFFFFFFE0,%r15d
	movb %r15b,%dl
	jmp L_10251
.p2align 0x4
L_376926:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376927:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376928:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376930:
L_10308:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_10249
L_10310:
	movb 0x0(%r13,%r15,1),%r11b
	testl %r14d,%r14d
	jnz L_376933
L_10312:
	cmpb $0x61,%r11b
	jb L_376932
L_10313:
	cmpb $0x7A,%r11b
	ja L_376931
L_10314:
	movzbl %r11b,%r15d
	addl $0xFFFFFFE0,%r15d
	movb %r15b,%dl
	jmp L_10251
.p2align 0x4
L_376931:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376932:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376933:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376935:
L_10304:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r11
	subl %r14d,%r13d
	jo L_10245
L_10305:
	movslq %r13d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_10249
L_10307:
	movb 0x0(%r11,%r15,1),%dl
	jmp L_10251
.p2align 0x4
L_376938:
L_10300:
	movl 0xC(%r15),%r13d
	movl 0x8(%r15),%r11d
	movq 0x0(%r15),%r10
	addl %r14d,%r13d
	jo L_10245
L_10301:
	cmpl %r11d,%r13d
	jnl L_376939
L_10303:
	movslq %r13d,%r15
	movb 0x0(%r10,%r15,1),%dl
	jmp L_10251
.p2align 0x4
L_376939:
L_10298:
	movb $0x30,%dl
	jmp L_10251
.p2align 0x4
L_376941:
L_10296:
	movq 0x0(%r15),%r13
	cmpl 0x8(%r15),%r14d
	jnl L_10298
L_10299:
	movslq %r14d,%r15
	movb 0x0(%r13,%r15,1),%dl
	jmp L_10251
.p2align 0x4
L_376943:
L_10263:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_10249
L_10265:
	movq 0x0(%r13,%r15,8),%r14
	movq 0x18(%r11),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r11),%r13
	movq %r14,%r15
	andq $0x1,%r15
	andq $0x1,%r15
	jz L_376949
L_10266:
	cmpq $0x1,%r14
	jl L_376948
	movq %r14,%r15
L_10268:
	movb $0x0,0x28(%rbp)
.p2align 0x4,,0x7
L_10269:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r15
	jne L_376947
L_10286:
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_376945
L_10287:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
x_17:
	cmpl $0xFF,%ecx
	ja L_376944
L_10280:
	movb %cl,%dl
	jmp L_10251
.p2align 0x4
L_376944:
L_10281:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376945:
L_10288:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_10283:
	negl %ecx
	jo L_10245
L_10284:
	jmp x_17
.p2align 0x4
L_376947:
L_10270:
	movq %r15,0x20(%rbp)
	movl $0x1,0x2C(%rbp)
	movl $0x0,0x38(%rbp)
next_8:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x5,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_10271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_376948:
	movq %r14,%r15
	movq %r13,%r14
L_10290:
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_10291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_376949:
L_10292:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10293:
	cmpl $0x0,%eax
	jl L_376950
	movq %r14,%r15
	jmp L_10268
.p2align 0x4
L_376950:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_10290
.p2align 0x4
L_376952:
L_10254:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_10249
L_10256:
	movb 0x0(%r13,%r15,1),%r11b
	testl %r14d,%r14d
	jnz L_376955
L_10258:
	cmpb $0x61,%r11b
	jb L_376954
L_10259:
	cmpb $0x7A,%r11b
	ja L_376953
L_10260:
	movzbl %r11b,%r15d
	addl $0xFFFFFFE0,%r15d
	movb %r15b,%dl
	jmp L_10251
.p2align 0x4
L_376953:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376954:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376955:
	movb %r11b,%dl
	jmp L_10251
.p2align 0x4
L_376957:
L_10334:
	shrq $0x4,%r15
	movb %r15b,%dl
	jmp L_10251
.p2align 0x4
L_376958:
L_10333:
	shrq $0x4,%r15
	movb %r15b,%dl
	jmp L_10251
.p2align 0x4
L_376959:
L_10331:
	xorb %dl,%dl
	jmp L_10251
.p2align 0x4
L_376961:
L_10329:
	movq (globalObjptr+0x498)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376962:
L_10327:
	movb $0xA,%dl
	jmp L_10251
.p2align 0x4
L_376964:
L_10240:
	movq 0x8(%rbp),%r14
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376965:
L_10335:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376966:
L_10336:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_10239
.p2align 0x4
.long 0x455
L_10271:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x5,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_10272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x457
L_10291:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	movq %r15,0x28(%rbp)
	movb $0x1,0x28(%rbp)
	movq %r14,%r15
	jmp L_10269
.p2align 0x4
.long 0x456
L_10272:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_376972
L_10273:
	movl 0x38(%rbp),%ecx
	addl 0x2C(%rbp),%ecx
	jo L_10245
L_10275:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_376969
L_10276:
	movl 0x2C(%rbp),%r14d
	addl %r14d,%r14d
	jo L_10245
L_10277:
	movl %r14d,0x2C(%rbp)
	movl %ecx,0x38(%rbp)
	movq %r15,0x20(%rbp)
	jmp next_8
.p2align 0x4
L_376969:
L_10278:
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_10283
	jmp x_17
.p2align 0x4
L_376972:
L_10285:
	movl 0x38(%rbp),%ecx
	jmp L_10275
.text
.p2align 0x4
.globl bigDiv_0
.hidden bigDiv_0
bigDiv_0:
L_10339:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10401
L_10340:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_376992
L_10341:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_376989
L_10342:
	cmpq $0x1,%r15
	jl L_376980
L_10344:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %cl
	movzbl %cl,%ecx
	je L_376978
L_10345:
	cmpq $0x1,%r15
	jg L_376977
L_10347:
	testl %ecx,%ecx
	jnz L_376975
L_10348:
	cmpq $0x1,0x0(%rbp)
	jl L_376973
L_10350:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376973:
L_10352:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_376974
L_10353:
	movq $0x3,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_10354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_376974:
L_10356:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376975:
L_10357:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10358:
	cmpl $0x0,%eax
	jl L_10352
	jmp L_10350
.p2align 0x4
L_376977:
L_10362:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_376978:
L_10363:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_10364:
	cmpl $0x0,%eax
	jg L_10362
	movl %ebx,%ecx
	jmp L_10347
.p2align 0x4
L_376980:
L_10368:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %al
	movzbl %al,%eax
	movl %eax,0x10(%rbp)
	je L_376986
L_10369:
	cmpq $0x1,%r15
	jl L_376985
L_10371:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_376982
L_10372:
	cmpq $0x1,0x0(%rbp)
	jng L_10350
L_10375:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x3,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_10376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_376982:
L_10378:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10379
L_10383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10384
.p2align 0x4
.long 0x45B
L_10384:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10379:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10380:
	cmpl $0x0,%eax
	jg L_10375
	jmp L_10350
.p2align 0x4
L_376985:
L_10386:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_376986:
L_10387:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10388
L_10392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10393
.p2align 0x4
.long 0x45B
L_10393:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10388:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10389:
	cmpl $0x0,%eax
	jl L_10386
	jmp L_10371
.p2align 0x4
L_376989:
L_10394:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10395
L_10399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10400
.p2align 0x4
.long 0x45B
L_10400:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10395:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10396:
	cmpl $0x0,%eax
	jl L_10368
	jmp L_10344
.p2align 0x4
L_376992:
L_10401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10402
.p2align 0x4
.long 0x45C
L_10402:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10341
.p2align 0x4
.long 0x459
L_10354:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_10355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x459
L_10376:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_10377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x45A
L_10355:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x3,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x45A
L_10377:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x3,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1186
.text
.p2align 0x4
.globl x_1186
.hidden x_1186
x_1186:
L_10403:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10404
L_10428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10429
.p2align 0x4
.long 0x45C
L_10429:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10404:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	movq 0x0(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz numLimbs_0
L_10405:
	sarq $0x1,%r15
	sarq $0x1,%r13
	subq %r13,%r15
	jo numLimbs_0
L_10424:
	movq %r15,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	xorq %r14,%r15
	cmpq $0x0,%r15
	jl numLimbs_3
L_10425:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
numLimbs_3:
numLimbs_0:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jz L_376999
L_10406:
	movq $0x1,%r15
L_10407:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_376997
L_10408:
	movq $0x1,%r14
L_10409:
	cmpq %r14,%r15
	jnl L_10411
L_10418:
	movq %r14,%r15
L_10411:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%rsi
	imulq %rsi,%r15
	movq %rsi,%r11
	addq $0x7,%r13
	addq %r13,%r11
	addq %r11,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x18(%rbp)
	addq $0x0,%r15
	jc L_376995
L_10413:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10414
L_10416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10417
.p2align 0x4
.long 0x45D
L_10417:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10414:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_sub
L_10415:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376995:
L_10412:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_376997:
L_10419:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_376998
L_10421:
	jmp L_10409
.p2align 0x4
L_376998:
L_10420:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376999:
L_10422:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_10420
L_10423:
	jmp L_10407
.text
.p2align 0x4
.globl bigQuot_0
.hidden bigQuot_0
bigQuot_0:
L_10430:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10431
L_10467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10468
.p2align 0x4
.long 0x45C
L_10468:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10431:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x8(%rbp),%r15
	movq %r15,%r11
	movq 0x0(%rbp),%r10
	andq %r10,%r11
	andq $0x1,%r11
	jz L_377007
L_10432:
	sarq $0x1,%r15
	sarq $0x1,%r10
	movq $0xC000000000000000,%r11
	cmpq %r11,%r15
	jne L_377006
L_10444:
	cmpq $0xFFFFFFFFFFFFFFFF,%r10
	jne L_377002
L_10446:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377002:
	movq %r15,%r14
	movq %r10,%r15
L_10434:
	testq %r15,%r15
	jz L_377005
L_10435:
	movq $0x8000000000000000,%r13
	cmpq %r13,%r14
	jne L_10437
L_10438:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_377003
L_10437:
	movq %r14,%rax
	cqto
	idivq %r15
	shlq $0x1,%rax
	orq $0x1,%rax
	movq %rax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377003:
L_10441:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377005:
L_10443:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377006:
	movq %r15,%r14
	movq %r10,%r15
	jmp L_10434
.p2align 0x4
L_377007:
L_10447:
	andq $0x1,%r15
	jz L_377015
L_10448:
	movq $0x1,%r14
	movq %r13,%r15
L_10449:
	movq 0x0(%rbp),%r13
	andq $0x1,%r13
	jz L_377013
L_10450:
	movq $0x1,%r13
L_10451:
	cmpq %r13,%r14
	jl L_377012
L_10452:
	cmpq $0x1,0x0(%rbp)
	je L_10443
L_10453:
	subq %r13,%r14
	jo L_10441
L_10454:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	imulq %r11,%r14
	movq %r11,%r10
	addq %r10,%r10
	addq $0x7,%r13
	addq %r11,%r13
	addq %r10,%r13
	addq %r13,%r14
	movq %r14,%rsi
	movq %r14,0x10(%rbp)
	addq $0x0,%rsi
	jc L_377009
L_10456:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_10457
L_10459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10460
.p2align 0x4
.long 0x45E
L_10460:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10457:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_quot
L_10458:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377009:
L_10455:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377012:
L_10462:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377013:
L_10463:
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	decq %r13
	jo L_10441
L_10464:
	jmp L_10451
.p2align 0x4
L_377015:
L_10465:
	movq 0x8(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	decq %r14
	jo L_10441
L_10466:
	movq %r13,%r15
	jmp L_10449
.text
.p2align 0x4
.globl x_1183
.hidden x_1183
x_1183:
L_10469:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10470
L_10494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10495
.p2align 0x4
.long 0x460
L_10495:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10470:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz numLimbs_1
L_10471:
	sarq $0x1,%r13
	sarq $0x1,%r14
	addq %r13,%r14
	jo numLimbs_1
L_10490:
	movq %r14,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	xorq %r15,%r14
	cmpq $0x0,%r14
	jl numLimbs_6
L_10491:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
numLimbs_6:
numLimbs_1:
	movq 0x18(%rbp),%r15
	andq $0x1,%r15
	jz L_377023
L_10472:
	movq $0x1,%r15
L_10473:
	movq 0x10(%rbp),%r14
	andq $0x1,%r14
	jz L_377021
L_10474:
	movq $0x1,%r14
L_10475:
	cmpq %r14,%r15
	jnl L_10477
L_10484:
	movq %r14,%r15
L_10477:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r13
	imulq %r13,%r15
	addq $0x7,%rsi
	addq %r13,%rsi
	addq %r13,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x20(%rbp)
	addq $0x0,%r15
	jc L_377019
L_10479:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10480
L_10482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_10483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10483
.p2align 0x4
.long 0x45F
L_10483:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_10480:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x20(%rbp),%rdx
	movq 0x18(%rbp),%rsi
	movq 0x10(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_add
L_10481:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377019:
L_10478:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377021:
L_10485:
	movq 0x10(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_377022
L_10487:
	jmp L_10475
.p2align 0x4
L_377022:
L_10486:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377023:
L_10488:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_10486
L_10489:
	jmp L_10473
.text
.p2align 0x4
.globl bigMod_0
.hidden bigMod_0
bigMod_0:
L_10496:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10569
L_10497:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377045
L_10498:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_377042
L_10499:
	cmpq $0x1,%r15
	jl L_377033
L_10501:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %cl
	movzbl %cl,%ecx
	je L_377031
L_10502:
	cmpq $0x1,%r15
	jg L_377030
L_10504:
	testl %ecx,%ecx
	jnz L_377028
L_10505:
	cmpq $0x1,0x0(%rbp)
	jl L_377026
L_10507:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377026:
L_10509:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_377027
L_10510:
	movq $0x3,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_10511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_377027:
L_10520:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377028:
L_10521:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10522:
	cmpl $0x0,%eax
	jl L_10509
	jmp L_10507
.p2align 0x4
L_377030:
L_10526:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp bigRem_0
.p2align 0x4
L_377031:
L_10527:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_10528:
	cmpl $0x0,%eax
	jg L_10526
	movl %ebx,%ecx
	jmp L_10504
.p2align 0x4
L_377033:
L_10532:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %al
	movzbl %al,%eax
	movl %eax,0x10(%rbp)
	je L_377039
L_10533:
	cmpq $0x1,%r15
	jl L_377038
L_10535:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_377035
L_10536:
	cmpq $0x1,0x0(%rbp)
	jng L_10507
L_10539:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x3,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_10540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_377035:
L_10546:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10547
L_10551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10552
.p2align 0x4
.long 0x45B
L_10552:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10547:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10548:
	cmpl $0x0,%eax
	jg L_10539
	jmp L_10507
.p2align 0x4
L_377038:
L_10554:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp bigRem_0
.p2align 0x4
L_377039:
L_10555:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10556
L_10560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10561
.p2align 0x4
.long 0x45B
L_10561:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10556:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10557:
	cmpl $0x0,%eax
	jl L_10554
	jmp L_10535
.p2align 0x4
L_377042:
L_10562:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10563
L_10567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10568
.p2align 0x4
.long 0x45B
L_10568:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10563:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10564:
	cmpl $0x0,%eax
	jl L_10532
	jmp L_10501
.p2align 0x4
L_377045:
L_10569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10570
.p2align 0x4
.long 0x45C
L_10570:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10498
.p2align 0x4
.long 0x461
L_10511:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_10512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x466
L_10540:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_10541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x462
L_10512:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10513
L_10518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10519
.p2align 0x4
.long 0x465
L_10519:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10513:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_10514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x467
L_10541:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x3,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_10542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x463
L_10514:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10515
L_10516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10517
.p2align 0x4
.long 0x464
L_10517:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10515:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x463
L_10542:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10543
L_10544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10545
.p2align 0x4
.long 0x464
L_10545:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10543:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1183
.text
.p2align 0x4
.globl bigRem_0
.hidden bigRem_0
bigRem_0:
L_10571:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10572
L_10602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10603
.p2align 0x4
.long 0x45C
L_10603:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10572:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	movq 0x0(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_377053
L_10573:
	sarq $0x1,%r15
	sarq $0x1,%r13
	jz L_377052
L_10574:
	movq $0x8000000000000000,%r14
	cmpq %r14,%r15
	jne L_377051
L_10577:
	cmpq $0xFFFFFFFFFFFFFFFF,%r13
	jne L_377050
L_10579:
	xorq %r15,%r15
addTag_0:
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377050:
	movq %r13,%r14
L_10576:
	movq %r15,%rax
	cqto
	idivq %r14
	movq %rdx,%r15
	jmp addTag_0
.p2align 0x4
L_377051:
	movq %r13,%r14
	jmp L_10576
.p2align 0x4
L_377052:
L_10581:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377053:
L_10582:
	andq $0x1,%r15
	jz L_377060
L_10583:
	movq $0x1,%r15
L_10584:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_377058
L_10585:
	movq $0x1,%r14
L_10586:
	cmpq %r14,%r15
	jl L_377057
L_10587:
	cmpq $0x1,0x0(%rbp)
	je L_10581
L_10588:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%rsi
	imulq %rsi,%r14
	addq $0x7,%r13
	addq %rsi,%r13
	addq %r13,%rsi
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x18(%rbp)
	addq $0x0,%r15
	jc L_377055
L_10590:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10591
L_10593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10594
.p2align 0x4
.long 0x45D
L_10594:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10591:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_rem
L_10592:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377055:
L_10589:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377057:
L_10596:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377058:
L_10597:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_377059
L_10599:
	jmp L_10586
.p2align 0x4
L_377059:
L_10598:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377060:
L_10600:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_10598
L_10601:
	jmp L_10584
.text
.p2align 0x4
.globl bigNeg_0
.hidden bigNeg_0
bigNeg_0:
L_10604:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10605
L_10618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10619
.p2align 0x4
.long 0x460
L_10619:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10605:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	jz L_377064
L_10606:
	movq $0x8000000000000001,%r11
	cmpq %r11,%r15
	jne L_377063
L_10608:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377063:
L_10607:
	movq $0x2,%r15
	subq 0x0(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377064:
L_10609:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_377067
L_10611:
	movq 0x0(%r13),%rsi
	movq 0x8(%r13),%r15
	imulq %r15,%r14
	addq $0x7,%rsi
	addq %r15,%rsi
	addq %r15,%rsi
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x8(%rbp)
	addq $0x0,%r15
	jc L_377066
L_10613:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10614
L_10616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10617
.p2align 0x4
.long 0x458
L_10617:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10614:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_neg
L_10615:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377066:
L_10612:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377067:
L_10610:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1182
.hidden x_1182
x_1182:
L_10620:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10621
L_10643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10644
.p2align 0x4
.long 0x45C
L_10644:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10621:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	movq 0x8(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz numLimbs_2
L_10622:
	sarq $0x1,%r13
	sarq $0x1,%r15
	imulq %r13,%r15
	jo numLimbs_2
L_10639:
	movq %r15,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	xorq %r14,%r15
	cmpq $0x0,%r15
	jl numLimbs_9
L_10640:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
numLimbs_9:
numLimbs_2:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jz L_377074
L_10623:
	movq $0x1,%r15
L_10624:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_377072
L_10625:
	movq $0x1,%r14
L_10626:
	addq %r15,%r14
	jo L_377071
L_10628:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x8(%r15),%r13
	imulq %r13,%r14
	addq $0x7,%rsi
	addq %r13,%rsi
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x18(%rbp)
	addq $0x0,%r15
	jc L_377070
L_10630:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10631
L_10633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10634
.p2align 0x4
.long 0x45D
L_10634:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10631:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_mul
L_10632:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377070:
L_10629:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377071:
L_10627:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377072:
L_10635:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_10627
L_10636:
	jmp L_10626
.p2align 0x4
L_377074:
L_10637:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_10627
L_10638:
	jmp L_10624
.text
.p2align 0x4
.globl newOut_0
.hidden newOut_0
newOut_0:
L_10645:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10740
L_10646:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377087
L_10647:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x8(%rbp),%edi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call Posix_FileSys_Stat_fstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10648
.p2align 0x4
.long 0x468
L_10648:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_377079
L_10649:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10650
.p2align 0x4
.long 0x468
L_10650:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10651
.p2align 0x4
.long 0x468
L_10651:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10652+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10652
.p2align 0x4
.long 0x468
L_10652:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl %eax,0x18(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10653
.p2align 0x4
.long 0x468
L_10653:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0x0,%eax
	jl L_377077
L_10654:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10655
.p2align 0x4
.long 0x468
L_10655:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10656
.p2align 0x4
.long 0x468
L_10656:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10657
.p2align 0x4
.long 0x468
L_10657:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10658+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10658
.p2align 0x4
.long 0x468
L_10658:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x50(%rbp)
	leaq L_10717(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_10659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_377077:
L_10713:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377078
L_10714:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377078:
L_10711:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x740)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377079:
L_10719:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10720
.p2align 0x4
.long 0x475
L_10720:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl %eax,%r15d
	movl %r15d,0x30(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10711
L_10721:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_10722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10722
.p2align 0x4
.long 0x476
L_10722:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10723
L_10737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10738
.p2align 0x4
.long 0x479
L_10738:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10723:
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	testq %r15,%r15
	jz L_377084
L_10724:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_177:
	movslq %ecx,%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377080
L_10725:
	incl %ecx
	jmp loop_177
.p2align 0x4
L_377080:
L_10726:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_377083
L_10727:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10728
.p2align 0x4
.long 0x477
L_10728:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_178:
	cmpq 0x38(%rbp),%r15
	jnl L_377081
L_10734:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x48(%rbp),%r14
	movq 0x40(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_178
.p2align 0x4
L_377081:
L_10729:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10730
L_10732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_10733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10733
.p2align 0x4
.long 0x478
L_10733:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_10730:
	movq 0x48(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10731:
	movl 0x30(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377083:
L_10735:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377084:
L_10736:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10731
.p2align 0x4
L_377087:
L_10740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10741
.p2align 0x4
.long 0x47A
L_10741:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_10647
.p2align 0x4
.long 0x469
L_10659:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x58(%rbp)
	movq %r11,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_10660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x474
L_10717:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_10713
.p2align 0x4
.long 0x46A
L_10660:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_10661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10661
.p2align 0x4
.long 0x46B
L_10661:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x68(%rbp)
	leaq L_10716(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x68,%rbp
	leaq (L_10662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x46A
L_10662:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_10663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x474
L_10716:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_10713
.p2align 0x4
.long 0x46A
L_10663:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_10664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10664
.p2align 0x4
.long 0x46B
L_10664:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x68(%rbp)
	leaq L_10712(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x68,%rbp
	leaq (L_10665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x46A
L_10665:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x474
L_10712:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_10713
.p2align 0x4
.long 0x46C
L_10666:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10711
L_10667:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x18(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isReg
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10668
.p2align 0x4
.long 0x46D
L_10668:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl %eax,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10669
L_10708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10709
.p2align 0x4
.long 0x46D
L_10709:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10669:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_377089
L_10670:
	movq $0xB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movl 0x8(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_377089:
L_10707:
	movq $0xB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq %r15,0x18(%rbp)
L_10673:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_377098
L_10674:
	xorl %ecx,%ecx
L_10675:
	movq $0xB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movl %r14d,%r11d
	shlq $0x1,%r11
	orq $0x1,%r11
	movq $0x496B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl %r14d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x18(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r13,0x10(%r10)
	movq $0xB7,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movl %ecx,0x0(%r8)
	addq $0x28,%r12
	movl %r14d,0x4(%r8)
	movq %r13,0x8(%r8)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r8)
	movq %r9,0x18(%r8)
	movq $0xB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r8,0x10(%r14)
	movq %r10,0x18(%r14)
	movq %r15,0x28(%r14)
	addq $0x38,%r12
	movl $0x1000,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x48(%rbp)
	movq $0xBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_377094
	cmpb $0x2,%r15b
	je L_377093
L_10676:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10677
L_10685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10686
.p2align 0x4
.long 0x471
L_10686:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_10677:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x1000,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10678
.p2align 0x4
.long 0x46F
L_10678:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_175:
	cmpq $0x1000,%r15
	jnl L_377090
L_10684:
	movq 0x18(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_175
.p2align 0x4
L_377090:
L_10679:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10680
L_10682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10683
.p2align 0x4
.long 0x470
L_10683:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_10680:
	movq $0x295D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
L_10681:
	movq $0xBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x18(%r15)
	movq $0x12FD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0xC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1B5B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq $0xC1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377093:
L_10697:
	movq $0x1,%r15
	jmp L_10681
.p2align 0x4
L_377094:
L_10687:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10688
L_10695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10696
.p2align 0x4
.long 0x471
L_10696:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_10688:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x1000,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10689
.p2align 0x4
.long 0x46F
L_10689:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_176:
	cmpq $0x1000,%r15
	jnl L_377095
L_10694:
	movq 0x18(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_176
.p2align 0x4
L_377095:
L_10690:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10691
L_10692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10693
.p2align 0x4
.long 0x470
L_10693:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_10691:
	movq $0x295F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_10681
.p2align 0x4
L_377098:
L_10698:
	movq $0x1,%r15
	movl $0x8,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_10699:
	orl %ebx,%ecx
	movl %ecx,0x14(%rbp)
	cmpq $0x1,%r15
	je L_377099
L_10700:
	movl 0x0(%r15),%ebx
	movq 0x8(%r15),%r15
	jmp L_10699
.p2align 0x4
L_377099:
L_10701:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10702
L_10703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10704
.p2align 0x4
.long 0x472
L_10704:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10702:
	movl 0x14(%rbp),%ecx
	jmp L_10675
.p2align 0x4
.long 0x46E
L_10671:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10672
L_10705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10706
.p2align 0x4
.long 0x473
L_10706:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10672:
	movq 0x18(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_10673
.text
.p2align 0x4
.globl x_1213
.hidden x_1213
x_1213:
L_10742:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10743
L_10848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10849
.p2align 0x4
.long 0x458
L_10849:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10743:
	incl (gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_377142
L_10744:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rcx
	shrq $0x1,%rcx
	cmpq $0x1F20,%rcx
	je L_377141
	cmpq $0x1F21,%rcx
	je L_377140
	cmpq $0x1F22,%rcx
	je L_377139
	cmpq $0x1F23,%rcx
	je L_377138
L_10745:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readWord8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10746
.p2align 0x4
.long 0x458
L_10746:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
x_18:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_377105
L_10747:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_377104
L_10748:
	movq %r15,0x0(%rbp)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377104:
L_10750:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377105:
L_10751:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10752
.p2align 0x4
.long 0x458
L_10752:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10750
L_10753:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_377112
L_10754:
	movl %eax,0x0(%rbp)
L_10755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%rbp),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10756
.p2align 0x4
.long 0x454
L_10756:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10757
L_10772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10773
.p2align 0x4
.long 0x26
L_10773:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10757:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	testq %r15,%r15
	jz L_377110
L_10758:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_179:
	movslq %ecx,%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377106
L_10759:
	incl %ecx
	jmp loop_179
.p2align 0x4
L_377106:
L_10760:
	movq 0x8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_377109
L_10761:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10762
.p2align 0x4
.long 0x47B
L_10762:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_180:
	cmpq 0x8(%rbp),%r15
	jnl L_377107
L_10768:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x18(%rbp),%r14
	movq 0x10(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_180
.p2align 0x4
L_377107:
L_10763:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10764
L_10766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10767
.p2align 0x4
.long 0x27
L_10767:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10764:
	movq 0x18(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10765:
	movl 0x0(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377109:
L_10770:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377110:
L_10771:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10765
.p2align 0x4
L_377112:
	movl %eax,%ecx
L_10775:
	cmpl $0x4,%ecx
	je L_377113
L_10776:
	movl %ecx,0x0(%rbp)
	jmp L_10755
.p2align 0x4
L_377113:
L_10777:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377128
L_10778:
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_377127
L_10779:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rcx
	shrq $0x1,%rcx
	cmpq $0x1F20,%rcx
	je L_377126
	cmpq $0x1F21,%rcx
	je L_377125
	cmpq $0x1F22,%rcx
	je L_377124
	cmpq $0x1F23,%rcx
	je L_377123
L_10780:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readWord8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10781
.p2align 0x4
.long 0x0
L_10781:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
x_19:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_377115
L_10782:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10750
L_10783:
	movq %r15,0x0(%rbp)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377115:
L_10785:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10786
.p2align 0x4
.long 0x0
L_10786:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl %eax,%r15d
	movl %r15d,0x0(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10750
L_10787:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10788
.p2align 0x4
.long 0x454
L_10788:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10789
L_10803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10804
.p2align 0x4
.long 0x26
L_10804:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10789:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	testq %r15,%r15
	jz L_377120
L_10790:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_181:
	movslq %ecx,%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377116
L_10791:
	incl %ecx
	jmp loop_181
.p2align 0x4
L_377116:
L_10792:
	movq 0x8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_10770
L_10793:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10794
.p2align 0x4
.long 0x47B
L_10794:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_182:
	cmpq 0x8(%rbp),%r15
	jnl L_377117
L_10800:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x18(%rbp),%r14
	movq 0x10(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_182
.p2align 0x4
L_377117:
L_10795:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10796
L_10798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10799
.p2align 0x4
.long 0x27
L_10799:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10796:
	movq 0x18(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10797:
	movl 0x0(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377120:
L_10802:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10797
.p2align 0x4
L_377123:
L_10812:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10813
.p2align 0x4
.long 0x0
L_10813:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377124:
L_10810:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Arr
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10811
.p2align 0x4
.long 0x0
L_10811:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377125:
L_10808:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Vec
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10809
.p2align 0x4
.long 0x0
L_10809:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377126:
L_10806:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq 0x8(%r15),%rsi
	movl 0x4(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10807
.p2align 0x4
.long 0x0
L_10807:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377127:
L_10814:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_lseek
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10815
.p2align 0x4
.long 0x0
L_10815:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377128:
L_10816:
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_377136
L_10817:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rcx
	shrq $0x1,%rcx
	cmpq $0x1F20,%rcx
	je L_377135
	cmpq $0x1F21,%rcx
	je L_377134
	cmpq $0x1F22,%rcx
	je L_377133
	cmpq $0x1F23,%rcx
	je L_377132
L_10818:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readWord8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10819
.p2align 0x4
.long 0x452
L_10819:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
x_20:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_377130
L_10820:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10750
L_10821:
	movq %r15,0x0(%rbp)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377130:
L_10823:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10824
.p2align 0x4
.long 0x452
L_10824:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10750
L_10825:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl %eax,%ecx
	jmp L_10775
.p2align 0x4
L_377132:
L_10833:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10834
.p2align 0x4
.long 0x452
L_10834:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377133:
L_10831:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Arr
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10832
.p2align 0x4
.long 0x452
L_10832:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377134:
L_10829:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Vec
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10830
.p2align 0x4
.long 0x452
L_10830:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377135:
L_10827:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq 0x8(%r15),%rsi
	movl 0x4(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10828
.p2align 0x4
.long 0x452
L_10828:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377136:
L_10835:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_lseek
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10836
.p2align 0x4
.long 0x452
L_10836:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377138:
L_10844:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10845
.p2align 0x4
.long 0x458
L_10845:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.p2align 0x4
L_377139:
L_10842:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Arr
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10843
.p2align 0x4
.long 0x458
L_10843:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.p2align 0x4
L_377140:
L_10840:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Vec
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10841
.p2align 0x4
.long 0x458
L_10841:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.p2align 0x4
L_377141:
L_10838:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq 0x8(%r15),%rsi
	movl 0x4(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10839
.p2align 0x4
.long 0x458
L_10839:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.p2align 0x4
L_377142:
L_10846:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_lseek
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10847
.p2align 0x4
.long 0x458
L_10847:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.text
.p2align 0x4
.globl newIn_0
.hidden newIn_0
newIn_0:
L_10850:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10974
L_10851:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377154
L_10852:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x8(%rbp),%edi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call Posix_FileSys_Stat_fstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10853
.p2align 0x4
.long 0x47C
L_10853:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_377146
L_10854:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10855
.p2align 0x4
.long 0x47C
L_10855:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10856
.p2align 0x4
.long 0x47C
L_10856:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10857+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10857
.p2align 0x4
.long 0x47C
L_10857:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl %eax,0xC(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10858
.p2align 0x4
.long 0x47C
L_10858:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0x0,%eax
	jl L_377144
L_10859:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10860
.p2align 0x4
.long 0x47C
L_10860:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10861
.p2align 0x4
.long 0x47C
L_10861:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10862
.p2align 0x4
.long 0x47C
L_10862:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10863+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10863
.p2align 0x4
.long 0x47C
L_10863:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x50(%rbp)
	leaq L_10951(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_10864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_377144:
L_10947:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377145
L_10948:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377145:
L_10910:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x740)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377146:
L_10953:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_10954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10954
.p2align 0x4
.long 0x48C
L_10954:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl %eax,%r15d
	movl %r15d,0x28(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10910
L_10955:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10956
.p2align 0x4
.long 0x475
L_10956:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10957
L_10971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_10972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10972
.p2align 0x4
.long 0x476
L_10972:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_10957:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	testq %r15,%r15
	jz L_377151
L_10958:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_186:
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377147
L_10959:
	incl %ecx
	jmp loop_186
.p2align 0x4
L_377147:
L_10960:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_377150
L_10961:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10962
.p2align 0x4
.long 0x479
L_10962:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_187:
	cmpq 0x30(%rbp),%r15
	jnl L_377148
L_10968:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x38(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_187
.p2align 0x4
L_377148:
L_10963:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10964
L_10966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10967
.p2align 0x4
.long 0x48D
L_10967:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10964:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10965:
	movl 0x28(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377150:
L_10935:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377151:
L_10970:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10965
.p2align 0x4
L_377154:
L_10974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_10975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10975
.p2align 0x4
.long 0x48F
L_10975:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_10852
.p2align 0x4
.long 0x47D
L_10864:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	movq %r11,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_10865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48B
L_10951:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10947
.p2align 0x4
.long 0x47E
L_10865:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10866
.p2align 0x4
.long 0x47F
L_10866:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x60(%rbp)
	leaq L_10950(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x60,%rbp
	leaq (L_10867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x47E
L_10867:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_10868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48B
L_10950:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10947
.p2align 0x4
.long 0x47E
L_10868:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10869
.p2align 0x4
.long 0x47F
L_10869:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x60(%rbp)
	leaq L_10946(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x60,%rbp
	leaq (L_10870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x47E
L_10870:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48B
L_10946:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10947
.p2align 0x4
.long 0x480
L_10871:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10910
L_10872:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0xC(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isReg
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10873
.p2align 0x4
.long 0x481
L_10873:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl %eax,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10874
L_10943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10944
.p2align 0x4
.long 0x481
L_10944:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10874:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jz L_377156
L_10875:
	movq $0xB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movl 0x8(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_377156:
L_10942:
	movq $0xB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
L_10878:
	movq $0x1F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call Posix_FileSys_Stat_fstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10879
.p2align 0x4
.long 0x483
L_10879:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_377159
L_10880:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10881
.p2align 0x4
.long 0x483
L_10881:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10882
.p2align 0x4
.long 0x483
L_10882:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10883+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10883
.p2align 0x4
.long 0x483
L_10883:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl %eax,0xC(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10884
.p2align 0x4
.long 0x483
L_10884:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0x0,%eax
	jl L_377157
L_10885:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10886
.p2align 0x4
.long 0x483
L_10886:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10887
.p2align 0x4
.long 0x483
L_10887:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10888
.p2align 0x4
.long 0x483
L_10888:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10889+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10889
.p2align 0x4
.long 0x483
L_10889:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x50(%rbp)
	leaq L_10916(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_10890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_377157:
L_10912:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10910
L_10913:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377159:
L_10918:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_10919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10919
.p2align 0x4
.long 0x48C
L_10919:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl %eax,%r15d
	movl %r15d,0x28(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10910
L_10920:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10921
.p2align 0x4
.long 0x475
L_10921:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10922
L_10937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_10938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10938
.p2align 0x4
.long 0x476
L_10938:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_10922:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	testq %r15,%r15
	jz L_377164
L_10923:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_184:
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377160
L_10924:
	incl %ecx
	jmp loop_184
.p2align 0x4
L_377160:
L_10925:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_10935
L_10926:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10927
.p2align 0x4
.long 0x479
L_10927:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_185:
	cmpq 0x30(%rbp),%r15
	jnl L_377161
L_10933:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x38(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_185
.p2align 0x4
L_377161:
L_10928:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10929
L_10931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10932
.p2align 0x4
.long 0x48D
L_10932:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10929:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10930:
	movl 0x28(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377164:
L_10936:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10930
.p2align 0x4
.long 0x482
L_10876:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10877
L_10940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10941
.p2align 0x4
.long 0x48E
L_10941:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10877:
	movq 0x10(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_10878
.p2align 0x4
.long 0x484
L_10890:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	movq %r11,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_10891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48B
L_10916:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10912
.p2align 0x4
.long 0x485
L_10891:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10892
.p2align 0x4
.long 0x486
L_10892:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x60(%rbp)
	leaq L_10915(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x60,%rbp
	leaq (L_10893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x485
L_10893:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_10894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48B
L_10915:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10912
.p2align 0x4
.long 0x485
L_10894:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10895
.p2align 0x4
.long 0x486
L_10895:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x60(%rbp)
	leaq L_10911(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x60,%rbp
	leaq (L_10896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x485
L_10896:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48B
L_10911:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10912
.p2align 0x4
.long 0x487
L_10897:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10910
L_10898:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0xC(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isReg
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10899
.p2align 0x4
.long 0x488
L_10899:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10900
L_10907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x48,%rbp
	leaq (L_10908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10908
.p2align 0x4
.long 0x488
L_10908:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10900:
	movl 0x8(%rbp),%r15d
	movl %r15d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x496D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r13)
	movq $0x4971,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x18,%r12
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	movq $0x4967,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r10,0x8(%r11)
	movq $0x10E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq %r11,0x28(%r15)
	addq $0x38,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x1000,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x1000,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_10901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10901
.p2align 0x4
.long 0x489
L_10901:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_183:
	cmpq $0x1000,%r15
	jnl L_377170
L_10906:
	movq 0x38(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_183
.p2align 0x4
L_377170:
L_10902:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10903
L_10904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10905
.p2align 0x4
.long 0x48A
L_10905:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10903:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x10E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq (globalWord64+0x30)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x10E7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r15,0x18(%r11)
	movq %r14,0x0(%rbp)
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x38,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq $0x12FB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1B5D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl pow_0
.hidden pow_0
pow_0:
L_10976:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10984
L_10977:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377176
L_10978:
	movq $0x5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	cmpl $0x0,0x0(%rbp)
	jg L_377174
L_10979:
	movq $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377174:
L_10980:
	movl 0x0(%rbp),%r15d
	movl %r15d,%r14d
	andl $0x1,%r14d
	jz evenPow_0
L_10981:
	decl %r15d
	movl %r15d,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_10982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp evenPow_0
.p2align 0x4
L_377176:
L_10984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10985
.p2align 0x4
.long 0x47B
L_10985:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10978
.p2align 0x4
.long 0x490
L_10982:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq $0x5,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1182
.text
.p2align 0x4
.globl evenPow_0
.hidden evenPow_0
evenPow_0:
L_10986:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10991
L_10987:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377178
L_10988:
	movq $0x5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movl $0x2,0x28(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_10989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_377178:
L_10991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10992
.p2align 0x4
.long 0x47B
L_10992:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10988
.p2align 0x4
.long 0x490
L_10989:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_10990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pow_0
.p2align 0x4
.long 0x490
L_10990:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1182
.text
.p2align 0x4
.globl name_0
.hidden name_0
name_0:
L_10993:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10994
L_11297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_11298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11298
.p2align 0x4
.long 0x452
L_11298:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_10994:
	movq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x1E,%rax
	ja L_377180
	jmp *jumpTable_11(,%rax,8)
.data
.p2align 0x4
jumpTable_11:
.quad L_377476,L_377475,L_377474,L_10995,L_377472,L_377471,L_377470,L_10995,L_377469,L_377468,L_377467,L_10995,L_377466,L_377465,L_377464,L_10995,L_377463,L_377462,L_11285,L_10995,L_11285,L_11001,L_377458,L_10995,L_11001,L_11291,L_377455,L_10995,L_11294,L_377453,L_377452
.text
.p2align 0x4
L_377180:
L_10995:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xC97,%rax
	cmpq $0x10D,%rax
	ja L_377181
	jmp *jumpTable_12(,%rax,8)
.data
.p2align 0x4
jumpTable_12:
.quad
.text
.p2align 0x4
L_377181:
L_10996:
	movq (globalObjptr+0xDC00)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377182:
L_11269:
	movq (globalObjptr+0xDC48)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377183:
L_11001:
	movq (globalObjptr+0xDC20)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377187:
L_11255:
	movq (globalObjptr+0xDC40)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377254:
L_11196:
	movq (globalObjptr+0xDC38)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377285:
L_11084:
	movq (globalObjptr+0xDC28)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377361:
L_11089:
	movq (globalObjptr+0xDC30)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377449:
L_10999:
	movq (globalObjptr+0xDC18)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377450:
L_10998:
	movq (globalObjptr+0xDC10)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377451:
L_10997:
	movq (globalObjptr+0xDC08)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377452:
L_11296:
	movq (globalObjptr+0xDCD0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377453:
L_11294:
	movq (globalObjptr+0xDCC8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377455:
L_11291:
	movq (globalObjptr+0xDCC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377458:
L_11285:
	movq (globalObjptr+0xDCB8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377462:
L_11283:
	movq (globalObjptr+0xDCB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377463:
L_11282:
	movq (globalObjptr+0xDCA8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377464:
L_11281:
	movq (globalObjptr+0xDCA0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377465:
L_11280:
	movq (globalObjptr+0xDC98)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377466:
L_11279:
	movq (globalObjptr+0xDC90)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377467:
L_11278:
	movq (globalObjptr+0xDC88)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377468:
L_11277:
	movq (globalObjptr+0xDC80)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377469:
L_11276:
	movq (globalObjptr+0xDC78)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377470:
L_11275:
	movq (globalObjptr+0xDC70)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377471:
L_11274:
	movq (globalObjptr+0xDC68)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377472:
L_11273:
	movq (globalObjptr+0xDC60)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377474:
L_11272:
	movq (globalObjptr+0xCDD8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377475:
L_11271:
	movq (globalObjptr+0xDC58)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377476:
L_11270:
	movq (globalObjptr+0xDC50)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fromIntInf_0
.hidden fromIntInf_0
fromIntInf_0:
L_11299:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11300
L_11328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_11329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11329
.p2align 0x4
.long 0x460
L_11329:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_11300:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	andq $0x1,%r13
	jz L_377479
L_11301:
	cmpq $0x1,%r14
	jnl L_377478
L_11321:
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_11322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_377478:
L_11303:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_11304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_377479:
L_11324:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_11325:
	cmpl $0x0,%eax
	jnl L_11303
	jmp L_11321
.p2align 0x4
.long 0x491
L_11322:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_11323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x2B
L_11304:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (fromString_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_11323:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_11304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
fromString_1:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_377487
L_11306:
	movb 0x0(%r15,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_377482
L_11307:
	movq (globalObjptr+0x750)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377482:
L_11308:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_11309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11309
.p2align 0x4
.long 0x452
L_11309:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	testl %eax,%eax
	jz L_377486
L_11310:
	cmpl $0x1,%eax
	je L_377485
L_11311:
	cmpl $0x2,%eax
	je L_377484
L_11312:
	cmpl $0x3,%eax
	je L_377483
L_11313:
	movq (globalObjptr+0x778)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377483:
L_11314:
	xorl %ecx,%ecx
L_11315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %ecx,%esi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_11316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real64_strtor
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	movsd %xmm0,(cReturnTemp+0x0)(%rip)
	jmp L_11316
.p2align 0x4
.long 0x0
L_11316:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movsd (cReturnTemp+0x0)(%rip),%xmm15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377484:
L_11317:
	movl $0x2,%ecx
	jmp L_11315
.p2align 0x4
L_377485:
L_11318:
	movl $0x3,%ecx
	jmp L_11315
.p2align 0x4
L_377486:
L_11319:
	movl $0x1,%ecx
	jmp L_11315
.p2align 0x4
L_377487:
L_11305:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1197
.hidden x_1197
x_1197:
L_11330:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11331
L_11356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_11357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11357
.p2align 0x4
.long 0x460
L_11357:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_11331:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	movl %r11d,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_377488
L_11332:
	movq %r13,0x8(%rbp)
	sarq $0x1,%r15
	movq %r15,0x0(%rbp)
	jmp x_1214
.p2align 0x4
L_377488:
L_11333:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_377492
L_11334:
	movl $0x0,(localWord32+0x0)(%rip)
	movl $0x10,%ebx
.p2align 0x4,,0x7
loop_188:
	cmpl $0x1,%ecx
	je L_377490
L_11335:
	movl $0x1,%r15d
	xchgl %ebx,%ecx
	shll %cl,%r15d
	cmpl %r15d,%ebx
	jb L_377489
L_11336:
	movl (localWord32+0x0)(%rip),%r15d
	shrl %cl,%ebx
	addl %ecx,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	xchgl %ebx,%ecx
L_11337:
	shrl $0x1,%ebx
	jmp loop_188
.p2align 0x4
L_377489:
	xchgl %ebx,%ecx
	jmp L_11337
.p2align 0x4
L_377490:
L_11339:
	movl (localWord32+0x0)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377491
L_11340:
	movl $0x40,%eax
	cltd
	idivl %r15d
	movl %eax,0x8(%rbp)
	movl %r15d,0x28(%rbp)
	movl $0x40,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_11341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
L_377491:
L_11354:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377492:
L_11355:
	movq $0x2,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x492
L_11341:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	testl %r15d,%r15d
	jz L_377498
L_11342:
	movl $0x1,%ecx
L_11343:
	addl 0x8(%rbp),%ecx
	jo L_11344
L_11345:
	movq 0x10(%rbp),%r15
	addq $0x8,%r15
	movl %ecx,%r14d
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%rsi
	decq %rsi
	jo L_377496
L_11346:
	imulq %r14,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x8(%rbp)
	addq $0x0,%r15
	jc L_377495
L_11348:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_11349
L_11351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11352
.p2align 0x4
.long 0x493
L_11352:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11349:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%rbp),%rdx
	movl 0x18(%rbp),%esi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_toString
L_11350:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377495:
L_11347:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377496:
L_11344:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377498:
L_11353:
	xorl %ecx,%ecx
	jmp L_11343
.text
.p2align 0x4
.globl x_1214
.hidden x_1214
x_1214:
L_11358:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11359
L_11431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_11432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11432
.p2align 0x4
.long 0x495
L_11432:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_11359:
	movq 0x8(%rbp),%r15
	movb 0xC(%r15),%r14b
	movb %r14b,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x0(%r11),%r10d
	movl %r10d,0x14(%rbp)
	testl %r10d,%r10d
	jnz L_377526
L_11360:
	movl $0x1,0x0(%r11)
	testl %r15d,%r15d
	jz L_377525
L_11361:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	cmpb $0x1,%r14b
	je L_377524
	cmpb $0x2,%r14b
	je L_377523
	cmpb $0x3,%r14b
	je L_377522
L_11362:
	movq %r13,0x8(%rbp)
	movl $0x10,%ecx
sextdFromInt32ToInt64_0:
	movslq %ecx,%r15
	movq 0x0(%rbp),%r14
	cmpq $0x0,%r14
	setl %cl
	movzbl %cl,%ecx
	jl L_377521
L_11363:
	negq %r14
	movl $0x40,%ebx
.p2align 0x4,,0x7
loop_189:
	testq %r15,%r15
	jz L_377519
L_11364:
	movq $0x8000000000000000,%r11
	cmpq %r11,%r14
	sete %al
	movzbl %al,%eax
	jne L_377518
L_11409:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	jne L_377517
L_11411:
	xorq %r13,%r13
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
TildeQues_0:
	negq %r13
	movl %r13d,%r10d
	movslq %r10d,%r11
	cmpq %r11,%r13
	jne L_11368
L_11372:
	cmpq $0x10,%r11
	jnb L_11374
L_11377:
	movq (globalObjptr+0xDCD8)(%rip),%r13
	movb 0x0(%r13,%r11,1),%r10b
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movslq %ebx,%r9
	cmpq %r11,%r9
	jnb L_11374
L_11379:
	movb %r10b,0x0(%r13,%r9,1)
	testl %ecx,%ecx
	jz L_11381
L_11406:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_11368
L_11381:
	movq %r14,%rax
	cqto
	idivq %r15
	testq %rax,%rax
	jz L_377501
L_11382:
	decl %ebx
	jo L_377499
L_11383:
	movq %rax,%r14
	movl (localWord32+0x4)(%rip),%ecx
	jmp loop_189
.p2align 0x4
L_377499:
L_11368:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377500
L_11369:
	movq $0x3,%r15
L_11370:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377500:
L_11371:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377501:
L_11384:
	movl (localWord32+0x4)(%rip),%r15d
	testl %r15d,%r15d
	jz L_11386
L_11402:
	decl %ebx
	jo L_11368
L_11403:
	movslq %ebx,%r15
	cmpq %r11,%r15
	jnb L_11374
L_11405:
	movq 0x8(%rbp),%r14
	movb $0x7E,0x0(%r14,%r15,1)
L_11386:
	movslq %ebx,%r15
	movq %r15,0x20(%rbp)
	cmpq %r15,%r11
	jb L_377507
L_11387:
	subq %r15,%r11
	movq %r11,0x28(%rbp)
	jz L_377506
L_11388:
	cmpq $0x7FFFFFFF,%r11
	ja L_377504
L_11389:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r11,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_11390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11390
.p2align 0x4
.long 0x494
L_11390:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_11391:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_190:
	cmpq 0x28(%rbp),%r14
	jnl L_377502
L_11396:
	movq %r14,%r13
	addq 0x20(%rbp),%r13
	movq 0x8(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_190
.p2align 0x4
L_377502:
L_11392:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_11394
L_11393:
	movq 0x18(%rbp),%r14
	movl $0x0,0x0(%r14)
L_11394:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377504:
L_11397:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377505
L_11398:
	movq $0x5,%r15
	jmp L_11370
.p2align 0x4
L_377505:
L_11399:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377506:
L_11400:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_11391
.p2align 0x4
L_377507:
L_11374:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377508
L_11375:
	movq $0x6,%r15
	jmp L_11370
.p2align 0x4
L_377508:
L_11376:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377517:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
L_11366:
	movq %r14,%rax
	cqto
	idivq %r15
	movq %rdx,%r13
	jmp TildeQues_0
.p2align 0x4
L_377518:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	jmp L_11366
.p2align 0x4
L_377519:
L_11412:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377520
L_11413:
	movq $0x1,%r15
	jmp L_11370
.p2align 0x4
L_377520:
L_11414:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377521:
L_11415:
	movl $0x40,%ebx
	jmp loop_189
.p2align 0x4
L_377522:
L_11418:
	movq %r13,0x8(%rbp)
	movl $0x2,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377523:
L_11417:
	movq %r13,0x8(%rbp)
	movl $0x8,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377524:
L_11416:
	movq %r13,0x8(%rbp)
	movl $0xA,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377525:
L_11420:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377526:
L_11421:
	testl %r15d,%r15d
	jz L_11420
L_11422:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x41,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11423
.p2align 0x4
.long 0x27
L_11423:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_191:
	cmpq $0x41,%r15
	jnl L_377527
L_11429:
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_191
.p2align 0x4
L_377527:
L_11424:
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_377530
	cmpb $0x2,%r15b
	je L_377529
	cmpb $0x3,%r15b
	je L_377528
L_11425:
	movq %r14,0x8(%rbp)
	movl $0x10,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377528:
L_11428:
	movq %r14,0x8(%rbp)
	movl $0x2,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377529:
L_11427:
	movq %r14,0x8(%rbp)
	movl $0x8,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377530:
L_11426:
	movq %r14,0x8(%rbp)
	movl $0xA,%ecx
	jmp sextdFromInt32ToInt64_0
.text
.p2align 0x4
.globl mod_0
.hidden mod_0
mod_0:
L_11433:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11434
L_11454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_11455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11455
.p2align 0x4
.long 0x454
L_11455:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_11434:
	movl 0x4(%rbp),%eax
	cmpl $0x0,%eax
	jl L_377536
L_11435:
	movl 0x0(%rbp),%r15d
	cmpl $0x0,%r15d
	jg L_377535
L_11436:
	cmpl $0x0,%r15d
	jnl L_377534
L_11439:
	testl %eax,%eax
	jz L_377533
L_11440:
	decl %eax
	cltd
	idivl %r15d
	incl %r15d
	addl %r15d,%edx
	movl %edx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377533:
L_11442:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377534:
L_11438:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377535:
L_11443:
	cltd
	idivl %r15d
	movl %edx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377536:
L_11444:
	movl 0x0(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_377538
L_11445:
	cmpl $0x0,%r15d
	jng L_11438
L_11447:
	incl %eax
	cltd
	idivl %r15d
	decl %r15d
	addl %r15d,%edx
	movl %edx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377538:
L_11448:
	cmpl $0x80000000,%eax
	jne L_11450
L_11451:
	cmpl $0xFFFFFFFF,%r15d
	je L_11442
L_11450:
	movl 0x4(%rbp),%eax
	cltd
	idivl 0x0(%rbp)
	movl %edx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl append_0
.hidden append_0
append_0:
L_11456:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11457
L_11473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_11474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11474
.p2align 0x4
.long 0x460
L_11474:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_11457:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	testq %r14,%r14
	jz L_377547
L_11458:
	testq %rdx,%rdx
	jz L_377546
L_11459:
	addq %r14,%rdx
	movq %rdx,0x20(%rbp)
	jz L_377545
L_11460:
	cmpq $0x7FFFFFFF,%rdx
	ja L_377544
L_11461:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11462
.p2align 0x4
.long 0x496
L_11462:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,%r15
L_11463:
	movq 0x8(%rbp),%r10
	movq 0x10(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_192:
	cmpq 0x20(%rbp),%r14
	jnl L_377543
L_11465:
	cmpq %r11,%r13
	jnl L_377542
L_11468:
	movb 0x0(%r10,%r13,1),%dl
	movq %r10,(localObjptr+0x8)(%rip)
	incq %r13
L_11467:
	movb %dl,0x0(%r15,%r14,1)
	incq %r14
	movq (localObjptr+0x8)(%rip),%r10
	jmp loop_192
.p2align 0x4
L_377542:
L_11466:
	movq 0x0(%rbp),%r10
	movb 0x0(%r10),%dl
	movq %r10,(localObjptr+0x8)(%rip)
	movq 0x18(%rbp),%r11
	movq $0x1,%r13
	jmp L_11467
.p2align 0x4
L_377543:
L_11464:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377544:
L_11469:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377545:
L_11470:
	movq (globalObjptr+0x5C0)(%rip),%r15
	jmp L_11463
.p2align 0x4
L_377546:
L_11471:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377547:
L_11472:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl exnMessage_0
.hidden exnMessage_0
exnMessage_0:
L_11475:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11476
L_11537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11538
.p2align 0x4
.long 0x45D
L_11538:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11476:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je name_0
L_11477:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_11478:
	cmpq $0x1,%r14
	je L_377562
	cmpq $0x2,%r14
	je L_377552
L_11480:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_11481
L_11485:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC99,%r11
	je L_377550
L_11481:
	cmpq $0x1,%r15
	je name_0
L_11482:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_11478
.p2align 0x4
L_377550:
L_11486:
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_11487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exnMessage_0
.p2align 0x4
L_377552:
L_11506:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_11507
L_11510:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xC98,%r13
	je L_377554
L_11507:
	cmpq $0x1,%r15
	je name_0
L_11508:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_11478
.p2align 0x4
L_377554:
L_11511:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11512
L_11534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11535
.p2align 0x4
.long 0x493
L_11535:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11512:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq %r15,%r14
	andq $0x1,%r14
	jz L_377559
L_11517:
	shrq $0x1,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0x480)(%rip),%r15
	movq (globalObjptr+0x20)(%rip),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_11518:
	movq 0x20(%rbp),%r14
	cmpl %ecx,0x0(%r14)
	je L_377557
L_11519:
	cmpq $0x1,%r15
	je L_377555
L_11520:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_11518
.p2align 0x4
L_377555:
L_11521:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11522
L_11528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11529
.p2align 0x4
.long 0x49B
L_11529:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11522:
	movq (globalObjptr+0xDD08)(%rip),%r15
L_11523:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x488)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	leaq L_11516(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_377557:
L_11530:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11531
L_11532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11533
.p2align 0x4
.long 0x49A
L_11533:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_11531:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_11523
.p2align 0x4
L_377559:
L_11513:
	movq (globalObjptr+0xA058)(%rip),%r15
L_11514:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	leaq L_11516(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_377562:
L_11494:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_11495
L_11498:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xC97,%r13
	je L_377564
L_11495:
	cmpq $0x1,%r15
	je name_0
L_11496:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_11478
.p2align 0x4
L_377564:
L_11499:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11500
L_11503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11504
.p2align 0x4
.long 0x493
L_11504:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11500:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDCF8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	leaq L_11502(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x497
L_11487:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11488
L_11491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_11492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11492
.p2align 0x4
.long 0x498
L_11492:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_11488:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDCE0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDCE8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDCF0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	leaq L_11490(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x499
L_11524:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11525
L_11526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11527
.p2align 0x4
.long 0x49A
L_11527:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_11525:
	movq 0x20(%rbp),%r15
	jmp L_11514
.p2align 0x4
.long 0x25
L_11516:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
L_11515:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
L_11501:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_11502:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
L_11489:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_11490:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl concat_0
.hidden concat_0
concat_0:
L_11539:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11540
L_11586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_11587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11587
.p2align 0x4
.long 0x452
L_11587:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_11540:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_377587
L_11541:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_11542:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377586
.p2align 0x4,,0x7
L_11543:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_377571
L_11544:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_11542
.p2align 0x4
L_377571:
L_11545:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_11546:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377585
.p2align 0x4,,0x7
L_11547:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_377572
L_11548:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_11546
.p2align 0x4
L_377572:
L_11549:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_377579
L_11550:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_11551:
	addq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_377573
L_11552:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_11551
.p2align 0x4
L_377573:
L_11553:
	testq %r15,%r15
	jz L_377578
L_11554:
	cmpq $0x7FFFFFFF,%r15
	ja L_377577
L_11555:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11556
.p2align 0x4
.long 0x49C
L_11556:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_11557:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_193:
	cmpq 0x18(%rbp),%r14
	jnl L_377576
.p2align 0x4,,0x7
loop_194:
	cmpq 0x8(%r11),%r13
	jl L_377575
L_11560:
	cmpq $0x1,%r10
	je L_377574
L_11561:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_194
.p2align 0x4
L_377574:
L_11562:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377575:
L_11563:
	movq %r13,%r9
	addq 0x0(%r11),%r9
	movq 0x10(%r11),%rsp
	movb 0x0(%rsp,%r9,1),%r8b
	movb %r8b,0x0(%r15,%r14,1)
	incq %r13
	incq %r14
	jmp loop_193
.p2align 0x4
L_377576:
L_11558:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377577:
L_11565:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377578:
L_11566:
	movq (globalObjptr+0x5B0)(%rip),%r14
	xchgq %r14,%r15
	jmp L_11557
.p2align 0x4
L_377579:
L_11567:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x20(%rbp)
	testq %r13,%r13
	jnz L_11569
L_11578:
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_377580
L_11580:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377580:
L_11569:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_377583
L_11570:
	cmpq $0x7FFFFFFF,%rdx
	ja L_11565
L_11571:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11572
.p2align 0x4
.long 0x49D
L_11572:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,%r15
L_11573:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_195:
	cmpq 0x20(%rbp),%r14
	jnl L_377581
L_11575:
	movq %r14,%r13
	addq 0x10(%rbp),%r13
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_195
.p2align 0x4
L_377581:
L_11574:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377583:
L_11577:
	movq (globalObjptr+0x5A8)(%rip),%r15
	jmp L_11573
.p2align 0x4
L_377585:
L_11581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_11582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11582
.p2align 0x4
.long 0x45C
L_11582:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_11547
.p2align 0x4
L_377586:
L_11583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_11584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11584
.p2align 0x4
.long 0x45C
L_11584:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_11543
.p2align 0x4
L_377587:
L_11585:
	movq $0x3,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp unfoldi_0
.text
.p2align 0x4
.globl exit_0
.hidden exit_0
exit_0:
L_11588:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11589
L_12270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12271
.p2align 0x4
.long 0x49B
L_12271:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11589:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_377964
L_11590:
	movl $0x1,0x0(%r15)
	movl 0x0(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_377963
L_11591:
	cmpl $0x100,%r14d
	jnl L_377962
L_11602:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_11609
L_11603:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_11604:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0xC,%rax
	ja L_377589
	jmp *jumpTable_13(,%rax,8)
.data
.p2align 0x4
jumpTable_13:
.quad L_377959,L_377957,L_377955,L_11605,L_377952,L_377950,L_377948,L_11605,L_377946,L_377944,L_377942,L_11605,L_377940
.text
.p2align 0x4
L_377589:
L_11605:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x24BA,%rax
	cmpq $0x8A,%rax
	ja L_377590
	jmp *jumpTable_14(,%rax,8)
.data
.p2align 0x4
jumpTable_14:
.quad L_377938,L_377936,L_377934,L_377928,L_377922,L_377916,L_377915,L_377914,L_377913,L_377911,L_377909,L_377907,L_377905,L_377899,L_377893,L_377887,L_377886,L_377885,L_377884,L_377883,L_377879,L_377875,L_377871,L_377867,L_377863,L_377859,L_377855,L_377851,L_377850,L_377849,L_377847,L_377845,L_377843,L_377841,L_377839,L_377837,L_377835,L_377833,L_377831,L_377829,L_377827,L_377825,L_377823,L_377821,L_377819,L_377817,L_377815,L_377813,L_377811,L_377809,L_377807,L_377805,L_377803,L_377801,L_377799,L_377797,L_377795,L_377793,L_377791,L_377789,L_377787,L_377785,L_377783,L_377781,L_377779,L_377777,L_377775,L_377773,L_377771,L_377769,L_377768,L_377767,L_377765,L_377763,L_377761,L_377759,L_377757,L_377755,L_377753,L_377751,L_377749,L_377747,L_377745,L_377743,L_377741,L_377739,L_377737,L_377735,L_377733,L_377731,L_377729,L_377727,L_377725,L_377723,L_377721,L_377719,L_377717,L_377715,L_377713,L_377711,L_377709,L_377707,L_377705,L_377703,L_377701,L_377699,L_377697,L_377695,L_377693,L_377691,L_377689,L_377687,L_377683,L_377681,L_377677,L_377673,L_377669,L_377665,L_377661,L_377657,L_377656,L_377655,L_377654,L_377648,L_377642,L_377636,L_377630,L_377628,L_377626,L_377624,L_377623,L_377622,L_377616,L_377610,L_377604,L_377598,L_377596,L_377594,L_377592
.text
.p2align 0x4
L_377590:
L_11606:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_377591
L_11607:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377591:
L_11609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%rbp),%esi
	movq %rbp,(gcState+0x10)(%rip)
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call MLton_halt
.p2align 0x4
L_377592:
L_12236:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12237:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377594:
L_12233:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12234:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377596:
L_12230:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12231:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377598:
L_12217:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377603
L_12218:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12219:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377601
L_12220:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377599
L_12221:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12219
.p2align 0x4
L_377599:
	movq %r14,%r15
	movq %r13,%r14
L_12223:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12224:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377601:
L_12226:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12227:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377603:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12223
.p2align 0x4
L_377604:
L_12204:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377609
L_12205:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12206:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377607
L_12207:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377605
L_12208:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12206
.p2align 0x4
L_377605:
	movq %r14,%r15
	movq %r13,%r14
L_12210:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12211:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377607:
L_12213:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12214:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377609:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12210
.p2align 0x4
L_377610:
L_12191:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377615
L_12192:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12193:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377613
L_12194:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377611
L_12195:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12193
.p2align 0x4
L_377611:
	movq %r14,%r15
	movq %r13,%r14
L_12197:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12198:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377613:
L_12200:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12201:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377615:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12197
.p2align 0x4
L_377616:
L_12178:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377621
L_12179:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12180:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377619
L_12181:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377617
L_12182:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12180
.p2align 0x4
L_377617:
	movq %r14,%r15
	movq %r13,%r14
L_12184:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12185:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377619:
L_12187:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12188:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377621:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12184
.p2align 0x4
L_377622:
L_12177:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1187
.p2align 0x4
L_377623:
L_12176:
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1188
.p2align 0x4
L_377624:
L_12173:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12174:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377626:
L_12170:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12171:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377628:
L_12167:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12168:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377630:
L_12154:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377635
L_12155:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12156:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377633
L_12157:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377631
L_12158:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12156
.p2align 0x4
L_377631:
	movq %r14,%r15
	movq %r13,%r14
L_12160:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12161:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377633:
L_12163:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12164:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377635:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12160
.p2align 0x4
L_377636:
L_12141:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377641
L_12142:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12143:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377639
L_12144:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377637
L_12145:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12143
.p2align 0x4
L_377637:
	movq %r14,%r15
	movq %r13,%r14
L_12147:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12148:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377639:
L_12150:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12151:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377641:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12147
.p2align 0x4
L_377642:
L_12128:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377647
L_12129:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12130:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377645
L_12131:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377643
L_12132:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12130
.p2align 0x4
L_377643:
	movq %r14,%r15
	movq %r13,%r14
L_12134:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12135:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377645:
L_12137:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12138:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377647:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12134
.p2align 0x4
L_377648:
L_12115:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377653
L_12116:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12117:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377651
L_12118:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377649
L_12119:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12117
.p2align 0x4
L_377649:
	movq %r14,%r15
	movq %r13,%r14
L_12121:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12122:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377651:
L_12124:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12125:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377653:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12121
.p2align 0x4
L_377654:
L_12105:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x48(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_12106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377655:
L_12095:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x48(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_12096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377656:
L_12094:
	movq 0x38(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x2(%r15),%r14b
	movb %r14b,0x50(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x51(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x68(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseNonexhaustiveMatch_0
.p2align 0x4
L_377657:
L_12087:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377659
L_12088:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12089:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377659:
L_12091:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12092:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377661:
L_12080:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377663
L_12081:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12082:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377663:
L_12084:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12085:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377665:
L_12073:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377667
L_12074:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12075:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377667:
L_12077:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12078:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377669:
L_12066:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377671
L_12067:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12068:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377671:
L_12070:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12071:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377673:
L_12059:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_377675
L_12060:
	movq 0x8(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12061:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377675:
L_12063:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12064:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377677:
L_12052:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377679
L_12053:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12054:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377679:
L_12056:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12057:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377681:
L_12049:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movl $0x0,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12050:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377683:
L_12042:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377685
L_12043:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12044:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377685:
L_12046:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12047:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377687:
L_12039:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12040:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377689:
L_12036:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12037:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377691:
L_12033:
	movq 0x0(%r15),%r14
	movb $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12034:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377693:
L_12030:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12031:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377695:
L_12027:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12028:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377697:
L_12024:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12025:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377699:
L_12021:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12022:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377701:
L_12018:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12019:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377703:
L_12015:
	movq 0x0(%r15),%r14
	movb $0x7,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12016:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377705:
L_12012:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12013:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377707:
L_12009:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12010:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377709:
L_12006:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12007:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377711:
L_12003:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12004:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377713:
L_12000:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12001:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377715:
L_11997:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11998:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377717:
L_11994:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11995:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377719:
L_11991:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11992:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377721:
L_11988:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11989:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377723:
L_11985:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11986:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377725:
L_11982:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11983:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377727:
L_11979:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11980:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377729:
L_11976:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11977:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377731:
L_11973:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11974:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377733:
L_11970:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x90)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11971:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377735:
L_11967:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11968:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377737:
L_11964:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11965:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377739:
L_11961:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11962:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377741:
L_11958:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11959:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377743:
L_11955:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11956:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377745:
L_11952:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11953:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377747:
L_11949:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11950:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377749:
L_11946:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11947:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377751:
L_11943:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11944:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377753:
L_11940:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11941:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377755:
L_11937:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA98)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11938:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377757:
L_11934:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA78)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11935:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377759:
L_11931:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11932:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377761:
L_11928:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11929:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377763:
L_11925:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11926:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377765:
L_11922:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11923:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377767:
L_11921:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1190
.p2align 0x4
L_377768:
L_11920:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1191
.p2align 0x4
L_377769:
L_11917:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11918:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377771:
L_11914:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x80)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11915:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377773:
L_11911:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11912:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377775:
L_11908:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11909:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377777:
L_11905:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11906:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377779:
L_11902:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA88)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11903:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377781:
L_11899:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCAA8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11900:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377783:
L_11896:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11897:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377785:
L_11893:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11894:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377787:
L_11890:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11891:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377789:
L_11887:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11888:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377791:
L_11884:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11885:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377793:
L_11881:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11882:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377795:
L_11878:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11879:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377797:
L_11875:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11876:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377799:
L_11872:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11873:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377801:
L_11869:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11870:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377803:
L_11866:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11867:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377805:
L_11863:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x70)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11864:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377807:
L_11860:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xBDB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11861:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377809:
L_11857:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11858:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377811:
L_11854:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11855:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377813:
L_11851:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11852:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377815:
L_11848:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11849:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377817:
L_11845:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11846:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377819:
L_11842:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11843:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377821:
L_11839:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11840:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377823:
L_11836:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11837:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377825:
L_11833:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x60)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11834:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377827:
L_11830:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x7F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11831:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377829:
L_11827:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11828:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377831:
L_11824:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11825:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377833:
L_11821:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11822:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377835:
L_11818:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11819:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377837:
L_11815:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11816:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377839:
L_11812:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11813:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377841:
L_11809:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11810:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377843:
L_11806:
	movq 0x0(%r15),%r14
	movb $0x4,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11807:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377845:
L_11803:
	movq 0x0(%r15),%r14
	movb $0x3,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11804:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377847:
L_11800:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11801:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377849:
L_11799:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_377850:
L_11798:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_377851:
L_11791:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377853
L_11792:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11793:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377853:
L_11795:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11796:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377855:
L_11784:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_377857
L_11788:
	movl %r14d,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11789:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377857:
L_11785:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11786:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377859:
L_11776:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
L_11777:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_377861
L_11781:
	movq 0x0(%r11),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11782:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377861:
L_11778:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11779:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377863:
L_11769:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377865
L_11770:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11771:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377865:
L_11773:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11774:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377867:
L_11762:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377869
L_11763:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11764:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377869:
L_11766:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11767:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377871:
L_11755:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377873
L_11756:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11757:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377873:
L_11759:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11760:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377875:
L_11748:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377877
L_11749:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11750:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377877:
L_11752:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11753:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377879:
L_11741:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_377881
L_11745:
	movl %r14d,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11746:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377881:
L_11742:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11743:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377883:
L_11740:
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseRedundantMatch_0
.p2align 0x4
L_377884:
L_11739:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resolve_0
.p2align 0x4
L_377885:
L_11729:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x48(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_11730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377886:
L_11719:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x48(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_11720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377887:
L_11706:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377892
L_11707:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11708:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377890
L_11709:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377888
L_11710:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11708
.p2align 0x4
L_377888:
	movq %r14,%r15
	movq %r13,%r14
L_11712:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11713:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377890:
L_11715:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11716:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377892:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11712
.p2align 0x4
L_377893:
L_11693:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377898
L_11694:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11695:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377896
L_11696:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377894
L_11697:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11695
.p2align 0x4
L_377894:
	movq %r14,%r15
	movq %r13,%r14
L_11699:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11700:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377896:
L_11702:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11703:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377898:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11699
.p2align 0x4
L_377899:
L_11680:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377904
L_11681:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11682:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377902
L_11683:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377900
L_11684:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11682
.p2align 0x4
L_377900:
	movq %r14,%r15
	movq %r13,%r14
L_11686:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11687:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377902:
L_11689:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11690:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377904:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11686
.p2align 0x4
L_377905:
L_11677:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11678:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377907:
L_11674:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11675:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377909:
L_11671:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11672:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377911:
L_11668:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11669:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377913:
L_11667:
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1194
.p2align 0x4
L_377914:
L_11666:
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1195
.p2align 0x4
L_377915:
L_11658:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	leaq L_11663(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1196
.p2align 0x4
L_377916:
L_11645:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377921
L_11646:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11647:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377919
L_11648:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377917
L_11649:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11647
.p2align 0x4
L_377917:
	movq %r14,%r15
	movq %r13,%r14
L_11651:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11652:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377919:
L_11654:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11655:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377921:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11651
.p2align 0x4
L_377922:
L_11632:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377927
L_11633:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11634:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377925
L_11635:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377923
L_11636:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11634
.p2align 0x4
L_377923:
	movq %r14,%r15
	movq %r13,%r14
L_11638:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11639:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377925:
L_11641:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11642:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377927:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11638
.p2align 0x4
L_377928:
L_11619:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377933
L_11620:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11621:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377931
L_11622:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377929
L_11623:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11621
.p2align 0x4
L_377929:
	movq %r14,%r15
	movq %r13,%r14
L_11625:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11626:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377931:
L_11628:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11629:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377933:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11625
.p2align 0x4
L_377934:
L_11616:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11617:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377936:
L_11613:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11614:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377938:
L_11610:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11611:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377940:
L_12264:
	movq (globalObjptr+0x838)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12265:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377942:
L_12261:
	movq (globalObjptr+0x830)(%rip),%r14
	movl $0x8,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12262:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377944:
.p2align 0x4,,0x7
L_11660:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11661:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377946:
L_12257:
	movq (globalObjptr+0x828)(%rip),%r14
	movl $0x3C,0x0(%r14)
	movl $0x140,0x4(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12258:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377948:
L_12254:
	movq (globalObjptr+0x820)(%rip),%r14
	movl $0x3,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12255:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377950:
L_12251:
	movq (globalObjptr+0x818)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12252:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377952:
L_12248:
	movq (globalObjptr+0x810)(%rip),%r14
	movl $0x2710,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12249:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377955:
L_12245:
	movq (globalObjptr+0x808)(%rip),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12246:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377957:
L_12242:
	movq (globalObjptr+0x800)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12243:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377959:
L_12239:
	movq (globalObjptr+0x7F8)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_12240:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
L_377962:
	movq %r11,%r14
L_11593:
	movq %r14,0x30(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_11594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377963:
	movq %r11,%r14
	jmp L_11593
.p2align 0x4
L_377964:
L_12269:
	movq (globalObjptr+0x840)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x499
L_11659:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_11660
.p2align 0x4
.long 0x25
L_11663:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11609
L_11664:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11604
.p2align 0x4
.long 0x49F
L_12106:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_12107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x49F
L_12096:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_12097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x49F
L_11730:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_11731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x49F
L_11720:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_11721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x474
L_11594:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11595
L_11600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11601
.p2align 0x4
.long 0x49E
L_11601:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_11595:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x850)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD10)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_11596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A0
L_12107:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12108
L_12113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12114
.p2align 0x4
.long 0x4A3
L_12114:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12108:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A0
L_12097:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12098
L_12103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12104
.p2align 0x4
.long 0x4A3
L_12104:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12098:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A0
L_11731:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11732
L_11737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_11738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11738
.p2align 0x4
.long 0x4A3
L_11738:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_11732:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_11733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A0
L_11721:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11722
L_11727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_11728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11728
.p2align 0x4
.long 0x4A3
L_11728:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_11722:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_11723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x474
L_11596:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11597
L_11598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11599
.p2align 0x4
.long 0x49E
L_11599:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_11597:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A1
L_12109:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12110
L_12111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12112
.p2align 0x4
.long 0x4A2
L_12112:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12110:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4A1
L_12099:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12100
L_12101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12102
.p2align 0x4
.long 0x4A2
L_12102:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12100:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4A1
L_11733:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11734
L_11735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_11736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11736
.p2align 0x4
.long 0x4A2
L_11736:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_11734:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4A1
L_11723:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11724
L_11725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_11726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11726
.p2align 0x4
.long 0x4A2
L_11726:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_11724:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_11659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.text
.p2align 0x4
.globl x_1189
.hidden x_1189
x_1189:
L_12272:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12273
L_12343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12344
.p2align 0x4
.long 0x495
L_12344:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12273:
	movq 0x8(%rbp),%r15
	movb 0x8(%r15),%r14b
	movb %r14b,0x4(%rbp)
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x10(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x0(%r11),%r10d
	movl %r10d,0x18(%rbp)
	testl %r10d,%r10d
	jnz L_378003
L_12274:
	movl $0x1,0x0(%r11)
	testl %r15d,%r15d
	jz L_378002
L_12275:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	cmpb $0x1,%r14b
	je L_378001
	cmpb $0x2,%r14b
	je L_378000
	cmpb $0x3,%r14b
	je L_377999
L_12276:
	movq %r13,0x8(%rbp)
	movl $0x10,%ecx
sextdFromInt32ToInt32_0:
	movl 0x0(%rbp),%ebx
	cmpl $0x0,%ebx
	setl %al
	movzbl %al,%eax
	jl L_377998
L_12277:
	negl %ebx
	movl $0x20,%r15d
	xchgl %r15d,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	movl %r15d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
loop_196:
	movl (localWord32+0x0)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377996
L_12278:
	cmpl $0x80000000,%ebx
	sete %al
	movzbl %al,%eax
	jne L_377995
L_12321:
	cmpl $0xFFFFFFFF,%r15d
	jne L_377994
L_12323:
	xorl %r14d,%r14d
	xchgl %r15d,%ecx
	xchgl %r14d,%ebx
	movl %eax,(localWord32+0x10)(%rip)
	movl %r15d,(localWord32+0x8)(%rip)
	movl %r14d,(localWord32+0xC)(%rip)
TildeQues_1:
	negl %ebx
	movslq %ebx,%r15
	cmpq $0x10,%r15
	jnb L_12282
L_12286:
	movq (globalObjptr+0xDCD8)(%rip),%r13
	movb 0x0(%r13,%r15,1),%r11b
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl (localWord32+0x8)(%rip),%ebx
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_12282
L_12288:
	movb %r11b,0x0(%r15,%r13,1)
	movl (localWord32+0x10)(%rip),%r15d
	testl %r15d,%r15d
	jz L_12290
L_12318:
	cmpl $0xFFFFFFFF,%ecx
	je L_12292
L_12290:
	movl (localWord32+0xC)(%rip),%eax
	cltd
	idivl %ecx
	testl %eax,%eax
	jz L_377979
L_12291:
	decl %ebx
	jo L_377977
L_12295:
	movl %ebx,%ecx
	movl %eax,%ebx
	jmp loop_196
.p2align 0x4
L_377977:
L_12292:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377978
L_12293:
	movq $0x3,%r15
L_12284:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377978:
L_12294:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377979:
L_12296:
	movl (localWord32+0x4)(%rip),%r15d
	testl %r15d,%r15d
	jnz L_377987
L_12297:
	movl %ebx,%ecx
L_12298:
	movslq %ecx,%r15
	movq %r15,0x20(%rbp)
	cmpq %r15,%r14
	jb L_377985
L_12299:
	subq %r15,%r14
	movq %r14,0x28(%rbp)
	jz L_377984
L_12300:
	cmpq $0x7FFFFFFF,%r14
	ja L_377982
L_12301:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12302
.p2align 0x4
.long 0x4A4
L_12302:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_12303:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_197:
	cmpq 0x28(%rbp),%r14
	jnl L_377980
L_12308:
	movq 0x20(%rbp),%r13
	addq %r14,%r13
	movq 0x8(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_197
.p2align 0x4
L_377980:
L_12304:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_12306
L_12305:
	movq 0x10(%rbp),%r14
	movl $0x0,0x0(%r14)
L_12306:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377982:
L_12309:
	movl 0x18(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_377983
L_12310:
	movq $0x5,%r15
	jmp L_12284
.p2align 0x4
L_377983:
L_12311:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377984:
L_12312:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_12303
.p2align 0x4
L_377985:
L_12282:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377986
L_12283:
	movq $0x6,%r15
	jmp L_12284
.p2align 0x4
L_377986:
L_12285:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377987:
L_12314:
	decl %ebx
	jo L_12292
L_12315:
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb L_12282
L_12317:
	movq 0x8(%rbp),%r13
	movb $0x7E,0x0(%r13,%r15,1)
	movl %ebx,%ecx
	jmp L_12298
.p2align 0x4
L_377994:
	xchgl %r15d,%ecx
	movl %eax,(localWord32+0x10)(%rip)
	movl %r15d,(localWord32+0x8)(%rip)
L_12280:
	movl %ebx,%eax
	movl %ebx,(localWord32+0xC)(%rip)
	cltd
	idivl %ecx
	movl %edx,%ebx
	jmp TildeQues_1
.p2align 0x4
L_377995:
	xchgl %r15d,%ecx
	movl %eax,(localWord32+0x10)(%rip)
	movl %r15d,(localWord32+0x8)(%rip)
	jmp L_12280
.p2align 0x4
L_377996:
L_12324:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377997
L_12325:
	movq $0x1,%r15
	jmp L_12284
.p2align 0x4
L_377997:
L_12326:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377998:
L_12327:
	movl $0x20,%r15d
	xchgl %r15d,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	movl %r15d,(localWord32+0x0)(%rip)
	jmp loop_196
.p2align 0x4
L_377999:
L_12330:
	movq %r13,0x8(%rbp)
	movl $0x2,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378000:
L_12329:
	movq %r13,0x8(%rbp)
	movl $0x8,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378001:
L_12328:
	movq %r13,0x8(%rbp)
	movl $0xA,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378002:
L_12332:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378003:
L_12333:
	testl %r15d,%r15d
	jz L_12332
L_12334:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x21,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12335
.p2align 0x4
.long 0x4A5
L_12335:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_198:
	cmpq $0x21,%r15
	jnl L_378004
L_12341:
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_198
.p2align 0x4
L_378004:
L_12336:
	movb 0x4(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_378007
	cmpb $0x2,%r15b
	je L_378006
	cmpb $0x3,%r15b
	je L_378005
L_12337:
	movq %r14,0x8(%rbp)
	movl $0x10,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378005:
L_12340:
	movq %r14,0x8(%rbp)
	movl $0x2,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378006:
L_12339:
	movq %r14,0x8(%rbp)
	movl $0x8,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378007:
L_12338:
	movq %r14,0x8(%rbp)
	movl $0xA,%ecx
	jmp sextdFromInt32ToInt32_0
.text
.p2align 0x4
.globl x_1196
.hidden x_1196
x_1196:
L_12345:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12346
L_12389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12390
.p2align 0x4
.long 0x4AF
L_12390:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_12346:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_12347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4A6
L_12347:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_378016
L_12349:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_12350:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_12351
L_12381:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_12351
L_12382:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_12351
L_12384:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_378012
L_12386:
	testl %r11d,%r11d
	jnz L_378011
L_12388:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378011:
L_12351:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xDD18)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_12352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378012:
L_12385:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378016:
L_12348:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_12352:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDD20)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_12353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_12353:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A9
L_12354:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_12355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x4AA
L_12355:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_12356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AB
L_12356:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12357
L_12379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_12380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12380
.p2align 0x4
.long 0x4AE
L_12380:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_12357:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12358:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_12359
L_12360:
	cmpq $0x1,%r14
	je L_378017
L_12361:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12358
.p2align 0x4
L_378017:
L_12362:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12363
L_12377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_12378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12378
.p2align 0x4
.long 0x4AD
L_12378:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_12363:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_378022
L_12364:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_12365:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12366:
	addl 0x0(%r14),%ecx
	movl %ecx,0x38(%rbp)
	jo L_378021
L_12367:
	cmpq $0x1,%r15
	je L_378018
L_12368:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_12366
.p2align 0x4
L_378018:
L_12369:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12370
L_12374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12375
.p2align 0x4
.long 0x4AC
L_12375:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12370:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_378019
L_12371:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_12372:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDD30)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp msg_0
.p2align 0x4
L_378019:
L_12373:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_12372
.p2align 0x4
L_378021:
L_12359:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378022:
L_12376:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_12365
.text
.p2align 0x4
.globl root_0
.hidden root_0
root_0:
L_12391:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12392
L_12401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_12402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12402
.p2align 0x4
.long 0x452
L_12402:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_12392:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je L_378027
L_12393:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144F,%r15
	jne L_378026
L_12395:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_12396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_378026:
L_12394:
	movq (globalObjptr+0x14F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378027:
L_12400:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_12396:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12397
L_12398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12399
.p2align 0x4
.long 0x460
L_12399:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12397:
	movq $0x289F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl str_3
.hidden str_3
str_3:
L_12403:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_12421
L_12404:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378036
L_12405:
	movq 0x0(%rbp),%r14
	cmpq %r14,(globalObjptr+0xA058)(%rip)
	je L_12419
L_12406:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	testq %r13,%r13
	jnz L_12408
L_12411:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_92:
	cmpq %r15,0x8(%rbp)
	je L_378033
L_12412:
	movq (globalObjptr+0xA058)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_378030
L_12417:
	incq %r15
	jmp vectorEqualLoop_92
.p2align 0x4
L_378030:
L_12413:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12408
L_12415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12416
.p2align 0x4
.long 0x458
L_12416:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12408:
	movq 0x8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_378031
L_12410:
	movq $0x1B6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378031:
L_12409:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378033:
L_12419:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378036:
L_12421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_12422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12422
.p2align 0x4
.long 0x452
L_12422:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_12405
.text
.p2align 0x4
.globl layoutPretty_0
.hidden layoutPretty_0
layoutPretty_0:
L_12423:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_12440
L_12424:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378038
L_12425:
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x61,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq $0x71,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq $0x3CD1,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x10(%rsi)
	movq %r14,0x18(%rsi)
	addq $0x30,%r12
	movq %rsp,0x0(%rsi)
	movq %r8,0x8(%rsi)
	movq %rsp,0x20(%rsi)
	movq $0xAF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	movq %rsi,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r11,0x20(%r15)
	movq %r13,0x28(%r15)
	addq $0x38,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_12426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_0
.p2align 0x4
L_378038:
L_12440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12441
.p2align 0x4
.long 0x460
L_12441:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_12425
.p2align 0x4
.long 0x491
L_12426:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12427
L_12438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_12439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12439
.p2align 0x4
.long 0x4B2
L_12439:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_12427:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378040
L_12428:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_12429:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_12430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378040:
L_12434:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A8
L_12430:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12431
L_12435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12436
.p2align 0x4
.long 0x4B1
L_12436:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12431:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_12434
L_12432:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_12429
.text
.p2align 0x4
.globl lay_0
.hidden lay_0
lay_0:
L_12442:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_12493
L_12443:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378044
L_12444:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x18,%r12
	movq $0x9,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsp,0x0(%rsi)
	addq $0x18,%r12
	movq %r15,0x8(%rsi)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq $0xC55,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movl %r13d,0x0(%rdi)
	movq %r8,0x10(%rdi)
	movq %r9,0x18(%rdi)
	movq %r10,0x20(%rdi)
	movq %r11,0x28(%rdi)
	movq %r14,0x30(%rdi)
	movq %rsi,0x38(%rdi)
	addq $0x58,%r12
	movl $0x0,0x4(%rdi)
	movq %rsp,0x8(%rdi)
	movq %r15,0x40(%rdi)
	movq %rsp,0x48(%rdi)
	movq %rdi,0x50(%rbp)
	leaq L_12469(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_378044:
L_12493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12494
.p2align 0x4
.long 0x45D
L_12494:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_12444
.p2align 0x4
.long 0x4B3
L_12445:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12446
L_12467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12468
.p2align 0x4
.long 0x4B8
L_12468:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12446:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378046
L_12447:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_12448:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_12449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378046:
L_12453:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378047
L_12454:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_12455:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_12456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378047:
L_12460:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_12469:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12470
L_12491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12492
.p2align 0x4
.long 0x4B8
L_12492:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12470:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378049
L_12471:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_12472:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_12473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378049:
L_12477:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378050
L_12478:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_12479:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_12480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378050:
L_12484:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B4
L_12449:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12450
L_12464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_12465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12465
.p2align 0x4
.long 0x4B7
L_12465:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_12450:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_12453
L_12451:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_12448
.p2align 0x4
.long 0x4B5
L_12456:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12457
L_12461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_12462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12462
.p2align 0x4
.long 0x4B6
L_12462:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_12457:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_12460
L_12458:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_12455
.p2align 0x4
.long 0x4B4
L_12473:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12474
L_12488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_12489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12489
.p2align 0x4
.long 0x4B7
L_12489:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_12474:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_12477
L_12475:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_12472
.p2align 0x4
.long 0x4B5
L_12480:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12481
L_12485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_12486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12486
.p2align 0x4
.long 0x4B6
L_12486:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_12481:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_12484
L_12482:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_12479
.text
.p2align 0x4
.globl get_11
.hidden get_11
get_11:
L_12495:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12496
L_12758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12759
.p2align 0x4
.long 0x460
L_12759:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12496:
	movq 0x8(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_12497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4B9
L_12497:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_378071
L_12499:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_378070
L_12501:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_378069
L_12502:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_12504:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_12505
L_12750:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA9,%r13
	jne L_12505
L_12751:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_378064
L_12505:
	incl %ecx
	jo L_378063
L_12507:
	cmpq $0x1,%r15
	je L_378061
L_12508:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_12504
.p2align 0x4
L_378061:
L_12509:
L_12510:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_378062
L_12512:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_21
L_12749:
	movl %ecx,0x0(%r15)
x_21:
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_378062:
L_12511:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378063:
L_12506:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378064:
L_12753:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_12511
L_12754:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_378065
L_12756:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378065:
L_12755:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378069:
L_12757:
	xorl %ecx,%ecx
	jmp L_12510
.p2align 0x4
L_378070:
L_12500:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378071:
L_12498:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BA
L_12514:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12515
L_12747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12748
.p2align 0x4
.long 0x4DC
L_12748:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12515:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_12498
L_12516:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x4BB
L_12517:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_378075
	cmpb $0x2,%r14b
	je L_378074
L_12518:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_378074:
L_12743:
	movq (globalObjptr+0xDD58)(%rip),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378075:
L_12742:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BC
L_12519:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12520
L_12740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12741
.p2align 0x4
.long 0x4D9
L_12741:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12520:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_12498
L_12521:
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_378126
L_12522:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_378125
	cmpq $0xE78,%r15
	je L_378114
	cmpq $0xE79,%r15
	je L_378112
	cmpq $0xE7A,%r15
	je L_378110
	cmpq $0xE7B,%r15
	je L_378094
L_12523:
	movq 0x0(%r14),%r15
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_378093
L_12524:
	movq 0x20(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_12500
L_12525:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_378091
L_12526:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x48(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_12528:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_378090
L_12564:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA9,%r11
	jne L_378089
L_12565:
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_378085
L_12529:
	movl 0x48(%rbp),%r11d
	incl %r11d
	movl %r11d,0x4C(%rbp)
	jo L_12506
L_12530:
	cmpq $0x1,%r15
	je L_378076
L_12531:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x48(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_12528
.p2align 0x4
L_378076:
L_12532:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12533
L_12562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12563
.p2align 0x4
.long 0x4C1
L_12563:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12533:
	movl 0x4C(%rbp),%ecx
L_12534:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_12511
L_12535:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_12537
L_12561:
	movl %ecx,0x0(%r15)
L_12537:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movl 0x4(%r15),%r14d
	testl %r14d,%r14d
	jnz L_378080
L_12538:
	movq (globalObjptr+0xD338)(%rip),%r15
	movq %r15,0x30(%rbp)
L_12539:
	movl 0x48(%rbp),%r15d
	cmpl $0x7A,%r15d
	jg L_378078
L_12540:
	cmpl $0xFF,%r15d
	ja L_378077
L_12541:
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x70(%rbp)
	movl $0x1,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_378077:
L_12553:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378078:
L_12554:
	subl $0x7A,%r15d
	jo L_12506
L_12555:
	movl %r15d,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_378080:
L_12560:
	movq (globalObjptr+0xDD40)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_12539
.p2align 0x4
L_378085:
L_12567:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12568
L_12572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12573
.p2align 0x4
.long 0x4C2
L_12573:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12568:
	movl 0x48(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_12511
L_12569:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_378086
L_12570:
	movq 0x50(%rbp),%r15
L_12547:
	movq 0x10(%rbp),%r14
	movb $0x1,0x0(%r14)
L_12548:
	movq $0x1953,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378086:
L_12571:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_12547
.p2align 0x4
L_378089:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_12529
.p2align 0x4
L_378090:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_12529
.p2align 0x4
L_378091:
L_12574:
	xorl %ecx,%ecx
	jmp L_12534
.p2align 0x4
L_378093:
L_12575:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378094:
L_12697:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jz no_0
L_12702:
	movq 0x10(%r13),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_12500
L_12703:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_378108
L_12704:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_12706:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_12707
L_12728:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD0,%r13
	je L_378103
L_12707:
	movl 0x40(%rbp),%r14d
	incl %r14d
	movl %r14d,0x38(%rbp)
	jo L_12506
L_12708:
	cmpq $0x1,%r15
	je L_378095
L_12709:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x40(%rbp)
	movq %r13,0x38(%rbp)
	jmp L_12706
.p2align 0x4
L_378095:
L_12710:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12711
L_12726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12727
.p2align 0x4
.long 0x4D5
L_12727:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12711:
	movl 0x38(%rbp),%ecx
L_12712:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_12511
L_12713:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_12715
L_12725:
	movl %ecx,0x0(%r15)
L_12715:
	movq $0x13F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_12716:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je no_3
L_12717:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_378097
	cmpq $0x1052,%r15
	je L_378096
L_12718:
	movq %r13,0x80(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
L_378096:
L_12723:
	movq %r13,0x80(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
L_378097:
L_12721:
	movq %r11,0x80(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x78(%rbp)
	movq $0x3ED3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
no_3:
no_0:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_378098
L_12700:
	movl %r13d,0x78(%rbp)
	movq $0x3817,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_378098:
L_12586:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378103:
L_12729:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12730
L_12734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12735
.p2align 0x4
.long 0x4D6
L_12735:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12730:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x40(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_12511
L_12731:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_12716
L_12733:
	movl %r14d,0x0(%r13)
	jmp L_12716
.p2align 0x4
L_378108:
L_12736:
	xorl %ecx,%ecx
	jmp L_12712
.p2align 0x4
L_378110:
L_12645:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_378111
L_12646:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x28(%rbp)
	movq %r13,%r15
L_12647:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_378111:
L_12696:
	movq $0x1,0x20(%rbp)
L_12652:
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_378112:
L_12613:
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x1,%r13
	je L_378113
L_12614:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
L_12615:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_378113:
L_12644:
	movq $0x1,0x28(%rbp)
L_12620:
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_378114:
L_12583:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_378116
L_12609:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_12586
L_12611:
	movl %r13d,0x78(%rbp)
	movq $0x3819,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_378116:
L_12584:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x18(%rbp)
	jne L_12586
L_12587:
	testq %rdx,%rdx
	jz L_378123
L_12588:
	cmpq $0x7FFFFFFF,%rdx
	ja L_378122
L_12589:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12590
.p2align 0x4
.long 0x4C5
L_12590:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x28(%rbp)
L_12591:
	movq $0x0,0x30(%rbp)
loop_199:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_378121
L_12592:
	movq 0x28(%rbp),%r15
	movq $0x16E9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_12586
L_12594:
	decl %r13d
	jo L_12506
L_12595:
	movl %r13d,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_200:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378118
.p2align 0x4,,0x7
L_12596:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_378117
L_12597:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movq %r13,%r15
	movl %r14d,0x20(%rbp)
	salq $0x4,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r11
	salq $0x4,%r13
	movq 0x8(%r14,%r13,1),%r15
	movq $0x1033,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2843,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_200
.p2align 0x4
L_378117:
L_12598:
	movl $0x0,0x70(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutRecord_0
.p2align 0x4
L_378118:
L_12603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12604
.p2align 0x4
.long 0x4C6
L_12604:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_12596
.p2align 0x4
L_378121:
L_12605:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_378122:
L_12607:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378123:
L_12608:
	movq (globalObjptr+0x1AD8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_12591
.p2align 0x4
L_378125:
L_12579:
	movq (globalObjptr+0xDD48)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378126:
L_12737:
	shrq $0x1,%r14
	movb %r14b,%r15b
	movb %r15b,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x4DA
simple_6:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12744
L_12745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_12746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12746
.p2align 0x4
.long 0x4DB
L_12746:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_12744:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_12548
.p2align 0x4
.long 0x4BD
L_12542:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12543
L_12551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12552
.p2align 0x4
.long 0x4C0
L_12552:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12543:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BD
L_12556:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12557
L_12558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12559
.p2align 0x4
.long 0x4C0
L_12559:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12557:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD38)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C3
simple_2:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12576
L_12577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12578
.p2align 0x4
.long 0x4C4
L_12578:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12576:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_12547
.p2align 0x4
.long 0x4D4
L_12719:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
L_12720:
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
.long 0x4D4
L_12722:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_12720
.p2align 0x4
.long 0x4D3
L_12701:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x4D0
L_12648:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12649
L_12694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12695
.p2align 0x4
.long 0x4D2
L_12695:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12649:
	movq $0x1031,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2845,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_378133
L_12650:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_12647
.p2align 0x4
L_378133:
L_12651:
	movq %r14,0x20(%rbp)
	jmp L_12652
.p2align 0x4
.long 0x4D1
L_12653:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_12498
L_12654:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_378146
L_12655:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_12656:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_12664
L_12657:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_12658:
	movq 0x8(%r15),%r13
	movq 0x30(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_378142
L_12659:
L_12660:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_12661
L_12682:
	movq 0x8(%r15),%r11
	cmpq %r11,0x8(%r13)
	je L_378136
L_12661:
	cmpq $0x1,%r14
	je L_378135
L_12662:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12658
.p2align 0x4
L_378135:
L_12664:
	movq (globalObjptr+0xDD50)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378136:
L_12685:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_378137
L_12686:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_12656
.p2align 0x4
L_378137:
L_12687:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_12668:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_378140
L_12669:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_12670:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378139
.p2align 0x4,,0x7
L_12671:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1033,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2843,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_378138
L_12672:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_12670
.p2align 0x4
L_378138:
L_12673:
	movq %r14,0x20(%rbp)
L_12674:
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_378139:
L_12677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12678
.p2align 0x4
.long 0x4CD
L_12678:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_12671
.p2align 0x4
L_378140:
L_12679:
	movq %r15,0x20(%rbp)
	jmp L_12674
.p2align 0x4
L_378142:
L_12688:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_12661
L_12689:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r11d,%r15d
	je L_12685
	jmp L_12661
.p2align 0x4
L_378146:
L_12693:
	movq $0x1,%r15
	jmp L_12668
.p2align 0x4
.long 0x4C9
L_12616:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12617
L_12642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12643
.p2align 0x4
.long 0x4CF
L_12643:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12617:
	movq $0x1031,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2845,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_378148
L_12618:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_12615
.p2align 0x4
L_378148:
L_12619:
	movq %r14,0x28(%rbp)
	jmp L_12620
.p2align 0x4
.long 0x4CA
L_12621:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	je L_378150
L_12622:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
L_12623:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378150:
L_12641:
	movq $0x1,%r15
L_12627:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_378153
L_12628:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_12629:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378152
.p2align 0x4,,0x7
L_12630:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1033,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2843,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_378151
L_12631:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_12629
.p2align 0x4
L_378151:
L_12632:
	movq %r14,0x20(%rbp)
L_12633:
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_378152:
L_12636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12637
.p2align 0x4
.long 0x4CD
L_12637:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_12630
.p2align 0x4
L_378153:
L_12638:
	movq %r15,0x20(%rbp)
	jmp L_12633
.p2align 0x4
.long 0x4C8
L_12612:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x4C3
L_12599:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12600
L_12601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12602
.p2align 0x4
.long 0x4C4
L_12602:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12600:
	movq 0x18(%rbp),%r15
	jmp L_12547
.p2align 0x4
.long 0x4C7
L_12606:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_199
.p2align 0x4
.long 0x4C3
simple_3:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12580
L_12581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12582
.p2align 0x4
.long 0x4C4
L_12582:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12580:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_12547
.p2align 0x4
.long 0x4D7
L_12738:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x4BE
L_12544:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4CB
simple_5:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12665
L_12680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12681
.p2align 0x4
.long 0x4CE
L_12681:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12665:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1033,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2843,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_12668
L_12666:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_12656
.p2align 0x4
.long 0x4CC
L_12675:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_12498
L_12676:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutRecord_0
.p2align 0x4
.long 0x4CB
simple_4:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12624
L_12639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12640
.p2align 0x4
.long 0x4CE
L_12640:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12624:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1033,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2843,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_12627
L_12625:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_12623
.p2align 0x4
.long 0x4CC
L_12634:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_12498
L_12635:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutRecord_0
.p2align 0x4
.long 0x4D8
L_12739:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x4BE
simple_1:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12545
L_12549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12550
.p2align 0x4
.long 0x4BF
L_12550:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12545:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x48(%rbp),%r14d
	incl %r14d
	jo L_12506
L_12546:
	movq 0x28(%rbp),%r13
	movl %r14d,0x0(%r13)
	movq $0x1953,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_12547
.text
.p2align 0x4
.globl get_12
.hidden get_12
get_12:
L_12760:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12761
L_12851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12852
.p2align 0x4
.long 0x460
L_12852:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12761:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_12762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4DD
L_12762:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12763
L_12849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12850
.p2align 0x4
.long 0x4AF
L_12850:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_12763:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_378205
L_12765:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_378204
L_12767:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_378203
L_12768:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_12770:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_12771
L_12841:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBC,%r13
	jne L_12771
L_12842:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x10(%rbp)
	je L_378198
L_12771:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_378197
L_12773:
	cmpq $0x1,%r15
	je L_378165
L_12774:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_12770
.p2align 0x4
L_378165:
L_12775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12776
L_12839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_12840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12840
.p2align 0x4
.long 0x4E0
L_12840:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_12776:
	movl 0x20(%rbp),%ecx
L_12777:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_378195
L_12779:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_378180
L_12825:
	movl %ecx,0x0(%r15)
	movq 0x18(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_378166
	jmp *jumpTable_15(,%rax,8)
.data
.p2align 0x4
jumpTable_15:
.quad L_378179,L_378178,L_378177,L_12826,L_378175,L_378174,L_378173,L_12826,L_378172,L_378171,L_378170,L_12826,L_378169,L_378168,L_378167
.text
.p2align 0x4
L_378166:
L_12826:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
loop_201:
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_12782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_378167:
L_12824:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
L_12787:
	movq $0x1979,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378168:
L_12822:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378169:
L_12820:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378170:
L_12818:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378171:
L_12816:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378172:
L_12814:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378173:
L_12812:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378174:
L_12810:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378175:
L_12808:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378177:
L_12806:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378178:
L_12804:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378179:
L_12802:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378180:
L_12780:
	movq 0x18(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_378181
	jmp *jumpTable_16(,%rax,8)
.data
.p2align 0x4
jumpTable_16:
.quad L_12802,L_12804,L_12806,L_12781,L_12808,L_12810,L_12812,L_12781,L_12814,L_12816,L_12818,L_12781,L_12820,L_12822,L_12824
.text
.p2align 0x4
L_378181:
L_12781:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp loop_201
.p2align 0x4
L_378195:
L_12778:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378197:
L_12772:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378198:
L_12844:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_12778
L_12845:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_378199
L_12847:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378199:
L_12846:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378203:
L_12848:
	xorl %ecx,%ecx
	jmp L_12777
.p2align 0x4
L_378204:
L_12766:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378205:
L_12764:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4DE
L_12782:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12783
L_12799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12800
.p2align 0x4
.long 0x4DF
L_12800:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_12783:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_12764
L_12784:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x20(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_378207
	jmp *jumpTable_17(,%rax,8)
.data
.p2align 0x4
jumpTable_17:
.quad L_378220,L_378219,L_378218,L_12785,L_378216,L_378215,L_378214,L_12785,L_378213,L_378212,L_378211,L_12785,L_378210,L_378209,L_378208
.text
.p2align 0x4
L_378207:
L_12785:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp loop_201
.p2align 0x4
L_378208:
L_12798:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378209:
L_12797:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378210:
L_12796:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378211:
L_12795:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378212:
L_12794:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378213:
L_12793:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378214:
L_12792:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378215:
L_12791:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378216:
L_12790:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378218:
L_12789:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378219:
L_12788:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.p2align 0x4
L_378220:
L_12786:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12787
.text
.p2align 0x4
.globl layoutRecord_0
.hidden layoutRecord_0
layoutRecord_0:
L_12853:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12854
L_12999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_13000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13000
.p2align 0x4
.long 0x4E9
L_13000:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_12854:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,0x8(%rbp)
	je L_378223
L_12855:
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_12856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378223:
L_12993:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_378224
L_12994:
	movq (globalObjptr+0xDD70)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (simple_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378224:
L_12998:
	movq (globalObjptr+0xDD78)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (simple_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E1
L_12856:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
L_12857:
	movq 0x8(%rbp),%r15
	andq $0x3,%r15
	jz L_378226
L_12858:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_378226:
L_12859:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12860:
	incl %ecx
	jo L_12861
L_12862:
	cmpq $0x1,%r15
	je L_378227
L_12863:
	movq 0x8(%r15),%r15
	jmp L_12860
.p2align 0x4
L_378227:
L_12864:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_378249
L_12865:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAA3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_12866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12866
.p2align 0x4
.long 0x4E2
L_12866:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
	movq 0x8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_202:
	cmpq 0x20(%rbp),%r15
	jnl L_378229
L_12989:
	cmpq $0x1,%r14
	je L_378228
L_12990:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_202
.p2align 0x4
L_378228:
L_12991:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378229:
L_12867:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12868
L_12987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12988
.p2align 0x4
.long 0x4F3
L_12988:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_12868:
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	je L_378230
L_12869:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378230:
L_12870:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_378241
L_12871:
	movq $0x1717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x20(%rbp)
	jna L_12873
L_12874:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_378239
L_12875:
	movq %r14,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_203:
	movl 0x3C(%rbp),%ecx
	cmpl 0x4(%rbp),%ecx
	jnl L_378235
L_12971:
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_378232
L_12972:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378231
L_12979:
	movq %r13,%r15
.p2align 0x4,,0x7
L_12977:
	movq %r15,0x30(%rbp)
	movl %ecx,0x38(%rbp)
	incl 0x3C(%rbp)
	jmp loop_203
.p2align 0x4
L_378231:
L_12973:
	movq %r10,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_12974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378232:
L_12980:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378234
L_12982:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_378233
L_12983:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_12977
.p2align 0x4
L_378233:
.p2align 0x4,,0x7
L_12976:
	movq 0x40(%rbp),%r15
	movl 0x3C(%rbp),%ecx
	jmp L_12977
.p2align 0x4
L_378234:
L_12981:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_12977
.p2align 0x4
L_378235:
L_12876:
	movl 0x4(%rbp),%r15d
	decl %r15d
	movslq 0x38(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	jnb L_12873
L_12878:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_378237
L_12880:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_378236
L_12881:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_12882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_0
.p2align 0x4
L_378236:
L_12861:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378237:
L_12873:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378239:
L_12985:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378241:
L_12885:
	movl 0x4(%rbp),%r15d
	decl %r15d
	jo L_12861
L_12886:
	movl %r15d,0x4(%rbp)
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
loop_204:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378246
.p2align 0x4,,0x7
L_12887:
	movl 0x4(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_378242
L_12888:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x4(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2843,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp loop_204
.p2align 0x4
L_378242:
L_12889:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_378245
L_12890:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r13,%r15
L_12891:
	movl 0x0(%r15),%r14d
	movl %r14d,0x4(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_378243
L_12892:
	movq 0x10(%r14),%r15
L_12893:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_12894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378243:
L_12963:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_12861
L_12964:
	movl %r15d,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_12965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_378245:
L_12966:
	movq $0x1,%r13
	movq %r13,%r15
L_12913:
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_12914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
L_378246:
L_12967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12968
.p2align 0x4
.long 0x4F2
L_12968:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_12887
.p2align 0x4
L_378249:
L_12992:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
simple_8:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12995
L_12996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_12997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12997
.p2align 0x4
.long 0x452
L_12997:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_12995:
	movq 0x0(%rbp),%r15
simple_7:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xC68)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_12974:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	testl %r14d,%r14d
	jz L_12976
L_12978:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_12977
.p2align 0x4
.long 0x4E3
L_12882:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12883
L_12969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12970
.p2align 0x4
.long 0x4F3
L_12970:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_12883:
	movq $0x3D19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl $0x1,0x44(%rbp)
	addq $0x38,%rbp
	leaq (L_12884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x4E4
L_12894:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12895
L_12961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_12962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12962
.p2align 0x4
.long 0x4F1
L_12962:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_12895:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_378254
L_12946:
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_12947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378254:
L_12897:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E4
L_12965:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_12893
.p2align 0x4
.long 0x2B
L_12914:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_12915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4E3
L_12884:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_12885
.p2align 0x4
.long 0x4ED
L_12947:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_12898:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12899
L_12944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12945
.p2align 0x4
.long 0x4EC
L_12945:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12899:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12900:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_12861
L_12901:
	cmpq $0x1,%r14
	je L_378256
L_12902:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12900
.p2align 0x4
L_378256:
L_12903:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12904
L_12942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12943
.p2align 0x4
.long 0x4EB
L_12943:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12904:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_378260
L_12905:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_12906:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_378257
L_12907:
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,%r15
	jmp L_12891
.p2align 0x4
L_378257:
L_12908:
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_12909:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378259
.p2align 0x4,,0x7
L_12910:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_12913
L_12911:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_12909
.p2align 0x4
L_378259:
L_12939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_12940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12940
.p2align 0x4
.long 0x4EA
L_12940:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_12910
.p2align 0x4
L_378260:
L_12941:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_12906
.p2align 0x4
.long 0x2B
L_12915:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12916
L_12937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_12938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12938
.p2align 0x4
.long 0x4E9
L_12938:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_12916:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_378266
L_12917:
	decl %ecx
	jo L_12861
L_12918:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
L_12919:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movl 0x0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_378264
L_12920:
	movq (globalObjptr+0xA2F0)(%rip),%r15
L_12921:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_12922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378264:
L_12935:
	movq (globalObjptr+0xDD68)(%rip),%r15
	jmp L_12921
.p2align 0x4
L_378266:
L_12936:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_12919
.p2align 0x4
.long 0x4EE
L_12948:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12949
L_12959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12960
.p2align 0x4
.long 0x4F0
L_12960:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12949:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12950:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_12861
L_12951:
	cmpq $0x1,%r14
	je L_378268
L_12952:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12950
.p2align 0x4
L_378268:
L_12953:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12954
L_12957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_12958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12958
.p2align 0x4
.long 0x4EF
L_12958:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_12954:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_378269
L_12955:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x30(%rbp)
	jmp L_12897
.p2align 0x4
L_378269:
L_12956:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_12897
.p2align 0x4
.long 0x4E6
L_12922:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12923
L_12933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12934
.p2align 0x4
.long 0x4E8
L_12934:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_12923:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12924:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_12861
L_12925:
	cmpq $0x1,%r14
	je L_378273
L_12926:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12924
.p2align 0x4
L_378273:
L_12927:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12928
L_12931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12932
.p2align 0x4
.long 0x4E7
L_12932:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_12928:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_378274
L_12929:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp simple_7
.p2align 0x4
L_378274:
L_12930:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp simple_7
.text
.p2align 0x4
.globl qsort_0
.hidden qsort_0
qsort_0:
L_13001:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_205
L_13068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_13069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13069
.p2align 0x4
.long 0x4E9
L_13069:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_205:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_13003
L_13004:
	cmpl $0x14,%r15d
	jng L_378279
L_13006:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_378278
L_13007:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_13008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_378278:
L_13003:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378279:
L_13005:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_13008:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_13009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E6
L_13009:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_13003
L_13010:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_13012
L_13013:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_13012
L_13015:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_13012
L_13017:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_13012
L_13019:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_13012
L_13021:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_13003
L_13022:
	movl %r15d,0x50(%rbp)
.p2align 0x4,,0x7
loop_207:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_13003
L_13023:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_13012
L_13025:
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x10(%r11),%r10
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_378282
L_13026:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378281
L_13062:
	jmp loop_207
.p2align 0x4
L_378281:
L_13027:
	movq %r10,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_13028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378282:
L_13063:
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378298
L_13065:
	shrq $0x1,%r10
	movl %r10d,%r15d
	cmpl %r14d,%r15d
	jl loop_207
L_13066:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
.p2align 0x4,,0x7
loop_208:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_13003
L_13031:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_13012
L_13033:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_378284
L_13034:
	movq 0x60(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378283
L_13056:
	jmp loop_208
.p2align 0x4
L_378283:
L_13035:
	movq %r11,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_13036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378284:
L_13057:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_13039
L_13059:
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %r15d,%r13d
	jnl L_378285
L_13061:
	jmp loop_208
.p2align 0x4
L_378285:
.p2align 0x4,,0x7
L_13039:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_378290
L_13040:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_13012
L_13042:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_13012
L_13044:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_13012
L_13046:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_378286
L_13048:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_207
.p2align 0x4
L_378286:
L_13012:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378290:
L_13049:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_13012
L_13051:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_13012
L_13053:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_13003
L_13054:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_13055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_0
.p2align 0x4
L_378298:
L_13064:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_208
.p2align 0x4
.long 0x4F6
L_13028:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_378308
L_13029:
	movl 0x54(%rbp),%ecx
	jmp loop_207
.p2align 0x4
L_378308:
L_13030:
	movl 0x50(%rbp),%ecx
	jmp loop_208
.p2align 0x4
.long 0x4F7
L_13036:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_13039
L_13037:
	movl 0x50(%rbp),%ecx
	jmp loop_208
.p2align 0x4
.long 0x4F8
L_13055:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_205
.text
.p2align 0x4
.globl x_1216
.hidden x_1216
x_1216:
L_13070:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_13071
L_13087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_13088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13088
.p2align 0x4
.long 0x460
L_13088:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_13071:
	movq 0x8(%rbp),%r8
	movq 0x10(%r8),%r9
	movq 0x0(%rbp),%r8
	movq 0x10(%r8),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_209:
	cmpq %r13,%r15
	jl L_378315
L_13072:
	movl $0x1,%ecx
L_13073:
	cmpq %r11,%r14
	jnl L_378313
L_13079:
	testl %ecx,%ecx
	jnz L_13078
L_13080:
	movb 0x0(%r9,%r15,1),%r8b
	movb 0x0(%r10,%r14,1),%spl
	cmpb %spl,%r8b
	jb L_378311
L_13081:
	cmpb %r8b,%spl
	jb L_378310
L_13082:
	incq %r15
	incq %r14
	jmp loop_209
.p2align 0x4
L_378310:
L_13076:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378311:
L_13078:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378313:
L_13074:
	testl %ecx,%ecx
	jnz L_13078
	jmp L_13076
.p2align 0x4
L_378315:
L_13086:
	xorl %ecx,%ecx
	jmp L_13073
.text
.p2align 0x4
.globl fold_0
.hidden fold_0
fold_0:
L_13089:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_210
L_14204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_14205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_14205
.p2align 0x4
.long 0x493
L_14205:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
.p2align 0x4,,0x7
loop_210:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378739
.p2align 0x4,,0x7
L_13091:
	movl 0xC(%rbp),%r15d
	cmpl 0x8(%rbp),%r15d
	jnl L_378738
L_13093:
	incl %r15d
	movl %r15d,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1E6A,%rax
	cmpq $0x32,%rax
	ja L_378317
	jmp *jumpTable_18(,%rax,8)
.data
.p2align 0x4
jumpTable_18:
.quad L_378733,L_378730,L_378721,L_378711,L_378706,L_378701,L_378696,L_378688,L_378680,L_378672,L_378667,L_378662,L_378652,L_378642,L_378635,L_378625,L_378619,L_378608,L_378603,L_378601,L_378596,L_378588,L_378568,L_378553,L_378534,L_378518,L_378509,L_378494,L_378485,L_378477,L_378454,L_378449,L_378440,L_378437,L_378427,L_378424,L_378414,L_378404,L_378394,L_378389,L_378384,L_378376,L_378368,L_378360,L_378355,L_378350,L_378345,L_378336,L_378329,L_378324,L_378319
.text
.p2align 0x4
L_378317:
L_13094:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x126F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movslq 0xC(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_378318
L_13097:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14,%r13,8)
.p2align 0x4,,0x7
L_13098:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378318:
L_13096:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378319:
L_14183:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14185:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_250:
	cmpl $0x0,0xC(%rbp)
	jg L_378321
.p2align 0x4,,0x7
L_14187:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14189:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378321:
L_14190:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14192:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_378324:
L_14168:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14170:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_249:
	cmpl $0x0,0xC(%rbp)
	jg L_378326
.p2align 0x4,,0x7
L_14172:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14174:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378326:
L_14175:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14177:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp LtEq_0
.p2align 0x4
L_378329:
L_14154:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jnb L_13096
L_14156:
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
loop_248:
	cmpl $0x0,%ecx
	jng L_14158
L_14161:
	movl %ecx,%r10d
	decl %r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jnb L_13096
L_14163:
	movq 0x0(%r14,%r9,8),%r8
	movl 0x0(%r8),%r9d
	cmpl %r9d,0x0(%r15)
	jnl L_378331
L_14165:
	movslq %ecx,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_13096
L_14167:
	movq %r11,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r8,0x0(%r11,%r9,8)
	movl %r10d,%ecx
	jmp loop_248
.p2align 0x4
L_378331:
L_14158:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_13096
L_14160:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11,%r14,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378336:
L_14134:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jnb L_13096
L_14136:
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
loop_247:
	cmpl $0x0,%ecx
	jng L_14138
L_14141:
	movl %ecx,%ebx
	decl %ebx
	movslq %ebx,%r10
	cmpq %r13,%r10
	jnb L_13096
L_14143:
	movq 0x0(%r14,%r10,8),%r8
	movq 0x8(%r8),%r10
	movq 0x8(%r15),%r9
	movq %r10,%rsp
	andq %r9,%rsp
	andq $0x1,%rsp
	jz L_378340
L_14144:
	cmpq %r10,%r9
	jnl L_378338
L_14147:
	movslq %ecx,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_13096
L_14149:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r11,%r10,8)
	movl %ebx,%ecx
	jmp loop_247
.p2align 0x4
L_378338:
L_14138:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_13096
L_14140:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11,%r14,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378340:
L_14150:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r9,%rsi
	movq %r10,%rdi
	xorq %rax,%rax
	xchgq %r11,%r14
	movq %r13,(localWord64+0x0)(%rip)
	movl %ecx,%r13d
	movl %ebx,(localWord32+0x4)(%rip)
	movq %r8,%rbx
	movq %r11,(localObjptr+0x0)(%rip)
	call IntInf_compare
L_14151:
	cmpl $0x0,%eax
	jng L_378341
	movq %r14,%r11
	movq %rbx,%r8
	movl %r13d,%ecx
	movq (localObjptr+0x0)(%rip),%r14
	movq (localWord64+0x0)(%rip),%r13
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_14147
.p2align 0x4
L_378341:
	movq %r14,%r11
	movl %r13d,%ecx
	jmp L_14138
.p2align 0x4
L_378345:
L_14119:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14121:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_246:
	cmpl $0x0,0xC(%rbp)
	jg L_378347
.p2align 0x4,,0x7
L_14123:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14125:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378347:
L_14126:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14128:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378350:
L_14104:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14106:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_245:
	cmpl $0x0,0xC(%rbp)
	jg L_378352
.p2align 0x4,,0x7
L_14108:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14110:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378352:
L_14111:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14113:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378355:
L_14089:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14091:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_244:
	cmpl $0x0,0xC(%rbp)
	jg L_378357
.p2align 0x4,,0x7
L_14093:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14095:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378357:
L_14096:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14098:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378360:
L_14069:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14071:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_243:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_14073
L_14076:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14078:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378364
L_14086:
	cmpl %r11d,%r15d
	jl L_378362
.p2align 0x4,,0x7
L_14073:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14075:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378362:
.p2align 0x4,,0x7
L_14082:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14084:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_243
.p2align 0x4
L_378364:
L_14079:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_14080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378368:
L_14049:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14051:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_242:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_14053
L_14056:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14058:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378372
L_14066:
	cmpl %r11d,%r15d
	jl L_378370
.p2align 0x4,,0x7
L_14053:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14055:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378370:
.p2align 0x4,,0x7
L_14062:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14064:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_242
.p2align 0x4
L_378372:
L_14059:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_14060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378376:
L_14029:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14031:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_241:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_14033
L_14036:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14038:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378380
L_14046:
	cmpl %r11d,%r15d
	jl L_378378
.p2align 0x4,,0x7
L_14033:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14035:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378378:
.p2align 0x4,,0x7
L_14042:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14044:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_241
.p2align 0x4
L_378380:
L_14039:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_14040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378384:
L_14014:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14016:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_240:
	cmpl $0x0,0xC(%rbp)
	jg L_378386
.p2align 0x4,,0x7
L_14018:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14020:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378386:
L_14021:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14023:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378389:
L_13999:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_14001:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_239:
	cmpl $0x0,0xC(%rbp)
	jg L_378391
.p2align 0x4,,0x7
L_14003:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14005:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378391:
L_14006:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_14008:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378394:
L_13975:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13977:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_238:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13979
L_13982:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13984:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378397
L_13985:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378396
.p2align 0x4,,0x7
L_13989:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13991:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_238
.p2align 0x4
L_378396:
L_13986:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378397:
L_13994:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13979
L_13996:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13989
.p2align 0x4,,0x7
L_13979:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13981:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378404:
L_13951:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13953:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_237:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13955
L_13958:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13960:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_378407
L_13961:
	movq 0x40(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378406
.p2align 0x4,,0x7
L_13965:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13967:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_237
.p2align 0x4
L_378406:
L_13962:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378407:
L_13970:
	movq 0x48(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq 0x40(%rbp),%r15
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_13955
L_13972:
	shrq $0x1,%r15
	movl %r15d,%r13d
	cmpl %r14d,%r13d
	jl L_13965
.p2align 0x4,,0x7
L_13955:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13957:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378414:
L_13927:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13929:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_236:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13931
L_13934:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13936:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378417
L_13937:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378416
.p2align 0x4,,0x7
L_13941:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13943:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_236
.p2align 0x4
L_378416:
L_13938:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378417:
L_13946:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13931
L_13948:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13941
.p2align 0x4,,0x7
L_13931:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13933:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378424:
L_13922:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movslq 0xC(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13924:
	movl 0x0(%r14,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_378425
L_13925:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378425:
L_13926:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378427:
L_13898:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13900:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_235:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13902
L_13905:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13907:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378430
L_13908:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378429
.p2align 0x4,,0x7
L_13912:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13914:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_235
.p2align 0x4
L_378429:
L_13909:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378430:
L_13917:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13902
L_13919:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13912
.p2align 0x4,,0x7
L_13902:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13904:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378437:
L_13893:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r15),%r10d
	movslq 0xC(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13895:
	movl 0x0(%r14,%r15,4),%r9d
	testl %r9d,%r9d
	jz L_378438
L_13897:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378438:
L_13896:
	movl %r10d,0x38(%rbp)
	movq $0x3CF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_13120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_378440:
L_13873:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movslq 0x0(%r15),%r14
	movslq 0xC(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x10(%r11),%r10
	movq 0x8(%r11),%r9
	cmpq 0x0(%r11),%r14
	jnb L_13096
L_13875:
	cmpq %r9,%r13
	jnb L_13096
L_13877:
	imulq %r14,%r9
	addq %r13,%r9
	movq 0x0(%r10,%r9,8),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_378446
L_13879:
	cmpl $0x0,%r13d
	jl L_378445
L_13880:
	movl $0x0,0x24(%rbp)
loop_234:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_378441
L_13881:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378441:
L_13882:
	movslq 0x24(%rbp),%r15
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movl 0x0(%r14,%r15,1),%r13d
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movl 0x0(%r15),%r10d
	movslq %r13d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13884:
	movl 0x0(%r14,%r15,4),%r9d
	testl %r9d,%r9d
	jz L_378443
.p2align 0x4,,0x7
L_13887:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378442
.p2align 0x4,,0x7
L_13888:
	incl 0x24(%rbp)
	jmp loop_234
.p2align 0x4
L_378442:
L_13889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_13890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13890
.p2align 0x4
.long 0x4FF
L_13890:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13888
.p2align 0x4
L_378443:
L_13885:
	movl %r10d,0x48(%rbp)
	movl $0x1,0x0(%r14,%r15,4)
	movq $0x3D15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x4C(%rbp)
	addq $0x40,%rbp
	leaq (L_13886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_378445:
L_13463:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x520)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378446:
L_13435:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378449:
L_13864:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movslq 0xC(%rbp),%r11
	movslq 0x4(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x10(%r9),%r8
	movq 0x8(%r9),%rsp
	cmpq 0x0(%r9),%r11
	jnb L_13096
L_13866:
	cmpq %rsp,%r10
	jnb L_13096
L_13868:
	imulq %r11,%rsp
	addq %rsp,%r10
	movq 0x0(%r8,%r10,8),%r15
	movslq %r13d,%r10
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r9
	cmpq 0x0(%r14),%r11
	jnb L_13096
L_13870:
	cmpq %r9,%r10
	jnb L_13096
L_13872:
	imulq %r11,%r9
	addq %r10,%r9
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13,%r9,8)
	jmp L_13098
.p2align 0x4
L_378454:
L_13820:
	movq 0x0(%rbp),%r11
	movl 0x0(%r11),%ebx
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movslq 0xC(%rbp),%r15
	movslq 0x4(%r11),%r14
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r9
	cmpq 0x0(%r10),%r15
	jnb L_13096
L_13822:
	cmpq %r9,%r14
	jnb L_13096
L_13824:
	imulq %r9,%r15
	addq %r15,%r14
	movq 0x0(%r13,%r14,8),%r11
	movslq %ebx,%r14
	cmpq %r9,%r14
	jnb L_13096
L_13826:
	addq %r15,%r14
	movq 0x0(%r13,%r14,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_13435
L_13828:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%ebx
	movslq %ebx,%r13
	cmpq %r10,%r13
	jne L_13435
L_13830:
	cmpl %ecx,%ebx
	jne L_13832
L_13836:
	xorl %ebx,%ebx
	movq %r11,%r13
.p2align 0x4,,0x7
loop_232:
	cmpl %ecx,%ebx
	movl %ecx,(localWord32+0x0)(%rip)
	je L_378470
L_13837:
	movslq %ebx,%r11
	movl %ebx,(localWord32+0x4)(%rip)
	cmpq %r14,%r11
	jnb L_13096
L_13839:
	movq %r11,%r10
	movq %r11,%r9
	movq %r11,%r8
	salq $0x4,%r10
	movq 0x8(%r13,%r10,1),%rsp
	salq $0x4,%r9
	salq $0x4,%r8
	movq 0x8(%r15,%r8,1),%r10
	salq $0x4,%r11
	movl 0x0(%r13,%r9,1),%r8d
	cmpl %r8d,0x0(%r15,%r11,1)
	jne L_13832
L_13841:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r9
	movl %r9d,%ecx
	movslq %ecx,%r11
	cmpq %r9,%r11
	jne L_13435
L_13843:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r8
	movl %r8d,%ebx
	movslq %ebx,%r11
	cmpq %r8,%r11
	jne L_13435
L_13845:
	cmpl %ebx,%ecx
	jne L_13832
L_13847:
	xorl %ebx,%ebx
	movq %rsp,%r11
.p2align 0x4,,0x7
loop_233:
	cmpl %ecx,%ebx
	je L_378463
L_13848:
	movslq %ebx,%r8
	cmpq %r9,%r8
	jnb L_13096
L_13850:
	movq 0x0(%r11,%r8,8),%rsp
	movq 0x0(%r10,%r8,8),%rsi
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r8
	shrq $0x1,%r8
	cmpq $0xDC5,%r8
	je L_378459
L_13857:
	movq 0x0(%rsp),%r8
	movq 0xFFFFFFFFFFFFFFF8(%rsi),%rsp
	shrq $0x1,%rsp
	cmpq $0xDC6,%rsp
	jne L_13832
L_13858:
	cmpq 0x0(%rsi),%r8
	jne L_378456
	movq %r14,(localWord64+0x8)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	movq %r15,(localObjptr+0x10)(%rip)
L_13855:
	incl %ebx
	jo L_378455
L_13856:
	movq (localObjptr+0x10)(%rip),%r15
	movq (localWord64+0x8)(%rip),%r14
	movq (localObjptr+0x0)(%rip),%r13
	jmp loop_233
.p2align 0x4
L_378455:
L_13125:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378456:
L_13832:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13833
L_13834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_13835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13835
.p2align 0x4
.long 0x505
L_13835:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_13833:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378459:
L_13851:
	movq 0x0(%rsp),%r8
	movq 0xFFFFFFFFFFFFFFF8(%rsi),%rsp
	shrq $0x1,%rsp
	cmpq $0xDC5,%rsp
	jne L_13832
L_13852:
	cmpq 0x0(%rsi),%r8
	jne L_13832
	movq %r15,(localObjptr+0x10)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	movq %r14,(localWord64+0x8)(%rip)
	jmp L_13855
.p2align 0x4
L_378463:
L_13861:
	movl (localWord32+0x4)(%rip),%ebx
	incl %ebx
	jo L_13125
L_13862:
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_232
.p2align 0x4
L_378470:
L_13863:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378477:
L_13805:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movslq 0x4(%r15),%r10
	movslq 0xC(%rbp),%r9
	movq 0x18(%r15),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r8),%rsi
	cmpq 0x0(%r8),%r10
	jnb L_13096
L_13807:
	cmpq %rsi,%r9
	jnb L_13096
L_13809:
	imulq %rsi,%r10
	addq %r9,%r10
	movq 0x0(%rsp,%r10,8),%r15
	cmpq $0x1,%r15
	je L_378482
L_13810:
	movslq %r14d,%r10
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r8
	cmpq 0x0(%r13),%r9
	jnb L_13096
L_13812:
	cmpq %r8,%r10
	jnb L_13096
L_13814:
	imulq %r9,%r8
	addq %r10,%r8
	movl 0x0(%r14,%r8,4),%r13d
	testl %r13d,%r13d
	jz L_378479
L_13816:
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_13096
L_13818:
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r15,0x0(%r11,%r9,8)
	jmp L_13098
.p2align 0x4
L_378479:
L_13815:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378482:
L_13819:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378485:
L_13778:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x24(%rbp)
	movl 0xC(%rbp),%r15d
	cmpl $0xFF,%r15d
	ja L_378493
L_13779:
	movb %r15b,%r13b
	movb %r13b,0x30(%rbp)
	movq %r14,%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_13787
	cmpq $0x2,%r15
	je L_378488
L_13780:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x24AB,%r15
	je L_378487
	cmpq $0x24AC,%r15
	je L_378486
L_13781:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb %r13b,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_13782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_378486:
L_13798:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movb %r13b,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_13799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cp_0
.p2align 0x4
L_378487:
L_13792:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movb %r13b,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_13793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cp_0
.p2align 0x4
L_378488:
L_13801:
	shrq $0x2,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_378489
.p2align 0x4,,0x7
L_13785:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378489:
.p2align 0x4,,0x7
L_13787:
	movslq 0x24(%rbp),%r15
	movslq 0xC(%rbp),%r14
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	cmpq 0x0(%r13),%r15
	jnb L_13096
L_13789:
	cmpq %r10,%r14
	jnb L_13096
L_13791:
	imulq %r10,%r15
	addq %r15,%r14
	movl $0x1,0x0(%r11,%r14,4)
	jmp L_13098
.p2align 0x4
L_378493:
L_13804:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378494:
L_13744:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13746:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_231:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13748
L_13751:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13753:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movb 0x24(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_378501
L_13754:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378497
L_13755:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378496
.p2align 0x4,,0x7
L_13759:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13761:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_231
.p2align 0x4
L_378496:
L_13756:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378497:
L_13764:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13748
L_13766:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13759
.p2align 0x4,,0x7
L_13748:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13750:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378501:
L_13769:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378503
L_13770:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_13759
L_13771:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378503:
L_13773:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13748
L_13775:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13759
	jmp L_13748
.p2align 0x4
L_378509:
L_13724:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jnb L_13096
L_13726:
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
loop_230:
	cmpl $0x0,%ecx
	jng L_13728
L_13731:
	movl %ecx,%ebx
	decl %ebx
	movslq %ebx,%r10
	cmpq %r13,%r10
	jnb L_13096
L_13733:
	movq 0x0(%r14,%r10,8),%r9
	movq %r9,%r10
	andq %r15,%r10
	andq $0x1,%r10
	jz L_378513
L_13734:
	cmpq %r9,%r15
	jnl L_378511
	movq %r9,%r10
L_13737:
	movslq %ecx,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_13096
L_13739:
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r10,0x0(%r11,%r9,8)
	movl %ebx,%ecx
	jmp loop_230
.p2align 0x4
L_378511:
L_13728:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_13096
L_13730:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11,%r14,8)
	jmp L_13098
.p2align 0x4
L_378513:
L_13740:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r9,%rdi
	xorq %rax,%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movl %ecx,%r14d
	xchgq %r11,%r13
	movl %ebx,(localWord32+0x4)(%rip)
	movq %r9,%rbx
	movq %r11,(localWord64+0x0)(%rip)
	call IntInf_compare
L_13741:
	cmpl $0x0,%eax
	jng L_378514
	movq %r13,%r11
	movq %rbx,%r10
	movl %r14d,%ecx
	movq (localObjptr+0x0)(%rip),%r14
	movq (localWord64+0x0)(%rip),%r13
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_13737
.p2align 0x4
L_378514:
	movq %r13,%r11
	movl %r14d,%ecx
	jmp L_13728
.p2align 0x4
L_378518:
L_13693:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movslq 0xC(%rbp),%r10
	cmpq %r11,%r10
	jnb L_13096
L_13695:
	movq 0x0(%r15,%r10,8),%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	jnb L_13096
L_13697:
	movslq 0x0(%r14,%r10,4),%r8
	cmpq %r11,%r8
	jnb L_13096
L_13699:
	movq 0x0(%r15,%r8,8),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r9),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_378530
L_13700:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_378529
L_13701:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_13703:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_378528
L_13716:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC9,%r11
	jne L_378527
L_13717:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_378524
L_13704:
	incl %ecx
	movl %ecx,0xC(%rbp)
	jo L_13125
L_13705:
	cmpq $0x1,%r15
	je L_378519
L_13706:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_13703
.p2align 0x4
L_378519:
L_13707:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378522
.p2align 0x4,,0x7
L_13708:
	movl 0xC(%rbp),%ecx
L_13709:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_378521
L_13710:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_13712
L_13713:
	movl %ecx,0x0(%r15)
L_13712:
	movq $0x1993,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_13098
.p2align 0x4
L_378521:
L_13667:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378522:
L_13714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_13715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13715
.p2align 0x4
.long 0x481
L_13715:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_13708
.p2align 0x4
L_378524:
L_13719:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_13667
L_13720:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_378525
L_13722:
	movl %ecx,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x530)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378525:
L_13721:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x530)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378527:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_13704
.p2align 0x4
L_378528:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_13704
.p2align 0x4
L_378529:
L_13723:
	xorl %ecx,%ecx
	jmp L_13709
.p2align 0x4
L_378530:
L_13656:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378534:
L_13650:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq 0xC(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13652:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_13675
L_13653:
	movq 0x8(%r10),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x40(%rbp)
L_13654:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378550
.p2align 0x4,,0x7
L_13655:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%r11),%r14
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_13656
L_13657:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_378548
L_13658:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x24(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_13660:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_378547
L_13679:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_378546
L_13680:
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_378542
L_13661:
	movl 0x24(%rbp),%r11d
	incl %r11d
	movl %r11d,0x40(%rbp)
	jo L_13125
L_13662:
	cmpq $0x1,%r15
	je L_378535
L_13663:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x24(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_13660
.p2align 0x4
L_378535:
L_13664:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378540
.p2align 0x4,,0x7
L_13665:
	movl 0x40(%rbp),%ecx
L_13666:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_13667
L_13668:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_13670
L_13676:
	movl %ecx,0x0(%r15)
L_13670:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFE,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_22:
	movslq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_13096
L_13672:
	movq 0x0(%r15,%r14,8),%r13
	movq $0x1B59,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl 0xC(%rbp),%r13d
	movl %r13d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_378536
L_13673:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_13654
.p2align 0x4
L_378536:
L_13675:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378540:
L_13677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_13678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13678
.p2align 0x4
.long 0x47F
L_13678:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_13665
.p2align 0x4
L_378542:
L_13682:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378545
.p2align 0x4,,0x7
L_13683:
	movl 0x24(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_13667
L_13684:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_378543
L_13685:
	movq 0x40(%rbp),%r15
	jmp x_22
.p2align 0x4
L_378543:
L_13686:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x24(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp x_22
.p2align 0x4
L_378545:
L_13687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_13688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13688
.p2align 0x4
.long 0x47C
L_13688:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_13683
.p2align 0x4
L_378546:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_13661
.p2align 0x4
L_378547:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_13661
.p2align 0x4
L_378548:
L_13689:
	xorl %ecx,%ecx
	jmp L_13666
.p2align 0x4
L_378550:
L_13690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_13691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13691
.p2align 0x4
.long 0x47C
L_13691:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_13655
.p2align 0x4
L_378553:
L_13616:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13618:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_229:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13620
L_13623:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13625:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movb 0x24(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_378560
L_13626:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378556
L_13627:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378555
.p2align 0x4,,0x7
L_13631:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13633:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_229
.p2align 0x4
L_378555:
L_13628:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378556:
L_13636:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13620
L_13638:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13631
.p2align 0x4,,0x7
L_13620:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13622:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378560:
L_13641:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378562
L_13642:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_13631
L_13643:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378562:
L_13645:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13620
L_13647:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13631
	jmp L_13620
.p2align 0x4
L_378568:
L_13573:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13575:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_228:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13577
L_13580:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13582:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movb 0x24(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_378580
	cmpb $0x2,%r15b
	je L_378575
L_13583:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378571
L_13584:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378570
.p2align 0x4,,0x7
L_13588:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13590:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_228
.p2align 0x4
L_378570:
L_13585:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378571:
L_13593:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13577
L_13595:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13588
.p2align 0x4,,0x7
L_13577:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13579:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378575:
L_13607:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378577
L_13608:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_13588
L_13609:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378577:
L_13611:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13577
L_13613:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13588
	jmp L_13577
.p2align 0x4
L_378580:
L_13598:
	movq 0x8(%r13),%r14
	movq 0x40(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_378582
L_13599:
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_13588
L_13600:
	movq %r11,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378582:
L_13602:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_13577
L_13604:
	shrq $0x1,%r11
	movl %r11d,%r14d
	cmpl %r13d,%r14d
	jl L_13588
	jmp L_13577
.p2align 0x4
L_378588:
L_13504:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13506:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_227:
	cmpl $0x0,0xC(%rbp)
	jg L_378590
.p2align 0x4,,0x7
L_13508:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13510:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378590:
L_13511:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13513:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movb 0x24(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_378593
	cmpb $0x2,%r15b
	je L_378592
	cmpb $0x3,%r15b
	je L_378591
L_13514:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_13515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_378591:
L_13559:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_13560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_378592:
L_13545:
	movq 0x8(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_13546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_378593:
L_13531:
	movq 0x8(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_13532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_378596:
L_13495:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movslq 0xC(%rbp),%r13
	movslq 0x0(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x10(%r10),%r9
	movq 0x8(%r10),%r8
	cmpq 0x0(%r10),%r13
	jnb L_13096
L_13497:
	cmpq %r8,%r11
	jnb L_13096
L_13499:
	imulq %r13,%r8
	addq %r8,%r11
	movq 0x0(%r9,%r11,8),%r15
	cmpq $0x1,%r15
	je L_378598
L_13500:
	movq $0x28C3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_13096
L_13502:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14,%r13,8)
	jmp L_13098
.p2align 0x4
L_378598:
L_13503:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378601:
L_13492:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movslq 0xC(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13494:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378603:
L_13464:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x30(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x24(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_378607
.p2align 0x4,,0x7
L_13483:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378606
.p2align 0x4,,0x7
L_13484:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%ecx
	incl %ecx
	jo L_13125
L_13485:
	movl %ecx,0x0(%r15)
	movq $0x343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x10,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B6F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_13469:
	movslq 0xC(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13471:
	movl %ecx,0x0(%r14,%r15,4)
	jmp L_13098
.p2align 0x4
L_378606:
L_13486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_13487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13487
.p2align 0x4
.long 0x501
L_13487:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_13484
.p2align 0x4
L_378607:
L_13465:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
L_13466:
	movq 0x50(%rbp),%r15
	movl 0x4(%r15),%r14d
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x20,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x68(%rbp)
	leaq L_13472(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movl $0x0,0x74(%rbp)
	addq $0x68,%rbp
	leaq (L_13467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_378608:
L_13439:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movslq 0x0(%r15),%r14
	movslq 0xC(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x10(%r11),%r10
	movq 0x8(%r11),%r9
	cmpq 0x0(%r11),%r14
	jnb L_13096
L_13441:
	cmpq %r9,%r13
	jnb L_13096
L_13443:
	imulq %r14,%r9
	addq %r9,%r13
	movq 0x0(%r10,%r13,8),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_13435
L_13445:
	cmpl $0x0,%r13d
	jl L_13463
L_13446:
	movl $0x0,0x24(%rbp)
loop_226:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_378609
L_13447:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378609:
L_13448:
	movslq 0x24(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	salq $0x4,%r15
	movq 0x30(%rbp),%r13
	movl 0x0(%r13,%r15,1),%r11d
	movq 0x8(%r13,%r14,1),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_13435
L_13450:
	testl %r9d,%r9d
	jz L_13456
L_13451:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r15),%r10d
	movslq %r11d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13453:
	movl 0x0(%r14,%r15,4),%r9d
	testl %r9d,%r9d
	jz L_378611
.p2align 0x4,,0x7
L_13456:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378610
.p2align 0x4,,0x7
L_13457:
	incl 0x24(%rbp)
	jmp loop_226
.p2align 0x4
L_378610:
L_13458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_13459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13459
.p2align 0x4
.long 0x4FF
L_13459:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13457
.p2align 0x4
L_378611:
L_13454:
	movl %r10d,0x48(%rbp)
	movl $0x1,0x0(%r14,%r15,4)
	movq $0x3D15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x4C(%rbp)
	addq $0x40,%rbp
	leaq (L_13455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_378619:
L_13426:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movslq %r14d,%r11
	movslq 0xC(%rbp),%r10
	movq 0x10(%r15),%r9
	movq 0x10(%r9),%r8
	movq 0x8(%r9),%rsp
	cmpq 0x0(%r9),%r11
	jnb L_13096
L_13428:
	cmpq %rsp,%r10
	jnb L_13096
L_13430:
	imulq %r11,%rsp
	addq %r10,%rsp
	movq %rsp,%r15
	salq $0x4,%r15
	movq 0x8(%r8,%r15,1),%r11
	salq $0x4,%rsp
	movq %rsp,%rax
	cmpl %r14d,0x0(%r8,%rax,1)
	jne L_378622
L_13433:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r10
	cmpq %r10,%r15
	jne L_13435
L_13436:
	testl %r14d,%r14d
	jnz L_378620
L_13438:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378620:
	movq %r13,%r10
L_13432:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378622:
	movq %r13,%r10
	jmp L_13432
.p2align 0x4
L_378625:
L_13402:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13404:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_225:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13406
L_13409:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13411:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378628
L_13412:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378627
.p2align 0x4,,0x7
L_13416:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13418:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_225
.p2align 0x4
L_378627:
L_13413:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378628:
L_13421:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13406
L_13423:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13416
.p2align 0x4,,0x7
L_13406:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13408:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378635:
L_13388:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jnb L_13096
L_13390:
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
loop_224:
	cmpl $0x0,%ecx
	jng L_13392
L_13395:
	movl %ecx,%r10d
	decl %r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jnb L_13096
L_13397:
	movq 0x0(%r14,%r9,8),%r8
	movl 0x0(%r8),%r9d
	cmpl %r9d,0x0(%r15)
	jnl L_378637
L_13399:
	movslq %ecx,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_13096
L_13401:
	movq %r11,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r8,0x0(%r11,%r9,8)
	movl %r10d,%ecx
	jmp loop_224
.p2align 0x4
L_378637:
L_13392:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_13096
L_13394:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11,%r14,8)
	jmp L_13098
.p2align 0x4
L_378642:
L_13364:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13366:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_223:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13368
L_13371:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13373:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378645
L_13374:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378644
.p2align 0x4,,0x7
L_13378:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13380:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_223
.p2align 0x4
L_378644:
L_13375:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378645:
L_13383:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13368
L_13385:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13378
.p2align 0x4,,0x7
L_13368:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13370:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378652:
L_13340:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13342:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_222:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13344
L_13347:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13349:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378655
L_13350:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378654
.p2align 0x4,,0x7
L_13354:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13356:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_222
.p2align 0x4
L_378654:
L_13351:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378655:
L_13359:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13344
L_13361:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13354
.p2align 0x4,,0x7
L_13344:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13346:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378662:
L_13325:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13327:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_221:
	cmpl $0x0,0xC(%rbp)
	jg L_378664
.p2align 0x4,,0x7
L_13329:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13331:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378664:
L_13332:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13334:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378667:
L_13310:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13312:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_220:
	cmpl $0x0,0xC(%rbp)
	jg L_378669
.p2align 0x4,,0x7
L_13314:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13316:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378669:
L_13317:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13319:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378672:
L_13290:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13292:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_219:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13294
L_13297:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13299:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378676
L_13307:
	cmpl %r11d,%r15d
	jl L_378674
.p2align 0x4,,0x7
L_13294:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13296:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378674:
.p2align 0x4,,0x7
L_13303:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13305:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_219
.p2align 0x4
L_378676:
L_13300:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378680:
L_13270:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13272:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_218:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13274
L_13277:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13279:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378684
L_13287:
	cmpl %r11d,%r15d
	jl L_378682
.p2align 0x4,,0x7
L_13274:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13276:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378682:
.p2align 0x4,,0x7
L_13283:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13285:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_218
.p2align 0x4
L_378684:
L_13280:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378688:
L_13250:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13252:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_217:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13254
L_13257:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13259:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378692
L_13267:
	cmpl %r11d,%r15d
	jl L_378690
.p2align 0x4,,0x7
L_13254:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13256:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378690:
.p2align 0x4,,0x7
L_13263:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13265:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_217
.p2align 0x4
L_378692:
L_13260:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378696:
L_13235:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13237:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_216:
	cmpl $0x0,0xC(%rbp)
	jg L_378698
.p2align 0x4,,0x7
L_13239:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13241:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378698:
L_13242:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13244:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378701:
L_13220:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13222:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_215:
	cmpl $0x0,0xC(%rbp)
	jg L_378703
.p2align 0x4,,0x7
L_13224:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13226:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378703:
L_13227:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13229:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378706:
L_13205:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13207:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_214:
	cmpl $0x0,0xC(%rbp)
	jg L_378708
.p2align 0x4,,0x7
L_13209:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13211:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378708:
L_13212:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13214:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378711:
L_13181:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13183:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_213:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13185
L_13188:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13190:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378714
L_13191:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378713
.p2align 0x4,,0x7
L_13195:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13197:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_213
.p2align 0x4
L_378713:
L_13192:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378714:
L_13200:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13185
L_13202:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13195
.p2align 0x4,,0x7
L_13185:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13187:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378721:
L_13131:
	movq 0x0(%rbp),%r9
	movq 0x10(%r9),%r14
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r11,%r15
	jnb L_13096
L_13133:
	movq 0x0(%r14,%r15,8),%r9
	movq %r9,%r15
.p2align 0x4,,0x7
loop_212:
	cmpl $0x0,%ecx
	jng L_13135
L_13138:
	movl %ecx,%r9d
	decl %r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jnb L_13096
L_13140:
	movq 0x0(%r14,%r8,8),%rsp
	movq 0x8(%rsp),%r8
	movq 0x0(%r8),%rsi
	movq %rsi,%r8
	andq $0x1,%r8
	jz L_378726
L_13158:
	shrq $0x1,%rsi
	movl %esi,%r8d
	movq 0x8(%r15),%rsi
	movq 0x0(%rsi),%rdi
	movq %rdi,%rsi
	andq $0x1,%rsi
	jz L_378725
L_13176:
	shrq $0x1,%rdi
	movl %edi,%esi
	cmpl %r8d,%esi
	jnl L_378723
L_13178:
	movslq %ecx,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r8
	jnb L_13096
L_13180:
	movq %r13,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	movq %rsp,0x0(%r13,%r8,8)
	movl %r9d,%ecx
	jmp loop_212
.p2align 0x4
L_378723:
L_13135:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_13096
L_13137:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	jmp L_13098
.p2align 0x4
L_378725:
L_13159:
	movq %r15,0x28(%rbp)
	movq %r10,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (toString_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_378726:
L_13141:
	movq %rsp,0x28(%rbp)
	movq %r10,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (toString_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_378730:
L_13114:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_378731
L_13115:
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_13116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_378731:
L_13124:
	negl %r15d
	jo L_13125
L_13126:
	movl %r15d,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_13127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_378733:
L_13099:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13096
L_13101:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_211:
	cmpl $0x0,0xC(%rbp)
	jg L_378735
.p2align 0x4,,0x7
L_13103:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13105:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13098
.p2align 0x4
L_378735:
L_13106:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13096
L_13108:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp LtEq_0
.p2align 0x4
L_378738:
L_13092:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378739:
L_14202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_14203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_14203
.p2align 0x4
.long 0x493
L_14203:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_13091
.p2align 0x4
.long 0x4F9
L_14193:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_378740
L_14195:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_14196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_378740:
L_14194:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F9
L_14178:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14172
L_14179:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14181:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_249
.p2align 0x4
.long 0x4F9
L_14129:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14123
L_14130:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14132:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_246
.p2align 0x4
.long 0x4F9
L_14114:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14108
L_14115:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14117:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_245
.p2align 0x4
.long 0x4F9
L_14099:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14093
L_14100:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14102:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_244
.p2align 0x4
.long 0x4FE
L_14080:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_14073
	jmp L_14082
.p2align 0x4
.long 0x4FE
L_14060:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_14053
	jmp L_14062
.p2align 0x4
.long 0x4FE
L_14040:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_14033
	jmp L_14042
.p2align 0x4
.long 0x4F9
L_14024:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14018
L_14025:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14027:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_240
.p2align 0x4
.long 0x4F9
L_14009:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14003
L_14010:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14012:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_239
.p2align 0x4
.long 0x4F9
L_13987:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13979
	jmp L_13989
.p2align 0x4
.long 0x4F9
L_13963:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13955
	jmp L_13965
.p2align 0x4
.long 0x4F9
L_13939:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13931
	jmp L_13941
.p2align 0x4
.long 0x4F9
L_13910:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13902
	jmp L_13912
.p2align 0x4
.long 0x4FC
L_13120:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_13098
.p2align 0x4
.long 0x4FA
L_13886:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13887
.p2align 0x4
.long 0x462
L_13782:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%ecx
	movl %ecx,0x30(%rbp)
L_13783:
	testl %ecx,%ecx
	jnz L_13787
	jmp L_13785
.p2align 0x4
.long 0x462
L_13799:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%ecx
	movl %ecx,0x30(%rbp)
	jmp L_13783
.p2align 0x4
.long 0x504
L_13793:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jnz L_13785
L_13794:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x30(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	addq $0x38,%rbp
	leaq (not_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
.long 0x4FE
L_13757:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13748
	jmp L_13759
.p2align 0x4
.long 0x4FE
L_13629:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13620
	jmp L_13631
.p2align 0x4
.long 0x4FE
L_13586:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13577
	jmp L_13588
.p2align 0x4
.long 0x503
L_13515:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_378765
L_13516:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378765:
L_13520:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r14,%r15
	andq %r13,%r15
	andq $0x1,%r15
	jz L_378768
L_13521:
	cmpq %r14,%r13
	jnl L_13508
L_13524:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13526:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_227
.p2align 0x4
L_378768:
L_13527:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_13528:
	cmpl $0x0,%eax
	jg L_13524
	jmp L_13508
.p2align 0x4
.long 0x503
L_13560:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_378770
L_13561:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378770:
L_13565:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r14,%r15
	andq %r13,%r15
	andq $0x1,%r15
	jz L_378772
L_13566:
	cmpq %r14,%r13
	jl L_13524
	jmp L_13508
.p2align 0x4
L_378772:
L_13569:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_13570:
	cmpl $0x0,%eax
	jg L_13524
	jmp L_13508
.p2align 0x4
.long 0x503
L_13546:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_378774
L_13547:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378774:
L_13551:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_378776
L_13552:
	cmpq %r14,%r13
	jl L_13524
	jmp L_13508
.p2align 0x4
L_378776:
L_13555:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_13556:
	cmpl $0x0,%eax
	jg L_13524
	jmp L_13508
.p2align 0x4
.long 0x503
L_13532:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_378778
L_13533:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378778:
L_13537:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_378780
L_13538:
	cmpq %r14,%r13
	jl L_13524
	jmp L_13508
.p2align 0x4
L_378780:
L_13541:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_13542:
	cmpl $0x0,%eax
	jg L_13524
	jmp L_13508
.p2align 0x4
.long 0x500
L_13467:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_13468:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%ecx
	jmp L_13469
.p2align 0x4
.long 0x25
L_13472:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13474
L_13489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_13490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13490
.p2align 0x4
.long 0x502
L_13490:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_13474:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_13475
L_13476:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC9D,%r14
	jne L_378785
L_13477:
	movl 0x0(%r15),%r14d
	movq 0x58(%rbp),%r13
	cmpq %r13,0x8(%r15)
	jne L_378784
L_13479:
	testl %r14d,%r14d
	jnz L_13468
L_13480:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_13483
L_13481:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_13466
.p2align 0x4
L_378784:
L_13478:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378785:
L_13475:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4FA
L_13455:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13456
.p2align 0x4
.long 0x4F9
L_13414:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13406
	jmp L_13416
.p2align 0x4
.long 0x4F9
L_13376:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13368
	jmp L_13378
.p2align 0x4
.long 0x4F9
L_13352:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13344
	jmp L_13354
.p2align 0x4
.long 0x4F9
L_13335:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13329
L_13336:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13338:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_221
.p2align 0x4
.long 0x4F9
L_13320:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13314
L_13321:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13323:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_220
.p2align 0x4
.long 0x4FE
L_13301:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13294
	jmp L_13303
.p2align 0x4
.long 0x4FE
L_13281:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13274
	jmp L_13283
.p2align 0x4
.long 0x4FE
L_13261:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13254
	jmp L_13263
.p2align 0x4
.long 0x4F9
L_13245:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13239
L_13246:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13248:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_216
.p2align 0x4
.long 0x4F9
L_13230:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13224
L_13231:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13233:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_215
.p2align 0x4
.long 0x4F9
L_13215:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13209
L_13216:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13218:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_214
.p2align 0x4
.long 0x4F9
L_13193:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13185
	jmp L_13195
.p2align 0x4
.long 0x474
toString_1:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (rev_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x474
toString_0:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (rev_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4FA
L_13116:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13117
L_13122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_13123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13123
.p2align 0x4
.long 0x481
L_13123:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_13117:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_13118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4FA
L_13127:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13128
L_13129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_13130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13130
.p2align 0x4
.long 0x481
L_13130:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_13128:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_13116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4F9
L_13109:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13103
L_13110:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_13112:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_211
.p2align 0x4
.long 0x506
L_14196:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_14194
L_14197:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x50(%rbp)
	jnl L_14187
L_14199:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13096
L_14201:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_250
.p2align 0x4
.long 0x462
not_1:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	testl %r15d,%r15d
	jnz L_13785
	jmp L_13787
.p2align 0x4
.long 0x474
bug_23:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13517
L_13518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13519
.p2align 0x4
.long 0x49E
L_13519:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13517:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
bug_26:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13562
L_13563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13564
.p2align 0x4
.long 0x49E
L_13564:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13562:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
bug_25:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13548
L_13549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13550
.p2align 0x4
.long 0x49E
L_13550:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13548:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
bug_24:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13534
L_13535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13536
.p2align 0x4
.long 0x49E
L_13536:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13534:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
rev_1:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_378819
L_13160:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_13161:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378818
.p2align 0x4,,0x7
L_13162:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_378817
L_13163:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_13161
.p2align 0x4
L_378817:
L_13165:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_13166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378818:
L_13173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_13174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13174
.p2align 0x4
.long 0x4FD
L_13174:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13162
.p2align 0x4
L_378819:
L_13175:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_13165
.p2align 0x4
.long 0x474
rev_0:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_378822
L_13142:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_13143:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378821
.p2align 0x4,,0x7
L_13144:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_378820
L_13145:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_13143
.p2align 0x4
L_378820:
L_13147:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_13148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378821:
L_13155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_13156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13156
.p2align 0x4
.long 0x4FD
L_13156:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13144
.p2align 0x4
L_378822:
L_13157:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_13147
.p2align 0x4
.long 0x4FB
L_13118:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB4,%r13
	je L_378823
L_13121:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_13120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_378823:
L_13119:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_13120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x474
L_13166:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13167
L_13171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13172
.p2align 0x4
.long 0x49E
L_13172:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13167:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x474
L_13148:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13149
L_13153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13154
.p2align 0x4
.long 0x49E
L_13154:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13149:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x474
bug_22:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13168
L_13169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13170
.p2align 0x4
.long 0x49E
L_13170:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13168:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x474
bug_21:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13150
L_13151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13152
.p2align 0x4
.long 0x49E
L_13152:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13150:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
