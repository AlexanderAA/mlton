/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:54 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_2181
.hidden x_2181
x_2181:
L_311041:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_311106
L_311042:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506495
L_311043:
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_506494
L_311045:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_506493
L_311046:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_311048:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_506492
L_311098:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC6,%r11
	jne L_506491
L_311099:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_506488
L_311049:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_506487
L_311051:
	cmpq $0x1,%r15
	je L_506482
L_311052:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_311048
.p2align 0x4
L_506482:
L_311053:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311054
L_311096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_311097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311097
.p2align 0x4
.long 0x65A
L_311097:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_311054:
	movl 0x8(%rbp),%ecx
L_311055:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_506485
L_311057:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311059
L_311095:
	movl %ecx,0x0(%r15)
L_311059:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_506483
L_311060:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506483:
L_311090:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506485:
L_311056:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506487:
L_311050:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506488:
L_311101:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311056
L_311102:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_506489
L_311104:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
x_1036:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506489:
L_311103:
	movq %r11,%r15
	jmp x_1036
.p2align 0x4
L_506491:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_311049
.p2align 0x4
L_506492:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_311049
.p2align 0x4
L_506493:
L_311105:
	xorl %ecx,%ecx
	jmp L_311055
.p2align 0x4
L_506494:
L_311044:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506495:
L_311106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_311107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311107
.p2align 0x4
.long 0x460
L_311107:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_311043
.p2align 0x4
.long 0x1
L_311061:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_311091:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311092
L_311093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311094
.p2align 0x4
.long 0x452
L_311094:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311092:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_311062:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_311063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_311063:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11160)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_311064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_311064:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_311065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_311065:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311066
L_311088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_311089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311089
.p2align 0x4
.long 0x4AF
L_311089:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_311066:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_311067:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_311050
L_311068:
	cmpq $0x1,%r14
	je L_506498
L_311069:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_311067
.p2align 0x4
L_506498:
L_311070:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311071
L_311086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_311087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311087
.p2align 0x4
.long 0x4E7
L_311087:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_311071:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_506499
L_311072:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_400:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_506499:
L_311085:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_400
.p2align 0x4
.long 0x1
rev_400:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_506505
L_311073:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_311074:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506504
.p2align 0x4,,0x7
L_311075:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506503
L_311076:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_311074
.p2align 0x4
L_506503:
L_311078:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506504:
L_311082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_311083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311083
.p2align 0x4
.long 0x45C
L_311083:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_311075
.p2align 0x4
L_506505:
L_311084:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311078
.p2align 0x4
.long 0x1
bug_657:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311079
L_311080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311081
.p2align 0x4
.long 0x452
L_311081:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311079:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2185
.hidden x_2185
x_2185:
L_311108:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_311109
L_311194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_311195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311195
.p2align 0x4
.long 0x460
L_311195:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_311109:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21EE,%r14
	je L_506518
L_311136:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_506517
L_311137:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_506516
L_311138:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_311140:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_506515
L_311185:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD83,%r10
	jne L_506514
L_311186:
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x8)(%rip)
	je L_506511
L_311141:
	incl %ecx
	jo L_506510
L_311142:
	cmpq $0x1,%r15
	je L_506507
L_311143:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_311140
.p2align 0x4
L_506507:
L_311144:
L_311145:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_506509
L_311146:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1037
L_311184:
	movl %ecx,0x0(%r15)
x_1037:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_506508
L_311148:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506508:
L_311179:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506509:
L_311122:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506510:
L_311117:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506511:
L_311188:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_311122
L_311189:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_506512
L_311192:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_311191:
	movq 0x8(%r15),%r15
L_311126:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506512:
L_311190:
	movq %r14,%r15
	jmp L_311191
.p2align 0x4
L_506514:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_311141
.p2align 0x4
L_506515:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_311141
.p2align 0x4
L_506516:
L_311193:
	xorl %ecx,%ecx
	jmp L_311145
.p2align 0x4
L_506517:
L_311111:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506518:
L_311110:
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_311111
L_311112:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_506528
L_311113:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_311115:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_506527
L_311128:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xD84,%r11
	jne L_506526
L_311129:
	cmpq 0x0(%r14),%r13
	movq %r13,(localObjptr+0x8)(%rip)
	je L_506523
L_311116:
	incl %ecx
	jo L_311117
L_311118:
	cmpq $0x1,%r15
	je L_506519
L_311119:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_311115
.p2align 0x4
L_506519:
L_311120:
L_311121:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311122
L_311123:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_506520
L_311127:
	movl %ecx,0x0(%r14)
	movq (globalObjptr+0x66D0)(%rip),%r15
	jmp L_311126
.p2align 0x4
L_506520:
L_311125:
	movq (globalObjptr+0x66D0)(%rip),%r15
	jmp L_311126
.p2align 0x4
L_506523:
L_311131:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311122
L_311132:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311125
L_311134:
	movl %ecx,0x0(%r15)
	jmp L_311125
.p2align 0x4
L_506526:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_311116
.p2align 0x4
L_506527:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_311116
.p2align 0x4
L_506528:
L_311135:
	xorl %ecx,%ecx
	jmp L_311121
.p2align 0x4
.long 0x1
L_311149:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_311180:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311181
L_311182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311183
.p2align 0x4
.long 0x452
L_311183:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311181:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_311150:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_311151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_311151:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11168)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_311152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_311152:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_311153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_311153:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311154
L_311177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_311178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311178
.p2align 0x4
.long 0x4AF
L_311178:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_311154:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_311155:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_311117
L_311156:
	cmpq $0x1,%r14
	je L_506532
L_311157:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_311155
.p2align 0x4
L_506532:
L_311158:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311159
L_311175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_311176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311176
.p2align 0x4
.long 0x4E7
L_311176:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_311159:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_506533
L_311160:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_401:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_506533:
L_311174:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_401
.p2align 0x4
.long 0x1
rev_401:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_506539
L_311161:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_311162:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506538
.p2align 0x4,,0x7
L_311163:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506537
L_311164:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_311162
.p2align 0x4
L_506537:
L_311166:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506538:
L_311171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_311172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311172
.p2align 0x4
.long 0x45C
L_311172:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_311163
.p2align 0x4
L_506539:
L_311173:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311166
.p2align 0x4
.long 0x1
L_311167:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311168
L_311169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311170
.p2align 0x4
.long 0x452
L_311170:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311168:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2186
.hidden x_2186
x_2186:
L_311196:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_311197
L_311282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_311283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311283
.p2align 0x4
.long 0x460
L_311283:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_311197:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21EE,%r14
	je L_506552
L_311224:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_506551
L_311225:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_506550
L_311226:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_311228:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_506549
L_311273:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD83,%r10
	jne L_506548
L_311274:
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_506545
L_311229:
	incl %ecx
	jo L_506544
L_311230:
	cmpq $0x1,%r15
	je L_506541
L_311231:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_311228
.p2align 0x4
L_506541:
L_311232:
L_311233:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_506543
L_311234:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1038
L_311272:
	movl %ecx,0x0(%r15)
x_1038:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_506542
L_311236:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506542:
L_311267:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506543:
L_311210:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506544:
L_311205:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506545:
L_311276:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_311210
L_311277:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_506546
L_311280:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_311279:
	movq 0x8(%r15),%r15
L_311214:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506546:
L_311278:
	movq %r14,%r15
	jmp L_311279
.p2align 0x4
L_506548:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_311229
.p2align 0x4
L_506549:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_311229
.p2align 0x4
L_506550:
L_311281:
	xorl %ecx,%ecx
	jmp L_311233
.p2align 0x4
L_506551:
L_311199:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506552:
L_311198:
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_311199
L_311200:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_506562
L_311201:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_311203:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_506561
L_311216:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xD84,%r11
	jne L_506560
L_311217:
	cmpq %r13,0x0(%r14)
	movq %r13,(localObjptr+0x8)(%rip)
	je L_506557
L_311204:
	incl %ecx
	jo L_311205
L_311206:
	cmpq $0x1,%r15
	je L_506553
L_311207:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_311203
.p2align 0x4
L_506553:
L_311208:
L_311209:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311210
L_311211:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_506554
L_311215:
	movl %ecx,0x0(%r14)
	movq (globalObjptr+0x66D0)(%rip),%r15
	jmp L_311214
.p2align 0x4
L_506554:
L_311213:
	movq (globalObjptr+0x66D0)(%rip),%r15
	jmp L_311214
.p2align 0x4
L_506557:
L_311219:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311210
L_311220:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311213
L_311222:
	movl %ecx,0x0(%r15)
	jmp L_311213
.p2align 0x4
L_506560:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_311204
.p2align 0x4
L_506561:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_311204
.p2align 0x4
L_506562:
L_311223:
	xorl %ecx,%ecx
	jmp L_311209
.p2align 0x4
.long 0x1
L_311237:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_311268:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311269
L_311270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311271
.p2align 0x4
.long 0x452
L_311271:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311269:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_311238:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_311239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_311239:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11168)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_311240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_311240:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_311241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_311241:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311242
L_311265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_311266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311266
.p2align 0x4
.long 0x4AF
L_311266:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_311242:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_311243:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_311205
L_311244:
	cmpq $0x1,%r14
	je L_506566
L_311245:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_311243
.p2align 0x4
L_506566:
L_311246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311247
L_311263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_311264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311264
.p2align 0x4
.long 0x4E7
L_311264:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_311247:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_506567
L_311248:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_402:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_506567:
L_311262:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_402
.p2align 0x4
.long 0x1
rev_402:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_506573
L_311249:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_311250:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506572
.p2align 0x4,,0x7
L_311251:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506571
L_311252:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_311250
.p2align 0x4
L_506571:
L_311254:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506572:
L_311259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_311260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311260
.p2align 0x4
.long 0x45C
L_311260:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_311251
.p2align 0x4
L_506573:
L_311261:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311254
.p2align 0x4
.long 0x1
L_311255:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311256
L_311257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311258
.p2align 0x4
.long 0x452
L_311258:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311256:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2184
.hidden x_2184
x_2184:
L_311284:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_311285
L_311556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_311557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311557
.p2align 0x4
.long 0x63C
L_311557:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_311285:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_311286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2185
.p2align 0x4
.long 0x7F0
L_311286:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_311287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2186
.p2align 0x4
.long 0x19CC
L_311287:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_506595
L_311288:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r14
	movq %r14,0x60(%rbp)
.p2align 0x4,,0x7
L_311289:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_311296
L_311290:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_311291:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506593
.p2align 0x4,,0x7
L_311292:
	movq 0x78(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_506588
L_311293:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_506576
L_311294:
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_311291
.p2align 0x4
L_506576:
L_311296:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_506577
L_311297:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_311289
.p2align 0x4
L_506577:
L_311298:
	movq 0x60(%rbp),%r15
L_311299:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506587
L_311300:
	movq %r15,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_311301:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_311308
L_311302:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_311303:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506585
.p2align 0x4,,0x7
L_311304:
	movq 0x78(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_506580
L_311305:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_506578
L_311306:
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_311303
.p2align 0x4
L_506578:
L_311308:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_506579
L_311309:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_311301
.p2align 0x4
L_506579:
L_311310:
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
L_311311:
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_311312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2181
.p2align 0x4
L_506580:
L_311524:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_506584
L_311525:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
L_311526:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506583
.p2align 0x4,,0x7
L_311527:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_506581
L_311528:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_311526
.p2align 0x4
L_506581:
L_311530:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_506582
L_311531:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_311301
.p2align 0x4
L_506582:
L_311532:
	movq %r15,0x58(%rbp)
	jmp L_311311
.p2align 0x4
L_506583:
L_311533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_311534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311534
.p2align 0x4
.long 0xC18
L_311534:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_311527
.p2align 0x4
L_506584:
L_311535:
	movq 0x70(%rbp),%r13
	xchgq %r13,%r15
	jmp L_311530
.p2align 0x4
L_506585:
L_311536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_311537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311537
.p2align 0x4
.long 0x804
L_311537:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_311304
.p2align 0x4
L_506587:
L_311539:
	movq %r15,0x58(%rbp)
	jmp L_311311
.p2align 0x4
L_506588:
L_311540:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_506592
L_311541:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
L_311542:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506591
.p2align 0x4,,0x7
L_311543:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_506589
L_311544:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_311542
.p2align 0x4
L_506589:
L_311546:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_311299
L_311547:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_311289
.p2align 0x4
L_506591:
L_311549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_311550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311550
.p2align 0x4
.long 0xC18
L_311550:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_311543
.p2align 0x4
L_506592:
L_311551:
	movq 0x70(%rbp),%r13
	xchgq %r13,%r15
	jmp L_311546
.p2align 0x4
L_506593:
L_311552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_311553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311553
.p2align 0x4
.long 0x804
L_311553:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_311292
.p2align 0x4
L_506595:
L_311555:
	movq 0x0(%rbp),%r15
	jmp L_311299
.p2align 0x4
.long 0xB6B
L_311312:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_506596
L_311313:
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_311314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNear_1
.p2align 0x4
L_506596:
L_311429:
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_311430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4CB4
L_311314:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311315
L_311427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311428
.p2align 0x4
.long 0x4CBA
L_311428:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_311315:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne x_1039
L_311425:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	jne x_2189
L_311426:
	movq 0x48(%rbp),%r15
	movq 0x88(%r15),%r14
	movq 0x80(%r15),%r13
	movq 0x78(%r15),%r11
	movq 0x70(%r15),%r10
	movq 0x68(%r15),%r9
	movq 0x60(%r15),%r8
	movq 0x58(%r15),%rsp
	movb 0x0(%r15),%sil
	movq 0x50(%r15),%rdi
	movq 0x48(%r15),%rdx
	movq 0x40(%r15),%rcx
	movq 0x38(%r15),%rbx
	movq 0x30(%r15),%rax
	movb %sil,(localWord8+0x0)(%rip)
	movq 0x28(%r15),%rsi
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x20(%r15),%r14
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x18(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x10(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x8(%r15),%r10
	movq $0x1909,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq %rsi,0x30(%r15)
	movq %rax,0x38(%r15)
	movq %rbx,0x40(%r15)
	movq %rcx,0x48(%r15)
	movq %rdx,0x50(%r15)
	movq %rdi,0x58(%r15)
	movq %rsp,0x60(%r15)
	movq %r8,0x68(%r15)
	movq %r9,0x70(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0x90(%r15)
	addq $0xA0,%r12
	movzbl (localWord8+0x0)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl $0x1,0x0(%rbp)
	movl $0x1,0x10(%rbp)
	jmp x_2179
.p2align 0x4
x_2189:
x_1039:
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_311316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4CBB
L_311430:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311431
L_311522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311523
.p2align 0x4
.long 0x4CBE
L_311523:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_311431:
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl (globalWord16+0x2B2)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_311432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4CB5
L_311316:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311317
L_311423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311424
.p2align 0x4
.long 0x4CBA
L_311424:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_311317:
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl (globalWord16+0x2B2)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_311318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4CBC
L_311432:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x280,%r15
	jnb L_311433
L_311520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x280,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311521
.p2align 0x4
.long 0x4CBD
L_311521:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_311433:
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl (globalWord16+0x2AA)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_506628
L_311434:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_311435:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506627
.p2align 0x4,,0x7
L_311436:
	movq 0x20(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_506600
L_311437:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_311435
.p2align 0x4
L_506600:
L_311438:
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_311439:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x230,%r15
	jb L_506626
.p2align 0x4,,0x7
L_311440:
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506601
L_311441:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_311439
.p2align 0x4
L_506601:
L_311443:
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506625
L_311444:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_311445:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506624
.p2align 0x4,,0x7
L_311446:
	movq 0x38(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x1247,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2317,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_506602
L_311447:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_311445
.p2align 0x4
L_506602:
L_311448:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_311449:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x210,%r15
	jb L_506623
.p2align 0x4,,0x7
L_311450:
	movq $0x2317,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_506603
L_311451:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_311449
.p2align 0x4
L_506603:
L_311453:
	movq $0x2309,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq (globalObjptr+0x6240)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_506622
L_311454:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_311455:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506621
.p2align 0x4,,0x7
L_311456:
	movq 0x30(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_506604
L_311457:
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_311455
.p2align 0x4
L_506604:
L_311458:
	movw %r14w,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_311459:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506620
.p2align 0x4,,0x7
L_311460:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_506605
L_311461:
	movq %r15,0x40(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movw %r15w,0x30(%rbp)
	jmp L_311459
.p2align 0x4
L_506605:
L_311463:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzwl (globalWord16+0x2AA)(%rip),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzwl (globalWord16+0x2B2)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2303,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506619
L_311464:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_311465:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506618
.p2align 0x4,,0x7
L_311466:
	movq 0x40(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_506606
L_311467:
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_311465
.p2align 0x4
L_506606:
L_311468:
	movw %r14w,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_311469:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506617
.p2align 0x4,,0x7
L_311470:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506607
L_311471:
	movq %r15,0x48(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movw %r15w,0x40(%rbp)
	jmp L_311469
.p2align 0x4
L_506607:
L_311473:
	movq $0x2301,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_311474:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506616
.p2align 0x4,,0x7
L_311475:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506615
L_311476:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x0(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_311477:
	cmpq $0x1,%r14
	jne L_506614
L_311480:
	cmpq $0x1,%r15
	je L_506608
L_311481:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_311477
.p2align 0x4
L_506608:
L_311482:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311483
L_311495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311496
.p2align 0x4
.long 0x452
L_311496:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311483:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_506612
L_311484:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_311485:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506611
.p2align 0x4,,0x7
L_311486:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506609
L_311487:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_311485
.p2align 0x4
L_506609:
L_311489:
	cmpq $0x1,%r15
	je L_506610
L_311490:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506610:
L_311491:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506611:
L_311492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_311493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311493
.p2align 0x4
.long 0x45C
L_311493:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_311486
.p2align 0x4
L_506612:
L_311494:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311489
.p2align 0x4
L_506614:
L_311478:
	movq %r14,0x8(%rbp)
L_311479:
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp L_311474
.p2align 0x4
L_506615:
L_311497:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_311485
.p2align 0x4
L_506616:
L_311498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_311499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311499
.p2align 0x4
.long 0x45C
L_311499:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_311475
.p2align 0x4
L_506617:
L_311500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311501
.p2align 0x4
.long 0x9C1
L_311501:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311470
.p2align 0x4
L_506618:
L_311502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311503
.p2align 0x4
.long 0x4B6
L_311503:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311466
.p2align 0x4
L_506619:
L_311504:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311473
.p2align 0x4
L_506620:
L_311505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_311506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311506
.p2align 0x4
.long 0xC3E
L_311506:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_311460
.p2align 0x4
L_506621:
L_311507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_311508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311508
.p2align 0x4
.long 0x5EC
L_311508:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_311456
.p2align 0x4
L_506622:
L_311509:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311463
.p2align 0x4
L_506623:
L_311510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x210,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311511
.p2align 0x4
.long 0x85E
L_311511:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_311450
.p2align 0x4
L_506624:
L_311512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311513
.p2align 0x4
.long 0x85E
L_311513:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_311446
.p2align 0x4
L_506625:
L_311514:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311453
.p2align 0x4
L_506626:
L_311515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x230,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311516
.p2align 0x4
.long 0x268E
L_311516:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_311440
.p2align 0x4
L_506627:
L_311517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311518
.p2align 0x4
.long 0x268E
L_311518:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_311436
.p2align 0x4
L_506628:
L_311519:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311443
.p2align 0x4
.long 0x4CB6
L_311318:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x238,%r15
	jnb L_311319
L_311421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x238,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311422
.p2align 0x4
.long 0x4CB9
L_311422:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_311319:
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl (globalWord16+0x2AA)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_506658
L_311320:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_311321:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506657
.p2align 0x4,,0x7
L_311322:
	movq 0x38(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_506630
L_311323:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_311321
.p2align 0x4
L_506630:
L_311324:
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_311325:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506656
.p2align 0x4,,0x7
L_311326:
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_506631
L_311327:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_311325
.p2align 0x4
L_506631:
L_311329:
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506655
L_311330:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_311331:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506654
.p2align 0x4,,0x7
L_311332:
	movq 0x40(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x1247,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2317,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_506632
L_311333:
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_311331
.p2align 0x4
L_506632:
L_311334:
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_311335:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506653
.p2align 0x4,,0x7
L_311336:
	movq $0x2317,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_506633
L_311337:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_311335
.p2align 0x4
L_506633:
L_311339:
	movq $0x2309,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq (globalObjptr+0x6240)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_506652
L_311340:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_311341:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506651
.p2align 0x4,,0x7
L_311342:
	movq 0x28(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_506634
L_311343:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_311341
.p2align 0x4
L_506634:
L_311344:
	movw %r14w,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_311345:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506650
.p2align 0x4,,0x7
L_311346:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_506635
L_311347:
	movq %r15,0x30(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movw %r15w,0x28(%rbp)
	jmp L_311345
.p2align 0x4
L_506635:
L_311349:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzwl (globalWord16+0x2AA)(%rip),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzwl (globalWord16+0x2B2)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2303,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506649
L_311350:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_311351:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506648
.p2align 0x4,,0x7
L_311352:
	movq 0x28(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_506636
L_311353:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_311351
.p2align 0x4
L_506636:
L_311354:
	movw %r14w,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_311355:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506647
.p2align 0x4,,0x7
L_311356:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506637
L_311357:
	movq %r15,0x30(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movw %r15w,0x28(%rbp)
	jmp L_311355
.p2align 0x4
L_506637:
L_311359:
	movq $0x2301,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_311360:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506646
.p2align 0x4,,0x7
L_311361:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506645
L_311362:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x18(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_311363:
	cmpq $0x1,%r14
	jne L_506644
L_311366:
	cmpq $0x1,%r15
	je L_506638
L_311367:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_311363
.p2align 0x4
L_506638:
L_311368:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311369
L_311396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311397
.p2align 0x4
.long 0x4CB7
L_311397:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_311369:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_506642
L_311370:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_311371:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506641
.p2align 0x4,,0x7
L_311372:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506639
L_311373:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_311371
.p2align 0x4
L_506639:
L_311375:
	cmpq $0x1,%r15
	je L_506640
L_311376:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
L_311377:
	movq 0x48(%rbp),%r15
	movq 0x88(%r15),%r14
	movq 0x80(%r15),%r13
	movq 0x78(%r15),%r11
	movq 0x70(%r15),%r10
	movq 0x68(%r15),%r9
	movq 0x60(%r15),%r8
	movq 0x58(%r15),%rsp
	movb 0x0(%r15),%sil
	movq 0x50(%r15),%rdi
	movq 0x48(%r15),%rdx
	movq 0x40(%r15),%rcx
	movq 0x38(%r15),%rbx
	movq 0x30(%r15),%rax
	movb %sil,(localWord8+0x0)(%rip)
	movq 0x28(%r15),%rsi
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x20(%r15),%r14
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x18(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x10(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x8(%r15),%r10
	movq $0x1909,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq %rsi,0x30(%r15)
	movq %rax,0x38(%r15)
	movq %rbx,0x40(%r15)
	movq %rcx,0x48(%r15)
	movq %rdx,0x50(%r15)
	movq %rdi,0x58(%r15)
	movq %rsp,0x60(%r15)
	movq %r8,0x68(%r15)
	movq %r9,0x70(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0x90(%r15)
	addq $0xA0,%r12
	movzbl (localWord8+0x0)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movl $0x0,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl $0x1,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_311378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2179
.p2align 0x4
L_506640:
L_311392:
	movq $0x1,0x18(%rbp)
	jmp L_311377
.p2align 0x4
L_506641:
L_311393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311394
.p2align 0x4
.long 0x4EF
L_311394:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311372
.p2align 0x4
L_506642:
L_311395:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311375
.p2align 0x4
L_506644:
L_311364:
	movq %r14,0x20(%rbp)
L_311365:
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_311360
.p2align 0x4
L_506645:
L_311398:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_311371
.p2align 0x4
L_506646:
L_311399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311400
.p2align 0x4
.long 0x4EF
L_311400:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311361
.p2align 0x4
L_506647:
L_311401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311402
.p2align 0x4
.long 0x4CB8
L_311402:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311356
.p2align 0x4
L_506648:
L_311403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311404
.p2align 0x4
.long 0x19BA
L_311404:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311352
.p2align 0x4
L_506649:
L_311405:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311359
.p2align 0x4
L_506650:
L_311406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311407
.p2align 0x4
.long 0x4CB8
L_311407:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311346
.p2align 0x4
L_506651:
L_311408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311409
.p2align 0x4
.long 0x19BA
L_311409:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311342
.p2align 0x4
L_506652:
L_311410:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311349
.p2align 0x4
L_506653:
L_311411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_311412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311412
.p2align 0x4
.long 0x901
L_311412:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_311336
.p2align 0x4
L_506654:
L_311413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_311414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311414
.p2align 0x4
.long 0x901
L_311414:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_311332
.p2align 0x4
L_506655:
L_311415:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311339
.p2align 0x4
L_506656:
L_311416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311417
.p2align 0x4
.long 0x9E4
L_311417:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_311326
.p2align 0x4
L_506657:
L_311418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311419
.p2align 0x4
.long 0x9E4
L_311419:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_311322
.p2align 0x4
L_506658:
L_311420:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311329
.p2align 0x4
.long 0x490
L_311378:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311379
L_311390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_311391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311391
.p2align 0x4
.long 0x5E6
L_311391:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_311379:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_506661
L_311380:
L_311381:
	movq $0x236F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x68E0)(%rip),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	cmpq $0x1,0x18(%rbp)
	je L_506660
L_311382:
L_311383:
L_311384:
	movq $0x2373,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506660:
L_311385:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506661:
L_311386:
	cmpq $0x1,0x18(%rbp)
	je L_506662
L_311387:
L_311388:
	movq (globalObjptr+0x68E8)(%rip),%r15
	jmp L_311384
.p2align 0x4
L_506662:
L_311389:
	movq (globalObjptr+0x68E8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2183
.hidden x_2183
x_2183:
L_311558:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_311559
L_311692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_311693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311693
.p2align 0x4
.long 0x658
L_311693:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_311559:
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_311560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2185
.p2align 0x4
.long 0x637
L_311560:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_311561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2186
.p2align 0x4
.long 0x57F
L_311561:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_506684
L_311562:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r14
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_311563:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_311570
L_311564:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_311565:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506682
.p2align 0x4,,0x7
L_311566:
	movq 0x58(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_506677
L_311567:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_506665
L_311568:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_311565
.p2align 0x4
L_506665:
L_311570:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_506666
L_311571:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_311563
.p2align 0x4
L_506666:
L_311572:
	movq 0x50(%rbp),%r15
L_311573:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506676
L_311574:
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_311575:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_311582
L_311576:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_311577:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506674
.p2align 0x4,,0x7
L_311578:
	movq 0x58(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_506669
L_311579:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_506667
L_311580:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_311577
.p2align 0x4
L_506667:
L_311582:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_506668
L_311583:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_311575
.p2align 0x4
L_506668:
L_311584:
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
L_311585:
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_311586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2181
.p2align 0x4
L_506669:
L_311660:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_506673
L_311661:
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
L_311662:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506672
.p2align 0x4,,0x7
L_311663:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_506670
L_311664:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_311662
.p2align 0x4
L_506670:
L_311666:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_506671
L_311667:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_311575
.p2align 0x4
L_506671:
L_311668:
	movq %r15,0x48(%rbp)
	jmp L_311585
.p2align 0x4
L_506672:
L_311669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_311670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311670
.p2align 0x4
.long 0x901
L_311670:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_311663
.p2align 0x4
L_506673:
L_311671:
	movq 0x60(%rbp),%r13
	xchgq %r13,%r15
	jmp L_311666
.p2align 0x4
L_506674:
L_311672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_311673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311673
.p2align 0x4
.long 0xC18
L_311673:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_311578
.p2align 0x4
L_506676:
L_311675:
	movq %r15,0x48(%rbp)
	jmp L_311585
.p2align 0x4
L_506677:
L_311676:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_506681
L_311677:
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
L_311678:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506680
.p2align 0x4,,0x7
L_311679:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_506678
L_311680:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_311678
.p2align 0x4
L_506678:
L_311682:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_311573
L_311683:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_311563
.p2align 0x4
L_506680:
L_311685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_311686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311686
.p2align 0x4
.long 0x901
L_311686:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_311679
.p2align 0x4
L_506681:
L_311687:
	movq 0x60(%rbp),%r13
	xchgq %r13,%r15
	jmp L_311682
.p2align 0x4
L_506682:
L_311688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_311689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311689
.p2align 0x4
.long 0xC18
L_311689:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_311566
.p2align 0x4
L_506684:
L_311691:
	movq 0x0(%rbp),%r15
	jmp L_311573
.p2align 0x4
.long 0xBBE
L_311586:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311587
L_311658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311659
.p2align 0x4
.long 0x8A8
L_311659:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_311587:
	cmpq $0x1,0x30(%rbp)
	je default_12
L_311588:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
default_12:
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_311589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0xBBA
L_311589:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311590
L_311655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311656
.p2align 0x4
.long 0xBBC
L_311656:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_311590:
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl (globalWord16+0x2B2)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_311591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x4CBF
L_311591:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x248,%r15
	jnb L_311592
L_311653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x248,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311654
.p2align 0x4
.long 0x24FD
L_311654:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_311592:
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl (globalWord16+0x2AA)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_506706
L_311593:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_311594:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506705
.p2align 0x4,,0x7
L_311595:
	movq 0x30(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x1247,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2317,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_506687
L_311596:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_311594
.p2align 0x4
L_506687:
L_311597:
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_311598:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506704
.p2align 0x4,,0x7
L_311599:
	movq $0x2317,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_506688
L_311600:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_311598
.p2align 0x4
L_506688:
L_311602:
	movq $0x2309,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_506703
L_311603:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_311604:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506702
.p2align 0x4,,0x7
L_311605:
	movq 0x38(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq 0x8(%r15),%r13
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl %r14w,%r13d
	movl %r13d,0x4(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_506689
L_311606:
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_311604
.p2align 0x4
L_506689:
L_311607:
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_311608:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506701
.p2align 0x4,,0x7
L_311609:
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_506690
L_311610:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_311608
.p2align 0x4
L_506690:
L_311612:
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2307,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x6240)(%rip),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x232D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x22C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_506700
L_311613:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_311614:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506699
.p2align 0x4,,0x7
L_311615:
	movq 0x40(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_506691
L_311616:
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_311614
.p2align 0x4
L_506691:
L_311617:
	movw %r14w,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_311618:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506698
.p2align 0x4,,0x7
L_311619:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_506692
L_311620:
	movq %r15,0x48(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movw %r15w,0x40(%rbp)
	jmp L_311618
.p2align 0x4
L_506692:
L_311622:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzwl (globalWord16+0x2AA)(%rip),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzwl (globalWord16+0x2B2)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2303,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_506697
L_311623:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_311624:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506696
.p2align 0x4,,0x7
L_311625:
	movq 0x48(%rbp),%r15
	movw 0x4(%r15),%r14w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_506693
L_311626:
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_311624
.p2align 0x4
L_506693:
L_311627:
	movw %r14w,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_311628:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506695
.p2align 0x4,,0x7
L_311629:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_506694
L_311630:
	movq %r15,0x58(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movw %r15w,0x48(%rbp)
	jmp L_311628
.p2align 0x4
L_506694:
L_311632:
	movq $0x2301,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506695:
L_311633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311634
.p2align 0x4
.long 0x4CC0
L_311634:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_311629
.p2align 0x4
L_506696:
L_311635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_311636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311636
.p2align 0x4
.long 0x8C1
L_311636:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_311625
.p2align 0x4
L_506697:
L_311637:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311632
.p2align 0x4
L_506698:
L_311638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_311639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311639
.p2align 0x4
.long 0xA8D
L_311639:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_311619
.p2align 0x4
L_506699:
L_311640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_311641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311641
.p2align 0x4
.long 0x990
L_311641:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_311615
.p2align 0x4
L_506700:
L_311642:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311622
.p2align 0x4
L_506701:
L_311643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_311644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311644
.p2align 0x4
.long 0x85D
L_311644:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_311609
.p2align 0x4
L_506702:
L_311645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_311646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311646
.p2align 0x4
.long 0x85D
L_311646:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_311605
.p2align 0x4
L_506703:
L_311647:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311612
.p2align 0x4
L_506704:
L_311648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311649
.p2align 0x4
.long 0x8A8
L_311649:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311599
.p2align 0x4
L_506705:
L_311650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311651
.p2align 0x4
.long 0x8A8
L_311651:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311595
.p2align 0x4
L_506706:
L_311652:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311602
.text
.p2align 0x4
.globl x_2182
.hidden x_2182
x_2182:
L_311694:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_311758
L_311695:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506718
L_311696:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_506717
L_311697:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_311698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506716
.p2align 0x4,,0x7
L_311699:
	movq 0x38(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,%r10
	je L_311743
L_311700:
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_311701:
	movl 0x0(%r15),%r11d
	movl %r11d,0x48(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x4C(%rbp)
	cmpl %r10d,%r11d
	jnl L_506711
L_311748:
	cmpq $0x1,%r13
	je L_506708
L_311749:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_311701
.p2align 0x4
L_506708:
L_311750:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506710
.p2align 0x4,,0x7
L_311743:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_506709
L_311744:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_311698
.p2align 0x4
L_506709:
L_311707:
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0x6240)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_311708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506710:
L_311752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_311753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311753
.p2align 0x4
.long 0x63C
L_311753:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_311743
.p2align 0x4
L_506711:
L_311702:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506714
.p2align 0x4,,0x7
L_311703:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x4C(%rbp)
	jl L_311743
L_311704:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_506712
L_311705:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_311698
.p2align 0x4
L_506712:
L_311706:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
	jmp L_311707
.p2align 0x4
L_506714:
L_311746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_311747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311747
.p2align 0x4
.long 0xF2C
L_311747:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_311703
.p2align 0x4
L_506716:
L_311755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_311756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311756
.p2align 0x4
.long 0x63C
L_311756:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_311699
.p2align 0x4
L_506717:
L_311757:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311707
.p2align 0x4
L_506718:
L_311758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_311759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311759
.p2align 0x4
.long 0x647
L_311759:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_311696
.p2align 0x4
.long 0x577
L_311708:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311709
L_311740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_311741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311741
.p2align 0x4
.long 0x1010
L_311741:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_311709:
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl (globalWord16+0x2B2)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_311710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
.long 0x55C
L_311710:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311711
L_311738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_311739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311739
.p2align 0x4
.long 0x646
L_311739:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_311711:
	movq $0x1249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movzwl (globalWord16+0x2AA)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2315,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x230B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2307,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x6240)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x68D8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_311712:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506729
.p2align 0x4,,0x7
L_311713:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506728
L_311714:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x0(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_311715:
	cmpq $0x1,%r14
	jne L_506727
L_311718:
	cmpq $0x1,%r15
	je L_506721
L_311719:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_311715
.p2align 0x4
L_506721:
L_311720:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311721
L_311733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311734
.p2align 0x4
.long 0x452
L_311734:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311721:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_506725
L_311722:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_311723:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506724
.p2align 0x4,,0x7
L_311724:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506722
L_311725:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_311723
.p2align 0x4
L_506722:
L_311727:
	cmpq $0x1,%r15
	je L_506723
L_311728:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506723:
L_311729:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506724:
L_311730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_311731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311731
.p2align 0x4
.long 0x45C
L_311731:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_311724
.p2align 0x4
L_506725:
L_311732:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311727
.p2align 0x4
L_506727:
L_311716:
	movq %r14,0x8(%rbp)
L_311717:
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp L_311712
.p2align 0x4
L_506728:
L_311735:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_311723
.p2align 0x4
L_506729:
L_311736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_311737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311737
.p2align 0x4
.long 0x45C
L_311737:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_311713
.text
.p2align 0x4
.globl pushCompensationBlock_0
.hidden pushCompensationBlock_0
pushCompensationBlock_0:
L_311760:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_311761
L_312024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312025
.p2align 0x4
.long 0x45C
L_312025:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_311761:
	movq 0x10(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x88,%rbp
	leaq (L_311762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x9FE
L_311762:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311763
L_312022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_312023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312023
.p2align 0x4
.long 0x4CD3
L_312023:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_311763:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	addq $0x28,%r12
	movl 0x10(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_311764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_0
.p2align 0x4
.long 0x1638
L_311764:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311765
L_312020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312021
.p2align 0x4
.long 0xFF9
L_312021:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311765:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_506748
L_311767:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_506747
L_311768:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x14(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_311770:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_311771
L_311821:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBB,%r13
	jne L_311771
L_311822:
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_506739
L_311771:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0xA8(%rbp)
	jo L_506738
L_311773:
	cmpq $0x1,%r15
	je L_506733
L_311774:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	jmp L_311770
.p2align 0x4
L_506733:
L_311775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311776
L_311819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_311820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311820
.p2align 0x4
.long 0x4CC1
L_311820:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_311776:
	movl 0xA8(%rbp),%ecx
L_311777:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_506736
L_311779:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311781
L_311818:
	movl %ecx,0x0(%r15)
L_311781:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_506734
L_311782:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506734:
L_311813:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506736:
L_311778:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506738:
L_311772:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506739:
L_311824:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311825
L_312017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_312018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312018
.p2align 0x4
.long 0x4CD2
L_312018:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_311825:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_311778
L_311826:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_506741
L_311827:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_506740
L_311828:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r15
L_311829:
	movl %ecx,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_311830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp newProfileLabel_0
.p2align 0x4
L_506740:
L_312013:
	movq $0x1,0x20(%rbp)
L_311832:
	movq $0x2339,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_311833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506741:
L_312014:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_312013
L_312015:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r15
	jmp L_311829
.p2align 0x4
L_506747:
L_312019:
	xorl %ecx,%ecx
	jmp L_311777
.p2align 0x4
L_506748:
L_311766:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_311783:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_311814:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311815
L_311816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311817
.p2align 0x4
.long 0x452
L_311817:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311815:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4CC2
L_311830:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311831
L_312010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312011
.p2align 0x4
.long 0x4CD1
L_312011:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311831:
	movq $0x227D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp L_311832
.p2align 0x4
.long 0x4CC3
L_311833:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311834
L_312008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312009
.p2align 0x4
.long 0x4CD0
L_312009:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311834:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_311841
L_311835:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_311836:
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_506754
L_311837:
	cmpq $0x1,%r14
	je L_506752
L_311838:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_311836
.p2align 0x4
L_506752:
L_311839:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311841
L_312004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312005
.p2align 0x4
.long 0x4CD0
L_312005:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311841:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
L_311842:
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_311843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_2
.p2align 0x4
L_506754:
L_312006:
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_311842
.p2align 0x4
.long 0x1
L_311784:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_311785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4CC4
L_311843:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311844
L_312002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312003
.p2align 0x4
.long 0x4CCE
L_312003:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311844:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_311851
L_311845:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_311846:
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_506784
L_311847:
	cmpq $0x1,%r14
	je L_506757
L_311848:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_311846
.p2align 0x4
L_506757:
L_311849:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311851
L_311995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_311996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311996
.p2align 0x4
.long 0x4CCE
L_311996:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311851:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_311852:
	movq $0x22FD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2349,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x118B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_311766
L_311853:
	movq %r15,0x0(%r13)
	movq 0x88(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_506781
L_311854:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r15,0x18(%rbp)
	movl $0x0,0x14(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_311856:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_506780
L_311983:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD87,%r11
	jne L_506779
L_311984:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x30)(%rip)
	je L_506775
L_311857:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x18(%rbp)
	jo L_311772
L_311858:
	cmpq $0x1,%r15
	je L_506758
L_311859:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	movq %r14,0x18(%rbp)
	movq (localObjptr+0x30)(%rip),%r14
	jmp L_311856
.p2align 0x4
L_506758:
L_311860:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311861
L_311981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_311982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311982
.p2align 0x4
.long 0x4CCC
L_311982:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311861:
	movl 0x18(%rbp),%ecx
L_311862:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311778
L_311863:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311865
L_311980:
	movl %ecx,0x0(%r15)
L_311865:
	movq $0x1B0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_311866:
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_311766
L_311867:
	movq %r15,0x0(%r11)
	movq 0x88(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_506769
L_311868:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_311870:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_506768
L_311972:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCBB,%r11
	jne L_506767
L_311973:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_506764
L_311871:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_311772
L_311872:
	cmpq $0x1,%r15
	je L_506759
L_311873:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_311870
.p2align 0x4
L_506759:
L_311874:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311875
L_311970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_311971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311971
.p2align 0x4
.long 0x4CCB
L_311971:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_311875:
	movl 0x14(%rbp),%ecx
L_311876:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311778
L_311877:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311879
L_311969:
	movl %ecx,0x0(%r15)
L_311879:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1977,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_311880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_0
.p2align 0x4
L_506764:
L_311975:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311778
L_311976:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311935
L_311978:
	movl %ecx,0x0(%r15)
L_311935:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506767:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_311871
.p2align 0x4
L_506768:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_311871
.p2align 0x4
L_506769:
L_311979:
	xorl %ecx,%ecx
	jmp L_311876
.p2align 0x4
L_506775:
L_311986:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311987
L_311992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_311993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311993
.p2align 0x4
.long 0x4CCD
L_311993:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311987:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_311778
L_311988:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_506776
L_311989:
	movq 0x18(%rbp),%r15
L_311990:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_311866
.p2align 0x4
L_506776:
L_311991:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x18(%rbp),%r15
	jmp L_311990
.p2align 0x4
L_506779:
	movq %r14,(localObjptr+0x30)(%rip)
	jmp L_311857
.p2align 0x4
L_506780:
	movq %r14,(localObjptr+0x30)(%rip)
	jmp L_311857
.p2align 0x4
L_506781:
L_311994:
	xorl %ecx,%ecx
	jmp L_311862
.p2align 0x4
L_506784:
L_311997:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311998
L_311999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312000
.p2align 0x4
.long 0x4CCF
L_312000:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_311998:
	movq 0x30(%rbp),%r15
	jmp L_311852
.p2align 0x4
.long 0x4B0
L_311785:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11170)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_311786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4CC5
L_311880:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311881
L_311967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_311968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311968
.p2align 0x4
.long 0x4CCA
L_311968:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_311881:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x21EC,%r15
	je L_506814
L_311938:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_311766
L_311939:
	movq %r15,0x0(%r11)
	movq 0x88(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_506812
L_311940:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movq %r15,0x20(%rbp)
	movl $0x0,0x14(%rbp)
	movq %r10,%r15
	movq %r13,%r14
.p2align 0x4,,0x7
L_311942:
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_506811
L_311955:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD83,%r11
	jne L_506810
L_311956:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_506806
L_311943:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x20(%rbp)
	jo L_311772
L_311944:
	cmpq $0x1,%r15
	je L_506788
L_311945:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	movq %r14,0x20(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_311942
.p2align 0x4
L_506788:
L_311946:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311947
L_311953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_311954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311954
.p2align 0x4
.long 0x4CC8
L_311954:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_311947:
	movl 0x20(%rbp),%ecx
L_311948:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311778
L_311949:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311951
L_311952:
	movl %ecx,0x0(%r15)
L_311951:
	movq $0x1B07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x66D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_311896:
	movq 0x68(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_311766
L_311897:
	movq %r15,0x0(%r11)
	movq 0x88(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_506800
L_311898:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x14(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_311900:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_506799
L_311914:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC6,%r11
	jne L_506798
L_311915:
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_506794
L_311901:
	movl 0x14(%rbp),%r11d
	incl %r11d
	movl %r11d,0x28(%rbp)
	jo L_311772
L_311902:
	cmpq $0x1,%r15
	je L_506789
L_311903:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x14(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_311900
.p2align 0x4
L_506789:
L_311904:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311905
L_311912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_311913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311913
.p2align 0x4
.long 0x4CC6
L_311913:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_311905:
	movl 0x28(%rbp),%ecx
L_311906:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311778
L_311907:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311909
L_311911:
	movl %ecx,0x0(%r15)
L_311909:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x198D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_311910:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506794:
L_311917:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311918
L_311923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_311924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311924
.p2align 0x4
.long 0x4CC7
L_311924:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_311918:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_311778
L_311919:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_506795
L_311920:
	movq 0x28(%rbp),%r15
L_311921:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_311910
.p2align 0x4
L_506795:
L_311922:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_311921
.p2align 0x4
L_506798:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_311901
.p2align 0x4
L_506799:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_311901
.p2align 0x4
L_506800:
L_311925:
	xorl %ecx,%ecx
	jmp L_311906
.p2align 0x4
L_506806:
L_311958:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311959
L_311964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_311965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311965
.p2align 0x4
.long 0x4CC9
L_311965:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_311959:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_311778
L_311960:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_506807
L_311961:
	movq 0x20(%rbp),%r15
L_311962:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0x66D0)(%rip),%r14
	movq %r14,0x8(%r15)
	jmp L_311896
.p2align 0x4
L_506807:
L_311963:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp L_311962
.p2align 0x4
L_506810:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_311943
.p2align 0x4
L_506811:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_311943
.p2align 0x4
L_506812:
L_311966:
	xorl %ecx,%ecx
	jmp L_311948
.p2align 0x4
L_506814:
L_311882:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_311766
L_311883:
	movq %r15,0x0(%r10)
	movq 0x88(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_506825
L_311884:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_311886:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_506824
L_311929:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD84,%r11
	jne L_506823
L_311930:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_506820
L_311887:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_311772
L_311888:
	cmpq $0x1,%r15
	je L_506815
L_311889:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_311886
.p2align 0x4
L_506815:
L_311890:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311891
L_311927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_311928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311928
.p2align 0x4
.long 0x4CC8
L_311928:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_311891:
	movl 0x14(%rbp),%ecx
L_311892:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311778
L_311893:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311895
L_311926:
	movl %ecx,0x0(%r15)
L_311895:
	movq $0x1B09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_311896
.p2align 0x4
L_506820:
L_311932:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_311778
L_311933:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_311935
L_311936:
	movl %ecx,0x0(%r15)
	jmp L_311935
.p2align 0x4
L_506823:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_311887
.p2align 0x4
L_506824:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_311887
.p2align 0x4
L_506825:
L_311937:
	xorl %ecx,%ecx
	jmp L_311892
.p2align 0x4
.long 0x5B0
L_311786:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_311787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_311787:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311788
L_311811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_311812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311812
.p2align 0x4
.long 0x4AF
L_311812:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_311788:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_311789:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_311772
L_311790:
	cmpq $0x1,%r14
	je L_506828
L_311791:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_311789
.p2align 0x4
L_506828:
L_311792:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311793
L_311809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_311810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311810
.p2align 0x4
.long 0x4E7
L_311810:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_311793:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_506829
L_311794:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_403:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_506829:
L_311808:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_403
.p2align 0x4
.long 0x1
rev_403:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_506835
L_311795:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_311796:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506834
.p2align 0x4,,0x7
L_311797:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506833
L_311798:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_311796
.p2align 0x4
L_506833:
L_311800:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_311801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506834:
L_311805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_311806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311806
.p2align 0x4
.long 0x45C
L_311806:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_311797
.p2align 0x4
L_506835:
L_311807:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_311800
.p2align 0x4
.long 0x1
L_311801:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_311802
L_311803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_311804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_311804
.p2align 0x4
.long 0x452
L_311804:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_311802:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl newProfileLabel_0
.hidden newProfileLabel_0
newProfileLabel_0:
L_312026:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_312027
L_312117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312118
.p2align 0x4
.long 0x4E9
L_312118:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_312027:
	movq 0x10(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x10(%r10),%r9
	movq 0x8(%r9),%r14
	movq 0x0(%r9),%r13
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_312028
L_312029:
	movq %r15,0x0(%r10)
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_506860
L_312030:
	movq 0x0(%r9),%r11
	movq 0x8(%r9),%r9
	movl $0x0,0x4(%rbp)
	movq %r9,%r15
.p2align 0x4,,0x7
L_312032:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_506859
L_312076:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xCB1,%r10
	jne L_506858
L_312077:
	movq 0x8(%r11),%r10
	movq %r10,0x8(%rbp)
	cmpq 0x0(%r11),%r13
	movq %r13,(localObjptr+0x10)(%rip)
	je L_506840
L_312033:
	movl 0x4(%rbp),%r10d
	incl %r10d
	jo L_506839
L_312035:
	cmpq $0x1,%r15
	je L_506837
L_312036:
	movl %r10d,0x4(%rbp)
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r13
	jmp L_312032
.p2align 0x4
L_506837:
	movl %r10d,%ecx
L_312038:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_506838
L_312040:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1040
L_312075:
	movl %ecx,0x0(%r15)
x_1040:
	movq %r14,0x10(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_506838:
L_312039:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506839:
L_312034:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506840:
L_312079:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312080
L_312114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_312115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312115
.p2align 0x4
.long 0x730
L_312115:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_312080:
	movl 0x4(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_312039
L_312081:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_506855
L_312082:
	movq 0x8(%rbp),%r15
x_1041:
	movl 0x0(%r15),%r11d
	movl %r11d,0x28(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq (globalObjptr+0x18A8)(%rip),%r10
	movl 0x0(%r10),%r9d
	movl %r9d,%r8d
	movl %r8d,0x2C(%rbp)
	incl %r9d
	jo L_312034
L_312083:
	movl %r9d,0x0(%r10)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x38(%rbp)
	addq $0x18,%r12
	movl %r8d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r11,0x8(%r10)
	movq 0x18(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x0(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_506853
L_312084:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_506852
L_312085:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x48(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_312087:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_506851
L_312101:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_506850
L_312102:
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_506846
L_312088:
	movl 0x48(%rbp),%r11d
	incl %r11d
	movl %r11d,0x4C(%rbp)
	jo L_312034
L_312089:
	cmpq $0x1,%r15
	je L_506841
L_312090:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x48(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_312087
.p2align 0x4
L_506841:
L_312091:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312092
L_312099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312100
.p2align 0x4
.long 0x4CD4
L_312100:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312092:
	movl 0x4C(%rbp),%ecx
L_312093:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312039
L_312094:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312096
L_312098:
	movl %ecx,0x0(%r15)
L_312096:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_312097:
	movq $0xF8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506846:
L_312104:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312105
L_312110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_312111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312111
.p2align 0x4
.long 0x4CD5
L_312111:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_312105:
	movl 0x48(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_312039
L_312106:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_506847
L_312107:
	movq 0x50(%rbp),%r15
L_312108:
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	jmp L_312097
.p2align 0x4
L_506847:
L_312109:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_312108
.p2align 0x4
L_506850:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_312088
.p2align 0x4
L_506851:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_312088
.p2align 0x4
L_506852:
L_312112:
	xorl %ecx,%ecx
	jmp L_312093
.p2align 0x4
L_506853:
L_312028:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506855:
L_312113:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x8(%rbp),%r15
	jmp x_1041
.p2align 0x4
L_506858:
	movq %r13,(localObjptr+0x10)(%rip)
	jmp L_312033
.p2align 0x4
L_506859:
	movq %r13,(localObjptr+0x10)(%rip)
	jmp L_312033
.p2align 0x4
L_506860:
L_312116:
	xorl %ecx,%ecx
	jmp L_312038
.p2align 0x4
.long 0x1
L_312042:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312043
L_312073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312074
.p2align 0x4
.long 0x452
L_312074:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312043:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_312044:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_312045:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_312046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_312046:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11178)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_312047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_312047:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_312048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_312048:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312049
L_312071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_312072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312072
.p2align 0x4
.long 0x4AF
L_312072:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_312049:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_312050:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_312034
L_312051:
	cmpq $0x1,%r14
	je L_506864
L_312052:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_312050
.p2align 0x4
L_506864:
L_312053:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312054
L_312069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_312070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312070
.p2align 0x4
.long 0x4E7
L_312070:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_312054:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_506865
L_312055:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_404:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_506865:
L_312068:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_404
.p2align 0x4
.long 0x1
rev_404:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_506871
L_312056:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_312057:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506870
.p2align 0x4,,0x7
L_312058:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506869
L_312059:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_312057
.p2align 0x4
L_506869:
L_312061:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506870:
L_312065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312066
.p2align 0x4
.long 0x45C
L_312066:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_312058
.p2align 0x4
L_506871:
L_312067:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_312061
.p2align 0x4
.long 0x1
bug_658:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312062
L_312063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312064
.p2align 0x4
.long 0x452
L_312064:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312062:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl condition_layout_0
.hidden condition_layout_0
condition_layout_0:
L_312119:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_312120
L_312157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312158
.p2align 0x4
.long 0x454
L_312158:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312120:
	movzbq 0x0(%rbp),%rax
	movq %rax,%r15
	andq $0x1,%r15
	subq $0x1,%r15
	jnz L_506873
	sarq $0x1,%rax
	cmpq $0x8,%rax
	ja L_312121
	jmp *jumpTable_818(,%rax,8)
.data
.p2align 0x4
jumpTable_818:
.quad L_506883,L_506882,L_506881,L_506880,L_506879,L_506878,L_506877,L_506876,L_506875
.text
.p2align 0x4
L_506873:
L_312121:
	movq (globalObjptr+0xFF40)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_312122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_506875:
L_312156:
	movq (globalObjptr+0xD418)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_506876:
L_312155:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_506877:
L_312154:
	movq (globalObjptr+0xD540)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_506878:
L_312153:
	movq (globalObjptr+0xF538)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_506879:
L_312152:
	movq (globalObjptr+0x11180)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_506880:
L_312151:
	movq (globalObjptr+0xDD38)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_506881:
L_312150:
	movq (globalObjptr+0x10910)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_506882:
L_312149:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_506883:
L_312148:
	movq (globalObjptr+0xD428)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x72F
L_312122:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movzbq 0x0(%rbp),%rax
	movq %rax,%r15
	andq $0x1,%r15
	jnz L_506885
	sarq $0x1,%rax
	cmpq $0x8,%rax
	ja L_312123
	jmp *jumpTable_819(,%rax,8)
.data
.p2align 0x4
jumpTable_819:
.quad L_506895,L_506894,L_506893,L_506892,L_506891,L_506890,L_506889,L_506888,L_506887
.text
.p2align 0x4
L_506885:
L_312123:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_506887:
L_312147:
	movb $0x11,%dl
L_312125:
	movb %dl,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_312126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp condition_layout_0
.p2align 0x4
L_506888:
L_312146:
	movb $0xF,%dl
	jmp L_312125
.p2align 0x4
L_506889:
L_312145:
	movb $0xD,%dl
	jmp L_312125
.p2align 0x4
L_506890:
L_312144:
	movb $0xB,%dl
	jmp L_312125
.p2align 0x4
L_506891:
L_312143:
	movb $0x9,%dl
	jmp L_312125
.p2align 0x4
L_506892:
L_312142:
	movb $0x7,%dl
	jmp L_312125
.p2align 0x4
L_506893:
L_312141:
	movb $0x5,%dl
	jmp L_312125
.p2align 0x4
L_506894:
L_312140:
	movb $0x3,%dl
	jmp L_312125
.p2align 0x4
L_506895:
L_312124:
	movb $0x1,%dl
	jmp L_312125
.p2align 0x4
.long 0x522
L_312126:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312127
L_312138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312139
.p2align 0x4
.long 0x4E9
L_312139:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_312127:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_312128:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_506899
L_312130:
	cmpq $0x1,%r14
	je L_506896
L_312131:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_312128
.p2align 0x4
L_506896:
L_312132:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312133
L_312136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_312137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312137
.p2align 0x4
.long 0x49D
L_312137:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_312133:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_506897
L_312134:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506897:
L_312135:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506899:
L_312129:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl reduceP_0
.hidden reduceP_0
reduceP_0:
L_312159:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_312303
L_312160:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506909
L_312161:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506901
L_312162:
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r15
	movl $0x1,0x78(%rbp)
	movl $0x1,0x7C(%rbp)
	movl $0x0,0x80(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x90(%rbp)
L_312163:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_312164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_506901:
L_312302:
	movl $0x1,0x70(%rbp)
	movl $0x1,%ecx
	movl $0x0,0x74(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
L_312196:
	cmpl $0x1,0x74(%rbp)
	jng L_312198
L_312205:
	testl %ecx,%ecx
	jnz L_312209
L_312206:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_506902
L_312198:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_312199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506902:
L_312209:
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506905
L_312210:
	movq $0x29BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506904
L_312211:
	movq %r15,0x80(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x88(%rbp)
L_312212:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x14DD,%r13
	je L_506903
L_312263:
	movq 0x10(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xB0(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xB8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_312264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_506903:
L_312213:
	movq 0x0(%r15),%r13
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq %r13,%r15
halfFn_0:
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_312214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_506904:
L_312274:
	movq $0x1,%r15
L_312232:
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0x80,%rbp
	leaq (L_312233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reduceP_0
.p2align 0x4
L_506905:
L_312275:
	movq $0x29BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_506906
L_312276:
	movq %r15,0x80(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x88(%rbp)
	jmp L_312212
.p2align 0x4
L_506906:
L_312277:
	movq $0x1,%r15
	jmp L_312232
.p2align 0x4
L_506909:
L_312303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_312304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312304
.p2align 0x4
.long 0x678
L_312304:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_312161
.p2align 0x4
.long 0x4CD6
L_312164:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	testl %r15d,%r15d
	jnz L_506911
L_312165:
	movq (globalObjptr+0x1958)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506911:
L_312169:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xE8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xC8(%rbp)
	movq %r13,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_312170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
.long 0x4CDD
L_312199:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_312200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4CF3
L_312264:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	testl %r15d,%r15d
	jnz L_506912
L_312265:
	movq (globalObjptr+0x1908)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506912:
L_312269:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_312270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4CE1
L_312214:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	testl %r15d,%r15d
	jnz L_506913
L_312215:
	movq (globalObjptr+0x1948)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506913:
L_312219:
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq %r14,0xD8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_312220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
.long 0x4CE7
L_312233:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x88(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x8C(%rbp),%r14d
	movl %r14d,0x3C(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0x50(%rbp)
	incl %r15d
	movl %r15d,0x58(%rbp)
	jo L_506914
L_312234:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_312235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506914:
L_312189:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_659:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312166
L_312167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312168
.p2align 0x4
.long 0x452
L_312168:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312166:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CD7
L_312170:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_312171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CDE
L_312200:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_312201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1
bug_662:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312266
L_312267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312268
.p2align 0x4
.long 0x452
L_312268:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312266:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CF4
L_312270:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_312271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
bug_661:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312216
L_312217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312218
.p2align 0x4
.long 0x452
L_312218:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312216:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CE2
L_312220:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_312221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CE8
L_312235:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x80(%rbp)
	movq $0x3,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_312236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4CD8
L_312171:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_312172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4CDF
L_312201:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312202
L_312203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_312204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312204
.p2align 0x4
.long 0x4CE0
L_312204:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_312202:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movl $0x0,0x8(%rbp)
	movl 0x74(%rbp),%r14d
	movl %r14d,0xC(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CF5
L_312271:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_312272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4CE3
L_312221:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_312222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4CE8
L_312236:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x80(%rbp)
	movq $0x3,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_312237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CD9
L_312172:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_312173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4CF6
L_312272:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_312273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CE4
L_312222:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_312223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4CE8
L_312237:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312238
L_312257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_312258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312258
.p2align 0x4
.long 0x4CF1
L_312258:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_312238:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_312239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1458
.p2align 0x4
.long 0x4CDA
L_312173:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_312174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CF7
L_312273:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	jmp halfFn_0
.p2align 0x4
.long 0x4CE5
L_312223:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_312224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CE9
L_312239:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312240
L_312255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_312256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312256
.p2align 0x4
.long 0x4CF0
L_312256:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_312240:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_506920
L_312241:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_312242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_506920:
L_312252:
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_312253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4CDB
L_312174:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq $0x1,%r15
	sete %al
	movzbl %al,%eax
	movl %eax,0x84(%rbp)
	movl $0x0,0xC8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_312175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1519
.p2align 0x4
.long 0x4CE6
L_312224:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312225
L_312261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_312262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312262
.p2align 0x4
.long 0x4CF2
L_312262:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_312225:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_506922
L_312226:
	movq %r15,0x88(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x78(%rbp)
	movq %r14,%r15
	jmp L_312212
.p2align 0x4
L_506922:
L_312227:
	movq %r14,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_312228:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506924
.p2align 0x4,,0x7
L_312229:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_312232
L_312230:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_312228
.p2align 0x4
L_506924:
L_312259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_312260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312260
.p2align 0x4
.long 0x1238
L_312260:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_312229
.p2align 0x4
.long 0x4CEA
L_312242:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x68(%rbp)
	movq $0x3,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_312243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4CEE
L_312253:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x78(%rbp)
	movq $0x3,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_312254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4CDB
L_312175:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	testl %r15d,%r15d
	jz L_312177
L_312301:
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
L_312177:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_312178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4CEB
L_312243:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_312244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CEF
L_312254:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x3,0x70(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_312244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CDC
L_312178:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312179
L_312299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_312300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312300
.p2align 0x4
.long 0x4CF9
L_312300:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_312179:
	movl 0xA0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_506927
L_312180:
	movq (globalObjptr+0x19B8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506927:
L_312184:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,%r13
	andq %r14,%r13
	andq $0x1,%r13
	jz L_506937
L_312185:
	cmpq %r15,%r14
	jl L_506936
L_312187:
	movq 0x88(%rbp),%r15
L_312188:
	movl 0x80(%rbp),%ecx
	incl %ecx
	jo L_312189
L_312190:
	movl 0x7C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506933
L_312191:
	movl 0x78(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506929
L_312192:
	xorl %ebx,%ebx
L_312193:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_506928
L_312194:
	movl %ebx,0x7C(%rbp)
	movl %ecx,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	jmp L_312163
.p2align 0x4
L_506928:
L_312195:
	movl %ecx,0x74(%rbp)
	movq %r15,0x78(%rbp)
	movl $0x0,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl %ebx,%ecx
	jmp L_312196
.p2align 0x4
L_506929:
L_312279:
	xorl %ebx,%ebx
L_312280:
	movl 0x84(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506931
L_312281:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_506930
L_312282:
	movl %ebx,0x7C(%rbp)
	movl %ecx,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movl $0x1,0x78(%rbp)
	jmp L_312163
.p2align 0x4
L_506930:
L_312283:
	movl %ecx,0x74(%rbp)
	movq %r15,0x78(%rbp)
	movl $0x1,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl %ebx,%ecx
	jmp L_312196
.p2align 0x4
L_506931:
L_312284:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_506932
L_312285:
	movl %ebx,0x7C(%rbp)
	movl %ecx,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	jmp L_312163
.p2align 0x4
L_506932:
L_312286:
	movl %ecx,0x74(%rbp)
	movq %r15,0x78(%rbp)
	movl $0x0,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl %ebx,%ecx
	jmp L_312196
.p2align 0x4
L_506933:
L_312287:
	movl 0x78(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_506934
L_312288:
	movl 0x84(%rbp),%ebx
	jmp L_312193
.p2align 0x4
L_506934:
L_312289:
	movl 0x84(%rbp),%ebx
	jmp L_312280
.p2align 0x4
L_506936:
L_312291:
	movq 0x98(%rbp),%r15
	jmp L_312188
.p2align 0x4
L_506937:
L_312292:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312293
L_312297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_312298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312298
.p2align 0x4
.long 0x4CF8
L_312298:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_312293:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xA0(%rbp),%rsi
	movq 0xB8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_312294:
	cmpl $0x0,%eax
	jg L_312291
	jmp L_312187
.p2align 0x4
.long 0x4CEC
L_312244:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312245
L_312250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_312251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312251
.p2align 0x4
.long 0x4CED
L_312251:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_312245:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_312246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1459
.p2align 0x4
.long 0x1
bug_660:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312181
L_312182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312183
.p2align 0x4
.long 0x452
L_312183:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312181:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28B9
L_312246:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312247
L_312248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_312249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312249
.p2align 0x4
.long 0xB7B
L_312249:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_312247:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movl 0x3C(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl filler_0
.hidden filler_0
filler_0:
L_312305:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_312306
L_312385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_312386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312386
.p2align 0x4
.long 0xC06
L_312386:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_312306:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_506944
L_312307:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_312308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_506944:
L_312384:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CFA
L_312308:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312309
L_312382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_312383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312383
.p2align 0x4
.long 0x4D0D
L_312383:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_312309:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jz L_312311
L_312350:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312351
L_312380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_312381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312381
.p2align 0x4
.long 0x4D0C
L_312381:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_312351:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq %rsi,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_312352:
	testl %eax,%eax
	jz L_506946
L_312354:
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_312355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_0
.p2align 0x4
L_506946:
L_312311:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_506949
L_312312:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x148A,%r13
	je L_506948
L_312336:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x207D,%r15
	je L_506947
L_312347:
	movq 0x18(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x68(%rbp)
	leaq L_312343(%rip),%r14
	movq %r14,0x38(%rbp)
	movq %rbp,%r14
	addq $0x40,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_312348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
L_506947:
L_312337:
	movq 0x18(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x68(%rbp)
	leaq L_312343(%rip),%r14
	movq %r14,0x38(%rbp)
	movq %rbp,%r14
	addq $0x40,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_312338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_0
.p2align 0x4
L_506948:
L_312313:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r14),%ecx
	movq 0x18(%r14),%r14
	xchgq %r14,%r15
	xchgq %r11,%r14
L_312314:
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_312315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
L_506949:
L_312349:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4D04
L_312355:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x90(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312356
L_312378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_312379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312379
.p2align 0x4
.long 0x4D0B
L_312379:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_312356:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_312357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4CFB
L_312348:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_312339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_1
.p2align 0x4
.long 0xA20
L_312343:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312344
L_312345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312346
.p2align 0x4
.long 0x4D03
L_312346:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312344:
	movq $0x2917,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x18(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CFB
L_312338:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_312339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_0
.p2align 0x4
.long 0x2909
L_312315:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_312316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4D04
L_312357:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_312358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4D01
L_312339:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl 0x88(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312340
L_312341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_312342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312342
.p2align 0x4
.long 0x4D02
L_312342:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_312340:
	movq $0x2915,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x70(%rbp),%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x50(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0x10(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,0x0(%r10)
	movq %r11,%r15
	jmp L_312314
.p2align 0x4
.long 0x4CFB
L_312316:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312317
L_312334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_312335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312335
.p2align 0x4
.long 0x252A
L_312335:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_312317:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_506956
L_312318:
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (bug_663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506956:
L_312322:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_312323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4D05
L_312358:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312359
L_312376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_312377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312377
.p2align 0x4
.long 0x4D0A
L_312377:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_312359:
	movl 0x80(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_506958
L_312360:
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (bug_664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_506958:
L_312364:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_312365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x298D
bug_663:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312319
L_312320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312321
.p2align 0x4
.long 0x478
L_312321:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312319:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CFC
L_312323:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_312324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x298D
bug_664:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312361
L_312362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312363
.p2align 0x4
.long 0x478
L_312363:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312361:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4D06
L_312365:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_312366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4CFD
L_312324:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movl %r15d,0x80(%rbp)
	movq $0x3,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_312325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4D07
L_312366:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_312367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4CFE
L_312325:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_312326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4D08
L_312367:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_312368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4CFF
L_312326:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312327
L_312332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_312333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312333
.p2align 0x4
.long 0x4D00
L_312333:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_312327:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x58,%rbp
	leaq (L_312328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp filler_0
.p2align 0x4
.long 0x4D09
L_312368:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312369
L_312374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_312375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312375
.p2align 0x4
.long 0x3209
L_312375:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_312369:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x60,%rbp
	leaq (L_312370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp filler_0
.p2align 0x4
.long 0x90E
L_312328:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312329
L_312330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_312331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312331
.p2align 0x4
.long 0x9BF
L_312331:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_312329:
	movq $0x2325,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61C
L_312370:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312371
L_312372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_312373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312373
.p2align 0x4
.long 0x9BF
L_312373:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_312371:
	movq $0x2325,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl incNear_1
.hidden incNear_1
incNear_1:
L_312387:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_312421
L_312388:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_506980
L_312389:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_506979
L_312391:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_506978
L_312392:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_312394:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_312395
L_312413:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBA,%r13
	jne L_312395
L_312414:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_506973
L_312395:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_312396
L_312397:
	cmpq $0x1,%r15
	je L_506966
L_312398:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_312394
.p2align 0x4
L_506966:
L_312399:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312400
L_312411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_312412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312412
.p2align 0x4
.long 0x49C
L_312412:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_312400:
	movl 0x18(%rbp),%ecx
L_312401:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_506970
L_312403:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312405
L_312410:
	movl %ecx,0x0(%r15)
L_312405:
	movq $0x140D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalWord64+0x1080)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1975,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_312406:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_506968
L_312408:
	shrq $0x1,%r14
	movl %r14d,%r13d
	incl %r13d
	jo L_506967
L_312409:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506967:
L_312396:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506968:
L_312407:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506970:
L_312402:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506973:
L_312416:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312402
L_312417:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_506974
L_312419:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_312406
.p2align 0x4
L_506974:
L_312418:
	movq %r13,%r15
	jmp L_312406
.p2align 0x4
L_506978:
L_312420:
	xorl %ecx,%ecx
	jmp L_312401
.p2align 0x4
L_506979:
L_312390:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506980:
L_312421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_312422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312422
.p2align 0x4
.long 0x460
L_312422:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_312389
.text
.p2align 0x4
.globl pushCompensationBlock_1
.hidden pushCompensationBlock_1
pushCompensationBlock_1:
L_312423:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_312424
L_312687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312688
.p2align 0x4
.long 0x45C
L_312688:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_312424:
	movq 0x10(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x88,%rbp
	leaq (L_312425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x9FE
L_312425:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312426
L_312685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_312686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312686
.p2align 0x4
.long 0x4CD3
L_312686:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_312426:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	addq $0x28,%r12
	movl 0x10(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_312427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x1638
L_312427:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312428
L_312683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312684
.p2align 0x4
.long 0xFF9
L_312684:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312428:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_506999
L_312430:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_506998
L_312431:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x14(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_312433:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_312434
L_312484:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBB,%r13
	jne L_312434
L_312485:
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x20(%rbp)
	je L_506990
L_312434:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0xA8(%rbp)
	jo L_506989
L_312436:
	cmpq $0x1,%r15
	je L_506984
L_312437:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	jmp L_312433
.p2align 0x4
L_506984:
L_312438:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312439
L_312482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_312483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312483
.p2align 0x4
.long 0x4CC1
L_312483:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_312439:
	movl 0xA8(%rbp),%ecx
L_312440:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_506987
L_312442:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312444
L_312481:
	movl %ecx,0x0(%r15)
L_312444:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_506985
L_312445:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506985:
L_312476:
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_506987:
L_312441:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506989:
L_312435:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_506990:
L_312487:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312488
L_312680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_312681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312681
.p2align 0x4
.long 0x4CD2
L_312681:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_312488:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_312441
L_312489:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_506992
L_312490:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_506991
L_312491:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r15
L_312492:
	movl %ecx,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_312493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp newProfileLabel_0
.p2align 0x4
L_506991:
L_312676:
	movq $0x1,0x20(%rbp)
L_312495:
	movq $0x2267,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_312496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_506992:
L_312677:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_312676
L_312678:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r15
	jmp L_312492
.p2align 0x4
L_506998:
L_312682:
	xorl %ecx,%ecx
	jmp L_312440
.p2align 0x4
L_506999:
L_312429:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_312446:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_312477:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312478
L_312479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312480
.p2align 0x4
.long 0x452
L_312480:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312478:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4CC2
L_312493:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312494
L_312673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312674
.p2align 0x4
.long 0x4CD1
L_312674:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312494:
	movq $0x227D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp L_312495
.p2align 0x4
.long 0x4CC3
L_312496:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312497
L_312671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312672
.p2align 0x4
.long 0x4CD0
L_312672:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312497:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_312504
L_312498:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_312499:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_507005
L_312500:
	cmpq $0x1,%r14
	je L_507003
L_312501:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_312499
.p2align 0x4
L_507003:
L_312502:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312504
L_312667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312668
.p2align 0x4
.long 0x4CD0
L_312668:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312504:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
L_312505:
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_312506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_507005:
L_312669:
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_312505
.p2align 0x4
.long 0x1
L_312447:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_312448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4CC4
L_312506:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312507
L_312665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312666
.p2align 0x4
.long 0x4CCE
L_312666:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312507:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_312514
L_312508:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_312509:
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_507035
L_312510:
	cmpq $0x1,%r14
	je L_507008
L_312511:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_312509
.p2align 0x4
L_507008:
L_312512:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312514
L_312658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312659
.p2align 0x4
.long 0x4CCE
L_312659:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312514:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_312515:
	movq $0x222F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1165,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_312429
L_312516:
	movq %r15,0x0(%r13)
	movq 0x88(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_507032
L_312517:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r15,0x18(%rbp)
	movl $0x0,0x14(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_312519:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_507031
L_312646:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD7E,%r11
	jne L_507030
L_312647:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x30)(%rip)
	je L_507026
L_312520:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x18(%rbp)
	jo L_312435
L_312521:
	cmpq $0x1,%r15
	je L_507009
L_312522:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	movq %r14,0x18(%rbp)
	movq (localObjptr+0x30)(%rip),%r14
	jmp L_312519
.p2align 0x4
L_507009:
L_312523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312524
L_312644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312645
.p2align 0x4
.long 0x4CCC
L_312645:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312524:
	movl 0x18(%rbp),%ecx
L_312525:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312441
L_312526:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312528
L_312643:
	movl %ecx,0x0(%r15)
L_312528:
	movq $0x1AFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_312529:
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_312429
L_312530:
	movq %r15,0x0(%r11)
	movq 0x88(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_507020
L_312531:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_312533:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_507019
L_312635:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCBB,%r11
	jne L_507018
L_312636:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_507015
L_312534:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_312435
L_312535:
	cmpq $0x1,%r15
	je L_507010
L_312536:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_312533
.p2align 0x4
L_507010:
L_312537:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312538
L_312633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_312634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312634
.p2align 0x4
.long 0x4CCB
L_312634:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_312538:
	movl 0x14(%rbp),%ecx
L_312539:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312441
L_312540:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312542
L_312632:
	movl %ecx,0x0(%r15)
L_312542:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1977,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_312543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
L_507015:
L_312638:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312441
L_312639:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312598
L_312641:
	movl %ecx,0x0(%r15)
L_312598:
	movq (globalObjptr+0x530)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507018:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_312534
.p2align 0x4
L_507019:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_312534
.p2align 0x4
L_507020:
L_312642:
	xorl %ecx,%ecx
	jmp L_312539
.p2align 0x4
L_507026:
L_312649:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312650
L_312655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312656
.p2align 0x4
.long 0x4CCD
L_312656:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312650:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_312441
L_312651:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_507027
L_312652:
	movq 0x18(%rbp),%r15
L_312653:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_312529
.p2align 0x4
L_507027:
L_312654:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x18(%rbp),%r15
	jmp L_312653
.p2align 0x4
L_507030:
	movq %r14,(localObjptr+0x30)(%rip)
	jmp L_312520
.p2align 0x4
L_507031:
	movq %r14,(localObjptr+0x30)(%rip)
	jmp L_312520
.p2align 0x4
L_507032:
L_312657:
	xorl %ecx,%ecx
	jmp L_312525
.p2align 0x4
L_507035:
L_312660:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312661
L_312662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_312663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312663
.p2align 0x4
.long 0x4CCF
L_312663:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_312661:
	movq 0x30(%rbp),%r15
	jmp L_312515
.p2align 0x4
.long 0x4B0
L_312448:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11170)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_312449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4CC5
L_312543:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312544
L_312630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_312631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312631
.p2align 0x4
.long 0x4CCA
L_312631:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_312544:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x220B,%r15
	je L_507065
L_312601:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_312429
L_312602:
	movq %r15,0x0(%r11)
	movq 0x88(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_507063
L_312603:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	movq %r15,0x20(%rbp)
	movl $0x0,0x14(%rbp)
	movq %r10,%r15
	movq %r13,%r14
.p2align 0x4,,0x7
L_312605:
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_507062
L_312618:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD7A,%r11
	jne L_507061
L_312619:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_507057
L_312606:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x20(%rbp)
	jo L_312435
L_312607:
	cmpq $0x1,%r15
	je L_507039
L_312608:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	movq %r14,0x20(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_312605
.p2align 0x4
L_507039:
L_312609:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312610
L_312616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_312617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312617
.p2align 0x4
.long 0x4CC8
L_312617:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_312610:
	movl 0x20(%rbp),%ecx
L_312611:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312441
L_312612:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312614
L_312615:
	movl %ecx,0x0(%r15)
L_312614:
	movq $0x1AF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5B30)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_312559:
	movq 0x68(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_312429
L_312560:
	movq %r15,0x0(%r11)
	movq 0x88(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_507051
L_312561:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x14(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_312563:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_507050
L_312577:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC5,%r11
	jne L_507049
L_312578:
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_507045
L_312564:
	movl 0x14(%rbp),%r11d
	incl %r11d
	movl %r11d,0x28(%rbp)
	jo L_312435
L_312565:
	cmpq $0x1,%r15
	je L_507040
L_312566:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x14(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_312563
.p2align 0x4
L_507040:
L_312567:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312568
L_312575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_312576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312576
.p2align 0x4
.long 0x4CC6
L_312576:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_312568:
	movl 0x28(%rbp),%ecx
L_312569:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312441
L_312570:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312572
L_312574:
	movl %ecx,0x0(%r15)
L_312572:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1339,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x198B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_312573:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507045:
L_312580:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312581
L_312586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_312587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312587
.p2align 0x4
.long 0x4CC7
L_312587:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_312581:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_312441
L_312582:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_507046
L_312583:
	movq 0x28(%rbp),%r15
L_312584:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_312573
.p2align 0x4
L_507046:
L_312585:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_312584
.p2align 0x4
L_507049:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_312564
.p2align 0x4
L_507050:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_312564
.p2align 0x4
L_507051:
L_312588:
	xorl %ecx,%ecx
	jmp L_312569
.p2align 0x4
L_507057:
L_312621:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312622
L_312627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_312628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312628
.p2align 0x4
.long 0x4CC9
L_312628:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_312622:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_312441
L_312623:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_507058
L_312624:
	movq 0x20(%rbp),%r15
L_312625:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0x5B30)(%rip),%r14
	movq %r14,0x8(%r15)
	jmp L_312559
.p2align 0x4
L_507058:
L_312626:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp L_312625
.p2align 0x4
L_507061:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_312606
.p2align 0x4
L_507062:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_312606
.p2align 0x4
L_507063:
L_312629:
	xorl %ecx,%ecx
	jmp L_312611
.p2align 0x4
L_507065:
L_312545:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_312429
L_312546:
	movq %r15,0x0(%r10)
	movq 0x88(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_507076
L_312547:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_312549:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_507075
L_312592:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD7B,%r11
	jne L_507074
L_312593:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_507071
L_312550:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_312435
L_312551:
	cmpq $0x1,%r15
	je L_507066
L_312552:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_312549
.p2align 0x4
L_507066:
L_312553:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312554
L_312590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_312591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312591
.p2align 0x4
.long 0x4CC8
L_312591:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_312554:
	movl 0x14(%rbp),%ecx
L_312555:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312441
L_312556:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312558
L_312589:
	movl %ecx,0x0(%r15)
L_312558:
	movq $0x1AF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_312559
.p2align 0x4
L_507071:
L_312595:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_312441
L_312596:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_312598
L_312599:
	movl %ecx,0x0(%r15)
	jmp L_312598
.p2align 0x4
L_507074:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_312550
.p2align 0x4
L_507075:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_312550
.p2align 0x4
L_507076:
L_312600:
	xorl %ecx,%ecx
	jmp L_312555
.p2align 0x4
.long 0x5B0
L_312449:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_312450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_312450:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312451
L_312474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_312475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312475
.p2align 0x4
.long 0x4AF
L_312475:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_312451:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_312452:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_312435
L_312453:
	cmpq $0x1,%r14
	je L_507079
L_312454:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_312452
.p2align 0x4
L_507079:
L_312455:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312456
L_312472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_312473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312473
.p2align 0x4
.long 0x4E7
L_312473:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_312456:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_507080
L_312457:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_405:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_507080:
L_312471:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_405
.p2align 0x4
.long 0x1
rev_405:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_507086
L_312458:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_312459:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507085
.p2align 0x4,,0x7
L_312460:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_507084
L_312461:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_312459
.p2align 0x4
L_507084:
L_312463:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_507085:
L_312468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312469
.p2align 0x4
.long 0x45C
L_312469:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_312460
.p2align 0x4
L_507086:
L_312470:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_312463
.p2align 0x4
.long 0x1
L_312464:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312465
L_312466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312467
.p2align 0x4
.long 0x452
L_312467:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312465:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl getLive_1
.hidden getLive_1
getLive_1:
L_312689:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_312690
L_312749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_312750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312750
.p2align 0x4
.long 0x460
L_312750:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_312690:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r11
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_507098
L_312692:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_507097
L_312693:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_312695:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_507096
L_312741:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD7E,%r10
	jne L_507095
L_312742:
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x10)(%rip)
	je L_507092
L_312696:
	incl %ecx
	jo L_507091
L_312698:
	cmpq $0x1,%r15
	je L_507088
L_312699:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	jmp L_312695
.p2align 0x4
L_507088:
L_312700:
L_312701:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_507090
L_312703:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1042
L_312740:
	movl %ecx,0x0(%r15)
x_1042:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_507089
L_312705:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_507089:
L_312735:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_507090:
L_312702:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507091:
L_312697:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507092:
L_312744:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_312702
L_312745:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_507093
L_312747:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
x_1043:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507093:
L_312746:
	movq %r14,%r15
	jmp x_1043
.p2align 0x4
L_507095:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_312696
.p2align 0x4
L_507096:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_312696
.p2align 0x4
L_507097:
L_312748:
	xorl %ecx,%ecx
	jmp L_312701
.p2align 0x4
L_507098:
L_312691:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_312706:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_312736:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312737
L_312738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312739
.p2align 0x4
.long 0x452
L_312739:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312737:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_312706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_312707:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_312708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_312708:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11038)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_312709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_312709:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_312710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_312710:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312711
L_312733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_312734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312734
.p2align 0x4
.long 0x4AF
L_312734:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_312711:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_312712:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_312697
L_312713:
	cmpq $0x1,%r14
	je L_507101
L_312714:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_312712
.p2align 0x4
L_507101:
L_312715:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312716
L_312731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_312732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312732
.p2align 0x4
.long 0x4E7
L_312732:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_312716:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_507102
L_312717:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_406:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_507102:
L_312730:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_406
.p2align 0x4
.long 0x1
rev_406:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_507108
L_312718:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_312719:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507107
.p2align 0x4,,0x7
L_312720:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_507106
L_312721:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_312719
.p2align 0x4
L_507106:
L_312723:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_507107:
L_312727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312728
.p2align 0x4
.long 0x45C
L_312728:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_312720
.p2align 0x4
L_507108:
L_312729:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_312723
.p2align 0x4
.long 0x1
bug_665:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312724
L_312725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_312726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312726
.p2align 0x4
.long 0x452
L_312726:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_312724:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl near_0
.hidden near_0
near_0:
L_312751:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x48(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_312752
L_312888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312889
.p2align 0x4
.long 0x4D1E
L_312889:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312752:
	leaq L_312882(%rip),%r15
	movq %r15,0x40(%rbp)
	movq %rbp,%r15
	addq $0x48,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_312753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_129
.p2align 0x4
.long 0x4D0E
L_312753:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312754
L_312880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312881
.p2align 0x4
.long 0x4D1E
L_312881:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312754:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_507124
L_312755:
	movl 0x2C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_507111
L_312757:
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_312758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_507111:
L_312854:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_507112
L_312855:
	movq $0x1,0x28(%rbp)
L_312764:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_312765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2185
.p2align 0x4
L_507112:
L_312856:
	movq $0x1,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_312791:
	movq $0x2329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_507113
L_312792:
	movq %r14,0x60(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_312793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_507113:
L_312833:
	movq $0x1,%r14
	xchgq %r14,%r15
L_312798:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_507123
L_312799:
	movq %r15,0x50(%rbp)
L_312800:
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_312801:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507122
.p2align 0x4,,0x7
L_312802:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x50(%rbp),%r11
	cmpq $0x1,%r11
	je L_507121
L_312803:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_312804:
	cmpq $0x1,%r15
	je L_507114
L_312805:
	movq %r13,0x50(%rbp)
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
L_312806:
	jmp L_312801
.p2align 0x4
L_507114:
L_312807:
	movq %r13,0x50(%rbp)
	movq %r14,0x58(%rbp)
.p2align 0x4,,0x7
L_312808:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507120
.p2align 0x4,,0x7
L_312809:
	movq 0x50(%rbp),%r11
	cmpq $0x1,%r11
	je L_507115
L_312810:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x58(%rbp),%r14
	jmp L_312804
.p2align 0x4
L_507115:
L_312811:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_507119
L_312812:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_312813:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507118
.p2align 0x4,,0x7
L_312814:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_507116
L_312815:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_312813
.p2align 0x4
L_507116:
L_312817:
	cmpq $0x1,%r15
	je L_507117
L_312818:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507117:
L_312819:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507118:
L_312820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_312821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312821
.p2align 0x4
.long 0xCBE
L_312821:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_312814
.p2align 0x4
L_507119:
L_312822:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_312817
.p2align 0x4
L_507120:
L_312823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_312824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312824
.p2align 0x4
.long 0x61D
L_312824:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_312809
.p2align 0x4
L_507121:
L_312825:
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	jmp L_312813
.p2align 0x4
L_507122:
L_312826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_312827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312827
.p2align 0x4
.long 0xCBE
L_312827:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_312802
.p2align 0x4
L_507123:
L_312828:
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_312808
.p2align 0x4
L_507124:
L_312857:
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_312858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x905
L_312882:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312883
L_312886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312887
.p2align 0x4
.long 0x4D21
L_312887:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312883:
	movl 0x2C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_312854
	jmp L_312757
.p2align 0x4
.long 0x4D0F
L_312758:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x68(%rbp)
	movq $0x3,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_312759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4D13
L_312765:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312766
L_312847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312848
.p2align 0x4
.long 0x4D19
L_312848:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312766:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_507133
L_312767:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_312768:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507132
.p2align 0x4,,0x7
L_312769:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	movw 0x4(%r15),%r13w
	movq 0x8(%r15),%r11
	movq $0xF29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x4(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl $0x400,0x0(%r15)
	movl $0x0,0x8(%r15)
	movzwl %r13w,%r14d
	movl %r14d,0xC(%r15)
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_507128
L_312770:
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_312768
.p2align 0x4
L_507128:
L_312771:
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_312772:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507131
.p2align 0x4,,0x7
L_312773:
	movq $0x2311,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_507129
L_312774:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_312772
.p2align 0x4
L_507129:
L_312776:
	movq 0x18(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movl 0x0(%r14),%r10d
	movq 0x8(%r14),%r9
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x2311,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_312778
L_312841:
	movq $0x2311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_312778:
	movq $0x230F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_312779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2186
.p2align 0x4
L_507131:
L_312842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_312843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312843
.p2align 0x4
.long 0x4D18
L_312843:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_312773
.p2align 0x4
L_507132:
L_312844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_312845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312845
.p2align 0x4
.long 0x4D18
L_312845:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_312769
.p2align 0x4
L_507133:
L_312846:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_312776
.p2align 0x4
.long 0x115D
L_312793:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312794
L_312831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312832
.p2align 0x4
.long 0x115E
L_312832:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312794:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_312795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4D1A
L_312858:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_312859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4D10
L_312759:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x9,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_312760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4D14
L_312779:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312780
L_312839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312840
.p2align 0x4
.long 0x4D17
L_312840:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312780:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_507140
L_312781:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_312782:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507139
.p2align 0x4,,0x7
L_312783:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	movw 0x4(%r15),%r13w
	movq 0x8(%r15),%r11
	movq $0x124B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x4(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl $0x400,0x0(%r15)
	movl $0x0,0x8(%r15)
	movzwl %r13w,%r14d
	movl %r14d,0xC(%r15)
	movq $0x2313,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_507136
L_312784:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_312782
.p2align 0x4
L_507136:
L_312785:
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_312786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507138
.p2align 0x4,,0x7
L_312787:
	movq $0x2313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_507137
L_312788:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_312786
.p2align 0x4
L_507137:
L_312790:
	movq $0x230D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x232D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_312791
.p2align 0x4
L_507138:
L_312834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312835
.p2align 0x4
.long 0x216C
L_312835:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_312787
.p2align 0x4
L_507139:
L_312836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312837
.p2align 0x4
.long 0x216C
L_312837:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_312783
.p2align 0x4
L_507140:
L_312838:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_312790
.p2align 0x4
.long 0x115D
L_312795:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_312796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4D1A
L_312859:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq $0x9,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_312860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4D11
L_312760:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312761
L_312851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312852
.p2align 0x4
.long 0x216C
L_312852:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312761:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_312762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4D15
L_312796:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312797
L_312829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312830
.p2align 0x4
.long 0x4D16
L_312830:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312797:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x231D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x231B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2329,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_312798
.p2align 0x4
.long 0x4D1A
L_312860:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312861
L_312878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_312879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312879
.p2align 0x4
.long 0x4D20
L_312879:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_312861:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_312862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4D12
L_312762:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312763
L_312849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312850
.p2align 0x4
.long 0x4D17
L_312850:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312763:
	movq $0x2323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	jmp L_312764
.p2align 0x4
.long 0x4D1A
L_312862:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_312863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4D1B
L_312863:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_312864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4D1C
L_312864:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0xF,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_312865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4D1D
L_312865:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312866
L_312876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_312877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312877
.p2align 0x4
.long 0x4D1F
L_312877:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_312866:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_312867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4D0E
L_312867:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312868
L_312874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_312875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312875
.p2align 0x4
.long 0x4D1E
L_312875:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_312868:
	movq $0x2323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x232B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0x2C(%rbp),%r14d
	testl %r14d,%r14d
	jz L_312870
L_312871:
	movl 0x28(%rbp),%r14d
	testl %r14d,%r14d
	jz L_507147
L_312873:
	movq %r15,0x20(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_312791
.p2align 0x4
L_507147:
L_312870:
	movq %r15,0x28(%rbp)
	jmp L_312764
.text
.p2align 0x4
.globl loop_4379
.hidden loop_4379
loop_4379:
L_312890:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_312958
L_312891:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507171
L_312892:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_507170
L_312893:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x11B5,%r14
	je L_507169
	cmpq $0x11B6,%r14
	je L_507168
	cmpq $0x11B7,%r14
	je L_507167
	cmpq $0x11B8,%r14
	je L_507166
	cmpq $0x11B9,%r14
	je L_507165
L_312894:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
.p2align 0x4,,0x7
L_312895:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507164
.p2align 0x4,,0x7
L_312896:
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_507163
L_312897:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x11B5,%r13
	je L_507162
	cmpq $0x11B6,%r13
	je L_507156
	cmpq $0x11B7,%r13
	je L_507155
	cmpq $0x11B8,%r13
	je L_507151
	cmpq $0x11B9,%r13
	je L_507150
L_312898:
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_312895
.p2align 0x4
L_507150:
L_312935:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r14
L_312936:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_312937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4379
.p2align 0x4
L_507151:
L_312922:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
rev_408:
	cmpq $0x1,%r15
	je L_507154
L_312923:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_312924:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507153
.p2align 0x4,,0x7
L_312925:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_507152
L_312926:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_312924
.p2align 0x4
L_507152:
L_312927:
	movq 0x10(%rbp),%r13
	movq 0x0(%rbp),%r15
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%rbp)
	xchgq %r13,%r14
L_312928:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_312929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4379
.p2align 0x4
L_507153:
L_312932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_312933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312933
.p2align 0x4
.long 0x4AF
L_312933:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_312925
.p2align 0x4
L_507154:
L_312934:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507155:
L_312916:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r14
L_312917:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_312918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4379
.p2align 0x4
L_507156:
L_312901:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
rev_407:
	cmpq $0x1,%r15
	je L_507161
L_312902:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_312903:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507160
.p2align 0x4,,0x7
L_312904:
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_507157
L_312905:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_312903
.p2align 0x4
L_507157:
L_312906:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
.p2align 0x4,,0x7
L_312907:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507159
.p2align 0x4,,0x7
L_312908:
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_507158
L_312909:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_312907
.p2align 0x4
L_507158:
L_312910:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507159:
L_312911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312912
.p2align 0x4
.long 0x45C
L_312912:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_312908
.p2align 0x4
L_507160:
L_312913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_312914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312914
.p2align 0x4
.long 0x4AF
L_312914:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_312904
.p2align 0x4
L_507161:
L_312915:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507162:
L_312899:
	movq 0x0(%r14),%r13
	movq %r15,%r14
	movq %r13,%r15
L_312900:
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507163:
L_312949:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507164:
L_312950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_312951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312951
.p2align 0x4
.long 0x45C
L_312951:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_312896
.p2align 0x4
L_507165:
L_312956:
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r15
	jmp L_312936
.p2align 0x4
L_507166:
L_312955:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp rev_408
.p2align 0x4
L_507167:
L_312954:
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r15
	jmp L_312917
.p2align 0x4
L_507168:
L_312953:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp rev_407
.p2align 0x4
L_507169:
L_312952:
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r14
	movq %r13,%r15
	jmp L_312900
.p2align 0x4
L_507170:
L_312957:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507171:
L_312958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_312959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312959
.p2align 0x4
.long 0x460
L_312959:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_312892
.p2align 0x4
.long 0x4B0
L_312937:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312938
L_312947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_312948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312948
.p2align 0x4
.long 0x460
L_312948:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_312938:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507178
L_312939:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x11B5,%r14
	je L_507177
	cmpq $0x11B6,%r14
	je L_507176
	cmpq $0x11B7,%r14
	je L_507175
	cmpq $0x11B8,%r14
	je L_507174
	cmpq $0x11B9,%r14
	je L_507173
L_312940:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_312895
.p2align 0x4
L_507173:
L_312945:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	jmp L_312936
.p2align 0x4
L_507174:
L_312944:
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r14,%r15
	jmp rev_408
.p2align 0x4
L_507175:
L_312943:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	jmp L_312917
.p2align 0x4
L_507176:
L_312942:
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r14,%r15
	jmp rev_407
.p2align 0x4
L_507177:
L_312941:
	movq 0x0(%r15),%r13
	movq 0x8(%rbp),%r14
	movq %r13,%r15
	jmp L_312900
.p2align 0x4
L_507178:
L_312946:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_312929:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_507180
L_312930:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_312928
.p2align 0x4
L_507180:
L_312931:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B0
L_312918:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312919
L_312920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_312921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_312921
.p2align 0x4
.long 0x460
L_312921:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_312919:
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl allocateRegisters_0
.hidden allocateRegisters_0
allocateRegisters_0:
L_312960:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_313183
L_312961:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507192
L_312962:
	movq 0x10(%rbp),%r15
	movq 0x68(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x921,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA0(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_507191
L_312963:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movq $0x1,0xA8(%rbp)
L_312964:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_507189
L_312965:
	movq 0x28(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_507188
L_312966:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_507187
L_312967:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_312968:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507186
.p2align 0x4,,0x7
L_312969:
	movq $0x122B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x6A10)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2363,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_507182
L_312970:
	movq %r14,0xB8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0xB0(%rbp)
	jmp L_312968
.p2align 0x4
L_507182:
L_312971:
	movq %r15,0xB0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_312972:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507185
.p2align 0x4,,0x7
L_312973:
	movq $0x2363,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_507183
L_312974:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_312972
.p2align 0x4
L_507183:
L_312975:
	movq %r15,0x10(%rbp)
L_312976:
	movq 0x28(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_507184
L_312977:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_312978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allocateRegisters_1
.p2align 0x4
L_507184:
L_313094:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_313095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_507185:
L_313120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_313121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313121
.p2align 0x4
.long 0x4D2C
L_313121:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_312973
.p2align 0x4
L_507186:
L_313122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_313123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313123
.p2align 0x4
.long 0x4D2C
L_313123:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_312969
.p2align 0x4
L_507187:
L_313124:
	movq $0x1,0x10(%rbp)
	jmp L_312976
.p2align 0x4
L_507188:
L_313125:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_313126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_507189:
L_313159:
	movq 0x28(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_507190
L_313160:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_313161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toLiveness_0
.p2align 0x4
L_507190:
L_313162:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_313163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_507191:
L_313061:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507192:
L_313183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_313184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313184
.p2align 0x4
.long 0x910
L_313184:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_312962
.p2align 0x4
.long 0x4D22
L_312978:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312980
L_313092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_313093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313093
.p2align 0x4
.long 0x4D2D
L_313093:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_312980:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jz L_507199
L_312981:
L_312982:
	movq $0x234F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_507194
L_312983:
	movq %r14,0xA8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_312964
.p2align 0x4
L_507194:
L_312984:
	movq %r15,0x30(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_312985:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507198
.p2align 0x4,,0x7
L_312986:
	movq $0x29D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x30(%rbp)
	jne L_507197
L_313007:
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_312997:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507196
.p2align 0x4,,0x7
L_312998:
	movq $0x234F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_507195
L_312999:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_312985
.p2align 0x4
L_507195:
L_313000:
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507196:
L_313001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_313002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313002
.p2align 0x4
.long 0x4D24
L_313002:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_312998
.p2align 0x4
L_507197:
L_312987:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x48(%rbp)
L_312988:
	movq %r15,0xB0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_312989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2173
.p2align 0x4
L_507198:
L_313008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_313009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313009
.p2align 0x4
.long 0x4D24
L_313009:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_312986
.p2align 0x4
L_507199:
L_313010:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_313011:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1195,%r14
	je L_507203
	cmpq $0x1197,%r14
	je L_507201
L_313012:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313013
L_313014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_313015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313015
.p2align 0x4
.long 0x4D27
L_313015:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_313013:
	movq 0xB8(%rbp),%r15
	jmp L_312982
.p2align 0x4
L_507201:
L_313090:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_313012
L_313091:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0xB0(%rbp)
	jmp L_313011
.p2align 0x4
L_507203:
L_313016:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313017
L_313087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_313088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313088
.p2align 0x4
.long 0x4D2C
L_313088:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_313017:
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14),%r15
L_313018:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_313012
L_313019:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1191,%r14
	jne L_313012
L_313021:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jz L_507216
x_1044:
	movq $0x1,0x10(%rbp)
x_1045:
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
L_313022:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_313012
L_313023:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
L_313024:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1193,%r13
	je L_507206
	cmpq $0x1197,%r13
	je L_507204
	jmp L_313012
.p2align 0x4
L_507204:
L_313073:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_313012
L_313074:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_313024
.p2align 0x4
L_507206:
L_313025:
	movq 0x0(%r14),%r13
L_313026:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_313012
L_313027:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1172,%r14
	jne L_313012
L_313028:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_313012
L_313029:
L_313030:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_313012
L_313031:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1160,%r13
	jne L_313012
L_313032:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r15
	je L_507209
L_313033:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_313034:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1197,%r11
	jne L_313012
L_313035:
	cmpq $0x1,%r15
	je L_507207
L_313036:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_313034
.p2align 0x4
L_507207:
	movq %r14,%r15
L_313038:
	movq %r15,0xC0(%rbp)
loop_3597:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xC0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_313039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_507209:
	movq %r11,%r15
	jmp L_313038
.p2align 0x4
L_507216:
L_313075:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x1,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_313076:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507220
.p2align 0x4,,0x7
L_313077:
	movq 0xB0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1194,%r15
	je L_507219
	cmpq $0x1195,%r15
	je L_507218
	cmpq $0x1197,%r15
	je L_507217
x_1046:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0xC8(%rbp),%r15
	jmp x_1045
.p2align 0x4
L_507217:
L_313083:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_2193
L_313084:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	jmp L_313076
.p2align 0x4
x_2193:
x_1048:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp x_1045
.p2align 0x4
L_507218:
L_313081:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0xC8(%rbp),%r15
	jmp x_1045
.p2align 0x4
L_507219:
L_313078:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
L_313079:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz x_2194
L_313080:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0xC8(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_313076
.p2align 0x4
x_2194:
x_1047:
	movq %r15,0x10(%rbp)
	movq %r14,%r15
	jmp x_1045
.p2align 0x4
L_507220:
L_313085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313086
.p2align 0x4
.long 0x4D2B
L_313086:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_313077
.p2align 0x4
.long 0x4D2E
L_313095:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	leaq L_313110(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_313096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allocateRegisters_1
.p2align 0x4
.long 0x4D2E
L_313126:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_507229
L_313127:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_313128:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507228
.p2align 0x4,,0x7
L_313129:
	movq $0x122B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x6A10)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2363,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_507225
L_313130:
	movq %r14,0xC8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0xC0(%rbp)
	jmp L_313128
.p2align 0x4
L_507225:
L_313131:
	movq %r15,0xC0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_313132:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507227
.p2align 0x4,,0x7
L_313133:
	movq $0x2363,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_507226
L_313134:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0xC0(%rbp)
	jmp L_313132
.p2align 0x4
L_507226:
L_313135:
	movq %r15,0x10(%rbp)
L_313136:
	leaq L_313144(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_313137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_507227:
L_313154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313155
.p2align 0x4
.long 0x4D2B
L_313155:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_313133
.p2align 0x4
L_507228:
L_313156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313157
.p2align 0x4
.long 0x4D2B
L_313157:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_313129
.p2align 0x4
L_507229:
L_313158:
	movq $0x1,0x10(%rbp)
	jmp L_313136
.p2align 0x4
.long 0x4D22
L_313161:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_312976
.p2align 0x4
.long 0x4D2E
L_313163:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	leaq L_313172(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_313164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toLiveness_0
.p2align 0x4
.long 0x4D23
L_312989:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_312990
L_313005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_313006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313006
.p2align 0x4
.long 0x4D26
L_313006:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_312990:
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_507230
L_312991:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_312988
.p2align 0x4
L_507230:
L_312992:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_312993:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507232
.p2align 0x4,,0x7
L_312994:
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_507231
L_312995:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_312993
.p2align 0x4
L_507231:
L_312996:
	movq %r15,0x30(%rbp)
	jmp L_312997
.p2align 0x4
L_507232:
L_313003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_313004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313004
.p2align 0x4
.long 0x4D25
L_313004:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_312994
.p2align 0x4
.long 0x4D28
L_313039:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313040
L_313069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313070
.p2align 0x4
.long 0x4D2B
L_313070:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_313040:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_507234
L_313041:
	movq %r15,0xC0(%rbp)
	jmp loop_3597
.p2align 0x4
L_507234:
L_313042:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_313049
L_313043:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	xchgq %r11,%r15
.p2align 0x4,,0x7
L_313044:
	movq 0xC0(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_313012
L_313045:
	cmpq $0x1,%r14
	je L_507235
L_313046:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_313044
.p2align 0x4
L_507235:
L_313047:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313049
L_313065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313066
.p2align 0x4
.long 0x4D2A
L_313066:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_313049:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_507236
L_313050:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
L_313051:
	movq %r15,0xD8(%rbp)
	movq $0x319D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_313052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_9
.p2align 0x4
L_507236:
L_313056:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_507237
L_313057:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_312964
.p2align 0x4
L_507237:
L_313058:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_313061
L_313059:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_312985
.p2align 0x4
.long 0x4D2F
L_313096:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_313097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48B
L_313110:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6138)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_313111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4D30
L_313137:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_313138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48B
L_313144:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6128)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_313145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4D2F
L_313164:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_313165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48B
L_313172:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6130)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_313173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4D29
L_313052:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313053
L_313062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313063
.p2align 0x4
.long 0x4D2A
L_313063:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_313053:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_313056
L_313054:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_313051
.p2align 0x4
.long 0x4D30
L_313097:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_313098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x927
L_313111:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313112
L_313114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_313115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313115
.p2align 0x4
.long 0x928
L_313115:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_313112:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0x0,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_313113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4D31
L_313138:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313139
L_313152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_313153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313153
.p2align 0x4
.long 0x4D35
L_313153:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_313139:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_313140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x79B
L_313145:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313146
L_313148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_313149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313149
.p2align 0x4
.long 0x1495
L_313149:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_313146:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movb $0x0,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_313147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4D30
L_313165:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_313166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x927
L_313173:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313174
L_313176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_313177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313177
.p2align 0x4
.long 0x928
L_313177:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_313174:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0x0,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_313175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4D31
L_313098:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313099
L_313118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_313119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313119
.p2align 0x4
.long 0x4D35
L_313119:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_313099:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_313100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x51B
L_313113:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4D29
L_313140:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_313141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x922
L_313147:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4D31
L_313166:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313167
L_313180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_313181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313181
.p2align 0x4
.long 0x4D35
L_313181:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_313167:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_313168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x51B
L_313175:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4D29
L_313100:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_313101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4D32
L_313141:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313142
L_313150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313151
.p2align 0x4
.long 0x4D34
L_313151:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_313142:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_313143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4D29
L_313168:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_313169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4D32
L_313101:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313102
L_313116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313117
.p2align 0x4
.long 0x4D34
L_313117:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_313102:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_313103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4D2E
L_313143:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_312976
.p2align 0x4
.long 0x4D32
L_313169:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313170
L_313178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313179
.p2align 0x4
.long 0x4D34
L_313179:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_313170:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_313171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4D2E
L_313103:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313104
L_313108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_313109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313109
.p2align 0x4
.long 0x4D33
L_313109:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_313104:
	movq 0x88(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
L_313105:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jz L_507254
L_313106:
	jmp L_312982
.p2align 0x4
L_507254:
L_313107:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	jmp L_313011
.p2align 0x4
.long 0x4D2E
L_313171:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_312976
.text
.p2align 0x4
.globl allocateRegisters_1
.hidden allocateRegisters_1
allocateRegisters_1:
L_313185:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_313186
L_313432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_313433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313433
.p2align 0x4
.long 0x45D
L_313433:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_313186:
	movq 0x8(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507272
L_313187:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0x6CC8)(%rip),%r15
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_313188:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507271
.p2align 0x4,,0x7
L_313189:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1194,%r15
	je L_507267
	cmpq $0x1195,%r15
	je L_507263
	cmpq $0x1196,%r15
	je L_507261
	cmpq $0x1197,%r15
	je L_507257
L_313190:
	movq 0x0(%r13),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_507256
L_313191:
	movq 0x18(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r13
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	movq %r14,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_313192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allocateRegisters_2
.p2align 0x4
L_507256:
L_313284:
	movq 0x18(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r13
	movq %r13,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_313285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_507257:
L_313421:
	movq 0x0(%r13),%r15
	movq $0x232F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507259
L_313422:
L_313423:
	movq $0x2369,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_507258
L_313424:
	movq %r11,0xB0(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507258:
L_313425:
	xchgq %r11,%r15
L_313226:
	movq %r15,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_313227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4379
.p2align 0x4
L_507259:
L_313426:
	movq $0x236B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_507260
L_313427:
	movq %r11,0xB0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507260:
L_313428:
	xchgq %r11,%r15
	jmp L_313226
.p2align 0x4
L_507261:
L_313323:
	movq 0x0(%r13),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_507262
L_313324:
	movq 0x18(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r13
	movq %r13,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_313325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allocateRegisters_3
.p2align 0x4
L_507262:
L_313398:
	movq 0x18(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r13
	movq %r13,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_313399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_507263:
L_313315:
	movq 0x0(%r13),%r15
	movq $0x232B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507265
L_313316:
L_313317:
	movq $0x2369,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_507264
L_313318:
	movq %r11,0xB0(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507264:
L_313319:
	xchgq %r11,%r15
	jmp L_313226
.p2align 0x4
L_507265:
L_313320:
	movq $0x236B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_507266
L_313321:
	movq %r11,0xB0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507266:
L_313322:
	xchgq %r11,%r15
	jmp L_313226
.p2align 0x4
L_507267:
L_313307:
	movq 0x0(%r13),%r15
	movq $0x2329,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507269
L_313308:
L_313309:
	movq $0x2369,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_507268
L_313310:
	movq %r11,0xB0(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507268:
L_313311:
	xchgq %r11,%r15
	jmp L_313226
.p2align 0x4
L_507269:
L_313312:
	movq $0x236B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_507270
L_313313:
	movq %r11,0xB0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507270:
L_313314:
	xchgq %r11,%r15
	jmp L_313226
.p2align 0x4
L_507271:
L_313429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_313430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313430
.p2align 0x4
.long 0x2BF3
L_313430:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_313189
.p2align 0x4
L_507272:
L_313431:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_313226
.p2align 0x4
.long 0x4D36
L_313192:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313194
L_313282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313283
.p2align 0x4
.long 0x2BDC
L_313283:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_313194:
	movq (globalObjptr+0x808)(%rip),%r15
	cmpl $0x1,0x0(%r15)
	jg L_507291
L_313195:
	movq $0x1,0xA0(%rbp)
L_313196:
	movq (globalObjptr+0x808)(%rip),%r15
	cmpl $0x4,0x0(%r15)
	jng L_507274
L_313260:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (fromList_34+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toComments_0
.p2align 0x4
L_507274:
L_313198:
	movq $0x1,0xB8(%rbp)
L_313199:
	movq (globalObjptr+0x808)(%rip),%r14
	cmpl $0x5,0x0(%r14)
	jg L_507290
L_313200:
	movq $0x1,%r15
L_313201:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507289
L_313202:
L_313203:
	movq %r15,0xB8(%rbp)
	movq %r14,0xA0(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_313204:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507288
.p2align 0x4,,0x7
L_313205:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0xC0(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0xA0(%rbp),%r11
	cmpq $0x1,%r11
	je L_507287
L_313206:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_313207:
	cmpq $0x1,%r15
	je L_507275
L_313208:
	movq %r13,0xA0(%rbp)
	movq %r14,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
L_313209:
	jmp L_313204
.p2align 0x4
L_507275:
L_313210:
	movq %r13,0xA0(%rbp)
	movq %r14,0xB8(%rbp)
.p2align 0x4,,0x7
L_313211:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507286
.p2align 0x4,,0x7
L_313212:
	movq 0xA0(%rbp),%r11
	cmpq $0x1,%r11
	je L_507276
L_313213:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0xB8(%rbp),%r14
	jmp L_313207
.p2align 0x4
L_507276:
L_313214:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_507285
L_313215:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_313216:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507284
.p2align 0x4,,0x7
L_313217:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_507277
L_313218:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_313216
.p2align 0x4
L_507277:
L_313220:
	cmpq $0x1,%r15
	je L_507281
L_313221:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507279
L_313222:
L_313223:
	movq $0x2373,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_507278
L_313224:
	movq %r13,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507278:
L_313225:
	xchgq %r13,%r15
	jmp L_313226
.p2align 0x4
L_507279:
L_313236:
	xchgq %r14,%r15
L_313237:
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_313226
L_313238:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507281:
L_313240:
	cmpq $0x1,0xB0(%rbp)
	je L_507283
L_313241:
L_313242:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_507282
L_313243:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507282:
L_313244:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_313226
.p2align 0x4
L_507283:
L_313245:
	movq $0x1,%r15
	jmp L_313237
.p2align 0x4
L_507284:
L_313246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313247
.p2align 0x4
.long 0x2BDC
L_313247:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_313217
.p2align 0x4
L_507285:
L_313248:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_313220
.p2align 0x4
L_507286:
L_313249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_313250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313250
.p2align 0x4
.long 0x2BF4
L_313250:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_313212
.p2align 0x4
L_507287:
L_313251:
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xC0(%rbp)
	jmp L_313216
.p2align 0x4
L_507288:
L_313252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313253
.p2align 0x4
.long 0x2BDC
L_313253:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_313205
.p2align 0x4
L_507289:
L_313254:
	movq %r14,0xA0(%rbp)
	movq $0x1,0xB8(%rbp)
	jmp L_313211
.p2align 0x4
L_507290:
L_313255:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_313256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toComments_1
.p2align 0x4
L_507291:
L_313266:
	movq $0x2A,%r15
	shlq $0x4,%r15
	orq $0x7,%r15
	movq %r15,0xD0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x3C,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (comment_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x2D35
L_313285:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	leaq L_313297(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (L_313286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allocateRegisters_2
.p2align 0x4
.long 0x474
L_313227:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x808)(%rip),%r14
	cmpl $0x1,0x0(%r14)
	jg L_507293
L_313228:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_507293:
L_313229:
	movq $0x26,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq %r14,0x38(%rbp)
	movl $0x3C,0x40(%rbp)
	addq $0x38,%rbp
	leaq (comment_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x4D36
L_313325:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313327
L_313396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313397
.p2align 0x4
.long 0x2BDC
L_313397:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_313327:
	movq (globalObjptr+0x808)(%rip),%r15
	cmpl $0x1,0x0(%r15)
	jg L_507311
L_313328:
	movq $0x1,0xA0(%rbp)
L_313329:
	movq (globalObjptr+0x808)(%rip),%r15
	cmpl $0x4,0x0(%r15)
	jng L_507294
L_313383:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (fromList_35+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toComments_0
.p2align 0x4
L_507294:
L_313331:
	movq $0x1,0xB8(%rbp)
L_313332:
	movq (globalObjptr+0x808)(%rip),%r14
	cmpl $0x5,0x0(%r14)
	jg L_507310
L_313333:
	movq $0x1,%r15
L_313334:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507309
L_313335:
L_313336:
	movq %r15,0xB8(%rbp)
	movq %r14,0xA0(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_313337:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507308
.p2align 0x4,,0x7
L_313338:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0xC0(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0xA0(%rbp),%r11
	cmpq $0x1,%r11
	je L_507307
L_313339:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_313340:
	cmpq $0x1,%r15
	je L_507295
L_313341:
	movq %r13,0xA0(%rbp)
	movq %r14,0xC0(%rbp)
	movq %r15,0xB8(%rbp)
L_313342:
	jmp L_313337
.p2align 0x4
L_507295:
L_313343:
	movq %r13,0xA0(%rbp)
	movq %r14,0xB8(%rbp)
.p2align 0x4,,0x7
L_313344:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507306
.p2align 0x4,,0x7
L_313345:
	movq 0xA0(%rbp),%r11
	cmpq $0x1,%r11
	je L_507296
L_313346:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0xB8(%rbp),%r14
	jmp L_313340
.p2align 0x4
L_507296:
L_313347:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_507305
L_313348:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_313349:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507304
.p2align 0x4,,0x7
L_313350:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_507297
L_313351:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_313349
.p2align 0x4
L_507297:
L_313353:
	cmpq $0x1,%r15
	je L_507301
L_313354:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_507299
L_313355:
L_313356:
	movq $0x2373,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_507298
L_313357:
	movq %r13,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507298:
L_313358:
	xchgq %r13,%r15
	jmp L_313226
.p2align 0x4
L_507299:
L_313359:
	xchgq %r14,%r15
L_313360:
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_313226
L_313361:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507301:
L_313363:
	cmpq $0x1,0xB0(%rbp)
	je L_507303
L_313364:
L_313365:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_507302
L_313366:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_313188
.p2align 0x4
L_507302:
L_313367:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_313226
.p2align 0x4
L_507303:
L_313368:
	movq $0x1,%r15
	jmp L_313360
.p2align 0x4
L_507304:
L_313369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313370
.p2align 0x4
.long 0x2BDC
L_313370:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_313350
.p2align 0x4
L_507305:
L_313371:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_313353
.p2align 0x4
L_507306:
L_313372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_313373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313373
.p2align 0x4
.long 0x2BF4
L_313373:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_313345
.p2align 0x4
L_507307:
L_313374:
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xC0(%rbp)
	jmp L_313349
.p2align 0x4
L_507308:
L_313375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313376
.p2align 0x4
.long 0x2BDC
L_313376:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_313338
.p2align 0x4
L_507309:
L_313377:
	movq %r14,0xA0(%rbp)
	movq $0x1,0xB8(%rbp)
	jmp L_313344
.p2align 0x4
L_507310:
L_313378:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_313379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toComments_1
.p2align 0x4
L_507311:
L_313389:
	movq $0x2A,%r15
	shlq $0x4,%r15
	orq $0x7,%r15
	movq %r15,0xD0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x3C,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (comment_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x2D35
L_313399:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	leaq L_313411(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (L_313400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allocateRegisters_3
.p2align 0x4
.long 0x4D38
fromList_34:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313261
L_313264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313265
.p2align 0x4
.long 0x2BDC
L_313265:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_313261:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_313198
L_313262:
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	jmp L_313199
.p2align 0x4
.long 0x4D37
L_313256:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313257
L_313258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313259
.p2align 0x4
.long 0x2D5D
L_313259:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_313257:
	movq 0xC8(%rbp),%r15
	jmp L_313201
.p2align 0x4
.long 0x4D37
comment_21:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313267
L_313280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313281
.p2align 0x4
.long 0x2D5D
L_313281:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_313267:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (toString_407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_58
.p2align 0x4
.long 0x4D3A
L_313286:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_313287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x25
L_313297:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6120)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_313298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3C9F
comment_19:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313230
L_313234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_313235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313235
.p2align 0x4
.long 0x601
L_313235:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_313230:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl $0x3C,0x50(%rbp)
	addq $0x48,%rbp
	leaq (comment_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x4D38
fromList_35:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313384
L_313387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_313388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313388
.p2align 0x4
.long 0x2BDC
L_313388:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_313384:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_313331
L_313385:
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	jmp L_313332
.p2align 0x4
.long 0x4D37
L_313379:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313380
L_313381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313382
.p2align 0x4
.long 0x2D5D
L_313382:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_313380:
	movq 0xC8(%rbp),%r15
	jmp L_313334
.p2align 0x4
.long 0x4D37
comment_23:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313390
L_313394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_313395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313395
.p2align 0x4
.long 0x2D5D
L_313395:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_313390:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (comment_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_547
.p2align 0x4
.long 0x4D3A
L_313400:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_313401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x25
L_313411:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6118)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_313412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4D39
toString_407:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (rev_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2C0F
L_313287:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_313288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4D3F
L_313298:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313299
L_313301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_313302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313302
.p2align 0x4
.long 0x4D40
L_313302:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_313299:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movb $0x0,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_313300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x7CC
comment_20:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313231
L_313232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_313233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313233
.p2align 0x4
.long 0x816
L_313233:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_313231:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4D39
comment_24:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313391
L_313392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_313393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313393
.p2align 0x4
.long 0x3134
L_313393:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_313391:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0x10,%r12
	jmp L_313329
.p2align 0x4
.long 0x2C0F
L_313401:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_313402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4D3F
L_313412:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313413
L_313415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_313416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313416
.p2align 0x4
.long 0x4D40
L_313416:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_313413:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movb $0x0,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_313414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4D39
rev_409:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq $0x1,%r15
	je L_507328
L_313268:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xC8(%rbp)
	movq $0x1,0xD8(%rbp)
.p2align 0x4,,0x7
L_313269:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_507327
.p2align 0x4,,0x7
L_313270:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_507326
L_313271:
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_313269
.p2align 0x4
L_507326:
L_313273:
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (comment_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_507327:
L_313277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_313278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313278
.p2align 0x4
.long 0x2C19
L_313278:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_313270
.p2align 0x4
L_507328:
L_313279:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_313273
.p2align 0x4
.long 0x4D3B
L_313288:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313289
L_313305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_313306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313306
.p2align 0x4
.long 0x4D42
L_313306:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_313289:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_313290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x45A
L_313300:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4D3B
L_313402:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313403
L_313419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_313420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313420
.p2align 0x4
.long 0x4D42
L_313420:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_313403:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_313404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x45A
L_313414:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4D39
comment_22:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313274
L_313275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_313276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313276
.p2align 0x4
.long 0x3134
L_313276:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_313274:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x236D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0x10,%r12
	jmp L_313196
.p2align 0x4
.long 0x4D3C
L_313290:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_313291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4D3C
L_313404:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_313405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4D3D
L_313291:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313292
L_313303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_313304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313304
.p2align 0x4
.long 0x4D41
L_313304:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_313292:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_313293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4D3D
L_313405:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313406
L_313417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_313418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313418
.p2align 0x4
.long 0x4D41
L_313418:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_313406:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_313407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4D3E
L_313293:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313294
L_313295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_313296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313296
.p2align 0x4
.long 0x3134
L_313296:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_313294:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	jmp L_313194
.p2align 0x4
.long 0x4D3E
L_313407:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_313408
L_313409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_313410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_313410
.p2align 0x4
.long 0x3134
L_313410:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_313408:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	jmp L_313327
