/* MLton g9a43e11 (built Sun Apr  5 10:55:52 NZST 2015 on ray.extensibl.com) */
/*   created this file on Sun Apr 05 12:20:21 2015. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /home/a/Projects/mlton/build/lib */
/*    lib target dir: /home/a/Projects/mlton/build/lib/targets/unknown */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: unknown */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl vos_0
.hidden vos_0
vos_0:
L_223506:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_223507
L_223551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_223552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223552
.p2align 0x4
.long 0x460
L_223552:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_223507:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x28(%rbp)
	cmpq %r11,%r14
	je L_470846
L_223508:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470846:
L_223509:
	movq 0x28(%rbp),%rdx
	testq %rdx,%rdx
	jz L_470855
L_223510:
	cmpq $0x7FFFFFFF,%rdx
	ja L_223527
L_223511:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x168B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_223512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223512
.p2align 0x4
.long 0x5DF
L_223512:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x8(%rbp)
L_223513:
	movl $0x0,0x30(%rbp)
	movq $0x0,0x38(%rbp)
loop_2511:
	movq 0x28(%rbp),%r15
	cmpq %r15,0x38(%rbp)
	jl L_470853
L_223514:
	movq 0x8(%rbp),%r15
	movq $0x18A1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x30(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_470852
L_223515:
	cmpq $0x7FFFFFFF,%rdx
	ja L_470851
L_223516:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_223517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223517
.p2align 0x4
.long 0x8E7
L_223517:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,%r15
L_223518:
	xorl %ecx,%ecx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2512:
	cmpq 0x10(%rbp),%r14
	jnl L_470850
.p2align 0x4,,0x7
loop_2513:
	movslq %ecx,%r13
	movq 0x8(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_470848
L_223524:
	incl %ecx
	jo L_470847
L_223525:
	jmp loop_2513
.p2align 0x4
L_470847:
L_223522:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470848:
L_223521:
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_223522
L_223523:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2512
.p2align 0x4
L_470850:
L_223519:
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470851:
L_223527:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470852:
L_223528:
	movq (globalObjptr+0x7380)(%rip),%r15
	jmp L_223518
.p2align 0x4
L_470853:
L_223529:
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq %r13,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_223530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_470855:
L_223550:
	movq (globalObjptr+0x7378)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_223513
.p2align 0x4
.long 0x3681
L_223530:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (x_790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3682
x_790:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470858
L_223548:
	movq 0x8(%r14),%r15
L_223532:
	cmpq $0x1,0x0(%r15)
	je L_470857
L_223533:
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_223534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470857:
L_223547:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
L_223542:
	movl %ecx,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_2511
.p2align 0x4
L_470858:
L_223531:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_223532
.p2align 0x4
.long 0x3681
L_223534:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_223535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
.long 0x3682
L_223535:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (x_791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x3683
x_791:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_470860
L_223546:
	movq 0x8(%r14),%r15
L_223537:
	cmpq $0x1,0x0(%r15)
	je L_470859
L_223538:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_223539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_470859:
L_223545:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470860:
L_223536:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_223537
.p2align 0x4
.long 0x3681
L_223539:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223540
L_223543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_223544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223544
.p2align 0x4
.long 0x3684
L_223544:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_223540:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x25FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0x30(%rbp),%ecx
	incl %ecx
	jo L_223522
L_223541:
	jmp L_223542
.text
.p2align 0x4
.globl x_1954
.hidden x_1954
x_1954:
L_223553:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_223554
L_223607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_223608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223608
.p2align 0x4
.long 0x460
L_223608:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_223554:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r11
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_470872
L_223556:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_470871
L_223557:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_223559:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_470870
L_223599:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCA4,%r10
	jne L_470869
L_223600:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_470866
L_223560:
	incl %ecx
	jo L_470865
L_223562:
	cmpq $0x1,%r14
	je L_470863
L_223563:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_223559
.p2align 0x4
L_470863:
L_223564:
L_223565:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_470864
L_223567:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_792
L_223598:
	movl %ecx,0x0(%r15)
x_792:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_223569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_470864:
L_223566:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470865:
L_223561:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470866:
L_223602:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_223566
L_223603:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_470867
L_223605:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470867:
L_223604:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470869:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_223560
.p2align 0x4
L_470870:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_223560
.p2align 0x4
L_470871:
L_223606:
	xorl %ecx,%ecx
	jmp L_223565
.p2align 0x4
L_470872:
L_223555:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_223569:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_223570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_223570:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_223571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_223571:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFA8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_223572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_223572:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_223573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_223573:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223574
L_223596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_223597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223597
.p2align 0x4
.long 0x4AF
L_223597:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_223574:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_223575:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_223561
L_223576:
	cmpq $0x1,%r14
	je L_470874
L_223577:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_223575
.p2align 0x4
L_470874:
L_223578:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223579
L_223594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_223595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223595
.p2align 0x4
.long 0x4E7
L_223595:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_223579:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_470875
L_223580:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_341:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_470875:
L_223593:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_341
.p2align 0x4
.long 0x1
rev_339:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_470881
L_223581:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_223582:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470880
.p2align 0x4,,0x7
L_223583:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470879
L_223584:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_223582
.p2align 0x4
L_470879:
L_223586:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_470880:
L_223590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_223591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223591
.p2align 0x4
.long 0x45C
L_223591:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_223583
.p2align 0x4
L_470881:
L_223592:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_223586
.p2align 0x4
.long 0x1
bug_607:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223587
L_223588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_223589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223589
.p2align 0x4
.long 0x452
L_223589:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_223587:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl concat_8
.hidden concat_8
concat_8:
L_223609:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_223610
L_223653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_223654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223654
.p2align 0x4
.long 0x452
L_223654:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_223610:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_470898
L_223611:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_223612:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470897
.p2align 0x4,,0x7
L_223613:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF31,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x29A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470883
L_223614:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_223612
.p2align 0x4
L_470883:
L_223615:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_223616:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470896
.p2align 0x4,,0x7
L_223617:
	movq $0x29A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470884
L_223618:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_223616
.p2align 0x4
L_470884:
L_223619:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_470891
L_223620:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_223621:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_470885
L_223622:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_223621
.p2align 0x4
L_470885:
L_223623:
	testq %r15,%r15
	jz L_470890
L_223624:
	cmpq $0x7FFFFFFF,%r15
	ja L_470889
L_223625:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_223626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223626
.p2align 0x4
.long 0x49C
L_223626:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_223627:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2514:
	cmpq 0x18(%rbp),%r14
	jnl L_470888
.p2align 0x4,,0x7
loop_2515:
	cmpq 0x0(%r11),%r13
	jl L_470887
L_223630:
	cmpq $0x1,%r10
	je L_470886
L_223631:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2515
.p2align 0x4
L_470886:
L_223632:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470887:
L_223633:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2514
.p2align 0x4
L_470888:
L_223628:
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470889:
L_223635:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470890:
L_223636:
	movq (globalObjptr+0x5C8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_223627
.p2align 0x4
L_470891:
L_223637:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%rdx
	movq %r13,0x10(%rbp)
	je L_470895
L_223638:
	testq %rdx,%rdx
	jz L_470894
L_223639:
	cmpq $0x7FFFFFFF,%rdx
	ja L_223635
L_223640:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_223641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223641
.p2align 0x4
.long 0x4A5
L_223641:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_223642:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2516:
	cmpq 0x18(%rbp),%r14
	jnl L_470892
L_223644:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2516
.p2align 0x4
L_470892:
L_223643:
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470894:
L_223646:
	movq (globalObjptr+0x5D0)(%rip),%r15
	jmp L_223642
.p2align 0x4
L_470895:
L_223647:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470896:
L_223648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_223649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223649
.p2align 0x4
.long 0x45C
L_223649:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_223617
.p2align 0x4
L_470897:
L_223650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_223651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223651
.p2align 0x4
.long 0x45C
L_223651:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_223613
.p2align 0x4
L_470898:
L_223652:
	movq (globalObjptr+0x5D8)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl getSelects_0
.hidden getSelects_0
getSelects_0:
L_223655:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_223656
L_223782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_223783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223783
.p2align 0x4
.long 0x45C
L_223783:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_223656:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_470913
	cmpq $0x2,%r15
	je L_470900
L_223657:
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_223658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_470900:
L_223728:
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_470912
L_223729:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_470911
L_223730:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_223732:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_470910
L_223771:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD98,%r10
	jne L_470909
L_223772:
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_470905
L_223733:
	incl %ecx
	jo L_470904
L_223734:
	cmpq $0x1,%r15
	je L_470901
L_223735:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_223732
.p2align 0x4
L_470901:
L_223736:
L_223737:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_470903
L_223738:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_223740
L_223770:
	movl %ecx,0x0(%r15)
L_223740:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_223741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_470903:
L_223676:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470904:
L_223671:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470905:
L_223774:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_223676
L_223775:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_470907
L_223780:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_223777:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	je L_470906
L_223779:
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470906:
L_223778:
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470907:
L_223776:
	movq %r10,%r15
	jmp L_223777
.p2align 0x4
L_470909:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_223733
.p2align 0x4
L_470910:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_223733
.p2align 0x4
L_470911:
L_223781:
	xorl %ecx,%ecx
	jmp L_223737
.p2align 0x4
L_470912:
L_223665:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470913:
L_223664:
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq 0x0(%rbp),%r8
	movq 0x10(%r8),%r14
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r13
	incq %r13
	jo L_223665
L_223666:
	movq %r13,0x0(%r8)
	movq 0x0(%r14),%r8
	cmpq $0x1,%r8
	je L_470924
L_223667:
	movq 0x0(%r8),%r13
	movq 0x8(%r8),%r8
	xorl %ecx,%ecx
	xchgq %r8,%r15
	movq %r11,%r14
	movq %r9,%r11
.p2align 0x4,,0x7
L_223669:
	movq %r13,%r9
	andq $0x3,%r9
	jnz L_470923
L_223710:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r9
	shrq $0x1,%r9
	cmpq $0xD98,%r9
	jne L_470922
L_223711:
	movq 0x8(%r13),%r9
	cmpq 0x0(%r13),%r10
	movq %r10,(localObjptr+0x0)(%rip)
	je L_470918
	movq %r14,(localObjptr+0x10)(%rip)
L_223670:
	incl %ecx
	jo L_223671
L_223672:
	cmpq $0x1,%r15
	je L_470914
L_223673:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	movq (localObjptr+0x0)(%rip),%r10
	jmp L_223669
.p2align 0x4
L_470914:
L_223674:
L_223675:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_223676
L_223677:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_223679
L_223709:
	movl %ecx,0x0(%r15)
L_223679:
	movq %r11,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_223680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_470918:
L_223713:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_223676
L_223714:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_470920
L_223726:
	movl %ecx,0x0(%r13)
	movq %r9,%r15
	movq %r14,(localObjptr+0x10)(%rip)
L_223716:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_470919
L_223718:
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	movq (localObjptr+0x10)(%rip),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x11,0x20(%rbp)
	movq %r11,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_223719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_470919:
L_223717:
	movq (globalObjptr+0x7350)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470920:
L_223715:
	movq %r9,%r15
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_223716
.p2align 0x4
L_470922:
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x0)(%rip)
	jmp L_223670
.p2align 0x4
L_470923:
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x0)(%rip)
	jmp L_223670
.p2align 0x4
L_470924:
L_223727:
	xorl %ecx,%ecx
	movq %r9,%r11
	jmp L_223675
.p2align 0x4
.long 0x1
L_223658:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10D0,%r15
	je L_470928
	cmpq $0x10D2,%r15
	je L_470927
L_223659:
	movq (globalObjptr+0x7358)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470927:
L_223663:
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470928:
L_223660:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	je L_470929
L_223662:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470929:
L_223661:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_223741:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_223742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_223680:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_223681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_223719:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_470930
L_223720:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470930:
L_223721:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x11,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_223722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x4B0
L_223742:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x102B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_223743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_223681:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x102B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_223682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_223722:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223723
L_223724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_223725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223725
.p2align 0x4
.long 0x460
L_223725:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_223723:
	movq $0x1B51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5B0
L_223743:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_223744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_223682:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_223683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_223744:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223745
L_223768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_223769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223769
.p2align 0x4
.long 0x4AF
L_223769:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_223745:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_223746:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_223671
L_223747:
	cmpq $0x1,%r14
	je L_470932
L_223748:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_223746
.p2align 0x4
L_470932:
L_223749:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223750
L_223766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_223767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223767
.p2align 0x4
.long 0x4E7
L_223767:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_223750:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_470933
L_223751:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_343:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_470933:
L_223765:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_343
.p2align 0x4
.long 0x51F
L_223683:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223684
L_223707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_223708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223708
.p2align 0x4
.long 0x4AF
L_223708:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_223684:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_223685:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_223671
L_223686:
	cmpq $0x1,%r14
	je L_470937
L_223687:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_223685
.p2align 0x4
L_470937:
L_223688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223689
L_223705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_223706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223706
.p2align 0x4
.long 0x4E7
L_223706:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_223689:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_470938
L_223690:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_342:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_470938:
L_223704:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_342
.p2align 0x4
.long 0x1
rev_341:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_470944
L_223752:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_223753:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470943
.p2align 0x4,,0x7
L_223754:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470942
L_223755:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_223753
.p2align 0x4
L_470942:
L_223757:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_223758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_470943:
L_223762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_223763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223763
.p2align 0x4
.long 0x45C
L_223763:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_223754
.p2align 0x4
L_470944:
L_223764:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_223757
.p2align 0x4
.long 0x1
rev_340:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_470947
L_223691:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_223692:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470946
.p2align 0x4,,0x7
L_223693:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_470945
L_223694:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_223692
.p2align 0x4
L_470945:
L_223696:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_223697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_470946:
L_223701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_223702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223702
.p2align 0x4
.long 0x45C
L_223702:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_223693
.p2align 0x4
L_470947:
L_223703:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_223696
.p2align 0x4
.long 0x1
L_223758:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223759
L_223760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_223761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223761
.p2align 0x4
.long 0x452
L_223761:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_223759:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_223697:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223698
L_223699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_223700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223700
.p2align 0x4
.long 0x452
L_223700:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_223698:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toOperand_0
.hidden toOperand_0
toOperand_0:
L_223784:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_223831
L_223785:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470952
L_223786:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CC,%r14
	je L_470950
L_223830:
	movq 0x0(%r15),%r14
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470950:
L_223787:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_470951
L_223788:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_223789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_470951:
L_223829:
	movq (globalObjptr+0x5208)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470952:
L_223831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_223832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223832
.p2align 0x4
.long 0x63D
L_223832:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_223786
.p2align 0x4
.long 0x57F
L_223789:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223790
L_223827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_223828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223828
.p2align 0x4
.long 0x531
L_223828:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_223790:
	movl 0x10(%rbp),%r15d
	cmpl $0x1,%r15d
	je L_470958
	cmpl $0x2,%r15d
	je L_470957
	cmpl $0x4,%r15d
	je L_470956
	cmpl $0x8,%r15d
	je L_470955
L_223791:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_470954
L_223792:
	movq %r14,0x58(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_223793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_470954:
L_223817:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_223818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_470955:
L_223826:
	xorb %dl,%dl
L_223823:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470956:
L_223825:
	movb $0x1,%dl
	jmp L_223823
.p2align 0x4
L_470957:
L_223824:
	movb $0x2,%dl
	jmp L_223823
.p2align 0x4
L_470958:
L_223822:
	movb $0x3,%dl
	jmp L_223823
.p2align 0x4
.long 0x585
L_223793:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223794
L_223815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_223816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223816
.p2align 0x4
.long 0x112A
L_223816:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_223794:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_223795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1
L_223818:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2494
L_223795:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223796
L_223813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_223814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223814
.p2align 0x4
.long 0x1072
L_223814:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_223796:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_223797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
bug_608:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223819
L_223820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_223821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223821
.p2align 0x4
.long 0x452
L_223821:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_223819:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3685
L_223797:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x68(%rbp)
	movq $0x3,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_223798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x3686
L_223798:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_223799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3687
L_223799:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223800
L_223811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_223812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223812
.p2align 0x4
.long 0xA17
L_223812:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_223800:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_223801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223801
.p2align 0x4
.long 0x3688
L_223801:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2517:
	cmpq $0x2,%r15
	jnl L_470965
L_223806:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_470964
	cmpl $0x1,%r14d
	je L_470963
L_223807:
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470963:
L_223810:
	movq 0x30(%rbp),%r14
L_223809:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2517
.p2align 0x4
L_470964:
L_223808:
	movq 0x40(%rbp),%r14
	jmp L_223809
.p2align 0x4
L_470965:
L_223802:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223803
L_223804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_223805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223805
.p2align 0x4
.long 0x3689
L_223805:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_223803:
	movq 0x18(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x216D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x10(%rbp),%r9
	movq %r9,0x8(%r10)
	movq $0x2127,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x8(%r9)
	movq %r10,0x10(%r9)
	addq $0x20,%r12
	movq %r15,0x0(%r9)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x30,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x8(%rbp)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl resize_0
.hidden resize_0
resize_0:
L_223833:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_223834
L_223969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_223970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223970
.p2align 0x4
.long 0x45C
L_223970:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_223834:
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_223835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x541
L_223835:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x6,%r15
	je L_470978
L_223836:
	andq $0x3,%r14
	jnz L_223837
L_223967:
L_223837:
	xorw %r15w,%r15w
L_223838:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,%r13
	andq $0x7,%r13
	cmpq $0x6,%r13
	je L_470974
L_223839:
	andq $0x3,%r11
	jnz L_470973
L_223949:
	movw %r15w,%r14w
L_223840:
	movw %r14w,%r15w
	andw $0x1,%r15w
	jz L_470972
L_223931:
	shrw $0x1,%r14w
	movb %r14b,%r15b
	movb %r15b,0x30(%rbp)
	xorw %r14w,%r14w
L_223932:
	andw $0x1,%r14w
	jnz L_470970
L_223933:
	movb 0x30(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_470969
L_223934:
	movq $0x11,%r15
toBits_19:
	movq %r15,0x50(%rbp)
	movq $0x11,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_223935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_470969:
L_223947:
	movq $0x9,%r15
	jmp toBits_19
.p2align 0x4
L_470970:
L_223948:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
L_223842:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%rdi
	movq %rdi,0x60(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x50(%rbp),%rsi
	xorq %rax,%rax
	call IntInf_equal
L_223843:
	testl %eax,%eax
	jnz L_470971
L_223844:
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_223845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_470971:
L_223915:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_223916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_470972:
L_223841:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_223842
.p2align 0x4
L_470973:
	movw %r15w,%r14w
	jmp L_223840
.p2align 0x4
L_470974:
L_223950:
	shrq $0x3,%r11
	movb %r11b,%r13b
	movb %r13b,0x40(%rbp)
	movzbw %r13b,%r14w
	shlw $0x1,%r14w
	orw $0x1,%r14w
	movw %r15w,%r13w
	andw $0x1,%r13w
	jz L_470975
L_223966:
	shrw $0x1,%r15w
	movb %r15b,%r13b
	movb %r13b,0x30(%rbp)
	jmp L_223932
.p2align 0x4
L_470975:
L_223951:
	movb 0x40(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_470976
L_223952:
	movq $0x11,%r15
toBits_20:
	movq %r15,0x58(%rbp)
	movq $0x11,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_223953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_470976:
L_223965:
	movq $0x9,%r15
	jmp toBits_20
.p2align 0x4
L_470978:
L_223968:
	shrq $0x3,%r14
	movb %r14b,%r13b
	movzbw %r13b,%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	jmp L_223838
.p2align 0x4
.long 0x575
L_223935:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_223936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x368A
L_223845:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223846
L_223913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_223914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223914
.p2align 0x4
.long 0x3693
L_223914:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_223846:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_223847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223847
.p2align 0x4
.long 0x800
L_223847:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2518:
	cmpq $0x1,%r15
	jnl L_470979
L_223912:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2518
.p2align 0x4
L_470979:
L_223848:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223849
L_223910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_223911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223911
.p2align 0x4
.long 0x858
L_223911:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_223849:
	movq 0x28(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_223850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0xE3C
L_223916:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_223917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x3697
L_223953:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_223954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x575
L_223936:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_223937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x368B
L_223850:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_223851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0xE3C
L_223917:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223918
L_223929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_223930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223930
.p2align 0x4
.long 0x3694
L_223930:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_223918:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_471002
L_223919:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_471000
	cmpq $0x2,%r14
	je L_470998
	cmpq $0x3,%r14
	je L_470996
L_223920:
	movq %r15,0x78(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_223854:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223855
L_223894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_223895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223895
.p2align 0x4
.long 0x3691
L_223895:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_223855:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_223856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223856
.p2align 0x4
.long 0x368D
L_223856:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2519:
	cmpq $0x1,%r15
	jnl L_470982
L_223893:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2519
.p2align 0x4
L_470982:
L_223857:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223858
L_223891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_223892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223892
.p2align 0x4
.long 0x3690
L_223892:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_223858:
	movq 0x88(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2177,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movzbl 0x68(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2127,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_470993
L_223859:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_223860:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470992
.p2align 0x4,,0x7
L_223861:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_470983
L_223862:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_223860
.p2align 0x4
L_470983:
L_223863:
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_223864:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470991
.p2align 0x4,,0x7
L_223865:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_470984
L_223866:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_223864
.p2align 0x4
L_470984:
L_223868:
	cmpq $0x1,%r15
	je L_470990
L_223869:
	movq %r15,0x58(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
L_223870:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_470989
L_223871:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_223872:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470988
.p2align 0x4,,0x7
L_223873:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_470985
L_223874:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_223872
.p2align 0x4
L_470985:
L_223875:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_223876:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_470987
.p2align 0x4,,0x7
L_223877:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_470986
L_223878:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_223876
.p2align 0x4
L_470986:
L_223879:
	movq %r15,0x0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470987:
L_223880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_223881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223881
.p2align 0x4
.long 0xCBF
L_223881:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_223877
.p2align 0x4
L_470988:
L_223882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_223883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223883
.p2align 0x4
.long 0x16C8
L_223883:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_223873
.p2align 0x4
L_470989:
L_223884:
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470990:
L_223885:
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470991:
L_223886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_223887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223887
.p2align 0x4
.long 0x368E
L_223887:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_223865
.p2align 0x4
L_470992:
L_223888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_223889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223889
.p2align 0x4
.long 0x368F
L_223889:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_223861
.p2align 0x4
L_470993:
L_223890:
	movq 0x78(%rbp),%r14
	xchgq %r14,%r15
	jmp L_223868
.p2align 0x4
L_470996:
L_223923:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
L_223905:
	cmpq $0x1,%r15
	je L_470997
L_223906:
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_223870
.p2align 0x4
L_470997:
L_223907:
	movq %r14,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_470998:
L_223922:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
L_223901:
	cmpq $0x1,%r15
	je L_470999
L_223902:
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_223870
.p2align 0x4
L_470999:
L_223903:
	movq %r14,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471000:
L_223921:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
L_223897:
	cmpq $0x1,%r15
	je L_471001
L_223898:
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_223870
.p2align 0x4
L_471001:
L_223899:
	movq %r14,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471002:
L_223924:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_471005
	cmpq $0x2,%r15
	je L_471004
	cmpq $0x3,%r15
	je L_471003
L_223925:
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	jmp L_223854
.p2align 0x4
L_471003:
L_223928:
	movq $0x1,%r13
	movq 0x58(%rbp),%r14
	xchgq %r13,%r15
	jmp L_223905
.p2align 0x4
L_471004:
L_223927:
	movq $0x1,%r13
	movq 0x58(%rbp),%r14
	xchgq %r13,%r15
	jmp L_223901
.p2align 0x4
L_471005:
L_223926:
	movq $0x1,%r13
	movq 0x58(%rbp),%r14
	xchgq %r13,%r15
	jmp L_223897
.p2align 0x4
.long 0x3697
L_223954:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_223955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1134
L_223937:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223938
L_223945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_223946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223946
.p2align 0x4
.long 0x3696
L_223946:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_223938:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x40(%rbp)
	movq %r11,0x8(%r15)
	movq %r11,0x48(%rbp)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_223939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223939
.p2align 0x4
.long 0x3695
L_223939:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2520:
	cmpq $0x1,%r15
	jnl L_471007
L_223944:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2520
.p2align 0x4
L_471007:
L_223940:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223941
L_223942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_223943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223943
.p2align 0x4
.long 0xBED
L_223943:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_223941:
	movq 0x18(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2181,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movzbl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x10(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2127,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	movq %r13,0x10(%r10)
	addq $0x20,%r12
	movq %r15,0x0(%r10)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq $0x2,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r11,0x50(%rbp)
	jmp L_223842
.p2align 0x4
.long 0x368C
L_223851:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223852
L_223908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_223909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223909
.p2align 0x4
.long 0x3692
L_223909:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_223852:
	movq $0x11EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2173,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2127,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_471012
	cmpq $0x2,%r15
	je L_471011
	cmpq $0x3,%r15
	je L_471010
L_223853:
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x78(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x68(%rbp)
	jmp L_223854
.p2align 0x4
L_471010:
L_223904:
	movq 0x68(%rbp),%r13
	xchgq %r14,%r15
	xchgq %r13,%r14
	jmp L_223905
.p2align 0x4
L_471011:
L_223900:
	movq 0x68(%rbp),%r13
	xchgq %r14,%r15
	xchgq %r13,%r14
	jmp L_223901
.p2align 0x4
L_471012:
L_223896:
	movq 0x68(%rbp),%r13
	xchgq %r14,%r15
	xchgq %r13,%r14
	jmp L_223897
.p2align 0x4
.long 0x1DA9
L_223955:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223956
L_223963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_223964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223964
.p2align 0x4
.long 0x67E
L_223964:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_223956:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x44(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movb 0x40(%rbp),%r14b
	movzbq %r14b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x50(%rbp)
	testb %r14b,%r14b
	jnz L_471014
L_223957:
	movq $0x11,%r15
toBits_21:
	movq %r15,0x68(%rbp)
	movq $0x11,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_223958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471014:
L_223962:
	movq $0x9,%r15
	jmp toBits_21
.p2align 0x4
.long 0x3698
L_223958:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223959
L_223960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_223961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223961
.p2align 0x4
.long 0x309C
L_223961:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_223959:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x493,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x2A39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movzbl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movq %r11,0x40(%rbp)
	movl $0x0,0x4(%r14)
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_223842
.text
.p2align 0x4
.globl x_1959
.hidden x_1959
x_1959:
L_223971:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_223972
L_224093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_224094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224094
.p2align 0x4
.long 0x45C
L_224094:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_223972:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x38(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x30(%r14),%r11
	movq 0x28(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r10
	movq %r10,0x60(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r14
	je L_471017
L_223973:
	movq 0x8(%r11),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x80(%rbp)
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_223974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_471017:
L_224092:
	movq $0x1,0x58(%rbp)
L_223986:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_223987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x3699
L_223974:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_223975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x369F
L_223987:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_223988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x369A
L_223975:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_223976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xA57
L_223988:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_223989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resize_0
.p2align 0x4
.long 0x369B
L_223976:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223977
L_224090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_224091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224091
.p2align 0x4
.long 0x1998
L_224091:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_223977:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_223978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x36A0
L_223989:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223990
L_224078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_224079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224079
.p2align 0x4
.long 0x36B4
L_224079:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_223990:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x80(%rbp),%rsi
	movq 0x78(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_223991:
	testl %eax,%eax
	jnz L_471020
L_223992:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_223993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_471020:
L_224077:
	movq $0x1,%r14
	movq 0x70(%rbp),%r15
L_224011:
	movq $0x212D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	cmpq $0x1,%r14
	je L_471038
L_224012:
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_224013:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471037
.p2align 0x4,,0x7
L_224014:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_471021
L_224015:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_224013
.p2align 0x4
L_471021:
L_224016:
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x78(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
.p2align 0x4,,0x7
L_224017:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471036
.p2align 0x4,,0x7
L_224018:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_471022
L_224019:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_224017
.p2align 0x4
L_471022:
L_224020:
	movq %r15,0x68(%rbp)
L_224021:
	cmpq $0x1,0x68(%rbp)
	je L_471034
L_224022:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_471033
L_224023:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_224024:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471032
.p2align 0x4,,0x7
L_224025:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_471023
L_224026:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_224024
.p2align 0x4
L_471023:
L_224027:
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_224028:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471031
.p2align 0x4,,0x7
L_224029:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_471024
L_224030:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_224028
.p2align 0x4
L_471024:
L_224032:
	cmpq $0x1,%r15
	je L_471030
L_224033:
	movq %r15,0x60(%rbp)
L_224034:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_471029
L_224035:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_224036:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471028
.p2align 0x4,,0x7
L_224037:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_471025
L_224038:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_224036
.p2align 0x4
L_471025:
L_224039:
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_224040:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471027
.p2align 0x4,,0x7
L_224041:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_471026
L_224042:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_224040
.p2align 0x4
L_471026:
L_224043:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471027:
L_224044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_224045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224045
.p2align 0x4
.long 0x45C
L_224045:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_224041
.p2align 0x4
L_471028:
L_224046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_224047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224047
.p2align 0x4
.long 0x1E81
L_224047:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_224037
.p2align 0x4
L_471029:
L_224048:
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471030:
L_224050:
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471031:
L_224051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_224052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224052
.p2align 0x4
.long 0x36AD
L_224052:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_224029
.p2align 0x4
L_471032:
L_224053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_224054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224054
.p2align 0x4
.long 0x36AE
L_224054:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_224025
.p2align 0x4
L_471033:
L_224055:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
	jmp L_224032
.p2align 0x4
L_471034:
L_224056:
	cmpq $0x1,0x60(%rbp)
	je L_224050
	jmp L_224034
.p2align 0x4
L_471036:
L_224059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_224060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224060
.p2align 0x4
.long 0x36AE
L_224060:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_224018
.p2align 0x4
L_471037:
L_224061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_224062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224062
.p2align 0x4
.long 0x36AF
L_224062:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_224014
.p2align 0x4
L_471038:
L_224063:
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_224021
.p2align 0x4
.long 0x369C
L_223978:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_223979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x36A1
L_223993:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_223994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1F5C
L_223979:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223980
L_224088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_224089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224089
.p2align 0x4
.long 0x36B7
L_224089:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_223980:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x88(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x90(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_223981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_223981
.p2align 0x4
.long 0x369D
L_223981:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2521:
	cmpq $0x2,%r15
	jnl L_471042
L_224084:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_471041
	cmpl $0x1,%r14d
	je L_471040
L_224069:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471040:
L_224087:
	movq 0x78(%rbp),%r14
L_224086:
	movq 0x88(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2521
.p2align 0x4
L_471041:
L_224085:
	movq 0x60(%rbp),%r14
	jmp L_224086
.p2align 0x4
L_471042:
L_223982:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223983
L_224082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_224083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224083
.p2align 0x4
.long 0x36B6
L_224083:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_223983:
	movq 0x88(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_223984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x36A2
L_223994:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_223995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x369E
L_223984:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_223985
L_224080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_224081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224081
.p2align 0x4
.long 0x36B5
L_224081:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_223985:
	movq $0x2157,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x60(%rbp)
	addq $0x10,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x58(%rbp)
	jmp L_223986
.p2align 0x4
.long 0xB86
L_223995:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_223996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x36A3
L_223996:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_223997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x36A4
L_223997:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_223998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x36A5
L_223998:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_223999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x36A6
L_223999:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_224000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x36A7
L_224000:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_224001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x36A8
L_224001:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224002
L_224075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_224076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224076
.p2align 0x4
.long 0x36B3
L_224076:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_224002:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_224003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x36A9
L_224003:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_224004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x36AA
L_224004:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224005
L_224073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_224074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224074
.p2align 0x4
.long 0x36B2
L_224074:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_224005:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x90(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x98(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_224006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224006
.p2align 0x4
.long 0x36AB
L_224006:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x90(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2522:
	cmpq $0x2,%r15
	jnl L_471049
L_224068:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_471048
	cmpl $0x1,%r14d
	je L_471047
	jmp L_224069
.p2align 0x4
L_471047:
L_224072:
	movq 0x78(%rbp),%r14
L_224071:
	movq 0x90(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2522
.p2align 0x4
L_471048:
L_224070:
	movq 0x70(%rbp),%r14
	jmp L_224071
.p2align 0x4
L_471049:
L_224007:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224008
L_224066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_224067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224067
.p2align 0x4
.long 0x36B1
L_224067:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_224008:
	movq 0x90(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_224009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x36AC
L_224009:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224010
L_224064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_224065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224065
.p2align 0x4
.long 0x36B0
L_224065:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_224010:
	movq $0x2179,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,%r14
	movq %r13,%r15
	jmp L_224011
.text
.p2align 0x4
.globl translatePrim_0
.hidden translatePrim_0
translatePrim_0:
L_224095:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_224250
L_224096:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471191
L_224097:
	movq 0x0(%rbp),%rax
	andq $0xFF,%rax
	subq $0x1,%rax
	cmpq $0x88,%rax
	ja L_471053
	jmp *jumpTable_685(,%rax,8)
.data
.p2align 0x4
jumpTable_685:
.quad L_471190,L_471189,L_471188,L_224098,L_471186,L_471185,L_471184,L_224098,L_471183,L_471182,L_471181,L_224098,L_471180,L_471179,L_471178,L_224098,L_471177,L_471176,L_471175,L_224098,L_471174,L_471173,L_471172,L_224098,L_471171,L_471170,L_471169,L_224098,L_471168,L_471167,L_471166,L_224098,L_471165,L_471164,L_471163,L_224098,L_471162,L_471161,L_471160,L_224098,L_471159,L_471158,L_471157,L_224098,L_471156,L_471155,L_471154,L_224098,L_471153,L_471152,L_471151,L_224098,L_471150,L_471149,L_471148,L_224098,L_471147,L_471146,L_471145,L_224098,L_471144,L_471143,L_471142,L_224098,L_471141,L_471140,L_471139,L_224098,L_471138,L_471137,L_471136,L_224098,L_471135,L_471134,L_471133,L_224098,L_471132,L_471131,L_471130,L_224098,L_471129,L_471128,L_471127,L_224098,L_471126,L_471125,L_471124,L_224098,L_471123,L_471122,L_471121,L_224098,L_471120,L_471119,L_471118,L_224098,L_471117,L_471116,L_471115,L_224098,L_471114,L_471113,L_471112,L_224098,L_471111,L_471110,L_471109,L_224098,L_471108,L_471107,L_471106,L_224098,L_471105,L_471104,L_471103,L_224098,L_471102,L_471101,L_471100,L_224098,L_471099,L_471098,L_471097,L_224098,L_471096,L_471095,L_471094,L_224098,L_471093,L_471092,L_471091,L_224098,L_471090,L_471089,L_471088,L_224098,L_471087
.text
.p2align 0x4
L_471053:
L_224098:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x11E6,%rax
	cmpq $0x1E,%rax
	ja L_471054
	jmp *jumpTable_686(,%rax,8)
.data
.p2align 0x4
jumpTable_686:
.quad L_471086,L_471085,L_471084,L_471083,L_471082,L_471081,L_471080,L_471079,L_471078,L_471077,L_471076,L_471075,L_471074,L_471073,L_471072,L_471071,L_471070,L_471069,L_471068,L_471067,L_471066,L_471065,L_471064,L_471063,L_471062,L_471061,L_471060,L_471059,L_471057,L_471056,L_471055
.text
.p2align 0x4
L_471054:
L_224099:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x214B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471055:
L_224146:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2189,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471056:
L_224145:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2187,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471057:
L_224128:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x19(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_471058
L_224130:
	movl %r13d,0x40(%rbp)
	movq $0x3997,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_224131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_471058:
L_224129:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471059:
L_224127:
	movq 0x0(%rbp),%r15
	movb 0x2(%r15),%r14b
	movq 0x8(%r15),%r13
	movw 0x0(%r15),%r11w
	movq $0x2183,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzwl %r11w,%r13d
	movzbl %r14b,%r11d
	shll $0x10,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471060:
L_224126:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x2181,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471061:
L_224125:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movb 0x4(%r15),%r11b
	movq $0x217F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471062:
L_224124:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x217D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471063:
L_224123:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x217B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471064:
L_224122:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2179,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471065:
L_224121:
	movq 0x0(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r13
	movq $0x2177,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471066:
L_224120:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2175,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471067:
L_224119:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2173,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471068:
L_224118:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2171,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471069:
L_224117:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x216F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471070:
L_224116:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x216D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471071:
L_224115:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x216B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471072:
L_224114:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2169,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471073:
L_224113:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2167,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471074:
L_224112:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2165,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471075:
L_224111:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2163,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471076:
L_224110:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471077:
L_224109:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x215F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471078:
L_224108:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movb 0x4(%r15),%r13b
	movq 0x8(%r15),%r11
	movq $0x215D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471079:
L_224107:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x215B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471080:
L_224106:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471081:
L_224105:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2157,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471082:
L_224104:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471083:
L_224103:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2153,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471084:
L_224102:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2151,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471085:
L_224101:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x214F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471086:
L_224100:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x214D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471087:
L_224249:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	shrq $0x10,%r14
	movb %r14b,%r13b
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq %r14,%r15
	shlq $0x8,%r15
	orq $0x89,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471088:
L_224248:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x87,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471089:
L_224247:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x86,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471090:
L_224246:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x85,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471091:
L_224245:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471092:
L_224244:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x82,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471093:
L_224243:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x81,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471094:
L_224242:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7F,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471095:
L_224241:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7E,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471096:
L_224240:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7D,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471097:
L_224239:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7B,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471098:
L_224238:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7A,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471099:
L_224237:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x79,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471100:
L_224236:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471101:
L_224235:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x76,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471102:
L_224234:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x75,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471103:
L_224233:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x73,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471104:
L_224232:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x72,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471105:
L_224231:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x71,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471106:
L_224230:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6F,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471107:
L_224229:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6E,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471108:
L_224228:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6D,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471109:
L_224227:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6B,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471110:
L_224226:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6A,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471111:
L_224225:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x69,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471112:
L_224224:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x67,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471113:
L_224223:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x66,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471114:
L_224222:
	movq 0x0(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x65,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471115:
L_224221:
	movq $0x63,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471116:
L_224220:
	movq $0x62,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471117:
L_224219:
	movq $0x61,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471118:
L_224218:
	movq $0x5F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471119:
L_224217:
	movq $0x5E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471120:
L_224216:
	movq $0x5D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471121:
L_224215:
	movq $0x5B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471122:
L_224214:
	movq $0x5A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471123:
L_224213:
	movq $0x59,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471124:
L_224212:
	movq $0x57,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471125:
L_224211:
	movq $0x56,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471126:
L_224210:
	movq $0x55,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471127:
L_224209:
	movq $0x53,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471128:
L_224208:
	movq $0x52,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471129:
L_224207:
	movq $0x51,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471130:
L_224206:
	movq $0x4F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471131:
L_224205:
	movq $0x4E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471132:
L_224204:
	movq $0x4D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471133:
L_224203:
	movq $0x4B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471134:
L_224202:
	movq $0x4A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471135:
L_224201:
	movq $0x49,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471136:
L_224200:
	movq $0x47,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471137:
L_224199:
	movq $0x46,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471138:
L_224198:
	movq $0x45,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471139:
L_224197:
	movq $0x43,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471140:
L_224196:
	movq $0x42,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471141:
L_224195:
	movq $0x41,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471142:
L_224194:
	movq $0x3F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471143:
L_224193:
	movq $0x3E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471144:
L_224192:
	movq $0x3D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471145:
L_224191:
	movq $0x3B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471146:
L_224190:
	movq $0x3A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471147:
L_224189:
	movq $0x39,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471148:
L_224188:
	movq $0x37,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471149:
L_224187:
	movq $0x36,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471150:
L_224186:
	movq $0x35,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471151:
L_224185:
	movq $0x33,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471152:
L_224184:
	movq $0x32,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471153:
L_224183:
	movq $0x31,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471154:
L_224182:
	movq $0x2F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471155:
L_224181:
	movq $0x2E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471156:
L_224180:
	movq $0x2D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471157:
L_224179:
	movq $0x2B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471158:
L_224178:
	movq $0x2A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471159:
L_224177:
	movq $0x29,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471160:
L_224176:
	movq $0x27,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471161:
L_224175:
	movq $0x26,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471162:
L_224174:
	movq $0x25,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471163:
L_224173:
	movq $0x23,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471164:
L_224172:
	movq $0x22,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471165:
L_224171:
	movq $0x21,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471166:
L_224170:
	movq $0x1F,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471167:
L_224169:
	movq $0x1E,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471168:
L_224168:
	movq $0x1D,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471169:
L_224167:
	movq $0x1B,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471170:
L_224166:
	movq $0x1A,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471171:
L_224165:
	movq $0x19,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471172:
L_224164:
	movq $0x17,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471173:
L_224163:
	movq $0x16,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471174:
L_224162:
	movq $0x15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471175:
L_224161:
	movq $0x13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471176:
L_224160:
	movq $0x12,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471177:
L_224159:
	movq $0x11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471178:
L_224158:
	movq $0xF,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471179:
L_224157:
	movq $0xE,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471180:
L_224156:
	movq $0xD,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471181:
L_224155:
	movq $0xB,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471182:
L_224154:
	movq $0xA,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471183:
L_224153:
	movq $0x9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471184:
L_224152:
	movq $0x7,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471185:
L_224151:
	movq $0x6,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471186:
L_224150:
	movq $0x5,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471188:
L_224149:
	movq $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471189:
L_224148:
	movq $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471190:
L_224147:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471191:
L_224250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_224251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224251
.p2align 0x4
.long 0x460
L_224251:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224097
.p2align 0x4
.long 0x63A
L_224131:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (x_793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x9AC
x_793:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224132
L_224143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_224144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224144
.p2align 0x4
.long 0x1C7D
L_224144:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_224132:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_471194
L_224142:
	movq 0x8(%r14),%r15
L_224134:
	cmpq $0x1,0x0(%r15)
	je L_471193
L_224135:
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_224136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_471193:
L_224141:
	movq (globalObjptr+0xBB8)(%rip),%r15
L_224138:
	movq $0x2185,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x1,0x14(%r14)
	movl $0x1,0x18(%r14)
	movl $0x1,0x1C(%r14)
	movzbl 0x19(%rbp),%r15d
	movzbl 0x18(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r15d
	movl %r15d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471194:
L_224133:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_224134
.p2align 0x4
.long 0x50E
L_224136:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224137
L_224139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_224140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224140
.p2align 0x4
.long 0x165E
L_224140:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_224137:
	movq 0x20(%rbp),%r15
	jmp L_224138
.text
.p2align 0x4
.globl x_1956
.hidden x_1956
x_1956:
L_224252:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_224253
L_224337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_224338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224338
.p2align 0x4
.long 0x452
L_224338:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_224253:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x9,%r14
	je L_224258
	cmpq $0xA,%r14
	je L_224258
	cmpq $0xB,%r14
	je L_224258
	cmpq $0xD,%r14
	je L_224258
	cmpq $0x11,%r14
	je L_224258
	cmpq $0x15,%r14
	je L_224258
	cmpq $0x16,%r14
	je L_224258
	cmpq $0x51,%r14
	je L_224255
	cmpq $0x67,%r14
	je L_224258
	cmpq $0x69,%r14
	je L_224258
	cmpq $0x6A,%r14
	je L_224258
	cmpq $0x6B,%r14
	je L_224258
	cmpq $0x6D,%r14
	je L_224258
	cmpq $0x6E,%r14
	je L_224258
	cmpq $0x6F,%r14
	je L_224258
	cmpq $0x71,%r14
	je L_224258
	cmpq $0x72,%r14
	je L_224258
	cmpq $0x73,%r14
	je L_224258
	cmpq $0x75,%r14
	je L_224258
	cmpq $0x76,%r14
	je L_224258
	cmpq $0x77,%r14
	je L_224258
	cmpq $0x79,%r14
	je L_224258
	cmpq $0x7A,%r14
	je L_224258
	cmpq $0x7B,%r14
	je L_224258
	cmpq $0x7D,%r14
	je L_224258
	cmpq $0x7E,%r14
	je L_224258
	cmpq $0x7F,%r14
	je L_224258
	cmpq $0x81,%r14
	je L_224258
	cmpq $0x82,%r14
	je L_224258
	cmpq $0x83,%r14
	je L_224258
	cmpq $0x85,%r14
	je L_224258
	cmpq $0x86,%r14
	je L_224258
	cmpq $0x87,%r14
	je L_224258
	cmpq $0x89,%r14
	je L_224258
L_224254:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_224255
L_224256:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x19,%rax
	ja L_471197
	jmp *jumpTable_687(,%rax,8)
.data
.p2align 0x4
jumpTable_687:
.quad L_224258,L_224258,L_224258,L_471221,L_471220,L_471219,L_471217,L_471216,L_471215,L_224258,L_224258,L_224258,L_224258,L_471210,L_471209,L_471208,L_471207,L_471206,L_471205,L_224255,L_224258,L_224258,L_224258,L_471199,L_224255,L_471198
.text
.p2align 0x4
L_471197:
L_224255:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471198:
L_224258:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471199:
L_224297:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jz L_224255
L_224299:
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471205:
L_224291:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471206:
L_224288:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_224289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471207:
L_224286:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471208:
L_224284:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471209:
L_224282:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471210:
L_224280:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471215:
L_224274:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471216:
L_224272:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471217:
L_224268:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jz L_224255
L_224270:
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471219:
L_224266:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471220:
L_224264:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471221:
L_224261:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_224300:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
L_224263:
	movq (globalObjptr+0x1710)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_224292:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x522
L_224289:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je w32168_0
	cmpl $0x10,%r15d
	je w32168_0
	cmpl $0x20,%r15d
	je w32168_1
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
w32168_1:
w32168_0:
	addq $0x8,%rbp
	leaq (L_224290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_224287:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224285:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224283:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224281:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224275:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224273:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224271:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224267:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224265:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224262:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.p2align 0x4
.long 0x1
L_224290:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224258
	cmpl $0x10,%r15d
	je L_224258
	cmpl $0x20,%r15d
	je L_224258
	cmpl $0x40,%r15d
	je L_224255
	jmp L_224263
.text
.p2align 0x4
.globl cFunction_0
.hidden cFunction_0
cFunction_0:
L_224339:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_224340
L_224911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_224912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224912
.p2align 0x4
.long 0x45D
L_224912:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_224340:
	movq 0x8(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x40(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x49(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_224444(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_224341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
.long 0x36B8
L_224341:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224342
L_224909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_224910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224910
.p2align 0x4
.long 0x36F5
L_224910:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_224342:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je intInfBinary_2
	cmpq $0x1E,%r14
	je intInfBinary_2
	cmpq $0x1F,%r14
	je intInfShift_2
	cmpq $0x21,%r14
	je L_471378
	cmpq $0x22,%r14
	je L_471377
	cmpq $0x23,%r14
	je intInfBinary_2
	cmpq $0x25,%r14
	je intInfShift_7
	cmpq $0x26,%r14
	je intInfBinary_2
	cmpq $0x27,%r14
	je intInfUnary_10
	cmpq $0x29,%r14
	je intInfUnary_30
	cmpq $0x2A,%r14
	je intInfBinary_2
	cmpq $0x2B,%r14
	je intInfBinary_2
	cmpq $0x2D,%r14
	je intInfBinary_2
	cmpq $0x2E,%r14
	je intInfBinary_2
	cmpq $0x2F,%r14
	je L_471376
	cmpq $0x33,%r14
	je intInfBinary_25
	cmpq $0x36,%r14
	je L_471375
	cmpq $0x51,%r14
	je L_471374
	cmpq $0x67,%r14
	je L_471373
	cmpq $0x69,%r14
	je L_471372
	cmpq $0x6A,%r14
	je L_471371
	cmpq $0x6B,%r14
	je L_471370
	cmpq $0x6D,%r14
	je L_471369
	cmpq $0x6E,%r14
	je L_471368
	cmpq $0x6F,%r14
	je L_471367
	cmpq $0x71,%r14
	je L_471366
	cmpq $0x72,%r14
	je L_471365
	cmpq $0x73,%r14
	je L_471364
	cmpq $0x75,%r14
	je L_471363
	cmpq $0x76,%r14
	je L_471362
	cmpq $0x77,%r14
	je L_471361
	cmpq $0x79,%r14
	je L_471360
	cmpq $0x7A,%r14
	je L_471359
	cmpq $0x7B,%r14
	je L_471357
	cmpq $0x7D,%r14
	je L_471356
	cmpq $0x7E,%r14
	je L_471355
	cmpq $0x7F,%r14
	je L_471354
	cmpq $0x81,%r14
	je L_471353
	cmpq $0x82,%r14
	je L_471352
	cmpq $0x83,%r14
	je L_471351
	cmpq $0x85,%r14
	je L_471349
	cmpq $0x86,%r14
	je L_471348
	cmpq $0x87,%r14
	je L_471346
	cmpq $0x89,%r14
	je L_471344
L_224343:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_224344
L_224345:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x18,%rax
	ja L_471315
	jmp *jumpTable_688(,%rax,8)
.data
.p2align 0x4
jumpTable_688:
.quad L_471342,L_471341,L_471340,L_471339,L_471338,L_471337,L_471336,L_471335,L_471334,L_471333,L_471332,L_471331,L_471330,L_471329,L_471328,L_471327,L_471326,L_471325,L_471324,L_471323,L_471322,L_471321,L_471320,L_471318,L_471316
.text
.p2align 0x4
L_471315:
L_224344:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471316:
L_224567:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x30(%rbp)
	movzbq %r13b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x38(%rbp)
	testb %r13b,%r13b
	jnz L_471317
L_224568:
	movq $0x11,%r15
toBits_28:
	movq %r15,0x50(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_224569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471317:
L_224590:
	movq $0x9,%r15
	jmp toBits_28
.p2align 0x4
L_471318:
L_224537:
	movq 0x0(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movb 0x4(%r14),%r13b
	movb %r13b,0x2C(%rbp)
	movzbq %r13b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x38(%rbp)
	testb %r13b,%r13b
	jnz L_471319
L_224538:
	movq $0x11,%r15
toBits_26:
	movq %r15,0x50(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_224539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471319:
L_224566:
	movq $0x9,%r15
	jmp toBits_26
.p2align 0x4
L_471320:
L_224536:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x2,0x24(%rbp)
x_794:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	leaq L_224370(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_224347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471321:
L_224535:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x2,0x24(%rbp)
x_795:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	leaq L_224384(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_224372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471322:
L_224534:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471323:
L_224513:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	leaq L_224533(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_224514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471324:
L_224512:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x0,0x20(%rbp)
wordCompare_0:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	leaq L_224474(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x70,%rbp
	leaq (L_224464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471325:
L_224486:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	leaq L_224511(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_224487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471326:
L_224485:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x0,0x20(%rbp)
wordShift_3:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	leaq L_224408(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x60,%rbp
	leaq (L_224398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471327:
L_224463:
	movq 0x0(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movq 0x8(%r14),%r15
	jmp wordCompare_0
.p2align 0x4
L_471328:
L_224462:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471329:
L_224461:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_795
.p2align 0x4
L_471330:
L_224460:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471331:
L_224459:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp x_795
.p2align 0x4
L_471332:
L_224458:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471333:
L_224457:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471334:
L_224456:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471335:
L_224455:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471336:
L_224421:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movb 0x4(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	leaq L_224454(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_224422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471337:
L_224420:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x0,0x20(%rbp)
	jmp wordShift_3
.p2align 0x4
L_471338:
L_224419:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x0,0x20(%rbp)
	jmp wordShift_3
.p2align 0x4
L_471339:
L_224397:
	movq 0x0(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movq 0x8(%r14),%r15
	jmp wordShift_3
.p2align 0x4
L_471340:
L_224396:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471341:
L_224371:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_795
.p2align 0x4
L_471342:
L_224346:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x2,0x24(%rbp)
	jmp x_794
.p2align 0x4
L_471344:
L_224884:
	movq %r15,%r14
	shrq $0x10,%r14
	movb %r14b,0x28(%rbp)
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x29(%rbp)
	movzbq %r14b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x30(%rbp)
	testb %r14b,%r14b
	jnz L_471345
L_224885:
	movq $0x11,%r15
toBits_36:
	movq %r15,0x70(%rbp)
	movq $0x11,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_224886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471345:
L_224908:
	movq $0x9,%r15
	jmp toBits_36
.p2align 0x4
L_471346:
L_224883:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x2,0x2C(%rbp)
x_796:
	movb 0x28(%rbp),%r14b
	movzbq %r14b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x30(%rbp)
	testb %r14b,%r14b
	jnz L_471347
L_224753:
	movq $0x11,%r15
toBits_30:
	movq %r15,0x48(%rbp)
	leaq L_224772(%rip),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_224754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471347:
L_224776:
	movq $0x9,%r15
	jmp toBits_30
.p2align 0x4
L_471348:
L_224882:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471349:
L_224881:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
realCompare_0:
	movb 0x28(%rbp),%r14b
	movzbq %r14b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x30(%rbp)
	testb %r14b,%r14b
	jnz L_471350
L_224791:
	movq $0x11,%r15
toBits_32:
	movq %r15,0x78(%rbp)
	leaq L_224804(%rip),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_224792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471350:
L_224809:
	movq $0x9,%r15
	jmp toBits_32
.p2align 0x4
L_471351:
L_224880:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471352:
L_224879:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x3,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471353:
L_224878:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x3,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471354:
L_224877:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x2,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471355:
L_224876:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	jmp realCompare_0
.p2align 0x4
L_471356:
L_224875:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	jmp realCompare_0
.p2align 0x4
L_471357:
L_224810:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movzbq %r14b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x30(%rbp)
	testb %r14b,%r14b
	jnz L_471358
L_224811:
	movq $0x11,%r15
toBits_34:
	movq %r15,0xA0(%rbp)
	movq $0x11,0x98(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_224812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471358:
L_224874:
	movq $0x9,%r15
	jmp toBits_34
.p2align 0x4
L_471359:
L_224790:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	jmp realCompare_0
.p2align 0x4
L_471360:
L_224789:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x2,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471361:
L_224788:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x2,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471362:
L_224787:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471363:
L_224786:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471364:
L_224785:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471365:
L_224784:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471366:
L_224783:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471367:
L_224782:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471368:
L_224781:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471369:
L_224780:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471370:
L_224779:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x2,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471371:
L_224778:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471372:
L_224777:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471373:
L_224752:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x28(%rbp)
	movl $0x1,0x2C(%rbp)
	jmp x_796
.p2align 0x4
L_471374:
L_224746:
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_471375:
L_224721:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_224722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
intInfBinary_25:
intInfBinary_2:
	leaq L_224604(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
L_471376:
L_224683:
	movq 0x40(%rbp),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_224684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
intInfUnary_30:
intInfUnary_10:
	leaq L_224670(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
intInfShift_7:
intInfShift_2:
	leaq L_224625(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_224614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
L_471377:
L_224644:
	movq 0x40(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_224645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
L_471378:
L_224633:
	movq 0x40(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_224634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
.long 0x25
L_224444:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36C9
L_224569:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movb 0x30(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471380
L_224570:
	movq $0x11,%r15
toBits_29:
	movq %r15,0x58(%rbp)
	leaq L_224588(%rip),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_224571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471380:
L_224589:
	movq $0x9,%r15
	jmp toBits_29
.p2align 0x4
.long 0x36C6
L_224539:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movb 0x2C(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471381
L_224540:
	movq $0x11,%r15
toBits_27:
	movq %r15,0x58(%rbp)
	leaq L_224564(%rip),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_224541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471381:
L_224565:
	movq $0x9,%r15
	jmp toBits_27
.p2align 0x4
.long 0x36B9
L_224347:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224348
L_224368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224369
.p2align 0x4
.long 0x36BB
L_224369:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224348:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_471386
L_224349:
	movl 0x40(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471385
	cmpl $0x10,%r15d
	je L_471384
	cmpl $0x20,%r15d
	je L_471383
	cmpl $0x40,%r15d
	je L_471382
	jmp L_224344
.p2align 0x4
L_471382:
L_224362:
	movb $0x0,0x20(%rbp)
L_224351:
	movq $0x3987,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	leaq L_224359(%rip),%r15
	movq %r15,0x10(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_224352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_471383:
L_224361:
	movb $0x1,0x20(%rbp)
	jmp L_224351
.p2align 0x4
L_471384:
L_224360:
	movb $0x2,0x20(%rbp)
	jmp L_224351
.p2align 0x4
L_471385:
L_224350:
	movb $0x3,0x20(%rbp)
	jmp L_224351
.p2align 0x4
L_471386:
L_224363:
	movl 0x40(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471390
	cmpl $0x10,%r15d
	je L_471389
	cmpl $0x20,%r15d
	je L_471388
	cmpl $0x40,%r15d
	je L_471387
	jmp L_224344
.p2align 0x4
L_471387:
L_224367:
	movb $0x7,0x20(%rbp)
	jmp L_224351
.p2align 0x4
L_471388:
L_224366:
	movb $0x8,0x20(%rbp)
	jmp L_224351
.p2align 0x4
L_471389:
L_224365:
	movb $0x9,0x20(%rbp)
	jmp L_224351
.p2align 0x4
L_471390:
L_224364:
	movb $0xA,0x20(%rbp)
	jmp L_224351
.p2align 0x4
.long 0x25
L_224370:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x1149
L_224372:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224373
L_224394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_224395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224395
.p2align 0x4
.long 0x114A
L_224395:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_224373:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_471396
L_224374:
	movl 0x38(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471395
	cmpl $0x10,%r15d
	je L_471394
	cmpl $0x20,%r15d
	je L_471393
	cmpl $0x40,%r15d
	je L_471392
	jmp L_224344
.p2align 0x4
L_471392:
L_224388:
	movb $0x0,0x20(%rbp)
L_224376:
	movq $0x3987,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	leaq L_224385(%rip),%r15
	movq %r15,0x10(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_471393:
L_224387:
	movb $0x1,0x20(%rbp)
	jmp L_224376
.p2align 0x4
L_471394:
L_224386:
	movb $0x2,0x20(%rbp)
	jmp L_224376
.p2align 0x4
L_471395:
L_224375:
	movb $0x3,0x20(%rbp)
	jmp L_224376
.p2align 0x4
L_471396:
L_224389:
	movl 0x38(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471400
	cmpl $0x10,%r15d
	je L_471399
	cmpl $0x20,%r15d
	je L_471398
	cmpl $0x40,%r15d
	je L_471397
	jmp L_224344
.p2align 0x4
L_471397:
L_224393:
	movb $0x7,0x20(%rbp)
	jmp L_224376
.p2align 0x4
L_471398:
L_224392:
	movb $0x8,0x20(%rbp)
	jmp L_224376
.p2align 0x4
L_471399:
L_224391:
	movb $0x9,0x20(%rbp)
	jmp L_224376
.p2align 0x4
L_471400:
L_224390:
	movb $0xA,0x20(%rbp)
	jmp L_224376
.p2align 0x4
.long 0x25
L_224384:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36BE
L_224514:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpl $0x8,%r15d
	je L_471406
	cmpl $0x10,%r15d
	je L_471405
	cmpl $0x20,%r15d
	je L_471404
	cmpl $0x40,%r15d
	je L_471402
	jmp L_224344
.p2align 0x4
L_471402:
L_224532:
	movb $0x0,0x29(%rbp)
L_224516:
	movb 0x28(%rbp),%r14b
	movzbq %r14b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x40(%rbp)
	testb %r14b,%r14b
	jnz L_471403
L_224517:
	movq $0x11,%r15
toBits_24:
	leaq L_224444(%rip),%r14
	movq %r14,0x10(%rbp)
	movq $0x11,0x50(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471403:
L_224529:
	movq $0x9,%r15
	jmp toBits_24
.p2align 0x4
L_471404:
L_224531:
	movb $0x1,0x29(%rbp)
	jmp L_224516
.p2align 0x4
L_471405:
L_224530:
	movb $0x2,0x29(%rbp)
	jmp L_224516
.p2align 0x4
L_471406:
L_224515:
	movb $0x3,0x29(%rbp)
	jmp L_224516
.p2align 0x4
.long 0x25
L_224533:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36C2
L_224464:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224465
L_224483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_224484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224484
.p2align 0x4
.long 0x36C4
L_224484:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_224465:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_471411
L_224466:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471410
	cmpl $0x10,%r15d
	je L_471409
	cmpl $0x20,%r15d
	je L_471408
	cmpl $0x40,%r15d
	je L_471407
	jmp L_224344
.p2align 0x4
L_471407:
L_224477:
	movb $0x0,0x20(%rbp)
L_224468:
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movl $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_471408:
L_224476:
	movb $0x1,0x20(%rbp)
	jmp L_224468
.p2align 0x4
L_471409:
L_224475:
	movb $0x2,0x20(%rbp)
	jmp L_224468
.p2align 0x4
L_471410:
L_224467:
	movb $0x3,0x20(%rbp)
	jmp L_224468
.p2align 0x4
L_471411:
L_224478:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471415
	cmpl $0x10,%r15d
	je L_471414
	cmpl $0x20,%r15d
	je L_471413
	cmpl $0x40,%r15d
	je L_471412
	jmp L_224344
.p2align 0x4
L_471412:
L_224482:
	movb $0x7,0x20(%rbp)
	jmp L_224468
.p2align 0x4
L_471413:
L_224481:
	movb $0x8,0x20(%rbp)
	jmp L_224468
.p2align 0x4
L_471414:
L_224480:
	movb $0x9,0x20(%rbp)
	jmp L_224468
.p2align 0x4
L_471415:
L_224479:
	movb $0xA,0x20(%rbp)
	jmp L_224468
.p2align 0x4
.long 0x25
L_224474:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36B9
L_224487:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224488
L_224509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_224510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224510
.p2align 0x4
.long 0xB64
L_224510:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_224488:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_471421
L_224489:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471420
	cmpl $0x10,%r15d
	je L_471419
	cmpl $0x20,%r15d
	je L_471418
	cmpl $0x40,%r15d
	je L_471417
	jmp L_224344
.p2align 0x4
L_471417:
L_224503:
	movb $0x0,0x20(%rbp)
L_224491:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	leaq L_224500(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471418:
L_224502:
	movb $0x1,0x20(%rbp)
	jmp L_224491
.p2align 0x4
L_471419:
L_224501:
	movb $0x2,0x20(%rbp)
	jmp L_224491
.p2align 0x4
L_471420:
L_224490:
	movb $0x3,0x20(%rbp)
	jmp L_224491
.p2align 0x4
L_471421:
L_224504:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471425
	cmpl $0x10,%r15d
	je L_471424
	cmpl $0x20,%r15d
	je L_471423
	cmpl $0x40,%r15d
	je L_471422
	jmp L_224344
.p2align 0x4
L_471422:
L_224508:
	movb $0x7,0x20(%rbp)
	jmp L_224491
.p2align 0x4
L_471423:
L_224507:
	movb $0x8,0x20(%rbp)
	jmp L_224491
.p2align 0x4
L_471424:
L_224506:
	movb $0x9,0x20(%rbp)
	jmp L_224491
.p2align 0x4
L_471425:
L_224505:
	movb $0xA,0x20(%rbp)
	jmp L_224491
.p2align 0x4
.long 0x25
L_224511:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x2689
L_224398:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224399
L_224417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_224418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224418
.p2align 0x4
.long 0x24C9
L_224418:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_224399:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_471431
L_224400:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471430
	cmpl $0x10,%r15d
	je L_471429
	cmpl $0x20,%r15d
	je L_471428
	cmpl $0x40,%r15d
	je L_471427
	jmp L_224344
.p2align 0x4
L_471427:
L_224411:
	movb $0x0,0x20(%rbp)
L_224402:
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movl $0x2,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_224403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_471428:
L_224410:
	movb $0x1,0x20(%rbp)
	jmp L_224402
.p2align 0x4
L_471429:
L_224409:
	movb $0x2,0x20(%rbp)
	jmp L_224402
.p2align 0x4
L_471430:
L_224401:
	movb $0x3,0x20(%rbp)
	jmp L_224402
.p2align 0x4
L_471431:
L_224412:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471435
	cmpl $0x10,%r15d
	je L_471434
	cmpl $0x20,%r15d
	je L_471433
	cmpl $0x40,%r15d
	je L_471432
	jmp L_224344
.p2align 0x4
L_471432:
L_224416:
	movb $0x7,0x20(%rbp)
	jmp L_224402
.p2align 0x4
L_471433:
L_224415:
	movb $0x8,0x20(%rbp)
	jmp L_224402
.p2align 0x4
L_471434:
L_224414:
	movb $0x9,0x20(%rbp)
	jmp L_224402
.p2align 0x4
L_471435:
L_224413:
	movb $0xA,0x20(%rbp)
	jmp L_224402
.p2align 0x4
.long 0x25
L_224408:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36BE
L_224422:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl 0x28(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_471442
L_224423:
	cmpl $0x8,%r15d
	je L_471441
	cmpl $0x10,%r15d
	je L_471440
	cmpl $0x20,%r15d
	je L_471439
	cmpl $0x40,%r15d
	je L_471437
	jmp L_224344
.p2align 0x4
L_471437:
L_224448:
	movb $0x0,0x28(%rbp)
L_224425:
	movb 0x2C(%rbp),%r14b
	movzbq %r14b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x40(%rbp)
	testb %r14b,%r14b
	jnz L_471438
L_224426:
	movq $0x11,%r15
toBits_22:
	leaq L_224444(%rip),%r14
	movq %r14,0x10(%rbp)
	movq $0x11,0x50(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471438:
L_224445:
	movq $0x9,%r15
	jmp toBits_22
.p2align 0x4
L_471439:
L_224447:
	movb $0x1,0x28(%rbp)
	jmp L_224425
.p2align 0x4
L_471440:
L_224446:
	movb $0x2,0x28(%rbp)
	jmp L_224425
.p2align 0x4
L_471441:
L_224424:
	movb $0x3,0x28(%rbp)
	jmp L_224425
.p2align 0x4
L_471442:
L_224449:
	cmpl $0x8,%r15d
	je L_471446
	cmpl $0x10,%r15d
	je L_471445
	cmpl $0x20,%r15d
	je L_471444
	cmpl $0x40,%r15d
	je L_471443
	jmp L_224344
.p2align 0x4
L_471443:
L_224453:
	movb $0x7,0x28(%rbp)
	jmp L_224425
.p2align 0x4
L_471444:
L_224452:
	movb $0x8,0x28(%rbp)
	jmp L_224425
.p2align 0x4
L_471445:
L_224451:
	movb $0x9,0x28(%rbp)
	jmp L_224425
.p2align 0x4
L_471446:
L_224450:
	movb $0xA,0x28(%rbp)
	jmp L_224425
.p2align 0x4
.long 0x25
L_224454:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36F0
L_224886:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x38(%rbp)
	movb 0x29(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471447
L_224887:
	movq $0x11,%r15
toBits_37:
	movq %r15,0x70(%rbp)
	leaq L_224906(%rip),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_224888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471447:
L_224907:
	movq $0x9,%r15
	jmp toBits_37
.p2align 0x4
.long 0x36E5
L_224754:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224755
L_224774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_224775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224775
.p2align 0x4
.long 0x4A2
L_224775:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_224755:
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471448
L_224756:
	movq $0x11,%r15
toBits_31:
	movq %r15,0x58(%rbp)
	movq $0x11,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_224757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471448:
L_224773:
	movq $0x9,%r15
	jmp toBits_31
.p2align 0x4
.long 0x25
L_224772:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36D8
L_224792:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224793
L_224807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_224808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224808
.p2align 0x4
.long 0x36E8
L_224808:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_224793:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x3989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	movl $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x25
L_224804:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36E9
L_224812:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224813
L_224872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_224873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224873
.p2align 0x4
.long 0x36EF
L_224873:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_224813:
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471451
L_224814:
	movq $0x11,%r15
toBits_35:
	movq %r15,0xA0(%rbp)
	movq $0x11,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_224815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471451:
L_224871:
	movq $0x9,%r15
	jmp toBits_35
.p2align 0x4
.long 0x474
L_224747:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_224748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x4B5
L_224722:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpl $0x8,%r15d
	je objptr_10
	cmpl $0x10,%r15d
	je L_471458
	cmpl $0x20,%r15d
	je L_471457
	cmpl $0x40,%r15d
	je L_471453
	jmp L_224344
.p2align 0x4
L_471453:
L_224745:
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
objptr_10:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_224724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224724
.p2align 0x4
.long 0x509
L_224724:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2524:
	cmpq $0x1,%r15
	jnl L_471454
L_224742:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2524
.p2align 0x4
L_471454:
L_224725:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224726
L_224740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_224741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224741
.p2align 0x4
.long 0x601
L_224741:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_224726:
	movq 0x30(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_471455
L_224727:
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_224728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_471455:
L_224737:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_471457:
L_224744:
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp objptr_10
.p2align 0x4
L_471458:
L_224743:
	movq 0x40(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp objptr_10
.p2align 0x4
.long 0x9FB
L_224592:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
.long 0x25
L_224604:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36D9
L_224684:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224685
L_224718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_224719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224719
.p2align 0x4
.long 0x36E4
L_224719:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_224685:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_471459
L_224686:
	movq %r14,0x88(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (word_72+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_471459:
L_224715:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x9FB
L_224659:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_471461
L_224660:
	movq %r14,0x58(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (word_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_471461:
L_224675:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x25
L_224670:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36D0
L_224614:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_471462
L_224615:
	movq %r14,0x68(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (word_70+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_471462:
L_224630:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x25
L_224625:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36D7
L_224645:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_224646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
.long 0x36D3
L_224634:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_224635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
.long 0x36CA
L_224571:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x25
L_224588:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36C7
L_224541:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x25
L_224564:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x4A1
L_224352:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movzbq 0x20(%rbp),%r15
	shlq $0x3,%r15
	orq $0x3,%r15
	movq %r15,0x48(%rbp)
	leaq L_224358(%rip),%r15
	movq %r15,0x10(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_224353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x25
L_224359:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36BC
L_224377:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	leaq L_224384(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x10340)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x25
L_224385:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36BF
L_224518:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471463
L_224519:
	movq $0x11,%r15
toBits_25:
	movq %r15,0x60(%rbp)
	leaq L_224527(%rip),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_224520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471463:
L_224528:
	movq $0x9,%r15
	jmp toBits_25
.p2align 0x4
.long 0x36BC
L_224469:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb 0x20(%rbp),%r15b
	movzbq %r15b,%r14
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x70(%rbp)
	movl $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x9FB
L_224492:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224493
L_224498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224499
.p2align 0x4
.long 0x36C5
L_224499:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224493:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471467
	cmpl $0x10,%r15d
	je L_471466
	cmpl $0x20,%r15d
	je L_471465
	cmpl $0x40,%r15d
	je L_471464
	jmp L_224344
.p2align 0x4
L_471464:
L_224497:
	movq 0x28(%rbp),%r14
	movq 0x40(%rbp),%r15
	movb 0x20(%rbp),%r10b
	movb %r10b,0x21(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x0,0x20(%rbp)
coerce_0:
	movq $0x493,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x28(%rbp)
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq $0x3985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	leaq L_224438(%rip),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_224433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_471465:
L_224496:
	movq 0x28(%rbp),%r14
	movq 0x40(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x1,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471466:
L_224495:
	movq 0x28(%rbp),%r14
	movq 0x40(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x2,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471467:
L_224494:
	movq 0x28(%rbp),%r14
	movq 0x40(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x3,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
.long 0x25
L_224500:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36BD
L_224403:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movzbq 0x48(%rbp),%r15
	movzbq 0x20(%rbp),%r14
	shlq $0x8,%r14
	orq %r14,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x40(%rbp)
	movl $0x2,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_224404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x36BF
L_224427:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movb 0x2C(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471469
L_224428:
	movq $0x11,%r15
toBits_23:
	movq %r15,0x60(%rbp)
	leaq L_224442(%rip),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_224429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471469:
L_224443:
	movq $0x9,%r15
	jmp toBits_23
.p2align 0x4
.long 0x36F1
L_224888:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_224889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x25
L_224906:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x1F14
L_224757:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x36D8
L_224794:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471470
L_224795:
	movq $0x11,%r15
toBits_33:
	movq %r15,0x78(%rbp)
	movq $0x11,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_224796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471470:
L_224806:
	movq $0x9,%r15
	jmp toBits_33
.p2align 0x4
.long 0x36EA
L_224815:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_224816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x45A
L_224748:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224749
L_224750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_224751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224751
.p2align 0x4
.long 0x509
L_224751:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_224749:
	movq $0x1159,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movw $0x0,%r9w
	movzwl %r9w,%ebx
	movl %ebx,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r11)
	movl $0x1,%ebx
	movq (globalObjptr+0xBB8)(%rip),%r10
	movl $0x1,(localWord32+0x4)(%rip)
	movl $0x1,%ecx
	xorq %r15,%r15
	movq 0x20(%rbp),%r14
	movq (globalObjptr+0xDAC0)(%rip),%r13
L_224355:
	movq $0x25F9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movl %ebx,0xC(%r9)
	movl %ebx,0x10(%r9)
	movl %ecx,0x14(%r9)
	movl (localWord32+0x4)(%rip),%r15d
	movl %r15d,0x18(%r9)
	movl %ebx,0x1C(%r9)
	movq %r14,0x28(%r9)
	movq %r11,0x30(%r9)
	movq %r10,0x38(%r9)
	movq %r13,0x40(%r9)
	addq $0x50,%r12
	movl $0x0,0x8(%r9)
	movb $0x1,%r15b
	movzbl %r15b,%r14d
	movb $0x1,%r15b
	movzbl %r15b,%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r9)
	movl $0x0,0x24(%r9)
	movq %r9,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51B
L_224728:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224729
L_224735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_224736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224736
.p2align 0x4
.long 0x509
L_224736:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_224729:
	movq $0x3985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movl $0x1,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x474
L_224738:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x36CD
L_224593:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_471473
L_224594:
	movq %r14,0x60(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (word_69+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_471473:
L_224609:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x36DA
word_72:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224687
L_224713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_224714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224714
.p2align 0x4
.long 0x36E3
L_224714:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_224687:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	movl $0x3,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_224688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x474
L_224716:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x986
word_71:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224661
L_224673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224674
.p2align 0x4
.long 0x2578
L_224674:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224661:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movl $0x2,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x474
L_224676:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2AB2
word_70:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224616
L_224628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_224629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224629
.p2align 0x4
.long 0x257F
L_224629:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_224616:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x58(%rbp)
	movl $0x3,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_224617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x474
L_224631:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x36D8
L_224646:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224647
L_224653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_224654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224654
.p2align 0x4
.long 0x36C3
L_224654:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_224647:
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movl $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x36D4
L_224635:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224636
L_224642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_224643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224643
.p2align 0x4
.long 0x36D6
L_224643:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_224636:
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	movl $0x2,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_224637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x36CA
L_224572:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224573
L_224586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224587
.p2align 0x4
.long 0x36CC
L_224587:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224573:
	movl 0x20(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_471480
	cmpl $0x40,%r15d
	je L_471479
	jmp L_224344
.p2align 0x4
L_471479:
L_224585:
	movb $0x4,0x20(%rbp)
L_224575:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	leaq L_224584(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471480:
L_224574:
	movb $0x5,0x20(%rbp)
	jmp L_224575
.p2align 0x4
.long 0x36C7
L_224542:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224543
L_224562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224563
.p2align 0x4
.long 0xD1F
L_224563:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224543:
	movl 0x20(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_471483
	cmpl $0x40,%r15d
	je L_471482
	jmp L_224344
.p2align 0x4
L_471482:
L_224561:
	movb $0x4,0x20(%rbp)
L_224545:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	leaq L_224560(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_224546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471483:
L_224544:
	movb $0x5,0x20(%rbp)
	jmp L_224545
.p2align 0x4
.long 0x36BA
L_224353:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224354
L_224356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_224357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224357
.p2align 0x4
.long 0xB64
L_224357:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_224354:
	movzbw 0x20(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x38(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x28(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x25
L_224358:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x927
L_224378:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movzbq 0x20(%rbp),%r15
	shlq $0x3,%r15
	orq $0x3,%r15
	movq %r15,0x70(%rbp)
	leaq L_224383(%rip),%r15
	movq %r15,0x10(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x36C0
L_224520:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_224521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x25
L_224527:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36C2
L_224470:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224471
L_224472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_224473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224473
.p2align 0x4
.long 0x36C3
L_224473:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_224471:
	movzbw 0x49(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x60(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x28(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x463
L_224433:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movzbq 0x21(%rbp),%r15
	shlq $0x3,%r15
	orq $0x2,%r15
	movq %r15,0x40(%rbp)
	movl $0x1,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_224434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x25
L_224438:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x8FA
L_224404:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224405
L_224406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_224407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224407
.p2align 0x4
.long 0xB64
L_224407:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_224405:
	movzbw 0x20(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x28(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x30(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x36C0
L_224429:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_224430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x25
L_224442:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36F1
L_224889:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpl $0x20,%r15d
	je L_471490
	cmpl $0x40,%r15d
	je L_471488
	jmp L_224344
.p2align 0x4
L_471488:
L_224905:
	movb $0x4,0x29(%rbp)
L_224891:
	movb 0x28(%rbp),%r14b
	movzbq %r14b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x40(%rbp)
	testb %r14b,%r14b
	jnz L_471489
L_224892:
	movq $0x11,%r15
toBits_38:
	leaq L_224444(%rip),%r14
	movq %r14,0x10(%rbp)
	movq $0x11,0x50(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471489:
L_224904:
	movq $0x9,%r15
	jmp toBits_38
.p2align 0x4
L_471490:
L_224890:
	movb $0x5,0x29(%rbp)
	jmp L_224891
.p2align 0x4
.long 0x1F14
L_224758:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224759
L_224770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224771
.p2align 0x4
.long 0x2575
L_224771:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224759:
	movl 0x20(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_471492
	cmpl $0x40,%r15d
	je L_471491
	jmp L_224344
.p2align 0x4
L_471491:
L_224769:
	movb $0x4,0x20(%rbp)
L_224761:
	movq $0x3987,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	leaq L_224768(%rip),%r15
	movq %r15,0x10(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_471492:
L_224760:
	movb $0x5,0x20(%rbp)
	jmp L_224761
.p2align 0x4
.long 0x36E6
L_224796:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_224797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x36EA
L_224816:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x20,%r15d
	je L_471496
	cmpl $0x40,%r15d
	je L_471494
	jmp L_224344
.p2align 0x4
L_471494:
L_224870:
	movb $0x4,0x20(%rbp)
L_224818:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_471495
L_224819:
	movq %r14,0xA0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (word_73+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_471495:
L_224867:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_471496:
L_224817:
	movb $0x5,0x20(%rbp)
	jmp L_224818
.p2align 0x4
.long 0x474
L_224730:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movb $0x6,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0x30(%rbp)
	movl $0x1,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_224731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x474
L_224739:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224344
.p2align 0x4
.long 0x19B6
word_69:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224595
L_224607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224608
.p2align 0x4
.long 0x2373
L_224608:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224595:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x50(%rbp)
	movl $0x3,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x474
L_224610:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x36DB
L_224688:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_224689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x474
L_224717:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224344
.p2align 0x4
.long 0x36CB
L_224662:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x474
L_224677:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224344
.p2align 0x4
.long 0x36D1
L_224617:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_224618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x474
L_224632:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224344
.p2align 0x4
.long 0x36BC
L_224648:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movb $0x6,%r15b
	movzbq %r15b,%r14
	movb $0x6,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x70(%rbp)
	movl $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x36D5
L_224637:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movb $0x6,%r15b
	movzbq %r15b,%r14
	movb $0x6,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x78(%rbp)
	movl $0x2,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_224638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x36CB
L_224576:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224577
L_224582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224583
.p2align 0x4
.long 0x246C
L_224583:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224577:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471501
	cmpl $0x10,%r15d
	je L_471500
	cmpl $0x20,%r15d
	je L_471499
	cmpl $0x40,%r15d
	je L_471498
	jmp L_224344
.p2align 0x4
L_471498:
L_224581:
	movq 0x28(%rbp),%r14
	movq 0x30(%rbp),%r15
	movb 0x20(%rbp),%r10b
	movb %r10b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x0,0x20(%rbp)
	jmp coerce_0
.p2align 0x4
L_471499:
L_224580:
	movq 0x28(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x1,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471500:
L_224579:
	movq 0x28(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x2,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471501:
L_224578:
	movq 0x28(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x3,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
.long 0x25
L_224584:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36C8
L_224546:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224547
L_224558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224559
.p2align 0x4
.long 0x2466
L_224559:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224547:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_471507
L_224548:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471506
	cmpl $0x10,%r15d
	je L_471505
	cmpl $0x20,%r15d
	je L_471504
	cmpl $0x40,%r15d
	je L_471503
	jmp L_224344
.p2align 0x4
L_471503:
L_224552:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r15
	movb 0x20(%rbp),%r10b
	movb %r10b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x0,0x20(%rbp)
	jmp coerce_0
.p2align 0x4
L_471504:
L_224551:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x1,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471505:
L_224550:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x2,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471506:
L_224549:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x3,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471507:
L_224553:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_471511
	cmpl $0x10,%r15d
	je L_471510
	cmpl $0x20,%r15d
	je L_471509
	cmpl $0x40,%r15d
	je L_471508
	jmp L_224344
.p2align 0x4
L_471508:
L_224557:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r15
	movb 0x20(%rbp),%r10b
	movb %r10b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x7,0x20(%rbp)
	jmp coerce_0
.p2align 0x4
L_471509:
L_224556:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x8,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471510:
L_224555:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0x9,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
L_471511:
L_224554:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r10
	movb 0x20(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x38(%rbp),%r13
	movb $0xA,0x20(%rbp)
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
.long 0x25
L_224560:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x1CB4
L_224379:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224380
L_224381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_224382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224382
.p2align 0x4
.long 0x299D
L_224382:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_224380:
	movzbw 0x49(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x60(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x28(%rbp),%r14
	movq 0x30(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x25
L_224383:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36C0
L_224521:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224522
L_224525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224526
.p2align 0x4
.long 0x36C1
L_224526:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224522:
	movl 0x20(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_471515
	cmpl $0x40,%r15d
	je L_471514
	jmp L_224344
.p2align 0x4
L_471514:
L_224524:
	movb $0x4,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x40(%rbp),%r15
	movb 0x29(%rbp),%r10b
	movb %r10b,0x21(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x38(%rbp),%r13
	jmp coerce_0
.p2align 0x4
L_471515:
L_224523:
	movb $0x5,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x40(%rbp),%r10
	movb 0x29(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x38(%rbp),%r13
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
.long 0x8FA
L_224434:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224435
L_224436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_224437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224437
.p2align 0x4
.long 0xB64
L_224437:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_224435:
	movzbw 0x20(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x28(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x30(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x36C0
L_224430:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224431
L_224440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224441
.p2align 0x4
.long 0x36C1
L_224441:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224431:
	movl 0x20(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_471519
	cmpl $0x40,%r15d
	je L_471518
	jmp L_224344
.p2align 0x4
L_471518:
L_224439:
	movb $0x4,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x40(%rbp),%r15
	movb 0x28(%rbp),%r10b
	movb %r10b,0x21(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x38(%rbp),%r13
	jmp coerce_0
.p2align 0x4
L_471519:
L_224432:
	movb $0x5,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x40(%rbp),%r10
	movb 0x28(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x38(%rbp),%r13
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
.long 0x36F2
L_224893:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_471521
L_224894:
	movq $0x11,%r15
toBits_39:
	movq %r15,0x60(%rbp)
	leaq L_224902(%rip),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_224895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_471521:
L_224903:
	movq $0x9,%r15
	jmp toBits_39
.p2align 0x4
.long 0xAAA
L_224762:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movzbq 0x20(%rbp),%r15
	shlq $0x3,%r15
	orq $0x3,%r15
	movq %r15,0x50(%rbp)
	leaq L_224767(%rip),%r15
	movq %r15,0x10(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x25
L_224768:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36E6
L_224797:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x20,%r15d
	je L_471523
	cmpl $0x40,%r15d
	je L_471522
	jmp L_224344
.p2align 0x4
L_471522:
L_224805:
	movb $0x4,%dl
L_224799:
	movzbq %dl,%r15
	movzbq %dl,%r14
	shlq $0x8,%r14
	orq %r14,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x70(%rbp)
	movl $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_224800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_471523:
L_224798:
	movb $0x5,%dl
	jmp L_224799
.p2align 0x4
.long 0x36EB
word_73:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224820
L_224865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_224866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224866
.p2align 0x4
.long 0x36EE
L_224866:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_224820:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movl $0x2,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x474
L_224868:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x45A
L_224731:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224732
L_224733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_224734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224734
.p2align 0x4
.long 0x509
L_224734:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_224732:
	movq $0x1159,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movw $0x0,%r9w
	movzwl %r9w,%ebx
	movl %ebx,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r11)
	xorl %ebx,%ebx
	movq (globalObjptr+0xBB8)(%rip),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r15,%r15
	movq 0x20(%rbp),%r14
	movq (globalObjptr+0xDA18)(%rip),%r13
	jmp L_224355
.p2align 0x4
.long 0x36CB
L_224596:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1600
.p2align 0x4
.long 0x474
L_224611:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224344
.p2align 0x4
.long 0x36DC
L_224689:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movb 0x80(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	movb $0x8,%r14b
	movzbq %r14b,%r13
	movzbq %r15b,%r14
	shlq $0x8,%r14
	orq %r14,%r13
	movb $0x6,%r15b
	movzbq %r15b,%r14
	shlq $0x10,%r14
	orq %r14,%r13
	shlq $0x3,%r13
	orq $0x7,%r13
	movq %r13,0x80(%rbp)
	movl $0x3,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_224690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x7BA
L_224663:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movb 0x50(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	movzbq %r15b,%r14
	movb $0x6,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x50(%rbp)
	movl $0x2,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x36D2
L_224618:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movb 0x58(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	movzbq 0x48(%rbp),%r14
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	movb $0x6,%r15b
	movzbq %r15b,%r13
	shlq $0x10,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x7,%r14
	movq %r14,0x50(%rbp)
	movl $0x3,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x36D8
L_224649:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224650
L_224651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_224652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224652
.p2align 0x4
.long 0x36C3
L_224652:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_224650:
	movzbw 0x49(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x60(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x20(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x36D4
L_224638:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224639
L_224640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_224641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224641
.p2align 0x4
.long 0x36D6
L_224641:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_224639:
	movq $0x1159,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movzwl (globalWord16+0x4)(%rip),%ebx
	movl %ebx,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r10
	movq %r10,0x8(%r11)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r10
	movq %r10,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r10,0x0(%r14)
	xorl %ebx,%ebx
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r15,%r15
	movq 0x20(%rbp),%r9
	movq 0x8(%rbp),%r13
	movq %r14,%r10
	movq %r9,%r14
	jmp L_224355
.p2align 0x4
.long 0x36F3
L_224895:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_224896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x25
L_224902:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36C7
L_224763:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224764
L_224765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224766
.p2align 0x4
.long 0x246C
L_224766:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224764:
	movzbw 0x20(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x40(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x30(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x25
L_224767:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224344
.p2align 0x4
.long 0x36E6
L_224800:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224801
L_224802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_224803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224803
.p2align 0x4
.long 0x36E7
L_224803:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_224801:
	movzbw 0x49(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x60(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x30(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x36EB
L_224821:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_224344
	cmpq $0x2,%r13
	je L_471537
L_224822:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2080,%r15
	je L_471535
	cmpq $0x2081,%r15
	je L_471533
	cmpq $0x2082,%r15
	je L_471531
L_224823:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_471530
L_224824:
	movq 0x0(%r11),%r14
	movq %r14,0x98(%rbp)
	leaq L_224837(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x98,%rbp
	leaq (L_224825+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471530:
L_224838:
	movq %r15,0x98(%rbp)
	leaq L_224837(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_471531:
L_224857:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_471532
L_224858:
	movq 0x0(%r11),%r14
	movq %r14,0x98(%rbp)
	leaq L_224837(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x98,%rbp
	leaq (L_224859+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471532:
L_224860:
	movq %r15,0x98(%rbp)
	leaq L_224837(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_471533:
L_224847:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_471534
L_224848:
	movq 0x0(%r11),%r14
	movq %r14,0x98(%rbp)
	leaq L_224837(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x98,%rbp
	leaq (L_224849+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471534:
L_224854:
	movq %r15,0x98(%rbp)
	leaq L_224837(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_471535:
L_224841:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_471536
L_224842:
	movq 0x0(%r11),%r14
	movq %r14,0x98(%rbp)
	leaq L_224837(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x98,%rbp
	leaq (L_224843+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471536:
L_224844:
	movq %r15,0x98(%rbp)
	leaq L_224837(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_471537:
L_224864:
	shrq $0x2,%r14
	movb %r14b,%dl
L_224829:
	movzbq %dl,%r15
	movzbq 0x20(%rbp),%r14
	shlq $0x8,%r14
	orq %r14,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x50(%rbp)
	leaq L_224444(%rip),%r15
	movq %r15,0x10(%rbp)
	movl $0x2,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x474
L_224869:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224344
.p2align 0x4
.long 0x7BA
L_224597:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movb 0x50(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	movb $0x6,%r14b
	movzbq %r14b,%r13
	movzbq %r15b,%r14
	shlq $0x8,%r14
	orq %r14,%r13
	movb $0x6,%r15b
	movzbq %r15b,%r14
	shlq $0x10,%r14
	orq %r14,%r13
	shlq $0x3,%r13
	orq $0x7,%r13
	movq %r13,0x50(%rbp)
	movl $0x3,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_224598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x36DC
L_224690:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224691
L_224711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_224712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224712
.p2align 0x4
.long 0x36E2
L_224712:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_224691:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movzwl (globalWord16+0xA)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	cmpb $0x6,0x0(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x40(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	addq $0x78,%rbp
	leaq (L_224692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x7BA
L_224664:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224665
L_224671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224672
.p2align 0x4
.long 0x7BC
L_224672:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224665:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movzwl (globalWord16+0xA)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	cmpb $0x6,0x0(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_224666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
.long 0x7BA
L_224619:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224620
L_224626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224627
.p2align 0x4
.long 0x7BC
L_224627:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224620:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movzwl (globalWord16+0xA)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	cmpb $0x6,0x0(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_224621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
.long 0x36F3
L_224896:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224897
L_224900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224901
.p2align 0x4
.long 0x36F4
L_224901:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224897:
	movl 0x20(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_471543
	cmpl $0x40,%r15d
	je L_471542
	jmp L_224344
.p2align 0x4
L_471542:
L_224899:
	movb $0x4,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x40(%rbp),%r15
	movb 0x29(%rbp),%r10b
	movb %r10b,0x21(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x30(%rbp),%r13
	jmp coerce_0
.p2align 0x4
L_471543:
L_224898:
	movb $0x5,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x40(%rbp),%r10
	movb 0x29(%rbp),%r9b
	movb %r9b,0x21(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x30(%rbp),%r13
	movq %r10,%r15
	jmp coerce_0
.p2align 0x4
.long 0x36EC
L_224825:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_471548
	cmpl $0x10,%r15d
	je L_471547
	cmpl $0x20,%r15d
	je L_471546
	cmpl $0x40,%r15d
	je L_471545
L_224826:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_224344
.p2align 0x4
L_471545:
L_224836:
	xorb %dl,%dl
L_224828:
	movzbq %dl,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_224829
.p2align 0x4
L_471546:
L_224835:
	movb $0x1,%dl
	jmp L_224828
.p2align 0x4
L_471547:
L_224834:
	movb $0x2,%dl
	jmp L_224828
.p2align 0x4
L_471548:
L_224827:
	movb $0x3,%dl
	jmp L_224828
.p2align 0x4
.long 0x25
L_224837:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_224826
.p2align 0x4
.long 0x36ED
L_224839:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x36EC
L_224859:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_471552
	cmpl $0x10,%r15d
	je L_471551
	cmpl $0x20,%r15d
	je L_471550
	cmpl $0x40,%r15d
	je L_471549
	jmp L_224826
.p2align 0x4
L_471549:
L_224853:
	movb $0x7,%dl
	jmp L_224828
.p2align 0x4
L_471550:
L_224852:
	movb $0x8,%dl
	jmp L_224828
.p2align 0x4
L_471551:
L_224851:
	movb $0x9,%dl
	jmp L_224828
.p2align 0x4
L_471552:
L_224850:
	movb $0xA,%dl
	jmp L_224828
.p2align 0x4
.long 0x36ED
L_224861:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x36EC
L_224849:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_224850
	cmpl $0x10,%r15d
	je L_224851
	cmpl $0x20,%r15d
	je L_224852
	cmpl $0x40,%r15d
	je L_224853
	jmp L_224826
.p2align 0x4
.long 0x36ED
L_224855:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x36EC
L_224843:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_224827
	cmpl $0x10,%r15d
	je L_224834
	cmpl $0x20,%r15d
	je L_224835
	cmpl $0x40,%r15d
	je L_224836
	jmp L_224826
.p2align 0x4
.long 0x36ED
L_224845:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_224846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x36CA
L_224830:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224831
L_224832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224833
.p2align 0x4
.long 0x246C
L_224833:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224831:
	movzbw 0x20(%rbp),%r11w
	shlw $0x1,%r11w
	orw $0x1,%r11w
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r11w,%ebx
	movl %ebx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r9
	movq %r9,0x8(%r15)
	xorl %ebx,%ebx
	movq 0x40(%rbp),%r10
	movl $0x0,(localWord32+0x4)(%rip)
	xorl %ecx,%ecx
	xorq %r9,%r9
	movq 0x28(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r15,%r11
	movq %r9,%r15
	jmp L_224355
.p2align 0x4
.long 0x7BA
L_224598:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224599
L_224605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224606
.p2align 0x4
.long 0x7BC
L_224606:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224599:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movzwl (globalWord16+0xA)(%rip),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	cmpb $0x6,0x0(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_224600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
.long 0x36DD
L_224692:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je L_471569
	cmpl $0x10,%r15d
	je L_471568
	cmpl $0x20,%r15d
	je L_471567
	cmpl $0x40,%r15d
	je L_471563
	jmp L_224344
.p2align 0x4
L_471563:
L_224710:
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
objptr_9:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224694
.p2align 0x4
.long 0x36DE
L_224694:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2523:
	cmpq $0x1,%r15
	jnl L_471564
L_224707:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2523
.p2align 0x4
L_471564:
L_224695:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224696
L_224705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224706
.p2align 0x4
.long 0x36E1
L_224706:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224696:
	movq 0x30(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_471565
L_224697:
	movq %r14,0x58(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_224698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_471565:
L_224702:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_471567:
L_224709:
	movq 0x58(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp objptr_9
.p2align 0x4
L_471568:
L_224708:
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp objptr_9
.p2align 0x4
L_471569:
L_224693:
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp objptr_9
.p2align 0x4
.long 0x36CE
L_224666:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224667
L_224668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224669
.p2align 0x4
.long 0x36CF
L_224669:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224667:
	xorl %ebx,%ebx
	movq 0x8(%rbp),%r13
	movq 0x28(%rbp),%r10
	movl 0x48(%rbp),%r9d
	movl %r9d,(localWord32+0x4)(%rip)
	movq 0x38(%rbp),%r11
	movl $0x1,%ecx
	movq (globalWord64+0xFE8)(%rip),%r15
	movq 0x20(%rbp),%r14
	jmp L_224355
.p2align 0x4
.long 0x36CE
L_224621:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224622
L_224623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224624
.p2align 0x4
.long 0x36CF
L_224624:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224622:
	xorl %ebx,%ebx
	movq 0x8(%rbp),%r13
	movq 0x28(%rbp),%r10
	movl 0x48(%rbp),%r9d
	movl %r9d,(localWord32+0x4)(%rip)
	movq 0x38(%rbp),%r11
	movl $0x1,%ecx
	movq (globalWord64+0x50)(%rip),%r15
	movq 0x20(%rbp),%r14
	jmp L_224355
.p2align 0x4
.long 0x36ED
L_224840:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224826
.p2align 0x4
.long 0x36ED
L_224862:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224826
.p2align 0x4
.long 0x36ED
L_224856:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224826
.p2align 0x4
.long 0x36ED
L_224846:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224826
.p2align 0x4
.long 0x36CE
L_224600:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224601
L_224602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_224603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224603
.p2align 0x4
.long 0x36CF
L_224603:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_224601:
	xorl %ebx,%ebx
	movq 0x8(%rbp),%r13
	movq 0x28(%rbp),%r10
	movl 0x48(%rbp),%r9d
	movl %r9d,(localWord32+0x4)(%rip)
	movq 0x38(%rbp),%r11
	movl $0x1,%ecx
	movq (globalWord64+0x50)(%rip),%r15
	movq 0x20(%rbp),%r14
	jmp L_224355
.p2align 0x4
.long 0x36DF
L_224698:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224699
L_224700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_224701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224701
.p2align 0x4
.long 0x36E0
L_224701:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_224699:
	movq $0x493,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq 0x30(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r10)
	xorl %ebx,%ebx
	movl 0x40(%rbp),%r9d
	movl %r9d,(localWord32+0x4)(%rip)
	movq 0x38(%rbp),%r11
	movl $0x1,%ecx
	movq (globalWord64+0x50)(%rip),%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%rbp),%r13
	jmp L_224355
.p2align 0x4
.long 0x474
L_224703:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_224704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x474
L_224704:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_224344
.text
.p2align 0x4
.globl x_1957
.hidden x_1957
x_1957:
L_224913:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_224914
L_224985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_224986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224986
.p2align 0x4
.long 0x452
L_224986:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_224914:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x9,%r14
	je L_224919
	cmpq $0xA,%r14
	je L_224919
	cmpq $0xB,%r14
	je L_224919
	cmpq $0xD,%r14
	je L_224919
	cmpq $0x11,%r14
	je L_224919
	cmpq $0x15,%r14
	je L_224919
	cmpq $0x16,%r14
	je L_224919
	cmpq $0x51,%r14
	je L_224916
	cmpq $0x67,%r14
	je L_224916
	cmpq $0x69,%r14
	je L_224916
	cmpq $0x6A,%r14
	je L_224916
	cmpq $0x6B,%r14
	je L_224916
	cmpq $0x6D,%r14
	je L_224916
	cmpq $0x6E,%r14
	je L_224916
	cmpq $0x6F,%r14
	je L_224916
	cmpq $0x71,%r14
	je L_224916
	cmpq $0x72,%r14
	je L_224916
	cmpq $0x73,%r14
	je L_224919
	cmpq $0x75,%r14
	je L_224916
	cmpq $0x76,%r14
	je L_224919
	cmpq $0x77,%r14
	je L_224919
	cmpq $0x79,%r14
	je L_224919
	cmpq $0x7A,%r14
	je L_224919
	cmpq $0x7B,%r14
	je L_224916
	cmpq $0x7D,%r14
	je L_224919
	cmpq $0x7E,%r14
	je L_224919
	cmpq $0x7F,%r14
	je L_224919
	cmpq $0x81,%r14
	je L_224919
	cmpq $0x82,%r14
	je L_224919
	cmpq $0x83,%r14
	je L_224919
	cmpq $0x85,%r14
	je L_224919
	cmpq $0x86,%r14
	je L_224916
	cmpq $0x87,%r14
	je L_224919
	cmpq $0x89,%r14
	je L_224919
L_224915:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_224916
L_224917:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x19,%rax
	ja L_471574
	jmp *jumpTable_689(,%rax,8)
.data
.p2align 0x4
jumpTable_689:
.quad L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_471595,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_224919,L_471577,L_224919,L_471575
.text
.p2align 0x4
L_471574:
L_224916:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471575:
L_224919:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471577:
L_224946:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_224919
prim_2:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_224927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_471595:
L_224925:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_224919
	jmp prim_2
.p2align 0x4
.long 0x1
L_224927:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	cmpl $0x8,%r15d
	je L_224919
	cmpl $0x10,%r15d
	je L_224919
	cmpl $0x20,%r15d
	je L_224919
	cmpl $0x40,%r15d
	je L_224916
L_224928:
	movq (globalObjptr+0x1710)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl a_0
.hidden a_0
a_0:
L_224987:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_224988
L_225001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_225002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225002
.p2align 0x4
.long 0x4E9
L_225002:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_224988:
	movslq 0x0(%rbp),%r15
	movq 0x10(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_471643
L_224990:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x20(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_224991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_471643:
L_224989:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_224991:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (x_797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x114E
x_797:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_471646
L_225000:
	movq 0x8(%r14),%r15
L_224993:
	cmpq $0x1,0x0(%r15)
	je L_471645
L_224994:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_224995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_471645:
L_224999:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471646:
L_224992:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_224993
.p2align 0x4
.long 0x490
L_224995:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_224996
L_224997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_224998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_224998
.p2align 0x4
.long 0x5E6
L_224998:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_224996:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1958
.hidden x_1958
x_1958:
L_225003:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_225154
L_225004:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471660
L_225005:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x28(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r13
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x10C6,%r11
	jne L_471658
L_225006:
	movq 0x0(%r15),%r11
	movq %r11,0x10(%rbp)
	movq 0x38(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movl %r14d,0x70(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	je L_471648
L_225007:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471648:
L_225008:
	cmpl $0x0,0x70(%rbp)
	jl L_471657
L_225009:
	movq $0x1,0x78(%rbp)
	movq $0x1,0x80(%rbp)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x74(%rbp)
loop_2525:
	movl 0x70(%rbp),%r13d
	cmpl %r13d,0x74(%rbp)
	jl L_471654
L_225010:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_471653
L_225011:
	movq 0x0(%r13),%r14
	movq 0x78(%rbp),%r15
L_225012:
	movq %r15,0x10(%rbp)
	movq $0x212D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_225013:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471652
.p2align 0x4,,0x7
L_225014:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_471649
L_225015:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_225013
.p2align 0x4
L_471649:
L_225016:
	movq 0x10(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_225017:
	cmpq $0x1,%r15
	je L_471651
L_225018:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	jne L_471650
L_225020:
	movq %r13,%r15
	jmp L_225017
.p2align 0x4
L_471650:
L_225019:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	jmp L_225013
.p2align 0x4
L_471651:
L_225021:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471652:
L_225022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_225023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225023
.p2align 0x4
.long 0x4AF
L_225023:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_225014
.p2align 0x4
L_471653:
L_225024:
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_225025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_471654:
L_225032:
	movslq 0x74(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x90(%rbp)
	salq $0x4,%r15
	movl 0x0(%r13,%r15,1),%r14d
	cmpl $0x0,%r14d
	jl L_471656
L_225033:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_471655
L_225036:
	movq 0x0(%r11,%r15,8),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r11
	movq %r11,0xB8(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_225037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_471655:
L_225035:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471656:
L_225117:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_225118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_471657:
L_225122:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471658:
L_225123:
	movq 0x20(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movslq 0x0(%r15),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	jnb L_225035
L_225125:
	movq 0x0(%r10,%r13,8),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r11),%r13
	movq 0x8(%r13),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_225126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1954
.p2align 0x4
L_471660:
L_225154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_225155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225155
.p2align 0x4
.long 0x45C
L_225155:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_225005
.p2align 0x4
.long 0x927
L_225025:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_225026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x36F6
L_225037:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (x_798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x370D
L_225118:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225119
L_225120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_225121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225121
.p2align 0x4
.long 0x370E
L_225121:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_225119:
	movq 0x78(%rbp),%r13
	movq 0x80(%rbp),%r14
	movq 0x88(%rbp),%r15
L_225077:
	movq %r13,0x78(%rbp)
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	incl 0x74(%rbp)
	jmp loop_2525
.p2align 0x4
.long 0x511
L_225126:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (x_799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x113B
L_225026:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_225027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x36F7
x_798:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_471664
L_225116:
	movq 0x8(%r14),%r15
L_225039:
	cmpq $0x1,0x0(%r15)
	je L_471663
L_225040:
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_225041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_471663:
L_225115:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471664:
L_225038:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_225039
.p2align 0x4
.long 0x844
x_799:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_471666
L_225153:
	movq 0x8(%r14),%r15
L_225128:
	cmpq $0x1,0x0(%r15)
	je L_225115
L_225129:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_225130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_471666:
L_225127:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_225128
.p2align 0x4
.long 0x7AB
L_225027:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_225028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x36F8
L_225041:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225042
L_225112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_225113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225113
.p2align 0x4
.long 0x370C
L_225113:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_225042:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_225043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resize_0
.p2align 0x4
.long 0x71E
L_225130:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225131
L_225150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_225151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225151
.p2align 0x4
.long 0x720
L_225151:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_225131:
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_225132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resize_0
.p2align 0x4
.long 0x5F2
L_225028:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225029
L_225030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_225031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225031
.p2align 0x4
.long 0x48A
L_225031:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_225029:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_225012
.p2align 0x4
.long 0x36F9
L_225043:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225044
L_225110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_225111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225111
.p2align 0x4
.long 0x370C
L_225111:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_225044:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_471674
L_225045:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_225046:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471673
.p2align 0x4,,0x7
L_225047:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_471670
L_225048:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_225046
.p2align 0x4
L_471670:
L_225049:
	movq %r15,0x98(%rbp)
L_225050:
	cmpq $0x1,0x80(%rbp)
	je L_471671
L_225051:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_225052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_471671:
L_225104:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_471672
L_225105:
	movq 0x0(%r15),%r15
	movq %r15,0x88(%rbp)
L_225065:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_225066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_471672:
L_225106:
	movq 0x98(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0xA0(%rbp),%r15
L_225074:
	movq $0x25FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_225075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_471673:
L_225107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_225108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225108
.p2align 0x4
.long 0x370B
L_225108:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_225047
.p2align 0x4
L_471674:
L_225109:
	movq $0x1,0x98(%rbp)
	jmp L_225050
.p2align 0x4
.long 0x51B
L_225132:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225133
L_225148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_225149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225149
.p2align 0x4
.long 0x48A
L_225149:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_225133:
	movq $0x212D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_471680
L_225134:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_225135:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471679
.p2align 0x4,,0x7
L_225136:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_471676
L_225137:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_225135
.p2align 0x4
L_471676:
L_225138:
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_225139:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471678
.p2align 0x4,,0x7
L_225140:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_471677
L_225141:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_225139
.p2align 0x4
L_471677:
L_225142:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471678:
L_225143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_225144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225144
.p2align 0x4
.long 0x45C
L_225144:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_225140
.p2align 0x4
L_471679:
L_225145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_225146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225146
.p2align 0x4
.long 0x83A
L_225146:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_225136
.p2align 0x4
L_471680:
L_225147:
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x36FA
L_225052:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_225053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x36FA
L_225066:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_225067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3703
L_225075:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225076
L_225078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_225079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225079
.p2align 0x4
.long 0x3704
L_225079:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_225076:
	movq $0x2617,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x88(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x78(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x80(%rbp),%r14
	movq 0x98(%rbp),%r15
	jmp L_225077
.p2align 0x4
.long 0x36FB
L_225053:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_225054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x3700
L_225067:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225068
L_225089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_225090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225090
.p2align 0x4
.long 0x3707
L_225090:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_225068:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0xC0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_225069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225069
.p2align 0x4
.long 0x3701
L_225069:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0xB0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2527:
	cmpq $0x2,%r15
	jnl L_471685
L_225084:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_471684
	cmpl $0x1,%r14d
	je L_471683
L_225085:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471683:
L_225088:
	movq 0x88(%rbp),%r14
L_225087:
	movq 0xB0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2527
.p2align 0x4
L_471684:
L_225086:
	movq 0xA0(%rbp),%r14
	jmp L_225087
.p2align 0x4
L_471685:
L_225070:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225071
L_225082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_225083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225083
.p2align 0x4
.long 0x3706
L_225083:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_225071:
	movq 0xB0(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_225072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x36F6
L_225054:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225055
L_225102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_225103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225103
.p2align 0x4
.long 0xDB4
L_225103:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_225055:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_225056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x3702
L_225072:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225073
L_225080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_225081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225081
.p2align 0x4
.long 0x3705
L_225081:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_225073:
	movq $0x2163,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
	movq %r13,%r15
	jmp L_225074
.p2align 0x4
.long 0x36FC
L_225056:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_225057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x36FD
L_225057:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225058
L_225100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_225101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225101
.p2align 0x4
.long 0x370A
L_225101:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_225058:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0xC8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142F,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_225059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225059
.p2align 0x4
.long 0x36FE
L_225059:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xC0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2526:
	cmpq $0x2,%r15
	jnl L_471692
L_225096:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_471691
	cmpl $0x1,%r14d
	je L_471690
	jmp L_225085
.p2align 0x4
L_471690:
L_225099:
	movq 0xB0(%rbp),%r14
L_225098:
	movq 0xC0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2526
.p2align 0x4
L_471691:
L_225097:
	movq 0xA0(%rbp),%r14
	jmp L_225098
.p2align 0x4
L_471692:
L_225060:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225061
L_225094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_225095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225095
.p2align 0x4
.long 0x3709
L_225095:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_225061:
	movq 0xC0(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_225062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x36FF
L_225062:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225063
L_225092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_225093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225093
.p2align 0x4
.long 0x3708
L_225093:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_225063:
	movq $0x2171,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_471695
L_225064:
	movq %r15,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_225065
.p2align 0x4
L_471695:
L_225091:
	movq %r15,0x88(%rbp)
	movq %r13,%r15
	jmp L_225074
.text
.p2align 0x4
.globl x_1955
.hidden x_1955
x_1955:
L_225156:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_225157
L_225255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_225256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225256
.p2align 0x4
.long 0x495
L_225256:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_225157:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	movq %r14,0x10(%rbp)
	jne L_225159
L_225160:
	cmpq $0x7FFFFFFF,%rdx
	ja L_471711
L_225161:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_225162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225162
.p2align 0x4
.long 0x49B
L_225162:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2528:
	cmpq 0x18(%rbp),%r15
	jnl L_471698
L_225251:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x10(%rbp),%r13
	jnb L_471697
L_225253:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2528
.p2align 0x4
L_471697:
L_225169:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471698:
L_225163:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225164
L_225249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_225250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225250
.p2align 0x4
.long 0x49E
L_225250:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_225164:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_471709
L_225166:
	testl %r14d,%r14d
	jz L_471708
L_225167:
	movq $0x18A3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_225169
L_225170:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_471706
L_225171:
	movq %r15,0x10(%rbp)
	movl $0x0,0x28(%rbp)
	movl $0x0,0x2C(%rbp)
loop_2529:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x2C(%rbp)
	jl L_471702
L_225172:
	decl %r15d
	movslq 0x28(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_225169
L_225174:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_225169
L_225176:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_471699
L_225178:
	movl %r15d,0x30(%rbp)
	movl $0x0,0x34(%rbp)
	movb 0x0(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_225179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_20
.p2align 0x4
L_471699:
L_225177:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471702:
L_225188:
	movslq 0x2C(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x30(%rbp)
	movb 0x0(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_471705
	cmpb $0x2,%r14b
	je L_471704
	cmpb $0x3,%r14b
	je L_471703
L_225189:
	movq 0x8(%r11),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_225190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471703:
L_225233:
	movq 0x8(%r11),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_225234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471704:
L_225219:
	movq 0x8(%r11),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r10),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_225220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471705:
L_225205:
	movq 0x8(%r11),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r10),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_225206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471706:
L_225247:
	movq (globalObjptr+0x520)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471708:
L_225183:
	movq $0x39F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x4(%rbp),%r14d
	movl %r14d,0x8(%rbp)
	movq %r15,0x0(%rbp)
	jmp tabulate_21
.p2align 0x4
L_471709:
L_225159:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471711:
L_225254:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x45A
L_225179:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225180
L_225186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_225187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225187
.p2align 0x4
.long 0x49E
L_225187:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_225180:
	movq $0x3CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_225181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0xDD3
L_225190:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	testl %r15d,%r15d
	jnz L_471715
L_225191:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471715:
L_225195:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r15,%r14
	andq %r13,%r14
	andq $0x1,%r14
	jz L_471717
L_225196:
	cmpq %r15,%r13
	jl L_471716
L_225197:
	movq 0x10(%rbp),%r15
	movl 0x28(%rbp),%ecx
L_225198:
	movq %r15,0x10(%rbp)
	movl %ecx,0x28(%rbp)
	incl 0x2C(%rbp)
	jmp loop_2529
.p2align 0x4
L_471716:
L_225200:
	movq 0x30(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_225198
.p2align 0x4
L_471717:
L_225201:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225202:
	cmpl $0x0,%eax
	jg L_225200
L_225203:
	movq 0x10(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_225198
.p2align 0x4
.long 0xDD3
L_225234:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	testl %r15d,%r15d
	jnz L_471719
L_225235:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471719:
L_225239:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r14
	andq %r15,%r14
	andq $0x1,%r14
	jz L_471721
L_225240:
	cmpq %r15,%r13
	jl L_225200
L_225241:
	movq 0x10(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_225198
.p2align 0x4
L_471721:
L_225243:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225244:
	cmpl $0x0,%eax
	jg L_225200
L_225245:
	movq 0x10(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_225198
.p2align 0x4
.long 0xDD3
L_225220:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	testl %r15d,%r15d
	jnz L_471723
L_225221:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471723:
L_225225:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r15,%r14
	andq %r13,%r14
	andq $0x1,%r14
	jz L_471725
L_225226:
	cmpq %r15,%r13
	jl L_225200
L_225227:
	movq 0x10(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_225198
.p2align 0x4
L_471725:
L_225229:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225230:
	cmpl $0x0,%eax
	jg L_225200
L_225231:
	movq 0x10(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_225198
.p2align 0x4
.long 0xDD3
L_225206:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	testl %r15d,%r15d
	jnz L_471727
L_225207:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471727:
L_225211:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r15,%r14
	andq %r13,%r14
	andq $0x1,%r14
	jz L_471729
L_225212:
	cmpq %r15,%r13
	jl L_225200
L_225213:
	movq 0x10(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_225198
.p2align 0x4
L_471729:
L_225215:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225216:
	cmpl $0x0,%eax
	jg L_225200
L_225217:
	movq 0x10(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_225198
.p2align 0x4
.long 0x45A
L_225181:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225183
L_225184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_225185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225185
.p2align 0x4
.long 0x49E
L_225185:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_225183
.p2align 0x4
.long 0x1
bug_609:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225192
L_225193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225194
.p2align 0x4
.long 0x452
L_225194:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225192:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_612:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225236
L_225237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225238
.p2align 0x4
.long 0x452
L_225238:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225236:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_611:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225222
L_225223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225224
.p2align 0x4
.long 0x452
L_225224:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225222:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_610:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225208
L_225209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225210
.p2align 0x4
.long 0x452
L_225210:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225208:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl qsort_20
.hidden qsort_20
qsort_20:
L_225257:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2530
L_225414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_225415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225415
.p2align 0x4
.long 0x2C
L_225415:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_2530:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_225259
L_225260:
	cmpl $0x14,%r15d
	jng L_471737
L_225262:
	movq (globalObjptr+0x4E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_471736
L_225263:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_225264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_471736:
L_225259:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471737:
L_225261:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60A
L_225264:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_225265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x491
L_225265:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_225259
L_225266:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_225268
L_225269:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_225268
L_225271:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_225268
L_225273:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_225268
L_225275:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_225268
L_225277:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_225259
L_225278:
	movl %r15d,0xC(%rbp)
loop_2532:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_225259
L_225279:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_471742
L_225281:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_471741
	cmpb $0x2,%r15b
	je L_471740
	cmpb $0x3,%r15b
	je L_471739
L_225282:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_225283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471739:
L_225400:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_225401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471740:
L_225386:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_225387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471741:
L_225372:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_225373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471742:
L_225268:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x370F
L_225283:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_471751
L_225284:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471751:
L_225288:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_471758
L_225289:
	cmpq %r14,%r13
	jl L_471757
L_225290:
	movl 0xC(%rbp),%ecx
loop_2533:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_225259
L_225291:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_225268
L_225293:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_471754
	cmpb $0x2,%r15b
	je L_471753
	cmpb $0x3,%r15b
	je L_471752
L_225294:
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_225295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471752:
L_225353:
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_225354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471753:
L_225339:
	movq 0x8(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_225340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471754:
L_225325:
	movq 0x8(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_225326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_471757:
L_225367:
	movl 0x58(%rbp),%ecx
	jmp loop_2532
.p2align 0x4
L_471758:
L_225368:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225369:
	cmpl $0x0,%eax
	jg L_471759
L_225370:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471759:
L_225371:
	movl 0x58(%rbp),%ecx
	jmp loop_2532
.p2align 0x4
.long 0x370F
L_225401:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_471760
L_225402:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471760:
L_225406:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r14,%r15
	andq %r13,%r15
	andq $0x1,%r15
	jz L_471762
L_225407:
	cmpq %r14,%r13
	jl L_471761
L_225408:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471761:
L_225409:
	movl 0x58(%rbp),%ecx
	jmp loop_2532
.p2align 0x4
L_471762:
L_225410:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225411:
	cmpl $0x0,%eax
	jg L_471763
L_225412:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471763:
L_225413:
	movl 0x58(%rbp),%ecx
	jmp loop_2532
.p2align 0x4
.long 0x370F
L_225387:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_471764
L_225388:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471764:
L_225392:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r14,%r15
	andq %r13,%r15
	andq $0x1,%r15
	jz L_471766
L_225393:
	cmpq %r14,%r13
	jl L_471765
L_225394:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471765:
L_225395:
	movl 0x58(%rbp),%ecx
	jmp loop_2532
.p2align 0x4
L_471766:
L_225396:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225397:
	cmpl $0x0,%eax
	jg L_471767
L_225398:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471767:
L_225399:
	movl 0x58(%rbp),%ecx
	jmp loop_2532
.p2align 0x4
.long 0x370F
L_225373:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_471768
L_225374:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471768:
L_225378:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_471770
L_225379:
	cmpq %r14,%r13
	jl L_471769
L_225380:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471769:
L_225381:
	movl 0x58(%rbp),%ecx
	jmp loop_2532
.p2align 0x4
L_471770:
L_225382:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225383:
	cmpl $0x0,%eax
	jg L_471771
L_225384:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471771:
L_225385:
	movl 0x58(%rbp),%ecx
	jmp loop_2532
.p2align 0x4
.long 0x1
bug_613:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225285
L_225286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225287
.p2align 0x4
.long 0x452
L_225287:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225285:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3710
L_225295:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_471773
L_225296:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471773:
L_225300:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_471783
L_225301:
	cmpq %r14,%r13
	jnl L_471774
L_225320:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471774:
L_225303:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_471779
L_225304:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_225268
L_225306:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_225268
L_225308:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_225268
L_225310:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_225268
L_225312:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2532
.p2align 0x4
L_471779:
L_225313:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_225268
L_225315:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_225268
L_225317:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_225259
L_225318:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_225319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_20
.p2align 0x4
L_471783:
L_225321:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225322:
	cmpl $0x0,%eax
	jng L_225303
L_225324:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
.long 0x3710
L_225354:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_471785
L_225355:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471785:
L_225359:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_471787
L_225360:
	cmpq %r14,%r13
	jnl L_225303
L_225362:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471787:
L_225363:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225364:
	cmpl $0x0,%eax
	jng L_225303
L_225366:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
.long 0x3710
L_225340:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_471789
L_225341:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471789:
L_225345:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_471791
L_225346:
	cmpq %r14,%r13
	jnl L_225303
L_225348:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471791:
L_225349:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225350:
	cmpl $0x0,%eax
	jng L_225303
L_225352:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
.long 0x3710
L_225326:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_471793
L_225327:
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471793:
L_225331:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r14,%r15
	andq %r13,%r15
	andq $0x1,%r15
	jz L_471795
L_225332:
	cmpq %r14,%r13
	jnl L_225303
L_225334:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
L_471795:
L_225335:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_225336:
	cmpl $0x0,%eax
	jng L_225303
L_225338:
	movl 0xC(%rbp),%ecx
	jmp loop_2533
.p2align 0x4
.long 0x1
bug_620:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225403
L_225404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225405
.p2align 0x4
.long 0x452
L_225405:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225403:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_619:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225389
L_225390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225391
.p2align 0x4
.long 0x452
L_225391:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225389:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_618:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225375
L_225376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225377
.p2align 0x4
.long 0x452
L_225377:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225375:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_614:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225297
L_225298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225299
.p2align 0x4
.long 0x452
L_225299:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225297:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60D
L_225319:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2530
.p2align 0x4
.long 0x1
bug_617:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225356
L_225357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225358
.p2align 0x4
.long 0x452
L_225358:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225356:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_616:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225342
L_225343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225344
.p2align 0x4
.long 0x452
L_225344:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225342:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_615:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225328
L_225329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225330
.p2align 0x4
.long 0x452
L_225330:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225328:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_121
.hidden get_121
get_121:
L_225416:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_225417
L_225471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_225472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225472
.p2align 0x4
.long 0x460
L_225472:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_225417:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_471813
L_225419:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_471812
L_225420:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_225422:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_471811
L_225463:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD9B,%r10
	jne L_471810
L_225464:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_471807
L_225423:
	incl %ecx
	jo L_471806
L_225425:
	cmpq $0x1,%r14
	je L_471804
L_225426:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_225422
.p2align 0x4
L_471804:
L_225427:
L_225428:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_471805
L_225430:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_800
L_225462:
	movl %ecx,0x0(%r15)
x_800:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_225432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_471805:
L_225429:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471806:
L_225424:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471807:
L_225466:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_225429
L_225467:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_471808
L_225469:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471808:
L_225468:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471810:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_225423
.p2align 0x4
L_471811:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_225423
.p2align 0x4
L_471812:
L_225470:
	xorl %ecx,%ecx
	jmp L_225428
.p2align 0x4
L_471813:
L_225418:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_225432:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_225433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_225433:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_225434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B0
L_225434:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10348)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_225435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B0
L_225435:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_225436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51F
L_225436:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225437
L_225460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_225461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225461
.p2align 0x4
.long 0x4AF
L_225461:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_225437:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_225438:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_225424
L_225439:
	cmpq $0x1,%r14
	je L_471815
L_225440:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_225438
.p2align 0x4
L_471815:
L_225441:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225442
L_225458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_225459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225459
.p2align 0x4
.long 0x4E7
L_225459:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_225442:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_471816
L_225443:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_344:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_471816:
L_225457:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_344
.p2align 0x4
.long 0x1
rev_342:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_471822
L_225444:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_225445:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_471821
.p2align 0x4,,0x7
L_225446:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_471820
L_225447:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_225445
.p2align 0x4
L_471820:
L_225449:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_225450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_471821:
L_225454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_225455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225455
.p2align 0x4
.long 0x45C
L_225455:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_225446
.p2align 0x4
L_471822:
L_225456:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_225449
.p2align 0x4
.long 0x1
L_225450:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225451
L_225452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_225453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225453
.p2align 0x4
.long 0x452
L_225453:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_225451:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_54
.hidden layout_54
layout_54:
L_225473:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_225474
L_225597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_225598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225598
.p2align 0x4
.long 0x460
L_225598:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_225474:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xF248)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_225475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA49
L_225475:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_225476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1792
L_225476:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_225477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1792
L_225477:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_225478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA4A
L_225478:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225479
L_225595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_225596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225596
.p2align 0x4
.long 0xA5D
L_225596:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_225479:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_471825
L_225482:
	movl %r13d,0x80(%rbp)
	movq $0x3C63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_471825:
L_225481:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1793
L_225483:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_225484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1793
L_225484:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225485
L_225593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_225594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225594
.p2align 0x4
.long 0xA5D
L_225594:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_225485:
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_471827
L_225486:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_225487:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_471827:
L_225524:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1794
L_225488:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_225489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1799
L_225525:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,0x48(%rbp)
	je L_471829
L_225526:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_471829:
L_225588:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1795
L_225489:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x179A
L_225527:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225528
L_225586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_225587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225587
.p2align 0x4
.long 0xC75
L_225587:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_225528:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_225481
L_225530:
	movl %r13d,0x88(%rbp)
	movq $0x3B6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_225531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x17A3
L_225589:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225590
L_225591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_225592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225592
.p2align 0x4
.long 0xA5D
L_225592:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_225590:
	movq 0x48(%rbp),%r15
L_225540:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF250)(%rip),%r15
	movq %r15,0x8(%r14)
	cmpq $0x1,0x40(%rbp)
	je L_471832
L_225541:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_471832:
L_225576:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1795
L_225490:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xEAA0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x179B
L_225531:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_225532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x179A
L_225542:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225543
L_225574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_225575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225575
.p2align 0x4
.long 0xC75
L_225575:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_225543:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_225481
L_225545:
	movl %r13d,0x88(%rbp)
	movq $0x3C65,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_225546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x17A1
L_225577:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225578
L_225579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_225580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225580
.p2align 0x4
.long 0xD15
L_225580:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_225578:
	movq 0x28(%rbp),%r15
L_225555:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF020)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_225556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1796
L_225491:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225492
L_225522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_225523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225523
.p2align 0x4
.long 0x1798
L_225523:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_225492:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_225493:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_471841
L_225495:
	cmpq $0x1,%r14
	je L_471837
L_225496:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_225493
.p2align 0x4
L_471837:
L_225497:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225498
L_225520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_225521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225521
.p2align 0x4
.long 0x1797
L_225521:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_225498:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_471839
L_225499:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_225500:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_225481
L_225502:
	movl %r13d,0x38(%rbp)
	movq $0x3B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_225503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_471839:
L_225519:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_225500
.p2align 0x4
L_471841:
L_225494:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x179B
L_225532:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225533
L_225584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_225585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225585
.p2align 0x4
.long 0xC75
L_225585:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_225533:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_225534:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_225494
L_225535:
	cmpq $0x1,%r14
	je L_471843
L_225536:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_225534
.p2align 0x4
L_471843:
L_225537:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225538
L_225582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_225583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225583
.p2align 0x4
.long 0x17A2
L_225583:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_225538:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_471844
L_225539:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_225540
.p2align 0x4
L_471844:
L_225581:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_225540
.p2align 0x4
.long 0x179C
L_225546:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_225547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x179D
L_225556:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225557
L_225567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_225568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225568
.p2align 0x4
.long 0x1798
L_225568:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_225557:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_225558:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_225494
L_225559:
	cmpq $0x1,%r14
	je L_471848
L_225560:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_225558
.p2align 0x4
L_471848:
L_225561:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225562
L_225565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_225566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225566
.p2align 0x4
.long 0x179E
L_225566:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_225562:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_471849
L_225563:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_225487
.p2align 0x4
L_471849:
L_225564:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_225487
.p2align 0x4
.long 0x45A
L_225503:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_225504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x179C
L_225547:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225548
L_225572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_225573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225573
.p2align 0x4
.long 0x17A0
L_225573:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_225548:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_225549:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_225494
L_225550:
	cmpq $0x1,%r14
	je L_471853
L_225551:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_225549
.p2align 0x4
L_471853:
L_225552:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225553
L_225570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_225571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225571
.p2align 0x4
.long 0x179F
L_225571:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_225553:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_471854
L_225554:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_225555
.p2align 0x4
L_471854:
L_225569:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_225555
.p2align 0x4
.long 0x45A
L_225504:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225505
L_225517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_225518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225518
.p2align 0x4
.long 0x601
L_225518:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_225505:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_471859
L_225506:
	decl %ecx
	jo L_225494
L_225507:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_225508:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x2,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_225509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_471859:
L_225516:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_225508
.p2align 0x4
.long 0x1
L_225509:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225510
L_225514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_225515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225515
.p2align 0x4
.long 0x495
L_225515:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_225510:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_471862
L_225511:
	decl %r15d
	jo L_225494
L_225512:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471862:
L_225513:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_53
.hidden layout_53
layout_53:
L_225599:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_225600
L_225657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_225658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225658
.p2align 0x4
.long 0x460
L_225658:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_225600:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_471864
L_225601:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_225602:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_225603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_471864:
L_225656:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_225602
.p2align 0x4
.long 0x4A9
L_225603:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225604
L_225654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_225655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225655
.p2align 0x4
.long 0x86F
L_225655:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_225604:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10350)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_471866
L_225631:
	shrq $0x1,%r14
	movl %r14d,0x38(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_225632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_471866:
L_225605:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_225606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8F2
L_225632:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x40(%rbp)
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_471868
L_225633:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_225634:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_225635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_471868:
L_225653:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_225634
.p2align 0x4
.long 0x8F2
L_225606:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225607
L_225629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_225630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225630
.p2align 0x4
.long 0xA8D
L_225630:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_225607:
	movq 0x38(%rbp),%r15
L_225608:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_225609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0xA88
L_225635:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225636
L_225651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_225652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225652
.p2align 0x4
.long 0x990
L_225652:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_225636:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_225637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA7F
L_225609:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225610
L_225627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_225628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225628
.p2align 0x4
.long 0x4AE
L_225628:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_225610:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_225611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA88
L_225637:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225638
L_225649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_225650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225650
.p2align 0x4
.long 0x990
L_225650:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_225638:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_225639:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_471875
L_225641:
	cmpq $0x1,%r14
	je L_471872
L_225642:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_225639
.p2align 0x4
L_471872:
L_225643:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225644
L_225647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_225648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225648
.p2align 0x4
.long 0x3206
L_225648:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_225644:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_471873
L_225645:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_225608
.p2align 0x4
L_471873:
L_225646:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_225608
.p2align 0x4
L_471875:
L_225640:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28F2
L_225611:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225612
L_225625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_225626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225626
.p2align 0x4
.long 0xA84
L_225626:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_225612:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_225613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x9BD
L_225613:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_225614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x9BD
L_225614:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225615
L_225623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_225624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225624
.p2align 0x4
.long 0x86C
L_225624:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_225615:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10358)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_471878
L_225617:
	movl %r13d,0x60(%rbp)
	movq $0x3B27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_225618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_471878:
L_225616:
	movq (globalObjptr+0x518)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9B4
L_225618:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_225619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x9B4
L_225619:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225620
L_225621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_225622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225622
.p2align 0x4
.long 0x9B5
L_225622:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_225620:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10280)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp record_3
.text
.p2align 0x4
.globl shrink_0
.hidden shrink_0
shrink_0:
L_225659:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_225660
L_225769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_225770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225770
.p2align 0x4
.long 0x460
L_225770:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_225660:
	movq 0x8(%rbp),%r14
	movq 0x58(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x50(%rbp)
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_471881
L_225661:
	movq 0x8(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x60(%rbp)
	movq %r13,%r15
L_225662:
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_225663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_2
.p2align 0x4
L_471881:
L_225768:
	movq $0x1,0x58(%rbp)
L_225667:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_225668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_2
.p2align 0x4
.long 0x1792
L_225663:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225664
L_225766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_225767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225767
.p2align 0x4
.long 0x3727
L_225767:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_225664:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_471883
L_225665:
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	jmp L_225662
.p2align 0x4
L_471883:
L_225666:
	movq %r14,0x58(%rbp)
	jmp L_225667
.p2align 0x4
.long 0x998
L_225668:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225669
L_225764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_225765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225765
.p2align 0x4
.long 0x3726
L_225765:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_225669:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x3315,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_225670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x3711
L_225670:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225671
L_225762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_225763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225763
.p2align 0x4
.long 0x3725
L_225763:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_225671:
	movq $0x7C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x3651,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x48,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x20(%r14)
	movq %r15,0x28(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xB0(%rbp)
	cmpq %r11,%r14
	jne L_471886
L_225674:
	movq $0x437B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB8(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xC8(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq $0x341F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_225675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_471886:
L_225673:
	movq (globalObjptr+0x518)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3712
L_225675:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xB0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_471889
L_225676:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_225677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225677
.p2align 0x4
.long 0x3713
L_225677:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2534:
	cmpq 0xB0(%rbp),%r15
	jnl L_471888
L_225760:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2534
.p2align 0x4
L_471888:
L_225678:
	movq %r14,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD0,%rbp
	leaq (L_225679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
L_471889:
L_225740:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3714
L_225679:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225680
L_225758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_225759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225759
.p2align 0x4
.long 0x3724
L_225759:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_225680:
	movq $0x341D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_225681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3715
L_225681:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_471900
L_225682:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_225683:
	incl %ecx
	jo L_471899
L_225685:
	cmpq $0x1,%r15
	je L_471891
L_225686:
	movq 0x8(%r15),%r15
	jmp L_225683
.p2align 0x4
L_471891:
L_225687:
L_225688:
	movslq %ecx,%rdx
	movq %rdx,0x78(%rbp)
	testq %rdx,%rdx
	jz L_471898
L_225689:
	cmpq $0x7FFFFFFF,%rdx
	ja L_225740
L_225690:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_225691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225691
.p2align 0x4
.long 0x3716
L_225691:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xA0(%rbp)
L_225692:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2535:
	cmpq 0x78(%rbp),%r15
	jnl L_471893
L_225752:
	cmpq $0x1,%r14
	je L_471892
L_225753:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xA0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2535
.p2align 0x4
L_471892:
L_225738:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471893:
L_225693:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225694
L_225750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_225751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225751
.p2align 0x4
.long 0x3723
L_225751:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_225694:
	movq 0xA0(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x77B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%r14)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_471894
L_225695:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
L_225696:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_225697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_471894:
L_225749:
	movq $0x1,%r14
	xchgq %r14,%r15
L_225722:
	movq $0x77F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x28,%r12
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	cmpq $0x1,%r15
	je L_471895
L_225723:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r15
L_225724:
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_225725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_471895:
L_225729:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq $0x1,0xB0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_225730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_471898:
L_225756:
	movq (globalObjptr+0xD58)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_225692
.p2align 0x4
L_471899:
L_225684:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_471900:
L_225757:
	xorl %ecx,%ecx
	jmp L_225688
.p2align 0x4
.long 0x3717
L_225697:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225698
L_225747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_225748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225748
.p2align 0x4
.long 0x3722
L_225748:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_225698:
	movq $0x7C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x3651,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x48,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x20(%r14)
	movq %r15,0x28(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x58(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0xE0(%rbp)
	cmpq %r15,%r11
	jne L_225673
L_225700:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xE8(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x341F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_225701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x371D
L_225725:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq $0x2,0xB0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_225726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x371F
L_225730:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq $0x2,0x58(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_225731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3718
L_225701:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xE0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_225740
L_225702:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_225703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225703
.p2align 0x4
.long 0x3719
L_225703:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2536:
	cmpq 0xE0(%rbp),%r15
	jnl L_471903
L_225745:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2536
.p2align 0x4
L_471903:
L_225704:
	movq %r14,0x100(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_225705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
.long 0x371E
L_225726:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_225729
L_225727:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_225724
.p2align 0x4
.long 0x90E
L_225731:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x371A
L_225705:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225706
L_225743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_225744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225744
.p2align 0x4
.long 0x3721
L_225744:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_225706:
	movq $0x341D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_225707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x371B
L_225707:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r13
	je L_471915
L_225708:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_225709:
	incl %ecx
	jo L_225684
L_225710:
	cmpq $0x1,%r15
	je L_471907
L_225711:
	movq 0x8(%r15),%r15
	jmp L_225709
.p2align 0x4
L_471907:
L_225712:
L_225713:
	movslq %ecx,%rdx
	movq %rdx,0xC8(%rbp)
	testq %rdx,%rdx
	jz L_471913
L_225714:
	cmpq $0x7FFFFFFF,%rdx
	ja L_225740
L_225715:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1439,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_225716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225716
.p2align 0x4
.long 0x371C
L_225716:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xD0(%rbp)
L_225717:
	movq 0x58(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2537:
	cmpq 0xC8(%rbp),%r15
	jnl L_471909
L_225735:
	cmpq $0x1,%r14
	je L_225738
L_225736:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xD0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2537
.p2align 0x4
L_471909:
L_225718:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_225719
L_225733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_225734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_225734
.p2align 0x4
.long 0x3720
L_225734:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_225719:
	movq 0xD0(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x77B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x23A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_225722
L_225720:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_225696
.p2align 0x4
L_471913:
L_225741:
	movq (globalObjptr+0xD58)(%rip),%r15
	movq %r15,0xD0(%rbp)
	jmp L_225717
.p2align 0x4
L_471915:
L_225742:
	xorl %ecx,%ecx
	jmp L_225713
